Implementation smell,Namespace,Class,File,Method,Description
Long Method,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The method has 251 lines of code.
Long Method,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,ZoomToFit,The method has 125 lines of code.
Long Method,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The method has 180 lines of code.
Long Method,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The method has 250 lines of code.
Long Method,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The method has 125 lines of code.
Long Method,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The method has 291 lines of code.
Long Method,TraceLab.UI.GTK,ComponentsLibraryWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryWidget.cs,Build,The method has 101 lines of code.
Long Method,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The method has 194 lines of code.
Long Method,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The method has 177 lines of code.
Long Method,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The method has 204 lines of code.
Long Method,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The method has 567 lines of code.
Long Method,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The method has 129 lines of code.
Long Method,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The method has 116 lines of code.
Long Method,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The method has 130 lines of code.
Long Method,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The method has 198 lines of code.
Long Method,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The method has 166 lines of code.
Long Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,SizeAllocate,The method has 121 lines of code.
Long Method,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The method has 206 lines of code.
Complex Method,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,OnNodeRemoved,Cyclomatic complexity of the method is 9
Complex Method,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,HandleDragDataReceived,Cyclomatic complexity of the method is 11
Complex Method,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,OnPublishChallengeButtonClicked,Cyclomatic complexity of the method is 9
Complex Method,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,AddScopeInDecisionComponent,Cyclomatic complexity of the method is 20
Complex Method,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,ZoomToFit,Cyclomatic complexity of the method is 18
Complex Method,TraceLab.UI.GTK,NodesTreeBuilder,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\NodesTreeBuilder.cs,Build,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Docking,DockContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockContainer.cs,LoadLayout,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,AddObject,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,SizeAllocate,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,SizeRequest,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,UpdateNotebook,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,DrawSeparators,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Docking,ShadedContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\ShadedContainer.cs,UpdateAllocation,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Docking,ShadedContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\ShadedContainer.cs,DrawBackground,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Docking,ShadedContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\ShadedContainer.cs,RemoveSection,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Components.PropertyGrid,EditorManager,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\EditorManager.cs,GetEditorType,Cyclomatic complexity of the method is 14
Long Parameter List,MonoHotDraw.Handles,PixButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PixButtonHandle.cs,PixButtonHandle,The method has 9 parameters. Parameters: owner' locator' pixbuf' action' xAnchor' yAnchor' valueZoom' offsetPanX' offsetPanY
Long Parameter List,MonoHotDraw.Util,CairoFigures,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\CairoFigures.cs,AngleFrame,The method has 6 parameters. Parameters: c' gdkRect' angleLeft' angleTop' angleRight' angleBottom
Long Parameter List,MonoHotDraw.Util,CairoFigures,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\CairoFigures.cs,AngleFrame,The method has 6 parameters. Parameters: c' rect' angleLeft' angleTop' angleRight' angleBottom
Long Parameter List,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineContainsPoint,The method has 6 parameters. Parameters: x1' y1' x2' y2' px' py
Long Parameter List,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,GetArrowPoints,The method has 7 parameters. Parameters: a' b' lineDistance' pointDistance' p' p2' m
Long Parameter List,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,GetArrowDistances,The method has 5 parameters. Parameters: a' b' p' lineDistance' pointDistance
Long Parameter List,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineIntersection,The method has 8 parameters. Parameters: xa' ya' xb' yb' xc' yc' xd' yd
Long Parameter List,TraceLab.UI.GTK,WindowShell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\WindowShell.cs,WindowShell,The method has 5 parameters. Parameters: name' title' width' height' maximize
Long Parameter List,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,InitializeListView,The method has 5 parameters. Parameters: treeView' store' nameColumnTitle' data' includeToggleHandler
Long Parameter List,MonoDevelop.Components.Docking,DockContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockContainer.cs,FindHandle,The method has 5 parameters. Parameters: grp' x' y' foundGrp' objectIndex
Long Parameter List,MonoDevelop.Components.Docking,DockFrame,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockFrame.cs,AddItemAtLocation,The method has 5 parameters. Parameters: grp' it' location' visible' status
Long Parameter List,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,DrawSeparators,The method has 5 parameters. Parameters: exposedArea' currentHandleGrp' currentHandleIndex' invalidateOnly' areasList
Long Parameter List,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,DrawSeparators,The method has 6 parameters. Parameters: exposedArea' currentHandleGrp' currentHandleIndex' invalidateOnly' drawChildrenSep' areasList
Long Parameter List,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The method has 5 parameters. Parameters: item' px' py' dockDelegate' rect
Long Parameter List,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,GetDockTarget,The method has 5 parameters. Parameters: item' px' py' dockDelegate' rect
Long Parameter List,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,GetDockTarget,The method has 6 parameters. Parameters: item' px' py' rect' dockDelegate' outrect
Long Parameter List,MonoDevelop.Components.Docking,DockObject,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockObject.cs,GetDockTarget,The method has 5 parameters. Parameters: item' px' py' dockDelegate' rect
Long Parameter List,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,Relocate,The method has 5 parameters. Parameters: x' y' w' h' animate
Long Parameter List,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GetSize,The method has 6 parameters. Parameters: widget' cell_area' x_offset' y_offset' width' height
Long Parameter List,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,Render,The method has 6 parameters. Parameters: window' widget' background_area' cell_area' expose_area' flags
Long Parameter List,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,StartEditing,The method has 6 parameters. Parameters: ev' widget' path' background_area' cell_area' flags
Long Parameter List,MonoDevelop.Components.PropertyGrid,CellRendererPropertyGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GetSize,The method has 6 parameters. Parameters: widget' cell_area' x_offset' y_offset' width' height
Long Parameter List,MonoDevelop.Components.PropertyGrid,CellRendererPropertyGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,Render,The method has 6 parameters. Parameters: window' widget' background_area' cell_area' expose_area' flags
Long Parameter List,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,EndTransaction,The method has 5 parameters. Parameters: obj' tran' oldValue' newValue' commit
Long Identifier,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,CreateExperimentControlToolbar,The length of the parameter defineCompositeComponentButton is 30.
Long Identifier,TraceLab.UI.GTK,BasicNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\BasicNodeControl.cs,,The length of the parameter s_waitForAnyAllHandleXLocation is 30.
Long Identifier,TraceLab.UI.GTK,BasicNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\BasicNodeControl.cs,,The length of the parameter s_waitForAnyAllHandleYLocation is 30.
Long Identifier,TraceLab.UI.GTK,EndNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\EndNodeControl.cs,,The length of the parameter s_waitForAnyAllHandleXLocation is 30.
Long Identifier,TraceLab.UI.GTK,EndNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\EndNodeControl.cs,,The length of the parameter s_waitForAnyAllHandleYLocation is 30.
Long Identifier,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,,The length of the parameter s_waitForAnyAllHandleXLocation is 30.
Long Identifier,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,,The length of the parameter s_waitForAnyAllHandleYLocation is 30.
Long Identifier,TraceLab.UI.GTK,InfoPanelFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\InfoPanelFactory.cs,,The length of the parameter DECISION_INFO_PANEL_TITLE_LABEL is 31.
Long Identifier,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,fillMetricVariable,The length of the parameter predeccessorsOutputsNameTypeLookup is 34.
Long Identifier,TraceLab.UI.GTK,ExperimentDrawer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentDrawer.cs,,The length of the parameter m_nodeConnectionControlFactory is 30.
Long Identifier,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,,The length of the parameter lbl_temporaryComponentDirectories is 33.
Long Identifier,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,,The length of the parameter tbx_defaultExperimentDirectory is 30.
Long Identifier,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,,The length of the parameter CheckBoxIncludeIndependentFilesDirs is 35.
Long Identifier,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,,The length of the parameter DecriptionIncludeIndependentFilesDirs is 37.
Long Identifier,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,,The length of the parameter CheckBoxIncludeOtherPackagesFilesDirs is 37.
Long Identifier,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,,The length of the parameter DescriptionIncludeOtherPackagesFilesDirs is 40.
Long Identifier,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,,The length of the parameter CheckBoxIncludeOtherPackagesAssemblies is 38.
Long Identifier,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,,The length of the parameter DescriptionIncludeOtherPackagesAssemblies is 41.
Long Identifier,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,CreateExperimentControlToolbar,The length of the parameter defineCompositeComponentButton is 30.
Long Identifier,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,fillLoadComboBox,The length of the parameter predeccessorsOutputsNameTypeLookup is 34.
Long Identifier,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,fillLoadComboBox,The length of the parameter predeccessorsOutputsNameTypeLookup is 34.
Long Identifier,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,,The length of the parameter WARNING_MESSAGE_ONLY_CHALLENGE_PASSWORD is 39.
Long Statement,TraceLab.UI.GTK,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\MainWindow.cs,CreateDockAndPads,The length of the statement  "//            string layout_file = System.IO.Path.Combine (PintaCore.Settings.GetUserSettingsDirectory()' "layouts.xml"); " is 121.
Long Statement,TraceLab.UI.GTK,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\MainWindow.cs,MainWindow_DeleteEvent,The length of the statement  "            if (m_applicationContext.Application.Experiment != null && (m_applicationContext.Application.Experiment.IsModified || m_applicationContext.Application.Experiment.ExperimentInfo.IsModified)) { " is 191.
Long Statement,TraceLab.UI.GTK,WindowShell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\WindowShell.cs,AddDragDropSupport,The length of the statement  "            Gtk.Drag.DestSet (this' Gtk.DestDefaults.Motion | Gtk.DestDefaults.Highlight | Gtk.DestDefaults.Drop' entries' Gdk.DragAction.Copy); " is 132.
Long Statement,TraceLab.UI.GTK,ActionManager,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\ActionManager.cs,ConstrucRecentExperimentsMenuButton,The length of the statement  "            MenuButton recentExperimentButton = new MenuButton(new Image(Stock.Open' IconSize.SmallToolbar)' recentExperimentsMenu' true); " is 126.
Long Statement,TraceLab.UI.GTK,OpenExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\OpenExperimentAction.cs,OpenExperiment,The length of the statement  "                        experiment = TraceLab.Core.Experiments.ExperimentManager.Load (decryptedFileStream' filename' TraceLab.Core.Components.ComponentsLibrary.Instance); " is 147.
Long Statement,TraceLab.UI.GTK,OpenExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\OpenExperimentAction.cs,OpenExperiment,The length of the statement  "                    experiment = TraceLab.Core.Experiments.ExperimentManager.Load (filename' TraceLab.Core.Components.ComponentsLibrary.Instance); " is 126.
Long Statement,TraceLab.UI.GTK,OpenExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\OpenExperimentAction.cs,OpenExperiment,The length of the statement  "                    ApplicationViewModel newApplicationViewModel = ApplicationViewModel.CreateNewApplicationViewModel (applicationContext.Application' experiment); " is 143.
Long Statement,TraceLab.UI.GTK,OpenExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\OpenExperimentAction.cs,OpenExperiment,The length of the statement  "                    RecentExperimentsHelper.UpdateRecentExperimentList (TraceLab.Core.Settings.Settings.RecentExperimentsPath' experiment.ExperimentInfo.FilePath); " is 143.
Long Statement,TraceLab.UI.GTK,NewExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\NewExperimentAction.cs,Activated,The length of the statement  "                ApplicationViewModel newApplicationViewModel = ApplicationViewModel.CreateNewApplicationViewModel(m_applicationContext.Application' experiment); " is 144.
Long Statement,TraceLab.UI.GTK,NewExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\NewExperimentAction.cs,Activated,The length of the statement  "                RecentExperimentsHelper.UpdateRecentExperimentList(TraceLab.Core.Settings.Settings.RecentExperimentsPath' experiment.ExperimentInfo.FilePath); " is 142.
Long Statement,TraceLab.UI.GTK,NewExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\NewExperimentAction.cs,Activated,The length of the statement  "                    NLog.LogManager.GetCurrentClassLogger().ErrorException(String.Format("Failed to Save File {0}. {1}"' file' e.Message)' e); " is 122.
Long Statement,TraceLab.UI.GTK,OutputWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\OutputWindow\OutputWindowPad.cs,SetApplicationModel,The length of the statement  "                throw new InvalidOperationException("OutputWindowPad must be first initialized and dockFrame must have assigned GdkWindow before setting application model."); " is 158.
Long Statement,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,SetApplicationModel,The length of the statement  "                throw new InvalidOperationException("WorkspaceWindowPad must be first initialized and dockFrame must have assigned GdkWindow before setting application model."); " is 161.
Long Statement,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,SetWorkspaceViewModel,The length of the statement  "                ((INotifyCollectionChanged)m_workspaceViewModel.WorkspaceUnitCollection).CollectionChanged -= WorkspaceCollectionChanged; " is 121.
Long Statement,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,SetWorkspaceViewModel,The length of the statement  "            ((INotifyCollectionChanged)m_workspaceViewModel.WorkspaceUnitCollection).CollectionChanged += WorkspaceCollectionChanged; " is 121.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,SetApplicationModel,The length of the statement  "                throw new InvalidOperationException ("ExperimentCanvasPad must be first initialized and dockFrame must have assigned GdkWindow before setting application model."); " is 163.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,SetApplicationModel,The length of the statement  "                //we check whether the challenge is password protected and which password has been used by the user > if challenge password than make the exp not editable " is 154.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,SetApplicationModel,The length of the statement  "                (m_experimentCanvasWidget.ExperimentCanvas.View as StandardDrawingView).PanToolButtonReleased += PanToolButtonReleasedHandler; " is 126.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,hasChallengePasswordBeenUsed,The length of the statement  "                m_applicationViewModel.Experiment.ExperimentInfo.ChallengePassword.Equals(m_applicationViewModel.Experiment.unlockingPassword)){ " is 128.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,PasteHandler,The length of the statement  "            if (m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge != null  && m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge.Equals ("True") && TraceLab.Core.Experiments.Clipboard.IncludeChallenge ()){ " is 214.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button runExperimentButton = new Button(new Gtk.Image(Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.Icon_Play16.png"))); " is 129.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button stopExperimentButton = new Button (new Gtk.Image (Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.Stop.png"))); " is 126.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button defineCompositeComponentButton = new Button (new Gtk.Image (Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.DefineCompositeComponent.png"))); " is 156.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button packageExperimentButton = new Button (new Gtk.Image (Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.Icon_PkgCreate16.png"))); " is 141.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button aboutExperimentButton = new Button (new Gtk.Image (Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.Icon_Info16.png"))); " is 134.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "                    Button publishResults = new Button (new Gtk.Image (Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.publish3_icon.gif"))); " is 129.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "                Button publishChallenge = new Button (new Gtk.Image (Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.publish4_icon.png"))); " is 131.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,UpdateExperimentToolbarForChallenge,The length of the statement  "            DockItemToolbar toolbar =   m_applicationContext.MainWindow.ExperimentCanvasPad.m_experimentPad.GetToolbar (PositionType.Top); " is 126.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,UpdateExperimentToolbarForChallenge,The length of the statement  "                Button publishResults = new Button (new Gtk.Image (Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.publish3_icon.gif"))); " is 129.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,UpdateExperimentToolbarForChallenge,The length of the statement  "            Button publishChallenge = new Button (new Gtk.Image (Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.publish4_icon.png"))); " is 131.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,UpdateExperimentToolbarForChallenge,The length of the statement  "            Widget[] w  =  m_applicationContext.MainWindow.ExperimentCanvasPad.m_experimentPad.GetToolbar(PositionType.Top).Children; " is 121.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,UpdateExperimentToolbarForExperiment,The length of the statement  "            DockItemToolbar toolbar =   m_applicationContext.MainWindow.ExperimentCanvasPad.m_experimentPad.GetToolbar (PositionType.Top); " is 126.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,UpdateExperimentToolbarForExperiment,The length of the statement  "            Widget[] w  = m_applicationContext.MainWindow.ExperimentCanvasPad.m_experimentPad.GetToolbar(PositionType.Top).Children; " is 120.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,OnPublishChallengeButtonClicked,The length of the statement  "            if (!SearchExperimentResultsUnitvalue(m_applicationViewModel.Experiment.ExperimentInfo.ExperimentResultsUnitname' out typeMetricVariable' out valueMetricVariable)) " is 163.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,OnPublishChallengeButtonClicked,The length of the statement  "            // string filePath = filePathPackage.Remove(filePathPackage.LastIndexOf("\\")) + "\\" + m_applicationViewModel.Experiment.ExperimentInfo.Name +".teml"; " is 151.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,SearchExperimentResultsUnitvalue,The length of the statement  "            return m_applicationContext.MainWindow.WorkspaceWindowPad.SearchValueMetricVariable (nameMetricVariable' out typeMetricVariable' out valueMetricVariable); " is 154.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,DefiningBenchmarkTest,The length of the statement  "            // TraceLab.Core.Benchmarks.DefiningBenchmark benchmarkDefiner = new TraceLab.Core.Benchmarks.DefiningBenchmark(m_applicationViewModel.Experiment' ComponentsLibrary.Instance' m_applicationViewModel.Workspace'  TraceLab.Core.PackageSystem.PackageManager.Instance' m_applicationViewModel.Workspace.TypeDirectories' null); " is 319.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,SetScopeApplicationModel,The length of the statement  "                throw new InvalidOperationException ("ExperimentCanvasPad must be first initialized and dockFrame must have assigned GdkWindow before setting application model."); " is 163.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,SetApplicationModel,The length of the statement  "                throw new InvalidOperationException("ExperimentCanvasPad must be first initialized and dockFrame must have assigned GdkWindow before setting application model."); " is 162.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,DisplayScope,The length of the statement  "            // m_experimentCanvasWidget.ExperimentCanvas.View.AddWidget (scopeNodeControlCurrent.maxExperimentButton' x + 300' y-40); " is 121.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,AddScopeInDecisionComponent,The length of the statement  "            Cairo.PointD translation = m_experimentCanvasWidget.ExperimentCanvas.View.ViewToDrawing(decisionNodeControl.DisplayBox.X' decisionNodeControl.DisplayBox.Y); " is 156.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,isChallengeExp,The length of the statement  "            if (!string.IsNullOrEmpty(m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge) && m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge.Equals ("True")) { " is 170.
Long Statement,TraceLab.UI.GTK,ApplicationContext,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\ApplicationViewModelWrapper.cs,SetApplicationModel,The length of the statement  "                throw new InvalidOperationException("Application Context has not initialized its Window' thus the application view model cannot be set!"); " is 138.
Long Statement,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,AttachListenerToIOSpecHighlights,The length of the statement  "                    if (configWrapper.ConfigValues.TryGetValue ("Directory"' out value) || configWrapper.ConfigValues.TryGetValue ("ConfigurationFile"' out value)) " is 143.
Long Statement,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,AttachListenerToIOSpecHighlights,The length of the statement  "                            value.SetExperimentLocationRoot (System.IO.Path.GetDirectoryName(m_applicationContext.Application.Experiment.ExperimentInfo.FilePath)' true); " is 141.
Long Statement,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,ToggleOffOnInfoClosed,The length of the statement  "                //since info pan visibility may be changed by toggling info icon' OR it may changed if info box is closed by clicking [X] button " is 128.
Long Statement,TraceLab.UI.GTK,FileDialogs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\FileDialogs.cs,AddFilters,The length of the statement  "        //here: we check if the file is crypted' if it's so we ask the user to insert a password. then we decrypt the file and check the  " is 128.
Long Statement,TraceLab.UI.GTK,FileDialogs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\FileDialogs.cs,AddFilters,The length of the statement  "            fileFilterCryptedFile.Name = Mono.Unix.Catalog.GetString(string.Format("Experiment files (.{0})"' cryptedFileExtension)); " is 121.
Long Statement,TraceLab.UI.GTK,FileDialogs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\FileDialogs.cs,ConfirmOverwrite,The length of the statement  "            string secondary = Mono.Unix.Catalog.GetString ("The file already exists in \"{1}\". Replacing it will overwrite its contents."); " is 129.
Long Statement,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,CreateInputMappingColumnWithComboBox,The length of the statement  "            mappedToColumn.SetCellDataFunc (comboRenderer' delegate (TreeViewColumn tree_column' CellRenderer cell' ITreeNode node) { " is 121.
Long Statement,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnIOExpanderActivated,The length of the statement  "                if (configurationExpander.Visible && !configurationExpander.Expanded && componentInfoExpander.Visible && !componentInfoExpander.Expanded) " is 137.
Long Statement,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,CanConnectEnd,The length of the statement  "                    (node is ExperimentEndNode || node is ComponentNode || node is ExperimentDecisionNode || node is CompositeComponentNode)) " is 121.
Long Statement,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,CanConnectStart,The length of the statement  "                    (node is ExperimentEndNode || node is ComponentNode || node is ExperimentDecisionNode || node is CompositeComponentNode)) " is 121.
Long Statement,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,ConnectEnd,The length of the statement  "                        ExperimentNodeConnection nodeConnection = ownerExperiment.AddConnection(startComponentControl.ExperimentNode' endComponentControl.ExperimentNode); " is 146.
Long Statement,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,buttonSelectDirClickedHandler,The length of the statement  "            if (FileDialogs.SelectCatalogDialog (this' out directoryPath' TraceLab.Core.Settings.Settings.GetSettings ().DefaultExperimentsDirectory)) {             " is 140.
Long Statement,TraceLab.UI.GTK,BasicNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\BasicNodeControl.cs,CreateFigureTool,The length of the statement  "                    ScopeNodeBase scopeNode = GetScopeUp(ExperimentNode' ExperimentNode.Owner as BaseExperiment' ExperimentNode.Data.X' ExperimentNode.Data.Y); " is 139.
Long Statement,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,AddScopeInDecisionComponent,The length of the statement  "            ExperimentCanvasPad experimentCanvasPad = ExperimentCanvasPadFactory.GetExperimentCanvasPad (m_applicationContext' this); " is 121.
Long Statement,TraceLab.UI.GTK,ExperimentCrumbGatherer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\ExperimentCrumbGatherer.cs,PushParents,The length of the statement  "                if (graphAbove.OwnerNode is ScopeNode || graphAbove.OwnerNode is LoopScopeNode || graphAbove.OwnerNode is ChallengeNode) " is 120.
Long Statement,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,buttonOKClickedHandler,The length of the statement  "                m_applicationViewModel.Experiment.ExperimentInfo.ExperimentResultsUnitname = ((String)metricCombobox.Model.GetValue (tree' 0)); " is 127.
Long Statement,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,OnLockUnlockClicked,The length of the statement  "                pwdPicker = new PasswordPicker (this.m_applicationViewModel.Experiment.ExperimentInfo.ChallengePassword' this.m_applicationViewModel.Experiment.ExperimentInfo.ExperimentPassword); " is 179.
Long Statement,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,OnMetricComboboxChanged,The length of the statement  "                m_applicationViewModel.Experiment.ExperimentInfo.ExperimentResultsUnitname = ((String)metricCombobox.Model.GetValue (tree' 0)); " is 127.
Long Statement,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,hasChallengePasswordBeenUsed,The length of the statement  "                m_applicationViewModel.Experiment.ExperimentInfo.ChallengePassword.Equals(m_applicationViewModel.Experiment.unlockingPassword)){ " is 128.
Long Statement,TraceLab.UI.GTK,ComponentsLibraryWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryWidget.cs,HandleDragDataGet,The length of the statement  "                    args.SelectionData.Set(args.SelectionData.Target' args.SelectionData.Format' new byte[] {}); // we send empty byte array just to trigger a drag&drop event. Drop handler will access componentsLibrary once again to get selected node. " is 231.
Long Statement,TraceLab.UI.GTK,ComponentsLibraryPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryPad.cs,SetApplicationModel,The length of the statement  "                throw new InvalidOperationException("ComponentsLibraryPad must be first initialized and dockFrame must have assigned GdkWindow before setting application model."); " is 163.
Long Statement,TraceLab.UI.GTK,ExperimentDrawer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentDrawer.cs,DrawEdge,The length of the statement  "                NodeConnectionControl connection = m_nodeConnectionControlFactory.CreateNewNodeConnectionControl(sourceControl' targetControl); " is 127.
Long Statement,TraceLab.UI.GTK,ExperimentDrawer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentDrawer.cs,DrawEdge,The length of the statement  "                if (connection.ExperimentNodeConnection != null && connection.ExperimentNodeConnection.Source != null && connection.ExperimentNodeConnection.Target != null) " is 156.
Long Statement,TraceLab.UI.GTK,ExperimentDrawer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentDrawer.cs,DrawEdge,The length of the statement  "                if ((connection.ExperimentNodeConnection.Source is ExperimentDecisionNode && connection.ExperimentNodeConnection.Target is ScopeNode)|| " is 135.
Long Statement,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,Build,The length of the statement  "All configuration parameters can be set by the component's user' but only some are visible in the top level view of component in its info pane.  " is 143.
Long Statement,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,defineButtonClicked,The length of the statement  "                        String.Format("Composite component '{0}' has been created successfully!\n\n Refresh components library to find the component."' m_setup.Name)); " is 143.
Long Statement,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The length of the statement  "			global::Gtk.ButtonBox.ButtonBoxChild w10 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox2 [this.forwardButton])); " is 123.
Long Statement,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The length of the statement  "			global::Gtk.ButtonBox.ButtonBoxChild w19 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox2 [this.defineButton])); " is 122.
Long Statement,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The length of the statement  "			global::Gtk.ButtonBox.ButtonBoxChild w20 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox2 [this.cancelButton])); " is 122.
Long Statement,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The length of the statement  "			global::Gtk.Notebook.NotebookChild w29 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.videoTutorialsTreeView])); " is 126.
Long Statement,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The length of the statement  "			global::Gtk.ButtonBox.ButtonBoxChild w2 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox1 [this.generateButton])); " is 123.
Long Statement,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The length of the statement  "			global::Gtk.ButtonBox.ButtonBoxChild w3 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox1 [this.buildPackageButton])); " is 127.
Long Statement,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The length of the statement  "			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.DecriptionIncludeIndependentFilesDirs])); " is 121.
Long Statement,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The length of the statement  "			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.CheckBoxIncludeOtherPackagesFilesDirs])); " is 121.
Long Statement,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The length of the statement  "			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.DescriptionIncludeOtherPackagesFilesDirs])); " is 124.
Long Statement,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The length of the statement  "			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.CheckBoxIncludeOtherPackagesAssemblies])); " is 122.
Long Statement,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The length of the statement  "			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.configVBox [this.DescriptionIncludeOtherPackagesAssemblies])); " is 125.
Long Statement,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,SetApplicationModel,The length of the statement  "                throw new InvalidOperationException("ScopeCanvasPad must be first initialized and dockFrame must have assigned GdkWindow before setting application model."); " is 157.
Long Statement,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button runExperimentButton = new Button(new Gtk.Image(Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.Icon_Play16.png"))); " is 129.
Long Statement,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button stopExperimentButton = new Button(new Gtk.Image(Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.Stop.png"))); " is 123.
Long Statement,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button defineCompositeComponentButton = new Button(new Gtk.Image(Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.DefineCompositeComponent.png"))); " is 153.
Long Statement,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button packageExperimentButton = new Button(new Gtk.Image(Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.Icon_PkgCreate16.png"))); " is 138.
Long Statement,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,CreateExperimentControlToolbar,The length of the statement  "            Button aboutExperimentButton = new Button(new Gtk.Image(Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.Icon_Info16.png"))); " is 131.
Long Statement,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,SetScopeApplicationModel,The length of the statement  "                throw new InvalidOperationException("ExperimentCanvasPad must be first initialized and dockFrame must have assigned GdkWindow before setting application model."); " is 162.
Long Statement,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,DrawFrame,The length of the statement  "                //m_applicationContext.MainWindow.ExperimentCanvasPad.ExperimentCanvasWidget.ExperimentCanvas.View.MoveWidget (cw' rect.X' rect.Y + 30); " is 136.
Long Statement,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,fillLoadComboBox,The length of the statement  "            //var availableInputMappingsPerNode = new TraceLab.Core.Utilities.InputMappings (m_applicationContext.Application.Experiment); " is 126.
Long Statement,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,fillLoadComboBox,The length of the statement  "                predeccessorsOutputsNameTypeLookup = new Dictionary<string' string> (); //return empty - there is not path from start node to decision " is 134.
Long Statement,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,fillLoadComboBox,The length of the statement  "            //var availableInputMappingsPerNode = new TraceLab.Core.Utilities.InputMappings (m_applicationContext.Application.Experiment); " is 126.
Long Statement,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,fillLoadComboBox,The length of the statement  "                predeccessorsOutputsNameTypeLookup = new Dictionary<string' string> (); //return empty - there is not path from start node to decision " is 134.
Long Statement,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The length of the statement  "			this.decisionCodeEntryBox1.Buffer.Text = "For example: \nif ((int)Load(\"j\")>0){\n   Select(\"Node1\");\n} else {\n   Select(\"Node" + " is 135.
Long Statement,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,RedrawButton,The length of the statement  "            m_resizeScope_NorthEast = new PixButtonHandle(this' new AbsoluteLocator(0.0' -5.0' AbsoluteLocator.AbsoluteTo.TopRight)' " is 120.
Long Statement,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,RedrawButton,The length of the statement  "            m_resizeScope_SouthEast = new PixButtonHandle(this' new AbsoluteLocator(0.0' PaddingBottom +25' AbsoluteLocator.AbsoluteTo.TopRight)' " is 133.
Long Statement,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,RedrawButton,The length of the statement  "            m_resizeScope_SouthWest = new PixButtonHandle(this' new AbsoluteLocator(0.0' PaddingBottom + 25' AbsoluteLocator.AbsoluteTo.TopLeft)' " is 133.
Long Statement,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The length of the statement  "            //widthMax = m_applicationContext.MainWindow.ExperimentCanvasPad.ExperimentCanvasWidget.ExperimentCanvas.View.VisibleArea.Width-20; " is 131.
Long Statement,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The length of the statement  "            //heightMax = m_applicationContext.MainWindow.ExperimentCanvasPad.ExperimentCanvasWidget.ExperimentCanvas.View.VisibleArea.Height-40; " is 133.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPadFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExperimentCanvasPadFactory.cs,CreateCompositeExperimentCanvasPad,The length of the statement  "            if (m_mapPadToNodes.TryGetValue (applicationContext.GetHashCode() + experiment.ExperimentInfo.Id' out experimentCanvasPad)) " is 123.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPadFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExperimentCanvasPadFactory.cs,GetExperimentCanvasPad,The length of the statement  "            if (m_mapPadToNodes.TryGetValue (applicationContext.GetHashCode() + basicNodeControl.ExperimentNode.Owner.ExperimentInfo.Id' out experimentCanvasPad)) " is 150.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPadFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExperimentCanvasPadFactory.cs,RemoveSubExperimentCanvasPad,The length of the statement  "                if (m_mapIdToNodes.ContainsKey(applicationContext.GetHashCode() + basicNodeControl.ExperimentNode.Owner.ExperimentInfo.Id)) " is 123.
Long Statement,TraceLab.UI.GTK,ExperimentCanvasPadFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExperimentCanvasPadFactory.cs,ZoomValueChanged,The length of the statement  "            for (IEnumerator<KeyValuePair<string' BasicNodeControl>> enumerator = m_mapIdToNodes.GetEnumerator(); enumerator.MoveNext();)      " is 125.
Long Statement,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,CreateInputMappingColumnWithComboBox,The length of the statement  "            mappedToColumn.SetCellDataFunc (comboRenderer' delegate (TreeViewColumn tree_column' CellRenderer cell' ITreeNode node) { " is 121.
Long Statement,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,OnButtonOkClicked,The length of the statement  "            if (this.challengePwdEntry.Text.Equals (this.experimentPwdEntry.Text) && !string.IsNullOrEmpty (this.challengePwdEntry.Text)) { " is 127.
Long Statement,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,OnButtonOkClicked,The length of the statement  "            } else if (string.IsNullOrEmpty (this.experimentPwdEntry.Text) && !string.IsNullOrEmpty (this.challengePwdEntry.Text)) {      " is 120.
Long Statement,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,OnGripExpose,The length of the statement  "				Gtk.Style.PaintHline (w.Style' w.GdkWindow' StateType.Normal' args.Event.Area' w' ""' 0' w.Allocation.Width' gripSize - 2); " is 123.
Long Statement,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,OnGripExpose,The length of the statement  "				Gtk.Style.PaintVline (w.Style' w.GdkWindow' StateType.Normal' args.Event.Area' w' ""' 0' w.Allocation.Height' gripSize - 2); " is 124.
Long Statement,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,OnGripExpose,The length of the statement  "			Gtk.Style.PaintHandle (w.Style' w.GdkWindow' s' ShadowType.None' args.Event.Area' w' "paned"' handleRect.Left' handleRect.Top' handleRect.Width' handleRect.Height' or); " is 168.
Long Statement,MonoDevelop.Components.Docking,DockContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockContainer.cs,FindHandle,The length of the statement  "						if ((grp.Type == DockGroupType.Horizontal && x > obj.Allocation.Right && x < obj.Allocation.Right + frame.TotalHandleSize) || " is 125.
Long Statement,MonoDevelop.Components.Docking,DockFrame,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockFrame.cs,ToCairoColor,The length of the statement  "			return new Cairo.Color (color.Red / (double) ushort.MaxValue' color.Green / (double) ushort.MaxValue' color.Blue / (double) ushort.MaxValue); " is 141.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,IsSelectedPage,The length of the statement  "			if (type != DockGroupType.Tabbed || boundTabStrip == null || boundTabStrip.CurrentTab == -1 || VisibleObjects == null || boundTabStrip.CurrentTab >= VisibleObjects.Count) " is 170.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,DrawSeparators,The length of the statement  "								Gtk.Style.PaintHandle (Frame.Style' Frame.Container.GdkWindow' state' ShadowType.None' exposedArea' Frame' "paned"' x' y' hw' hh' or); " is 134.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The length of the statement  "					rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height); " is 146.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The length of the statement  "						rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height); " is 151.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The length of the statement  "					rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize); " is 146.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The length of the statement  "						rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2' Allocation.Width' DockFrame.GroupDockSeparatorSize); " is 151.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,Dump,The length of the statement  "			Console.WriteLine (new string (' '' ind) + "Group (" + type + ") size:" + Size + " DefaultSize:" + DefaultSize + " alloc:" + Allocation); " is 137.
Long Statement,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,GetDockTarget,The length of the statement  "					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2); " is 127.
Long Statement,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,GetDockTarget,The length of the statement  "					outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2); " is 130.
Long Statement,MonoDevelop.Components.Docking,TabStrip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,OnExposeEvent,The length of the statement  "//				GdkWindow.DrawLine (Style.DarkGC (Gtk.StateType.Normal)' Allocation.X' Allocation.Y' Allocation.Right' Allocation.Y); " is 123.
Long Statement,MonoDevelop.Components.Docking,TabStrip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,DrawTab,The length of the statement  "				Gtk.Style.PaintExtension (Style' GdkWindow' st' ShadowType.Out' evnt.Area' this' "tab"' rect.X' rect.Y' rect.Width' rect.Height' Gtk.PositionType.Top);  " is 151.
Long Statement,TraceLab.UI.GTK.Extensions,GdkExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\GdkExtensions.cs,ToCairoColor,The length of the statement  "            return new Cairo.Color ((double)color.Red / ushort.MaxValue' (double)color.Green / ushort.MaxValue' (double)color.Blue / ushort.MaxValue); " is 138.
Long Statement,Stetic,Gui,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,Initialize,The length of the statement  "				global::Gtk.IconSet w2 = new global::Gtk.IconSet (global::Gdk.Pixbuf.LoadFromResource ("TraceLab.UI.GTK.Resources.cursor-grab-open.png")); " is 138.
Long Statement,MonoDevelop.Components.PropertyGrid,EditorManager,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\EditorManager.cs,GetEditor,The length of the statement  "				throw new Exception ("The property editor '" + editorType + "' must be a subclass of Stetic.PropertyEditorCell or implement Stetic.IPropertyEditor"); " is 149.
Long Statement,MonoDevelop.Components.PropertyGrid,EditorManager,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\EditorManager.cs,GetEditorType,The length of the statement  "			UITypeEditor UITypeEd = (UITypeEditor) pd.GetEditor(typeof (System.Drawing.Design.UITypeEditor));//first' does it have custom editors? " is 134.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditorCell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\BooleanEditorCell.cs,Render,The length of the statement  "			Gtk.Style.PaintCheck (Container.Style' window' state' sh' bounds' Container' "checkbutton"' bounds.X + indicatorSpacing - 1' bounds.Y + (bounds.Height - s)/2' s' s); " is 165.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\BooleanEditorCell.cs,Initialize,The length of the statement  "				throw new ApplicationException ("Boolean editor does not support editing values of type " + session.Property.PropertyType); " is 123.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,CharPropertyEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CharPropertyEditor.cs,Initialize,The length of the statement  "				throw new ApplicationException ("Char editor does not support editing values of type " + session.Property.PropertyType); " is 120.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,ColorEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\ColorEditorCell.cs,Initialize,The length of the statement  "				throw new ApplicationException ("Color editor does not support editing values of type " + session.Property.PropertyType); " is 121.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,IntRangeEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\IntRange.cs,Initialize,The length of the statement  "					throw new ApplicationException ("IntRange editor does not support editing values of type " + session.Property.PropertyType); " is 124.
Complex Conditional,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineIntersection,The conditional expression  "(xa < xb && (xb < xc || xb < xd)) ||  						(xa > xb && (xb > xc || xb > xd))"  is complex.
Complex Conditional,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineIntersection,The conditional expression  "0.0 <= r && r <= 1.0 && 0.0 <= s && s <= 1.0"  is complex.
Complex Conditional,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnIOExpanderActivated,The conditional expression  "configurationExpander.Visible && !configurationExpander.Expanded && componentInfoExpander.Visible && !componentInfoExpander.Expanded"  is complex.
Complex Conditional,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnConfigurationExpanderActivated,The conditional expression  "componentInfoExpander.Visible && !componentInfoExpander.Expanded && IOExpander.Visible && !IOExpander.Expanded"  is complex.
Complex Conditional,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnComponentInfoExpanderActivated,The conditional expression  "configurationExpander.Visible && !configurationExpander.Expanded && IOExpander.Visible && !IOExpander.Expanded"  is complex.
Complex Conditional,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,CanConnectEnd,The conditional expression  "node != null && node is ScopeNode == false &&                      (node is ExperimentEndNode || node is ComponentNode || node is ExperimentDecisionNode || node is CompositeComponentNode)"  is complex.
Complex Conditional,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,CanConnectStart,The conditional expression  "node != null && node is ScopeNode == false &&                      (node is ExperimentEndNode || node is ComponentNode || node is ExperimentDecisionNode || node is CompositeComponentNode)"  is complex.
Complex Conditional,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,ZoomToFit,The conditional expression  "!(xMin >= xVisible && xMax <= x2Visible && yMin >= yVisible && yMax <= y2Visible)"  is complex.
Complex Conditional,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,ZoomToFit,The conditional expression  "!(xMin >= xVisible && xMax <= x2Visible && yMin >= yVisible && yMax <= y2Visible)"  is complex.
Complex Conditional,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,ZoomToFit,The conditional expression  "xMin >= xVisible && xMax <= x2Visible && yMin >= yVisible && yMax <= y2Visible"  is complex.
Complex Conditional,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnMotionNotifyEvent,The conditional expression  "evnt.X >= area.X && evnt.X <= area.X + area.Width &&                      evnt.Y >= area.Y && evnt.Y <= area.Y + area.Height"  is complex.
Complex Conditional,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,IncludeChallenge,The conditional expression  "firstInEdge != null && firstInEdge.Source!= null && firstOutEdge != null && firstOutEdge.Target!= null"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,ScheduleAutoHide,The conditional expression  "it.Widget.Visible && it.Widget.IsRealized && it.Widget.Allocation.Contains (px' py) && !force"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,DockContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockContainer.cs,FindHandle,The conditional expression  "(grp.Type == DockGroupType.Horizontal && x > obj.Allocation.Right && x < obj.Allocation.Right + frame.TotalHandleSize) ||  						    (grp.Type == DockGroupType.Vertical && y > obj.Allocation.Bottom && y < obj.Allocation.Bottom + frame.TotalHandleSize)"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,IsSelectedPage,The conditional expression  "type != DockGroupType.Tabbed || boundTabStrip == null || boundTabStrip.CurrentTab == -1 || VisibleObjects == null || boundTabStrip.CurrentTab >= VisibleObjects.Count"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,Relocate,The conditional expression  "x != rx || y != ry || w != rw || h != rh"  is complex.
Complex Conditional,MonoDevelop.Components.PropertyGrid,PropertyGridTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,UpdateProperty,The conditional expression  "prop != null && idata != null && prop.Name == pd.Name && idata.Instance == instance"  is complex.
Virtual Method Call from Constructor,MonoHotDraw,SteticComponent,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\SteticComponent.cs,SteticComponent,The constructor "SteticComponent" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoHotDraw.Figures,LineConnection,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\LineConnection.cs,LineConnection,The constructor "LineConnection" calls a virtual method "AddPoint".
Virtual Method Call from Constructor,MonoHotDraw.Figures,LineConnection,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\LineConnection.cs,LineConnection,The constructor "LineConnection" calls a virtual method "AddPoint".
Virtual Method Call from Constructor,MonoHotDraw.Figures,LineConnection,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\LineConnection.cs,LineConnection,The constructor "LineConnection" calls a virtual method "ConnectStart".
Virtual Method Call from Constructor,MonoHotDraw.Figures,LineConnection,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\LineConnection.cs,LineConnection,The constructor "LineConnection" calls a virtual method "ConnectEnd".
Virtual Method Call from Constructor,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ComponentInfoPanel,The constructor "ComponentInfoPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,ExperimentCanvasWidget,The constructor "ExperimentCanvasWidget" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,NewExperimentDialog,The constructor "NewExperimentDialog" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,AboutExperimentDialog,The constructor "AboutExperimentDialog" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,ComponentsLibraryWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryWidget.cs,ComponentsLibraryWidget,The constructor "ComponentsLibraryWidget" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,IOSpecSetupPage,The constructor "IOSpecSetupPage" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,ConfigSetupPage,The constructor "ConfigSetupPage" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,ComponentInfoPage,The constructor "ComponentInfoPage" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,ConfirmationPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfirmationPage.cs,ConfirmationPage,The constructor "ConfirmationPage" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,DefineCompositeComponentWizard,The constructor "DefineCompositeComponentWizard" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,PackageReferencesWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\PackageReferencesWindow\PackageReferencesWindow.cs,PackageReferencesWindow,The constructor "PackageReferencesWindow" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,ErrorDialog,The constructor "ErrorDialog" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,WelcomePageWidget,The constructor "WelcomePageWidget" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,SettingsDialog,The constructor "SettingsDialog" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,PackageBuilderWindow,The constructor "PackageBuilderWindow" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,PackageBuilderSettingsPage,The constructor "PackageBuilderSettingsPage" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,PackageBuilderMainPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderMainPage.cs,PackageBuilderMainPage,The constructor "PackageBuilderMainPage" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,CommentWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CommentWidget.cs,CommentWidget,The constructor "CommentWidget" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,LoopDecisionInfoPanel,The constructor "LoopDecisionInfoPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,DecisionInfoPanel,The constructor "DecisionInfoPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,BaseInfoPanel,The constructor "BaseInfoPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,PasswordPicker,The constructor "PasswordPicker" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,CalendarDatePickerDialog,The constructor "CalendarDatePickerDialog" calls a virtual method "Build".
Virtual Method Call from Constructor,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,InsertPassword,The constructor "InsertPassword" calls a virtual method "Build".
Empty Catch Block,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,RenderViewerIcon,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.Docking,DockItemContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemContainer.cs,DockItemContainer,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.PropertyGrid,CellRendererWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyEditorCell.cs,OnFocusOutEvent,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.PropertyGrid,CellRendererWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyEditorCell.cs,OnFocusOutEvent,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.PropertyGrid.PropertyEditors,DateTimeEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\DateTimeEditor.cs,OnChanged,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\TextEditor.cs,TextChanged,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.PropertyGrid.PropertyEditors,TimeSpanEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\TimeSpanEditor.cs,OnChanged,The method has an empty catch block.
Magic Number,MonoHotDraw,MouseEvent,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\MouseEvent.cs,IsRightButtonPressed,The following statement contains a magic number: if (mouseButtonEvent != null)               {                  if(mouseButtonEvent.Button == 3)                  {                      return true;                  }              }
Magic Number,MonoHotDraw,MouseEvent,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\MouseEvent.cs,isCentralButtonPressed,The following statement contains a magic number: if (mouseButtonEvent != null)               {                  if(mouseButtonEvent.Button == 2)                  {                      return true;                  }              }
Magic Number,MonoHotDraw,StandardDrawingView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\StandardDrawingView.cs,UpdateAdjustments,The following statement contains a magic number: Hadjustment.PageIncrement = Allocation.Width * 0.9;
Magic Number,MonoHotDraw,StandardDrawingView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\StandardDrawingView.cs,UpdateAdjustments,The following statement contains a magic number: Vadjustment.PageIncrement = Allocation.Height * 0.9;
Magic Number,MonoHotDraw,StandardDrawingView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\StandardDrawingView.cs,DebugCreateTimer,The following statement contains a magic number: GLib.Timeout.Add (1000' delegate() {                  System.Console.WriteLine ("FPS: {0}"' _frameCount.ToString ());                  _frameCount = 0;                  return true;              });
Magic Number,MonoHotDraw.Commands,DuplicateCommand,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Commands\DuplicateCommand.cs,Execute,The following statement contains a magic number: UndoActivity.AffectedFigures = base.InsertFigures (UndoActivity.AffectedFigures' 10' 10);
Magic Number,MonoHotDraw.Commands,DuplicateCommand,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Commands\DuplicateCommand.cs,Execute,The following statement contains a magic number: UndoActivity.AffectedFigures = base.InsertFigures (UndoActivity.AffectedFigures' 10' 10);
Magic Number,MonoHotDraw.Connectors,ChopBoxConnector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Connectors\ChopBoxConnector.cs,FindEnd,The following statement contains a magic number: PointD point = connection.PointAt (connection.PointCount - 2);
Magic Number,MonoHotDraw.Connectors,ChopEllipseConnector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Connectors\ChopEllipseConnector.cs,Chop,The following statement contains a magic number: p.X = r.Center.X + r.Width/2 * Math.Cos (angle);
Magic Number,MonoHotDraw.Connectors,ChopEllipseConnector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Connectors\ChopEllipseConnector.cs,Chop,The following statement contains a magic number: p.Y = r.Center.Y + r.Height/2 * Math.Sin (angle);
Magic Number,MonoHotDraw.Figures,AbstractFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\AbstractFigure.cs,AbstractFigure,The following statement contains a magic number: FillColor = new Cairo.Color (1.0' 1.0' 0.2' 0.8);
Magic Number,MonoHotDraw.Figures,AbstractFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\AbstractFigure.cs,AbstractFigure,The following statement contains a magic number: FillColor = new Cairo.Color (1.0' 1.0' 0.2' 0.8);
Magic Number,MonoHotDraw.Figures,AttributeFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\AttributeFigure.cs,InitializeDefaultAttributes,The following statement contains a magic number: _defaultAttributes.Add (FigureAttribute.FontSize' 9);
Magic Number,MonoHotDraw.Figures,AttributeFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\AttributeFigure.cs,InitializeDefaultAttributes,The following statement contains a magic number: _defaultAttributes.Add (FigureAttribute.FillColor' new Cairo.Color (1.0' 1.0' 1.0' 0.8));
Magic Number,MonoHotDraw.Figures,EllipseFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\EllipseFigure.cs,BasicDraw,The following statement contains a magic number: double midwidth  = DisplayBox.Width / 2.0;
Magic Number,MonoHotDraw.Figures,EllipseFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\EllipseFigure.cs,BasicDraw,The following statement contains a magic number: double midheight = DisplayBox.Height / 2.0;
Magic Number,MonoHotDraw.Figures,EllipseFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\EllipseFigure.cs,BasicDraw,The following statement contains a magic number: context.Arc (0.0' 0.0' 1.0' 0.0' 2.0 * Math.PI);
Magic Number,MonoHotDraw.Figures,HStackFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\HStackFigure.cs,CalculateFigureY,The following statement contains a magic number: switch (Alignment) {  			case HStackAlignment.Center:  				return Position.Y + (Height - figure.DisplayBox.Height)/2;  			case HStackAlignment.Top:  				return Position.Y;  			case HStackAlignment.Bottom:  				return Position.Y + (Height - figure.DisplayBox.Height);  			default:  				return Position.Y;  			}
Magic Number,MonoHotDraw.Figures,LineTerminal,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\LineTerminal.cs,InvalidateRect,The following statement contains a magic number: r.Inflate (15.0' 15.0);
Magic Number,MonoHotDraw.Figures,LineTerminal,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\LineTerminal.cs,InvalidateRect,The following statement contains a magic number: r.Inflate (15.0' 15.0);
Magic Number,MonoHotDraw.Figures,PolyLineFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\PolyLineFigure.cs,BasicDraw,The following statement contains a magic number: if (_points.Count < 2) {  				return;  			}
Magic Number,MonoHotDraw.Figures,PolyLineFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\PolyLineFigure.cs,BasicDraw,The following statement contains a magic number: if (EndTerminal != null) {  				end = EndTerminal.Draw (context' EndPoint' _points [PointCount-2]);  			}  			else {  				end = EndPoint;  			}
Magic Number,MonoHotDraw.Figures,PolyLineFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\PolyLineFigure.cs,ContainsPoint,The following statement contains a magic number: rect.Inflate (4.0' 4.0);
Magic Number,MonoHotDraw.Figures,PolyLineFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\PolyLineFigure.cs,ContainsPoint,The following statement contains a magic number: rect.Inflate (4.0' 4.0);
Magic Number,MonoHotDraw.Figures,SimpleTextFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\SimpleTextFigure.cs,SimpleTextFigure,The following statement contains a magic number: PaddingLeft   = 2.0;
Magic Number,MonoHotDraw.Figures,SimpleTextFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\SimpleTextFigure.cs,SimpleTextFigure,The following statement contains a magic number: PaddingTop    = 2.0;
Magic Number,MonoHotDraw.Figures,SimpleTextFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\SimpleTextFigure.cs,SimpleTextFigure,The following statement contains a magic number: PaddingRight  = 2.0;
Magic Number,MonoHotDraw.Figures,SimpleTextFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\SimpleTextFigure.cs,SimpleTextFigure,The following statement contains a magic number: PaddingBottom = 2.0;
Magic Number,MonoHotDraw.Figures,SimpleTextFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\SimpleTextFigure.cs,GenerateDummyContext,The following statement contains a magic number: ImageSurface surface = new ImageSurface (Cairo.Format.ARGB32' 100' 100);
Magic Number,MonoHotDraw.Figures,SimpleTextFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\SimpleTextFigure.cs,GenerateDummyContext,The following statement contains a magic number: ImageSurface surface = new ImageSurface (Cairo.Format.ARGB32' 100' 100);
Magic Number,MonoHotDraw.Figures,StackFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\StackFigure.cs,StackFigure,The following statement contains a magic number: Spacing = 5.0;
Magic Number,MonoHotDraw.Figures,TriangleArrowLineTerminal,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\TriangleArrowLineTerminal.cs,InvalidateRect,The following statement contains a magic number: double distance = Math.Max (_lineDistance*2' _pointDistance);
Magic Number,MonoHotDraw.Figures,VStackFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\VStackFigure.cs,CalculateFigureX,The following statement contains a magic number: switch (Alignment) {  			case VStackAlignment.Center:  				return Position.X + (Width - figure.DisplayBox.Width)/2;  			case VStackAlignment.Left:  				return Position.X;  			case VStackAlignment.Right:  				return Position.X + (Width - figure.DisplayBox.Width);  			default:  				return Position.X;  			}
Magic Number,MonoHotDraw.Handles,AbstractHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\AbstractHandle.cs,AbstractHandle,The following statement contains a magic number: FillColor = new Cairo.Color (0.2' 1.0' 0.2' 0.8);
Magic Number,MonoHotDraw.Handles,AbstractHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\AbstractHandle.cs,AbstractHandle,The following statement contains a magic number: FillColor = new Cairo.Color (0.2' 1.0' 0.2' 0.8);
Magic Number,MonoHotDraw.Handles,AbstractHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\AbstractHandle.cs,AbstractHandle,The following statement contains a magic number: FillColor = new Cairo.Color (0.2' 1.0' 0.2' 0.8);
Magic Number,MonoHotDraw.Handles,AbstractHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\AbstractHandle.cs,ContainsPoint,The following statement contains a magic number: displayBox.Inflate(Width/2' Height/2);
Magic Number,MonoHotDraw.Handles,AbstractHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\AbstractHandle.cs,ContainsPoint,The following statement contains a magic number: displayBox.Inflate(Width/2' Height/2);
Magic Number,MonoHotDraw.Handles,AbstractHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\AbstractHandle.cs,ViewDisplayBox,The following statement contains a magic number: displayBox.Inflate(Width/2' Height/2);
Magic Number,MonoHotDraw.Handles,AbstractHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\AbstractHandle.cs,ViewDisplayBox,The following statement contains a magic number: displayBox.Inflate(Width/2' Height/2);
Magic Number,MonoHotDraw.Handles,ChangeConnectionHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ChangeConnectionHandle.cs,Draw,The following statement contains a magic number: context.Color = new Cairo.Color (1.0' 0.0' 0.0' 0.8);
Magic Number,MonoHotDraw.Handles,LineConnectionHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\LineConnectionHandle.cs,InvokeEnd,The following statement contains a magic number: if (figure.PointCount > 2 && Index != 0 && Index != (figure.PointCount - 1)) {  				PointD p1 = figure.PointAt (Index - 1);  				PointD p2 = figure.PointAt (Index + 1);  				if (Geometry.LineContainsPoint (p1.X' p1.Y' p2.X' p2.Y' ev.X' ev.Y)) {  					figure.RemovePointAt (Index);  				}  			}
Magic Number,MonoHotDraw.Handles,PixButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PixButtonHandle.cs,DrawSelectionRect,The following statement contains a magic number: Gdk.Point[] points = new Gdk.Point[4];
Magic Number,MonoHotDraw.Handles,PixButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PixButtonHandle.cs,DrawSelectionRect,The following statement contains a magic number: points [2] = new Gdk.Point((int)_selectionRect.X2' (int)_selectionRect.Y2);
Magic Number,MonoHotDraw.Handles,PixButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PixButtonHandle.cs,DrawSelectionRect,The following statement contains a magic number: points [3] = new Gdk.Point((int)_selectionRect.X' (int)_selectionRect.Y2);
Magic Number,MonoHotDraw.Handles,PolyLineHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PolyLineHandle.cs,Draw,The following statement contains a magic number: double middle = rect.Width / 2.0;
Magic Number,MonoHotDraw.Handles,PolyLineHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PolyLineHandle.cs,Draw,The following statement contains a magic number: context.Arc (0.0' 0.0' middle' 0.0' 2.0 * Math.PI);
Magic Number,MonoHotDraw.Handles,PolyLineHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PolyLineHandle.cs,Draw,The following statement contains a magic number: context.Color = new Cairo.Color (0.2' 0.2' 1.0' 0.5);
Magic Number,MonoHotDraw.Handles,PolyLineHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PolyLineHandle.cs,Draw,The following statement contains a magic number: context.Color = new Cairo.Color (0.2' 0.2' 1.0' 0.5);
Magic Number,MonoHotDraw.Handles,PolyLineHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\PolyLineHandle.cs,Draw,The following statement contains a magic number: context.Color = new Cairo.Color (0.2' 0.2' 1.0' 0.5);
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,ToggleButtonHandle,The following statement contains a magic number: Width = 15.0;
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,ToggleButtonHandle,The following statement contains a magic number: Height = 15.0;
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,DrawOn,The following statement contains a magic number: FillColor = new Color(0.5' 0.5' 0.5' 0.3);
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,DrawOn,The following statement contains a magic number: FillColor = new Color(0.5' 0.5' 0.5' 0.3);
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,DrawOn,The following statement contains a magic number: FillColor = new Color(0.5' 0.5' 0.5' 0.3);
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,DrawOn,The following statement contains a magic number: FillColor = new Color(0.5' 0.5' 0.5' 0.3);
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,DrawOn,The following statement contains a magic number: double margin = Width * 0.2;
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,DrawOff,The following statement contains a magic number: FillColor = new Color(1' 1' 0.0' 0.3);
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,DrawOff,The following statement contains a magic number: double margin_w = Width * 0.2;
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,DrawOff,The following statement contains a magic number: double margin_h = Height * 0.2;
Magic Number,MonoHotDraw.Handles,ToggleButtonHandle,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Handles\ToggleButtonHandle.cs,Dot5,The following statement contains a magic number: return Math.Truncate(val) + 0.5;
Magic Number,MonoHotDraw.Locators,CenterLineLocator,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Locators\CenterLineLocator.cs,GetPosition,The following statement contains a magic number: for (int i=0; i<points.Count-1; i++) {                  double len = Geometry.LineSize(points[i]' points[i+1]);                  // when position is less than the lenght of the current line segment                  // that's the right line segment (we use Math.Round to avoid floating                   // point comparison problems)                  if (len != 0 && Math.Round(position' 2) <= Math.Round(len' 2)) {                      double w = points[i+1].X - points[i].X;                      double h = points[i+1].Y - points[i].Y;                                            double x = position * w / len;                      double y = position * h / len;                                            // then we calculate the point inside the poly line.                      PointD middle = new PointD(points[i].X + x' points[i].Y + y);                        // we look for the normal point in order to locate the label.                      PointD normal = new PointD(0.0' 0.0);                      normal.X = -h / len;                      normal.Y = w / len;                                            // then the label is located.                        double finalX = middle.X + normal.X * _distance;                      double finalY = middle.Y + normal.Y * _distance;                        return new PointD(finalX' finalY);                  }                  position -= len;              }
Magic Number,MonoHotDraw.Locators,CenterLineLocator,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Locators\CenterLineLocator.cs,GetPosition,The following statement contains a magic number: for (int i=0; i<points.Count-1; i++) {                  double len = Geometry.LineSize(points[i]' points[i+1]);                  // when position is less than the lenght of the current line segment                  // that's the right line segment (we use Math.Round to avoid floating                   // point comparison problems)                  if (len != 0 && Math.Round(position' 2) <= Math.Round(len' 2)) {                      double w = points[i+1].X - points[i].X;                      double h = points[i+1].Y - points[i].Y;                                            double x = position * w / len;                      double y = position * h / len;                                            // then we calculate the point inside the poly line.                      PointD middle = new PointD(points[i].X + x' points[i].Y + y);                        // we look for the normal point in order to locate the label.                      PointD normal = new PointD(0.0' 0.0);                      normal.X = -h / len;                      normal.Y = w / len;                                            // then the label is located.                        double finalX = middle.X + normal.X * _distance;                      double finalY = middle.Y + normal.Y * _distance;                        return new PointD(finalX' finalY);                  }                  position -= len;              }
Magic Number,MonoHotDraw.Util,CairoFigures,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\CairoFigures.cs,CurvedRectangle,The following statement contains a magic number: if (rect.Width < (radius * 2.0) ) {  				radius = rect.Width/2.0;  			}
Magic Number,MonoHotDraw.Util,CairoFigures,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\CairoFigures.cs,CurvedRectangle,The following statement contains a magic number: if (rect.Width < (radius * 2.0) ) {  				radius = rect.Width/2.0;  			}
Magic Number,MonoHotDraw.Util,CairoFigures,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\CairoFigures.cs,CurvedRectangle,The following statement contains a magic number: if (rect.Height < (radius * 2.0) ) {  				radius = rect.Height/2.0;  			}
Magic Number,MonoHotDraw.Util,CairoFigures,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\CairoFigures.cs,CurvedRectangle,The following statement contains a magic number: if (rect.Height < (radius * 2.0) ) {  				radius = rect.Height/2.0;  			}
Magic Number,MonoHotDraw.Util,CairoFigures,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\CairoFigures.cs,AngleFrame,The following statement contains a magic number: double middleX = rect.Width / 2;
Magic Number,MonoHotDraw.Util,CairoFigures,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\CairoFigures.cs,AngleFrame,The following statement contains a magic number: double middleY = rect.Height / 2;
Magic Number,MonoHotDraw.Util,GdkCairoHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\GdkCairoHelper.cs,CairoColor,The following statement contains a magic number: blue  = Convert.ToDouble (decimal.Round ((decimal) blue' 2));
Magic Number,MonoHotDraw.Util,GdkCairoHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\GdkCairoHelper.cs,CairoColor,The following statement contains a magic number: green = Convert.ToDouble (decimal.Round ((decimal) green' 2));
Magic Number,MonoHotDraw.Util,GdkCairoHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\GdkCairoHelper.cs,CairoColor,The following statement contains a magic number: red   = Convert.ToDouble (decimal.Round ((decimal) red' 2));
Magic Number,MonoHotDraw.Util,GdkCairoHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\GdkCairoHelper.cs,OffsetDot5,The following statement contains a magic number: return new PointD {  				X = Math.Truncate(point.X) + 0.5'  				Y = Math.Truncate(point.Y) + 0.5  			};
Magic Number,MonoHotDraw.Util,GdkCairoHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\GdkCairoHelper.cs,OffsetDot5,The following statement contains a magic number: return new PointD {  				X = Math.Truncate(point.X) + 0.5'  				Y = Math.Truncate(point.Y) + 0.5  			};
Magic Number,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,EdgePointFromAngle,The following statement contains a magic number: double e = 0.0001;
Magic Number,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,EdgePointFromAngle,The following statement contains a magic number: if (Math.Abs (sin) > e) {  				x = (1.0 + cos / Math.Abs (sin)) / 2.0 * r.Width;  				x = Range (0.0' r.Width' x);  			}  			else if (cos >= 0.0) {  				x = r.Width;  			}
Magic Number,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,EdgePointFromAngle,The following statement contains a magic number: if (Math.Abs (cos) > e) {  				y = (1.0 + sin / Math.Abs (cos)) / 2.0 * r.Height;  				y = Range (0.0' r.Height' y);  			}  			else if (sin >= 0.0) {  				y = r.Height;  			}
Magic Number,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineContainsPoint,The following statement contains a magic number: r.Inflate (2.0' 2.0);
Magic Number,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineContainsPoint,The following statement contains a magic number: r.Inflate (2.0' 2.0);
Magic Number,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineContainsPoint,The following statement contains a magic number: if (x1 == x2) {  				return (Math.Abs (px - x1) < 3.0);  			}
Magic Number,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineContainsPoint,The following statement contains a magic number: if (y1 == y2) {  				return (Math.Abs (py - y1) < 3.0);  			}
Magic Number,MonoHotDraw.Util,Geometry,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\Geometry.cs,LineContainsPoint,The following statement contains a magic number: return (Math.Min (Math.Abs (x - px)' Math.Abs (y - py)) < 4.0);
Magic Number,MonoHotDraw.Util,RectangleD,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\RectangleD.cs,OffsetDot5,The following statement contains a magic number: X = Math.Truncate (X) + 0.5;
Magic Number,MonoHotDraw.Util,RectangleD,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\RectangleD.cs,OffsetDot5,The following statement contains a magic number: Y = Math.Truncate (Y) + 0.5;
Magic Number,MonoHotDraw.Util,RectangleD,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\RectangleD.cs,Inflate,The following statement contains a magic number: Width += w * 2.0;
Magic Number,MonoHotDraw.Util,RectangleD,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Util\RectangleD.cs,Inflate,The following statement contains a magic number: Height += h * 2.0;
Magic Number,MonoHotDraw.Tools,DragTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\DragTool.cs,MouseDrag,The following statement contains a magic number: HasMoved = (Math.Abs (ev.X - AnchorX) > 4 || Math.Abs (ev.Y - AnchorX) > 4);
Magic Number,MonoHotDraw.Tools,DragTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\DragTool.cs,MouseDrag,The following statement contains a magic number: HasMoved = (Math.Abs (ev.X - AnchorX) > 4 || Math.Abs (ev.Y - AnchorX) > 4);
Magic Number,MonoHotDraw.Tools,MultiLineTextTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\MultiLineTextTool.cs,MultiLineTextTool,The following statement contains a magic number: _textview.RightMargin = 5;
Magic Number,MonoHotDraw.Tools,MultiLineTextTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\MultiLineTextTool.cs,CalculateTextViewSize,The following statement contains a magic number: int w = (int) Math.Max (r.Width' 10.0) + _textview.RightMargin * 2;
Magic Number,MonoHotDraw.Tools,MultiLineTextTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\MultiLineTextTool.cs,CalculateTextViewSize,The following statement contains a magic number: int w = (int) Math.Max (r.Width' 10.0) + _textview.RightMargin * 2;
Magic Number,MonoHotDraw.Tools,MultiLineTextTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\MultiLineTextTool.cs,CalculateTextViewSize,The following statement contains a magic number: int h = (int) Math.Max (r.Height' 10.0);
Magic Number,MonoHotDraw.Tools,SimpleTextTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\SimpleTextTool.cs,CalculateSizeEntry,The following statement contains a magic number: r.Inflate(5' 5);
Magic Number,MonoHotDraw.Tools,SimpleTextTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\SimpleTextTool.cs,CalculateSizeEntry,The following statement contains a magic number: r.Inflate(5' 5);
Magic Number,MonoHotDraw.Tools,SimpleTextTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\SimpleTextTool.cs,CalculateSizeEntry,The following statement contains a magic number: int w = (int) Math.Max (r.Width' 10.0);
Magic Number,MonoHotDraw.Tools,SimpleTextTool,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Tools\SimpleTextTool.cs,CalculateSizeEntry,The following statement contains a magic number: int h = (int) Math.Max (r.Height' 10.0);
Magic Number,TraceLab.UI.GTK,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\MainWindow.cs,MainWindow,The following statement contains a magic number: m_dockFrame.CompactGuiLevel = 5;
Magic Number,TraceLab.UI.GTK,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\MainWindow.cs,CreateWindow,The following statement contains a magic number: int width = 1000;
Magic Number,TraceLab.UI.GTK,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\MainWindow.cs,CreateWindow,The following statement contains a magic number: int height = 750;
Magic Number,TraceLab.UI.GTK,OpenExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\OpenExperimentAction.cs,OpenExperiment,The following statement contains a magic number: try {                  string extension = filename.Substring (filename.Length - 6);                    if (extension.Equals (".temlx")) {                      isAChallenge = true;                      //It's a crypted file so decrypt it                                   try {                          Stream decryptedFileStream = Crypto.DecryptFile (@filename' @filename);                          experiment = TraceLab.Core.Experiments.ExperimentManager.Load (decryptedFileStream' filename' TraceLab.Core.Components.ComponentsLibrary.Instance);                          string challengePwd = experiment.ExperimentInfo.ChallengePassword;                          string experimentPwd = experiment.ExperimentInfo.ExperimentPassword;                            userPassword = PasswordDialog.TakePwd (applicationContext.MainWindow.WindowShell' challengePwd' experimentPwd);                          if(userPassword != null){                              isPasswordTestPassed = true;                                      experiment.unlockingPassword = userPassword;                          }                                      } catch (Exception ex) {                          Console.WriteLine (ex.ToString ());                      }                                    } else {                      //if it isn't a cryptd file continue with the standard flow                      experiment = TraceLab.Core.Experiments.ExperimentManager.Load (filename' TraceLab.Core.Components.ComponentsLibrary.Instance);                  }                    //Collection<ExperimentNode> c = experiment.Vertices;                  /*                  foreach (ExperimentNode experimentNode in experiment.Vertices)                  {                      string type = experimentNode.GetType().ToString();                      Console.WriteLine(type);                        if(experimentNode.GetType().Equals(TraceLab.Core.Experiments.ChallengeNode)){                          ChallengeNode node = experimentNode as ChallengeNode;                                 }                  }     */                  if (isPasswordTestPassed || !isAChallenge) { //TODO check this if condition                      ApplicationViewModel newApplicationViewModel = ApplicationViewModel.CreateNewApplicationViewModel (applicationContext.Application' experiment);                      RecentExperimentsHelper.UpdateRecentExperimentList (TraceLab.Core.Settings.Settings.RecentExperimentsPath' experiment.ExperimentInfo.FilePath);                      applicationContext.OpenInWindow (newApplicationViewModel);                  }                    // HERZUM SPRINT 3: TLAB-86                  string typeBaseline = experiment.ExperimentInfo.ExperimentResultsUnittype;                  string valueBaseline = experiment.ExperimentInfo.ExperimentResultsUnitvalue;                  if (valueBaseline!=null)                      applicationContext.MainWindow.WorkspaceWindowPad.ShowBaseline (typeBaseline' valueBaseline);                  // END HERZUM SPRINT 3: TLAB-86                } catch (TraceLab.Core.Exceptions.ExperimentLoadException ex) {                  string msg = String.Format ("Unable to open the file {0}. Error: {1}"' filename' ex.Message);                  NLog.LogManager.GetCurrentClassLogger ().Error (msg);              }
Magic Number,TraceLab.UI.GTK,SaveExperimentAction,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Actions\File\SaveExperimentAction.cs,Activated,The following statement contains a magic number: if (experiment != null)              {                  string file = null;                  if (String.IsNullOrEmpty(experiment.ExperimentInfo.FilePath))                  {                      // if file path is not set show save as dialog                      file = FileDialogs.ShowSaveAsDialog(m_applicationContext.MainWindow.WindowShell);                  }                  else                  {                      file = experiment.ExperimentInfo.FilePath;                  }                                    if (file != null)                  {                      try                      {                          string extension = file.Substring (file.Length - 6);                            if (extension.Equals (".temlx")) {                             ExperimentManager.SaveToCrypt(experiment' file);                          } else {                              ExperimentManager.Save(experiment' file);                          }                      }                      catch (System.IO.IOException e)                      {                          FileDialogs.ShowSaveErrorDialog(m_applicationContext.MainWindow.WindowShell' e.Message' file);                      }                      catch (UnauthorizedAccessException e)                      {                          FileDialogs.ShowSaveErrorDialog(m_applicationContext.MainWindow.WindowShell' e.Message' file);                      }                      catch (Exception e)                      {                          FileDialogs.ShowSaveErrorDialog(m_applicationContext.MainWindow.WindowShell' e.Message' file);                      }                  }              }
Magic Number,TraceLab.UI.GTK,OutputWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\OutputWindow\OutputWindowPad.cs,Initialize,The following statement contains a magic number: outputDockingWindow.DefaultHeight = 100;
Magic Number,TraceLab.UI.GTK,OutputWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\OutputWindow\OutputWindowPad.cs,CreateOutputView,The following statement contains a magic number: treeView.AppendColumn("Source"' textRenderer' "text"' 2);
Magic Number,TraceLab.UI.GTK,OutputWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\OutputWindow\OutputWindowPad.cs,CreateOutputView,The following statement contains a magic number: treeView.AppendColumn("Message"' wrappingTextRenderer' "text"' 3);
Magic Number,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,CreateWorkspaceView,The following statement contains a magic number: w2.Position = 2;
Magic Number,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,DisplayGTKWindow,The following statement contains a magic number: if(dockingWindow == null)               {                  dockingWindow = m_dockFrame.AddItem(windowTitle);                  dockingWindow.DefaultLocation = "Workspace/Bottom";                  dockingWindow.Behavior = DockItemBehavior.Normal;                    dockingWindow.Visible = true;                    //Float window                  m_dockFrame.SetStatus(dockingWindow' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = dockingWindow.FloatingPosition;                  floatRectangle.Width = 350;                  floatRectangle.Height = 180;                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = 150;                  floatRectangle.Y = 150;                  dockingWindow.SetFloatMode(floatRectangle);              }               else              {                  //if already exists just set it visible                  dockingWindow.Visible = true;              }
Magic Number,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,DisplayGTKWindow,The following statement contains a magic number: if(dockingWindow == null)               {                  dockingWindow = m_dockFrame.AddItem(windowTitle);                  dockingWindow.DefaultLocation = "Workspace/Bottom";                  dockingWindow.Behavior = DockItemBehavior.Normal;                    dockingWindow.Visible = true;                    //Float window                  m_dockFrame.SetStatus(dockingWindow' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = dockingWindow.FloatingPosition;                  floatRectangle.Width = 350;                  floatRectangle.Height = 180;                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = 150;                  floatRectangle.Y = 150;                  dockingWindow.SetFloatMode(floatRectangle);              }               else              {                  //if already exists just set it visible                  dockingWindow.Visible = true;              }
Magic Number,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,DisplayGTKWindow,The following statement contains a magic number: if(dockingWindow == null)               {                  dockingWindow = m_dockFrame.AddItem(windowTitle);                  dockingWindow.DefaultLocation = "Workspace/Bottom";                  dockingWindow.Behavior = DockItemBehavior.Normal;                    dockingWindow.Visible = true;                    //Float window                  m_dockFrame.SetStatus(dockingWindow' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = dockingWindow.FloatingPosition;                  floatRectangle.Width = 350;                  floatRectangle.Height = 180;                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = 150;                  floatRectangle.Y = 150;                  dockingWindow.SetFloatMode(floatRectangle);              }               else              {                  //if already exists just set it visible                  dockingWindow.Visible = true;              }
Magic Number,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,DisplayGTKWindow,The following statement contains a magic number: if(dockingWindow == null)               {                  dockingWindow = m_dockFrame.AddItem(windowTitle);                  dockingWindow.DefaultLocation = "Workspace/Bottom";                  dockingWindow.Behavior = DockItemBehavior.Normal;                    dockingWindow.Visible = true;                    //Float window                  m_dockFrame.SetStatus(dockingWindow' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = dockingWindow.FloatingPosition;                  floatRectangle.Width = 350;                  floatRectangle.Height = 180;                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = 150;                  floatRectangle.Y = 150;                  dockingWindow.SetFloatMode(floatRectangle);              }               else              {                  //if already exists just set it visible                  dockingWindow.Visible = true;              }
Magic Number,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,RenderValue,The following statement contains a magic number: WorkspaceUnit workspaceUnit = (WorkspaceUnit)model.GetValue(iter' 2);
Magic Number,TraceLab.UI.GTK,WorkspaceWindowPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WorkspaceWindow\WorkspaceWindowPad.cs,RenderViewerIcon,The following statement contains a magic number: WorkspaceUnit workspaceUnit = (WorkspaceUnit)model.GetValue(iter' 2);
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,HandleDragDataReceived,The following statement contains a magic number: if(treeView != null && treeView.Selection.GetSelected(out selectedItem))               {                  ComponentsLibraryNode selectedNode = treeView.Model.GetValue(selectedItem' 0) as ComponentsLibraryNode;                    Cairo.PointD translation = m_experimentCanvasWidget.ExperimentCanvas.View.ViewToDrawing(args.X' args.Y);                      if (selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid) && isChallengeExp()){                      Drag.Finish (args.Context' true' false' args.Time);                      return;                  } else if(selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid)){                      m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge = "True";                      m_applicationContext.MainWindow.ExperimentCanvasPad.UpdateExperimentToolbarForChallenge ();                  }                    ExperimentNode node = null;                    if (m_subExperiment != null)                      node = m_subExperiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                  else                      node = m_applicationViewModel.Experiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                    m_experimentDrawer.DrawComponent (node' true);                    // HERZUM SPRINT 1.1 IF                  if (node is ExperimentDecisionNode) {                        BasicNodeControl decisionControl;                      double x = 0;                      if (m_applicationContext.NodeControlFactory.TryGetNodeControl (node' out decisionControl)) {                          x = decisionControl.DisplayBox.X + decisionControl.DisplayBox.Width / 2 - 10;                      }                        ExperimentNode exitDecisionNode = null;                      // HERZUM SPRINT 2.0: TLAB-148                      IEnumerable<ExperimentNodeConnection> edges = decisionControl.ExperimentNode.Owner.Edges;                      // END HERZUM SPRINT 2.0: TLAB-148                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Source.Equals (decisionControl.ExperimentNode)) {                               if (edge.Target is ExitDecisionNode) {                                  edge.Target.Data.X = x - 10;                                  exitDecisionNode = edge.Target;                              } else if (edge.Target is ScopeNode) {                                  if (edge.Target.Data.Metadata.Label.Equals ("Scope 1"))                                      edge.Target.Data.X = x - 50 - 190;                                  else                                       edge.Target.Data.X = x + 50;                              }                              m_experimentDrawer.DrawComponent (edge.Target' true);                              m_experimentDrawer.DrawEdge (edge' false);                          }                      }                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Target.Equals (exitDecisionNode) && !edge.Source.Equals (node))                              m_experimentDrawer.DrawEdge (edge' false);                      }                  }                  // END HERZUM SPRINT 1.1 IF              }
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,HandleDragDataReceived,The following statement contains a magic number: if(treeView != null && treeView.Selection.GetSelected(out selectedItem))               {                  ComponentsLibraryNode selectedNode = treeView.Model.GetValue(selectedItem' 0) as ComponentsLibraryNode;                    Cairo.PointD translation = m_experimentCanvasWidget.ExperimentCanvas.View.ViewToDrawing(args.X' args.Y);                      if (selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid) && isChallengeExp()){                      Drag.Finish (args.Context' true' false' args.Time);                      return;                  } else if(selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid)){                      m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge = "True";                      m_applicationContext.MainWindow.ExperimentCanvasPad.UpdateExperimentToolbarForChallenge ();                  }                    ExperimentNode node = null;                    if (m_subExperiment != null)                      node = m_subExperiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                  else                      node = m_applicationViewModel.Experiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                    m_experimentDrawer.DrawComponent (node' true);                    // HERZUM SPRINT 1.1 IF                  if (node is ExperimentDecisionNode) {                        BasicNodeControl decisionControl;                      double x = 0;                      if (m_applicationContext.NodeControlFactory.TryGetNodeControl (node' out decisionControl)) {                          x = decisionControl.DisplayBox.X + decisionControl.DisplayBox.Width / 2 - 10;                      }                        ExperimentNode exitDecisionNode = null;                      // HERZUM SPRINT 2.0: TLAB-148                      IEnumerable<ExperimentNodeConnection> edges = decisionControl.ExperimentNode.Owner.Edges;                      // END HERZUM SPRINT 2.0: TLAB-148                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Source.Equals (decisionControl.ExperimentNode)) {                               if (edge.Target is ExitDecisionNode) {                                  edge.Target.Data.X = x - 10;                                  exitDecisionNode = edge.Target;                              } else if (edge.Target is ScopeNode) {                                  if (edge.Target.Data.Metadata.Label.Equals ("Scope 1"))                                      edge.Target.Data.X = x - 50 - 190;                                  else                                       edge.Target.Data.X = x + 50;                              }                              m_experimentDrawer.DrawComponent (edge.Target' true);                              m_experimentDrawer.DrawEdge (edge' false);                          }                      }                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Target.Equals (exitDecisionNode) && !edge.Source.Equals (node))                              m_experimentDrawer.DrawEdge (edge' false);                      }                  }                  // END HERZUM SPRINT 1.1 IF              }
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,HandleDragDataReceived,The following statement contains a magic number: if(treeView != null && treeView.Selection.GetSelected(out selectedItem))               {                  ComponentsLibraryNode selectedNode = treeView.Model.GetValue(selectedItem' 0) as ComponentsLibraryNode;                    Cairo.PointD translation = m_experimentCanvasWidget.ExperimentCanvas.View.ViewToDrawing(args.X' args.Y);                      if (selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid) && isChallengeExp()){                      Drag.Finish (args.Context' true' false' args.Time);                      return;                  } else if(selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid)){                      m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge = "True";                      m_applicationContext.MainWindow.ExperimentCanvasPad.UpdateExperimentToolbarForChallenge ();                  }                    ExperimentNode node = null;                    if (m_subExperiment != null)                      node = m_subExperiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                  else                      node = m_applicationViewModel.Experiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                    m_experimentDrawer.DrawComponent (node' true);                    // HERZUM SPRINT 1.1 IF                  if (node is ExperimentDecisionNode) {                        BasicNodeControl decisionControl;                      double x = 0;                      if (m_applicationContext.NodeControlFactory.TryGetNodeControl (node' out decisionControl)) {                          x = decisionControl.DisplayBox.X + decisionControl.DisplayBox.Width / 2 - 10;                      }                        ExperimentNode exitDecisionNode = null;                      // HERZUM SPRINT 2.0: TLAB-148                      IEnumerable<ExperimentNodeConnection> edges = decisionControl.ExperimentNode.Owner.Edges;                      // END HERZUM SPRINT 2.0: TLAB-148                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Source.Equals (decisionControl.ExperimentNode)) {                               if (edge.Target is ExitDecisionNode) {                                  edge.Target.Data.X = x - 10;                                  exitDecisionNode = edge.Target;                              } else if (edge.Target is ScopeNode) {                                  if (edge.Target.Data.Metadata.Label.Equals ("Scope 1"))                                      edge.Target.Data.X = x - 50 - 190;                                  else                                       edge.Target.Data.X = x + 50;                              }                              m_experimentDrawer.DrawComponent (edge.Target' true);                              m_experimentDrawer.DrawEdge (edge' false);                          }                      }                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Target.Equals (exitDecisionNode) && !edge.Source.Equals (node))                              m_experimentDrawer.DrawEdge (edge' false);                      }                  }                  // END HERZUM SPRINT 1.1 IF              }
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,HandleDragDataReceived,The following statement contains a magic number: if(treeView != null && treeView.Selection.GetSelected(out selectedItem))               {                  ComponentsLibraryNode selectedNode = treeView.Model.GetValue(selectedItem' 0) as ComponentsLibraryNode;                    Cairo.PointD translation = m_experimentCanvasWidget.ExperimentCanvas.View.ViewToDrawing(args.X' args.Y);                      if (selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid) && isChallengeExp()){                      Drag.Finish (args.Context' true' false' args.Time);                      return;                  } else if(selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid)){                      m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge = "True";                      m_applicationContext.MainWindow.ExperimentCanvasPad.UpdateExperimentToolbarForChallenge ();                  }                    ExperimentNode node = null;                    if (m_subExperiment != null)                      node = m_subExperiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                  else                      node = m_applicationViewModel.Experiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                    m_experimentDrawer.DrawComponent (node' true);                    // HERZUM SPRINT 1.1 IF                  if (node is ExperimentDecisionNode) {                        BasicNodeControl decisionControl;                      double x = 0;                      if (m_applicationContext.NodeControlFactory.TryGetNodeControl (node' out decisionControl)) {                          x = decisionControl.DisplayBox.X + decisionControl.DisplayBox.Width / 2 - 10;                      }                        ExperimentNode exitDecisionNode = null;                      // HERZUM SPRINT 2.0: TLAB-148                      IEnumerable<ExperimentNodeConnection> edges = decisionControl.ExperimentNode.Owner.Edges;                      // END HERZUM SPRINT 2.0: TLAB-148                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Source.Equals (decisionControl.ExperimentNode)) {                               if (edge.Target is ExitDecisionNode) {                                  edge.Target.Data.X = x - 10;                                  exitDecisionNode = edge.Target;                              } else if (edge.Target is ScopeNode) {                                  if (edge.Target.Data.Metadata.Label.Equals ("Scope 1"))                                      edge.Target.Data.X = x - 50 - 190;                                  else                                       edge.Target.Data.X = x + 50;                              }                              m_experimentDrawer.DrawComponent (edge.Target' true);                              m_experimentDrawer.DrawEdge (edge' false);                          }                      }                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Target.Equals (exitDecisionNode) && !edge.Source.Equals (node))                              m_experimentDrawer.DrawEdge (edge' false);                      }                  }                  // END HERZUM SPRINT 1.1 IF              }
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,HandleDragDataReceived,The following statement contains a magic number: if(treeView != null && treeView.Selection.GetSelected(out selectedItem))               {                  ComponentsLibraryNode selectedNode = treeView.Model.GetValue(selectedItem' 0) as ComponentsLibraryNode;                    Cairo.PointD translation = m_experimentCanvasWidget.ExperimentCanvas.View.ViewToDrawing(args.X' args.Y);                      if (selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid) && isChallengeExp()){                      Drag.Finish (args.Context' true' false' args.Time);                      return;                  } else if(selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid)){                      m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge = "True";                      m_applicationContext.MainWindow.ExperimentCanvasPad.UpdateExperimentToolbarForChallenge ();                  }                    ExperimentNode node = null;                    if (m_subExperiment != null)                      node = m_subExperiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                  else                      node = m_applicationViewModel.Experiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                    m_experimentDrawer.DrawComponent (node' true);                    // HERZUM SPRINT 1.1 IF                  if (node is ExperimentDecisionNode) {                        BasicNodeControl decisionControl;                      double x = 0;                      if (m_applicationContext.NodeControlFactory.TryGetNodeControl (node' out decisionControl)) {                          x = decisionControl.DisplayBox.X + decisionControl.DisplayBox.Width / 2 - 10;                      }                        ExperimentNode exitDecisionNode = null;                      // HERZUM SPRINT 2.0: TLAB-148                      IEnumerable<ExperimentNodeConnection> edges = decisionControl.ExperimentNode.Owner.Edges;                      // END HERZUM SPRINT 2.0: TLAB-148                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Source.Equals (decisionControl.ExperimentNode)) {                               if (edge.Target is ExitDecisionNode) {                                  edge.Target.Data.X = x - 10;                                  exitDecisionNode = edge.Target;                              } else if (edge.Target is ScopeNode) {                                  if (edge.Target.Data.Metadata.Label.Equals ("Scope 1"))                                      edge.Target.Data.X = x - 50 - 190;                                  else                                       edge.Target.Data.X = x + 50;                              }                              m_experimentDrawer.DrawComponent (edge.Target' true);                              m_experimentDrawer.DrawEdge (edge' false);                          }                      }                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Target.Equals (exitDecisionNode) && !edge.Source.Equals (node))                              m_experimentDrawer.DrawEdge (edge' false);                      }                  }                  // END HERZUM SPRINT 1.1 IF              }
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,HandleDragDataReceived,The following statement contains a magic number: if(treeView != null && treeView.Selection.GetSelected(out selectedItem))               {                  ComponentsLibraryNode selectedNode = treeView.Model.GetValue(selectedItem' 0) as ComponentsLibraryNode;                    Cairo.PointD translation = m_experimentCanvasWidget.ExperimentCanvas.View.ViewToDrawing(args.X' args.Y);                      if (selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid) && isChallengeExp()){                      Drag.Finish (args.Context' true' false' args.Time);                      return;                  } else if(selectedNode.Data.ID.Equals (ChallengeMetadataDefinition.ChallengeScopeGuid)){                      m_applicationViewModel.Experiment.ExperimentInfo.IsChallenge = "True";                      m_applicationContext.MainWindow.ExperimentCanvasPad.UpdateExperimentToolbarForChallenge ();                  }                    ExperimentNode node = null;                    if (m_subExperiment != null)                      node = m_subExperiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                  else                      node = m_applicationViewModel.Experiment.AddComponentFromDefinition (selectedNode.Data' translation.X' translation.Y);                    m_experimentDrawer.DrawComponent (node' true);                    // HERZUM SPRINT 1.1 IF                  if (node is ExperimentDecisionNode) {                        BasicNodeControl decisionControl;                      double x = 0;                      if (m_applicationContext.NodeControlFactory.TryGetNodeControl (node' out decisionControl)) {                          x = decisionControl.DisplayBox.X + decisionControl.DisplayBox.Width / 2 - 10;                      }                        ExperimentNode exitDecisionNode = null;                      // HERZUM SPRINT 2.0: TLAB-148                      IEnumerable<ExperimentNodeConnection> edges = decisionControl.ExperimentNode.Owner.Edges;                      // END HERZUM SPRINT 2.0: TLAB-148                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Source.Equals (decisionControl.ExperimentNode)) {                               if (edge.Target is ExitDecisionNode) {                                  edge.Target.Data.X = x - 10;                                  exitDecisionNode = edge.Target;                              } else if (edge.Target is ScopeNode) {                                  if (edge.Target.Data.Metadata.Label.Equals ("Scope 1"))                                      edge.Target.Data.X = x - 50 - 190;                                  else                                       edge.Target.Data.X = x + 50;                              }                              m_experimentDrawer.DrawComponent (edge.Target' true);                              m_experimentDrawer.DrawEdge (edge' false);                          }                      }                        // HERZUM SPRINT 2.0: TLAB-148                      // foreach (ExperimentNodeConnection edge in m_applicationViewModel.Experiment.Edges){                      foreach (ExperimentNodeConnection edge in edges) {                          // END HERZUM SPRINT 2.0: TLAB-148                          if (edge.Target.Equals (exitDecisionNode) && !edge.Source.Equals (node))                              m_experimentDrawer.DrawEdge (edge' false);                      }                  }                  // END HERZUM SPRINT 1.1 IF              }
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,AddScopeInDecisionComponent,The following statement contains a magic number: if (m_subExperiment != null)                  scopeNode = m_subExperiment.AddComponentFromDefinition (meta_def'                                                                           x + 230' translation.Y + 120);              else                  scopeNode = m_applicationViewModel.Experiment.AddComponentFromDefinition (meta_def' x + 230' translation.Y + 120);
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,AddScopeInDecisionComponent,The following statement contains a magic number: if (m_subExperiment != null)                  scopeNode = m_subExperiment.AddComponentFromDefinition (meta_def'                                                                           x + 230' translation.Y + 120);              else                  scopeNode = m_applicationViewModel.Experiment.AddComponentFromDefinition (meta_def' x + 230' translation.Y + 120);
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,AddScopeInDecisionComponent,The following statement contains a magic number: if (m_subExperiment != null)                  scopeNode = m_subExperiment.AddComponentFromDefinition (meta_def'                                                                           x + 230' translation.Y + 120);              else                  scopeNode = m_applicationViewModel.Experiment.AddComponentFromDefinition (meta_def' x + 230' translation.Y + 120);
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasPad.cs,AddScopeInDecisionComponent,The following statement contains a magic number: if (m_subExperiment != null)                  scopeNode = m_subExperiment.AddComponentFromDefinition (meta_def'                                                                           x + 230' translation.Y + 120);              else                  scopeNode = m_applicationViewModel.Experiment.AddComponentFromDefinition (meta_def' x + 230' translation.Y + 120);
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,OnInfoToggled,The following statement contains a magic number: if(args.Active)               {                  // get the default location for the floating window from the mouse event                   // the location is relative to 0.0 screen origin point                  int defaultX = 500;                  int defaultY = 500;                  if(args.MouseEvent != null)                   {                      Gdk.EventButton gdkEvent = args.MouseEvent.GdkEvent as Gdk.EventButton;                      if(gdkEvent != null)                       {                          defaultX = (int)gdkEvent.XRoot;                          defaultY = (int)gdkEvent.YRoot;                      }                  }                    m_applicationContext.MainWindow.ShowComponentInfoPad(this' defaultX' defaultY' ToggleOffOnInfoClosed);              }               else              {                  m_applicationContext.MainWindow.HideComponentInfoPad(this);              }
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,OnInfoToggled,The following statement contains a magic number: if(args.Active)               {                  // get the default location for the floating window from the mouse event                   // the location is relative to 0.0 screen origin point                  int defaultX = 500;                  int defaultY = 500;                  if(args.MouseEvent != null)                   {                      Gdk.EventButton gdkEvent = args.MouseEvent.GdkEvent as Gdk.EventButton;                      if(gdkEvent != null)                       {                          defaultX = (int)gdkEvent.XRoot;                          defaultY = (int)gdkEvent.YRoot;                      }                  }                    m_applicationContext.MainWindow.ShowComponentInfoPad(this' defaultX' defaultY' ToggleOffOnInfoClosed);              }               else              {                  m_applicationContext.MainWindow.HideComponentInfoPad(this);              }
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawInputndicator,The following statement contains a magic number: RelativeLocator locator = new RelativeLocator(-0.03' -0.1);
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawInputndicator,The following statement contains a magic number: RelativeLocator locator = new RelativeLocator(-0.03' -0.1);
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawInputndicator,The following statement contains a magic number: double l = 4;
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawInputndicator,The following statement contains a magic number: double s = 0.4;
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawInputndicator,The following statement contains a magic number: context.RelMoveTo (new Distance (3' 3));
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawInputndicator,The following statement contains a magic number: context.RelMoveTo (new Distance (3' 3));
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawOutputndicator,The following statement contains a magic number: RelativeLocator locator = new RelativeLocator(-0.04' 1.2);
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawOutputndicator,The following statement contains a magic number: RelativeLocator locator = new RelativeLocator(-0.04' 1.2);
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawOutputndicator,The following statement contains a magic number: double l = 4;
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawOutputndicator,The following statement contains a magic number: double s = 0.4;
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawOutputndicator,The following statement contains a magic number: context.RelMoveTo (new Distance (3' -3));
Magic Number,TraceLab.UI.GTK,ComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentControl.cs,DrawOutputndicator,The following statement contains a magic number: context.RelMoveTo (new Distance (3' -3));
Magic Number,TraceLab.UI.GTK,ExperimentProgressBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentProgressBar.cs,SetError,The following statement contains a magic number: Gtk.Application.Invoke(delegate               {                  if(hasError == true)                   {                      Gdk.Color col = new Gdk.Color(255' 0' 0);                      ModifyFg(Gtk.StateType.Normal' col);                  }                   else                   {                      Gdk.Color col = new Gdk.Color(0' 0' 0);                      ModifyFg(Gtk.StateType.Normal' col);                  }                  m_hasError = hasError;              });
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetInputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Input.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore inputStore = new Gtk.NodeStore(typeof(IOItemNode));                    Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    // HERZUM SPRINT 4.2: TLAB-226                  // HERZUM SPRINT 5: TLAB-242                  colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  //textRenderer.CellBackground = "grey";                  // END HERZUM SPRINT 4.2: TLAB-226                    //inputs                  // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241;                  t_Input = this.inputView.AppendColumn( Convert.ToChar (187) + " Input"' textRenderer' "text"' 0);                  t_Input.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_InputMapped=CreateInputMappingColumnWithComboBox (inputStore' "Mapped to");                  t_InputMapped.Resizable = true;                  inputView.AppendColumn(t_InputMapped);                  t_InputType=this.inputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_InputType.Resizable = true;                  //END HERZUM BUG FIX TLAB-255                    //prepare input and output store                  // HERZUM BUG FIX: alignment input-output TLAB-255                  int currentLengthInput=0;                  int currentLengthInputMapped=0;                  foreach(IOItem item in m_metadata.IOSpec.Input.Values)                   {                      inputStore.AddNode(new IOItemNode(item));                      currentLengthInput = item.IOItemDefinition.Name.Length;                      currentLengthInputMapped = item.MappedTo.Length;                      if (currentLengthInput>maxLengthInput)                          maxLengthInput = currentLengthInput;                      if (currentLengthInputMapped > maxLengthInputMapped)                          maxLengthInputMapped = currentLengthInputMapped;                  }                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    inputView.NodeStore = inputStore;                    //disables/enables the controls                  inputView.Sensitive = isEditable;                    inputView.HoverSelection = true;                  inputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  inputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetInputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Input.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore inputStore = new Gtk.NodeStore(typeof(IOItemNode));                    Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    // HERZUM SPRINT 4.2: TLAB-226                  // HERZUM SPRINT 5: TLAB-242                  colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  //textRenderer.CellBackground = "grey";                  // END HERZUM SPRINT 4.2: TLAB-226                    //inputs                  // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241;                  t_Input = this.inputView.AppendColumn( Convert.ToChar (187) + " Input"' textRenderer' "text"' 0);                  t_Input.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_InputMapped=CreateInputMappingColumnWithComboBox (inputStore' "Mapped to");                  t_InputMapped.Resizable = true;                  inputView.AppendColumn(t_InputMapped);                  t_InputType=this.inputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_InputType.Resizable = true;                  //END HERZUM BUG FIX TLAB-255                    //prepare input and output store                  // HERZUM BUG FIX: alignment input-output TLAB-255                  int currentLengthInput=0;                  int currentLengthInputMapped=0;                  foreach(IOItem item in m_metadata.IOSpec.Input.Values)                   {                      inputStore.AddNode(new IOItemNode(item));                      currentLengthInput = item.IOItemDefinition.Name.Length;                      currentLengthInputMapped = item.MappedTo.Length;                      if (currentLengthInput>maxLengthInput)                          maxLengthInput = currentLengthInput;                      if (currentLengthInputMapped > maxLengthInputMapped)                          maxLengthInputMapped = currentLengthInputMapped;                  }                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    inputView.NodeStore = inputStore;                    //disables/enables the controls                  inputView.Sensitive = isEditable;                    inputView.HoverSelection = true;                  inputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  inputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetInputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Input.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore inputStore = new Gtk.NodeStore(typeof(IOItemNode));                    Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    // HERZUM SPRINT 4.2: TLAB-226                  // HERZUM SPRINT 5: TLAB-242                  colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  //textRenderer.CellBackground = "grey";                  // END HERZUM SPRINT 4.2: TLAB-226                    //inputs                  // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241;                  t_Input = this.inputView.AppendColumn( Convert.ToChar (187) + " Input"' textRenderer' "text"' 0);                  t_Input.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_InputMapped=CreateInputMappingColumnWithComboBox (inputStore' "Mapped to");                  t_InputMapped.Resizable = true;                  inputView.AppendColumn(t_InputMapped);                  t_InputType=this.inputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_InputType.Resizable = true;                  //END HERZUM BUG FIX TLAB-255                    //prepare input and output store                  // HERZUM BUG FIX: alignment input-output TLAB-255                  int currentLengthInput=0;                  int currentLengthInputMapped=0;                  foreach(IOItem item in m_metadata.IOSpec.Input.Values)                   {                      inputStore.AddNode(new IOItemNode(item));                      currentLengthInput = item.IOItemDefinition.Name.Length;                      currentLengthInputMapped = item.MappedTo.Length;                      if (currentLengthInput>maxLengthInput)                          maxLengthInput = currentLengthInput;                      if (currentLengthInputMapped > maxLengthInputMapped)                          maxLengthInputMapped = currentLengthInputMapped;                  }                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    inputView.NodeStore = inputStore;                    //disables/enables the controls                  inputView.Sensitive = isEditable;                    inputView.HoverSelection = true;                  inputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  inputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetInputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Input.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore inputStore = new Gtk.NodeStore(typeof(IOItemNode));                    Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    // HERZUM SPRINT 4.2: TLAB-226                  // HERZUM SPRINT 5: TLAB-242                  colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  //textRenderer.CellBackground = "grey";                  // END HERZUM SPRINT 4.2: TLAB-226                    //inputs                  // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241;                  t_Input = this.inputView.AppendColumn( Convert.ToChar (187) + " Input"' textRenderer' "text"' 0);                  t_Input.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_InputMapped=CreateInputMappingColumnWithComboBox (inputStore' "Mapped to");                  t_InputMapped.Resizable = true;                  inputView.AppendColumn(t_InputMapped);                  t_InputType=this.inputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_InputType.Resizable = true;                  //END HERZUM BUG FIX TLAB-255                    //prepare input and output store                  // HERZUM BUG FIX: alignment input-output TLAB-255                  int currentLengthInput=0;                  int currentLengthInputMapped=0;                  foreach(IOItem item in m_metadata.IOSpec.Input.Values)                   {                      inputStore.AddNode(new IOItemNode(item));                      currentLengthInput = item.IOItemDefinition.Name.Length;                      currentLengthInputMapped = item.MappedTo.Length;                      if (currentLengthInput>maxLengthInput)                          maxLengthInput = currentLengthInput;                      if (currentLengthInputMapped > maxLengthInputMapped)                          maxLengthInputMapped = currentLengthInputMapped;                  }                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    inputView.NodeStore = inputStore;                    //disables/enables the controls                  inputView.Sensitive = isEditable;                    inputView.HoverSelection = true;                  inputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  inputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetInputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Input.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore inputStore = new Gtk.NodeStore(typeof(IOItemNode));                    Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    // HERZUM SPRINT 4.2: TLAB-226                  // HERZUM SPRINT 5: TLAB-242                  colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  //textRenderer.CellBackground = "grey";                  // END HERZUM SPRINT 4.2: TLAB-226                    //inputs                  // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241;                  t_Input = this.inputView.AppendColumn( Convert.ToChar (187) + " Input"' textRenderer' "text"' 0);                  t_Input.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_InputMapped=CreateInputMappingColumnWithComboBox (inputStore' "Mapped to");                  t_InputMapped.Resizable = true;                  inputView.AppendColumn(t_InputMapped);                  t_InputType=this.inputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_InputType.Resizable = true;                  //END HERZUM BUG FIX TLAB-255                    //prepare input and output store                  // HERZUM BUG FIX: alignment input-output TLAB-255                  int currentLengthInput=0;                  int currentLengthInputMapped=0;                  foreach(IOItem item in m_metadata.IOSpec.Input.Values)                   {                      inputStore.AddNode(new IOItemNode(item));                      currentLengthInput = item.IOItemDefinition.Name.Length;                      currentLengthInputMapped = item.MappedTo.Length;                      if (currentLengthInput>maxLengthInput)                          maxLengthInput = currentLengthInput;                      if (currentLengthInputMapped > maxLengthInputMapped)                          maxLengthInputMapped = currentLengthInputMapped;                  }                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    inputView.NodeStore = inputStore;                    //disables/enables the controls                  inputView.Sensitive = isEditable;                    inputView.HoverSelection = true;                  inputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  inputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetOutputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Output.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore outputStore = new Gtk.NodeStore(typeof(IOItemNode));                  Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    Gtk.CellRendererText editableTextRenderer = new CellRendererText();                  editableTextRenderer.Editable = isEditable;                  editableTextRenderer.Edited += delegate(object o' EditedArgs args) {                      IOItemNode n = (IOItemNode)outputStore.GetNode (new TreePath (args.Path));                      n.MappedTo = args.NewText;                      RefreshIOHighlightInExperiment(n.MappedTo);                  };                    // HERZUM SPRINT 4.2: TLAB-226                  //textRenderer.CellBackground = "grey";                  // HERZUM SPRINT 5: TLAB-242                  Gdk.Color colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  // END HERZUM SPRINT 4.2: TLAB-226                     // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241                  t_Output = this.outputView.AppendColumn(Convert.ToChar(171) + " Output"' textRenderer' "text"' 0);                  t_Output.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_OutputAs=this.outputView.AppendColumn("Output as"' editableTextRenderer' "text"' 1);                  t_OutputAs.Resizable = true;                  t_OutputType=this.outputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_OutputType.Resizable = true;                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    int currentLengthOutput;                  int currentLengthOutputAs;                  foreach(IOItem item in m_metadata.IOSpec.Output.Values)                   {                      outputStore.AddNode(new IOItemNode(item));                      // HERZUM BUG FIX: alignment input-output TLAB-255                      currentLengthOutput = item.IOItemDefinition.Name.Length;                      currentLengthOutputAs = item.MappedTo.Length;                      if (currentLengthOutput>maxLengthOutput)                          maxLengthOutput = currentLengthOutput;                      if (currentLengthOutputAs>maxLengthOutputAs)                          maxLengthOutputAs = currentLengthOutputAs;                      // END HERZUM BUG FIX: alignment input-output TLAB-255                  }                    outputView.NodeStore = outputStore;                                    //disables/enables the controls                  outputView.Sensitive = isEditable;                    outputView.HoverSelection = true;                  outputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  outputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetOutputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Output.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore outputStore = new Gtk.NodeStore(typeof(IOItemNode));                  Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    Gtk.CellRendererText editableTextRenderer = new CellRendererText();                  editableTextRenderer.Editable = isEditable;                  editableTextRenderer.Edited += delegate(object o' EditedArgs args) {                      IOItemNode n = (IOItemNode)outputStore.GetNode (new TreePath (args.Path));                      n.MappedTo = args.NewText;                      RefreshIOHighlightInExperiment(n.MappedTo);                  };                    // HERZUM SPRINT 4.2: TLAB-226                  //textRenderer.CellBackground = "grey";                  // HERZUM SPRINT 5: TLAB-242                  Gdk.Color colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  // END HERZUM SPRINT 4.2: TLAB-226                     // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241                  t_Output = this.outputView.AppendColumn(Convert.ToChar(171) + " Output"' textRenderer' "text"' 0);                  t_Output.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_OutputAs=this.outputView.AppendColumn("Output as"' editableTextRenderer' "text"' 1);                  t_OutputAs.Resizable = true;                  t_OutputType=this.outputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_OutputType.Resizable = true;                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    int currentLengthOutput;                  int currentLengthOutputAs;                  foreach(IOItem item in m_metadata.IOSpec.Output.Values)                   {                      outputStore.AddNode(new IOItemNode(item));                      // HERZUM BUG FIX: alignment input-output TLAB-255                      currentLengthOutput = item.IOItemDefinition.Name.Length;                      currentLengthOutputAs = item.MappedTo.Length;                      if (currentLengthOutput>maxLengthOutput)                          maxLengthOutput = currentLengthOutput;                      if (currentLengthOutputAs>maxLengthOutputAs)                          maxLengthOutputAs = currentLengthOutputAs;                      // END HERZUM BUG FIX: alignment input-output TLAB-255                  }                    outputView.NodeStore = outputStore;                                    //disables/enables the controls                  outputView.Sensitive = isEditable;                    outputView.HoverSelection = true;                  outputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  outputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetOutputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Output.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore outputStore = new Gtk.NodeStore(typeof(IOItemNode));                  Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    Gtk.CellRendererText editableTextRenderer = new CellRendererText();                  editableTextRenderer.Editable = isEditable;                  editableTextRenderer.Edited += delegate(object o' EditedArgs args) {                      IOItemNode n = (IOItemNode)outputStore.GetNode (new TreePath (args.Path));                      n.MappedTo = args.NewText;                      RefreshIOHighlightInExperiment(n.MappedTo);                  };                    // HERZUM SPRINT 4.2: TLAB-226                  //textRenderer.CellBackground = "grey";                  // HERZUM SPRINT 5: TLAB-242                  Gdk.Color colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  // END HERZUM SPRINT 4.2: TLAB-226                     // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241                  t_Output = this.outputView.AppendColumn(Convert.ToChar(171) + " Output"' textRenderer' "text"' 0);                  t_Output.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_OutputAs=this.outputView.AppendColumn("Output as"' editableTextRenderer' "text"' 1);                  t_OutputAs.Resizable = true;                  t_OutputType=this.outputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_OutputType.Resizable = true;                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    int currentLengthOutput;                  int currentLengthOutputAs;                  foreach(IOItem item in m_metadata.IOSpec.Output.Values)                   {                      outputStore.AddNode(new IOItemNode(item));                      // HERZUM BUG FIX: alignment input-output TLAB-255                      currentLengthOutput = item.IOItemDefinition.Name.Length;                      currentLengthOutputAs = item.MappedTo.Length;                      if (currentLengthOutput>maxLengthOutput)                          maxLengthOutput = currentLengthOutput;                      if (currentLengthOutputAs>maxLengthOutputAs)                          maxLengthOutputAs = currentLengthOutputAs;                      // END HERZUM BUG FIX: alignment input-output TLAB-255                  }                    outputView.NodeStore = outputStore;                                    //disables/enables the controls                  outputView.Sensitive = isEditable;                    outputView.HoverSelection = true;                  outputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  outputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetOutputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Output.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore outputStore = new Gtk.NodeStore(typeof(IOItemNode));                  Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    Gtk.CellRendererText editableTextRenderer = new CellRendererText();                  editableTextRenderer.Editable = isEditable;                  editableTextRenderer.Edited += delegate(object o' EditedArgs args) {                      IOItemNode n = (IOItemNode)outputStore.GetNode (new TreePath (args.Path));                      n.MappedTo = args.NewText;                      RefreshIOHighlightInExperiment(n.MappedTo);                  };                    // HERZUM SPRINT 4.2: TLAB-226                  //textRenderer.CellBackground = "grey";                  // HERZUM SPRINT 5: TLAB-242                  Gdk.Color colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  // END HERZUM SPRINT 4.2: TLAB-226                     // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241                  t_Output = this.outputView.AppendColumn(Convert.ToChar(171) + " Output"' textRenderer' "text"' 0);                  t_Output.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_OutputAs=this.outputView.AppendColumn("Output as"' editableTextRenderer' "text"' 1);                  t_OutputAs.Resizable = true;                  t_OutputType=this.outputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_OutputType.Resizable = true;                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    int currentLengthOutput;                  int currentLengthOutputAs;                  foreach(IOItem item in m_metadata.IOSpec.Output.Values)                   {                      outputStore.AddNode(new IOItemNode(item));                      // HERZUM BUG FIX: alignment input-output TLAB-255                      currentLengthOutput = item.IOItemDefinition.Name.Length;                      currentLengthOutputAs = item.MappedTo.Length;                      if (currentLengthOutput>maxLengthOutput)                          maxLengthOutput = currentLengthOutput;                      if (currentLengthOutputAs>maxLengthOutputAs)                          maxLengthOutputAs = currentLengthOutputAs;                      // END HERZUM BUG FIX: alignment input-output TLAB-255                  }                    outputView.NodeStore = outputStore;                                    //disables/enables the controls                  outputView.Sensitive = isEditable;                    outputView.HoverSelection = true;                  outputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  outputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,SetOutputInfo,The following statement contains a magic number: if(m_metadata.IOSpec.Output.Count > 0)              {                  //set columns in input and output views                  Gtk.NodeStore outputStore = new Gtk.NodeStore(typeof(IOItemNode));                  Gtk.CellRendererText textRenderer = new Gtk.CellRendererText();                    Gtk.CellRendererText editableTextRenderer = new CellRendererText();                  editableTextRenderer.Editable = isEditable;                  editableTextRenderer.Edited += delegate(object o' EditedArgs args) {                      IOItemNode n = (IOItemNode)outputStore.GetNode (new TreePath (args.Path));                      n.MappedTo = args.NewText;                      RefreshIOHighlightInExperiment(n.MappedTo);                  };                    // HERZUM SPRINT 4.2: TLAB-226                  //textRenderer.CellBackground = "grey";                  // HERZUM SPRINT 5: TLAB-242                  Gdk.Color colorBack = new  Gdk.Color (245' 245' 245);                  textRenderer.CellBackgroundGdk = colorBack;                  // END HERZUM SPRINT 5: TLAB-242                  // END HERZUM SPRINT 4.2: TLAB-226                     // HERZUM BUG FIX: alignment input-output TLAB-255                  //HERZUM SPRINT 5.4 TLAB-241                  t_Output = this.outputView.AppendColumn(Convert.ToChar(171) + " Output"' textRenderer' "text"' 0);                  t_Output.Resizable = true;                  //END HERZUM SPRINT 5.4 TLAB-241                  t_OutputAs=this.outputView.AppendColumn("Output as"' editableTextRenderer' "text"' 1);                  t_OutputAs.Resizable = true;                  t_OutputType=this.outputView.AppendColumn("Type"' textRenderer' "text"' 2);                  t_OutputType.Resizable = true;                  // END HERZUM BUG FIX: alignment input-output TLAB-255                    int currentLengthOutput;                  int currentLengthOutputAs;                  foreach(IOItem item in m_metadata.IOSpec.Output.Values)                   {                      outputStore.AddNode(new IOItemNode(item));                      // HERZUM BUG FIX: alignment input-output TLAB-255                      currentLengthOutput = item.IOItemDefinition.Name.Length;                      currentLengthOutputAs = item.MappedTo.Length;                      if (currentLengthOutput>maxLengthOutput)                          maxLengthOutput = currentLengthOutput;                      if (currentLengthOutputAs>maxLengthOutputAs)                          maxLengthOutputAs = currentLengthOutputAs;                      // END HERZUM BUG FIX: alignment input-output TLAB-255                  }                    outputView.NodeStore = outputStore;                                    //disables/enables the controls                  outputView.Sensitive = isEditable;                    outputView.HoverSelection = true;                  outputView.NodeSelection.Changed += SelectionHandleChanged;              }              else              {                  outputView.Visible = false;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutput < maxLengthInput)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;              }              else                  {                  if (inputView.Columns.Length>0)                      inputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutput < maxLengthInput)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;              }              else                  {                  if (inputView.Columns.Length>0)                      inputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutput < maxLengthInput)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;              }              else                  {                  if (inputView.Columns.Length>0)                      inputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutput < maxLengthInput)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;              }              else                  {                  if (inputView.Columns.Length>0)                      inputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutput < maxLengthInput)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;              }              else                  {                  if (inputView.Columns.Length>0)                      inputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutput < maxLengthInput)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;              }              else                  {                  if (inputView.Columns.Length>0)                      inputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutput < maxLengthInput)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;              }              else                  {                  if (inputView.Columns.Length>0)                      inputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutput < maxLengthInput)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [0].MinWidth = maxLengthInput * 7 + 15;              }              else                  {                  if (inputView.Columns.Length>0)                      inputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [0].MinWidth = maxLengthOutput * 7 + 15;                  }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutputAs < maxLengthInputMapped)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;              }              else              {                  if (inputView.Columns.Length>0)                      inputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutputAs < maxLengthInputMapped)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;              }              else              {                  if (inputView.Columns.Length>0)                      inputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutputAs < maxLengthInputMapped)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;              }              else              {                  if (inputView.Columns.Length>0)                      inputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutputAs < maxLengthInputMapped)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;              }              else              {                  if (inputView.Columns.Length>0)                      inputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutputAs < maxLengthInputMapped)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;              }              else              {                  if (inputView.Columns.Length>0)                      inputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutputAs < maxLengthInputMapped)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;              }              else              {                  if (inputView.Columns.Length>0)                      inputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutputAs < maxLengthInputMapped)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;              }              else              {                  if (inputView.Columns.Length>0)                      inputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,ResizeInputOutputInfo,The following statement contains a magic number: if (maxLengthOutputAs < maxLengthInputMapped)              {                  if (outputView.Columns.Length > 0)                      outputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;                  if (inputView.Columns.Length > 0)                      inputView.Columns [1].MinWidth = maxLengthInputMapped * 7 + 15;              }              else              {                  if (inputView.Columns.Length>0)                      inputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;                  if (outputView.Columns.Length>0)                      outputView.Columns [1].MinWidth = maxLengthOutputAs * 7 + 15;              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnIOExpanderActivated,The following statement contains a magic number: if (hIO==0)              {                  if (inputView.NodeStore!=null)                  {                      // HERZUM BUG FIX TLAB-254                      hIO += 30;                      // END HERZUM BUG FIX TLAB-254                      enumerator =inputView.NodeStore.GetEnumerator();                      while (enumerator.MoveNext())                          hIO += 25;                  }                  if (outputView.NodeStore!=null)                  {                      // HERZUM BUG FIX TLAB-254                      hIO += 30;                      // END HERZUM BUG FIX TLAB-254                      enumerator =outputView.NodeStore.GetEnumerator();                      while (enumerator.MoveNext())                          hIO += 25;                  }              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnIOExpanderActivated,The following statement contains a magic number: if (hIO==0)              {                  if (inputView.NodeStore!=null)                  {                      // HERZUM BUG FIX TLAB-254                      hIO += 30;                      // END HERZUM BUG FIX TLAB-254                      enumerator =inputView.NodeStore.GetEnumerator();                      while (enumerator.MoveNext())                          hIO += 25;                  }                  if (outputView.NodeStore!=null)                  {                      // HERZUM BUG FIX TLAB-254                      hIO += 30;                      // END HERZUM BUG FIX TLAB-254                      enumerator =outputView.NodeStore.GetEnumerator();                      while (enumerator.MoveNext())                          hIO += 25;                  }              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnIOExpanderActivated,The following statement contains a magic number: if (hIO==0)              {                  if (inputView.NodeStore!=null)                  {                      // HERZUM BUG FIX TLAB-254                      hIO += 30;                      // END HERZUM BUG FIX TLAB-254                      enumerator =inputView.NodeStore.GetEnumerator();                      while (enumerator.MoveNext())                          hIO += 25;                  }                  if (outputView.NodeStore!=null)                  {                      // HERZUM BUG FIX TLAB-254                      hIO += 30;                      // END HERZUM BUG FIX TLAB-254                      enumerator =outputView.NodeStore.GetEnumerator();                      while (enumerator.MoveNext())                          hIO += 25;                  }              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnIOExpanderActivated,The following statement contains a magic number: if (hIO==0)              {                  if (inputView.NodeStore!=null)                  {                      // HERZUM BUG FIX TLAB-254                      hIO += 30;                      // END HERZUM BUG FIX TLAB-254                      enumerator =inputView.NodeStore.GetEnumerator();                      while (enumerator.MoveNext())                          hIO += 25;                  }                  if (outputView.NodeStore!=null)                  {                      // HERZUM BUG FIX TLAB-254                      hIO += 30;                      // END HERZUM BUG FIX TLAB-254                      enumerator =outputView.NodeStore.GetEnumerator();                      while (enumerator.MoveNext())                          hIO += 25;                  }              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnIOExpanderActivated,The following statement contains a magic number: if (IOExpander.Expanded)              {                  GdkWindow.Resize(wPanel'hPanel+hIO);              }              else              {                  if (configurationExpander.Visible && !configurationExpander.Expanded && componentInfoExpander.Visible && !componentInfoExpander.Expanded)                      GdkWindow.Resize (600' 100);                  else                      GdkWindow.Resize (wPanel' hPanel - hIO);              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnIOExpanderActivated,The following statement contains a magic number: if (IOExpander.Expanded)              {                  GdkWindow.Resize(wPanel'hPanel+hIO);              }              else              {                  if (configurationExpander.Visible && !configurationExpander.Expanded && componentInfoExpander.Visible && !componentInfoExpander.Expanded)                      GdkWindow.Resize (600' 100);                  else                      GdkWindow.Resize (wPanel' hPanel - hIO);              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnConfigurationExpanderActivated,The following statement contains a magic number: if (hConf==0)              {                  // HERZUM BUG FIX TLAB-254                  //hConf = 10;                  // END HERZUM BUG FIX TLAB-254                  foreach (Gtk.Object obj in configurationExpander.Children)                      if (obj is PropertyGrid)                          //hConf += ((PropertyGrid)obj).CountPropertyGrid ()*27;                            hConf += ((PropertyGrid)obj).CountPropertyGrid ()*25;                              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnConfigurationExpanderActivated,The following statement contains a magic number: if (configurationExpander.Expanded) {                  GdkWindow.Resize (wPanel' hPanel + hConf);              } else {                  if (componentInfoExpander.Visible && !componentInfoExpander.Expanded && IOExpander.Visible && !IOExpander.Expanded)                      GdkWindow.Resize (600' 100);                  else                      GdkWindow.Resize (wPanel' hPanel - hConf);              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnConfigurationExpanderActivated,The following statement contains a magic number: if (configurationExpander.Expanded) {                  GdkWindow.Resize (wPanel' hPanel + hConf);              } else {                  if (componentInfoExpander.Visible && !componentInfoExpander.Expanded && IOExpander.Visible && !IOExpander.Expanded)                      GdkWindow.Resize (600' 100);                  else                      GdkWindow.Resize (wPanel' hPanel - hConf);              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (wInfo==0 || hInfo==0)              {                  componentInfoExpander.GdkWindow.GetSize (out wInfo' out hInfo);                  hInfo = hInfo - hConf - hIO;                  if (descriptionValue.Visible) {                      // HERZUM BUG FIX TLAB-254                      //hDesc = (int)(((descriptionValue.Text.Length / 50)) + 1 * 20) + 30;                         hDesc = (int)(((descriptionValue.Text.Length / 50) + 1) * 10+5);                           // END HERZUM BUG FIX TLAB-254                  }              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (wInfo==0 || hInfo==0)              {                  componentInfoExpander.GdkWindow.GetSize (out wInfo' out hInfo);                  hInfo = hInfo - hConf - hIO;                  if (descriptionValue.Visible) {                      // HERZUM BUG FIX TLAB-254                      //hDesc = (int)(((descriptionValue.Text.Length / 50)) + 1 * 20) + 30;                         hDesc = (int)(((descriptionValue.Text.Length / 50) + 1) * 10+5);                           // END HERZUM BUG FIX TLAB-254                  }              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (wInfo==0 || hInfo==0)              {                  componentInfoExpander.GdkWindow.GetSize (out wInfo' out hInfo);                  hInfo = hInfo - hConf - hIO;                  if (descriptionValue.Visible) {                      // HERZUM BUG FIX TLAB-254                      //hDesc = (int)(((descriptionValue.Text.Length / 50)) + 1 * 20) + 30;                         hDesc = (int)(((descriptionValue.Text.Length / 50) + 1) * 10+5);                           // END HERZUM BUG FIX TLAB-254                  }              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (componentInfoExpander.Expanded) {                  GdkWindow.Resize (wPanel' hPanel + hInfo + hDesc);                               } else {                  if (configurationExpander.Visible && !configurationExpander.Expanded && IOExpander.Visible && !IOExpander.Expanded)                      GdkWindow.Resize (600' 100);                  else                      GdkWindow.Resize(wPanel'hPanel - hInfo -  hDesc);              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (componentInfoExpander.Expanded) {                  GdkWindow.Resize (wPanel' hPanel + hInfo + hDesc);                               } else {                  if (configurationExpander.Visible && !configurationExpander.Expanded && IOExpander.Visible && !IOExpander.Expanded)                      GdkWindow.Resize (600' 100);                  else                      GdkWindow.Resize(wPanel'hPanel - hInfo -  hDesc);              }
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.vbox1.WidthRequest = 600;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView.Justification = ((global::Gtk.Justification)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView.LeftMargin = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView.RightMargin = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w1.Padding = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w6.Position = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.infoTable = new global::Gtk.Table (((uint)(5))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.infoTable = new global::Gtk.Table (((uint)(5))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.infoTable.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.infoTable.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.authorLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.authorLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w7.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w7.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.authorValue.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.authorValue.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w8.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w8.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w8.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w8.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.componentLabelLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.componentLabelLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w9.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w9.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w10.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w10.XPadding = ((uint)(20));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w10.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w10.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.componentNameLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.componentNameLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w11.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w11.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w11.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.componentNameValue.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.componentNameValue.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w12.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w12.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w12.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w12.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w13.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w13.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w13.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w13.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionValue.WidthRequest = 500;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionValue.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionValue.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w14.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w14.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w14.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w14.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w14.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.versionLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.versionLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w15.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w15.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w15.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w15.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.versionValue.Xpad = 3;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: this.versionValue.Ypad = 2;
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w16.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w16.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w16.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w16.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w16.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ComponentInfoPanel.cs,Build,The following statement contains a magic number: w18.Position = 3;
Magic Number,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,InitRemoveHandle,The following statement contains a magic number: m_removeHandle = new RemoveConnectionHandle (this' new CenterLineLocator(0.5' -12.0));
Magic Number,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,InitRemoveHandle,The following statement contains a magic number: m_removeHandle = new RemoveConnectionHandle (this' new CenterLineLocator(0.5' -12.0));
Magic Number,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,BasicDraw,The following statement contains a magic number: if (isSourceComment)              {                  double[] dash = {2' 0' 2};                  base.Dashes=dash;                  base.BasicDraw(context);                  return;              }
Magic Number,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,BasicDraw,The following statement contains a magic number: if (isSourceComment)              {                  double[] dash = {2' 0' 2};                  base.Dashes=dash;                  base.BasicDraw(context);                  return;              }
Magic Number,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,BasicDrawSelected,The following statement contains a magic number: if (isSourceComment)              {                  double[] dash = {2' 0' 2};                  base.Dashes=dash;                  base.BasicDraw(context);                  return;              }
Magic Number,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,BasicDrawSelected,The following statement contains a magic number: if (isSourceComment)              {                  double[] dash = {2' 0' 2};                  base.Dashes=dash;                  base.BasicDraw(context);                  return;              }
Magic Number,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,DrawArrowHead,The following statement contains a magic number: const double aLength = 10.0;
Magic Number,TraceLab.UI.GTK,NodeConnectionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeConnectionControl.cs,DrawArrowHead,The following statement contains a magic number: const double aWidth = 3.5;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.experimentCrumbs.Events = ((global::Gdk.EventMask)(256));
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.experimentCrumbs.Radius = 5;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.experimentCrumbs.Spacing = 11;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.experimentCrumbs.Xoffset = 12;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.experimentCrumbs.Yoffset = 6;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.experimentCanvas.Events = ((global::Gdk.EventMask)(256));
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.zoomScale.HeightRequest = 300;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.zoomScale.Digits = 2;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: this.zoomScale.ValuePos = ((global::Gtk.PositionType)(3));
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: w6.Spacing = 2;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: w15.Spacing = 2;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: w22.Position = 2;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: w23.Position = 3;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: w25.Spacing = 2;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: w32.Position = 4;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: w34.Spacing = 2;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,Build,The following statement contains a magic number: w41.Position = 5;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(5))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(5))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.tbx_description.HeightRequest = 132;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.tbx_description.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w3.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w3.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w3.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w7.Spacing = 2;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w14.Position = 2;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w15.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w15.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w15.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w16.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w16.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w16.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w17.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w17.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w17.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w17.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w18.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w18.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w18.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w18.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w19.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w19.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w19.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w19.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w20.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w20.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w21.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w21.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w21.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w21.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w22.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w22.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w23.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w23.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w23.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w23.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w25.Spacing = 10;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w25.BorderWidth = ((uint)(5));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w25.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w27.Spacing = 2;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -7);
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: w36.Spacing = 2;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.btn_ok' -5);
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.DefaultWidth = 715;
Magic Number,TraceLab.UI.GTK,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\NewExperimentDialog.cs,Build,The following statement contains a magic number: this.DefaultHeight = 342;
Magic Number,TraceLab.UI.GTK,BasicNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\BasicNodeControl.cs,BasicNodeControl,The following statement contains a magic number: PaddingLeft = 15.0;
Magic Number,TraceLab.UI.GTK,BasicNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\BasicNodeControl.cs,BasicNodeControl,The following statement contains a magic number: PaddingTop = 7.0;
Magic Number,TraceLab.UI.GTK,BasicNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\BasicNodeControl.cs,BasicNodeControl,The following statement contains a magic number: PaddingRight = 24.0;
Magic Number,TraceLab.UI.GTK,BasicNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\BasicNodeControl.cs,BasicNodeControl,The following statement contains a magic number: PaddingBottom = 7.0;
Magic Number,TraceLab.UI.GTK,BasicNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\BasicNodeControl.cs,DrawFrame,The following statement contains a magic number: CairoFigures.CurvedRectangle (context' rect' 8);
Magic Number,TraceLab.UI.GTK,NodeControlButtons,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeControlButtons.cs,NodeControlButtons,The following statement contains a magic number: m_newConnectionHandle = new NewConnectionHandle (ownerControl' applicationContext' new QuickActionLocator (15' 0' QuickActionPosition.Right));
Magic Number,TraceLab.UI.GTK,NodeControlButtons,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeControlButtons.cs,NodeControlButtons,The following statement contains a magic number: if (ownerControl is ScopeNodeControl || ownerControl is CommentNodeControl)                  m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' 0.12' QuickActionPosition.Right)'                                                            s_infoIcon' s_infoOnIcon);              else                  m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' 0.8' QuickActionPosition.Right)'                                                            s_infoIcon' s_infoOnIcon);
Magic Number,TraceLab.UI.GTK,NodeControlButtons,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeControlButtons.cs,NodeControlButtons,The following statement contains a magic number: if (ownerControl is ScopeNodeControl || ownerControl is CommentNodeControl)                  m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' 0.12' QuickActionPosition.Right)'                                                            s_infoIcon' s_infoOnIcon);              else                  m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' 0.8' QuickActionPosition.Right)'                                                            s_infoIcon' s_infoOnIcon);
Magic Number,TraceLab.UI.GTK,NodeControlButtons,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeControlButtons.cs,NodeControlButtons,The following statement contains a magic number: if (ownerControl is ScopeNodeControl || ownerControl is CommentNodeControl)                  m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' 0.12' QuickActionPosition.Right)'                                                            s_infoIcon' s_infoOnIcon);              else                  m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' 0.8' QuickActionPosition.Right)'                                                            s_infoIcon' s_infoOnIcon);
Magic Number,TraceLab.UI.GTK,NodeControlButtons,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeControlButtons.cs,NodeControlButtons,The following statement contains a magic number: if (ownerControl is ScopeNodeControl || ownerControl is CommentNodeControl)                  m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' 0.12' QuickActionPosition.Right)'                                                            s_infoIcon' s_infoOnIcon);              else                  m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' 0.8' QuickActionPosition.Right)'                                                            s_infoIcon' s_infoOnIcon);
Magic Number,TraceLab.UI.GTK,NodeControlButtons,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeControlButtons.cs,NodeControlButtons,The following statement contains a magic number: m_removeHandle = new RemoveNodeHandle (ownerControl' new QuickActionLocator (35' 0' QuickActionPosition.Right));
Magic Number,TraceLab.UI.GTK,NodeControlButtons,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\NodeControlButtons.cs,MoveIconInfo,The following statement contains a magic number: m_infoHandle = new PixToggleButtonHandle (ownerControl' new QuickActionLocator (15' rel' QuickActionPosition.Right)'                                                    s_infoIcon' s_infoOnIcon);
Magic Number,TraceLab.UI.GTK,StartNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\StartNodeControl.cs,StartNodeControl,The following statement contains a magic number: PaddingLeft = 5.0;
Magic Number,TraceLab.UI.GTK,StartNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\StartNodeControl.cs,StartNodeControl,The following statement contains a magic number: PaddingTop = 5.0;
Magic Number,TraceLab.UI.GTK,StartNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\StartNodeControl.cs,StartNodeControl,The following statement contains a magic number: PaddingRight = 5.0;
Magic Number,TraceLab.UI.GTK,StartNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\StartNodeControl.cs,StartNodeControl,The following statement contains a magic number: PaddingBottom = 5.0;
Magic Number,TraceLab.UI.GTK,StartNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\StartNodeControl.cs,StartNodeControl,The following statement contains a magic number: m_newConnectionHandle = new NewConnectionHandle (this' applicationContext' new QuickActionLocator (15' 0.5' QuickActionPosition.Right));
Magic Number,TraceLab.UI.GTK,StartNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\StartNodeControl.cs,StartNodeControl,The following statement contains a magic number: m_newConnectionHandle = new NewConnectionHandle (this' applicationContext' new QuickActionLocator (15' 0.5' QuickActionPosition.Right));
Magic Number,TraceLab.UI.GTK,EndNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\EndNodeControl.cs,EndNodeControl,The following statement contains a magic number: PaddingLeft = 6.0;
Magic Number,TraceLab.UI.GTK,EndNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\EndNodeControl.cs,EndNodeControl,The following statement contains a magic number: PaddingTop = 5.0;
Magic Number,TraceLab.UI.GTK,EndNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\EndNodeControl.cs,EndNodeControl,The following statement contains a magic number: PaddingRight = 20.0;
Magic Number,TraceLab.UI.GTK,EndNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\EndNodeControl.cs,EndNodeControl,The following statement contains a magic number: PaddingBottom = 5.0;
Magic Number,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,DecisionNodeControl,The following statement contains a magic number: PaddingLeft = 30.0;
Magic Number,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,DecisionNodeControl,The following statement contains a magic number: PaddingTop = 7.0;
Magic Number,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,DecisionNodeControl,The following statement contains a magic number: PaddingRight = 40.0;
Magic Number,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,DecisionNodeControl,The following statement contains a magic number: PaddingBottom = 7.0;
Magic Number,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,DecisionNodeControl,The following statement contains a magic number: m_addScopeInDecisionComponent = new PixButtonHandle(this' new QuickActionLocator (35' 0.8' QuickActionPosition.Right)'                                                                  s_newScopeIcon' AddScopeInDecisionComponent);
Magic Number,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,DecisionNodeControl,The following statement contains a magic number: m_addScopeInDecisionComponent = new PixButtonHandle(this' new QuickActionLocator (35' 0.8' QuickActionPosition.Right)'                                                                  s_newScopeIcon' AddScopeInDecisionComponent);
Magic Number,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,DrawFrame,The following statement contains a magic number: CairoFigures.AngleFrame(context' rect' 15' 0' 15' 0);
Magic Number,TraceLab.UI.GTK,DecisionNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\DecisionNodeControl.cs,DrawFrame,The following statement contains a magic number: CairoFigures.AngleFrame(context' rect' 15' 0' 15' 0);
Magic Number,TraceLab.UI.GTK,InfoPanelFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\InfoPanelFactory.cs,ShowComponentInfoPad,The following statement contains a magic number: if(infoDockItem == null)               {                  infoDockItem = m_mainWindowDockFrame.AddItem(component.ExperimentNode.ID);                  infoDockItem.Content = CreateInfoWidget(component);                    if (component is DecisionNodeControl) {                  //    string m = component.ExperimentNode.ID;                    //  if (m. ID.Equals (DecisionMetadataDefinition.GotoDecisionGuid)) {                      if(component.ExperimentNode.Data.Metadata.Label.Equals("Goto Decision")){                          infoDockItem.Label = GOTO_INFO_PANEL_TITLE_LABEL;                      } else {                          infoDockItem.Label = DECISION_INFO_PANEL_TITLE_LABEL;                      }                  } else if (component is LoopNodeControl) {                      infoDockItem.Label = LOOP_INFO_PANEL_TITLE_LABEL;                  } else {                      infoDockItem.Label = component.ExperimentNode.Data.Metadata.Label;                  }                    infoDockItem.DefaultHeight = 150;                  //infoDockItem.DefaultWidth = 200;                  // HERZUM SPRINT 4.2: TLAB-226                  infoDockItem.DefaultHeight = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       infoDockItem.DefaultHeight = 50;                  // END HERZUM SPRINT 4.2: TLAB-226                    infoDockItem.DefaultLocation = GetLocation();                    infoDockItem.Visible = true;                    //attach action on visible changed' so that if window is closed then it toggles off the info icon                  infoDockItem.VisibleChanged += (object sender' EventArgs e) =>                   {                      bool isVisible = ((DockItem)sender).Visible;                      onVisibleChanged(isVisible);                  };                    AttachMouseOverHighlightHandlers (component' infoDockItem);                    infoPads.AddLast(infoDockItem);                    //Float window                  //this line allows setting window as floating automatically' to consider in future                  m_mainWindowDockFrame.SetStatus(infoDockItem' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = infoDockItem.FloatingPosition;                  floatRectangle.Width = 350;                  //floatRectangle.Height = 180;                  // HERZUM SPRINT 4.2: TLAB-225                  floatRectangle.Height = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       floatRectangle.Height = 50;                  // END HERZUM SPRINT 4.2: TLAB-225                                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = defaultLocationX;                  floatRectangle.Y = defaultLocationY + 20;                  infoDockItem.SetFloatMode(floatRectangle);                }              else              {                  //if already exists just set it visible                  infoDockItem.Visible = true;              }
Magic Number,TraceLab.UI.GTK,InfoPanelFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\InfoPanelFactory.cs,ShowComponentInfoPad,The following statement contains a magic number: if(infoDockItem == null)               {                  infoDockItem = m_mainWindowDockFrame.AddItem(component.ExperimentNode.ID);                  infoDockItem.Content = CreateInfoWidget(component);                    if (component is DecisionNodeControl) {                  //    string m = component.ExperimentNode.ID;                    //  if (m. ID.Equals (DecisionMetadataDefinition.GotoDecisionGuid)) {                      if(component.ExperimentNode.Data.Metadata.Label.Equals("Goto Decision")){                          infoDockItem.Label = GOTO_INFO_PANEL_TITLE_LABEL;                      } else {                          infoDockItem.Label = DECISION_INFO_PANEL_TITLE_LABEL;                      }                  } else if (component is LoopNodeControl) {                      infoDockItem.Label = LOOP_INFO_PANEL_TITLE_LABEL;                  } else {                      infoDockItem.Label = component.ExperimentNode.Data.Metadata.Label;                  }                    infoDockItem.DefaultHeight = 150;                  //infoDockItem.DefaultWidth = 200;                  // HERZUM SPRINT 4.2: TLAB-226                  infoDockItem.DefaultHeight = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       infoDockItem.DefaultHeight = 50;                  // END HERZUM SPRINT 4.2: TLAB-226                    infoDockItem.DefaultLocation = GetLocation();                    infoDockItem.Visible = true;                    //attach action on visible changed' so that if window is closed then it toggles off the info icon                  infoDockItem.VisibleChanged += (object sender' EventArgs e) =>                   {                      bool isVisible = ((DockItem)sender).Visible;                      onVisibleChanged(isVisible);                  };                    AttachMouseOverHighlightHandlers (component' infoDockItem);                    infoPads.AddLast(infoDockItem);                    //Float window                  //this line allows setting window as floating automatically' to consider in future                  m_mainWindowDockFrame.SetStatus(infoDockItem' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = infoDockItem.FloatingPosition;                  floatRectangle.Width = 350;                  //floatRectangle.Height = 180;                  // HERZUM SPRINT 4.2: TLAB-225                  floatRectangle.Height = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       floatRectangle.Height = 50;                  // END HERZUM SPRINT 4.2: TLAB-225                                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = defaultLocationX;                  floatRectangle.Y = defaultLocationY + 20;                  infoDockItem.SetFloatMode(floatRectangle);                }              else              {                  //if already exists just set it visible                  infoDockItem.Visible = true;              }
Magic Number,TraceLab.UI.GTK,InfoPanelFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\InfoPanelFactory.cs,ShowComponentInfoPad,The following statement contains a magic number: if(infoDockItem == null)               {                  infoDockItem = m_mainWindowDockFrame.AddItem(component.ExperimentNode.ID);                  infoDockItem.Content = CreateInfoWidget(component);                    if (component is DecisionNodeControl) {                  //    string m = component.ExperimentNode.ID;                    //  if (m. ID.Equals (DecisionMetadataDefinition.GotoDecisionGuid)) {                      if(component.ExperimentNode.Data.Metadata.Label.Equals("Goto Decision")){                          infoDockItem.Label = GOTO_INFO_PANEL_TITLE_LABEL;                      } else {                          infoDockItem.Label = DECISION_INFO_PANEL_TITLE_LABEL;                      }                  } else if (component is LoopNodeControl) {                      infoDockItem.Label = LOOP_INFO_PANEL_TITLE_LABEL;                  } else {                      infoDockItem.Label = component.ExperimentNode.Data.Metadata.Label;                  }                    infoDockItem.DefaultHeight = 150;                  //infoDockItem.DefaultWidth = 200;                  // HERZUM SPRINT 4.2: TLAB-226                  infoDockItem.DefaultHeight = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       infoDockItem.DefaultHeight = 50;                  // END HERZUM SPRINT 4.2: TLAB-226                    infoDockItem.DefaultLocation = GetLocation();                    infoDockItem.Visible = true;                    //attach action on visible changed' so that if window is closed then it toggles off the info icon                  infoDockItem.VisibleChanged += (object sender' EventArgs e) =>                   {                      bool isVisible = ((DockItem)sender).Visible;                      onVisibleChanged(isVisible);                  };                    AttachMouseOverHighlightHandlers (component' infoDockItem);                    infoPads.AddLast(infoDockItem);                    //Float window                  //this line allows setting window as floating automatically' to consider in future                  m_mainWindowDockFrame.SetStatus(infoDockItem' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = infoDockItem.FloatingPosition;                  floatRectangle.Width = 350;                  //floatRectangle.Height = 180;                  // HERZUM SPRINT 4.2: TLAB-225                  floatRectangle.Height = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       floatRectangle.Height = 50;                  // END HERZUM SPRINT 4.2: TLAB-225                                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = defaultLocationX;                  floatRectangle.Y = defaultLocationY + 20;                  infoDockItem.SetFloatMode(floatRectangle);                }              else              {                  //if already exists just set it visible                  infoDockItem.Visible = true;              }
Magic Number,TraceLab.UI.GTK,InfoPanelFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\InfoPanelFactory.cs,ShowComponentInfoPad,The following statement contains a magic number: if(infoDockItem == null)               {                  infoDockItem = m_mainWindowDockFrame.AddItem(component.ExperimentNode.ID);                  infoDockItem.Content = CreateInfoWidget(component);                    if (component is DecisionNodeControl) {                  //    string m = component.ExperimentNode.ID;                    //  if (m. ID.Equals (DecisionMetadataDefinition.GotoDecisionGuid)) {                      if(component.ExperimentNode.Data.Metadata.Label.Equals("Goto Decision")){                          infoDockItem.Label = GOTO_INFO_PANEL_TITLE_LABEL;                      } else {                          infoDockItem.Label = DECISION_INFO_PANEL_TITLE_LABEL;                      }                  } else if (component is LoopNodeControl) {                      infoDockItem.Label = LOOP_INFO_PANEL_TITLE_LABEL;                  } else {                      infoDockItem.Label = component.ExperimentNode.Data.Metadata.Label;                  }                    infoDockItem.DefaultHeight = 150;                  //infoDockItem.DefaultWidth = 200;                  // HERZUM SPRINT 4.2: TLAB-226                  infoDockItem.DefaultHeight = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       infoDockItem.DefaultHeight = 50;                  // END HERZUM SPRINT 4.2: TLAB-226                    infoDockItem.DefaultLocation = GetLocation();                    infoDockItem.Visible = true;                    //attach action on visible changed' so that if window is closed then it toggles off the info icon                  infoDockItem.VisibleChanged += (object sender' EventArgs e) =>                   {                      bool isVisible = ((DockItem)sender).Visible;                      onVisibleChanged(isVisible);                  };                    AttachMouseOverHighlightHandlers (component' infoDockItem);                    infoPads.AddLast(infoDockItem);                    //Float window                  //this line allows setting window as floating automatically' to consider in future                  m_mainWindowDockFrame.SetStatus(infoDockItem' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = infoDockItem.FloatingPosition;                  floatRectangle.Width = 350;                  //floatRectangle.Height = 180;                  // HERZUM SPRINT 4.2: TLAB-225                  floatRectangle.Height = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       floatRectangle.Height = 50;                  // END HERZUM SPRINT 4.2: TLAB-225                                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = defaultLocationX;                  floatRectangle.Y = defaultLocationY + 20;                  infoDockItem.SetFloatMode(floatRectangle);                }              else              {                  //if already exists just set it visible                  infoDockItem.Visible = true;              }
Magic Number,TraceLab.UI.GTK,InfoPanelFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\InfoPanelFactory.cs,ShowComponentInfoPad,The following statement contains a magic number: if(infoDockItem == null)               {                  infoDockItem = m_mainWindowDockFrame.AddItem(component.ExperimentNode.ID);                  infoDockItem.Content = CreateInfoWidget(component);                    if (component is DecisionNodeControl) {                  //    string m = component.ExperimentNode.ID;                    //  if (m. ID.Equals (DecisionMetadataDefinition.GotoDecisionGuid)) {                      if(component.ExperimentNode.Data.Metadata.Label.Equals("Goto Decision")){                          infoDockItem.Label = GOTO_INFO_PANEL_TITLE_LABEL;                      } else {                          infoDockItem.Label = DECISION_INFO_PANEL_TITLE_LABEL;                      }                  } else if (component is LoopNodeControl) {                      infoDockItem.Label = LOOP_INFO_PANEL_TITLE_LABEL;                  } else {                      infoDockItem.Label = component.ExperimentNode.Data.Metadata.Label;                  }                    infoDockItem.DefaultHeight = 150;                  //infoDockItem.DefaultWidth = 200;                  // HERZUM SPRINT 4.2: TLAB-226                  infoDockItem.DefaultHeight = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       infoDockItem.DefaultHeight = 50;                  // END HERZUM SPRINT 4.2: TLAB-226                    infoDockItem.DefaultLocation = GetLocation();                    infoDockItem.Visible = true;                    //attach action on visible changed' so that if window is closed then it toggles off the info icon                  infoDockItem.VisibleChanged += (object sender' EventArgs e) =>                   {                      bool isVisible = ((DockItem)sender).Visible;                      onVisibleChanged(isVisible);                  };                    AttachMouseOverHighlightHandlers (component' infoDockItem);                    infoPads.AddLast(infoDockItem);                    //Float window                  //this line allows setting window as floating automatically' to consider in future                  m_mainWindowDockFrame.SetStatus(infoDockItem' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = infoDockItem.FloatingPosition;                  floatRectangle.Width = 350;                  //floatRectangle.Height = 180;                  // HERZUM SPRINT 4.2: TLAB-225                  floatRectangle.Height = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       floatRectangle.Height = 50;                  // END HERZUM SPRINT 4.2: TLAB-225                                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = defaultLocationX;                  floatRectangle.Y = defaultLocationY + 20;                  infoDockItem.SetFloatMode(floatRectangle);                }              else              {                  //if already exists just set it visible                  infoDockItem.Visible = true;              }
Magic Number,TraceLab.UI.GTK,InfoPanelFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\InfoPanelFactory.cs,ShowComponentInfoPad,The following statement contains a magic number: if(infoDockItem == null)               {                  infoDockItem = m_mainWindowDockFrame.AddItem(component.ExperimentNode.ID);                  infoDockItem.Content = CreateInfoWidget(component);                    if (component is DecisionNodeControl) {                  //    string m = component.ExperimentNode.ID;                    //  if (m. ID.Equals (DecisionMetadataDefinition.GotoDecisionGuid)) {                      if(component.ExperimentNode.Data.Metadata.Label.Equals("Goto Decision")){                          infoDockItem.Label = GOTO_INFO_PANEL_TITLE_LABEL;                      } else {                          infoDockItem.Label = DECISION_INFO_PANEL_TITLE_LABEL;                      }                  } else if (component is LoopNodeControl) {                      infoDockItem.Label = LOOP_INFO_PANEL_TITLE_LABEL;                  } else {                      infoDockItem.Label = component.ExperimentNode.Data.Metadata.Label;                  }                    infoDockItem.DefaultHeight = 150;                  //infoDockItem.DefaultWidth = 200;                  // HERZUM SPRINT 4.2: TLAB-226                  infoDockItem.DefaultHeight = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       infoDockItem.DefaultHeight = 50;                  // END HERZUM SPRINT 4.2: TLAB-226                    infoDockItem.DefaultLocation = GetLocation();                    infoDockItem.Visible = true;                    //attach action on visible changed' so that if window is closed then it toggles off the info icon                  infoDockItem.VisibleChanged += (object sender' EventArgs e) =>                   {                      bool isVisible = ((DockItem)sender).Visible;                      onVisibleChanged(isVisible);                  };                    AttachMouseOverHighlightHandlers (component' infoDockItem);                    infoPads.AddLast(infoDockItem);                    //Float window                  //this line allows setting window as floating automatically' to consider in future                  m_mainWindowDockFrame.SetStatus(infoDockItem' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = infoDockItem.FloatingPosition;                  floatRectangle.Width = 350;                  //floatRectangle.Height = 180;                  // HERZUM SPRINT 4.2: TLAB-225                  floatRectangle.Height = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       floatRectangle.Height = 50;                  // END HERZUM SPRINT 4.2: TLAB-225                                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = defaultLocationX;                  floatRectangle.Y = defaultLocationY + 20;                  infoDockItem.SetFloatMode(floatRectangle);                }              else              {                  //if already exists just set it visible                  infoDockItem.Visible = true;              }
Magic Number,TraceLab.UI.GTK,InfoPanelFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\InfoPanelFactory.cs,ShowComponentInfoPad,The following statement contains a magic number: if(infoDockItem == null)               {                  infoDockItem = m_mainWindowDockFrame.AddItem(component.ExperimentNode.ID);                  infoDockItem.Content = CreateInfoWidget(component);                    if (component is DecisionNodeControl) {                  //    string m = component.ExperimentNode.ID;                    //  if (m. ID.Equals (DecisionMetadataDefinition.GotoDecisionGuid)) {                      if(component.ExperimentNode.Data.Metadata.Label.Equals("Goto Decision")){                          infoDockItem.Label = GOTO_INFO_PANEL_TITLE_LABEL;                      } else {                          infoDockItem.Label = DECISION_INFO_PANEL_TITLE_LABEL;                      }                  } else if (component is LoopNodeControl) {                      infoDockItem.Label = LOOP_INFO_PANEL_TITLE_LABEL;                  } else {                      infoDockItem.Label = component.ExperimentNode.Data.Metadata.Label;                  }                    infoDockItem.DefaultHeight = 150;                  //infoDockItem.DefaultWidth = 200;                  // HERZUM SPRINT 4.2: TLAB-226                  infoDockItem.DefaultHeight = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       infoDockItem.DefaultHeight = 50;                  // END HERZUM SPRINT 4.2: TLAB-226                    infoDockItem.DefaultLocation = GetLocation();                    infoDockItem.Visible = true;                    //attach action on visible changed' so that if window is closed then it toggles off the info icon                  infoDockItem.VisibleChanged += (object sender' EventArgs e) =>                   {                      bool isVisible = ((DockItem)sender).Visible;                      onVisibleChanged(isVisible);                  };                    AttachMouseOverHighlightHandlers (component' infoDockItem);                    infoPads.AddLast(infoDockItem);                    //Float window                  //this line allows setting window as floating automatically' to consider in future                  m_mainWindowDockFrame.SetStatus(infoDockItem' DockItemStatus.Floating);                  Gdk.Rectangle floatRectangle = infoDockItem.FloatingPosition;                  floatRectangle.Width = 350;                  //floatRectangle.Height = 180;                  // HERZUM SPRINT 4.2: TLAB-225                  floatRectangle.Height = 100;                  if(component is ScopeNodeControl || component is CommentNodeControl)                       floatRectangle.Height = 50;                  // END HERZUM SPRINT 4.2: TLAB-225                                    //location of info box next to the component node just sligthly below cursor click                  floatRectangle.X = defaultLocationX;                  floatRectangle.Y = defaultLocationY + 20;                  infoDockItem.SetFloatMode(floatRectangle);                }              else              {                  //if already exists just set it visible                  infoDockItem.Visible = true;              }
Magic Number,TraceLab.UI.GTK,CompositeComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CompositeComponentControl.cs,CompositeComponentControl,The following statement contains a magic number: m_displayComponentSubGraph = new PixButtonHandle(this' new QuickActionLocator (35' 0.8' QuickActionPosition.Right)'                                                               s_magnifierGlassIcon' DisplayComponentSubGraph);
Magic Number,TraceLab.UI.GTK,CompositeComponentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CompositeComponentControl.cs,CompositeComponentControl,The following statement contains a magic number: m_displayComponentSubGraph = new PixButtonHandle(this' new QuickActionLocator (35' 0.8' QuickActionPosition.Right)'                                                               s_magnifierGlassIcon' DisplayComponentSubGraph);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnExposeEvent,The following statement contains a magic number: using (Context cr = CairoHelper.Create (this.GdkWindow)) {                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                                    // Fill in our default background                  cr.Pattern = m_NormalBg;                  cr.FillPreserve ();                                    // Draw our outer line                  CairoHelper.SetSourceColor (                      cr' Style.Dark (StateType.Active));                  cr.LineWidth = 1;                  cr.Stroke ();                                    // Adjust our allocation to draw our inner line                  alloc.X += 1;                  alloc.Y += 1;                  alloc.Width -= 2;                  alloc.Height -= 2;                                    // Draw and stroke our inner line                  //CrumbHelper.RoundedRectangle (cr' alloc' m_Radius);                  CairoFigures.AngleFrame(cr' alloc' -10' 0' 10' 0);                  CairoHelper.SetSourceColor (                      cr' Style.Light (StateType.Normal));                  cr.LineWidth = 1;                  cr.Stroke ();                                    int i = 0;                  foreach (Crumb crumb in this.m_Crumbs) {                      Gdk.Rectangle area = m_Coords[crumb];                                            // Pad the widget area                      area.X -= 5;                      area.Y -= 4;                      area.Width += 20;                      area.Height += 8;                                            // Determine what corners we should draw  //                    Corners corners;  //                    if (i == 0)  //                        corners = Corners.TopLeft | Corners.BottomLeft;  //                    else if (i + 1 == m_Crumbs.Count)  //                        corners = Corners.TopRight | Corners.BottomRight;  //                    else  //                        corners = Corners.None;                                            bool isHover = crumb == Hover;                      bool isActive = crumb == Active;                                            if (isHover || isActive) {                          // Select our area for background drawing                         // CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                            CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                                                    // Clear the background                          //cr.SetSourceRGB (1' 1' 1);                          //cr.FillPreserve ();                                                    // Style our background                          cr.Pattern =                              isActive ? m_SelectedBg : m_PrelightBg;                          cr.FillPreserve ();                                                    StateType state = isActive ?                              StateType.Selected : StateType.Active;                                                    // Draw outer line around it                          CairoHelper.SetSourceColor (cr' Style.Mid (state));                          cr.LineWidth = 1;                          cr.Stroke ();                                                    area.X += 1;                          area.Y += 1;                          area.Width -= 2;                          area.Height -= 2;                                                    // Draw our inner highlight line                          //CrumbHelper.RoundedRectangle (cr' area' m_Radius' corners);                          CairoFigures.AngleFrame(cr' area' -10' 0' 10' 0);                            CairoHelper.SetSourceColor (cr' Style.Light (state));                          cr.LineWidth = 1;                          cr.Stroke ();                      }                                            // Draw our separator lines if needed  //                    if (i + 1 != m_Crumbs.Count) {  //                        cr.MoveTo (area.X + area.Width + 1' area.Y);  //                        cr.LineTo (area.X + area.Width + 1'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Dark (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                          //                        cr.MoveTo (area.X + area.Width + 1.5' area.Y);  //                        cr.LineTo (area.X + area.Width + 1.5'  //                                   area.Y + area.Height);  //                        CairoHelper.SetSourceColor (  //                            cr' Style.Light (StateType.Normal));  //                        cr.LineWidth = 1;  //                        cr.Stroke ();  //                    }                                            this.PropagateExpose (crumb.Widget' evnt);                                            i++;                  }              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: foreach (Crumb crumb in this.m_Crumbs) {                  Gdk.Rectangle crumbAlloc = new Gdk.Rectangle ();                                    crumbAlloc.X = x;                  crumbAlloc.Y = y;                  crumbAlloc.Width = m_Requests[crumb].Width;                  crumbAlloc.Height = alloc.Height - (y * 2);                  this.m_Coords[crumb] = crumbAlloc;                  crumb.Widget.SizeAllocate (crumbAlloc);                                    x += crumbAlloc.Width + (2 * Spacing) + 2;              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: foreach (Crumb crumb in this.m_Crumbs) {                  Gdk.Rectangle crumbAlloc = new Gdk.Rectangle ();                                    crumbAlloc.X = x;                  crumbAlloc.Y = y;                  crumbAlloc.Width = m_Requests[crumb].Width;                  crumbAlloc.Height = alloc.Height - (y * 2);                  this.m_Coords[crumb] = crumbAlloc;                  crumb.Widget.SizeAllocate (crumbAlloc);                                    x += crumbAlloc.Width + (2 * Spacing) + 2;              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: foreach (Crumb crumb in this.m_Crumbs) {                  Gdk.Rectangle crumbAlloc = new Gdk.Rectangle ();                                    crumbAlloc.X = x;                  crumbAlloc.Y = y;                  crumbAlloc.Width = m_Requests[crumb].Width;                  crumbAlloc.Height = alloc.Height - (y * 2);                  this.m_Coords[crumb] = crumbAlloc;                  crumb.Widget.SizeAllocate (crumbAlloc);                                    x += crumbAlloc.Width + (2 * Spacing) + 2;              }
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: m_NormalBg.AddColorStop (0.3' m_NormalBgBegin);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: m_NormalBg.AddColorStop (0.9' m_NormalBgEnd);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: m_PrelightBg.AddColorStop (0.3' m_PrelightBgBegin);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: m_PrelightBg.AddColorStop (0.9' m_PrelightBgEnd);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: m_SelectedBg.AddColorStop (0.3' m_SelectedBgBegin);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeAllocated,The following statement contains a magic number: m_SelectedBg.AddColorStop (0.9' m_SelectedBgEnd);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeRequested,The following statement contains a magic number: childrenSpacing += (this.m_Crumbs.Count - 1) * 2;
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeRequested,The following statement contains a magic number: req.Width = childrenWidth + childrenSpacing + (m_Xoffset * 2);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeRequested,The following statement contains a magic number: req.Height = childrenHeight + (m_Yoffset * 2);
Magic Number,TraceLab.UI.GTK,Crumbs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,OnSizeRequested,The following statement contains a magic number: req.Width += 6;
Magic Number,TraceLab.UI.GTK,CrumbHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double) (color.Red   >> 8) / 255.0'                                      (double) (color.Green >> 8) / 255.0'                                      (double) (color.Blue  >> 8) / 255.0'                                      alpha);
Magic Number,TraceLab.UI.GTK,CrumbHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double) (color.Red   >> 8) / 255.0'                                      (double) (color.Green >> 8) / 255.0'                                      (double) (color.Blue  >> 8) / 255.0'                                      alpha);
Magic Number,TraceLab.UI.GTK,CrumbHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double) (color.Red   >> 8) / 255.0'                                      (double) (color.Green >> 8) / 255.0'                                      (double) (color.Blue  >> 8) / 255.0'                                      alpha);
Magic Number,TraceLab.UI.GTK,CrumbHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double) (color.Red   >> 8) / 255.0'                                      (double) (color.Green >> 8) / 255.0'                                      (double) (color.Blue  >> 8) / 255.0'                                      alpha);
Magic Number,TraceLab.UI.GTK,CrumbHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double) (color.Red   >> 8) / 255.0'                                      (double) (color.Green >> 8) / 255.0'                                      (double) (color.Blue  >> 8) / 255.0'                                      alpha);
Magic Number,TraceLab.UI.GTK,CrumbHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Crumbs\Crumbs.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double) (color.Red   >> 8) / 255.0'                                      (double) (color.Green >> 8) / 255.0'                                      (double) (color.Blue  >> 8) / 255.0'                                      alpha);
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,showOrHydeHiddenFields,The following statement contains a magic number: if (!isChallenge) {                                   this.tbx_tags.Visible = isChallenge;                  this.tagsLabel.Visible = isChallenge;                  this.metricLabel.Visible = isChallenge;                  this.metricCombobox.Visible = isChallenge;                  this.deadlineLabel.Visible = isChallenge;                  this.deadLineTextArea.Visible = isChallenge;                  this.datePickerButton.Visible = isChallenge;                  this.lockUnlock.Visible = isChallenge;                    this.Resize (671' 200);                               } else {                  //if the user unlocked the challenge with a password challenge he can't                   //access all the fields                  if (hasChallengePasswordBeenUsed()) {                      this.tbx_tags.IsEditable = false;                      this.tbx_experimentName.IsEditable = false;                      this.deadLineTextArea.IsEditable = false;                      this.lockUnlock.Visible = false;                      this.datePickerButton.Visible = false;                      this.metricCombobox.Sensitive = false;                  }                    this.Resize(671' 502);              }
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,showOrHydeHiddenFields,The following statement contains a magic number: if (!isChallenge) {                                   this.tbx_tags.Visible = isChallenge;                  this.tagsLabel.Visible = isChallenge;                  this.metricLabel.Visible = isChallenge;                  this.metricCombobox.Visible = isChallenge;                  this.deadlineLabel.Visible = isChallenge;                  this.deadLineTextArea.Visible = isChallenge;                  this.datePickerButton.Visible = isChallenge;                  this.lockUnlock.Visible = isChallenge;                    this.Resize (671' 200);                               } else {                  //if the user unlocked the challenge with a password challenge he can't                   //access all the fields                  if (hasChallengePasswordBeenUsed()) {                      this.tbx_tags.IsEditable = false;                      this.tbx_experimentName.IsEditable = false;                      this.deadLineTextArea.IsEditable = false;                      this.lockUnlock.Visible = false;                      this.datePickerButton.Visible = false;                      this.metricCombobox.Sensitive = false;                  }                    this.Resize(671' 502);              }
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,showOrHydeHiddenFields,The following statement contains a magic number: if (!isChallenge) {                                   this.tbx_tags.Visible = isChallenge;                  this.tagsLabel.Visible = isChallenge;                  this.metricLabel.Visible = isChallenge;                  this.metricCombobox.Visible = isChallenge;                  this.deadlineLabel.Visible = isChallenge;                  this.deadLineTextArea.Visible = isChallenge;                  this.datePickerButton.Visible = isChallenge;                  this.lockUnlock.Visible = isChallenge;                    this.Resize (671' 200);                               } else {                  //if the user unlocked the challenge with a password challenge he can't                   //access all the fields                  if (hasChallengePasswordBeenUsed()) {                      this.tbx_tags.IsEditable = false;                      this.tbx_experimentName.IsEditable = false;                      this.deadLineTextArea.IsEditable = false;                      this.lockUnlock.Visible = false;                      this.datePickerButton.Visible = false;                      this.metricCombobox.Sensitive = false;                  }                    this.Resize(671' 502);              }
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,showOrHydeHiddenFields,The following statement contains a magic number: if (!isChallenge) {                                   this.tbx_tags.Visible = isChallenge;                  this.tagsLabel.Visible = isChallenge;                  this.metricLabel.Visible = isChallenge;                  this.metricCombobox.Visible = isChallenge;                  this.deadlineLabel.Visible = isChallenge;                  this.deadLineTextArea.Visible = isChallenge;                  this.datePickerButton.Visible = isChallenge;                  this.lockUnlock.Visible = isChallenge;                    this.Resize (671' 200);                               } else {                  //if the user unlocked the challenge with a password challenge he can't                   //access all the fields                  if (hasChallengePasswordBeenUsed()) {                      this.tbx_tags.IsEditable = false;                      this.tbx_experimentName.IsEditable = false;                      this.deadLineTextArea.IsEditable = false;                      this.lockUnlock.Visible = false;                      this.datePickerButton.Visible = false;                      this.metricCombobox.Sensitive = false;                  }                    this.Resize(671' 502);              }
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,formatTags,The following statement contains a magic number: if(toReturn.Length > 0)                  toReturn = toReturn.Remove (toReturn.Length-2);
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(7))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(7))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w2.TopAttach = ((uint)(6));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w2.BottomAttach = ((uint)(7));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w2.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.tbx_description.HeightRequest = 132;
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.tbx_description.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w4.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w4.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w4.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.label1.WidthRequest = 140;
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.label1.Ellipsize = ((global::Pango.EllipsizeMode)(3));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w5.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w5.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w6.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w6.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w6.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w7.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w7.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w8.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w8.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w8.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w9.TopAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w9.BottomAttach = ((uint)(6));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w9.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w9.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w10.TopAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w10.BottomAttach = ((uint)(6));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w10.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w10.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.table2 = new global::Gtk.Table (((uint)(1))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.table2.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.table2.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w11.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w11.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w11.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w12.XPadding = ((uint)(115));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w12.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w13.TopAttach = ((uint)(6));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w13.BottomAttach = ((uint)(7));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w13.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w13.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w13.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w14.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w14.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w14.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w14.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w15.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w15.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w15.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w15.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w16.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w16.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w16.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w16.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w17.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w17.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w17.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w18.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w18.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w18.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w18.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w18.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w20.Spacing = 10;
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w20.BorderWidth = ((uint)(5));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w20.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w23.Spacing = 2;
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.btn_cancel' -6);
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w32.Spacing = 2;
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.btn_ok' -10);
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: w39.Position = 2;
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.DefaultWidth = 671;
Magic Number,TraceLab.UI.GTK,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\AboutExperimentDialog.cs,Build,The following statement contains a magic number: this.DefaultHeight = 448;
Magic Number,TraceLab.UI.GTK,ComponentsLibraryWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryWidget.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ComponentsLibraryWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 2;
Magic Number,TraceLab.UI.GTK,ComponentsLibraryWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryWidget.cs,Build,The following statement contains a magic number: w4.Spacing = 2;
Magic Number,TraceLab.UI.GTK,ComponentsLibraryWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryWidget.cs,Build,The following statement contains a magic number: w13.Spacing = 2;
Magic Number,TraceLab.UI.GTK,ComponentsLibraryWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryWidget.cs,Build,The following statement contains a magic number: w21.Position = 2;
Magic Number,TraceLab.UI.GTK,ComponentsLibraryPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ComponentsLibrary\ComponentsLibraryPad.cs,Initialize,The following statement contains a magic number: componentLibraryDock.DefaultWidth = 200;
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,InputIncludeCheckBoxToggled,The following statement contains a magic number: if (m_inputsStore.GetIterFromString (out iter' args.Path))               {                  ItemSetting itemSetting = (ItemSetting)m_inputsStore.GetValue(iter' 2);                  itemSetting.Include = !itemSetting.Include;              }
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,OutputsIncludeCheckBoxToggled,The following statement contains a magic number: if (m_outputsStore.GetIterFromString (out iter' args.Path))               {                  ItemSetting itemSetting = (ItemSetting)m_outputsStore.GetValue(iter' 2);                  itemSetting.Include = !itemSetting.Include;              }
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,RenderIncludeCheckBox,The following statement contains a magic number: ItemSetting itemSetting = (ItemSetting)model.GetValue(iter' 2);
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,Build,The following statement contains a magic number: this.vbox3.Spacing = 6;
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,Build,The following statement contains a magic number: this.vbox3.BorderWidth = ((uint)(3));
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,Build,The following statement contains a magic number: this.textview1.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,Build,The following statement contains a magic number: this.textview1.LeftMargin = 4;
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,Build,The following statement contains a magic number: this.textview1.RightMargin = 4;
Magic Number,TraceLab.UI.GTK,IOSpecSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\IOSpecSetupPage.cs,Build,The following statement contains a magic number: w4.Position = 2;
Magic Number,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,AliasEdited,The following statement contains a magic number: if (m_configStore.GetIterFromString (out iter' args.Path))               {                  ConfigItemSetting itemSetting = (ConfigItemSetting)m_configStore.GetValue(iter' 2);                  itemSetting.Alias = args.NewText;              }
Magic Number,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,IncludeCheckBoxToggled,The following statement contains a magic number: if (m_configStore.GetIterFromString (out iter' args.Path))               {                  ConfigItemSetting itemSetting = (ConfigItemSetting)m_configStore.GetValue(iter' 3);                  itemSetting.Include = !itemSetting.Include;              }
Magic Number,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,RenderType,The following statement contains a magic number: ConfigItemSetting itemSetting = (ConfigItemSetting)model.GetValue(iter' 2);
Magic Number,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,RenderIncludeCheckBox,The following statement contains a magic number: ConfigItemSetting itemSetting = (ConfigItemSetting)model.GetValue(iter' 3);
Magic Number,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,Build,The following statement contains a magic number: this.vbox2.BorderWidth = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,Build,The following statement contains a magic number: this.textview1.LeftMargin = 4;
Magic Number,TraceLab.UI.GTK,ConfigSetupPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfigSetupPage.cs,Build,The following statement contains a magic number: this.textview1.RightMargin = 4;
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.vbox2.BorderWidth = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.textview1.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.textview1.LeftMargin = 4;
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.textview1.RightMargin = 4;
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(6))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(6))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(8));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(12));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: this.table1.BorderWidth = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w2.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w2.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w2.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w3.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w3.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w4.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w4.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w4.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w5.TopAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w5.BottomAttach = ((uint)(6));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w5.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w5.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w5.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w7.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w7.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w7.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w8.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w9.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w9.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w9.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w10.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w10.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w10.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w10.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w11.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w11.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w11.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w11.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w12.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w12.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w12.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w12.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w13.TopAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w13.BottomAttach = ((uint)(6));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w13.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w13.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w14.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w14.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w14.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w14.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentInfoPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ComponentInfoPage.cs,Build,The following statement contains a magic number: w14.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ConfirmationPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfirmationPage.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ConfirmationPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfirmationPage.cs,Build,The following statement contains a magic number: this.messageTextView.Justification = ((global::Gtk.Justification)(2));
Magic Number,TraceLab.UI.GTK,ConfirmationPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfirmationPage.cs,Build,The following statement contains a magic number: this.messageTextView.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,ConfirmationPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfirmationPage.cs,Build,The following statement contains a magic number: this.messageTextView.LeftMargin = 10;
Magic Number,TraceLab.UI.GTK,ConfirmationPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfirmationPage.cs,Build,The following statement contains a magic number: this.messageTextView.RightMargin = 10;
Magic Number,TraceLab.UI.GTK,ConfirmationPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\ConfirmationPage.cs,Build,The following statement contains a magic number: w1.Padding = ((uint)(25));
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.BorderWidth = ((uint)(3));
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.hpaned1.Position = 300;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.experimentcanvaswidget1.Events = ((global::Gdk.EventMask)(256));
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.mainVBox.Spacing = 6;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.hbox1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: w4.Position = 2;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: w5.Position = 3;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.hbuttonbox2.Spacing = 10;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.hbuttonbox2.BorderWidth = ((uint)(3));
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.hbuttonbox2.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: w12.Spacing = 2;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: w19.Position = 2;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: w20.Position = 3;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: w21.Position = 4;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.DefaultWidth = 848;
Magic Number,TraceLab.UI.GTK,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\DefineCompositeComponentWizard\DefineCompositeComponentWizard.cs,Build,The following statement contains a magic number: this.DefaultHeight = 478;
Magic Number,TraceLab.UI.GTK,PackageReferencesWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\PackageReferencesWindow\PackageReferencesWindow.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,PackageReferencesWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\PackageReferencesWindow\PackageReferencesWindow.cs,Build,The following statement contains a magic number: this.DefaultWidth = 400;
Magic Number,TraceLab.UI.GTK,PackageReferencesWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\PackageReferencesWindow\PackageReferencesWindow.cs,Build,The following statement contains a magic number: this.DefaultHeight = 300;
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,ErrorDialog,The following statement contains a magic number: descriptionLabel.ModifyBg (StateType.Normal' new Gdk.Color (255'0'0));
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,OnExpander1Activated,The following statement contains a magic number: GLib.Timeout.Add (100' new GLib.TimeoutHandler (UpdateSize));
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: this.hbox1.BorderWidth = ((uint)(12));
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: this.vbox3.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: this.GtkScrolledWindow.HeightRequest = 250;
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: w9.Spacing = 10;
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: w9.BorderWidth = ((uint)(5));
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: w9.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.okButton' -5);
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: this.DefaultWidth = 624;
Magic Number,TraceLab.UI.GTK,ErrorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\Dialogs\ErrorDialog.cs,Build,The following statement contains a magic number: this.DefaultHeight = 142;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,WelcomePageWidget,The following statement contains a magic number: mainEventBox.ModifyBg(Gtk.StateType.Normal' new Gdk.Color(255'255'255));
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,WelcomePageWidget,The following statement contains a magic number: mainEventBox.ModifyBg(Gtk.StateType.Normal' new Gdk.Color(255'255'255));
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,WelcomePageWidget,The following statement contains a magic number: mainEventBox.ModifyBg(Gtk.StateType.Normal' new Gdk.Color(255'255'255));
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.mainVbox.Spacing = 6;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 12;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.hbox1.BorderWidth = ((uint)(6));
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: w3.Spacing = 2;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: w12.Spacing = 2;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: w20.Position = 2;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: w21.Position = 3;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.GtkScrolledWindow.HscrollbarPolicy = ((global::Gtk.PolicyType)(2));
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: w23.Position = 4;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.NSFFundingText.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: w26.Position = 5;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.notebook1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.labelOnlineResources.WidthChars = 18;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: this.labelVideoTutorials.WidthChars = 18;
Magic Number,TraceLab.UI.GTK,WelcomePageWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\WelcomePageWidget.cs,Build,The following statement contains a magic number: w31.Padding = ((uint)(4));
Magic Number,TraceLab.UI.GTK,MenuButton,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\MenuButton.cs,Construct,The following statement contains a magic number: if (showArrow) {  				if (showLabel) {  					box.PackStart (button_widget' true' true' 3);  					label_widget = new Gtk.Label ();  					box.PackStart (label_widget' true' false' 2);  				} else {  					box.PackStart (button_widget' true' true' 5);  				}    				alignment = new Alignment (0f' 0.5f' 0f' 0f);  				arrow = new Arrow (ArrowType.Down' ShadowType.None);  				alignment.Add (arrow);  				box.PackStart (alignment' false' false' 0);  				size_widget = box;  				FocusChain = new Widget[] { toggle_button' box };  				alignment.ShowAll ();  				alignment.NoShowAll = true;  			} else {  				toggle_button.Add (button_widget);  				size_widget = toggle_button;  			}
Magic Number,TraceLab.UI.GTK,MenuButton,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\MenuButton.cs,Construct,The following statement contains a magic number: if (showArrow) {  				if (showLabel) {  					box.PackStart (button_widget' true' true' 3);  					label_widget = new Gtk.Label ();  					box.PackStart (label_widget' true' false' 2);  				} else {  					box.PackStart (button_widget' true' true' 5);  				}    				alignment = new Alignment (0f' 0.5f' 0f' 0f);  				arrow = new Arrow (ArrowType.Down' ShadowType.None);  				alignment.Add (arrow);  				box.PackStart (alignment' false' false' 0);  				size_widget = box;  				FocusChain = new Widget[] { toggle_button' box };  				alignment.ShowAll ();  				alignment.NoShowAll = true;  			} else {  				toggle_button.Add (button_widget);  				size_widget = toggle_button;  			}
Magic Number,TraceLab.UI.GTK,MenuButton,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\MenuButton.cs,Construct,The following statement contains a magic number: if (showArrow) {  				if (showLabel) {  					box.PackStart (button_widget' true' true' 3);  					label_widget = new Gtk.Label ();  					box.PackStart (label_widget' true' false' 2);  				} else {  					box.PackStart (button_widget' true' true' 5);  				}    				alignment = new Alignment (0f' 0.5f' 0f' 0f);  				arrow = new Arrow (ArrowType.Down' ShadowType.None);  				alignment.Add (arrow);  				box.PackStart (alignment' false' false' 0);  				size_widget = box;  				FocusChain = new Widget[] { toggle_button' box };  				alignment.ShowAll ();  				alignment.NoShowAll = true;  			} else {  				toggle_button.Add (button_widget);  				size_widget = toggle_button;  			}
Magic Number,TraceLab.UI.GTK,GtkMenuHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Utils\GtkMenuHelper.cs,DrawImageMenuItemImage,The following statement contains a magic number: args.Event.Window.DrawPixbuf(mainGC' image.Pixbuf' 0' 0' r.Left + 2'                                            r.Top + (r.Height - image.Pixbuf.Height) / 2' -1' -1' Gdk.RgbDither.None' 0' 0);
Magic Number,TraceLab.UI.GTK,GtkMenuHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Utils\GtkMenuHelper.cs,DrawImageMenuItemImage,The following statement contains a magic number: args.Event.Window.DrawPixbuf(mainGC' image.Pixbuf' 0' 0' r.Left + 2'                                            r.Top + (r.Height - image.Pixbuf.Height) / 2' -1' -1' Gdk.RgbDither.None' 0' 0);
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.vbox3.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.GtkAlignment2.LeftPadding = ((uint)(12));
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w4.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.GtkAlignment9.LeftPadding = ((uint)(12));
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.vbox4.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.hbox6.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.vbox7.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w22.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w31.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w40.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w47.Position = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w49.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w56.Position = 3;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.GtkAlignment11.LeftPadding = ((uint)(12));
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.vbox8.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.hbox3.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.vbox5.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w70.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w79.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w88.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w95.Position = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w97.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w104.Position = 3;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w109.Position = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.GtkAlignment17.LeftPadding = ((uint)(12));
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.hbox4.Spacing = 6;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w112.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w122.Position = 3;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w124.Spacing = 10;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w124.BorderWidth = ((uint)(5));
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w124.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w126.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -6);
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: w135.Spacing = 2;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonOk' -5);
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.DefaultWidth = 709;
Magic Number,TraceLab.UI.GTK,SettingsDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\SettingsDialog.cs,Build,The following statement contains a magic number: this.DefaultHeight = 584;
Magic Number,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The following statement contains a magic number: this.frameVBox.Spacing = 6;
Magic Number,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The following statement contains a magic number: this.mainVBox.Spacing = 6;
Magic Number,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The following statement contains a magic number: this.hbuttonbox1.Spacing = 5;
Magic Number,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The following statement contains a magic number: this.hbuttonbox1.BorderWidth = ((uint)(5));
Magic Number,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The following statement contains a magic number: this.hbuttonbox1.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The following statement contains a magic number: this.DefaultWidth = 555;
Magic Number,TraceLab.UI.GTK,PackageBuilderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderWindow.cs,Build,The following statement contains a magic number: this.DefaultHeight = 265;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: w1.Padding = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.configVBox.Spacing = 6;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.configVBox.BorderWidth = ((uint)(4));
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DecriptionIncludeIndependentFilesDirs.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DecriptionIncludeIndependentFilesDirs.PixelsBelowLines = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DecriptionIncludeIndependentFilesDirs.LeftMargin = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DecriptionIncludeIndependentFilesDirs.RightMargin = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DecriptionIncludeIndependentFilesDirs.Indent = 4;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: w4.Position = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesFilesDirs.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesFilesDirs.PixelsBelowLines = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesFilesDirs.LeftMargin = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesFilesDirs.RightMargin = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesFilesDirs.Indent = 4;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: w5.Position = 3;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: w6.Position = 4;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesAssemblies.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesAssemblies.PixelsBelowLines = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesAssemblies.LeftMargin = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesAssemblies.RightMargin = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.DescriptionIncludeOtherPackagesAssemblies.Indent = 4;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: w7.Position = 5;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.OtherNotes.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.OtherNotes.PixelsAboveLines = 6;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.OtherNotes.LeftMargin = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: this.OtherNotes.RightMargin = 2;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: w8.Position = 6;
Magic Number,TraceLab.UI.GTK,PackageBuilderSettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderSettingsPage.cs,Build,The following statement contains a magic number: w9.Padding = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PackageBuilderMainPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderMainPage.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,TraceLab.UI.GTK,PackageBuilderMainPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderMainPage.cs,Build,The following statement contains a magic number: this.vbox1.BorderWidth = ((uint)(4));
Magic Number,TraceLab.UI.GTK,PackageBuilderMainPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PackageBuilder\PackageBuilderMainPage.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,OnMaxSCopeNodeButtonClick,The following statement contains a magic number: scopeNodeControlCurrent.MoveTo(5'5);
Magic Number,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,OnMaxSCopeNodeButtonClick,The following statement contains a magic number: scopeNodeControlCurrent.MoveTo(5'5);
Magic Number,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,OnMaxSCopeNodeButtonClick,The following statement contains a magic number: scopeNodeControlCurrent.PaddingBottom =  500;
Magic Number,TraceLab.UI.GTK,ScopeCanvasPad,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ScopeCanvasPad.cs,OnMaxSCopeNodeButtonClick,The following statement contains a magic number: scopeNodeControlCurrent.PaddingRight =   500;
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,DrawFrame,The following statement contains a magic number: double side = 10.0;
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,DrawFrame,The following statement contains a magic number: rect2.Height = 30;
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,DrawFrame,The following statement contains a magic number: if (!nodeCreated)  {                  xCur = rect.X;                                yCur = rect.Y;                   // HERZUM SPRINT 2.4: TLAB-156                  offsetPanX =  ecp.ExperimentCanvasWidget.OffsetPanX;                  offsetPanY= ecp.ExperimentCanvasWidget.OffsetPanY;                  ecp.ExperimentCanvasWidget.ExperimentCanvas.View.AddWidget (cw' rect.X+offsetPanX' rect.Y+offsetPanY + 30);                   // END HERZUM SPRINT 2.4: TLAB-156                  //ecp.ExperimentCanvasWidget.ExperimentCanvas.View.AddWidget (cw' rect.X' rect.Y + 30);                   cw.Show ();                  nodeCreated=true;                                     }               else if (xCur != rect.X || yCur != rect.Y) {                  //HERZUM SPRINT 2.0 TLAB-136                     //m_applicationContext.MainWindow.ExperimentCanvasPad.ExperimentCanvasWidget.ExperimentCanvas.View.MoveWidget (cw' rect.X' rect.Y + 30);                  // HERZUM SPRINT 2.4: TLAB-156                  if ((valueZoom==zoomPrevious && valueZoom==1))                       ecp.ExperimentCanvasWidget.ExperimentCanvas.View.MoveWidget (cw' rect.X+offsetPanX' rect.Y+offsetPanY + 30);                  // END HERZUM SPRINT 2.4: TLAB-156                  //END HERZUM SPRINT 2.0 TLAB-136                     xCur = rect.X;                  yCur = rect.Y;                             }
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,DrawFrame,The following statement contains a magic number: if (!nodeCreated)  {                  xCur = rect.X;                                yCur = rect.Y;                   // HERZUM SPRINT 2.4: TLAB-156                  offsetPanX =  ecp.ExperimentCanvasWidget.OffsetPanX;                  offsetPanY= ecp.ExperimentCanvasWidget.OffsetPanY;                  ecp.ExperimentCanvasWidget.ExperimentCanvas.View.AddWidget (cw' rect.X+offsetPanX' rect.Y+offsetPanY + 30);                   // END HERZUM SPRINT 2.4: TLAB-156                  //ecp.ExperimentCanvasWidget.ExperimentCanvas.View.AddWidget (cw' rect.X' rect.Y + 30);                   cw.Show ();                  nodeCreated=true;                                     }               else if (xCur != rect.X || yCur != rect.Y) {                  //HERZUM SPRINT 2.0 TLAB-136                     //m_applicationContext.MainWindow.ExperimentCanvasPad.ExperimentCanvasWidget.ExperimentCanvas.View.MoveWidget (cw' rect.X' rect.Y + 30);                  // HERZUM SPRINT 2.4: TLAB-156                  if ((valueZoom==zoomPrevious && valueZoom==1))                       ecp.ExperimentCanvasWidget.ExperimentCanvas.View.MoveWidget (cw' rect.X+offsetPanX' rect.Y+offsetPanY + 30);                  // END HERZUM SPRINT 2.4: TLAB-156                  //END HERZUM SPRINT 2.0 TLAB-136                     xCur = rect.X;                  yCur = rect.Y;                             }
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,DrawFrame,The following statement contains a magic number: offsetPanY= (point.Y-rect2.Y-30)/valueZoom;
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,DrawFrame,The following statement contains a magic number: if (ecp.ExperimentCanvasWidget.IsPanToolButtonActive())                  {                  if (valueZoom==1)                      ecp.ExperimentCanvasWidget.ExperimentCanvas.View.MoveWidget (cw' rect.X+offsetPanX' rect.Y+offsetPanY + 30);              }
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,AdaptsZoom,The following statement contains a magic number: if (!(newZoom==zoomPrevious && newZoom==1))                {                  rectZoom = new Gdk.Rectangle ();                  rectZoom.Height= (int)((PaddingBottom-10)*newZoom);                  rectZoom.Width = (int)((PaddingLeft * 2 + ExperimentNode.Data.Metadata.Label.Length * 6 +10)*newZoom);                  // HERZUM SPRINT 2.4: TLAB-156                  rectZoom.X = (int)((rect2.X+offsetPanX+1)*newZoom);                  rectZoom.Y = (int)((rect2.Y2+offsetPanY+1)*newZoom);                  // END HERZUM SPRINT 2.4: TLAB-156                  cw.Allocation=rectZoom;                  zoomPrevious = newZoom;                  valueZoom = newZoom;                  if (newZoom==1)                      ecp.RedrawScope (cw'  rect.X+offsetPanX' rect2.Y2+offsetPanY);              }
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,AdaptsZoom,The following statement contains a magic number: if (!(newZoom==zoomPrevious && newZoom==1))                {                  rectZoom = new Gdk.Rectangle ();                  rectZoom.Height= (int)((PaddingBottom-10)*newZoom);                  rectZoom.Width = (int)((PaddingLeft * 2 + ExperimentNode.Data.Metadata.Label.Length * 6 +10)*newZoom);                  // HERZUM SPRINT 2.4: TLAB-156                  rectZoom.X = (int)((rect2.X+offsetPanX+1)*newZoom);                  rectZoom.Y = (int)((rect2.Y2+offsetPanY+1)*newZoom);                  // END HERZUM SPRINT 2.4: TLAB-156                  cw.Allocation=rectZoom;                  zoomPrevious = newZoom;                  valueZoom = newZoom;                  if (newZoom==1)                      ecp.RedrawScope (cw'  rect.X+offsetPanX' rect2.Y2+offsetPanY);              }
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,AdaptsZoom,The following statement contains a magic number: if (!(newZoom==zoomPrevious && newZoom==1))                {                  rectZoom = new Gdk.Rectangle ();                  rectZoom.Height= (int)((PaddingBottom-10)*newZoom);                  rectZoom.Width = (int)((PaddingLeft * 2 + ExperimentNode.Data.Metadata.Label.Length * 6 +10)*newZoom);                  // HERZUM SPRINT 2.4: TLAB-156                  rectZoom.X = (int)((rect2.X+offsetPanX+1)*newZoom);                  rectZoom.Y = (int)((rect2.Y2+offsetPanY+1)*newZoom);                  // END HERZUM SPRINT 2.4: TLAB-156                  cw.Allocation=rectZoom;                  zoomPrevious = newZoom;                  valueZoom = newZoom;                  if (newZoom==1)                      ecp.RedrawScope (cw'  rect.X+offsetPanX' rect2.Y2+offsetPanY);              }
Magic Number,TraceLab.UI.GTK,CommentNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\CommentNodeControl.cs,AdaptsZoom,The following statement contains a magic number: if (!(newZoom==zoomPrevious && newZoom==1))                {                  rectZoom = new Gdk.Rectangle ();                  rectZoom.Height= (int)((PaddingBottom-10)*newZoom);                  rectZoom.Width = (int)((PaddingLeft * 2 + ExperimentNode.Data.Metadata.Label.Length * 6 +10)*newZoom);                  // HERZUM SPRINT 2.4: TLAB-156                  rectZoom.X = (int)((rect2.X+offsetPanX+1)*newZoom);                  rectZoom.Y = (int)((rect2.Y2+offsetPanY+1)*newZoom);                  // END HERZUM SPRINT 2.4: TLAB-156                  cw.Allocation=rectZoom;                  zoomPrevious = newZoom;                  valueZoom = newZoom;                  if (newZoom==1)                      ecp.RedrawScope (cw'  rect.X+offsetPanX' rect2.Y2+offsetPanY);              }
Magic Number,TraceLab.UI.GTK,CommentWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CommentWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,TraceLab.UI.GTK,CommentWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CommentWidget.cs,Build,The following statement contains a magic number: this.GtkScrolledWindow.VscrollbarPolicy = ((global::Gtk.PolicyType)(2));
Magic Number,TraceLab.UI.GTK,CommentWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CommentWidget.cs,Build,The following statement contains a magic number: this.GtkScrolledWindow.HscrollbarPolicy = ((global::Gtk.PolicyType)(2));
Magic Number,TraceLab.UI.GTK,LoopNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\LoopNodeControl.cs,DrawFrame,The following statement contains a magic number: double[] dash = {2' 0' 2};
Magic Number,TraceLab.UI.GTK,LoopNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\LoopNodeControl.cs,DrawFrame,The following statement contains a magic number: double[] dash = {2' 0' 2};
Magic Number,TraceLab.UI.GTK,LoopNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\LoopNodeControl.cs,DrawFrame,The following statement contains a magic number: rect2.Height = 30;
Magic Number,TraceLab.UI.GTK,LoopNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\LoopNodeControl.cs,DrawFrame,The following statement contains a magic number: CairoFigures.CurvedRectangle(context' rect2' 30);
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,LoopDecisionInfoPanel,The following statement contains a magic number: this.WidthRequest = 420;
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,LoopDecisionInfoPanel,The following statement contains a magic number: this.HeightRequest = 315;
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,hideOrShowErrorArea,The following statement contains a magic number: if(this.GdkWindow != null)                  this.GdkWindow.Resize (420' 315);
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,hideOrShowErrorArea,The following statement contains a magic number: if(this.GdkWindow != null)                  this.GdkWindow.Resize (420' 315);
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,CheckCode,The following statement contains a magic number: if(this.errorTextView1.Visible)                  this.GdkWindow.Resize (381' 375);
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,CheckCode,The following statement contains a magic number: if(this.errorTextView1.Visible)                  this.GdkWindow.Resize (381' 375);
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(6))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(6))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w1.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w1.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w1.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w1.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.componentLabelLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.componentLabelLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w2.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w3.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.decisionCodeLbl1.Xpad = 3;
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w4.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w4.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView1.WrapMode = ((global::Gtk.WrapMode)(3));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView1.LeftMargin = 3;
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView1.RightMargin = 3;
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w5.TopAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w5.BottomAttach = ((uint)(6));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w5.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w7.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table2 = new global::Gtk.Table (((uint)(3))' ((uint)(1))' false);
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table2.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table2.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w9.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w9.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w9.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,LoopDecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\LoopDecisionInfoPanel.cs,Build,The following statement contains a magic number: w9.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ExitDecisionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExitDecisionControl.cs,ExitDecisionControl,The following statement contains a magic number: PaddingLeft = 10.0;
Magic Number,TraceLab.UI.GTK,ExitDecisionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExitDecisionControl.cs,ExitDecisionControl,The following statement contains a magic number: PaddingTop = 10.0;
Magic Number,TraceLab.UI.GTK,ExitDecisionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExitDecisionControl.cs,ExitDecisionControl,The following statement contains a magic number: PaddingRight = 10.0;
Magic Number,TraceLab.UI.GTK,ExitDecisionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExitDecisionControl.cs,ExitDecisionControl,The following statement contains a magic number: PaddingBottom = 10.0;
Magic Number,TraceLab.UI.GTK,ExitDecisionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExitDecisionControl.cs,ExitDecisionControl,The following statement contains a magic number: m_newConnectionHandle = new NewConnectionHandle (this' applicationContext' new QuickActionLocator (15' 0.5' QuickActionPosition.Right));
Magic Number,TraceLab.UI.GTK,ExitDecisionControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExitDecisionControl.cs,ExitDecisionControl,The following statement contains a magic number: m_newConnectionHandle = new NewConnectionHandle (this' applicationContext' new QuickActionLocator (15' 0.5' QuickActionPosition.Right));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,DecisionInfoPanel,The following statement contains a magic number: this.WidthRequest = 420;
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,DecisionInfoPanel,The following statement contains a magic number: this.HeightRequest = 315;
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,hideOrShowErrorArea,The following statement contains a magic number: if(this.GdkWindow != null)                      this.GdkWindow.Resize (420' 315);
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,hideOrShowErrorArea,The following statement contains a magic number: if(this.GdkWindow != null)                      this.GdkWindow.Resize (420' 315);
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,CheckCode,The following statement contains a magic number: this.GdkWindow.Resize (381' 375);
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,CheckCode,The following statement contains a magic number: this.GdkWindow.Resize (381' 375);
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(6))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(6))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w1.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w1.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w1.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w1.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.componentLabelLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.componentLabelLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w2.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w3.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.decisionCodeLbl1.Xpad = 3;
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w4.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w4.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView1.WrapMode = ((global::Gtk.WrapMode)(3));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView1.LeftMargin = 3;
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView1.RightMargin = 3;
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w5.TopAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w5.BottomAttach = ((uint)(6));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w5.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w5.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w7.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w7.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table3 = new global::Gtk.Table (((uint)(3))' ((uint)(1))' false);
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table3.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: this.table3.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w8.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w9.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w9.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w10.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w10.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w10.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,DecisionInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\DecisionInfoPanel.cs,Build,The following statement contains a magic number: w10.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ComponentResizeControl,The following statement contains a magic number: PaddingTop = 7.0;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ComponentResizeControl,The following statement contains a magic number: PaddingLeft= widthMeta/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ComponentResizeControl,The following statement contains a magic number: PaddingRight= widthMeta/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ComponentResizeControl,The following statement contains a magic number: paddingLeftOriginal = 80.0;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ComponentResizeControl,The following statement contains a magic number: paddingRightOriginal = 80.0;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ComponentResizeControl,The following statement contains a magic number: paddingBottomOriginal = 160.0;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_minScope = new PixButtonHandle(this' new AbsoluteLocator(15.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                           s_minIcon' IconizeScope);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_minScope = new PixButtonHandle(this' new AbsoluteLocator(15.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                           s_minIcon' IconizeScope);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_normalScope = new PixButtonHandle(this' new AbsoluteLocator(30.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                                                             s_normalIcon' NormalizeScope);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_normalScope = new PixButtonHandle(this' new AbsoluteLocator(30.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                                                             s_normalIcon' NormalizeScope);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_maxScope = new PixButtonHandle(this' new AbsoluteLocator(50.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                           s_maxIcon' MaximizeScope);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_maxScope = new PixButtonHandle(this' new AbsoluteLocator(50.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                           s_maxIcon' MaximizeScope);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_minDisabledScope = new PixButtonHandle(this' new AbsoluteLocator(15.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                   s_minDisabledIcon' DisableIcon);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_minDisabledScope = new PixButtonHandle(this' new AbsoluteLocator(15.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                   s_minDisabledIcon' DisableIcon);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_normalDisabledScope = new PixButtonHandle(this' new AbsoluteLocator(30.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                                                                     s_normalDisabledIcon' DisableIcon);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_normalDisabledScope = new PixButtonHandle(this' new AbsoluteLocator(30.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                                                                     s_normalDisabledIcon' DisableIcon);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_maxDisabledScope = new PixButtonHandle(this' new AbsoluteLocator(50.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                   s_maxDisabledIcon' DisableIcon);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SetPixButtonHandle,The following statement contains a magic number: m_maxDisabledScope = new PixButtonHandle(this' new AbsoluteLocator(50.0' 15.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                   s_maxDisabledIcon' DisableIcon);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,RedrawButton,The following statement contains a magic number: m_resizeScope_NorthWest = new PixButtonHandle(this' new AbsoluteLocator(0.0' -5.0' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                            s_resizeIcon' ResizeScopeNorthWest'  (int)rect.X2' (int)rect.Y2' valueZoom' offsetPanX' offsetPanY);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,RedrawButton,The following statement contains a magic number: m_resizeScope_NorthEast = new PixButtonHandle(this' new AbsoluteLocator(0.0' -5.0' AbsoluteLocator.AbsoluteTo.TopRight)'                                                            s_resizeIcon' ResizeScopeNorthEast'  (int)rect.X' (int)rect.Y2' valueZoom' offsetPanX' offsetPanY);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,RedrawButton,The following statement contains a magic number: m_resizeScope_SouthEast = new PixButtonHandle(this' new AbsoluteLocator(0.0' PaddingBottom +25' AbsoluteLocator.AbsoluteTo.TopRight)'                                                            s_resizeIcon' ResizeScopeSouthEast' (int)rect.X' (int)rect.Y' valueZoom' offsetPanX' offsetPanY);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,RedrawButton,The following statement contains a magic number: m_resizeScope_SouthWest = new PixButtonHandle(this' new AbsoluteLocator(0.0' PaddingBottom + 25' AbsoluteLocator.AbsoluteTo.TopLeft)'                                                            s_resizeIcon' ResizeScopeSouthWest'  (int)rect.X2' (int)rect.Y' valueZoom' offsetPanX' offsetPanY);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,GetSizeAreaWidget,The following statement contains a magic number: if (stateWidget=="iconized")              {                  width = (int)paddingLeftOriginal*2 + (int)this.ExperimentNode.Data.Metadata.Label.Length*7;                  height = (int)paddingBottomOriginal;              }
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,GetSizeAreaWidget,The following statement contains a magic number: if (stateWidget=="iconized")              {                  width = (int)paddingLeftOriginal*2 + (int)this.ExperimentNode.Data.Metadata.Label.Length*7;                  height = (int)paddingBottomOriginal;              }
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ZoomIcon,The following statement contains a magic number: if (valueZoom<0.8)                  {                      s_maxIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_max_small.png");                      s_minIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_min_small.png");                      s_normalIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_normalize_small.png");                      s_maxDisabledIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_max_disabled_small.png");                      s_minDisabledIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_min_disabled_small.png");                      s_normalDisabledIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_normalize_disabled_small.png");                  }                  else                  {                      s_maxIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_max.png");                      s_minIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_min.png");                      s_normalIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_normalize.png");                      s_maxDisabledIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_max_disabled.png");                      s_minDisabledIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_min_disabled.png");                      s_normalDisabledIcon = Gdk.Pixbuf.LoadFromResource("TraceLab.UI.GTK.Resources.icon_normalize_disabled.png");                    }
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The following statement contains a magic number: int xPosInit = 5;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The following statement contains a magic number: int yPosInit = 5;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The following statement contains a magic number: widthMax = ecp.ExperimentCanvasWidget.ExperimentCanvas.View.VisibleArea.Width-20;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The following statement contains a magic number: heightMax = ecp.ExperimentCanvasWidget.ExperimentCanvas.View.VisibleArea.Height-40;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The following statement contains a magic number: PaddingTop = 7.0;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The following statement contains a magic number: PaddingLeft= PaddingLeft + (widthMax - (rect.X2 - rect.X))/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,MaximizeScope,The following statement contains a magic number: PaddingRight= PaddingRight + (widthMax - (rect.X2 - rect.X))/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,NormalizeScope,The following statement contains a magic number: MoveIconInfo (0.12);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,IconizeScope,The following statement contains a magic number: PaddingBottom = 7.0;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,IconizeScope,The following statement contains a magic number: PaddingLeft = 80.0;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,IconizeScope,The following statement contains a magic number: PaddingRight = 80.0;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,IconizeScope,The following statement contains a magic number: MoveIconInfo (0.8);
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthEast,The following statement contains a magic number: yMouse = yMouse + 15;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthEast,The following statement contains a magic number: double lengthLabel = rect.X2 - rect.X - 2*PaddingLeft;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthEast,The following statement contains a magic number: PaddingLeft = xMouse/2 - lengthLabel/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthEast,The following statement contains a magic number: PaddingLeft = xMouse/2 - lengthLabel/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthEast,The following statement contains a magic number: PaddingRight= xMouse/2 - lengthLabel/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthEast,The following statement contains a magic number: PaddingRight= xMouse/2 - lengthLabel/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthWest,The following statement contains a magic number: xMouse = xMouse + 10;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthWest,The following statement contains a magic number: yMouse = yMouse + 20;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthWest,The following statement contains a magic number: PaddingLeft = PaddingLeft - xMouse/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeSouthWest,The following statement contains a magic number: PaddingRight = PaddingRight - xMouse/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthWest,The following statement contains a magic number: xMouse = xMouse + 10;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthWest,The following statement contains a magic number: yMouse = yMouse + 50;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthWest,The following statement contains a magic number: PaddingLeft = PaddingLeft - xMouse/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthWest,The following statement contains a magic number: PaddingRight = PaddingRight - xMouse/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthEast,The following statement contains a magic number: yMouse = yMouse + 50;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthEast,The following statement contains a magic number: double lengthLabel = rect.X2 - rect.X - 2*PaddingLeft;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthEast,The following statement contains a magic number: PaddingLeft = xMouse/2 - lengthLabel/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthEast,The following statement contains a magic number: PaddingLeft = xMouse/2 - lengthLabel/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthEast,The following statement contains a magic number: PaddingRight = xMouse/2 - lengthLabel/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,ResizeScopeNorthEast,The following statement contains a magic number: PaddingRight = xMouse/2 - lengthLabel/2;
Magic Number,TraceLab.UI.GTK,ComponentResizeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ComponentResizeControl.cs,SaveMetadata,The following statement contains a magic number: info.Width = PaddingLeft*2;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPadFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExperimentCanvasPadFactory.cs,CreateCompositeExperimentCanvasPad,The following statement contains a magic number: attributes.X = 100;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPadFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExperimentCanvasPadFactory.cs,CreateCompositeExperimentCanvasPad,The following statement contains a magic number: attributes.Y = 100;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPadFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExperimentCanvasPadFactory.cs,CreateCompositeExperimentCanvasPad,The following statement contains a magic number: attributes.Width = 100;
Magic Number,TraceLab.UI.GTK,ExperimentCanvasPadFactory,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\Nodes\ExperimentCanvasPadFactory.cs,CreateCompositeExperimentCanvasPad,The following statement contains a magic number: attributes.Height = 100;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (wInfo==0 || hInfo==0)              {                  componentInfoExpander.GdkWindow.GetSize (out wInfo' out hInfo);                  if (descriptionValue.Visible)                      hDesc = (int)(((descriptionValue.Text.Length / 50)+1) * 20)+30;              }
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (wInfo==0 || hInfo==0)              {                  componentInfoExpander.GdkWindow.GetSize (out wInfo' out hInfo);                  if (descriptionValue.Visible)                      hDesc = (int)(((descriptionValue.Text.Length / 50)+1) * 20)+30;              }
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (wInfo==0 || hInfo==0)              {                  componentInfoExpander.GdkWindow.GetSize (out wInfo' out hInfo);                  if (descriptionValue.Visible)                      hDesc = (int)(((descriptionValue.Text.Length / 50)+1) * 20)+30;              }
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (componentInfoExpander.Expanded)              {                  GdkWindow.Resize(wPanel'hPanel + hInfo + hDesc +80);              }              else              {                  GdkWindow.Resize(600'50);              }
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (componentInfoExpander.Expanded)              {                  GdkWindow.Resize(wPanel'hPanel + hInfo + hDesc +80);              }              else              {                  GdkWindow.Resize(600'50);              }
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,OnComponentInfoExpanderActivated,The following statement contains a magic number: if (componentInfoExpander.Expanded)              {                  GdkWindow.Resize(wPanel'hPanel + hInfo + hDesc +80);              }              else              {                  GdkWindow.Resize(600'50);              }
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.vbox1.WidthRequest = 600;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView.Justification = ((global::Gtk.Justification)(3));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView.LeftMargin = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.errorTextView.RightMargin = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w1.Padding = ((uint)(3));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.infoTable = new global::Gtk.Table (((uint)(5))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.infoTable = new global::Gtk.Table (((uint)(5))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.infoTable.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.infoTable.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.authorLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.authorLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w2.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w2.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w2.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.authorValue.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.authorValue.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w3.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w3.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w3.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w3.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.componentLabelLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.componentLabelLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w5.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w5.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w5.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.componentNameLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.componentNameLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w6.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w6.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w6.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.componentNameValue.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.componentNameValue.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w7.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w7.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w8.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w8.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w8.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionValue.WidthRequest = 500;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionValue.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.descriptionValue.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w9.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w9.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w9.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w9.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w9.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.versionLbl.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.versionLbl.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w10.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w10.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w10.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w10.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.versionValue.Xpad = 3;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: this.versionValue.Ypad = 2;
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w11.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w11.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w11.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w11.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,BaseInfoPanel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\BaseInfoPanel.cs,Build,The following statement contains a magic number: w11.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,OnButtonOkClicked,The following statement contains a magic number: if (!string.IsNullOrEmpty (challengePwdEntry.Text) || !string.IsNullOrEmpty (reinsChallengePwdEntry.Text)) {                  if (challengePwdEntry.Text.Length < 8) {                      error += "Challenge password must be at least 8 characters long\n";                   } else if (string.IsNullOrEmpty (reinsChallengePwdEntry.Text)) {                      error += "Please reinsert the challenge password\n";                    } else if (!challengePwdEntry.Text.Equals (reinsChallengePwdEntry.Text)) {                      error += "Challenge passwords must be the same\n";                    } else {                      isChallengePwdOk = true;                      passwordChanged = true;                      this.challengePwd = challengePwdEntry.Text;                  }              } else {                  if (!challengePwdEntry.Text.Equals (oldChallengePwd)) {                      this.challengePwd = challengePwdEntry.Text;                      passwordChanged = true;                  }              }
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,OnButtonOkClicked,The following statement contains a magic number: if (!string.IsNullOrEmpty (experimentPwdEntry.Text) || !string.IsNullOrEmpty (this.reinsExperimentPwdEntry.Text)) {                  if (experimentPwdEntry.Text.Length < 8) {                      error += "Experiment password must be at least 8 characters long\n";                   } else if (string.IsNullOrEmpty (reinsExperimentPwdEntry.Text)) {                      this.error += "Please reinsert the experiment password\n";                    } else if (!experimentPwdEntry.Text.Equals (reinsExperimentPwdEntry.Text)) {                                            this.error += "Experiment passwords must be the same\n";                  } else {                      //pwds are the same                      this.isExperimentPwdOk = true;                      this.passwordChanged = true;                      this.experimentPwd = experimentPwdEntry.Text;                  }              } else {                  if (!experimentPwdEntry.Text.Equals (oldExperimentPwd)) {                      this.experimentPwd = experimentPwdEntry.Text;                      passwordChanged = true;                  }              }
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(5))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(5))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w2.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w3.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w4.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w4.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w5.TopAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w5.BottomAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w5.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w5.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w6.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w6.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w6.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w6.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w7.TopAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(3));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w7.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w8.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w8.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w9.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w9.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w9.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w10.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w10.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w10.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w10.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w11.TopAttach = ((uint)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w11.BottomAttach = ((uint)(5));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w11.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w11.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w13.Spacing = 10;
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w13.BorderWidth = ((uint)(5));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: w13.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -6);
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonOk' -5);
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.DefaultWidth = 436;
Magic Number,TraceLab.UI.GTK,PasswordPicker,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\PasswordPicker.cs,Build,The following statement contains a magic number: this.DefaultHeight = 218;
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: this.calendar1.DisplayOptions = ((global::Gtk.CalendarDisplayOptions)(35));
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: w3.Spacing = 10;
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: w3.BorderWidth = ((uint)(5));
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: w3.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -6);
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonOk' -5);
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: this.DefaultWidth = 400;
Magic Number,TraceLab.UI.GTK,CalendarDatePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\CalendarDatePickerDialog.cs,Build,The following statement contains a magic number: this.DefaultHeight = 300;
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w2.BottomAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w2.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w3.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w4.RightAttach = ((uint)(2));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w6.Spacing = 10;
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w6.BorderWidth = ((uint)(5));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: w6.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -6);
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonOk' -5);
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.DefaultWidth = 521;
Magic Number,TraceLab.UI.GTK,InsertPassword,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\InsertPassword.cs,Build,The following statement contains a magic number: this.DefaultHeight = 142;
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,AnimateShow,The following statement contains a magic number: GLib.Timeout.Add (10' RunAnimateShow);
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,AnimateHide,The following statement contains a magic number: GLib.Timeout.Add (10' RunAnimateHide);
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: switch (position) {  			case PositionType.Left:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Right:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				X = targetPos - WidthRequest;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Top:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				if (HeightRequest < targetSize)  					return true;  				break;  			case PositionType.Bottom:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				Y = targetPos - HeightRequest;  				if (HeightRequest < targetSize)  					return true;  				break;  			}
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: switch (position) {  			case PositionType.Left:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Right:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				X = targetPos - WidthRequest;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Top:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				if (HeightRequest < targetSize)  					return true;  				break;  			case PositionType.Bottom:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				Y = targetPos - HeightRequest;  				if (HeightRequest < targetSize)  					return true;  				break;  			}
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: switch (position) {  			case PositionType.Left:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Right:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				X = targetPos - WidthRequest;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Top:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				if (HeightRequest < targetSize)  					return true;  				break;  			case PositionType.Bottom:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				Y = targetPos - HeightRequest;  				if (HeightRequest < targetSize)  					return true;  				break;  			}
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: switch (position) {  			case PositionType.Left:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Right:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				X = targetPos - WidthRequest;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Top:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				if (HeightRequest < targetSize)  					return true;  				break;  			case PositionType.Bottom:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				Y = targetPos - HeightRequest;  				if (HeightRequest < targetSize)  					return true;  				break;  			}
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateHide,The following statement contains a magic number: switch (position) {  			case PositionType.Left: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Right: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					X = targetPos - ns;  					return true;  				}  				break;  			}  			case PositionType.Top: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Bottom: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					Y = targetPos - ns;  					return true;  				}  				break;  			}  			}
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateHide,The following statement contains a magic number: switch (position) {  			case PositionType.Left: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Right: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					X = targetPos - ns;  					return true;  				}  				break;  			}  			case PositionType.Top: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Bottom: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					Y = targetPos - ns;  					return true;  				}  				break;  			}  			}
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateHide,The following statement contains a magic number: switch (position) {  			case PositionType.Left: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Right: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					X = targetPos - ns;  					return true;  				}  				break;  			}  			case PositionType.Top: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Bottom: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					Y = targetPos - ns;  					return true;  				}  				break;  			}  			}
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateHide,The following statement contains a magic number: switch (position) {  			case PositionType.Left: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Right: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					X = targetPos - ns;  					return true;  				}  				break;  			}  			case PositionType.Top: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Bottom: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					Y = targetPos - ns;  					return true;  				}  				break;  			}  			}
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following statement contains a magic number: uint startPadding = 6;
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following statement contains a magic number: switch (Frame.CompactGuiLevel) {  				case 1: sizePadding = 2; break;  				case 4: startPadding = 3; break;  				case 5: startPadding = 0; sizePadding = 0; break;  			}
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following statement contains a magic number: switch (Frame.CompactGuiLevel) {  				case 1: sizePadding = 2; break;  				case 4: startPadding = 3; break;  				case 5: startPadding = 0; sizePadding = 0; break;  			}
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following statement contains a magic number: switch (Frame.CompactGuiLevel) {  				case 1: sizePadding = 2; break;  				case 4: startPadding = 3; break;  				case 5: startPadding = 0; sizePadding = 0; break;  			}
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following statement contains a magic number: switch (Frame.CompactGuiLevel) {  				case 1: sizePadding = 2; break;  				case 4: startPadding = 3; break;  				case 5: startPadding = 0; sizePadding = 0; break;  			}
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following statement contains a magic number: box.Spacing = 3;
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following statement contains a magic number: filler.WidthRequest = 4;
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following statement contains a magic number: filler.HeightRequest = 4;
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,UpdateVisibility,The following statement contains a magic number: filler.Visible = (Frame.CompactGuiLevel < 3);
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  				box = new HBox ();  				mainBox.LeftPadding = mainBox.RightPadding = 2;  			}  			else {  				box = new VBox ();  				mainBox.TopPadding = mainBox.BottomPadding = 2;  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  				box = new HBox ();  				mainBox.LeftPadding = mainBox.RightPadding = 2;  			}  			else {  				box = new VBox ();  				mainBox.TopPadding = mainBox.BottomPadding = 2;  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (customLabel != null) {  				customLabel.ShowAll ();  				box.PackStart (customLabel' true' true' 0);  			}  			else {  				if (it.Icon != null)  					box.PackStart (new Gtk.Image (it.Icon)' false' false' 0);  					  				if (!string.IsNullOrEmpty (it.Label)) {  					label = new Gtk.Label (it.Label);  					label.UseMarkup = true;  					if (bar.Orientation == Gtk.Orientation.Vertical)  						label.Angle = 270;  					box.PackStart (label' true' true' 0);  				} else  					label = null;  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,UpdateTab,The following statement contains a magic number: box.BorderWidth = 2;
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,UpdateTab,The following statement contains a magic number: box.Spacing = 2;
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: if (State == StateType.Prelight) {  				int w = Allocation.Width' h = Allocation.Height;  				double x=Allocation.Left' y=Allocation.Top' r=3;  				x += 0.5; y += 0.5; h -=1; w -= 1;  				  				using (Cairo.Context ctx = Gdk.CairoHelper.Create (GdkWindow)) {  					HslColor c = new HslColor (Style.Background (Gtk.StateType.Normal));  					HslColor c1 = c;  					HslColor c2 = c;  					if (State != StateType.Prelight) {  						c1.L *= 0.8;  						c2.L *= 0.95;  					} else {  						c1.L *= 1.1;  						c2.L *= 1;  					}  					Cairo.Gradient pat;  					switch (bar.Position) {  						case PositionType.Top: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Bottom: pat = new Cairo.LinearGradient (x' y' x' y+h); break;  						case PositionType.Left: pat = new Cairo.LinearGradient (x+w' y' x' y); break;  						default: pat = new Cairo.LinearGradient (x' y' x+w' y); break;  					}  					pat.AddColorStop (0' c1);  					pat.AddColorStop (1' c2);  					ctx.NewPath ();  					ctx.Arc (x+r' y+r' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r' y);  					ctx.Arc (x+w-r' y+r' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w' y+h);  					ctx.LineTo (x' y+h);  					ctx.ClosePath ();  					ctx.Pattern = pat;  					ctx.FillPreserve ();  					c1 = c;  					c1.L *= 0.7;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  					  					// Inner line  					ctx.NewPath ();  					ctx.Arc (x+r+1' y+r+1' r' 180 * (Math.PI / 180)' 270 * (Math.PI / 180));  					ctx.LineTo (x+w-r-1' y+1);  					ctx.Arc (x+w-r-1' y+r+1' r' 270 * (Math.PI / 180)' 360 * (Math.PI / 180));  					ctx.LineTo (x+w-1' y+h-1);  					ctx.LineTo (x+1' y+h-1);  					ctx.ClosePath ();  					c1 = c;  					//c1.L *= 0.9;  					ctx.LineWidth = 1;  					ctx.Color = c1;  					ctx.Stroke ();  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,Present,The following statement contains a magic number: if (giveFocus) {  				GLib.Timeout.Add (200' delegate {  					// Using a small delay because AutoShow uses an animation and setting focus may  					// not work until the item is visible  					it.SetFocus ();  					ScheduleAutoHide (false);  					return false;  				});  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,SetNormalColor,The following statement contains a magic number: if (label != null) {  				HslColor c = Style.Background (Gtk.StateType.Normal);  				c.L *= 0.4;  				label.ModifyFg (StateType.Normal' c);  			}
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBarItem.cs,OnButtonPressEvent,The following statement contains a magic number: if (evnt.Button == 1) {  				if (evnt.Type == Gdk.EventType.TwoButtonPress)  					it.Status = DockItemStatus.Dockable;  				else  					AutoShow ();  			}  			else if (evnt.Button == 3)  				it.ShowDockPopupMenu (evnt.Time);
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockContainer.cs,UpdatePlaceholder,The following statement contains a magic number: if (allowDocking && layout.GetDockTarget (item' px' py' out dockDelegate' out rect)) {  				int ox' oy;  				GdkWindow.GetOrigin (out ox' out oy);  				  				placeholderWindow.Relocate (ox + rect.X' oy + rect.Y' rect.Width' rect.Height' true);  				placeholderWindow.Show ();  				return true;  			} else {  				int ox' oy;  				GdkWindow.GetOrigin (out ox' out oy);  				placeholderWindow.Relocate (ox + px - size.Width / 2' oy + py - 18' size.Width' size.Height' false);  				placeholderWindow.Show ();  			}
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockContainer.cs,UpdatePlaceholder,The following statement contains a magic number: if (allowDocking && layout.GetDockTarget (item' px' py' out dockDelegate' out rect)) {  				int ox' oy;  				GdkWindow.GetOrigin (out ox' out oy);  				  				placeholderWindow.Relocate (ox + rect.X' oy + rect.Y' rect.Width' rect.Height' true);  				placeholderWindow.Show ();  				return true;  			} else {  				int ox' oy;  				GdkWindow.GetOrigin (out ox' out oy);  				placeholderWindow.Relocate (ox + px - size.Width / 2' oy + py - 18' size.Width' size.Height' false);  				placeholderWindow.Show ();  			}
Magic Number,MonoDevelop.Components.Docking,DockFrame,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockFrame.cs,DockFrame,The following statement contains a magic number: CompactGuiLevel = 2;
Magic Number,MonoDevelop.Components.Docking,DockFrame,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockFrame.cs,OnRealized,The following statement contains a magic number: cLight.L *= 0.9;
Magic Number,MonoDevelop.Components.Docking,DockFrame,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockFrame.cs,OnRealized,The following statement contains a magic number: cDark.L *= 0.8;
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,UpdateNotebook,The following statement contains a magic number: if (Frame.CompactGuiLevel == 3 && IsNextToMargin (PositionType.Bottom' true))  				boundTabStrip.BottomPadding = 3;  			else  				boundTabStrip.BottomPadding = 0;
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,UpdateNotebook,The following statement contains a magic number: if (Frame.CompactGuiLevel == 3 && IsNextToMargin (PositionType.Bottom' true))  				boundTabStrip.BottomPadding = 3;  			else  				boundTabStrip.BottomPadding = 0;
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  				// Tabs can only contain DockGroupItems  				return ((DockGroupItem)VisibleObjects[0]).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  			}  			else if (type == DockGroupType.Horizontal) {  				if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  					// Dock to the right of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  					// Dock to the left of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2 &&  					    px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}  			else if (type == DockGroupType.Vertical) {  				if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  					// Dock to the bottom of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  					// Dock to the top of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2 &&  					    py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  				// Tabs can only contain DockGroupItems  				return ((DockGroupItem)VisibleObjects[0]).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  			}  			else if (type == DockGroupType.Horizontal) {  				if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  					// Dock to the right of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  					// Dock to the left of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2 &&  					    px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}  			else if (type == DockGroupType.Vertical) {  				if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  					// Dock to the bottom of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  					// Dock to the top of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2 &&  					    py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  				// Tabs can only contain DockGroupItems  				return ((DockGroupItem)VisibleObjects[0]).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  			}  			else if (type == DockGroupType.Horizontal) {  				if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  					// Dock to the right of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  					// Dock to the left of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2 &&  					    px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}  			else if (type == DockGroupType.Vertical) {  				if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  					// Dock to the bottom of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  					// Dock to the top of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2 &&  					    py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  				// Tabs can only contain DockGroupItems  				return ((DockGroupItem)VisibleObjects[0]).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  			}  			else if (type == DockGroupType.Horizontal) {  				if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  					// Dock to the right of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  					// Dock to the left of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2 &&  					    px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}  			else if (type == DockGroupType.Vertical) {  				if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  					// Dock to the bottom of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  					// Dock to the top of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2 &&  					    py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  				// Tabs can only contain DockGroupItems  				return ((DockGroupItem)VisibleObjects[0]).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  			}  			else if (type == DockGroupType.Horizontal) {  				if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  					// Dock to the right of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  					// Dock to the left of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2 &&  					    px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}  			else if (type == DockGroupType.Vertical) {  				if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  					// Dock to the bottom of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  					// Dock to the top of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2 &&  					    py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  				// Tabs can only contain DockGroupItems  				return ((DockGroupItem)VisibleObjects[0]).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  			}  			else if (type == DockGroupType.Horizontal) {  				if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  					// Dock to the right of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  					// Dock to the left of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2 &&  					    px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize/2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}  			else if (type == DockGroupType.Vertical) {  				if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  					// Dock to the bottom of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' dockObjects.Count);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  					// Dock to the top of the group  					dockDelegate = delegate (DockItem it) {  						DockTarget (it' 0);  					};  					rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  					return true;  				}  				// Dock in a separator  				for (int n=0; n<VisibleObjects.Count; n++) {  					DockObject ob = VisibleObjects [n];  					if (n < VisibleObjects.Count - 1 &&  					    py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2 &&  					    py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize/2)  					{  						int dn = dockObjects.IndexOf (ob);  						dockDelegate = delegate (DockItem it) {  							DockTarget (it' dn+1);  						};  						rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize/2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  						return true;  					}  					else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  						return true;  				}  			}
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroup.cs,Dump,The following statement contains a magic number: foreach (DockObject ob in dockObjects) {  				ob.Dump (ind + 2);  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (item != this.item && this.item.Visible && rect.Contains (px' py)) {  				int xdockMargin = (int) ((double)rect.Width * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  				int ydockMargin = (int) ((double)rect.Height * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  				DockPosition pos;  				  /*				if (ParentGroup.Type == DockGroupType.Tabbed) {  					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);  					pos = DockPosition.CenterAfter;  				}  */				if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  					outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  					pos = DockPosition.Left;  				}  				else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  					outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  					pos = DockPosition.Right;  				}  				else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  					outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  					pos = DockPosition.Top;  				}  				else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  					outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  					pos = DockPosition.Bottom;  				}  				else {  					outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);  					pos = DockPosition.Center;  				}  				  				dockDelegate = delegate (DockItem dit) {  					DockGroupItem it = ParentGroup.AddObject (dit' pos' Id);  					it.SetVisible (true);  					ParentGroup.FocusItem (it);  				};  				return true;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (item != this.item && this.item.Visible && rect.Contains (px' py)) {  				int xdockMargin = (int) ((double)rect.Width * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  				int ydockMargin = (int) ((double)rect.Height * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  				DockPosition pos;  				  /*				if (ParentGroup.Type == DockGroupType.Tabbed) {  					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);  					pos = DockPosition.CenterAfter;  				}  */				if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  					outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  					pos = DockPosition.Left;  				}  				else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  					outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  					pos = DockPosition.Right;  				}  				else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  					outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  					pos = DockPosition.Top;  				}  				else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  					outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  					pos = DockPosition.Bottom;  				}  				else {  					outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);  					pos = DockPosition.Center;  				}  				  				dockDelegate = delegate (DockItem dit) {  					DockGroupItem it = ParentGroup.AddObject (dit' pos' Id);  					it.SetVisible (true);  					ParentGroup.FocusItem (it);  				};  				return true;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (item != this.item && this.item.Visible && rect.Contains (px' py)) {  				int xdockMargin = (int) ((double)rect.Width * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  				int ydockMargin = (int) ((double)rect.Height * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  				DockPosition pos;  				  /*				if (ParentGroup.Type == DockGroupType.Tabbed) {  					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);  					pos = DockPosition.CenterAfter;  				}  */				if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  					outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  					pos = DockPosition.Left;  				}  				else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  					outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  					pos = DockPosition.Right;  				}  				else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  					outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  					pos = DockPosition.Top;  				}  				else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  					outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  					pos = DockPosition.Bottom;  				}  				else {  					outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);  					pos = DockPosition.Center;  				}  				  				dockDelegate = delegate (DockItem dit) {  					DockGroupItem it = ParentGroup.AddObject (dit' pos' Id);  					it.SetVisible (true);  					ParentGroup.FocusItem (it);  				};  				return true;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (item != this.item && this.item.Visible && rect.Contains (px' py)) {  				int xdockMargin = (int) ((double)rect.Width * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  				int ydockMargin = (int) ((double)rect.Height * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  				DockPosition pos;  				  /*				if (ParentGroup.Type == DockGroupType.Tabbed) {  					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);  					pos = DockPosition.CenterAfter;  				}  */				if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  					outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  					pos = DockPosition.Left;  				}  				else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  					outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  					pos = DockPosition.Right;  				}  				else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  					outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  					pos = DockPosition.Top;  				}  				else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  					outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  					pos = DockPosition.Bottom;  				}  				else {  					outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);  					pos = DockPosition.Center;  				}  				  				dockDelegate = delegate (DockItem dit) {  					DockGroupItem it = ParentGroup.AddObject (dit' pos' Id);  					it.SetVisible (true);  					ParentGroup.FocusItem (it);  				};  				return true;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  				int uniqueTrue = -1;  				int uniqueFalse = -1;  				for (int n=0; n<4; n++) {  					bool inMargin = IsNextToMargin ((PositionType) n' false);  					if (inMargin) {  						if (uniqueTrue == -1)  							uniqueTrue = n;  						else  							uniqueTrue = -2;  					} else {  						if (uniqueFalse == -1)  							uniqueFalse = n;  						else  							uniqueFalse = -2;  					}  				}  				  				if (uniqueTrue >= 0) {  					barDocPosition = (PositionType) uniqueTrue;  					autoHideSize = 200;  					return;  				} else if (uniqueFalse >= 0) {  					barDocPosition = (PositionType) uniqueFalse;  					switch (barDocPosition) {  						case PositionType.Left: barDocPosition = PositionType.Right; break;  						case PositionType.Right: barDocPosition = PositionType.Left; break;  						case PositionType.Top: barDocPosition = PositionType.Bottom; break;  						case PositionType.Bottom: barDocPosition = PositionType.Top; break;  					}  					autoHideSize = 200;  					return;  				}  				  				// If the item is in a group' use the dock location of other items  				DockObject current = this;  				do {  					if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  						return;  					current = current.ParentGroup;  				} while (current.ParentGroup != null);  				  				// Can't find a good location. Just guess.  				barDocPosition = PositionType.Bottom;  				autoHideSize = 200;  				return;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  				int uniqueTrue = -1;  				int uniqueFalse = -1;  				for (int n=0; n<4; n++) {  					bool inMargin = IsNextToMargin ((PositionType) n' false);  					if (inMargin) {  						if (uniqueTrue == -1)  							uniqueTrue = n;  						else  							uniqueTrue = -2;  					} else {  						if (uniqueFalse == -1)  							uniqueFalse = n;  						else  							uniqueFalse = -2;  					}  				}  				  				if (uniqueTrue >= 0) {  					barDocPosition = (PositionType) uniqueTrue;  					autoHideSize = 200;  					return;  				} else if (uniqueFalse >= 0) {  					barDocPosition = (PositionType) uniqueFalse;  					switch (barDocPosition) {  						case PositionType.Left: barDocPosition = PositionType.Right; break;  						case PositionType.Right: barDocPosition = PositionType.Left; break;  						case PositionType.Top: barDocPosition = PositionType.Bottom; break;  						case PositionType.Bottom: barDocPosition = PositionType.Top; break;  					}  					autoHideSize = 200;  					return;  				}  				  				// If the item is in a group' use the dock location of other items  				DockObject current = this;  				do {  					if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  						return;  					current = current.ParentGroup;  				} while (current.ParentGroup != null);  				  				// Can't find a good location. Just guess.  				barDocPosition = PositionType.Bottom;  				autoHideSize = 200;  				return;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  				int uniqueTrue = -1;  				int uniqueFalse = -1;  				for (int n=0; n<4; n++) {  					bool inMargin = IsNextToMargin ((PositionType) n' false);  					if (inMargin) {  						if (uniqueTrue == -1)  							uniqueTrue = n;  						else  							uniqueTrue = -2;  					} else {  						if (uniqueFalse == -1)  							uniqueFalse = n;  						else  							uniqueFalse = -2;  					}  				}  				  				if (uniqueTrue >= 0) {  					barDocPosition = (PositionType) uniqueTrue;  					autoHideSize = 200;  					return;  				} else if (uniqueFalse >= 0) {  					barDocPosition = (PositionType) uniqueFalse;  					switch (barDocPosition) {  						case PositionType.Left: barDocPosition = PositionType.Right; break;  						case PositionType.Right: barDocPosition = PositionType.Left; break;  						case PositionType.Top: barDocPosition = PositionType.Bottom; break;  						case PositionType.Bottom: barDocPosition = PositionType.Top; break;  					}  					autoHideSize = 200;  					return;  				}  				  				// If the item is in a group' use the dock location of other items  				DockObject current = this;  				do {  					if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  						return;  					current = current.ParentGroup;  				} while (current.ParentGroup != null);  				  				// Can't find a good location. Just guess.  				barDocPosition = PositionType.Bottom;  				autoHideSize = 200;  				return;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  				int uniqueTrue = -1;  				int uniqueFalse = -1;  				for (int n=0; n<4; n++) {  					bool inMargin = IsNextToMargin ((PositionType) n' false);  					if (inMargin) {  						if (uniqueTrue == -1)  							uniqueTrue = n;  						else  							uniqueTrue = -2;  					} else {  						if (uniqueFalse == -1)  							uniqueFalse = n;  						else  							uniqueFalse = -2;  					}  				}  				  				if (uniqueTrue >= 0) {  					barDocPosition = (PositionType) uniqueTrue;  					autoHideSize = 200;  					return;  				} else if (uniqueFalse >= 0) {  					barDocPosition = (PositionType) uniqueFalse;  					switch (barDocPosition) {  						case PositionType.Left: barDocPosition = PositionType.Right; break;  						case PositionType.Right: barDocPosition = PositionType.Left; break;  						case PositionType.Top: barDocPosition = PositionType.Bottom; break;  						case PositionType.Bottom: barDocPosition = PositionType.Top; break;  					}  					autoHideSize = 200;  					return;  				}  				  				// If the item is in a group' use the dock location of other items  				DockObject current = this;  				do {  					if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  						return;  					current = current.ParentGroup;  				} while (current.ParentGroup != null);  				  				// Can't find a good location. Just guess.  				barDocPosition = PositionType.Bottom;  				autoHideSize = 200;  				return;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  				int uniqueTrue = -1;  				int uniqueFalse = -1;  				for (int n=0; n<4; n++) {  					bool inMargin = IsNextToMargin ((PositionType) n' false);  					if (inMargin) {  						if (uniqueTrue == -1)  							uniqueTrue = n;  						else  							uniqueTrue = -2;  					} else {  						if (uniqueFalse == -1)  							uniqueFalse = n;  						else  							uniqueFalse = -2;  					}  				}  				  				if (uniqueTrue >= 0) {  					barDocPosition = (PositionType) uniqueTrue;  					autoHideSize = 200;  					return;  				} else if (uniqueFalse >= 0) {  					barDocPosition = (PositionType) uniqueFalse;  					switch (barDocPosition) {  						case PositionType.Left: barDocPosition = PositionType.Right; break;  						case PositionType.Right: barDocPosition = PositionType.Left; break;  						case PositionType.Top: barDocPosition = PositionType.Bottom; break;  						case PositionType.Bottom: barDocPosition = PositionType.Top; break;  					}  					autoHideSize = 200;  					return;  				}  				  				// If the item is in a group' use the dock location of other items  				DockObject current = this;  				do {  					if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  						return;  					current = current.ParentGroup;  				} while (current.ParentGroup != null);  				  				// Can't find a good location. Just guess.  				barDocPosition = PositionType.Bottom;  				autoHideSize = 200;  				return;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  				int uniqueTrue = -1;  				int uniqueFalse = -1;  				for (int n=0; n<4; n++) {  					bool inMargin = IsNextToMargin ((PositionType) n' false);  					if (inMargin) {  						if (uniqueTrue == -1)  							uniqueTrue = n;  						else  							uniqueTrue = -2;  					} else {  						if (uniqueFalse == -1)  							uniqueFalse = n;  						else  							uniqueFalse = -2;  					}  				}  				  				if (uniqueTrue >= 0) {  					barDocPosition = (PositionType) uniqueTrue;  					autoHideSize = 200;  					return;  				} else if (uniqueFalse >= 0) {  					barDocPosition = (PositionType) uniqueFalse;  					switch (barDocPosition) {  						case PositionType.Left: barDocPosition = PositionType.Right; break;  						case PositionType.Right: barDocPosition = PositionType.Left; break;  						case PositionType.Top: barDocPosition = PositionType.Bottom; break;  						case PositionType.Bottom: barDocPosition = PositionType.Top; break;  					}  					autoHideSize = 200;  					return;  				}  				  				// If the item is in a group' use the dock location of other items  				DockObject current = this;  				do {  					if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  						return;  					current = current.ParentGroup;  				} while (current.ParentGroup != null);  				  				// Can't find a good location. Just guess.  				barDocPosition = PositionType.Bottom;  				autoHideSize = 200;  				return;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (Allocation.Width < Allocation.Height) {  				int mid = Allocation.Left + Allocation.Width / 2;  				if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  					return PositionType.Right;  				else  					return PositionType.Left;  			} else {  				int mid = Allocation.Top + Allocation.Height / 2;  				if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  					return PositionType.Bottom;  				else  					return PositionType.Top;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (Allocation.Width < Allocation.Height) {  				int mid = Allocation.Left + Allocation.Width / 2;  				if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  					return PositionType.Right;  				else  					return PositionType.Left;  			} else {  				int mid = Allocation.Top + Allocation.Height / 2;  				if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  					return PositionType.Bottom;  				else  					return PositionType.Top;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (Allocation.Width < Allocation.Height) {  				int mid = Allocation.Left + Allocation.Width / 2;  				if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  					return PositionType.Right;  				else  					return PositionType.Left;  			} else {  				int mid = Allocation.Top + Allocation.Height / 2;  				if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  					return PositionType.Bottom;  				else  					return PositionType.Top;  			}
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (Allocation.Width < Allocation.Height) {  				int mid = Allocation.Left + Allocation.Width / 2;  				if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  					return PositionType.Right;  				else  					return PositionType.Left;  			} else {  				int mid = Allocation.Top + Allocation.Height / 2;  				if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  					return PositionType.Bottom;  				else  					return PositionType.Top;  			}
Magic Number,MonoDevelop.Components.Docking,DockItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItem.cs,ShowDockPopupMenu,The following statement contains a magic number: menu.Popup (null' null' null' 3' time);
Magic Number,MonoDevelop.Components.Docking,DockItemContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemContainer.cs,DockItemContainer,The following statement contains a magic number: title.Xpad = 3;
Magic Number,MonoDevelop.Components.Docking,DockItemContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemContainer.cs,DockItemContainer,The following statement contains a magic number: btnDock.WidthRequest = btnDock.HeightRequest = 17;
Magic Number,MonoDevelop.Components.Docking,DockItemContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemContainer.cs,DockItemContainer,The following statement contains a magic number: btnClose.WidthRequest = btnClose.HeightRequest = 17;
Magic Number,MonoDevelop.Components.Docking,DockItemContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemContainer.cs,HeaderButtonPress,The following statement contains a magic number: if (args.Event.Button == 1) {                  frame.ShowPlaceholder ();                  header.GdkWindow.Cursor = fleurCursor;                  frame.Toplevel.KeyPressEvent += HeaderKeyPress;                  frame.Toplevel.KeyReleaseEvent += HeaderKeyRelease;                  allowPlaceholderDocking = true;              }              else if (args.Event.Button == 3) {                  item.ShowDockPopupMenu (args.Event.Time);              }
Magic Number,MonoDevelop.Components.Docking,DockItemContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemContainer.cs,HeaderExpose,The following statement contains a magic number: if (pointerHover)                  gcol.L *= 1.05;
Magic Number,MonoDevelop.Components.Docking,CustomFrame,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemContainer.cs,OnExposeEvent,The following statement contains a magic number: if (GradientBackround) {                  rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);                  HslColor gcol = Style.Background (Gtk.StateType.Normal);                                    using (Cairo.Context cr = Gdk.CairoHelper.Create (GdkWindow)) {                      cr.NewPath ();                      cr.MoveTo (rect.X' rect.Y);                      cr.RelLineTo (rect.Width' 0);                      cr.RelLineTo (0' rect.Height);                      cr.RelLineTo (-rect.Width' 0);                      cr.RelLineTo (0' -rect.Height);                      cr.ClosePath ();                      Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' rect.Bottom);                      Cairo.Color color1 = gcol;                      pat.AddColorStop (0' color1);                      gcol.L -= 0.1;                      if (gcol.L < 0) gcol.L = 0;                      pat.AddColorStop (1' gcol);                      cr.Pattern = pat;                      cr.FillPreserve ();                  }              }
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: if (position == PositionType.Top || position == PositionType.Bottom)  				box = new HBox (false' 3);  			else  				box = new VBox (false' 3);
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: if (position == PositionType.Top || position == PositionType.Bottom)  				box = new HBox (false' 3);  			else  				box = new VBox (false' 3);
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,Add,The following statement contains a magic number: int defaultPadding = 3;
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,Add,The following statement contains a magic number: if (widget is Button) {  				((Button)widget).Relief = ReliefStyle.None;  				((Button)widget).FocusOnClick = false;  				defaultPadding = 0;  			}  			else if (widget is Entry) {  				((Entry)widget).HasFrame = false;  			}  			else if (widget is ComboBox) {  				((ComboBox)widget).HasFrame = false;  			}  			else if (widget is VSeparator)  				((VSeparator)widget).HeightRequest = 10;
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: pm.DrawRectangle (gc' false' 1' 1' width - 3' height - 3);
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: pm.DrawRectangle (gc' false' 1' 1' width - 3' height - 3);
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,OnExposeEvent,The following statement contains a magic number: this.GdkWindow.DrawRectangle (redgc' false' 1' 1' w-3' h-3);
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,OnExposeEvent,The following statement contains a magic number: this.GdkWindow.DrawRectangle (redgc' false' 1' 1' w-3' h-3);
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  				Move (x' y);  				Resize (w' h);  				  				rx = x; ry = y; rw = w; rh = h;  				  				if (anim != 0) {  					GLib.Source.Remove (anim);  					anim = 0;  				}  				if (animate && w < 150 && h < 150) {  					int sa = 7;  					Move (rx-sa' ry-sa);  					Resize (rw+sa*2' rh+sa*2);  					anim = GLib.Timeout.Add (10' RunAnimation);  				}  			}
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  				Move (x' y);  				Resize (w' h);  				  				rx = x; ry = y; rw = w; rh = h;  				  				if (anim != 0) {  					GLib.Source.Remove (anim);  					anim = 0;  				}  				if (animate && w < 150 && h < 150) {  					int sa = 7;  					Move (rx-sa' ry-sa);  					Resize (rw+sa*2' rh+sa*2);  					anim = GLib.Timeout.Add (10' RunAnimation);  				}  			}
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  				Move (x' y);  				Resize (w' h);  				  				rx = x; ry = y; rw = w; rh = h;  				  				if (anim != 0) {  					GLib.Source.Remove (anim);  					anim = 0;  				}  				if (animate && w < 150 && h < 150) {  					int sa = 7;  					Move (rx-sa' ry-sa);  					Resize (rw+sa*2' rh+sa*2);  					anim = GLib.Timeout.Add (10' RunAnimation);  				}  			}
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  				Move (x' y);  				Resize (w' h);  				  				rx = x; ry = y; rw = w; rh = h;  				  				if (anim != 0) {  					GLib.Source.Remove (anim);  					anim = 0;  				}  				if (animate && w < 150 && h < 150) {  					int sa = 7;  					Move (rx-sa' ry-sa);  					Resize (rw+sa*2' rh+sa*2);  					anim = GLib.Timeout.Add (10' RunAnimation);  				}  			}
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  				Move (x' y);  				Resize (w' h);  				  				rx = x; ry = y; rw = w; rh = h;  				  				if (anim != 0) {  					GLib.Source.Remove (anim);  					anim = 0;  				}  				if (animate && w < 150 && h < 150) {  					int sa = 7;  					Move (rx-sa' ry-sa);  					Resize (rw+sa*2' rh+sa*2);  					anim = GLib.Timeout.Add (10' RunAnimation);  				}  			}
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  				Move (x' y);  				Resize (w' h);  				  				rx = x; ry = y; rw = w; rh = h;  				  				if (anim != 0) {  					GLib.Source.Remove (anim);  					anim = 0;  				}  				if (animate && w < 150 && h < 150) {  					int sa = 7;  					Move (rx-sa' ry-sa);  					Resize (rw+sa*2' rh+sa*2);  					anim = GLib.Timeout.Add (10' RunAnimation);  				}  			}
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,RunAnimation,The following statement contains a magic number: if (cx != rx) {  				cx++; cy++;  				ch-=2; cw-=2;  				Move (cx' cy);  				Resize (cw' ch);  				return true;  			}
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\PlaceholderWindow.cs,RunAnimation,The following statement contains a magic number: if (cx != rx) {  				cx++; cy++;  				ch-=2; cw-=2;  				Move (cx' cy);  				Resize (cw' ch);  				return true;  			}
Magic Number,MonoDevelop.Components.Docking,ShadedContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\ShadedContainer.cs,DrawShadow,The following statement contains a magic number: foreach (Section s in secs) {  				Cairo.Gradient pat = null;  				Gdk.Rectangle r = ar;  				switch (pos) {  					case PositionType.Top:   						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X += s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.X' r.Bottom);  						break;  					case PositionType.Bottom:   						r.Y = r.Bottom - shadowSize;  						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X = r.X + s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Bottom' r.X' r.Y);  						break;  					case PositionType.Left:   						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.Right' r.Y);  						break;  					case PositionType.Right:   						r.X = r.Right - shadowSize;  						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.Right' r.Y' r.X' r.Y);  						break;  				}  				Cairo.Color c = darkColor.ToCairoColor ();  				pat.AddColorStop (0' c);  				c.A = 0;  				pat.AddColorStop (1' c);  				ctx.NewPath ();  				ctx.Rectangle (r.X' r.Y' r.Width' r.Height);  				ctx.Pattern = pat;  				ctx.Fill ();  				pat.Destroy ();  			}
Magic Number,MonoDevelop.Components.Docking,ShadedContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\ShadedContainer.cs,DrawShadow,The following statement contains a magic number: foreach (Section s in secs) {  				Cairo.Gradient pat = null;  				Gdk.Rectangle r = ar;  				switch (pos) {  					case PositionType.Top:   						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X += s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.X' r.Bottom);  						break;  					case PositionType.Bottom:   						r.Y = r.Bottom - shadowSize;  						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X = r.X + s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Bottom' r.X' r.Y);  						break;  					case PositionType.Left:   						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.Right' r.Y);  						break;  					case PositionType.Right:   						r.X = r.Right - shadowSize;  						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.Right' r.Y' r.X' r.Y);  						break;  				}  				Cairo.Color c = darkColor.ToCairoColor ();  				pat.AddColorStop (0' c);  				c.A = 0;  				pat.AddColorStop (1' c);  				ctx.NewPath ();  				ctx.Rectangle (r.X' r.Y' r.Width' r.Height);  				ctx.Pattern = pat;  				ctx.Fill ();  				pat.Destroy ();  			}
Magic Number,MonoDevelop.Components.Docking,ShadedContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\ShadedContainer.cs,DrawShadow,The following statement contains a magic number: foreach (Section s in secs) {  				Cairo.Gradient pat = null;  				Gdk.Rectangle r = ar;  				switch (pos) {  					case PositionType.Top:   						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X += s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.X' r.Bottom);  						break;  					case PositionType.Bottom:   						r.Y = r.Bottom - shadowSize;  						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X = r.X + s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Bottom' r.X' r.Y);  						break;  					case PositionType.Left:   						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.Right' r.Y);  						break;  					case PositionType.Right:   						r.X = r.Right - shadowSize;  						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.Right' r.Y' r.X' r.Y);  						break;  				}  				Cairo.Color c = darkColor.ToCairoColor ();  				pat.AddColorStop (0' c);  				c.A = 0;  				pat.AddColorStop (1' c);  				ctx.NewPath ();  				ctx.Rectangle (r.X' r.Y' r.Width' r.Height);  				ctx.Pattern = pat;  				ctx.Fill ();  				pat.Destroy ();  			}
Magic Number,MonoDevelop.Components.Docking,ShadedContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\ShadedContainer.cs,DrawShadow,The following statement contains a magic number: foreach (Section s in secs) {  				Cairo.Gradient pat = null;  				Gdk.Rectangle r = ar;  				switch (pos) {  					case PositionType.Top:   						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X += s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.X' r.Bottom);  						break;  					case PositionType.Bottom:   						r.Y = r.Bottom - shadowSize;  						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X = r.X + s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Bottom' r.X' r.Y);  						break;  					case PositionType.Left:   						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.Right' r.Y);  						break;  					case PositionType.Right:   						r.X = r.Right - shadowSize;  						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.Right' r.Y' r.X' r.Y);  						break;  				}  				Cairo.Color c = darkColor.ToCairoColor ();  				pat.AddColorStop (0' c);  				c.A = 0;  				pat.AddColorStop (1' c);  				ctx.NewPath ();  				ctx.Rectangle (r.X' r.Y' r.Width' r.Height);  				ctx.Pattern = pat;  				ctx.Fill ();  				pat.Destroy ();  			}
Magic Number,MonoDevelop.Components.Docking,TabStrip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,TabStrip,The following statement contains a magic number: BottomPadding = 3;
Magic Number,MonoDevelop.Components.Docking,TabStrip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,GetTabArea,The following statement contains a magic number: if (pos > 0)  				xdif = 2;
Magic Number,MonoDevelop.Components.Docking,TabStrip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,GetTabArea,The following statement contains a magic number: if (tab.Active) {  //				st = StateType.Normal;  				reqh = tab.Allocation.Height;  			}  			else {  				reqh = tab.Allocation.Height - 3;  //				st = StateType.Active;  			}
Magic Number,MonoDevelop.Components.Docking,TabStrip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,DrawTab,The following statement contains a magic number: if (DockFrame.IsWindows) {  				GdkWindow.DrawRectangle (Style.DarkGC (Gtk.StateType.Normal)' false' rect);  				rect.X++;  				rect.Width--;  				if (tab.Active) {  					GdkWindow.DrawRectangle (Style.LightGC (Gtk.StateType.Normal)' true' rect);  				}  				else {  					using (Cairo.Context cr = Gdk.CairoHelper.Create (evnt.Window)) {  						cr.NewPath ();  						cr.MoveTo (rect.X' rect.Y);  						cr.RelLineTo (rect.Width' 0);  						cr.RelLineTo (0' rect.Height);  						cr.RelLineTo (-rect.Width' 0);  						cr.RelLineTo (0' -rect.Height);  						cr.ClosePath ();  						Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' rect.Y + rect.Height);  						Cairo.Color color1 = DockFrame.ToCairoColor (Style.Mid (Gtk.StateType.Normal));  						pat.AddColorStop (0' color1);  						color1.R *= 1.2;  						color1.G *= 1.2;  						color1.B *= 1.2;  						pat.AddColorStop (1' color1);  						cr.Pattern = pat;  						cr.FillPreserve ();  					}  				}  			}  			else  				Gtk.Style.PaintExtension (Style' GdkWindow' st' ShadowType.Out' evnt.Area' this' "tab"' rect.X' rect.Y' rect.Width' rect.Height' Gtk.PositionType.Top);
Magic Number,MonoDevelop.Components.Docking,TabStrip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,DrawTab,The following statement contains a magic number: if (DockFrame.IsWindows) {  				GdkWindow.DrawRectangle (Style.DarkGC (Gtk.StateType.Normal)' false' rect);  				rect.X++;  				rect.Width--;  				if (tab.Active) {  					GdkWindow.DrawRectangle (Style.LightGC (Gtk.StateType.Normal)' true' rect);  				}  				else {  					using (Cairo.Context cr = Gdk.CairoHelper.Create (evnt.Window)) {  						cr.NewPath ();  						cr.MoveTo (rect.X' rect.Y);  						cr.RelLineTo (rect.Width' 0);  						cr.RelLineTo (0' rect.Height);  						cr.RelLineTo (-rect.Width' 0);  						cr.RelLineTo (0' -rect.Height);  						cr.ClosePath ();  						Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' rect.Y + rect.Height);  						Cairo.Color color1 = DockFrame.ToCairoColor (Style.Mid (Gtk.StateType.Normal));  						pat.AddColorStop (0' color1);  						color1.R *= 1.2;  						color1.G *= 1.2;  						color1.B *= 1.2;  						pat.AddColorStop (1' color1);  						cr.Pattern = pat;  						cr.FillPreserve ();  					}  				}  			}  			else  				Gtk.Style.PaintExtension (Style' GdkWindow' st' ShadowType.Out' evnt.Area' this' "tab"' rect.X' rect.Y' rect.Width' rect.Height' Gtk.PositionType.Top);
Magic Number,MonoDevelop.Components.Docking,TabStrip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,DrawTab,The following statement contains a magic number: if (DockFrame.IsWindows) {  				GdkWindow.DrawRectangle (Style.DarkGC (Gtk.StateType.Normal)' false' rect);  				rect.X++;  				rect.Width--;  				if (tab.Active) {  					GdkWindow.DrawRectangle (Style.LightGC (Gtk.StateType.Normal)' true' rect);  				}  				else {  					using (Cairo.Context cr = Gdk.CairoHelper.Create (evnt.Window)) {  						cr.NewPath ();  						cr.MoveTo (rect.X' rect.Y);  						cr.RelLineTo (rect.Width' 0);  						cr.RelLineTo (0' rect.Height);  						cr.RelLineTo (-rect.Width' 0);  						cr.RelLineTo (0' -rect.Height);  						cr.ClosePath ();  						Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' rect.Y + rect.Height);  						Cairo.Color color1 = DockFrame.ToCairoColor (Style.Mid (Gtk.StateType.Normal));  						pat.AddColorStop (0' color1);  						color1.R *= 1.2;  						color1.G *= 1.2;  						color1.B *= 1.2;  						pat.AddColorStop (1' color1);  						cr.Pattern = pat;  						cr.FillPreserve ();  					}  				}  			}  			else  				Gtk.Style.PaintExtension (Style' GdkWindow' st' ShadowType.Out' evnt.Area' this' "tab"' rect.X' rect.Y' rect.Width' rect.Height' Gtk.PositionType.Top);
Magic Number,MonoDevelop.Components.Docking,Tab,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,SetLabel,The following statement contains a magic number: box.Spacing = 2;
Magic Number,MonoDevelop.Components.Docking,Tab,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,OnSizeRequested,The following statement contains a magic number: req.Width += HorzPadding * 2;
Magic Number,MonoDevelop.Components.Docking,Tab,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\TabStrip.cs,OnSizeAllocated,The following statement contains a magic number: rect.Width -= HorzPadding * 2;
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,HslColor,The following statement contains a magic number: this.L = (m + v) / 2.0;
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,HslColor,The following statement contains a magic number: if (this.S > 0.0) {  				this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  			} else {  				return;  			}
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,HslColor,The following statement contains a magic number: if (this.S > 0.0) {  				this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  			} else {  				return;  			}
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  				this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  			} else if (g == v) {  				this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  			} else {  				this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  			}
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  				this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  			} else if (g == v) {  				this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  			} else {  				this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  			}
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  				this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  			} else if (g == v) {  				this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  			} else {  				this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  			}
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  				this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  			} else if (g == v) {  				this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  			} else {  				this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  			}
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,HslColor,The following statement contains a magic number: this.H /= 6.0;
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);
Magic Number,MonoDevelop.Components,HslColor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnSizeRequested,The following statement contains a magic number: if (showBorderLine) {  				requisition.Height += HScrollbar.Visible? 1 : 2;  				requisition.Width += VScrollbar.Visible? 1 : 2;  			}
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnSizeRequested,The following statement contains a magic number: if (showBorderLine) {  				requisition.Height += HScrollbar.Visible? 1 : 2;  				requisition.Width += VScrollbar.Visible? 1 : 2;  			}
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (showBorderLine) {  				allocation.X += 1;  				allocation.Y += 1;  				allocation.Height -= HScrollbar.Visible? 1 : 2;  				allocation.Width -= VScrollbar.Visible? 1 : 2;  			}
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (showBorderLine) {  				allocation.X += 1;  				allocation.Y += 1;  				allocation.Height -= HScrollbar.Visible? 1 : 2;  				allocation.Width -= VScrollbar.Visible? 1 : 2;  			}
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (showBorderLine) {  				bool hasHScroll = HScrollbar.Visible;  				bool hasVScroll = VScrollbar.Visible;    				if (hasHScroll) {  					var alloc = HScrollbar.Allocation;  					alloc.X -= 1;  					alloc.Width +=  hasVScroll? 1 :2;  					HScrollbar.SizeAllocate (alloc);  				}  				if (hasVScroll) {  					var alloc = VScrollbar.Allocation;  					alloc.Y -= 1;  					alloc.Height += hasHScroll? 1 : 2;  					VScrollbar.SizeAllocate (alloc);  				}  			}
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (showBorderLine) {  				bool hasHScroll = HScrollbar.Visible;  				bool hasVScroll = VScrollbar.Visible;    				if (hasHScroll) {  					var alloc = HScrollbar.Allocation;  					alloc.X -= 1;  					alloc.Width +=  hasVScroll? 1 :2;  					HScrollbar.SizeAllocate (alloc);  				}  				if (hasVScroll) {  					var alloc = VScrollbar.Allocation;  					alloc.Y -= 1;  					alloc.Height += hasHScroll? 1 : 2;  					VScrollbar.SizeAllocate (alloc);  				}  			}
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: rect.Width -= borderWidth + borderWidth - 2;
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: rect.Height -= borderWidth + borderWidth - 2;
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: if (hasHScroll) {  				rect.Height -= HScrollbar.Allocation.Height / 2;  			}
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: if (hasVScroll) {  				rect.Width -= VScrollbar.Allocation.Width / 2;  			}
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: var halfLineWidth = lineWidth / 2.0;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.Size = (int) Pango.Scale.PangoScale * 15;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.Size = (int) Pango.Scale.PangoScale * 20;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.PixelsAboveLines = 30;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.PixelsBelowLines = 30;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.PixelsInsideWrap = 10;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.LeftMargin = 50;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.RightMargin = 50;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.Rise = (int) Pango.Scale.PangoScale * 10;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.Size = (int) Pango.Scale.PangoScale * 8;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.Rise = (int) Pango.Scale.PangoScale * -10;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.Size = (int) Pango.Scale.PangoScale * 8;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.Indent = 30;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.LeftMargin = 20;
Magic Number,TraceLab.UI.GTK.Extensions,TextBufferExtensions,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Extensions\TextBufferExtensions.cs,InitTags,The following statement contains a magic number: tag.RightMargin = 20;
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,Stetic,IconLoader,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  				return res;  			} else {  				int sz;  				int sy;  				global::Gtk.Icon.SizeLookup (size' out sz' out sy);  				try {  					return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  				} catch (System.Exception) {  					if ((name != "gtk-missing-image")) {  						return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  					} else {  						Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  						Gdk.GC gc = new Gdk.GC (pmap);  						gc.RgbFgColor = new Gdk.Color (255' 255' 255);  						pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  						gc.RgbFgColor = new Gdk.Color (0' 0' 0);  						pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  						gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  						gc.RgbFgColor = new Gdk.Color (255' 0' 0);  						pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4))' ((sz - 1)   							- (sz / 4)));  						pmap.DrawLine (gc' ((sz - 1)   							- (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1)   							- (sz / 4)));  						return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  					}  				}  			}
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyEditorCell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyEditorCell.cs,Render,The following statement contains a magic number: int dy = (bounds.Height - h) / 2;
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyEditorCell.cs,OnExposeEvent,The following statement contains a magic number: rect.Inflate (-3' 0);
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyDialogueEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyEditorCell.cs,PropertyDialogueEditor,The following statement contains a magic number: Spacing = 3;
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,PropertyGrid,The following statement contains a magic number: toolbar.Insert (new SeparatorToolItem ()' 2);
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,PropertyGrid,The following statement contains a magic number: toolbar.Insert (helpButton' 3);
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTitleLabel.SetPadding (5' 2);
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTitleLabel.SetPadding (5' 2);
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTextView.HeightRequest = 70;
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTextView.LeftMargin = 5;
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTextView.RightMargin = 5;
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: font.Size = (font.Size * 8) / 10;
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: font.Size = (font.Size * 8) / 10;
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGrid.cs,PropertyGridToolbar,The following statement contains a magic number: Spacing = 3;
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,PropertyGridTree,The following statement contains a magic number: col.FixedWidth = 180;
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,UpdateProperty,The following statement contains a magic number: do {  				PropertyDescriptor prop = (PropertyDescriptor) store.GetValue (it' 1);  				InstanceData idata = (InstanceData) store.GetValue (it' 3);  				if (prop != null && idata != null && prop.Name == pd.Name && idata.Instance == instance) {  					// Don't update the current editing node' since it may cause tree update problems  					if (!tree.Editing || !store.GetPath (tree.EditingIter).Equals (store.GetPath (it)))  						store.SetValue (it' 1' pd);  					return true;  				}  				TreeIter ci;  				if (store.IterChildren (out ci' it)) {  					if (UpdateProperty (pd' ci' instance))  						return true;  				}  			}  			while (store.IterNext (ref it));
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,PropertyData,The following statement contains a magic number: bool group = (bool) model.GetValue (iter' 2);
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,PropertyData,The following statement contains a magic number: if (group) {  				rc.SetData (null' null' null);  			} else {  				PropertyDescriptor prop = (PropertyDescriptor) model.GetValue (iter' 1);  				PropertyEditorCell propCell = editorManager.GetEditor (prop);                    // HERZUM SPRINT 5.0: TLAB-238 TLAB-243                  propCell.DataRoot = DataRoot;                  // END HERZUM SPRINT 5.0: TLAB-238 TLAB-243    				InstanceData idata = (InstanceData) model.GetValue (iter' 3);  				propCell.Initialize (tree' editorManager' prop' idata.Instance);  				rc.SetData (idata.Instance' prop' propCell);  			}
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GroupData,The following statement contains a magic number: rc.IsGroup = (bool) model.GetValue (iter' 2);
Magic Number,MonoDevelop.Components.PropertyGrid,InternalTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (dragging) {  				int nw = (int)(evnt.X) + dragPos;  				if (nw <= 40) nw = 40;  				GLib.Idle.Add (delegate {  					Columns[0].FixedWidth = nw;  					return false;  				});  			} else {  				int w = Columns[0].Width;  				if (Math.Abs (w - evnt.X) < 5)  					this.GdkWindow.Cursor = resizeCursor;  				else  					this.GdkWindow.Cursor = null;  			}
Magic Number,MonoDevelop.Components.PropertyGrid,InternalTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (dragging) {  				int nw = (int)(evnt.X) + dragPos;  				if (nw <= 40) nw = 40;  				GLib.Idle.Add (delegate {  					Columns[0].FixedWidth = nw;  					return false;  				});  			} else {  				int w = Columns[0].Width;  				if (Math.Abs (w - evnt.X) < 5)  					this.GdkWindow.Cursor = resizeCursor;  				else  					this.GdkWindow.Cursor = null;  			}
Magic Number,MonoDevelop.Components.PropertyGrid,InternalTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (dragging) {  				int nw = (int)(evnt.X) + dragPos;  				if (nw <= 40) nw = 40;  				GLib.Idle.Add (delegate {  					Columns[0].FixedWidth = nw;  					return false;  				});  			} else {  				int w = Columns[0].Width;  				if (Math.Abs (w - evnt.X) < 5)  					this.GdkWindow.Cursor = resizeCursor;  				else  					this.GdkWindow.Cursor = null;  			}
Magic Number,MonoDevelop.Components.PropertyGrid,InternalTree,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,OnButtonPressEvent,The following statement contains a magic number: if (Math.Abs (w - evnt.X) < 5) {  				TreePath[] rows = Selection.GetSelectedRows ();  				if (rows != null && rows.Length > 0)  					SetCursor (rows[0]' Columns[0]' false);  				dragging = true;  				dragPos = w - (int) evnt.X;  				this.GdkWindow.Cursor = resizeCursor;  			}
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,CellRendererProperty,The following statement contains a magic number: Xpad = 3;
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GetSize,The following statement contains a magic number: if (editorCell != null)  				editorCell.GetSize ((int)(cell_area.Width - this.Xpad * 2)' out width' out height);  			else {  				width = height = 0;  			}
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GetSize,The following statement contains a magic number: width += (int) this.Xpad * 2;
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GetSize,The following statement contains a magic number: height += (int) this.Ypad * 2;
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,Render,The following statement contains a magic number: int iwidth = cell_area.Width - (int) this.Xpad * 2;
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,Render,The following statement contains a magic number: if (editorCell != null)  				editorCell.GetSize ((int)(cell_area.Width - this.Xpad * 2)' out width' out height);
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererProperty,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,Render,The following statement contains a magic number: bounds.Y = cell_area.Y + (cell_area.Height - height) / 2;
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererPropertyGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GetSize,The following statement contains a magic number: GetCellSize (widget' (int)(cell_area.Width - this.Xpad * 2)' out width' out height);
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererPropertyGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GetSize,The following statement contains a magic number: width += (int) this.Xpad * 2;
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererPropertyGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,GetSize,The following statement contains a magic number: height += (int) this.Ypad * 2;
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererPropertyGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,Render,The following statement contains a magic number: GetCellSize (widget' (int)(cell_area.Width - this.Xpad * 2)' out width' out height);
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererPropertyGroup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\PropertyGridTree.cs,Render,The following statement contains a magic number: int y = cell_area.Y + (cell_area.Height - height) / 2;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditorCell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\BooleanEditorCell.cs,GetSize,The following statement contains a magic number: width = 20;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditorCell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\BooleanEditorCell.cs,GetSize,The following statement contains a magic number: height = 20;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditorCell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\BooleanEditorCell.cs,Render,The following statement contains a magic number: Gtk.Style.PaintCheck (Container.Style' window' state' sh' bounds' Container' "checkbutton"' bounds.X + indicatorSpacing - 1' bounds.Y + (bounds.Height - s)/2' s' s);
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: dialog.VBox.PackStart (hBox' true' true' 5);
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: grid = new PropertyGrid (base.EditorManager) {  				CurrentObject = null'  				WidthRequest = 200'  				ShowHelp = false  			};
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: hBox.PackEnd (grid' true' true' 5);
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: buttonBox.Spacing = 6;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: hBox.PackEnd (buttonBox' false' false' 5);
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: listScroll.WidthRequest = 200;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: listScroll.HeightRequest = 320;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: hBox.PackStart (listScroll' false' false' 5);
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: itemTree.AppendColumn (new TreeViewColumn ("Object"' rdr' "text"' 2));
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\CollectionEditor.cs,UpdateName,The following statement contains a magic number: itemStore.SetValue(iter' 2' name);
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,ColorEditorCell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\ColorEditorCell.cs,Render,The following statement contains a magic number: int yd = (bounds.Height - ColorBoxSize) / 2;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,EventEditorCell,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\EventEditor.cs,CreateEditor,The following statement contains a magic number: combo.WidthRequest = 30;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\FlagsEditorCell.cs,Initialize,The following statement contains a magic number: Spacing = 3;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\FlagsEditorCell.cs,Initialize,The following statement contains a magic number: if (values.Length < 6)   			{  				Gtk.VBox vbox = new Gtk.VBox (true' 3);    				flags = new Hashtable ();    				foreach (object value in values) {  					Gtk.CheckButton check = new Gtk.CheckButton (value.ToString ());  					check.TooltipText = value.ToString ();  					ulong uintVal = Convert.ToUInt64 (value);  					flags[check] = uintVal;  					flags[uintVal] = check;  					  					check.Toggled += FlagToggled;  					vbox.PackStart (check' false' false' 0);  				}    				Gtk.Frame frame = new Gtk.Frame ();  				frame.Add (vbox);  				frame.ShowAll ();  				PackStart (frame' true' true' 0);  			}   			else   			{  				flagsLabel = new Gtk.Entry ();  				flagsLabel.IsEditable = false;  				flagsLabel.HasFrame = false;  				flagsLabel.ShowAll ();  				PackStart (flagsLabel' true' true' 0);  				  				Gtk.Button but = new Gtk.Button ("...");  				but.Clicked += OnSelectFlags;  				but.ShowAll ();  				PackStart (but' false' false' 0);  			}
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\FlagsEditorCell.cs,Initialize,The following statement contains a magic number: if (values.Length < 6)   			{  				Gtk.VBox vbox = new Gtk.VBox (true' 3);    				flags = new Hashtable ();    				foreach (object value in values) {  					Gtk.CheckButton check = new Gtk.CheckButton (value.ToString ());  					check.TooltipText = value.ToString ();  					ulong uintVal = Convert.ToUInt64 (value);  					flags[check] = uintVal;  					flags[uintVal] = check;  					  					check.Toggled += FlagToggled;  					vbox.PackStart (check' false' false' 0);  				}    				Gtk.Frame frame = new Gtk.Frame ();  				frame.Add (vbox);  				frame.ShowAll ();  				PackStart (frame' true' true' 0);  			}   			else   			{  				flagsLabel = new Gtk.Entry ();  				flagsLabel.IsEditable = false;  				flagsLabel.HasFrame = false;  				flagsLabel.ShowAll ();  				PackStart (flagsLabel' true' true' 0);  				  				Gtk.Button but = new Gtk.Button ("...");  				but.Clicked += OnSelectFlags;  				but.ShowAll ();  				PackStart (but' false' false' 0);  			}
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsSelectorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\FlagsSelectorDialog.cs,FlagsSelectorDialog,The following statement contains a magic number: sc.BorderWidth = 6;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsSelectorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\FlagsSelectorDialog.cs,OnToggled,The following statement contains a magic number: ulong flag = (ulong) store.GetValue (iter' 2);
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FloatRange,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\FloatRange.cs,Initialize,The following statement contains a magic number: Digits = 2;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\TextEditor.cs,Initialize,The following statement contains a magic number: Spacing = 3;
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\TextEditor.cs,TextChanged,The following statement contains a magic number: if (valid)  				entry.ModifyFg (Gtk.StateType.Normal);  			else  				entry.ModifyFg (Gtk.StateType.Normal' new Gdk.Color (255' 0' 0));
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditorDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\InfoPanels\ConfigPropertyGrid\Editors\TextEditorDialog.cs,TextEditorDialog,The following statement contains a magic number: sc.BorderWidth = 6;
Duplicate Code,TraceLab.UI.GTK,ExperimentCanvasWidget,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\Controls\ExperimentView\ExperimentCanvasWidget.cs,ZoomToFit,The method contains a code clone-set at the following line numbers (starting from the method definition): ((33' 55)' (91' 113))
Missing Default,MonoHotDraw.Figures,AbstractFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\AbstractFigure.cs,SetAttribute,The following switch statement is missing a default case: switch (attribute) {  				case FigureAttribute.FillColor:  					FillColor = (Cairo.Color) value;  					break;  				case FigureAttribute.LineColor:  					LineColor = (Cairo.Color) value;  					break;  			}
Missing Default,MonoHotDraw.Figures,SimpleTextFigure,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Figures\SimpleTextFigure.cs,GetAttribute,The following switch statement is missing a default case: switch (attribute) {  				case FigureAttribute.FillColor:  					return FillColor;  				case FigureAttribute.FontAlignment:  					return FontAlignment;  				case FigureAttribute.FontColor:  					return FontColor;  				case FigureAttribute.FontSize:  					return FontSize;  				case FigureAttribute.FontStyle:  					return FontStyle;  				case FigureAttribute.LineColor:  					return LineColor;  			}
Missing Default,MonoHotDraw.Locators,QuickActionLocator,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DrawingLibrary\Locators\QuickActionLocator.cs,Locate,The following switch statement is missing a default case: switch (_position) {  					case QuickActionPosition.Up:  						return new PointD (r.X + r.Width * _relative' r.Y - _padding);  					case QuickActionPosition.Bottom:  						return new PointD (r.X + r.Width * _relative' r.Y2 + _padding);  					case QuickActionPosition.Left:  						return new PointD (r.X - _padding' r.Y + r.Height * _relative);  					case QuickActionPosition.Right:  						return new PointD (r.X2 + _padding' r.Y + r.Height * _relative);  				}
Missing Default,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,AutoHideBox,The following switch statement is missing a default case: switch (pos) {  				case PositionType.Left: cframe.SetMargins (1' 1' 0' 1); break;  				case PositionType.Right: cframe.SetMargins (1' 1' 1' 0); break;  				case PositionType.Top: cframe.SetMargins (0' 1' 1' 1); break;  				case PositionType.Bottom: cframe.SetMargins (1' 0' 1' 1); break;  			}
Missing Default,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,AnimateShow,The following switch statement is missing a default case: switch (position) {  			case PositionType.Left:  				WidthRequest = 0;  				break;  			case PositionType.Right:  				targetPos = X = X + WidthRequest;  				WidthRequest = 0;  				break;  			case PositionType.Top:  				HeightRequest = 0;  				break;  			case PositionType.Bottom:  				targetPos = Y = Y + HeightRequest;  				HeightRequest = 0;  				break;  			}
Missing Default,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateShow,The following switch statement is missing a default case: switch (position) {  			case PositionType.Left:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Right:  				WidthRequest += 1 + (targetSize - WidthRequest) / 3;  				X = targetPos - WidthRequest;  				if (WidthRequest < targetSize)  					return true;  				break;  			case PositionType.Top:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				if (HeightRequest < targetSize)  					return true;  				break;  			case PositionType.Bottom:  				HeightRequest += 1 + (targetSize - HeightRequest) / 3;  				Y = targetPos - HeightRequest;  				if (HeightRequest < targetSize)  					return true;  				break;  			}
Missing Default,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,RunAnimateHide,The following switch statement is missing a default case: switch (position) {  			case PositionType.Left: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Right: {  				int ns = WidthRequest - 1 - WidthRequest / 3;  				if (ns > 0) {  					WidthRequest = ns;  					X = targetPos - ns;  					return true;  				}  				break;  			}  			case PositionType.Top: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					return true;  				}  				break;  			}  			case PositionType.Bottom: {  				int ns = HeightRequest - 1 - HeightRequest / 3;  				if (ns > 0) {  					HeightRequest = ns;  					Y = targetPos - ns;  					return true;  				}  				break;  			}  			}
Missing Default,MonoDevelop.Components.Docking,ScrollableContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\AutoHideBox.cs,OnSizeAllocated,The following switch statement is missing a default case: switch (expandPos) {  				case PositionType.Bottom:  					alloc = new Rectangle (alloc.X' alloc.Y' alloc.Width' targetSize);  					break;  				case PositionType.Top:  					alloc = new Rectangle (alloc.X' alloc.Y - targetSize + alloc.Height' alloc.Width' targetSize);  					break;  				case PositionType.Right:  					alloc = new Rectangle (alloc.X' alloc.Y' targetSize' alloc.Height);  					break;  				case PositionType.Left:  					alloc = new Rectangle (alloc.X - targetSize + alloc.Width' alloc.Y' targetSize' alloc.Height);  					break;  				}
Missing Default,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following switch statement is missing a default case: switch (Frame.CompactGuiLevel) {  				case 1: sizePadding = 2; break;  				case 4: startPadding = 3; break;  				case 5: startPadding = 0; sizePadding = 0; break;  			}
Missing Default,MonoDevelop.Components.Docking,DockBar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockBar.cs,DockBar,The following switch statement is missing a default case: switch (position) {  				case PositionType.Top: al.BottomPadding = sizePadding; al.LeftPadding = al.RightPadding = startPadding; break;  				case PositionType.Bottom: al.TopPadding = sizePadding; al.LeftPadding = al.RightPadding = startPadding; break;  				case PositionType.Left: al.RightPadding = sizePadding; al.TopPadding = al.BottomPadding = startPadding; break;  				case PositionType.Right: al.LeftPadding = sizePadding; al.TopPadding = al.BottomPadding = startPadding; break;  			}
Missing Default,MonoDevelop.Components.Docking,DockFrame,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockFrame.cs,ExtractDockBar,The following switch statement is missing a default case: switch (pos) {  				case PositionType.Left: db.OriginalBar = dockBarLeft; dockBarLeft = db; break;  				case PositionType.Top: db.OriginalBar = dockBarTop; dockBarTop = db; break;  				case PositionType.Right: db.OriginalBar = dockBarRight; dockBarRight = db; break;  				case PositionType.Bottom: db.OriginalBar = dockBarBottom; dockBarBottom = db; break;  			}
Missing Default,MonoDevelop.Components.Docking,DockFrame,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockFrame.cs,GetDockBar,The following switch statement is missing a default case: switch (pos) {  				case Gtk.PositionType.Top: return dockBarTop;  				case Gtk.PositionType.Bottom: return dockBarBottom;  				case Gtk.PositionType.Left: return dockBarLeft;  				case Gtk.PositionType.Right: return dockBarRight;  			}
Missing Default,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockGroupItem.cs,SetBarDocPosition,The following switch statement is missing a default case: switch (barDocPosition) {  						case PositionType.Left: barDocPosition = PositionType.Right; break;  						case PositionType.Right: barDocPosition = PositionType.Left; break;  						case PositionType.Top: barDocPosition = PositionType.Bottom; break;  						case PositionType.Bottom: barDocPosition = PositionType.Top; break;  					}
Missing Default,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\DockItemToolbar.cs,DockItemToolbar,The following switch statement is missing a default case: switch (position) {  				case PositionType.Top:  					frame.SetMargins (0' 0' 1' 1);   					frame.SetPadding (0' 2' 2' 0);   					break;  				case PositionType.Bottom:  					frame.SetMargins (0' 1' 1' 1);  					frame.SetPadding (2' 2' 2' 0);   					break;  				case PositionType.Left:  					frame.SetMargins (0' 1' 1' 0);  					frame.SetPadding (0' 0' 2' 2);   					break;  				case PositionType.Right:  					frame.SetMargins (0' 1' 0' 1);  					frame.SetPadding (0' 0' 2' 2);   					break;  			}
Missing Default,MonoDevelop.Components.Docking,ShadedContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.GTK\DockLibrary\ShadedContainer.cs,DrawShadow,The following switch statement is missing a default case: switch (pos) {  					case PositionType.Top:   						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X += s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.X' r.Bottom);  						break;  					case PositionType.Bottom:   						r.Y = r.Bottom - shadowSize;  						r.Height = shadowSize > r.Height ? r.Height / 2 : shadowSize;  						r.X = r.X + s.Offset;  						r.Width = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Bottom' r.X' r.Y);  						break;  					case PositionType.Left:   						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.X' r.Y' r.Right' r.Y);  						break;  					case PositionType.Right:   						r.X = r.Right - shadowSize;  						r.Width = shadowSize > r.Width ? r.Width / 2 : shadowSize;   						r.Y += s.Offset;  						r.Height = s.Size;  						pat = new Cairo.LinearGradient (r.Right' r.Y' r.X' r.Y);  						break;  				}
