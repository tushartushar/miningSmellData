Implementation smell,Namespace,Class,File,Method,Description
Long Method,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The method has 121 lines of code.
Complex Method,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,OnMouseLeftButtonDown,Cyclomatic complexity of the method is 9
Complex Method,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,ExecuteAddScopeToDecision,Cyclomatic complexity of the method is 8
Complex Method,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,OnMouseLeftButtonDown,Cyclomatic complexity of the method is 9
Complex Method,TraceLab.UI.WPF.ViewModels,NodeComparer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentLibraryNodes\NodeComparer.cs,Compare,Cyclomatic complexity of the method is 8
Complex Method,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,ShouldFilterNodeBasedOnIoSpecFilter,Cyclomatic complexity of the method is 10
Long Parameter List,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,NotifyResizing,The method has 11 parameters. Parameters: minWidth' oldWidth' computedWidth' finalWidth' minHeight' oldHeight' computedHeight' finalHeight' args' computeHorizontalChangeFunc' computeVerticalChangeFunc
Long Parameter List,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,HandleResizing,The method has 7 parameters. Parameters: sender' args' computeWidthFunc' computeHeightFunc' computeHorizontalChangeFunc' computeVerticalChangeFunc' setAdornedElementCanvasFunc
Long Parameter List,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,FrameworkElementAdorner,The method has 6 parameters. Parameters: adornerChildElement' adornedElement' horizontalAdornerPlacement' verticalAdornerPlacement' offsetX' offsetY
Long Parameter List,TraceLab.UI.WPF.Controls,UIHelpers,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\UIHelpers.cs,EnsureAccess,The method has 5 parameters. Parameters: priority' dispatcher' method' obj' parameters
Long Parameter List,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The method has 7 parameters. Parameters: scopeNode' toNode' paddingLeft' paddingTop' paddingRight' paddingBottom' topCanvasOffset
Long Parameter List,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,TryFindIntersection,The method has 5 parameters. Parameters: point1' point2' point3' point4' intersectionPoint
Long Parameter List,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,GetCoercedTranslate,The method has 5 parameters. Parameters: translate' zoom' contentSize' desiredSize' actualSize
Long Parameter List,TraceLab.UI.WPF.ViewModels,DefiningBenchmarkViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\DefiningBenchmarkViewModel.cs,DefiningBenchmarkViewModel,The method has 6 parameters. Parameters: baseExperiment' benchmarksDirectories' library' workspace' workspaceTypeDirectories' webserviceAddress
Long Parameter List,TraceLab.UI.WPF.Views.Nodes,BaseComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\BaseComponentNodeInfoControl.cs,resizeInfoPane,The method has 5 parameters. Parameters: e' iospecExpander' iospecRow' outputsListView' inputsListView
Long Parameter List,TraceLab.UI.WPF.Views.PackageBuilder,IconExtractor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\IconExtractor.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pszPath' dwFileAttributes' psfi' cbfileInfo' uFlags
Long Identifier,TraceLab.UI.WPF.Controls.AdornedControl,AdornedControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\AdornedControl.cs,,The length of the parameter HorizontalAdornerPlacementProperty is 34.
Long Identifier,TraceLab.UI.WPF.Controls.AdornedControl,AdornedControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\AdornedControl.cs,,The length of the parameter VerticalAdornerPlacementProperty is 32.
Long Identifier,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,,The length of the parameter m_delayEditableChangeMilliseconds is 33.
Long Identifier,TraceLab.UI.WPF.Controls,IOSpecFilterCheckBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\IOSpecFilterCheckBox.cs,,The length of the parameter AvailableFilteringTypesProperty is 31.
Long Identifier,TraceLab.UI.WPF.Controls,ComboBoxStatement,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ComboBoxStatement.cs,,The length of the parameter m_statementWithOpeningParenthesis is 33.
Long Identifier,TraceLab.UI.WPF.Controls,RichToolTip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichToolTip.cs,,The length of the parameter PopupSecurityHelper_isChildPopupInitialized is 43.
Long Identifier,TraceLab.UI.WPF.Controls,RichToolTip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichToolTip.cs,,The length of the parameter PopupSecurityHelper_isChildPopup is 32.
Long Identifier,TraceLab.UI.WPF.Controls,RichToolTip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichToolTip.cs,,The length of the parameter CustomPopupPlacementCallbackProperty is 36.
Long Identifier,TraceLab.UI.WPF.Controls,SearchTextBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\SearchTextBox.cs,,The length of the parameter IsMouseLeftButtonDownPropertyKey is 32.
Long Identifier,TraceLab.UI.WPF.Converters,SubLevelNodeConfigConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\SubLevelNodeConfigConverter.cs,GetGraphIdPath,The length of the parameter topOwnerCompositeComponentNode is 30.
Long Identifier,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,,The length of the parameter RemoveSelectedNodesCommandProperty is 34.
Long Identifier,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,,The length of the parameter OpenComponentGraphCommandProperty is 33.
Long Identifier,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,,The length of the parameter ListViewSelectBenchmarkCommand is 30.
Long Identifier,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,,The length of the parameter OpenComponentGraphCommandProperty is 33.
Long Identifier,TraceLab.UI.WPF.Views,MainWindowBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,,The length of the parameter OpenComponentGraphCommandProperty is 33.
Long Identifier,TraceLab.UI.WPF.Views,MainWindowBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,,The length of the parameter m_showBenchmarkWizardDialogCommand is 34.
Long Identifier,TraceLab.UI.WPF.Views,MainWindowBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,,The length of the parameter m_showDefineBenchmarkDialogCommand is 34.
Long Identifier,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,,The length of the parameter ZoomBoxBorderThicknessProperty is 30.
Long Identifier,TraceLab.UI.WPF.ViewModels,BenchmarkWizardViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BenchmarkWizardViewModel.cs,,The length of the parameter m_benchmarkExperimentCompleted is 30.
Long Identifier,TraceLab.UI.WPF.ViewModels,SubLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\SubLevelExperimentViewModel.cs,,The length of the parameter m_topOwnerCompositeComponentNode is 32.
Long Identifier,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,,The length of the parameter m_componentsCollectionViewFilter is 32.
Long Identifier,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,FillItemsWithIncomingOutputsFromPreviousNodes,The length of the parameter predeccessorsOutputsNameTypeLookup is 34.
Long Identifier,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,,The length of the parameter AppendCodeTokenCommandProperty is 30.
Long Identifier,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,,The length of the parameter CompileDecisionModuleCommandProperty is 36.
Long Identifier,TraceLab.UI.WPF.Commands,RoutedCommands,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Commands\RoutedCommands.cs,,The length of the parameter DefineCompositeComponentCommand is 31.
Long Statement,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,HandleBottomRight,The length of the statement  "            SetAdornedElementCanvas setAdornedElementCanvas = (adornedElement' finalHeight' oldHeight' finalWidth' oldWidth) => { }; " is 120.
Long Statement,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The length of the statement  "            bottomRight.Arrange(new Rect(desiredWidth - adornerWidth / 2' desiredHeight - adornerHeight / 2' adornerWidth' adornerHeight)); " is 127.
Long Statement,TraceLab.UI.WPF.Controls.AdornedControl,AdornedControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\AdornedControl.cs,ShowAdornerInternal,The length of the statement  "                    this.adorner = new FrameworkElementAdorner(this.AdornerContent' this' this.HorizontalAdornerPlacement' this.VerticalAdornerPlacement' " is 133.
Long Statement,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/controls/authenticationanduploadcontrol.xaml"' System.UriKind.Relative); " is 144.
Long Statement,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/controls/editabletextblock.xaml"' System.UriKind.Relative); " is 131.
Long Statement,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBlock)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TextBlock_MouseLeftButtonDown); " is 154.
Long Statement,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBlock)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.TextBlock_MouseLeave); " is 130.
Long Statement,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBlock)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.TextBlock_MouseMove); " is 128.
Long Statement,TraceLab.UI.WPF.Controls,ScreenshotDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ScreenshotDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/controls/screenshotdialog.xaml"' System.UriKind.Relative); " is 130.
Long Statement,TraceLab.UI.WPF.Controls,InputItemComboBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\InputItemComboBox.cs,Refresh,The length of the statement  "                    //if currentNode is a ExperimentNode' and is ioValidator has incoming outputs for this node (otherwise' it has not been connected to start node) " is 144.
Long Statement,TraceLab.UI.WPF.Controls,IOSpecFilterCheckBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\IOSpecFilterCheckBox.cs,OnCheckboxUnchecked,The length of the statement  "                    var filter = IoSpecFilters.FirstOrDefault(item => item.FilterByDataType.Equals(default(KeyValuePair<string' string>)) == false " is 126.
Long Statement,TraceLab.UI.WPF.Controls,IOSpecFilterCheckBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\IOSpecFilterCheckBox.cs,OnCheckboxChecked,The length of the statement  "                //try check first if the filter has been already added... (assure that FilterByDataType was set - there might be filter that has not been yet set) " is 146.
Long Statement,TraceLab.UI.WPF.Controls,IOSpecFilterCheckBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\IOSpecFilterCheckBox.cs,OnCheckboxChecked,The length of the statement  "                var filter = IoSpecFilters.FirstOrDefault(item => item.FilterByDataType.Equals(default(KeyValuePair<string' string>)) == false  " is 126.
Long Statement,TraceLab.UI.WPF.Controls,IOSpecFilterCheckBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\IOSpecFilterCheckBox.cs,CheckMatch,The length of the statement  "                match = filters.Any(item => item.IsEmpty == false && item.FilterByDataType.Value.Equals(ItemDefinition.Type) && item.RequiresInput == true); " is 140.
Long Statement,TraceLab.UI.WPF.Controls,IOSpecFilterCheckBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\IOSpecFilterCheckBox.cs,CheckMatch,The length of the statement  "                match = filters.Any(item => item.IsEmpty == false && item.FilterByDataType.Value.Equals(ItemDefinition.Type) && item.RequiresOutput == true); " is 141.
Long Statement,TraceLab.UI.WPF.Controls,AssistListPopup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AssistListPopup.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/controls/assistlistpopup.xaml"' System.UriKind.Relative); " is 129.
Long Statement,TraceLab.UI.WPF.Controls,RichTextBoxWithIntellisense,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichTextBoxWithIntellisense.cs,OnInitialized,The length of the statement  "            DependencyPropertyDescriptor descriptor = DependencyPropertyDescriptor.FromProperty(BindableDocumentProperty' typeof(RichTextBoxWithIntellisense)); " is 147.
Long Statement,TraceLab.UI.WPF.Controls,RichTextBoxWithIntellisense,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichTextBoxWithIntellisense.cs,UpdateDocumentBinding,The length of the statement  "                System.Diagnostics.Debug.WriteLine(String.Format("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Update document binding to source.")); " is 121.
Long Statement,TraceLab.UI.WPF.Controls,RichTextBoxWithIntellisense,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichTextBoxWithIntellisense.cs,OnKeyUp,The length of the statement  "            if (!string.IsNullOrWhiteSpace(lastWord) && ContentAssistTriggers.Any(item => item.StartsWith(lastWord' StringComparison.CurrentCultureIgnoreCase))) " is 148.
Long Statement,TraceLab.UI.WPF.Controls,RichTextBoxWithIntellisense,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichTextBoxWithIntellisense.cs,ShowPopup,The length of the statement  "            m_assistListPopup.DataContext = ContentAssistTriggers.FindAll(item => item.StartsWith(lastWord' StringComparison.CurrentCultureIgnoreCase)); " is 140.
Long Statement,TraceLab.UI.WPF.Controls,RichToolTip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichToolTip.cs,InitStoryboards,The length of the statement  "                //Storyboard.SetTargetProperty(animation' new PropertyPath("(0).(1)"' FrameworkElement.RenderTransformProperty' ScaleTransform.ScaleXProperty)); " is 144.
Long Statement,TraceLab.UI.WPF.Controls,RichToolTip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichToolTip.cs,InitStoryboards,The length of the statement  "                //Storyboard.SetTargetProperty(animation' new PropertyPath("(0).(1)"' FrameworkElement.RenderTransformProperty' ScaleTransform.ScaleYProperty)); " is 144.
Long Statement,TraceLab.UI.WPF.Controls,UIHelpers,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\UIHelpers.cs,FindVisualRoot,The length of the statement  "            return FindVisualAncestor(startElement' delegate(DependencyObject o) { return (VisualTreeHelper.GetParent(o) == null); }); " is 122.
Long Statement,TraceLab.UI.WPF.Controls,ProgressControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ProgressControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/controls/progresscontrol.xaml"' System.UriKind.Relative); " is 129.
Long Statement,TraceLab.UI.WPF.Converters,FilePathIconConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\FilePathIconConverter.cs,Convert,The length of the statement  "                bitSrc = System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap(hBitmap.DangerousGetHandle()' IntPtr.Zero' System.Windows.Int32Rect.Empty' BitmapSizeOptions.FromEmptyOptions()); " is 183.
Long Statement,TraceLab.UI.WPF.Converters,AnyAllButtonVisibilityConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\AnyAllButtonVisibilityConverter.cs,Convert,The length of the statement  "                throw new InvalidOperationException("Incorrect usage of AnyAllButtonVisibilityConverter - the target type has to be Visibility"); " is 129.
Long Statement,TraceLab.UI.WPF.Converters,SubLevelNodeConfigConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\SubLevelNodeConfigConverter.cs,Convert,The length of the statement  "            //if node is not in scope (the check is needed' as scope extends composite component' but unlike composite component' it does not need to override config values) " is 161.
Long Statement,TraceLab.UI.WPF.Converters,SubLevelNodeConfigConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\SubLevelNodeConfigConverter.cs,Convert,The length of the statement  "                    CompositeComponentMetadata compositeComponentMetadata = (CompositeComponentMetadata)topCompositeComponentNode.Data.Metadata; " is 124.
Long Statement,TraceLab.UI.WPF.Converters,SubLevelNodeConfigConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\SubLevelNodeConfigConverter.cs,GetGraphIdPath,The length of the statement  "                throw new InvalidOperationException("Application is at invalid state. Sublevel experiment always need to have an owner."); " is 122.
Long Statement,TraceLab.UI.WPF.Converters,FilePathConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\FilePathToStringConverter.cs,Convert,The length of the statement  "                throw new ArgumentException("The experiment path has to be set. If filepath is null' the new FilePath object is initialized based on experiment path."); " is 152.
Long Statement,TraceLab.UI.WPF.Selectors,PackageBuilderWizardSelector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Selectors\PackageBuilderWizardSelector.cs,SelectTemplate,The length of the statement  "                Window win = Application.Current.Windows.Cast<Window>().SingleOrDefault(x => x.GetType().ToString().Equals("TraceLab.UI.WPF.Views.PackageBuilder.PackageBuilderMainWindow")); " is 173.
Long Statement,TraceLab.UI.WPF.Selectors,DefiningCompositeComponentWizardSelector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Selectors\DefiningCompositeComponentWizardSelector.cs,SelectTemplate,The length of the statement  "                Window win = Application.Current.Windows.Cast<Window>().SingleOrDefault(x => x.GetType().ToString().Equals("TraceLab.UI.WPF.Views.DefineCompositeComponentWizard")); " is 164.
Long Statement,TraceLab.UI.WPF.Selectors,BenchmarkWizardSelector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Selectors\BenchmarkWizardSelector.cs,SelectTemplate,The length of the statement  "                Window win = Application.Current.Windows.Cast<Window>().SingleOrDefault(x => x.GetType().ToString().Equals("TraceLab.UI.WPF.Views.BenchmarkWizardDialog")); " is 155.
Long Statement,TraceLab.UI.WPF.Selectors,DefineBenchmarkDialogSelector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Selectors\DefineBenchmarkDialogSelector.cs,SelectTemplate,The length of the statement  "                Window win = Application.Current.Windows.Cast<Window>().SingleOrDefault(x => x.GetType().ToString().Equals("TraceLab.UI.WPF.Views.DefineBenchmarkDialog")); " is 155.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "            Point topLeftCorner = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2 + paddingLeft' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + paddingTop + topCanvasOffset); " is 178.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "            Point topRightCorner = new Point(scopeCenter.X + scopeNode.DataWithSize.Width / 2 - paddingRight' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + paddingTop + topCanvasOffset); " is 180.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "            Point bottomLeftCorner = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2 + paddingLeft' scopeCenter.Y + scopeNode.DataWithSize.Height / 2 - paddingBottom); " is 166.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "            Point bottomRightCorner = new Point(scopeCenter.X + scopeNode.DataWithSize.Width / 2 - paddingRight' scopeCenter.Y + scopeNode.DataWithSize.Height / 2 - paddingBottom); " is 168.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "            if (TryFindIntersection(scopeCenter' endNodeCenter' bottomLeftCorner' bottomRightCorner' out intersectionOnMainCanvas)) { } /* top */ " is 133.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "            else if (TryFindIntersection(scopeCenter' endNodeCenter' bottomRightCorner' topRightCorner' out intersectionOnMainCanvas)) { } /* right */ " is 138.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "            else if (TryFindIntersection(scopeCenter' endNodeCenter' bottomLeftCorner' topLeftCorner' out intersectionOnMainCanvas)) { } /* left */ " is 135.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "            else if (TryFindIntersection(scopeCenter' endNodeCenter' topLeftCorner' topRightCorner' out intersectionOnMainCanvas)) { } /* top */ " is 132.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The length of the statement  "                adjustedIntersection = AdjustPointToScopeCanvasOrigin(intersectionOnMainCanvas.Value' scopeNode' topCanvasOffset' ref scopeCenter); " is 131.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetTopBorderCenter,The length of the statement  "            Point topBorderCenter = new Point(scopeCenter.X' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + paddingTop + topCanvasOffset); " is 131.
Long Statement,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetOriginCanvasPoint,The length of the statement  "            Point originCanvasPoint = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + topCanvasOffset); " is 155.
Long Statement,TraceLab.UI.WPF.Views,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutExperimentDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/aboutexperimentdialog.xaml"' System.UriKind.Relative); " is 132.
Long Statement,TraceLab.UI.WPF.Views,AboutTraceLabDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutTraceLabDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/abouttracelabdialog.xaml"' System.UriKind.Relative); " is 130.
Long Statement,TraceLab.UI.WPF.Views,AboutTraceLabDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutTraceLabDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.OpenHyperlinkRequest); " is 151.
Long Statement,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,PkgFolderChooser_SelectedItemChanged,The length of the statement  "                        TraceLabSDK.PackageSystem.IPackageReference reference = new TraceLab.Core.PackageSystem.PackageReference(package.Package); " is 122.
Long Statement,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,PkgFolderChooser_SelectedItemChanged,The length of the statement  "                    TraceLabSDK.PackageSystem.IPackageReference reference = new TraceLab.Core.PackageSystem.PackageReference(package.Package); " is 122.
Long Statement,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/folderpickerdialog.xaml"' System.UriKind.Relative); " is 129.
Long Statement,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The length of the statement  "            this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged); " is 133.
Long Statement,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The length of the statement  "            this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged); " is 151.
Long Statement,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,graphLayout_PreviewMouseLeftButtonDown,The length of the statement  "                //Checking on GraphLayout not this GraphView' because hit elemenent must be checked relative to the current GraphLayout origin' not constant graph view element " is 159.
Long Statement,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,graphLayout_PreviewMouseLeftButtonDown,The length of the statement  "                        TraceLab.UI.WPF.Controls.RoutePointThumb routePointThumb = obj.GetParent<TraceLab.UI.WPF.Controls.RoutePointThumb>(this); " is 121.
Long Statement,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,HACK_Control_PreviewMouseMove,The length of the statement  "            if (parent != null && parent != PotentialLinkSource && DropCommand.CanExecute(new DropLinkEventArgs(PotentialLinkSource.Vertex' parent.Vertex' null))) " is 150.
Long Statement,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,HACK_Control_PreviewMouseLeftButtonUp,The length of the statement  "                /// somehow when you drag a link quickly to the existing node' but you don't really reach it or you are too far from node' then the target appears to be HACK_NODE " is 162.
Long Statement,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,BeginDrag,The length of the statement  "            HACK_VertexControl.Dispatcher.BeginInvoke(new Action(() => { HACK_VertexControl.RaiseEvent(args); })' System.Windows.Threading.DispatcherPriority.Input' null); " is 159.
Long Statement,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,OnMouseLeftButtonDown,The length of the statement  "                    // If the user clicked on an info panel' then we don't want to do anything (they exist "above" the graph and cannot be selected in the same way.) " is 145.
Long Statement,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,OnMouseMove,The length of the statement  "                            Rect vertexBounds = new Rect(new Point(potentialSelectedVertex.TopLeftX' potentialSelectedVertex.TopLeftY)' new Size(potentialSelectedVertex.ActualWidth' potentialSelectedVertex.ActualHeight)); " is 193.
Long Statement,TraceLab.UI.WPF.Views,ComponentExceptionDisplay,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentExceptionDisplay.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/componentexceptiondisplay.xaml"' System.UriKind.Relative); " is 136.
Long Statement,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/newexperimentdialog.xaml"' System.UriKind.Relative); " is 130.
Long Statement,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,AnimateToSize,The length of the statement  "            var heightAnim = new GridLengthAnimation(headerRowDefinition.Height' new GridLength(height)' new Duration(TimeSpan.FromMilliseconds(500))); " is 139.
Long Statement,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,AnimateToSize,The length of the statement  "            var widthAnim = new GridLengthAnimation(keyBorderColumnDefinition.Width' new GridLength(width)' new Duration(TimeSpan.FromMilliseconds(500))); " is 142.
Long Statement,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/benchmarkwizarddialog.xaml"' System.UriKind.Relative); " is 132.
Long Statement,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand); " is 151.
Long Statement,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand); " is 158.
Long Statement,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo); " is 140.
Long Statement,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,TraceLab.UI.WPF.Views,ComponentLibraryErrorDisplay,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ErrorDisplay.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/errordisplay.xaml"' System.UriKind.Relative); " is 123.
Long Statement,TraceLab.UI.WPF.Views,ComponentLibraryOrganizer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentLibraryOrganizer.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/componentlibraryorganizer.xaml"' System.UriKind.Relative); " is 136.
Long Statement,TraceLab.UI.WPF.Views,ComponentLibraryOrganizer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentLibraryOrganizer.xaml.cs,Connect,The length of the statement  "            this.TagView.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.TreeView_SelectedItemChanged); " is 132.
Long Statement,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,OpenPkgReferenceManagerWindow,The length of the statement  "            importManager.Icon = new BitmapImage(new Uri("pack://application:'''/TraceLab.UI.WPF;component/Resources/Icon_PkgReference16.png")); " is 132.
Long Statement,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/componentslibrarywindow.xaml"' System.UriKind.Relative); " is 134.
Long Statement,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click); " is 120.
Long Statement,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PART_RemoveImportButton_Click); " is 126.
Long Statement,TraceLab.UI.WPF.Views,DefineBenchmarkDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineBenchmarkDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/definebenchmarkdialog.xaml"' System.UriKind.Relative); " is 132.
Long Statement,TraceLab.UI.WPF.Views,ExperimentImportManagerView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ExperimentImportManagerView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/experimentimportmanagerview.xaml"' System.UriKind.Relative); " is 138.
Long Statement,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/definecompositecomponentwizard.xaml"' System.UriKind.Relative); " is 141.
Long Statement,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand); " is 151.
Long Statement,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand); " is 158.
Long Statement,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo); " is 140.
Long Statement,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,PkgFileChooser_SelectedItemChanged,The length of the statement  "                    TraceLabSDK.PackageSystem.IPackageReference reference = new TraceLab.Core.PackageSystem.PackageReference(package.Package); " is 122.
Long Statement,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/filepickerdialog.xaml"' System.UriKind.Relative); " is 127.
Long Statement,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The length of the statement  "            this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged); " is 133.
Long Statement,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The length of the statement  "            this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged); " is 149.
Long Statement,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,OnMouseLeftButtonDown,The length of the statement  "                    // If the user clicked on an info panel' then we don't want to do anything (they exist "above" the graph and cannot be selected in the same way.) " is 145.
Long Statement,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,OnMouseMove,The length of the statement  "                            Rect vertexBounds = new Rect(new Point(potentialSelectedVertex.TopLeftX' potentialSelectedVertex.TopLeftY)' new Size(potentialSelectedVertex.ActualWidth' potentialSelectedVertex.ActualHeight)); " is 193.
Long Statement,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/readonlydockablegraph.xaml"' System.UriKind.Relative); " is 132.
Long Statement,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel); " is 140.
Long Statement,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel); " is 140.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/scopegraph.xaml"' System.UriKind.Relative); " is 121.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode); " is 136.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode); " is 143.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes); " is 145.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes); " is 152.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel); " is 140.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel); " is 140.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection); " is 142.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision); " is 144.
Long Statement,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver); " is 122.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,CanMoveUp,The length of the statement  "            ObservableCollection<SettingsPathViewModel> sourceCollection = source.ItemsSource as ObservableCollection<SettingsPathViewModel>; " is 129.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,CanMoveDown,The length of the statement  "            ObservableCollection<SettingsPathViewModel> sourceCollection = source.ItemsSource as ObservableCollection<SettingsPathViewModel>; " is 129.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,DoEditExisting,The length of the statement  "            ObservableCollection<SettingsPathViewModel> sourceCollection = source.ItemsSource as ObservableCollection<SettingsPathViewModel>; " is 129.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,CanEditExisting,The length of the statement  "                ObservableCollection<SettingsPathViewModel> sourceCollection = source.ItemsSource as ObservableCollection<SettingsPathViewModel>; " is 129.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,DoDelete,The length of the statement  "            ObservableCollection<SettingsPathViewModel> sourceCollection = source.ItemsSource as ObservableCollection<SettingsPathViewModel>; " is 129.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,CanDelete,The length of the statement  "                ObservableCollection<SettingsPathViewModel> sourceCollection = source.ItemsSource as ObservableCollection<SettingsPathViewModel>; " is 129.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,TEMPLATE_PART_Text_KeyDown,The length of the statement  "            //        Dispatcher.BeginInvoke(new Action(() => { parent.Focus(); })' System.Windows.Threading.DispatcherPriority.Background' null); " is 134.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/settingspage.xaml"' System.UriKind.Relative); " is 123.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperiment_Click); " is 120.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperimentsDirectory_Click); " is 130.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.DockPanel)(target)).LostFocus += new System.Windows.RoutedEventHandler(this.TextBox_LostFocus); " is 121.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Button_Click); " is 123.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).Loaded += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Text_Loaded); " is 124.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.TEMPLATE_PART_Text_KeyDown); " is 129.
Long Statement,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ContentControl)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.PART_Content_MouseDoubleClick); " is 156.
Long Statement,TraceLab.UI.WPF.Views,SubExperimentControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SubExperimentControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/subexperimentcontrol.xaml"' System.UriKind.Relative); " is 131.
Long Statement,TraceLab.UI.WPF.Views,StartPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\StartPage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/startpage.xaml"' System.UriKind.Relative); " is 120.
Long Statement,TraceLab.UI.WPF.Views,WorkspaceWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\WorkspaceWindow.xaml.cs,tracesList_MouseDoubleClick,The length of the statement  "                    if (!WorkspaceViewerLoader.LoadViewer(unit.Data' unit.FriendlyUnitName' WorkspaceUIAssemblyExtensions.Extensions' displaysFuncs' out error)) " is 140.
Long Statement,TraceLab.UI.WPF.Views,WorkspaceWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\WorkspaceWindow.xaml.cs,DisplayErrors,The length of the statement  "            if (viewModel != null && viewModel.TypeDefinitionErrors != null && viewModel.TypeDefinitionErrors.FirstOrDefault() != null) " is 123.
Long Statement,TraceLab.UI.WPF.Views,WorkspaceWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\WorkspaceWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/workspacewindow.xaml"' System.UriKind.Relative); " is 126.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/dockablegraph.xaml"' System.UriKind.Relative); " is 124.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode); " is 136.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode); " is 143.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes); " is 145.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes); " is 152.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel); " is 140.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel); " is 140.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection); " is 142.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision); " is 144.
Long Statement,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver); " is 122.
Long Statement,TraceLab.UI.WPF.Views,ExceptionDisplay,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ExceptionDisplay.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/exceptiondisplay.xaml"' System.UriKind.Relative); " is 127.
Long Statement,TraceLab.UI.WPF.Views,OutputWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\OutputWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/outputwindow.xaml"' System.UriKind.Relative); " is 123.
Long Statement,TraceLab.UI.WPF.Views,OutputWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\OutputWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ViewExceptionButton_Click); " is 122.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,LoadLayout,The length of the statement  "                    NLog.LogManager.GetCurrentClassLogger().ErrorException("Layout failed to be restored from previously saved layout.xml (in %APPDATA%/TraceLab). File was corrupted. Application restored default layout."' ex); " is 206.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,vm_ExperimentCompleted,The length of the statement  "                System.Windows.Threading.DispatcherTimer timer = new System.Windows.Threading.DispatcherTimer(System.Windows.Threading.DispatcherPriority.ApplicationIdle); " is 155.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,ShowDefineCompositeComponentWizard,The length of the statement  "                var setup = new DefiningCompositeComponentSetupViewModel(experiment' appvm.SettingsViewModel.ComponentPaths' howToAddToComponentLibrary); " is 137.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/mainwindow.xaml"' System.UriKind.Relative); " is 121.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand); " is 151.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand); " is 158.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo); " is 140.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard); " is 153.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard); " is 160.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot); " is 136.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot); " is 143.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening); " is 151.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening); " is 151.
Long Statement,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp); " is 161.
Long Statement,TraceLab.UI.WPF.Views,MainWindowBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,ShowDefineBenchmarkDialog,The length of the statement  "                bool isValid = TraceLab.Core.ExperimentExecution.ExperimentValidator.ValidateExperiment((IExperiment)experiment.TopLevel'  " is 121.
Long Statement,TraceLab.UI.WPF.Resources,ConfigPathsDataTemplatesBenchmark,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Resources\ConfigPathsDataTemplatesBenchmark.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/resources/configpathsdatatemplatesbenchmark.xaml"' System.UriKind.Relative); " is 148.
Long Statement,TraceLab.UI.WPF.Resources,ConfigPathsDataTemplates,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Resources\ConfigPathsDataTemplates.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/resources/configpathsdatatemplates.xaml"' System.UriKind.Relative); " is 139.
Long Statement,TraceLab.UI.WPF.ViewModels,BaseLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BaseLevelExperimentViewModel.cs,Equals,The length of the statement  "            IExperiment experiment = obj as IExperiment; //at this moment it is not known it is not TopLevelExperimentViewModel' so it is actual m_experiment " is 145.
Long Statement,TraceLab.UI.WPF.ViewModels,BaseLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BaseLevelExperimentViewModel.cs,FindOptimalLocation,The length of the statement  "                    suggestedLocation = new Point(vertexControl.TopLeftX + vertexControl.ActualWidth' vertexControl.TopLeftY + vertexControl.ActualHeight + padding); " is 145.
Long Statement,TraceLab.UI.WPF.ViewModels,BaseLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BaseLevelExperimentViewModel.cs,FindOptimalLocation,The length of the statement  "                            suggestedLocation = new Point(suggestedLocation.X + data.X - (data.Width / 2)' suggestedLocation.Y + data.Y - (data.Height / 2) + labelBorderHeight); " is 149.
Long Statement,TraceLab.UI.WPF.ViewModels,DefiningCompositeComponentSetupViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\DefiningCompositeComponentSetupViewModel.cs,ShouldOverwriteFile,The length of the statement  "                string messageBoxText = String.Format(TraceLab.Core.Messages.ShouldOverwriteFileQuestion' CompositeComponentLocationFilePath); " is 126.
Long Statement,TraceLab.UI.WPF.ViewModels,DefiningCompositeComponentSetupViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\DefiningCompositeComponentSetupViewModel.cs,ShouldOverwriteFile,The length of the statement  "                MessageBoxResult result = MessageBox.Show(messageBoxText' TraceLab.Core.Messages.DoYouWantToContinue' MessageBoxButton.YesNo' MessageBoxImage.Warning); " is 151.
Long Statement,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,RemoveInfoForSelectedNodes,The length of the statement  "                if (vert.IsSelected == true && vert != null && (vert is ComponentNode || vert is ExperimentDecisionNode || vert is CompositeComponentNode)) " is 139.
Long Statement,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,IsValidLinkSource,The length of the statement  "            if (node != null && (node is ExperimentStartNode || node is ComponentNode || node is ExperimentDecisionNode || node is CompositeComponentNode || node is ExitDecisionNode)) " is 171.
Long Statement,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,IsValidLinkTarget,The length of the statement  "                (node is ExperimentEndNode || node is ComponentNode || node is ExperimentDecisionNode || node is CompositeComponentNode)) " is 121.
Long Statement,TraceLab.UI.WPF.ViewModels,BenchmarkWizardViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BenchmarkWizardViewModel.cs,CanAdvanceState,The length of the statement  "            return SelectedBenchmark != null && SelectedBenchmark.ComponentTemplate != null && CurrentState != BenchmarkWizardState.Process; " is 128.
Long Statement,TraceLab.UI.WPF.ViewModels,BenchmarkWizardViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BenchmarkWizardViewModel.cs,DoAdvanceState,The length of the statement  "                AuthenticationViewModel = new AuthenticationAndUploadViewModel<ContestResultsPublishedResponse>(m_benchmarkWizard.WebService' " is 125.
Long Statement,TraceLab.UI.WPF.ViewModels,BenchmarkWizardViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BenchmarkWizardViewModel.cs,CanBacktrackState,The length of the statement  "            return CurrentState != BenchmarkWizardState.SelectBenchmark && CurrentState != BenchmarkWizardState.AuthenticationAndUpload; " is 124.
Long Statement,TraceLab.UI.WPF.ViewModels,BenchmarkWizardViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BenchmarkWizardViewModel.cs,ExecuteDownloadContestPackage,The length of the statement  "                    //although UI should prevent user trying to download contest by not showing the download button' catch exceptions just in case " is 126.
Long Statement,TraceLab.UI.WPF.ViewModels,BenchmarkWizardViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BenchmarkWizardViewModel.cs,ExecuteDownloadContestPackage,The length of the statement  "                    //although UI should prevent user trying to download contest by not showing the download button' catch exceptions just in case " is 126.
Long Statement,TraceLab.UI.WPF.ViewModels,IOSpecFilter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentLibraryNodes\IOSpecFilter.cs,RefreshCurrentlyAvailableFilterTypes,The length of the statement  "                AvailableFilteringTypes = allAvailableTypes.Where(filterType => !selectedTypes.Any(selectedType => selectedType.Equals(filterType))); " is 133.
Long Statement,TraceLab.UI.WPF.ViewModels,IOSpecFilter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentLibraryNodes\IOSpecFilter.cs,RefreshCurrentlyAvailableFilterTypes,The length of the statement  "                AvailableFilteringTypes = allAvailableTypes.Where(filterType => !selectedTypes.Any(selectedType => selectedType.Equals(filterType)) " is 131.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentLibraryOrganizerVM,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentLibraryOrganizerVM.cs,GetChildNode,The length of the statement  "                var found = parent.AllChildren.FirstOrDefault(o => { return o.Label.Equals(splitPath[i]' StringComparison.CurrentCultureIgnoreCase); }); " is 136.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentLibraryOrganizerVM,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentLibraryOrganizerVM.cs,RemoveEmptySubTag,The length of the statement  "                var found = parent.AllChildren.FirstOrDefault(o => { return o.Label.Equals(tags[index]' StringComparison.CurrentCultureIgnoreCase); }); " is 135.
Long Statement,TraceLab.UI.WPF.ViewModels,FileDialogs,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\FileDialogs.cs,GetCompositeComponentFilename,The length of the statement  "            return GetFilename<Ookii.Dialogs.Wpf.VistaSaveFileDialog>("Save component as"' ".tcml"' "Tracelab Composite Components Files|*.tcml"); " is 134.
Long Statement,TraceLab.UI.WPF.ViewModels,SubLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\SubLevelExperimentViewModel.cs,GetTopOwnerNode,The length of the statement  "                    throw new InvalidOperationException("Application is at invalid state. Sublevel experiment always need to have an owner."); " is 122.
Long Statement,TraceLab.UI.WPF.ViewModels,SettingsViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\SettingsViewModel.cs,ApplyChanges,The length of the statement  "                System.Windows.MessageBox.Show("Changes to types require a restart of TraceLab."' "TraceLab restart required"' System.Windows.MessageBoxButton.OK' System.Windows.MessageBoxImage.Information); " is 191.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,ComponentLibraryViewModel_Rescanned,The length of the statement  "                var refreshedExperiment = ExperimentManager.ReloadExperiment((Experiment)ExperimentViewModel.TopLevel' (TraceLab.Core.Components.ComponentsLibrary)ComponentLibraryViewModel); " is 174.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,NewFunc,The length of the statement  "                ApplicationViewModel newApplicationViewModel = ApplicationViewModel.CreateNewApplicationViewModel(m_viewModel' experiment); " is 123.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,NewFunc,The length of the statement  "                RecentExperimentsHelper.UpdateRecentExperimentList(TraceLab.Core.Settings.Settings.RecentExperimentsPath' experiment.ExperimentInfo.FilePath); " is 142.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,NewFunc,The length of the statement  "                    NLog.LogManager.GetCurrentClassLogger().ErrorException(String.Format("Failed to Save File {0}. {1}"' file' e.Message)' e); " is 122.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,SaveFunc,The length of the statement  "                        NLog.LogManager.GetCurrentClassLogger().ErrorException(String.Format("Failed to Save File {0}. {1}"' file' e.Message)' e); " is 122.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,SaveAsFunc,The length of the statement  "                        NLog.LogManager.GetCurrentClassLogger().ErrorException(String.Format("Failed to Save File {0}. {1}"' file' e.Message)' e); " is 122.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,SaveAsFunc,The length of the statement  "                        m_viewModel.WorkspaceViewModel = new WorkspaceViewModel((TraceLab.Core.Workspaces.Workspace)m_viewModel.WorkspaceViewModel' experiment.ExperimentInfo.Id); " is 154.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,OpenSettingsFunc,The length of the statement  "            settingsWindow.Icon = new BitmapImage(new Uri("pack://application:'''/TraceLab.UI.WPF;component/Resources/Icon_Settings16.png")); " is 129.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,OpenExperiment,The length of the statement  "                var experiment = ExperimentManager.Load(file' (TraceLab.Core.Components.ComponentsLibrary)m_viewModel.ComponentLibraryViewModel); " is 129.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,OpenExperiment,The length of the statement  "                ApplicationViewModel newApplicationViewModel = ApplicationViewModel.CreateNewApplicationViewModel(m_viewModel' experiment); " is 123.
Long Statement,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,OpenInWindow,The length of the statement  "            if (m_viewModel.Experiment == null || (m_viewModel.Experiment != null && m_viewModel.Experiment.IsModified == false && m_viewModel.Experiment.VertexCount == 2)) " is 160.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,ApplyFilter,The length of the statement  "            return !ShouldFilterNode(metadataDefinition' m_lowercaseFilter) && !ShouldFilterNodeBasedOnIoSpecFilter(metadataDefinition); " is 124.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,GetChildNode,The length of the statement  "                var found = parent.AllChildren.FirstOrDefault(o => { return o.Label.Equals(splitPath[i]' StringComparison.CurrentCultureIgnoreCase); }); " is 136.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,OpenOrganizerFunc,The length of the statement  "            organizerWindow.Icon = new BitmapImage(new Uri("pack://application:'''/TraceLab.UI.WPF;component/Resources/Icon_Organizer16.png")); " is 131.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,RemoveEmptySubTag,The length of the statement  "                var found = parent.AllChildren.FirstOrDefault(o => { return o.Label.Equals(tags[index]' StringComparison.CurrentCultureIgnoreCase); }); " is 135.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,IoSpecFiltersCollectionChanged,The length of the statement  "                        //if filter is not empty' meaning if the filering type is selected and at least one of input/output checkboxes is checked. " is 122.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,IoSpecFiltersCollectionChanged,The length of the statement  "                        //if filter is not empty' meaning if the filering type is selected and at least one of input/output checkboxes is checked. " is 122.
Long Statement,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,OnIoSpecFilterChanged,The length of the statement  "            //apply new filters in all other cases (couse other properties like RequiresInput or RequiresOutput might have been changed " is 123.
Long Statement,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,RunExperimentFunc,The length of the statement  "                        NLog.LogManager.GetCurrentClassLogger().Error(String.Format("Experiment failed to run. Some component dependencies could not be resolved. Please re-scan the components library to determine which components are failing.\n{0}"' ex.Message)); " is 239.
Long Statement,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,PackExperimentFunc,The length of the statement  "                MessageBoxResult result = MessageBox.Show("To create a package' the experiment needs to be saved first.\nWould you like to proceed?"' "Save modified experiment"' MessageBoxButton.YesNo' MessageBoxImage.Question); " is 212.
Long Statement,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,PackExperimentFunc,The length of the statement  "                        MessageBox.Show("Package building process interrupted. The following error ocurred:\n" + e.Message' "Error while saving experiment"' MessageBoxButton.OK' MessageBoxImage.Error); " is 177.
Long Statement,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,PackExperimentFunc,The length of the statement  "                    new TraceLab.UI.WPF.Views.PackageBuilder.PackageBuilderMainWindow(originalExperiment' AppVMWrapper.WorkspaceViewModel.SupportedTypes); " is 134.
Long Statement,TraceLab.UI.WPF.Views.Nodes,ReadOnlyLoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyLoopDecisionNodeInfoControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/nodes/readonlyloopdecisionnodeinfocontrol.xaml"' System.UriKind.Relative); " is 152.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,metadata_RequestLatestCode,The length of the statement  "            //the update of document binding must be invoked on main GUI thread - the same thread that has constructed the decision node info control " is 137.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,metadata_RequestLatestCode,The length of the statement  "            //if it was not invoked on main ui thread' it would crash tracelab if info control was open' decision code was changed' and experiment was run.  " is 143.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,metadata_RequestLatestCode,The length of the statement  "            //Experiment running happens in seperate thread' and one of action that is done is the recompilaton of (dirty changed) decision code'  " is 133.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,FillItemsWithIncomingOutputsFromPreviousNodes,The length of the statement  "                predeccessorsOutputsNameTypeLookup = new Dictionary<string' string>(); //return empty - there is not path from start node to decision " is 133.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,CompileDecisionModuleFunc,The length of the statement  "                    TraceLab.Core.Decisions.DecisionCompilationRunner.CompileDecision(node' m_experiment' workspaceTypeDirectories' loggerNameRoot); " is 128.
Long Statement,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/nodes/loopdecisionnodeinfocontrol.xaml"' System.UriKind.Relative); " is 144.
Long Statement,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken); " is 141.
Long Statement,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken); " is 148.
Long Statement,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule); " is 147.
Long Statement,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule); " is 154.
Long Statement,TraceLab.UI.WPF.Views.Nodes,ExitScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ExitScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The length of the statement  "            Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.ExitDecisionNode' 15' 15' 15' 15' m_labelHeight); " is 124.
Long Statement,TraceLab.UI.WPF.Views.Nodes,EnterScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\EnterScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The length of the statement  "            Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.DecisionNode' 15' 15' 15' 15' m_labelHeight); " is 120.
Long Statement,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/nodes/readonlycomponentnodeinfo.xaml"' System.UriKind.Relative); " is 142.
Long Statement,TraceLab.UI.WPF.Views.Nodes,ReadOnlyDecisionNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyDecisionNodeInfo.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/nodes/readonlydecisionnodeinfo.xaml"' System.UriKind.Relative); " is 141.
Long Statement,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/nodes/componentnodeinfocontrol.xaml"' System.UriKind.Relative); " is 141.
Long Statement,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.OutputAsTextBox_TextChanged); " is 145.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/nodes/decisionnodeinfocontrol.xaml"' System.UriKind.Relative); " is 140.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken); " is 141.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken); " is 148.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule); " is 147.
Long Statement,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule); " is 154.
Long Statement,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,OnRender,The length of the statement  "                CombinedGeometry clipGeometry = new CombinedGeometry(GeometryCombineMode.Exclude' totalRectangleGeometry' elementRectangleGeometry); " is 132.
Long Statement,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/nodes/nodeinfocontainer.xaml"' System.UriKind.Relative); " is 134.
Long Statement,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,Connect,The length of the statement  "            this.thisInfoContainer.IsKeyboardFocusWithinChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.NodeInfoContainer_IsKeyboardFocusWithinChanged); " is 165.
Long Statement,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,Connect,The length of the statement  "            this.thisInfoContainer.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.NodeInfoContainer_PreviewMouseLeftButtonDown); " is 153.
Long Statement,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/packagebuilder/packagebuildermainwindow.xaml"' System.UriKind.Relative); " is 150.
Long Statement,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateExperimentPackageButton_Click); " is 134.
Long Statement,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TreeView_MouseLeftButtonClick); " is 151.
Long Statement,TraceLab.UI.WPF,WpfMain,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\WpfMain.cs,TryActivateExistingWindow,The length of the statement  "                    //check if window has experiment with same filepath opened (in windows case does not matter - since we are already in WPF just ignore the case) " is 143.
Long Statement,TraceLab.UI.WPF,WpfMain,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\WpfMain.cs,TryActivateExistingWindow,The length of the statement  "                        applicationViewModelWrapper.ExperimentViewModel.TopLevel.ExperimentInfo.FilePath.Equals(experimentFilepath' StringComparison.OrdinalIgnoreCase)) " is 144.
Long Statement,TraceLab.UI.WPF.Themes,GraphDocument,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\obj\Debug\Themes\GraphDocument.g.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/themes/graphdocument.xaml"' System.UriKind.Relative); " is 125.
Long Statement,TraceLab.UI.WPF.Views.Resources,NodeResources,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\obj\Debug\Views\Nodes\NodeResources.g.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/TraceLab.UI.WPF;component/views/nodes/noderesources.xaml"' System.UriKind.Relative); " is 130.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,TraceLab.UI.WPF.Controls,RichTextBoxWithIntellisense,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichTextBoxWithIntellisense.cs,OnKeyUp,The conditional expression  "(e.Key >= Key.A && e.Key <= Key.Z) || e.Key == Key.Back || e.Key == Key.Delete"  is complex.
Complex Conditional,TraceLab.UI.WPF.Controls,NodeGraphLayout,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\NodeGraphLayout.cs,MeasureOverride,The conditional expression  "Graph != null && (desiredSize.IsEmpty || (desiredSize.Width == 0 && desiredSize.Height == 0))"  is complex.
Complex Conditional,TraceLab.UI.WPF.Controls,NodeGraphLayout,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\NodeGraphLayout.cs,MeasureOverride,The conditional expression  "!double.IsNaN(bottom) && !double.IsNaN(right) && !double.IsInfinity(left) && !double.IsInfinity(top)"  is complex.
Complex Conditional,TraceLab.UI.WPF.Converters,NegateBoolConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\NegateBoolConverter.cs,Convert,The conditional expression  "(targetType == typeof(bool) || targetType == typeof(bool?)) && value != null && value.GetType() == typeof(bool)"  is complex.
Complex Conditional,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,TryFindIntersection,The conditional expression  "ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1"  is complex.
Complex Conditional,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,RemoveNodeFunc,The conditional expression  "vert != null && (vert is ComponentNode || vert is ExperimentDecisionNode || vert is CompositeComponentNode)"  is complex.
Complex Conditional,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,CanRemoveNodeFunc,The conditional expression  "vert != null && (vert is ComponentNode || vert is ExperimentDecisionNode || vert is CompositeComponentNode)"  is complex.
Complex Conditional,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,RemoveInfoForSelectedNodes,The conditional expression  "vert.IsSelected == true && vert != null && (vert is ComponentNode || vert is ExperimentDecisionNode || vert is CompositeComponentNode)"  is complex.
Complex Conditional,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,IsValidLinkSource,The conditional expression  "node != null && (node is ExperimentStartNode || node is ComponentNode || node is ExperimentDecisionNode || node is CompositeComponentNode || node is ExitDecisionNode)"  is complex.
Complex Conditional,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,IsValidLinkTarget,The conditional expression  "node != null && node.ID != "HACK_Node" && node is ScopeNode == false &&                  (node is ExperimentEndNode || node is ComponentNode || node is ExperimentDecisionNode || node is CompositeComponentNode)"  is complex.
Complex Conditional,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,OpenInWindow,The conditional expression  "m_viewModel.Experiment == null || (m_viewModel.Experiment != null && m_viewModel.Experiment.IsModified == false && m_viewModel.Experiment.VertexCount == 2)"  is complex.
Complex Conditional,TraceLab.UI.WPF.Views.Nodes,ExitLoopScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ExitLoopScopeNodeControl.xaml.cs,ScopeNodeData_PropertyChanged,The conditional expression  "e.PropertyName == "Width" || e.PropertyName == "Height" || e.PropertyName == "X" || e.PropertyName == "Y""  is complex.
Complex Conditional,TraceLab.UI.WPF.Views.Nodes,EnterLoopScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\EnterLoopScopeNodeControl.xaml.cs,ScopeNodeData_PropertyChanged,The conditional expression  "e.PropertyName == "Width" || e.PropertyName == "Height" || e.PropertyName == "X" || e.PropertyName == "Y""  is complex.
Complex Conditional,TraceLab.UI.WPF.Views.Nodes,ExitScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ExitScopeNodeControl.xaml.cs,ScopeNodeData_PropertyChanged,The conditional expression  "e.PropertyName == "Width" || e.PropertyName == "Height" || e.PropertyName == "X" || e.PropertyName == "Y""  is complex.
Complex Conditional,TraceLab.UI.WPF.Views.Nodes,EnterScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\EnterScopeNodeControl.xaml.cs,ScopeNodeData_PropertyChanged,The conditional expression  "e.PropertyName == "Width" || e.PropertyName == "Height" || e.PropertyName == "X" || e.PropertyName == "Y""  is complex.
Virtual Method Call from Constructor,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,DecisionInfoControlBase,The constructor "DecisionInfoControlBase" calls a virtual method "InitRichTextBoxIntellisenseTrigger".
Empty Catch Block,TraceLab.UI.WPF.Controls,RichToolTip,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichToolTip.cs,HookupParentPopup,The method has an empty catch block.
Empty Catch Block,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,TextBox_TextChanged,The method has an empty catch block.
Empty Catch Block,WpfMentor.CommandParameterBindings,DataResourceBindingExtension,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Resources\DataResourceWithNullCommandSupport.cs,ProvideValue,The method has an empty catch block.
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,BuildAdornerCorner,The following statement contains a magic number: cornerThumb.Height = cornerThumb.Width = 10;
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,BuildAdornerCorner,The following statement contains a magic number: cornerThumb.Opacity = 0.40;
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The following statement contains a magic number: topLeft.Arrange(new Rect(-adornerWidth / 2' -adornerHeight / 2' adornerWidth' adornerHeight));
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The following statement contains a magic number: topLeft.Arrange(new Rect(-adornerWidth / 2' -adornerHeight / 2' adornerWidth' adornerHeight));
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The following statement contains a magic number: topRight.Arrange(new Rect(desiredWidth - adornerWidth / 2' -adornerHeight / 2' adornerWidth' adornerHeight));
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The following statement contains a magic number: topRight.Arrange(new Rect(desiredWidth - adornerWidth / 2' -adornerHeight / 2' adornerWidth' adornerHeight));
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The following statement contains a magic number: bottomLeft.Arrange(new Rect(-adornerWidth / 2' desiredHeight - adornerHeight / 2' adornerWidth' adornerHeight));
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The following statement contains a magic number: bottomLeft.Arrange(new Rect(-adornerWidth / 2' desiredHeight - adornerHeight / 2' adornerWidth' adornerHeight));
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The following statement contains a magic number: bottomRight.Arrange(new Rect(desiredWidth - adornerWidth / 2' desiredHeight - adornerHeight / 2' adornerWidth' adornerHeight));
Magic Number,TraceLab.UI.WPF.Adorners,ResizingAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Adorners\ResizingAdorner.cs,ArrangeOverride,The following statement contains a magic number: bottomRight.Arrange(new Rect(desiredWidth - adornerWidth / 2' desiredHeight - adornerHeight / 2' adornerWidth' adornerHeight));
Magic Number,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,DetermineX,The following statement contains a magic number: switch (child.HorizontalAlignment)              {                  case HorizontalAlignment.Left:                  {                      if (horizontalAdornerPlacement == AdornerPlacement.Outside)                      {                          return -child.DesiredSize.Width + offsetX;                      }                      else                      {                          return offsetX;                      }                  }                  case HorizontalAlignment.Right:                  {                      if (horizontalAdornerPlacement == AdornerPlacement.Outside)                      {                          double adornedWidth = AdornedElement.ActualWidth;                          return adornedWidth + offsetX;                      }                      else                      {                          double adornerWidth = this.child.DesiredSize.Width;                          double adornedWidth = AdornedElement.ActualWidth;                          double x = adornedWidth - adornerWidth;                          return x + offsetX;                      }                  }                  case HorizontalAlignment.Center:                  {                      double adornerWidth = this.child.DesiredSize.Width;                      double adornedWidth = AdornedElement.ActualWidth;                      double x = (adornedWidth / 2) - (adornerWidth / 2);                      return x + offsetX;                  }                  case HorizontalAlignment.Stretch:                  {                      return 0.0;                  }              }
Magic Number,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,DetermineX,The following statement contains a magic number: switch (child.HorizontalAlignment)              {                  case HorizontalAlignment.Left:                  {                      if (horizontalAdornerPlacement == AdornerPlacement.Outside)                      {                          return -child.DesiredSize.Width + offsetX;                      }                      else                      {                          return offsetX;                      }                  }                  case HorizontalAlignment.Right:                  {                      if (horizontalAdornerPlacement == AdornerPlacement.Outside)                      {                          double adornedWidth = AdornedElement.ActualWidth;                          return adornedWidth + offsetX;                      }                      else                      {                          double adornerWidth = this.child.DesiredSize.Width;                          double adornedWidth = AdornedElement.ActualWidth;                          double x = adornedWidth - adornerWidth;                          return x + offsetX;                      }                  }                  case HorizontalAlignment.Center:                  {                      double adornerWidth = this.child.DesiredSize.Width;                      double adornedWidth = AdornedElement.ActualWidth;                      double x = (adornedWidth / 2) - (adornerWidth / 2);                      return x + offsetX;                  }                  case HorizontalAlignment.Stretch:                  {                      return 0.0;                  }              }
Magic Number,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,DetermineY,The following statement contains a magic number: switch (child.VerticalAlignment)              {                  case VerticalAlignment.Top:                  {                      if (verticalAdornerPlacement == AdornerPlacement.Outside)                      {                          return -child.DesiredSize.Height + offsetY;                      }                      else                      {                          return offsetY;                      }                  }                  case VerticalAlignment.Bottom:                  {                      if (verticalAdornerPlacement == AdornerPlacement.Outside)                      {                          double adornedHeight = AdornedElement.ActualHeight;                          return adornedHeight + offsetY;                      }                      else                      {                          double adornerHeight = this.child.DesiredSize.Height;                          double adornedHeight = AdornedElement.ActualHeight;                          double x = adornedHeight - adornerHeight;                          return x + offsetY;                      }                  }                  case VerticalAlignment.Center:                  {                      double adornerHeight = this.child.DesiredSize.Height;                      double adornedHeight = AdornedElement.ActualHeight;                      double x = (adornedHeight / 2) - (adornerHeight / 2);                      return x + offsetY;                  }                  case VerticalAlignment.Stretch:                  {                      return 0.0;                  }              }
Magic Number,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,DetermineY,The following statement contains a magic number: switch (child.VerticalAlignment)              {                  case VerticalAlignment.Top:                  {                      if (verticalAdornerPlacement == AdornerPlacement.Outside)                      {                          return -child.DesiredSize.Height + offsetY;                      }                      else                      {                          return offsetY;                      }                  }                  case VerticalAlignment.Bottom:                  {                      if (verticalAdornerPlacement == AdornerPlacement.Outside)                      {                          double adornedHeight = AdornedElement.ActualHeight;                          return adornedHeight + offsetY;                      }                      else                      {                          double adornerHeight = this.child.DesiredSize.Height;                          double adornedHeight = AdornedElement.ActualHeight;                          double x = adornedHeight - adornerHeight;                          return x + offsetY;                      }                  }                  case VerticalAlignment.Center:                  {                      double adornerHeight = this.child.DesiredSize.Height;                      double adornedHeight = AdornedElement.ActualHeight;                      double x = (adornedHeight / 2) - (adornerHeight / 2);                      return x + offsetY;                  }                  case VerticalAlignment.Stretch:                  {                      return 0.0;                  }              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.TextBox_KeyDown);                            #line default              #line hidden                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).Loaded += new System.Windows.RoutedEventHandler(this.TextBox_Loaded);                            #line default              #line hidden                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).LostFocus += new System.Windows.RoutedEventHandler(this.TextBox_LostFocus);                            #line default              #line hidden              break;              case 3:                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TextBlock_MouseLeftButtonDown);                            #line default              #line hidden                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.TextBlock_MouseLeave);                            #line default              #line hidden                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.TextBlock_MouseMove);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.TextBox_KeyDown);                            #line default              #line hidden                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).Loaded += new System.Windows.RoutedEventHandler(this.TextBox_Loaded);                            #line default              #line hidden                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).LostFocus += new System.Windows.RoutedEventHandler(this.TextBox_LostFocus);                            #line default              #line hidden              break;              case 3:                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TextBlock_MouseLeftButtonDown);                            #line default              #line hidden                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.TextBlock_MouseLeave);                            #line default              #line hidden                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.TextBlock_MouseMove);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Controls,AngleBorder,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AngleBorder.cs,OnRender,The following statement contains a magic number: double childMiddleY = childRect.Top + (childRect.Height / 2);
Magic Number,TraceLab.UI.WPF.Controls,AngleBorder,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AngleBorder.cs,OnRender,The following statement contains a magic number: double childMiddleX = childRect.Left + (childRect.Width / 2);
Magic Number,TraceLab.UI.WPF.Controls,ComboBoxStatement,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ComboBoxStatement.cs,InitComboBox,The following statement contains a magic number: m_comboBox.FontSize = 10.0;
Magic Number,TraceLab.UI.WPF.Controls,ComboBoxStatement,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ComboBoxStatement.cs,InitComboBox,The following statement contains a magic number: m_comboBox.Height = 14.0;
Magic Number,TraceLab.UI.WPF.Controls,ComboBoxStatement,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ComboBoxStatement.cs,InitStackPanelStyling,The following statement contains a magic number: m_statementWithOpeningParenthesis.Height = 14.0;
Magic Number,TraceLab.UI.WPF.Controls,ComboBoxStatement,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ComboBoxStatement.cs,InitStackPanelStyling,The following statement contains a magic number: m_statementWithOpeningParenthesis.Padding = new Thickness(0.0' 2.0' 0.0' 0.0);
Magic Number,TraceLab.UI.WPF.Controls,ComboBoxStatement,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ComboBoxStatement.cs,InitStackPanelStyling,The following statement contains a magic number: m_closingParenthesis.Height = 14.0;
Magic Number,TraceLab.UI.WPF.Controls,ComboBoxStatement,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ComboBoxStatement.cs,InitStackPanelStyling,The following statement contains a magic number: m_closingParenthesis.Padding = new Thickness(0.0' 2.0' 0.0' 0.0);
Magic Number,TraceLab.UI.WPF.Controls,ConnectedBorder,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ConnectedBorder.cs,OnRender,The following statement contains a magic number: if (element != null)              {                  var mainWindow = this.GetParent<TraceLab.UI.WPF.Views.DockableGraph>(null);                    var gt = element.TransformToVisual(this);                  var other = gt.Transform(new Point(0' 0));                    var oriElementLocation = element.TranslatePoint(new Point(0' 0)' mainWindow);                  var originElementLocation = mainWindow.TranslatePoint(oriElementLocation' this);                  var targetLocation = new Point(0'0);// this.TranslatePoint(new Point(0' 0)' mainWindow);                    Rect originRect = new Rect(originElementLocation' element.RenderSize);                  Rect targetRect = new Rect(targetLocation' RenderSize);                    Pen solidPen = new Pen(ForegroundLines' LineStrokeThickness);                  Pen dashedPen = new Pen(BackgroundLines' LineStrokeThickness);                  dashedPen.DashStyle = new DashStyle(new List<double>() { 2.0' 1.0 }' 1.0);                    drawingContext.DrawLine(solidPen' targetRect.TopLeft' originRect.TopLeft);                  drawingContext.DrawLine(solidPen' targetRect.TopRight' originRect.TopRight);                  drawingContext.DrawLine(dashedPen' targetRect.BottomLeft' originRect.BottomLeft);                  drawingContext.DrawLine(dashedPen' targetRect.BottomRight' originRect.BottomRight);              }
Magic Number,TraceLab.UI.WPF.Controls,RichTextBoxWithIntellisense,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichTextBoxWithIntellisense.cs,RichTextBoxWithIntellisense_Loaded,The following statement contains a magic number: m_assistListPopup.MaxHeight = 100;
Magic Number,TraceLab.UI.WPF.Controls,RichTextBoxWithIntellisense,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\RichTextBoxWithIntellisense.cs,RichTextBoxWithIntellisense_Loaded,The following statement contains a magic number: m_assistListPopup.MinWidth = 100;
Magic Number,TraceLab.UI.WPF.Controls,ProgressControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ProgressControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ControlRoot = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 2:              this.Progress = ((System.Windows.Controls.ProgressBar)(target));              return;              case 3:              this.StatusMessage = ((System.Windows.Controls.Primitives.StatusBarItem)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Controls,ProgressControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ProgressControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ControlRoot = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 2:              this.Progress = ((System.Windows.Controls.ProgressBar)(target));              return;              case 3:              this.StatusMessage = ((System.Windows.Controls.Primitives.StatusBarItem)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Converters,AnyAllButtonVisibilityConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\AnyAllButtonVisibilityConverter.cs,Convert,The following statement contains a magic number: if (numberOfIncomingEdges >= 2)              {                  visibility = System.Windows.Visibility.Visible;              }
Magic Number,TraceLab.UI.WPF.Converters,ErrorMessageShortenerConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\ErrorMessageShortenerConverter.cs,Convert,The following statement contains a magic number: if (message != null)              {                  int numberOfCharacters = 100; //default number of characters                    if (parameter != null)                  {                      Int32.TryParse((string)parameter' out numberOfCharacters);                  }                    if (message.Length > numberOfCharacters)                  {                      return message.Substring(0' numberOfCharacters) + "...";                  }                  else                  {                      return message;                  }                }              else              {                  return null;              }
Magic Number,TraceLab.UI.WPF.Converters,ShowFilterCheckboxBoolToWidthConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\BoolToWidthConverter.cs,Convert,The following statement contains a magic number: if (visibility == true)              {                  width = 25;              }
Magic Number,TraceLab.UI.WPF.Converters,FilePathConverter,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Converters\FilePathToStringConverter.cs,Convert,The following statement contains a magic number: if (values.Length != 2)                  throw new ArgumentException("Invalid number of arguments");
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The following statement contains a magic number: Point topLeftCorner = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2 + paddingLeft' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + paddingTop + topCanvasOffset);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The following statement contains a magic number: Point topLeftCorner = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2 + paddingLeft' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + paddingTop + topCanvasOffset);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The following statement contains a magic number: Point topRightCorner = new Point(scopeCenter.X + scopeNode.DataWithSize.Width / 2 - paddingRight' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + paddingTop + topCanvasOffset);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The following statement contains a magic number: Point topRightCorner = new Point(scopeCenter.X + scopeNode.DataWithSize.Width / 2 - paddingRight' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + paddingTop + topCanvasOffset);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The following statement contains a magic number: Point bottomLeftCorner = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2 + paddingLeft' scopeCenter.Y + scopeNode.DataWithSize.Height / 2 - paddingBottom);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The following statement contains a magic number: Point bottomLeftCorner = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2 + paddingLeft' scopeCenter.Y + scopeNode.DataWithSize.Height / 2 - paddingBottom);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The following statement contains a magic number: Point bottomRightCorner = new Point(scopeCenter.X + scopeNode.DataWithSize.Width / 2 - paddingRight' scopeCenter.Y + scopeNode.DataWithSize.Height / 2 - paddingBottom);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetIntersection,The following statement contains a magic number: Point bottomRightCorner = new Point(scopeCenter.X + scopeNode.DataWithSize.Width / 2 - paddingRight' scopeCenter.Y + scopeNode.DataWithSize.Height / 2 - paddingBottom);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,TryFindIntersection,The following statement contains a magic number: if (Math.Abs(denominator) <= 0.00001f)              {                  if (Math.Abs(ua) <= 0.00001f && Math.Abs(ub) <= 0.00001f)                  {                      intersects = true;                      intersectionPoint = new Point((point1.X + point2.X) / 2' (point1.Y + point2.Y) / 2);                  }              }              else              {                  ua /= denominator;                  ub /= denominator;                    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)                  {                      intersects = true;                      double x = point1.X + ua * (point2.X - point1.X);                      double y = point1.Y + ua * (point2.Y - point1.Y);                      intersectionPoint = new Point(x' y);                  }              }
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,TryFindIntersection,The following statement contains a magic number: if (Math.Abs(denominator) <= 0.00001f)              {                  if (Math.Abs(ua) <= 0.00001f && Math.Abs(ub) <= 0.00001f)                  {                      intersects = true;                      intersectionPoint = new Point((point1.X + point2.X) / 2' (point1.Y + point2.Y) / 2);                  }              }              else              {                  ua /= denominator;                  ub /= denominator;                    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)                  {                      intersects = true;                      double x = point1.X + ua * (point2.X - point1.X);                      double y = point1.Y + ua * (point2.Y - point1.Y);                      intersectionPoint = new Point(x' y);                  }              }
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetBottomBorderCenter,The following statement contains a magic number: Point bottomBorderCenter = new Point(scopeCenter.X' scopeCenter.Y + scopeNode.DataWithSize.Height / 2 - paddingBottom);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetTopBorderCenter,The following statement contains a magic number: Point topBorderCenter = new Point(scopeCenter.X' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + paddingTop + topCanvasOffset);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetOriginCanvasPoint,The following statement contains a magic number: Point originCanvasPoint = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + topCanvasOffset);
Magic Number,TraceLab.UI.WPF.Utilities,ScopeHelper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\ScopeHelper.cs,GetOriginCanvasPoint,The following statement contains a magic number: Point originCanvasPoint = new Point(scopeCenter.X - scopeNode.DataWithSize.Width / 2' scopeCenter.Y - scopeNode.DataWithSize.Height / 2 + topCanvasOffset);
Magic Number,TraceLab.UI.WPF.Views,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 80 "..\..\..\Views\AboutExperimentDialog.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 80 "..\..\..\Views\AboutExperimentDialog.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 80 "..\..\..\Views\AboutExperimentDialog.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 80 "..\..\..\Views\AboutExperimentDialog.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 80 "..\..\..\Views\AboutExperimentDialog.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,AboutTraceLabDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutTraceLabDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 62 "..\..\..\Views\AboutTraceLabDialog.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.OpenHyperlinkRequest);                            #line default              #line hidden              return;              case 2:                            #line 65 "..\..\..\Views\AboutTraceLabDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FolderPickerDialog)(target));                            #line 33 "..\..\..\Views\FolderPickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FolderPickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\FolderPickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 94 "..\..\..\Views\FolderPickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 100 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 101 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 116 "..\..\..\Views\FolderPickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FolderPickerDialog)(target));                            #line 33 "..\..\..\Views\FolderPickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FolderPickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\FolderPickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 94 "..\..\..\Views\FolderPickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 100 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 101 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 116 "..\..\..\Views\FolderPickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FolderPickerDialog)(target));                            #line 33 "..\..\..\Views\FolderPickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FolderPickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\FolderPickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 94 "..\..\..\Views\FolderPickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 100 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 101 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 116 "..\..\..\Views\FolderPickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FolderPickerDialog)(target));                            #line 33 "..\..\..\Views\FolderPickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FolderPickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\FolderPickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 94 "..\..\..\Views\FolderPickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 100 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 101 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 116 "..\..\..\Views\FolderPickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FolderPickerDialog)(target));                            #line 33 "..\..\..\Views\FolderPickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FolderPickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\FolderPickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 94 "..\..\..\Views\FolderPickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 100 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 101 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 116 "..\..\..\Views\FolderPickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FolderPickerDialog)(target));                            #line 33 "..\..\..\Views\FolderPickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FolderPickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\FolderPickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 94 "..\..\..\Views\FolderPickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 100 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 101 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 116 "..\..\..\Views\FolderPickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FolderPickerDialog)(target));                            #line 33 "..\..\..\Views\FolderPickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FolderPickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\FolderPickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 94 "..\..\..\Views\FolderPickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 100 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 101 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 116 "..\..\..\Views\FolderPickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,ExecuteAddScopeToDecision,The following statement contains a magic number: if (vertexControl != null)              {                  ExperimentDecisionNode decisionNode = vertexControl.Vertex as ExperimentDecisionNode;                                    if (decisionNode != null)                   {                      ExitDecisionNode exitDecisionNode = null;                      IEditableExperiment experiment = decisionNode.Owner as IEditableExperiment;                      double rightmostX = decisionNode.Data.X;                      HashSet<string> currentLabels = new HashSet<string>();                        //iterate through outgoing scopes and find the scope with right border located most to the right among all scopes                      //also locate among outgoing edges reference to exit                       IEnumerable<ExperimentNodeConnection> outEdges;                      if(experiment.TryGetOutEdges(decisionNode' out outEdges))                       {                          foreach (ExperimentNodeConnection connection in outEdges)                          {                              ScopeNode scope = connection.Target as ScopeNode;                                                            if (scope != null)                              {                                  double candidateRightMostX = scope.DataWithSize.X + scope.DataWithSize.Width / 2;                                  if (candidateRightMostX > rightmostX)                                  {                                      rightmostX = candidateRightMostX;                                  }                                    //also collect labels                                  currentLabels.Add(scope.Data.Metadata.Label);                              }                              else if (exitDecisionNode == null)                              {                                  //try find exit decision node                                  exitDecisionNode = connection.Target as ExitDecisionNode;                              }                          }                      }                        double xPosition = rightmostX + 100;                      double yPosition = decisionNode.Data.Y + 120;                        string finalLabel = DetermineNewScopeLabel(currentLabels);                        //check if deicion node is not null. In old decision nodes without scopes' there were no associated exit node'                       //thus the scope cannot be added for these decisions.                      if (exitDecisionNode != null)                      {                          ComponentFactory.AddScopeToDecision(finalLabel' xPosition' yPosition' decisionNode' exitDecisionNode' experiment);                      }                  }              }
Magic Number,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,ExecuteAddScopeToDecision,The following statement contains a magic number: if (vertexControl != null)              {                  ExperimentDecisionNode decisionNode = vertexControl.Vertex as ExperimentDecisionNode;                                    if (decisionNode != null)                   {                      ExitDecisionNode exitDecisionNode = null;                      IEditableExperiment experiment = decisionNode.Owner as IEditableExperiment;                      double rightmostX = decisionNode.Data.X;                      HashSet<string> currentLabels = new HashSet<string>();                        //iterate through outgoing scopes and find the scope with right border located most to the right among all scopes                      //also locate among outgoing edges reference to exit                       IEnumerable<ExperimentNodeConnection> outEdges;                      if(experiment.TryGetOutEdges(decisionNode' out outEdges))                       {                          foreach (ExperimentNodeConnection connection in outEdges)                          {                              ScopeNode scope = connection.Target as ScopeNode;                                                            if (scope != null)                              {                                  double candidateRightMostX = scope.DataWithSize.X + scope.DataWithSize.Width / 2;                                  if (candidateRightMostX > rightmostX)                                  {                                      rightmostX = candidateRightMostX;                                  }                                    //also collect labels                                  currentLabels.Add(scope.Data.Metadata.Label);                              }                              else if (exitDecisionNode == null)                              {                                  //try find exit decision node                                  exitDecisionNode = connection.Target as ExitDecisionNode;                              }                          }                      }                        double xPosition = rightmostX + 100;                      double yPosition = decisionNode.Data.Y + 120;                        string finalLabel = DetermineNewScopeLabel(currentLabels);                        //check if deicion node is not null. In old decision nodes without scopes' there were no associated exit node'                       //thus the scope cannot be added for these decisions.                      if (exitDecisionNode != null)                      {                          ComponentFactory.AddScopeToDecision(finalLabel' xPosition' yPosition' decisionNode' exitDecisionNode' experiment);                      }                  }              }
Magic Number,TraceLab.UI.WPF.Views,GraphView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\GraphView.cs,ExecuteAddScopeToDecision,The following statement contains a magic number: if (vertexControl != null)              {                  ExperimentDecisionNode decisionNode = vertexControl.Vertex as ExperimentDecisionNode;                                    if (decisionNode != null)                   {                      ExitDecisionNode exitDecisionNode = null;                      IEditableExperiment experiment = decisionNode.Owner as IEditableExperiment;                      double rightmostX = decisionNode.Data.X;                      HashSet<string> currentLabels = new HashSet<string>();                        //iterate through outgoing scopes and find the scope with right border located most to the right among all scopes                      //also locate among outgoing edges reference to exit                       IEnumerable<ExperimentNodeConnection> outEdges;                      if(experiment.TryGetOutEdges(decisionNode' out outEdges))                       {                          foreach (ExperimentNodeConnection connection in outEdges)                          {                              ScopeNode scope = connection.Target as ScopeNode;                                                            if (scope != null)                              {                                  double candidateRightMostX = scope.DataWithSize.X + scope.DataWithSize.Width / 2;                                  if (candidateRightMostX > rightmostX)                                  {                                      rightmostX = candidateRightMostX;                                  }                                    //also collect labels                                  currentLabels.Add(scope.Data.Metadata.Label);                              }                              else if (exitDecisionNode == null)                              {                                  //try find exit decision node                                  exitDecisionNode = connection.Target as ExitDecisionNode;                              }                          }                      }                        double xPosition = rightmostX + 100;                      double yPosition = decisionNode.Data.Y + 120;                        string finalLabel = DetermineNewScopeLabel(currentLabels);                        //check if deicion node is not null. In old decision nodes without scopes' there were no associated exit node'                       //thus the scope cannot be added for these decisions.                      if (exitDecisionNode != null)                      {                          ComponentFactory.AddScopeToDecision(finalLabel' xPosition' yPosition' decisionNode' exitDecisionNode' experiment);                      }                  }              }
Magic Number,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,OnShowProcessAreaChanged,The following statement contains a magic number: if (value.HasValue && wizard.m_isShowingProcessArea != value.Value)              {                  wizard.m_isShowingProcessArea = value.Value;                  if (value.Value)                  {                      wizard.m_oldLeft = wizard.Left;                      wizard.m_oldTop = wizard.Top;                      wizard.m_oldHeight = 75;                      wizard.m_oldWidth = 195;                        wizard.AnimateToSize(wizard.Owner.Left' wizard.Owner.Top' 0' 0);                  }                  else                  {                      wizard.AnimateToSize(wizard.m_oldLeft' wizard.m_oldTop' wizard.m_oldHeight' wizard.m_oldWidth);                  }              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,OnShowProcessAreaChanged,The following statement contains a magic number: if (value.HasValue && wizard.m_isShowingProcessArea != value.Value)              {                  wizard.m_isShowingProcessArea = value.Value;                  if (value.Value)                  {                      wizard.m_oldLeft = wizard.Left;                      wizard.m_oldTop = wizard.Top;                      wizard.m_oldHeight = 75;                      wizard.m_oldWidth = 195;                        wizard.AnimateToSize(wizard.Owner.Left' wizard.Owner.Top' 0' 0);                  }                  else                  {                      wizard.AnimateToSize(wizard.m_oldLeft' wizard.m_oldTop' wizard.m_oldHeight' wizard.m_oldWidth);                  }              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,AnimateToSize,The following statement contains a magic number: var heightAnim = new GridLengthAnimation(headerRowDefinition.Height' new GridLength(height)' new Duration(TimeSpan.FromMilliseconds(500)));
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,AnimateToSize,The following statement contains a magic number: var widthAnim = new GridLengthAnimation(keyBorderColumnDefinition.Width' new GridLength(width)' new Duration(TimeSpan.FromMilliseconds(500)));
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 115 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentLibraryErrorDisplay,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ErrorDisplay.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ErrorDisplayRoot = ((TraceLab.UI.WPF.Views.ComponentLibraryErrorDisplay)(target));              return;              case 2:                            #line 53 "..\..\..\Views\ErrorDisplay.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentLibraryOrganizer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentLibraryOrganizer.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 2:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 3:              this.TagView = ((System.Windows.Controls.TreeView)(target));                            #line 43 "..\..\..\Views\ComponentLibraryOrganizer.xaml"              this.TagView.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.TreeView_SelectedItemChanged);                            #line default              #line hidden              return;              case 4:              this.ComponentList = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentLibraryOrganizer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentLibraryOrganizer.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 2:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 3:              this.TagView = ((System.Windows.Controls.TreeView)(target));                            #line 43 "..\..\..\Views\ComponentLibraryOrganizer.xaml"              this.TagView.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.TreeView_SelectedItemChanged);                            #line default              #line hidden              return;              case 4:              this.ComponentList = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentLibraryOrganizer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentLibraryOrganizer.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 2:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 3:              this.TagView = ((System.Windows.Controls.TreeView)(target));                            #line 43 "..\..\..\Views\ComponentLibraryOrganizer.xaml"              this.TagView.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.TreeView_SelectedItemChanged);                            #line default              #line hidden              return;              case 4:              this.ComponentList = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 93 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 3:                            #line 188 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PART_RemoveImportButton_Click);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 93 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 3:                            #line 188 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PART_RemoveImportButton_Click);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views,DefineBenchmarkDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineBenchmarkDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.DefiningBenchmarkDialog = ((TraceLab.UI.WPF.Views.DefineBenchmarkDialog)(target));              return;              case 3:              this.headingLabel = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineBenchmarkDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineBenchmarkDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 311 "..\..\..\Views\DefineBenchmarkDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views,ExperimentImportManagerView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ExperimentImportManagerView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.ImportLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 3:                            #line 133 "..\..\..\Views\ExperimentImportManagerView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,ExperimentImportManagerView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ExperimentImportManagerView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.ImportLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 3:                            #line 133 "..\..\..\Views\ExperimentImportManagerView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 185 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 186 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 2:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 249 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 250 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FilePickerDialog)(target));                            #line 33 "..\..\..\Views\FilePickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FilePickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 90 "..\..\..\Views\FilePickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 93 "..\..\..\Views\FilePickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 99 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 100 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 115 "..\..\..\Views\FilePickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FilePickerDialog)(target));                            #line 33 "..\..\..\Views\FilePickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FilePickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 90 "..\..\..\Views\FilePickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 93 "..\..\..\Views\FilePickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 99 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 100 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 115 "..\..\..\Views\FilePickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FilePickerDialog)(target));                            #line 33 "..\..\..\Views\FilePickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FilePickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 90 "..\..\..\Views\FilePickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 93 "..\..\..\Views\FilePickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 99 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 100 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 115 "..\..\..\Views\FilePickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FilePickerDialog)(target));                            #line 33 "..\..\..\Views\FilePickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FilePickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 90 "..\..\..\Views\FilePickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 93 "..\..\..\Views\FilePickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 99 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 100 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 115 "..\..\..\Views\FilePickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FilePickerDialog)(target));                            #line 33 "..\..\..\Views\FilePickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FilePickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 90 "..\..\..\Views\FilePickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 93 "..\..\..\Views\FilePickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 99 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 100 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 115 "..\..\..\Views\FilePickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FilePickerDialog)(target));                            #line 33 "..\..\..\Views\FilePickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FilePickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 90 "..\..\..\Views\FilePickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 93 "..\..\..\Views\FilePickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 99 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 100 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 115 "..\..\..\Views\FilePickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FilePickerDialog)(target));                            #line 33 "..\..\..\Views\FilePickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FilePickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 90 "..\..\..\Views\FilePickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 93 "..\..\..\Views\FilePickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 99 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 100 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 115 "..\..\..\Views\FilePickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ReadOnlyGraphRoot = ((TraceLab.UI.WPF.Views.ReadonlyDockableGraph)(target));              return;              case 2:                            #line 42 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 43 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 3:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 4:              this.MarqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ReadOnlyGraphRoot = ((TraceLab.UI.WPF.Views.ReadonlyDockableGraph)(target));              return;              case 2:                            #line 42 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 43 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 3:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 4:              this.MarqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ReadOnlyGraphRoot = ((TraceLab.UI.WPF.Views.ReadonlyDockableGraph)(target));              return;              case 2:                            #line 42 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 43 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 3:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 4:              this.MarqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.ReadOnlyGraphRoot = ((TraceLab.UI.WPF.Views.ReadonlyDockableGraph)(target));              return;              case 2:                            #line 42 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 43 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 3:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 4:              this.MarqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:                            #line 94 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperiment_Click);                            #line default              #line hidden              return;              case 6:              this.ComponentList = ((System.Windows.Controls.ListBox)(target));                            #line 114 "..\..\..\Views\SettingsPage.xaml"              this.ComponentList.KeyDown += new System.Windows.Input.KeyEventHandler(this.ComponentList_KeyDown);                            #line default              #line hidden              return;              case 7:              this.TypeList = ((System.Windows.Controls.ListBox)(target));              return;              case 8:                            #line 143 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperimentsDirectory_Click);                            #line default              #line hidden              return;              case 9:                            #line 166 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:                            #line 94 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperiment_Click);                            #line default              #line hidden              return;              case 6:              this.ComponentList = ((System.Windows.Controls.ListBox)(target));                            #line 114 "..\..\..\Views\SettingsPage.xaml"              this.ComponentList.KeyDown += new System.Windows.Input.KeyEventHandler(this.ComponentList_KeyDown);                            #line default              #line hidden              return;              case 7:              this.TypeList = ((System.Windows.Controls.ListBox)(target));              return;              case 8:                            #line 143 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperimentsDirectory_Click);                            #line default              #line hidden              return;              case 9:                            #line 166 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:                            #line 94 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperiment_Click);                            #line default              #line hidden              return;              case 6:              this.ComponentList = ((System.Windows.Controls.ListBox)(target));                            #line 114 "..\..\..\Views\SettingsPage.xaml"              this.ComponentList.KeyDown += new System.Windows.Input.KeyEventHandler(this.ComponentList_KeyDown);                            #line default              #line hidden              return;              case 7:              this.TypeList = ((System.Windows.Controls.ListBox)(target));              return;              case 8:                            #line 143 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperimentsDirectory_Click);                            #line default              #line hidden              return;              case 9:                            #line 166 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:                            #line 94 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperiment_Click);                            #line default              #line hidden              return;              case 6:              this.ComponentList = ((System.Windows.Controls.ListBox)(target));                            #line 114 "..\..\..\Views\SettingsPage.xaml"              this.ComponentList.KeyDown += new System.Windows.Input.KeyEventHandler(this.ComponentList_KeyDown);                            #line default              #line hidden              return;              case 7:              this.TypeList = ((System.Windows.Controls.ListBox)(target));              return;              case 8:                            #line 143 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperimentsDirectory_Click);                            #line default              #line hidden              return;              case 9:                            #line 166 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:                            #line 94 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperiment_Click);                            #line default              #line hidden              return;              case 6:              this.ComponentList = ((System.Windows.Controls.ListBox)(target));                            #line 114 "..\..\..\Views\SettingsPage.xaml"              this.ComponentList.KeyDown += new System.Windows.Input.KeyEventHandler(this.ComponentList_KeyDown);                            #line default              #line hidden              return;              case 7:              this.TypeList = ((System.Windows.Controls.ListBox)(target));              return;              case 8:                            #line 143 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperimentsDirectory_Click);                            #line default              #line hidden              return;              case 9:                            #line 166 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 33 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.DockPanel)(target)).LostFocus += new System.Windows.RoutedEventHandler(this.TextBox_LostFocus);                            #line default              #line hidden              break;              case 2:                            #line 34 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Button_Click);                            #line default              #line hidden              break;              case 3:                            #line 35 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).Loaded += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Text_Loaded);                            #line default              #line hidden                            #line 36 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.TEMPLATE_PART_Text_KeyDown);                            #line default              #line hidden              break;              case 4:                            #line 46 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.ContentControl)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.PART_Content_MouseDoubleClick);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 33 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.DockPanel)(target)).LostFocus += new System.Windows.RoutedEventHandler(this.TextBox_LostFocus);                            #line default              #line hidden              break;              case 2:                            #line 34 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Button_Click);                            #line default              #line hidden              break;              case 3:                            #line 35 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).Loaded += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Text_Loaded);                            #line default              #line hidden                            #line 36 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.TEMPLATE_PART_Text_KeyDown);                            #line default              #line hidden              break;              case 4:                            #line 46 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.ContentControl)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.PART_Content_MouseDoubleClick);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 33 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.DockPanel)(target)).LostFocus += new System.Windows.RoutedEventHandler(this.TextBox_LostFocus);                            #line default              #line hidden              break;              case 2:                            #line 34 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Button_Click);                            #line default              #line hidden              break;              case 3:                            #line 35 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).Loaded += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Text_Loaded);                            #line default              #line hidden                            #line 36 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.TEMPLATE_PART_Text_KeyDown);                            #line default              #line hidden              break;              case 4:                            #line 46 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.ContentControl)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.PART_Content_MouseDoubleClick);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views,StartPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\StartPage.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 124 "..\..\..\Views\StartPage.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.ListBox_MouseLeftButtonDown_OpenLinkURL);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views,WorkspaceWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\WorkspaceWindow.xaml.cs,DisplayErrors,The following statement contains a magic number: if (viewModel != null && viewModel.TypeDefinitionErrors != null && viewModel.TypeDefinitionErrors.FirstOrDefault() != null)              {                  var errors = new List<string>(viewModel.TypeDefinitionErrors);                  viewModel.ClearLoadErrors();                  Window errorWindow = new Window();                  var errorControl = new ComponentLibraryErrorDisplay();                  errorWindow.Content = errorControl;                  errorControl.HeaderText = "Errors encountered while loading component definitions: ";                  errorControl.Errors = errors;                  errorWindow.Height = 500;                  errorWindow.Width = 800;                  errorWindow.Owner = this.GetParent<MainWindow>(null);                  errorWindow.WindowStartupLocation = WindowStartupLocation.CenterOwner;                  errorWindow.Title = "Definition Load Errors";                  errorWindow.ShowDialog();              }
Magic Number,TraceLab.UI.WPF.Views,WorkspaceWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\WorkspaceWindow.xaml.cs,DisplayErrors,The following statement contains a magic number: if (viewModel != null && viewModel.TypeDefinitionErrors != null && viewModel.TypeDefinitionErrors.FirstOrDefault() != null)              {                  var errors = new List<string>(viewModel.TypeDefinitionErrors);                  viewModel.ClearLoadErrors();                  Window errorWindow = new Window();                  var errorControl = new ComponentLibraryErrorDisplay();                  errorWindow.Content = errorControl;                  errorControl.HeaderText = "Errors encountered while loading component definitions: ";                  errorControl.Errors = errors;                  errorWindow.Height = 500;                  errorWindow.Width = 800;                  errorWindow.Owner = this.GetParent<MainWindow>(null);                  errorWindow.WindowStartupLocation = WindowStartupLocation.CenterOwner;                  errorWindow.Title = "Definition Load Errors";                  errorWindow.ShowDialog();              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,OutputWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\OutputWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.OutputLog = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              case 3:                            #line 88 "..\..\..\Views\OutputWindow.xaml"              ((System.Windows.Controls.ToolBar)(target)).Loaded += new System.Windows.RoutedEventHandler(this.ToolBar_Loaded);                            #line default              #line hidden              return;              case 4:              this.GlobalLogLevelsSettingsMenu = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:              this.OutputLogView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,OutputWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\OutputWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.OutputLog = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              case 3:                            #line 88 "..\..\..\Views\OutputWindow.xaml"              ((System.Windows.Controls.ToolBar)(target)).Loaded += new System.Windows.RoutedEventHandler(this.ToolBar_Loaded);                            #line default              #line hidden              return;              case 4:              this.GlobalLogLevelsSettingsMenu = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:              this.OutputLogView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,OutputWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\OutputWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.OutputLog = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              case 3:                            #line 88 "..\..\..\Views\OutputWindow.xaml"              ((System.Windows.Controls.ToolBar)(target)).Loaded += new System.Windows.RoutedEventHandler(this.ToolBar_Loaded);                            #line default              #line hidden              return;              case 4:              this.GlobalLogLevelsSettingsMenu = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:              this.OutputLogView = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,OutputWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\OutputWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 77 "..\..\..\Views\OutputWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ViewExceptionButton_Click);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,vm_ExperimentCompleted,The following statement contains a magic number: Action method = () =>              {                  System.Windows.Threading.DispatcherTimer timer = new System.Windows.Threading.DispatcherTimer(System.Windows.Threading.DispatcherPriority.ApplicationIdle);                  timer.Interval = TimeSpan.FromMilliseconds(1000);                  timer.Tick += (o' s) =>                  {                      e.Dispatcher.Dispose();                  };                    timer.Start();              };
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 10:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonUpEvent;                            #line 206 "..\..\..\Views\MainWindow.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.HelpMenuItem_MouseLeftButtonUp);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 11:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonUpEvent;                            #line 216 "..\..\..\Views\MainWindow.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.HelpMenuItem_MouseLeftButtonUp);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 10:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonUpEvent;                            #line 206 "..\..\..\Views\MainWindow.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.HelpMenuItem_MouseLeftButtonUp);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 11:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonUpEvent;                            #line 216 "..\..\..\Views\MainWindow.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.HelpMenuItem_MouseLeftButtonUp);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,ZoomTo,The following statement contains a magic number: var startHandlePosition = new Point(rect.X + rect.Width / 2' rect.Y + rect.Height / 2);
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,ZoomTo,The following statement contains a magic number: var startHandlePosition = new Point(rect.X + rect.Width / 2' rect.Y + rect.Height / 2);
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,ZoomControl_MouseWheel,The following statement contains a magic number: Point origoPosition = new Point(ActualWidth / 2' ActualHeight / 2);
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,ZoomControl_MouseWheel,The following statement contains a magic number: Point origoPosition = new Point(ActualWidth / 2' ActualHeight / 2);
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,ZoomControl_MouseWheel,The following statement contains a magic number: DoZoom(                  Math.Max(1 / MaxZoomDelta' Math.Min(MaxZoomDelta' e.Delta / 10000.0 * ZoomDeltaMultiplier + 1))'                  origoPosition'                  mousePosition'                  mousePosition);
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,GetInitialTranslate,The following statement contains a magic number: var tX = -w / 2.0;
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,GetInitialTranslate,The following statement contains a magic number: var tY = -h / 2.0;
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,DoZoomToFill,The following statement contains a magic number: if (FillRectangle.IsEmpty)              {                  var deltaZoom = Math.Min(                      ActualWidth / _presenter.ContentSize.Width'                      ActualHeight / _presenter.ContentSize.Height);                    var initialTranslate = GetInitialTranslate();                  DoZoomAnimation(deltaZoom' initialTranslate.X * deltaZoom' initialTranslate.Y * deltaZoom);              }              else              {                  var deltaZoom = Math.Min(                      ActualWidth / (FillRectangle.Width)'                      ActualHeight / (FillRectangle.Height));                    var w = FillRectangle.Width - _presenter.DesiredSize.Width;                  var h = FillRectangle.Height - _presenter.DesiredSize.Height;                  var tX = -w / 2.0;                  var tY = -h / 2.0;                    var initialTranslate = new Vector(tX - FillRectangle.Left' tY - FillRectangle.Top);                  initialTranslate *= deltaZoom;                  DoZoomAnimation(deltaZoom' initialTranslate.X' initialTranslate.Y);              }
Magic Number,TraceLab.UI.WPF.Controls.ZoomControl,ZoomControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ZoomControl\ZoomControl.cs,DoZoomToFill,The following statement contains a magic number: if (FillRectangle.IsEmpty)              {                  var deltaZoom = Math.Min(                      ActualWidth / _presenter.ContentSize.Width'                      ActualHeight / _presenter.ContentSize.Height);                    var initialTranslate = GetInitialTranslate();                  DoZoomAnimation(deltaZoom' initialTranslate.X * deltaZoom' initialTranslate.Y * deltaZoom);              }              else              {                  var deltaZoom = Math.Min(                      ActualWidth / (FillRectangle.Width)'                      ActualHeight / (FillRectangle.Height));                    var w = FillRectangle.Width - _presenter.DesiredSize.Width;                  var h = FillRectangle.Height - _presenter.DesiredSize.Height;                  var tX = -w / 2.0;                  var tY = -h / 2.0;                    var initialTranslate = new Vector(tX - FillRectangle.Left' tY - FillRectangle.Top);                  initialTranslate *= deltaZoom;                  DoZoomAnimation(deltaZoom' initialTranslate.X' initialTranslate.Y);              }
Magic Number,TraceLab.UI.WPF.ViewModels,BaseLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BaseLevelExperimentViewModel.cs,FindOptimalLocation,The following statement contains a magic number: if (node != null)              {                  if (vertexControl != null)                  {                      const int padding = 5;                      suggestedLocation = new Point(vertexControl.TopLeftX + vertexControl.ActualWidth' vertexControl.TopLeftY + vertexControl.ActualHeight + padding);                        //special case' if node belongs to the graph in the scope                      var ownerGraph = node.Owner as CompositeComponentEditableGraph;                      if (ownerGraph != null)                      {                          var scopeNode = ownerGraph.OwnerNode as ScopeNodeBase;                          if (scopeNode != null)                          {                              var data = scopeNode.DataWithSize;                              double labelBorderHeight = 23; // check scope node control                              suggestedLocation = new Point(suggestedLocation.X + data.X - (data.Width / 2)' suggestedLocation.Y + data.Y - (data.Height / 2) + labelBorderHeight);                          }                      }                  }              }
Magic Number,TraceLab.UI.WPF.ViewModels,BaseLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BaseLevelExperimentViewModel.cs,FindOptimalLocation,The following statement contains a magic number: if (node != null)              {                  if (vertexControl != null)                  {                      const int padding = 5;                      suggestedLocation = new Point(vertexControl.TopLeftX + vertexControl.ActualWidth' vertexControl.TopLeftY + vertexControl.ActualHeight + padding);                        //special case' if node belongs to the graph in the scope                      var ownerGraph = node.Owner as CompositeComponentEditableGraph;                      if (ownerGraph != null)                      {                          var scopeNode = ownerGraph.OwnerNode as ScopeNodeBase;                          if (scopeNode != null)                          {                              var data = scopeNode.DataWithSize;                              double labelBorderHeight = 23; // check scope node control                              suggestedLocation = new Point(suggestedLocation.X + data.X - (data.Width / 2)' suggestedLocation.Y + data.Y - (data.Height / 2) + labelBorderHeight);                          }                      }                  }              }
Magic Number,TraceLab.UI.WPF.ViewModels,BaseLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BaseLevelExperimentViewModel.cs,FindOptimalLocation,The following statement contains a magic number: if (node != null)              {                  if (vertexControl != null)                  {                      const int padding = 5;                      suggestedLocation = new Point(vertexControl.TopLeftX + vertexControl.ActualWidth' vertexControl.TopLeftY + vertexControl.ActualHeight + padding);                        //special case' if node belongs to the graph in the scope                      var ownerGraph = node.Owner as CompositeComponentEditableGraph;                      if (ownerGraph != null)                      {                          var scopeNode = ownerGraph.OwnerNode as ScopeNodeBase;                          if (scopeNode != null)                          {                              var data = scopeNode.DataWithSize;                              double labelBorderHeight = 23; // check scope node control                              suggestedLocation = new Point(suggestedLocation.X + data.X - (data.Width / 2)' suggestedLocation.Y + data.Y - (data.Height / 2) + labelBorderHeight);                          }                      }                  }              }
Magic Number,TraceLab.UI.WPF.ViewModels,BaseLevelExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BaseLevelExperimentViewModel.cs,FindOptimalLocation,The following statement contains a magic number: if (node != null)              {                  if (vertexControl != null)                  {                      const int padding = 5;                      suggestedLocation = new Point(vertexControl.TopLeftX + vertexControl.ActualWidth' vertexControl.TopLeftY + vertexControl.ActualHeight + padding);                        //special case' if node belongs to the graph in the scope                      var ownerGraph = node.Owner as CompositeComponentEditableGraph;                      if (ownerGraph != null)                      {                          var scopeNode = ownerGraph.OwnerNode as ScopeNodeBase;                          if (scopeNode != null)                          {                              var data = scopeNode.DataWithSize;                              double labelBorderHeight = 23; // check scope node control                              suggestedLocation = new Point(suggestedLocation.X + data.X - (data.Width / 2)' suggestedLocation.Y + data.Y - (data.Height / 2) + labelBorderHeight);                          }                      }                  }              }
Magic Number,TraceLab.UI.WPF.ViewModels,CLVComponentNode,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentLibraryNodes\CLVComponentNode.cs,CLVComponentNode,The following statement contains a magic number: PartialId = m_definition.ID.Substring(m_definition.ID.Length - 5);
Magic Number,TraceLab.UI.WPF.ViewModels,TopLevelEditableExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\TopLevelEditableExperimentViewModel.cs,IsNotLastRemainingDecisionScope,The following statement contains a magic number: if (scopeNode != null && TryGetOutEdges(scopeNode.DecisionNode' out edges))              {                  //there is one invisible connection from decision to exit node                  //thus the last remaining scope will be the second connection' so we compare count of edges with 2                  canRemove = (edges.Count() > 2);              }
Magic Number,TraceLab.UI.WPF.ViewModels,BenchmarkWizardViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\BenchmarkWizardViewModel.cs,ExecuteDownloadContestPackage,The following statement contains a magic number: var downloadButton = parameters[2] as System.Windows.Controls.Button;
Magic Number,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,DisplayCopyErrorsWindow,The following statement contains a magic number: errorWindow.Height = 500;
Magic Number,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,DisplayCopyErrorsWindow,The following statement contains a magic number: errorWindow.Width = 800;
Magic Number,TraceLab.UI.WPF.ViewModels,ApplicationViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ApplicationViewModelWrapper.cs,OpenInWindow,The following statement contains a magic number: if (m_viewModel.Experiment == null || (m_viewModel.Experiment != null && m_viewModel.Experiment.IsModified == false && m_viewModel.Experiment.VertexCount == 2))              {                  OpenInCurrentWindow(newApplicationViewModel);              }              else              {                  OpenNewExperimentWindow(newApplicationViewModel);              }
Magic Number,TraceLab.UI.WPF.ViewModels,ComponentsLibraryViewModelWrapper,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ComponentsLibraryViewModelWrapper.cs,ComponentsLibraryViewModelWrapper,The following statement contains a magic number: m_searchTimer.Interval = new TimeSpan(0' 0' 0' 0' 200);
Magic Number,TraceLab.UI.WPF.ViewModels,EnabledFlowDocument,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\EnabledFlowDocument.cs,EnabledFlowDocument,The following statement contains a magic number: FontSize = 12.0;
Magic Number,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,CanRunExperimentFunc,The following statement contains a magic number: if (args != null && args.Count == 3)              {                  //validate args                  var progress = args[0] as IProgress;                  var workspace = args[1] as WorkspaceViewModelWrapper;                  var componentsLibrary = args[2] as ComponentsLibraryViewModelWrapper;                    if (progress != null && workspace != null && componentsLibrary != null)                  {                      canRun = TopLevel.IsExperimentRunning == false && TopLevel.Vertices.Count() >= 2;                  }              }
Magic Number,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,CanRunExperimentFunc,The following statement contains a magic number: if (args != null && args.Count == 3)              {                  //validate args                  var progress = args[0] as IProgress;                  var workspace = args[1] as WorkspaceViewModelWrapper;                  var componentsLibrary = args[2] as ComponentsLibraryViewModelWrapper;                    if (progress != null && workspace != null && componentsLibrary != null)                  {                      canRun = TopLevel.IsExperimentRunning == false && TopLevel.Vertices.Count() >= 2;                  }              }
Magic Number,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,CanRunExperimentFunc,The following statement contains a magic number: if (args != null && args.Count == 3)              {                  //validate args                  var progress = args[0] as IProgress;                  var workspace = args[1] as WorkspaceViewModelWrapper;                  var componentsLibrary = args[2] as ComponentsLibraryViewModelWrapper;                    if (progress != null && workspace != null && componentsLibrary != null)                  {                      canRun = TopLevel.IsExperimentRunning == false && TopLevel.Vertices.Count() >= 2;                  }              }
Magic Number,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,RunExperimentFunc,The following statement contains a magic number: if (args != null && args.Count == 3)              {                  //validate args                  var progress = args[0] as IProgress;                  var workspaceVM = args[1] as WorkspaceViewModelWrapper;                  var componentsLibrary = args[2] as ComponentsLibraryViewModelWrapper;                    if (progress != null && workspaceVM != null && componentsLibrary != null)                  {                      var workspace = (TraceLab.Core.Workspaces.Workspace)workspaceVM;                        //var typeDirectories = new HashSet<string>();                      //var packageManager = TraceLab.Core.PackageSystem.PackageManager.Instance;                      //foreach (TraceLabSDK.PackageSystem.IPackageReference packageReference in TopLevel.References)                      //{                      //    var package = packageManager.GetPackage(packageReference);                      //    foreach (string typesLocation in packageManager.GetDependantTypeLocations(package))                      //    {                      //        typeDirectories.Add(typesLocation);                      //    }                      //}                        //workspace.TypeDirectories.AddRange(typeDirectories);                      try                      {                          TopLevel.RunExperiment(progress' workspace' (ComponentsLibrary)componentsLibrary);                      }                      catch (System.IO.FileNotFoundException ex)                      {                          progress.SetError(true);                          progress.CurrentStatus = "Experiment failed to run";                          NLog.LogManager.GetCurrentClassLogger().Error(String.Format("Experiment failed to run. Some component dependencies could not be resolved. Please re-scan the components library to determine which components are failing.\n{0}"' ex.Message));                      }                  }              }
Magic Number,TraceLab.UI.WPF.ViewModels,ExperimentViewModel,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\ViewModels\ExperimentViewModel.cs,RunExperimentFunc,The following statement contains a magic number: if (args != null && args.Count == 3)              {                  //validate args                  var progress = args[0] as IProgress;                  var workspaceVM = args[1] as WorkspaceViewModelWrapper;                  var componentsLibrary = args[2] as ComponentsLibraryViewModelWrapper;                    if (progress != null && workspaceVM != null && componentsLibrary != null)                  {                      var workspace = (TraceLab.Core.Workspaces.Workspace)workspaceVM;                        //var typeDirectories = new HashSet<string>();                      //var packageManager = TraceLab.Core.PackageSystem.PackageManager.Instance;                      //foreach (TraceLabSDK.PackageSystem.IPackageReference packageReference in TopLevel.References)                      //{                      //    var package = packageManager.GetPackage(packageReference);                      //    foreach (string typesLocation in packageManager.GetDependantTypeLocations(package))                      //    {                      //        typeDirectories.Add(typesLocation);                      //    }                      //}                        //workspace.TypeDirectories.AddRange(typeDirectories);                      try                      {                          TopLevel.RunExperiment(progress' workspace' (ComponentsLibrary)componentsLibrary);                      }                      catch (System.IO.FileNotFoundException ex)                      {                          progress.SetError(true);                          progress.CurrentStatus = "Experiment failed to run";                          NLog.LogManager.GetCurrentClassLogger().Error(String.Format("Experiment failed to run. Some component dependencies could not be resolved. Please re-scan the components library to determine which components are failing.\n{0}"' ex.Message));                      }                  }              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,CompileDecisionModuleFunc,The following statement contains a magic number: if (args != null && args.Count == 2)              {                  //validate args                  var node = args[0] as ExperimentNode;                  var appVM = args[1] as ApplicationViewModelWrapper;                    if (node != null && appVM != null)                  {                      List<string> workspaceTypeDirectories = appVM.WorkspaceViewModel.WorkspaceTypeDirectories;                      string topExperimentId = appVM.ExperimentViewModel.TopLevel.ExperimentInfo.Id;                      LoggerNameRoot loggerNameRoot = new LoggerNameRoot(topExperimentId);                        TraceLab.Core.Decisions.DecisionCompilationRunner.CompileDecision(node' m_experiment' workspaceTypeDirectories' loggerNameRoot);                  }              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,CanCompileDecisionModuleFunc,The following statement contains a magic number: if (args != null && args.Count == 2)              {                  //validate args                  bool isDecision = args[0] is ExperimentDecisionNode || args[0] is LoopScopeNode;                  bool isApplicationViewModelWrapper = args[1] is ApplicationViewModelWrapper;                    if (isDecision && isApplicationViewModelWrapper)                  {                      canCompile = true;                  }              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 42 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken);                            #line default              #line hidden                            #line 43 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken);                            #line default              #line hidden              return;              case 2:                            #line 45 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule);                            #line default              #line hidden                            #line 46 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule);                            #line default              #line hidden              return;              case 3:              this.decisionCodeRichTextBox = ((TraceLab.UI.WPF.Controls.RichTextBoxWithIntellisense)(target));              return;              case 4:              this.CompileButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 42 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken);                            #line default              #line hidden                            #line 43 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken);                            #line default              #line hidden              return;              case 2:                            #line 45 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule);                            #line default              #line hidden                            #line 46 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule);                            #line default              #line hidden              return;              case 3:              this.decisionCodeRichTextBox = ((TraceLab.UI.WPF.Controls.RichTextBoxWithIntellisense)(target));              return;              case 4:              this.CompileButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 42 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken);                            #line default              #line hidden                            #line 43 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken);                            #line default              #line hidden              return;              case 2:                            #line 45 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule);                            #line default              #line hidden                            #line 46 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule);                            #line default              #line hidden              return;              case 3:              this.decisionCodeRichTextBox = ((TraceLab.UI.WPF.Controls.RichTextBoxWithIntellisense)(target));              return;              case 4:              this.CompileButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ExitLoopScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ExitLoopScopeNodeControl.xaml.cs,MoveNodeToCenterOfBottomBorder,The following statement contains a magic number: Point bottomBorderCenter = ScopeHelper.GetBottomBorderCenter(m_scopeNode' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,EnterLoopScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\EnterLoopScopeNodeControl.xaml.cs,MoveNodeToCenterOfTopBorder,The following statement contains a magic number: Point topBorderCenter = ScopeHelper.GetTopBorderCenter(m_scopeNode' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,LoopScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopScopeNodeControl.xaml.cs,MoveCenterHorizontally,The following statement contains a magic number: VertexControl.CenterX += args.HorizontalChange / 2;
Magic Number,TraceLab.UI.WPF.Views.Nodes,LoopScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopScopeNodeControl.xaml.cs,MoveCenterVertically,The following statement contains a magic number: VertexControl.CenterY += args.VerticalChange / 2;
Magic Number,TraceLab.UI.WPF.Views.Nodes,ExitScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ExitScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The following statement contains a magic number: Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.ExitDecisionNode' 15' 15' 15' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,ExitScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ExitScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The following statement contains a magic number: Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.ExitDecisionNode' 15' 15' 15' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,ExitScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ExitScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The following statement contains a magic number: Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.ExitDecisionNode' 15' 15' 15' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,ExitScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ExitScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The following statement contains a magic number: Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.ExitDecisionNode' 15' 15' 15' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,EnterScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\EnterScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The following statement contains a magic number: Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.DecisionNode' 15' 15' 15' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,EnterScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\EnterScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The following statement contains a magic number: Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.DecisionNode' 15' 15' 15' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,EnterScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\EnterScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The following statement contains a magic number: Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.DecisionNode' 15' 15' 15' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,EnterScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\EnterScopeNodeControl.xaml.cs,MoveNodeAlongScopeBorder,The following statement contains a magic number: Point? intersection = ScopeHelper.GetIntersection(m_scopeNode' m_scopeNode.DecisionNode' 15' 15' 15' 15' m_labelHeight);
Magic Number,TraceLab.UI.WPF.Views.Nodes,ScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ScopeNodeControl.xaml.cs,MoveCenterHorizontally,The following statement contains a magic number: VertexControl.CenterX += args.HorizontalChange / 2;
Magic Number,TraceLab.UI.WPF.Views.Nodes,ScopeNodeControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ScopeNodeControl.xaml.cs,MoveCenterVertically,The following statement contains a magic number: VertexControl.CenterY += args.VerticalChange / 2;
Magic Number,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.@this = ((TraceLab.UI.WPF.Views.Nodes.ReadOnlyComponentNodeInfo)(target));              return;              case 2:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 50 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 3:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 4:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 5:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.@this = ((TraceLab.UI.WPF.Views.Nodes.ReadOnlyComponentNodeInfo)(target));              return;              case 2:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 50 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 3:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 4:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 5:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.@this = ((TraceLab.UI.WPF.Views.Nodes.ReadOnlyComponentNodeInfo)(target));              return;              case 2:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 50 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 3:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 4:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 5:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.@this = ((TraceLab.UI.WPF.Views.Nodes.ReadOnlyComponentNodeInfo)(target));              return;              case 2:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 50 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 3:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 4:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 5:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.@this = ((TraceLab.UI.WPF.Views.Nodes.ReadOnlyComponentNodeInfo)(target));              return;              case 2:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 50 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 3:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 4:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 5:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 6:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 143 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 144 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 8:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 227 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 228 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 6:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 143 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 144 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 8:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 227 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 228 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 61 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 2:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 4:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 61 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 2:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 4:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 61 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 2:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 4:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 61 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 2:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 4:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseMoveEvent;                            #line 117 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_PreviewMouseMoveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 118 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 6:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 172 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 173 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 8:                            #line 216 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              ((System.Windows.Controls.TextBox)(target)).TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.OutputAsTextBox_TextChanged);                            #line default              #line hidden              break;              case 9:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 267 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 268 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseMoveEvent;                            #line 117 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_PreviewMouseMoveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 118 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 6:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 172 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 173 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 8:                            #line 216 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              ((System.Windows.Controls.TextBox)(target)).TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.OutputAsTextBox_TextChanged);                            #line default              #line hidden              break;              case 9:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 267 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 268 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseMoveEvent;                            #line 117 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_PreviewMouseMoveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 118 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 6:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 172 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 173 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 8:                            #line 216 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              ((System.Windows.Controls.TextBox)(target)).TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.OutputAsTextBox_TextChanged);                            #line default              #line hidden              break;              case 9:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 267 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 268 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 5:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseMoveEvent;                            #line 117 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_PreviewMouseMoveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 118 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 6:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 172 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 173 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 8:                            #line 216 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              ((System.Windows.Controls.TextBox)(target)).TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.OutputAsTextBox_TextChanged);                            #line default              #line hidden              break;              case 9:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 267 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 268 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken);                            #line default              #line hidden                            #line 41 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule);                            #line default              #line hidden                            #line 44 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule);                            #line default              #line hidden              return;              case 3:              this.decisionCodeRichTextBox = ((TraceLab.UI.WPF.Controls.RichTextBoxWithIntellisense)(target));              return;              case 4:              this.CompileButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken);                            #line default              #line hidden                            #line 41 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule);                            #line default              #line hidden                            #line 44 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule);                            #line default              #line hidden              return;              case 3:              this.decisionCodeRichTextBox = ((TraceLab.UI.WPF.Controls.RichTextBoxWithIntellisense)(target));              return;              case 4:              this.CompileButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken);                            #line default              #line hidden                            #line 41 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule);                            #line default              #line hidden                            #line 44 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule);                            #line default              #line hidden              return;              case 3:              this.decisionCodeRichTextBox = ((TraceLab.UI.WPF.Controls.RichTextBoxWithIntellisense)(target));              return;              case 4:              this.CompileButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,OnRender,The following statement contains a magic number: if (element != null && (IsMouseOver || element.IsMouseOver))              {                  var mainWindow = this.GetParent<DockableGraph>(null);                                    var gt = element.TransformToVisual(this);                  var elementCenter = gt.Transform(new Point(element.ActualWidth / 2' element.ActualHeight / 2));                  var elementSize = new Size(element.ActualWidth' element.ActualHeight);                  var elementRect = new Rect(gt.Transform(new Point(0' 0))' elementSize);                    var thisCenter = new Point(ActualWidth / 2' ActualHeight / 2);                    // The total area we'll be drawing in.                  var totalRect = new Rect(elementRect.Location' elementRect.Size);                  totalRect.Union(new Rect(new Point(0' 0)' new Size(ActualWidth' ActualHeight)));                    // Create geometry objects to work with.                  var elementRectangleGeometry = new RectangleGeometry(elementRect);                  var totalRectangleGeometry = new RectangleGeometry(totalRect);                    // We'll now remove the element's rectangle from where we're drawing' so that we                   // don't draw on top of it' but will draw on top of everything else.                  CombinedGeometry clipGeometry = new CombinedGeometry(GeometryCombineMode.Exclude' totalRectangleGeometry' elementRectangleGeometry);                    drawingContext.PushClip(clipGeometry);                    //var node = OriginElement.Vertex as TraceLab.Core.Experiments.ExperimentNode;                  //Point vertexCenter = new Point(node.Data.X' node.Data.Y);                    Pen solidPen = new Pen(System.Windows.Media.Brushes.LightCoral' 1.0);                  drawingContext.DrawLine(solidPen' elementCenter' thisCenter);                    // Pop off the RectangleGeometry                  drawingContext.Pop();              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,OnRender,The following statement contains a magic number: if (element != null && (IsMouseOver || element.IsMouseOver))              {                  var mainWindow = this.GetParent<DockableGraph>(null);                                    var gt = element.TransformToVisual(this);                  var elementCenter = gt.Transform(new Point(element.ActualWidth / 2' element.ActualHeight / 2));                  var elementSize = new Size(element.ActualWidth' element.ActualHeight);                  var elementRect = new Rect(gt.Transform(new Point(0' 0))' elementSize);                    var thisCenter = new Point(ActualWidth / 2' ActualHeight / 2);                    // The total area we'll be drawing in.                  var totalRect = new Rect(elementRect.Location' elementRect.Size);                  totalRect.Union(new Rect(new Point(0' 0)' new Size(ActualWidth' ActualHeight)));                    // Create geometry objects to work with.                  var elementRectangleGeometry = new RectangleGeometry(elementRect);                  var totalRectangleGeometry = new RectangleGeometry(totalRect);                    // We'll now remove the element's rectangle from where we're drawing' so that we                   // don't draw on top of it' but will draw on top of everything else.                  CombinedGeometry clipGeometry = new CombinedGeometry(GeometryCombineMode.Exclude' totalRectangleGeometry' elementRectangleGeometry);                    drawingContext.PushClip(clipGeometry);                    //var node = OriginElement.Vertex as TraceLab.Core.Experiments.ExperimentNode;                  //Point vertexCenter = new Point(node.Data.X' node.Data.Y);                    Pen solidPen = new Pen(System.Windows.Media.Brushes.LightCoral' 1.0);                  drawingContext.DrawLine(solidPen' elementCenter' thisCenter);                    // Pop off the RectangleGeometry                  drawingContext.Pop();              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,OnRender,The following statement contains a magic number: if (element != null && (IsMouseOver || element.IsMouseOver))              {                  var mainWindow = this.GetParent<DockableGraph>(null);                                    var gt = element.TransformToVisual(this);                  var elementCenter = gt.Transform(new Point(element.ActualWidth / 2' element.ActualHeight / 2));                  var elementSize = new Size(element.ActualWidth' element.ActualHeight);                  var elementRect = new Rect(gt.Transform(new Point(0' 0))' elementSize);                    var thisCenter = new Point(ActualWidth / 2' ActualHeight / 2);                    // The total area we'll be drawing in.                  var totalRect = new Rect(elementRect.Location' elementRect.Size);                  totalRect.Union(new Rect(new Point(0' 0)' new Size(ActualWidth' ActualHeight)));                    // Create geometry objects to work with.                  var elementRectangleGeometry = new RectangleGeometry(elementRect);                  var totalRectangleGeometry = new RectangleGeometry(totalRect);                    // We'll now remove the element's rectangle from where we're drawing' so that we                   // don't draw on top of it' but will draw on top of everything else.                  CombinedGeometry clipGeometry = new CombinedGeometry(GeometryCombineMode.Exclude' totalRectangleGeometry' elementRectangleGeometry);                    drawingContext.PushClip(clipGeometry);                    //var node = OriginElement.Vertex as TraceLab.Core.Experiments.ExperimentNode;                  //Point vertexCenter = new Point(node.Data.X' node.Data.Y);                    Pen solidPen = new Pen(System.Windows.Media.Brushes.LightCoral' 1.0);                  drawingContext.DrawLine(solidPen' elementCenter' thisCenter);                    // Pop off the RectangleGeometry                  drawingContext.Pop();              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,OnRender,The following statement contains a magic number: if (element != null && (IsMouseOver || element.IsMouseOver))              {                  var mainWindow = this.GetParent<DockableGraph>(null);                                    var gt = element.TransformToVisual(this);                  var elementCenter = gt.Transform(new Point(element.ActualWidth / 2' element.ActualHeight / 2));                  var elementSize = new Size(element.ActualWidth' element.ActualHeight);                  var elementRect = new Rect(gt.Transform(new Point(0' 0))' elementSize);                    var thisCenter = new Point(ActualWidth / 2' ActualHeight / 2);                    // The total area we'll be drawing in.                  var totalRect = new Rect(elementRect.Location' elementRect.Size);                  totalRect.Union(new Rect(new Point(0' 0)' new Size(ActualWidth' ActualHeight)));                    // Create geometry objects to work with.                  var elementRectangleGeometry = new RectangleGeometry(elementRect);                  var totalRectangleGeometry = new RectangleGeometry(totalRect);                    // We'll now remove the element's rectangle from where we're drawing' so that we                   // don't draw on top of it' but will draw on top of everything else.                  CombinedGeometry clipGeometry = new CombinedGeometry(GeometryCombineMode.Exclude' totalRectangleGeometry' elementRectangleGeometry);                    drawingContext.PushClip(clipGeometry);                    //var node = OriginElement.Vertex as TraceLab.Core.Experiments.ExperimentNode;                  //Point vertexCenter = new Point(node.Data.X' node.Data.Y);                    Pen solidPen = new Pen(System.Windows.Media.Brushes.LightCoral' 1.0);                  drawingContext.DrawLine(solidPen' elementCenter' thisCenter);                    // Pop off the RectangleGeometry                  drawingContext.Pop();              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.thisInfoContainer = ((TraceLab.UI.WPF.Views.Nodes.NodeInfoContainer)(target));                            #line 39 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.IsKeyboardFocusWithinChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.NodeInfoContainer_IsKeyboardFocusWithinChanged);                            #line default              #line hidden                            #line 40 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.NodeInfoContainer_PreviewMouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.ComponentInfoTip = ((System.Windows.Controls.Border)(target));              return;              case 3:              this.InfoTipTitleBar = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.InfoTipTitleName = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.content = ((System.Windows.Controls.ContentPresenter)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.thisInfoContainer = ((TraceLab.UI.WPF.Views.Nodes.NodeInfoContainer)(target));                            #line 39 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.IsKeyboardFocusWithinChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.NodeInfoContainer_IsKeyboardFocusWithinChanged);                            #line default              #line hidden                            #line 40 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.NodeInfoContainer_PreviewMouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.ComponentInfoTip = ((System.Windows.Controls.Border)(target));              return;              case 3:              this.InfoTipTitleBar = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.InfoTipTitleName = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.content = ((System.Windows.Controls.ContentPresenter)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.thisInfoContainer = ((TraceLab.UI.WPF.Views.Nodes.NodeInfoContainer)(target));                            #line 39 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.IsKeyboardFocusWithinChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.NodeInfoContainer_IsKeyboardFocusWithinChanged);                            #line default              #line hidden                            #line 40 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.NodeInfoContainer_PreviewMouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.ComponentInfoTip = ((System.Windows.Controls.Border)(target));              return;              case 3:              this.InfoTipTitleBar = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.InfoTipTitleName = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.content = ((System.Windows.Controls.ContentPresenter)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.thisInfoContainer = ((TraceLab.UI.WPF.Views.Nodes.NodeInfoContainer)(target));                            #line 39 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.IsKeyboardFocusWithinChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.NodeInfoContainer_IsKeyboardFocusWithinChanged);                            #line default              #line hidden                            #line 40 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.NodeInfoContainer_PreviewMouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.ComponentInfoTip = ((System.Windows.Controls.Border)(target));              return;              case 3:              this.InfoTipTitleBar = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.InfoTipTitleName = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.content = ((System.Windows.Controls.ContentPresenter)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.PackageBuilder,IconExtractor,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\IconExtractor.cs,GetIcon,The following statement contains a magic number: SHGetFileInfo(strPath' 256' out info' (uint)cbFileInfo' flags);
Magic Number,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 6:              this.MainBorder = ((System.Windows.Controls.Border)(target));              return;              }
Magic Number,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 170 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 2:                            #line 178 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 3:                            #line 243 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateExperimentPackageButton_Click);                            #line default              #line hidden              break;              case 4:                            #line 284 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TreeView_MouseLeftButtonClick);                            #line default              #line hidden              break;              case 5:                            #line 295 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BuildPkgButton_Click);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 170 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 2:                            #line 178 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 3:                            #line 243 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateExperimentPackageButton_Click);                            #line default              #line hidden              break;              case 4:                            #line 284 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TreeView_MouseLeftButtonClick);                            #line default              #line hidden              break;              case 5:                            #line 295 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BuildPkgButton_Click);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 170 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 2:                            #line 178 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 3:                            #line 243 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateExperimentPackageButton_Click);                            #line default              #line hidden              break;              case 4:                            #line 284 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TreeView_MouseLeftButtonClick);                            #line default              #line hidden              break;              case 5:                            #line 295 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BuildPkgButton_Click);                            #line default              #line hidden              break;              }
Magic Number,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 170 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 2:                            #line 178 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 3:                            #line 243 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateExperimentPackageButton_Click);                            #line default              #line hidden              break;              case 4:                            #line 284 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TreeView_MouseLeftButtonClick);                            #line default              #line hidden              break;              case 5:                            #line 295 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BuildPkgButton_Click);                            #line default              #line hidden              break;              }
Missing Default,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,DetermineX,The following switch statement is missing a default case: switch (child.HorizontalAlignment)              {                  case HorizontalAlignment.Left:                  {                      if (horizontalAdornerPlacement == AdornerPlacement.Outside)                      {                          return -child.DesiredSize.Width + offsetX;                      }                      else                      {                          return offsetX;                      }                  }                  case HorizontalAlignment.Right:                  {                      if (horizontalAdornerPlacement == AdornerPlacement.Outside)                      {                          double adornedWidth = AdornedElement.ActualWidth;                          return adornedWidth + offsetX;                      }                      else                      {                          double adornerWidth = this.child.DesiredSize.Width;                          double adornedWidth = AdornedElement.ActualWidth;                          double x = adornedWidth - adornerWidth;                          return x + offsetX;                      }                  }                  case HorizontalAlignment.Center:                  {                      double adornerWidth = this.child.DesiredSize.Width;                      double adornedWidth = AdornedElement.ActualWidth;                      double x = (adornedWidth / 2) - (adornerWidth / 2);                      return x + offsetX;                  }                  case HorizontalAlignment.Stretch:                  {                      return 0.0;                  }              }
Missing Default,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,DetermineY,The following switch statement is missing a default case: switch (child.VerticalAlignment)              {                  case VerticalAlignment.Top:                  {                      if (verticalAdornerPlacement == AdornerPlacement.Outside)                      {                          return -child.DesiredSize.Height + offsetY;                      }                      else                      {                          return offsetY;                      }                  }                  case VerticalAlignment.Bottom:                  {                      if (verticalAdornerPlacement == AdornerPlacement.Outside)                      {                          double adornedHeight = AdornedElement.ActualHeight;                          return adornedHeight + offsetY;                      }                      else                      {                          double adornerHeight = this.child.DesiredSize.Height;                          double adornedHeight = AdornedElement.ActualHeight;                          double x = adornedHeight - adornerHeight;                          return x + offsetY;                      }                  }                  case VerticalAlignment.Center:                  {                      double adornerHeight = this.child.DesiredSize.Height;                      double adornedHeight = AdornedElement.ActualHeight;                      double x = (adornedHeight / 2) - (adornerHeight / 2);                      return x + offsetY;                  }                  case VerticalAlignment.Stretch:                  {                      return 0.0;                  }              }
Missing Default,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,DetermineWidth,The following switch statement is missing a default case: switch (child.HorizontalAlignment)              {                  case HorizontalAlignment.Left:                  {                      return this.child.DesiredSize.Width;                  }                  case HorizontalAlignment.Right:                  {                      return this.child.DesiredSize.Width;                  }                  case HorizontalAlignment.Center:                  {                      return this.child.DesiredSize.Width;                  }                  case HorizontalAlignment.Stretch:                  {                      return AdornedElement.ActualWidth;                  }              }
Missing Default,TraceLab.UI.WPF.Controls.AdornedControl,FrameworkElementAdorner,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AdornedControl\FrameworkElementAdorner.cs,DetermineHeight,The following switch statement is missing a default case: switch (child.VerticalAlignment)              {                  case VerticalAlignment.Top:                  {                      return this.child.DesiredSize.Height;                  }                  case VerticalAlignment.Bottom:                  {                      return this.child.DesiredSize.Height;                  }                  case VerticalAlignment.Center:                  {                      return this.child.DesiredSize.Height;                   }                  case VerticalAlignment.Stretch:                  {                      return AdornedElement.ActualHeight;                  }              }
Missing Default,TraceLab.UI.WPF.Controls,AuthenticationAndUploadControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AuthenticationAndUploadControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MainPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 2:              this.CoestLogo = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.AuthenticationPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 4:              this.buttonPanel = ((System.Windows.Controls.StackPanel)(target));              return;              case 5:              this.authenticateButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.cancelButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.links = ((System.Windows.Controls.StackPanel)(target));              return;              case 8:                            #line 91 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 9:                            #line 96 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 10:                            #line 101 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              case 11:              this.UploadingContestPanel = ((System.Windows.Controls.DockPanel)(target));              return;              case 12:              this.UploadProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 13:              this.contestWebsiteLink = ((System.Windows.Controls.StackPanel)(target));              return;              case 14:                            #line 155 "..\..\..\Controls\AuthenticationAndUploadControl.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.mainControl = ((TraceLab.UI.WPF.Controls.EditableTextBlock)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Controls,EditableTextBlock,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\EditableTextBlock.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.TextBox_KeyDown);                            #line default              #line hidden                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).Loaded += new System.Windows.RoutedEventHandler(this.TextBox_Loaded);                            #line default              #line hidden                            #line 27 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBox)(target)).LostFocus += new System.Windows.RoutedEventHandler(this.TextBox_LostFocus);                            #line default              #line hidden              break;              case 3:                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TextBlock_MouseLeftButtonDown);                            #line default              #line hidden                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.TextBlock_MouseLeave);                            #line default              #line hidden                            #line 34 "..\..\..\Controls\EditableTextBlock.xaml"              ((System.Windows.Controls.TextBlock)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.TextBlock_MouseMove);                            #line default              #line hidden              break;              }
Missing Default,TraceLab.UI.WPF.Controls,ScreenshotDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ScreenshotDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.dpiBox = ((System.Windows.Controls.ComboBox)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Controls,AssistListPopup,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\AssistListPopup.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.AssistListBox = ((System.Windows.Controls.ListBox)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Controls,ProgressControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Controls\ProgressControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ControlRoot = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 2:              this.Progress = ((System.Windows.Controls.ProgressBar)(target));              return;              case 3:              this.StatusMessage = ((System.Windows.Controls.Primitives.StatusBarItem)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Selectors,PackageBuilderWizardSelector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Selectors\PackageBuilderWizardSelector.cs,SelectTemplate,The following switch statement is missing a default case: switch (currentState)                  {                      case PackageBuilderWizardPage.Config:                          return win.FindResource("configurationPage") as DataTemplate;                      case PackageBuilderWizardPage.FileViewer:                          return win.FindResource("packageFileTreeViewer") as DataTemplate;                  }
Missing Default,TraceLab.UI.WPF.Selectors,DefiningCompositeComponentWizardSelector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Selectors\DefiningCompositeComponentWizardSelector.cs,SelectTemplate,The following switch statement is missing a default case: switch (currentState)                  {                      case DefiningCompositeComponentWizardState.IOSpec:                          return win.FindResource("ioSpecPanel") as DataTemplate;                      case DefiningCompositeComponentWizardState.Configuration:                          return win.FindResource("configurationPanel") as DataTemplate;                      case DefiningCompositeComponentWizardState.Info:                          return win.FindResource("componentInfoPanel") as DataTemplate;                      case DefiningCompositeComponentWizardState.Confirmation:                          return win.FindResource("confirmationPanel") as DataTemplate;                  }
Missing Default,TraceLab.UI.WPF.Selectors,BenchmarkWizardSelector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Selectors\BenchmarkWizardSelector.cs,SelectTemplate,The following switch statement is missing a default case: switch(currentState)                  {                      case BenchmarkWizardState.SelectBenchmark:                          return win.FindResource("selectBenchmark") as DataTemplate;                      case BenchmarkWizardState.Configuration:                          return win.FindResource("benchmarkConfiguration") as DataTemplate;                      case BenchmarkWizardState.Process:                          return win.FindResource("executeBenchmark") as DataTemplate;                      case BenchmarkWizardState.QuestionToPublishResults:                          return win.FindResource("questionToPublishResults") as DataTemplate;                      case BenchmarkWizardState.AuthenticationAndUpload:                          return win.FindResource("authenticateAndUploadResults") as DataTemplate;                  }
Missing Default,TraceLab.UI.WPF.Selectors,DefineBenchmarkDialogSelector,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Selectors\DefineBenchmarkDialogSelector.cs,SelectTemplate,The following switch statement is missing a default case: switch (currentState)                  {                      case DefiningBenchmarkDialogState.DefineBenchmark:                          return win.FindResource("defineBenchmark") as DataTemplate;                      case DefiningBenchmarkDialogState.Authentication:                          return win.FindResource("contestPublishing") as DataTemplate; //use the same template as UploadingContest                      case DefiningBenchmarkDialogState.UploadingContest:                          return win.FindResource("contestPublishing") as DataTemplate; //use the same template as Authenticate                  }
Missing Default,TraceLab.UI.WPF.Utilities,FileOutsideDirectoryWarningBox,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Utilities\FileOutsideDirectoryWarningBox.cs,ShowWarningBox,The following switch statement is missing a default case: switch (result)                  {                      case MessageBoxResult.Yes:                          tryagain = false;                          break;                      case MessageBoxResult.No:                          tryagain = true;                          break;                  }
Missing Default,TraceLab.UI.WPF.Views,AboutExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutExperimentDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.UpdateButton = ((System.Windows.Controls.Button)(target));                            #line 80 "..\..\..\Views\AboutExperimentDialog.xaml"              this.UpdateButton.Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,AboutTraceLabDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\AboutTraceLabDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 62 "..\..\..\Views\AboutTraceLabDialog.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.OpenHyperlinkRequest);                            #line default              #line hidden              return;              case 2:                            #line 65 "..\..\..\Views\AboutTraceLabDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,FolderPickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FolderPickerDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FolderPickerDialog)(target));                            #line 33 "..\..\..\Views\FolderPickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FolderPickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 89 "..\..\..\Views\FolderPickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\FolderPickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 94 "..\..\..\Views\FolderPickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 99 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 100 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 101 "..\..\..\Views\FolderPickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFolderChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 116 "..\..\..\Views\FolderPickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,ComponentExceptionDisplay,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentExceptionDisplay.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ExceptionWindow = ((TraceLab.UI.WPF.Views.ComponentExceptionDisplay)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,NewExperimentDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\NewExperimentDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ExperimentNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 63 "..\..\..\Views\NewExperimentDialog.xaml"              this.ExperimentNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 2:              this.DirectoryBox = ((System.Windows.Controls.TextBox)(target));                            #line 71 "..\..\..\Views\NewExperimentDialog.xaml"              this.DirectoryBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 3:                            #line 72 "..\..\..\Views\NewExperimentDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnBrowseClick);                            #line default              #line hidden              return;              case 4:              this.FileNameBox = ((System.Windows.Controls.TextBox)(target));                            #line 76 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.KeyDown += new System.Windows.Input.KeyEventHandler(this.FileNameBox_KeyDown);                            #line default              #line hidden                            #line 77 "..\..\..\Views\NewExperimentDialog.xaml"              this.FileNameBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.AuthorBox = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.ContributorsBox = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.DescriptionBox = ((System.Windows.Controls.TextBox)(target));              return;              case 8:              this.CancelButton = ((System.Windows.Controls.Button)(target));              return;              case 9:              this.CreateButton = ((System.Windows.Controls.Button)(target));                            #line 93 "..\..\..\Views\NewExperimentDialog.xaml"              this.CreateButton.Click += new System.Windows.RoutedEventHandler(this.CreateButton_Click);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BenchmarkWizardRoot = ((TraceLab.UI.WPF.Views.BenchmarkWizardDialog)(target));              return;              case 3:                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 316 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 319 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.keyBorderColumnDefinition = ((System.Windows.Controls.ColumnDefinition)(target));              return;              case 6:              this.headerRowDefinition = ((System.Windows.Controls.RowDefinition)(target));              return;              case 7:              this.header = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.imageIcon = ((System.Windows.Controls.Image)(target));              return;              case 9:              this.headingLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:              this.summaryLabel = ((System.Windows.Controls.TextBlock)(target));              return;              case 11:              this.keyBorder = ((System.Windows.Controls.Border)(target));              return;              case 12:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              case 13:              this.executeBenchmarkProgress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.buttonBorder = ((System.Windows.Controls.Border)(target));              return;              case 15:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 16:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 17:              this.processButton = ((System.Windows.Controls.Button)(target));              return;              case 18:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 452 "..\..\..\Views\BenchmarkWizardDialog.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,BenchmarkWizardDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\BenchmarkWizardDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:                            #line 115 "..\..\..\Views\BenchmarkWizardDialog.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              }
Missing Default,TraceLab.UI.WPF.Views,ComponentLibraryErrorDisplay,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ErrorDisplay.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ErrorDisplayRoot = ((TraceLab.UI.WPF.Views.ComponentLibraryErrorDisplay)(target));              return;              case 2:                            #line 53 "..\..\..\Views\ErrorDisplay.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,ComponentLibraryOrganizer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentLibraryOrganizer.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 2:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 3:              this.TagView = ((System.Windows.Controls.TreeView)(target));                            #line 43 "..\..\..\Views\ComponentLibraryOrganizer.xaml"              this.TagView.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.TreeView_SelectedItemChanged);                            #line default              #line hidden              return;              case 4:              this.ComponentList = ((System.Windows.Controls.ListView)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ComponentLibraryRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.IconsToolBar = ((System.Windows.Controls.ToolBar)(target));              return;              case 5:                            #line 251 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenImportManager_Click);                            #line default              #line hidden              return;              case 6:              this.FilterBox = ((TraceLab.UI.WPF.Controls.SearchTextBox)(target));              return;              case 7:              this.FilterBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 9:              this.ComponentLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 10:              this.rescanCanvas = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.isRescanBinding = ((System.Windows.Data.Binding)(target));              return;              case 12:              this.rescanImage = ((System.Windows.Controls.Image)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,ComponentsLibraryWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ComponentsLibraryWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:                            #line 93 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 3:                            #line 188 "..\..\..\Views\ComponentsLibraryWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PART_RemoveImportButton_Click);                            #line default              #line hidden              break;              }
Missing Default,TraceLab.UI.WPF.Views,DefineBenchmarkDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineBenchmarkDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.DefiningBenchmarkDialog = ((TraceLab.UI.WPF.Views.DefineBenchmarkDialog)(target));              return;              case 3:              this.headingLabel = ((System.Windows.Controls.Label)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,DefineBenchmarkDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineBenchmarkDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:                            #line 311 "..\..\..\Views\DefineBenchmarkDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.cancelButton_Click);                            #line default              #line hidden              break;              }
Missing Default,TraceLab.UI.WPF.Views,ExperimentImportManagerView,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ExperimentImportManagerView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.PlaceHolderWidth = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.ImportLibrary = ((TraceLab.UI.WPF.Controls.TreeListView)(target));              return;              case 3:                            #line 133 "..\..\..\Views\ExperimentImportManagerView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 3:                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 415 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 4:                            #line 418 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 5:              this.backButton = ((System.Windows.Controls.Button)(target));              return;              case 6:              this.nextButton = ((System.Windows.Controls.Button)(target));              return;              case 7:              this.defineButton = ((System.Windows.Controls.Button)(target));              return;              case 8:              this.closeButton = ((System.Windows.Controls.Button)(target));                            #line 487 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.closeButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 9:              this.cancelButton = ((System.Windows.Controls.Button)(target));                            #line 491 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              this.cancelButton.Click += new System.Windows.RoutedEventHandler(this.close_Click);                            #line default              #line hidden              return;              case 10:              this.mainPanel = ((System.Windows.Controls.Border)(target));              return;              case 11:              this.content = ((System.Windows.Controls.DockPanel)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,DefineCompositeComponentWizard,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DefineCompositeComponentWizard.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 185 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 186 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 2:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 249 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 250 "..\..\..\Views\DefineCompositeComponentWizard.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,TraceLab.UI.WPF.Views,FilePickerDialog,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\FilePickerDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.FilePickerTopLevel = ((TraceLab.UI.WPF.Views.FilePickerDialog)(target));                            #line 33 "..\..\..\Views\FilePickerDialog.xaml"              this.FilePickerTopLevel.Loaded += new System.Windows.RoutedEventHandler(this.FilePickerLoaded);                            #line default              #line hidden              return;              case 2:              this.DiskExpander = ((System.Windows.Controls.Expander)(target));                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Expanded += new System.Windows.RoutedEventHandler(this.DiskExpander_Expanded);                            #line default              #line hidden                            #line 88 "..\..\..\Views\FilePickerDialog.xaml"              this.DiskExpander.Collapsed += new System.Windows.RoutedEventHandler(this.DiskExpander_Collapsed);                            #line default              #line hidden              return;              case 3:                            #line 90 "..\..\..\Views\FilePickerDialog.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BrowseButtonClick);                            #line default              #line hidden              return;              case 4:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 93 "..\..\..\Views\FilePickerDialog.xaml"              this.PathTextBox.TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.TextBox_TextChanged);                            #line default              #line hidden              return;              case 5:              this.PackageExpander = ((System.Windows.Controls.Expander)(target));                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Expanded += new System.Windows.RoutedEventHandler(this.PackageExpander_Expanded);                            #line default              #line hidden                            #line 98 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageExpander.Collapsed += new System.Windows.RoutedEventHandler(this.PackageExpander_Collapsed);                            #line default              #line hidden              return;              case 6:              this.PackageFileChooser = ((System.Windows.Controls.TreeView)(target));                            #line 99 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.IsVisibleChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.TreeView_IsVisibleChanged);                            #line default              #line hidden                            #line 100 "..\..\..\Views\FilePickerDialog.xaml"              this.PackageFileChooser.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.PkgFileChooser_SelectedItemChanged);                            #line default              #line hidden              return;              case 7:              this.ReferencesBinding = ((System.Windows.Data.Binding)(target));              return;              case 8:              this.SelectButton = ((System.Windows.Controls.Button)(target));                            #line 115 "..\..\..\Views\FilePickerDialog.xaml"              this.SelectButton.Click += new System.Windows.RoutedEventHandler(this.SelectClick);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,ReadonlyDockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ReadonlyDockableGraph.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ReadOnlyGraphRoot = ((TraceLab.UI.WPF.Views.ReadonlyDockableGraph)(target));              return;              case 2:                            #line 42 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 43 "..\..\..\Views\ReadonlyDockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 3:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 4:              this.MarqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,ScopeGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ScopeGraph.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 41 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 44 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 46 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 47 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 49 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 51 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 54 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 55 "..\..\..\Views\ScopeGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 5:                            #line 94 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperiment_Click);                            #line default              #line hidden              return;              case 6:              this.ComponentList = ((System.Windows.Controls.ListBox)(target));                            #line 114 "..\..\..\Views\SettingsPage.xaml"              this.ComponentList.KeyDown += new System.Windows.Input.KeyEventHandler(this.ComponentList_KeyDown);                            #line default              #line hidden              return;              case 7:              this.TypeList = ((System.Windows.Controls.ListBox)(target));              return;              case 8:                            #line 143 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.DefaultExperimentsDirectory_Click);                            #line default              #line hidden              return;              case 9:                            #line 166 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,SettingsPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\SettingsPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 33 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.DockPanel)(target)).LostFocus += new System.Windows.RoutedEventHandler(this.TextBox_LostFocus);                            #line default              #line hidden              break;              case 2:                            #line 34 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Button_Click);                            #line default              #line hidden              break;              case 3:                            #line 35 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).Loaded += new System.Windows.RoutedEventHandler(this.TEMPLATE_PART_Text_Loaded);                            #line default              #line hidden                            #line 36 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.TEMPLATE_PART_Text_KeyDown);                            #line default              #line hidden              break;              case 4:                            #line 46 "..\..\..\Views\SettingsPage.xaml"              ((System.Windows.Controls.ContentControl)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.PART_Content_MouseDoubleClick);                            #line default              #line hidden              break;              }
Missing Default,TraceLab.UI.WPF.Views,StartPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\StartPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.startPage = ((TraceLab.UI.WPF.Views.StartPage)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,StartPage,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\StartPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonDownEvent;                            #line 124 "..\..\..\Views\StartPage.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.ListBox_MouseLeftButtonDown_OpenLinkURL);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,TraceLab.UI.WPF.Views,WorkspaceWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\WorkspaceWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.tracesList = ((System.Windows.Controls.DataGrid)(target));                            #line 48 "..\..\..\Views\WorkspaceWindow.xaml"              this.tracesList.MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.tracesList_MouseDoubleClick);                            #line default              #line hidden              return;              }
Missing Default,TraceLab.UI.WPF.Views,DockableGraph,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\DockableGraph.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 54 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveNode);                            #line default              #line hidden                            #line 55 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveNode);                            #line default              #line hidden              return;              case 2:                            #line 57 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteRemoveSelectedNodes);                            #line default              #line hidden                            #line 58 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteRemoveSelectedNodes);                            #line default              #line hidden              return;              case 3:                            #line 60 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleLogLevel);                            #line default              #line hidden                            #line 61 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanToggleLogLevel);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCreateConnection);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAddScopeToDecision);                            #line default              #line hidden              return;              case 6:                            #line 68 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDrop += new System.Windows.DragEventHandler(this.Graph_Drop);                            #line default              #line hidden                            #line 69 "..\..\..\Views\DockableGraph.xaml"              ((System.Windows.Controls.DockPanel)(target)).PreviewDragOver += new System.Windows.DragEventHandler(this.Graph_DragOver);                            #line default              #line hidden              return;              case 7:              this.zoomControl = ((TraceLab.UI.WPF.Controls.ZoomControl.ZoomControl)(target));              return;              case 8:              this.marqueeAdorner = ((System.Windows.Shapes.Rectangle)(target));              return;              case 9:              this.graphLayout = ((TraceLab.UI.WPF.Controls.NodeGraphLayout)(target));              return;              case 10:              this.HACK_Vertex = ((GraphSharp.Controls.VertexControl)(target));              return;              case 11:              this.HACK_Edge = ((GraphSharp.Controls.EdgeControl)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,ExceptionDisplay,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\ExceptionDisplay.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.ExceptionWindow = ((TraceLab.UI.WPF.Views.ExceptionDisplay)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,OutputWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\OutputWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.OutputLog = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              case 3:                            #line 88 "..\..\..\Views\OutputWindow.xaml"              ((System.Windows.Controls.ToolBar)(target)).Loaded += new System.Windows.RoutedEventHandler(this.ToolBar_Loaded);                            #line default              #line hidden              return;              case 4:              this.GlobalLogLevelsSettingsMenu = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:              this.OutputLogView = ((System.Windows.Controls.ListView)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,OutputWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\OutputWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:                            #line 77 "..\..\..\Views\OutputWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ViewExceptionButton_Click);                            #line default              #line hidden              break;              }
Missing Default,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.mainWindow = ((TraceLab.UI.WPF.Views.MainWindow)(target));              return;              case 2:                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteOpenComponentGraphCommand);                            #line default              #line hidden                            #line 88 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteOpenComponentGraphCommand);                            #line default              #line hidden              return;              case 3:                            #line 91 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteToggleNodeInfo);                            #line default              #line hidden              return;              case 4:                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ShowDefineCompositeComponentWizard);                            #line default              #line hidden                            #line 94 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanShowDefineCompositeComponentWizard);                            #line default              #line hidden              return;              case 5:                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CaptureScreenShot);                            #line default              #line hidden                            #line 97 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanCaptureScreenShot);                            #line default              #line hidden              return;              case 6:              this.ModalHost = ((System.Windows.Controls.Grid)(target));              return;              case 7:                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 136 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 8:                            #line 189 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenPkgBuilder_Click);                            #line default              #line hidden              return;              case 9:                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.TBButton_Click);                            #line default              #line hidden                            #line 196 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).ContextMenuOpening += new System.Windows.Controls.ContextMenuEventHandler(this.TBButton_ContextMenuOpening);                            #line default              #line hidden              return;              case 12:                            #line 220 "..\..\..\Views\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.AboutTraceLabMouseLeftButtonUp);                            #line default              #line hidden              return;              case 13:              this.Progress = ((TraceLab.UI.WPF.Controls.ProgressControl)(target));              return;              case 14:              this.DockManager = ((AvalonDock.DockingManager)(target));              return;              case 15:              this.Workspace = ((TraceLab.UI.WPF.Views.WorkspaceWindow)(target));              return;              case 16:              this.Components = ((TraceLab.UI.WPF.Views.ComponentsLibraryWindow)(target));              return;              case 17:              this.Output = ((TraceLab.UI.WPF.Views.OutputWindow)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views,MainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 10:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonUpEvent;                            #line 206 "..\..\..\Views\MainWindow.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.HelpMenuItem_MouseLeftButtonUp);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 11:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseLeftButtonUpEvent;                            #line 216 "..\..\..\Views\MainWindow.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.HelpMenuItem_MouseLeftButtonUp);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,TraceLab.UI.WPF.Views.Nodes,DecisionInfoControlBase,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionInfoControlBase.cs,OnFillItemsNeeded,The following switch statement is missing a default case: switch (args.Statement)                  {                      case Statement.Select:                          FillItemsWithNextNodesLabels(comboBox);                          break;                        case Statement.Load:                            comboBox.Items.Clear();                          FillItemsWithIncomingOutputsFromPreviousNodes(comboBox);                          break;                  }
Missing Default,TraceLab.UI.WPF.Views.Nodes,LoopDecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\LoopDecisionNodeInfoControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 42 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken);                            #line default              #line hidden                            #line 43 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken);                            #line default              #line hidden              return;              case 2:                            #line 45 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule);                            #line default              #line hidden                            #line 46 "..\..\..\..\Views\Nodes\LoopDecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule);                            #line default              #line hidden              return;              case 3:              this.decisionCodeRichTextBox = ((TraceLab.UI.WPF.Controls.RichTextBoxWithIntellisense)(target));              return;              case 4:              this.CompileButton = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.@this = ((TraceLab.UI.WPF.Views.Nodes.ReadOnlyComponentNodeInfo)(target));              return;              case 2:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 50 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 3:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 4:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 63 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 5:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views.Nodes,ReadOnlyComponentNodeInfo,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ReadOnlyComponentNodeInfo.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 6:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 143 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 144 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 8:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 227 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 228 "..\..\..\..\Views\Nodes\ReadOnlyComponentNodeInfo.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.resizeThumb = ((System.Windows.Controls.Primitives.Thumb)(target));                            #line 61 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.resizeThumb.DragDelta += new System.Windows.Controls.Primitives.DragDeltaEventHandler(this.resizeThumb_DragDelta);                            #line default              #line hidden              return;              case 2:              this.iospecRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.iospecExpander = ((System.Windows.Controls.Expander)(target));                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Expanded += new System.Windows.RoutedEventHandler(this.iospecExpander_Expanded);                            #line default              #line hidden                            #line 74 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              this.iospecExpander.Collapsed += new System.Windows.RoutedEventHandler(this.iospecExpander_Collapsed);                            #line default              #line hidden              return;              case 4:              this.inputsLV = ((System.Windows.Controls.ListView)(target));              return;              case 7:              this.outputsLV = ((System.Windows.Controls.ListView)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views.Nodes,ComponentNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\ComponentNodeInfoControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 5:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.PreviewMouseMoveEvent;                            #line 117 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_PreviewMouseMoveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 118 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.InputComboBoxIOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 6:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 172 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 173 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              case 8:                            #line 216 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              ((System.Windows.Controls.TextBox)(target)).TextChanged += new System.Windows.Controls.TextChangedEventHandler(this.OutputAsTextBox_TextChanged);                            #line default              #line hidden              break;              case 9:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseEnterEvent;                            #line 267 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseEnterHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.UIElement.MouseLeaveEvent;                            #line 268 "..\..\..\..\Views\Nodes\ComponentNodeInfoControl.xaml"              eventSetter.Handler = new System.Windows.Input.MouseEventHandler(this.IOItem_MouseLeaveHandler);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,TraceLab.UI.WPF.Views.Nodes,DecisionNodeInfoControl,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\DecisionNodeInfoControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 40 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteAppendCodeToken);                            #line default              #line hidden                            #line 41 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteAppendCodeToken);                            #line default              #line hidden              return;              case 2:                            #line 43 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.ExecuteCompileDecisionModule);                            #line default              #line hidden                            #line 44 "..\..\..\..\Views\Nodes\DecisionNodeInfoControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).CanExecute += new System.Windows.Input.CanExecuteRoutedEventHandler(this.CanExecuteCompileDecisionModule);                            #line default              #line hidden              return;              case 3:              this.decisionCodeRichTextBox = ((TraceLab.UI.WPF.Controls.RichTextBoxWithIntellisense)(target));              return;              case 4:              this.CompileButton = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views.Nodes,NodeInfoContainer,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\Nodes\NodeInfoContainer.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.thisInfoContainer = ((TraceLab.UI.WPF.Views.Nodes.NodeInfoContainer)(target));                            #line 39 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.IsKeyboardFocusWithinChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.NodeInfoContainer_IsKeyboardFocusWithinChanged);                            #line default              #line hidden                            #line 40 "..\..\..\..\Views\Nodes\NodeInfoContainer.xaml"              this.thisInfoContainer.PreviewMouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.NodeInfoContainer_PreviewMouseLeftButtonDown);                            #line default              #line hidden              return;              case 2:              this.ComponentInfoTip = ((System.Windows.Controls.Border)(target));              return;              case 3:              this.InfoTipTitleBar = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.InfoTipTitleName = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.content = ((System.Windows.Controls.ContentPresenter)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 6:              this.MainBorder = ((System.Windows.Controls.Border)(target));              return;              }
Missing Default,TraceLab.UI.WPF.Views.PackageBuilder,PackageBuilderMainWindow,C:\repos\CoEST_TraceLab\Main\TraceLab\TraceLab.UI.WPF\Views\PackageBuilder\PackageBuilderMainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 170 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 2:                            #line 178 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.DockPanel)(target)).Drop += new System.Windows.DragEventHandler(this.TreeView_Drop);                            #line default              #line hidden              break;              case 3:                            #line 243 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateExperimentPackageButton_Click);                            #line default              #line hidden              break;              case 4:                            #line 284 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Border)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.TreeView_MouseLeftButtonClick);                            #line default              #line hidden              break;              case 5:                            #line 295 "..\..\..\..\Views\PackageBuilder\PackageBuilderMainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.BuildPkgButton_Click);                            #line default              #line hidden              break;              }
