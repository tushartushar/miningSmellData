Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The method has 131 lines of code.
Complex Method,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,TextUpdated,Cyclomatic complexity of the method is 8
Complex Method,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,UpdateTextCompletion,Cyclomatic complexity of the method is 9
Complex Method,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,RefreshView,Cyclomatic complexity of the method is 10
Complex Method,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,ItemsSourceCollectionChanged,Cyclomatic complexity of the method is 11
Complex Method,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnKeyDown,Cyclomatic complexity of the method is 17
Complex Method,System.Windows.Controls,AutoCompleteSearch,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteFilter.cs,GetFilter,Cyclomatic complexity of the method is 15
Complex Method,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,Cyclomatic complexity of the method is 11
Complex Method,System.Windows.Controls,SelectorSelectionAdapter,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\SelectorSelectionAdapter.cs,HandleKeyDown,Cyclomatic complexity of the method is 18
Complex Method,System.Windows.Controls,Rating,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,UpdateValues,Cyclomatic complexity of the method is 8
Complex Method,System.Windows.Controls,Rating,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,OnKeyDown,Cyclomatic complexity of the method is 26
Long Parameter List,System.Windows.Controls,RoutedPropertyChangingEventArgs,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\RoutedPropertyChangingEventArgs.cs,RoutedPropertyChangingEventArgs,The method has 5 parameters.
Long Identifier,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the parameter oldValueINotifyCollectionChanged is 32.
Long Identifier,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the parameter newValueINotifyCollectionChanged is 32.
Long Statement,System.Windows.Controls,InteractionHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\..\Common\System\Windows\Controls\InteractionHelper.cs,UpdateVisualStateBase,The length of the statement  "		VisualStates.GoToState (Control' useTransitions' VisualStates.StatePressed' VisualStates.StateMouseOver' VisualStates.StateNormal); " is 131.
Long Statement,System.Windows.Controls,ItemsControlHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\..\Common\System\Windows\Controls\ItemsControlHelper.cs,ScrollIntoView,The length of the statement  "	Rect itemRect = new Rect (transform.Transform (new Point ())' transform.Transform (new Point (element.ActualWidth' element.ActualHeight))); " is 139.
Long Statement,System.Windows.Controls,VisualStates,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\..\Common\System\Windows\Controls\VisualStates.cs,GetImplementationRoot,The length of the statement  "	return (1 == VisualTreeHelper.GetChildrenCount (dependencyObject)) ? VisualTreeHelper.GetChild (dependencyObject' 0) as FrameworkElement : null; " is 144.
Long Statement,System.Windows.Controls,VisualStates,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\..\Common\System\Windows\Controls\VisualStates.cs,TryGetVisualStateGroup,The length of the statement  "	return VisualStateManager.GetVisualStateGroups (root).OfType<VisualStateGroup> ().Where (group => string.CompareOrdinal (groupName' group.Name) == 0).FirstOrDefault (); " is 168.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnMinimumPopulateDelayPropertyChanged,The length of the statement  "		throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' Properties.Resources.AutoComplete_OnMinimumPopulateDelayPropertyChanged_InvalidValue' newValue)' "value"); " is 180.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnMaxDropDownHeightPropertyChanged,The length of the statement  "		throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' Properties.Resources.AutoComplete_OnMaxDropDownHeightPropertyChanged_InvalidValue' e.NewValue)' "value"); " is 179.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnFilterModePropertyChanged,The length of the statement  "	if (mode != AutoCompleteFilterMode.Contains && mode != AutoCompleteFilterMode.ContainsCaseSensitive && mode != AutoCompleteFilterMode.ContainsOrdinal && mode != AutoCompleteFilterMode.ContainsOrdinalCaseSensitive && mode != AutoCompleteFilterMode.Custom && mode != AutoCompleteFilterMode.Equals && mode != AutoCompleteFilterMode.EqualsCaseSensitive && mode != AutoCompleteFilterMode.EqualsOrdinal && mode != AutoCompleteFilterMode.EqualsOrdinalCaseSensitive && mode != AutoCompleteFilterMode.None && mode != AutoCompleteFilterMode.StartsWith && mode != AutoCompleteFilterMode.StartsWithCaseSensitive && mode != AutoCompleteFilterMode.StartsWithOrdinal && mode != AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive) { " is 719.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,ClosingDropDown,The length of the statement  "	            RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' false' true);" is 134.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,ClosingDropDown,The length of the statement  "	RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool> (IsDropDownOpenProperty' oldValue' false' true' DropDownClosingEvent); " is 157.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OpeningDropDown,The length of the statement  "	            RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' true' true);" is 133.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OpeningDropDown,The length of the statement  "	RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool> (IsDropDownOpenProperty' oldValue' true' true' DropDownOpeningEvent); " is 156.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,RaiseExpandCollapseAutomationEvent,The length of the statement  "	AutoCompleteBoxAutomationPeer peer = FrameworkElementAutomationPeer.FromElement (this) as AutoCompleteBoxAutomationPeer; " is 120.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,HasFocus,The length of the statement  "	this.IsKeyboardFocusWithin ? Keyboard.FocusedElement as DependencyObject : FocusManager.GetFocusedElement (this) as DependencyObject; " is 133.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,TextUpdated,The length of the statement  "	if (IsTextCompletionEnabled && TextBox != null && TextBox.SelectionLength > 0 && TextBox.SelectionStart != TextBox.Text.Length) { " is 129.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,UpdateTextCompletion,The length of the statement  "				object top = FilterMode == AutoCompleteFilterMode.StartsWith || FilterMode == AutoCompleteFilterMode.StartsWithCaseSensitive ? _view [0] : TryGetMatch (text' _view' AutoCompleteSearch.GetFilter (AutoCompleteFilterMode.StartsWith)); " is 231.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the statement  "		_collectionChangedWeakEventListener = new WeakEventListener<AutoCompleteBox' object' NotifyCollectionChangedEventArgs> (this); " is 126.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the statement  "		_collectionChangedWeakEventListener.OnEventAction = (instance' source' eventArgs) => instance.ItemsSourceCollectionChanged (source' eventArgs); " is 143.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the statement  "		_collectionChangedWeakEventListener.OnDetachAction = weakEventListener => newValueINotifyCollectionChanged.CollectionChanged -= weakEventListener.OnEvent; " is 154.
Long Statement,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,UpdateVisualState,The length of the statement  "	VisualStateManager.GoToState (this' IsDropDownOpen ? VisualStates.StatePopupOpened : VisualStates.StatePopupClosed' useTransitions); " is 132.
Long Statement,System.Windows.Controls,SelectorSelectionAdapter,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\SelectorSelectionAdapter.cs,SelectedIndexIncrement,The length of the statement  "		SelectorControl.SelectedIndex = SelectorControl.SelectedIndex + 1 >= SelectorControl.Items.Count ? -1 : SelectorControl.SelectedIndex + 1; " is 138.
Long Statement,System.Windows.Controls,EnumerableFunctions,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\EnumerableFunctions.cs,GetWeightedValues,The length of the statement  "	return EnumerableFunctions.Zip (values.Scan ((acc' current) => acc + current' 0.0)' values' (acc' current) => Tuple.Create (acc' current)).Select (tuple => Tuple.Create (tuple.First / total' tuple.Second / total)).Select (tuple => { " is 232.
Long Statement,System.Windows.Controls,NullableConverter,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\NullableConverter.cs,ConvertFrom,The length of the statement  "	} else if (string.IsNullOrEmpty (stringValue) || String.Equals (stringValue' "Auto"' StringComparison.OrdinalIgnoreCase)) { " is 123.
Long Statement,System.Windows.Controls,Rating,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,UpdateValues,The length of the statement  "	IEnumerable<Tuple<RatingItem' double>> itemAndWeights = EnumerableFunctions.Zip (ratingItems' ratingItems.Select (ratingItem => 1.0).GetWeightedValues (Value.GetValueOrDefault ())' (item' percent) => Tuple.Create (item' percent)); " is 230.
Long Statement,System.Windows.Controls,Rating,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,UpdateValues,The length of the statement  "		if (newSelectedItem != null && AutomationPeer.ListenerExists (AutomationEvents.SelectionItemPatternOnElementSelected)) { " is 120.
Long Statement,System.Windows.Controls,Rating,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,UpdateValues,The length of the statement  "		if (oldSelectedItem != null && AutomationPeer.ListenerExists (AutomationEvents.SelectionItemPatternOnElementRemovedFromSelection)) { " is 132.
Long Statement,System.Windows.Controls,Rating,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,UpdateDisplayValues,The length of the statement  "	IEnumerable<Tuple<RatingItem' double>> itemAndWeights = EnumerableFunctions.Zip (ratingItems' ratingItems.Select (ratingItem => 1.0).GetWeightedValues (DisplayValue)' (item' percent) => Tuple.Create (item' percent)); " is 216.
Long Statement,System.Windows.Controls,RatingItem,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\RatingItem.cs,OnDisplayValueChanged,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentUICulture' Properties.Resources.InvalidAttemptToChangeReadOnlyProperty' "DisplayValue")); " is 160.
Long Statement,System.Windows.Controls,RatingItem,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\RatingItem.cs,OnIsReadOnlyChanged,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentUICulture' Properties.Resources.InvalidAttemptToChangeReadOnlyProperty' "IsReadOnly")); " is 158.
Long Statement,System.Windows.Automation.Peers,AutoCompleteBoxAutomationPeer,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Automation\Peers\AutoCompleteBoxAutomationPeer.cs,RaiseExpandCollapseAutomationEvent,The length of the statement  "	RaisePropertyChangedEvent (ExpandCollapsePatternIdentifiers.ExpandCollapseStateProperty' oldValue ? ExpandCollapseState.Expanded : ExpandCollapseState.Collapsed' newValue ? ExpandCollapseState.Expanded : ExpandCollapseState.Collapsed); " is 235.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnFilterModePropertyChanged,The conditional expression  "mode != AutoCompleteFilterMode.Contains && mode != AutoCompleteFilterMode.ContainsCaseSensitive && mode != AutoCompleteFilterMode.ContainsOrdinal && mode != AutoCompleteFilterMode.ContainsOrdinalCaseSensitive && mode != AutoCompleteFilterMode.Custom && mode != AutoCompleteFilterMode.Equals && mode != AutoCompleteFilterMode.EqualsCaseSensitive && mode != AutoCompleteFilterMode.EqualsOrdinal && mode != AutoCompleteFilterMode.EqualsOrdinalCaseSensitive && mode != AutoCompleteFilterMode.None && mode != AutoCompleteFilterMode.StartsWith && mode != AutoCompleteFilterMode.StartsWithCaseSensitive && mode != AutoCompleteFilterMode.StartsWithOrdinal && mode != AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive"  is complex.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,UpdateTextValue,The conditional expression  "(userInitiated == null || userInitiated == false) && TextBox != null && TextBox.Text != value"  is complex.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,TextUpdated,The conditional expression  "IsTextCompletionEnabled && TextBox != null && TextBox.SelectionLength > 0 && TextBox.SelectionStart != TextBox.Text.Length"  is complex.
Complex Conditional,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The conditional expression  "Popup == null || PopupChild == null   #if SILVERLIGHT   || OutsidePopupCanvas == null #endif  || Application.Current == null   #if SILVERLIGHT   || Application.Current.Host == null                 || Application.Current.Host.Content == null #endif  || false"  is complex.
Complex Conditional,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The conditional expression  "rootHeight == 0 || rootWidth == 0 || popupContentWidth == 0 || popupContentHeight == 0"  is complex.
Virtual Method Call from Constructor,System.Windows.Controls.Primitives,Clipper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Clipper.cs,Clipper,The constructor "Clipper" calls a virtual method "ClipContent".
Magic Number,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: if (double.IsInfinity (popupMaxHeight) || double.IsNaN (popupMaxHeight)) {  	popupMaxHeight = (rootHeight - myControlHeight) * 3 / 5;  }  
Magic Number,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: if (double.IsInfinity (popupMaxHeight) || double.IsNaN (popupMaxHeight)) {  	popupMaxHeight = (rootHeight - myControlHeight) * 3 / 5;  }  
Magic Number,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: popupMaxHeight = (rootHeight - myControlHeight) * 3 / 5;  
Magic Number,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: popupMaxHeight = (rootHeight - myControlHeight) * 3 / 5;  
Magic Number,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: if (rootHeight < popupY + popupContentHeight) {  	below = false;  	// It doesn't fit below the combobox' lets try putting it above   	// the combobox.  	popupY = rootOffsetY - popupContentHeight;  	if (popupY < 0) {  		// doesn't really fit below either.  Now we just pick top   		// or bottom based on wich area is bigger.  		if (rootOffsetY < (rootHeight - myControlHeight) / 2) {  			below = true;  			popupY = rootOffsetY + myControlHeight;  		} else {  			below = false;  			popupY = rootOffsetY - popupContentHeight;  		}  	}  }  
Magic Number,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: if (popupY < 0) {  	// doesn't really fit below either.  Now we just pick top   	// or bottom based on wich area is bigger.  	if (rootOffsetY < (rootHeight - myControlHeight) / 2) {  		below = true;  		popupY = rootOffsetY + myControlHeight;  	} else {  		below = false;  		popupY = rootOffsetY - popupContentHeight;  	}  }  
Magic Number,System.Windows.Controls,PopupHelper,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: if (rootOffsetY < (rootHeight - myControlHeight) / 2) {  	below = true;  	popupY = rootOffsetY + myControlHeight;  } else {  	below = false;  	popupY = rootOffsetY - popupContentHeight;  }  
Missing Default,System.Windows.Controls,Rating,F:\newReposMay17\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.Key) {  case Key.Left:  	{  		#if SILVERLIGHT  		                        RatingItem ratingItem = FocusManager.GetFocusedElement() as RatingItem; #else  		RatingItem ratingItem = FocusManager.GetFocusedElement (Application.Current.MainWindow) as RatingItem;  		#endif  		if (ratingItem != null) {  			ratingItem = GetRatingItemAtOffsetFrom (ratingItem' -1);  		} else {  			ratingItem = GetRatingItems ().FirstOrDefault ();  		}  		if (ratingItem != null) {  			if (ratingItem.Focus ()) {  				e.Handled = true;  			}  		}  	}  	break;  case Key.Right:  	{  		#if SILVERLIGHT  		                        RatingItem ratingItem = FocusManager.GetFocusedElement() as RatingItem; #else  		RatingItem ratingItem = FocusManager.GetFocusedElement (Application.Current.MainWindow) as RatingItem;  		#endif  		if (ratingItem != null) {  			ratingItem = GetRatingItemAtOffsetFrom (ratingItem' 1);  		} else {  			ratingItem = GetRatingItems ().FirstOrDefault ();  		}  		if (ratingItem != null) {  			if (ratingItem.Focus ()) {  				e.Handled = true;  			}  		}  	}  	break;  case Key.Add:  	{  		if (!this.IsReadOnly) {  			RatingItem ratingItem = GetSelectedRatingItem ();  			if (ratingItem != null) {  				ratingItem = GetRatingItemAtOffsetFrom (ratingItem' 1);  			} else {  				ratingItem = GetRatingItems ().FirstOrDefault ();  			}  			if (ratingItem != null) {  				ratingItem.SelectValue ();  				e.Handled = true;  			}  		}  	}  	break;  case Key.Subtract:  	{  		if (!this.IsReadOnly) {  			RatingItem ratingItem = GetSelectedRatingItem ();  			if (ratingItem != null) {  				ratingItem = GetRatingItemAtOffsetFrom (ratingItem' -1);  			}  			if (ratingItem != null) {  				ratingItem.SelectValue ();  				e.Handled = true;  			}  		}  	}  	break;  }  
