Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Windows.Controls,PopupHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The method has 141 lines of code.
Long Method,System.Windows.Controls,Rating,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,OnKeyDown,The method has 100 lines of code.
Complex Method,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,TextUpdated,Cyclomatic complexity of the method is 8
Complex Method,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,UpdateTextCompletion,Cyclomatic complexity of the method is 9
Complex Method,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,RefreshView,Cyclomatic complexity of the method is 10
Complex Method,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,ItemsSourceCollectionChanged,Cyclomatic complexity of the method is 11
Complex Method,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnKeyDown,Cyclomatic complexity of the method is 10
Complex Method,System.Windows.Controls,AutoCompleteSearch,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteFilter.cs,GetFilter,Cyclomatic complexity of the method is 13
Complex Method,System.Windows.Controls,PopupHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,Cyclomatic complexity of the method is 11
Complex Method,System.Windows.Controls,Rating,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,UpdateValues,Cyclomatic complexity of the method is 8
Complex Method,System.Windows.Controls,Rating,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,OnKeyDown,Cyclomatic complexity of the method is 18
Long Parameter List,System.Windows.Controls,RoutedPropertyChangingEventArgs<T>,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\RoutedPropertyChangingEventArgs.cs,RoutedPropertyChangingEventArgs,The method has 5 parameters. Parameters: property' oldValue' newValue' isCancelable' routedEvent
Long Identifier,System.Windows.Controls,InteractionHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Common\System\Windows\Controls\InteractionHelper.cs,,The length of the parameter SequentialClickThresholdInMilliseconds is 38.
Long Identifier,System.Windows.Controls,InteractionHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Common\System\Windows\Controls\InteractionHelper.cs,,The length of the parameter SequentialClickThresholdInPixelsSquared is 39.
Long Identifier,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the parameter oldValueINotifyCollectionChanged is 32.
Long Identifier,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the parameter newValueINotifyCollectionChanged is 32.
Long Identifier,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,,The length of the parameter _collectionChangedWeakEventListener is 35.
Long Identifier,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,,The length of the parameter IsTextCompletionEnabledProperty is 31.
Long Statement,System.Windows.Controls,InteractionHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Common\System\Windows\Controls\InteractionHelper.cs,UpdateVisualStateBase,The length of the statement  "                VisualStates.GoToState(Control' useTransitions' VisualStates.StatePressed' VisualStates.StateMouseOver' VisualStates.StateNormal); " is 130.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnMinimumPopulateDelayPropertyChanged,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' Properties.Resources.AutoComplete_OnMinimumPopulateDelayPropertyChanged_InvalidValue' newValue)' "value"); " is 178.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnMaxDropDownHeightPropertyChanged,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' Properties.Resources.AutoComplete_OnMaxDropDownHeightPropertyChanged_InvalidValue' e.NewValue)' "value"); " is 177.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,ClosingDropDown,The length of the statement  "            RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' false' true); " is 134.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,ClosingDropDown,The length of the statement  "            RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' false' true' DropDownClosingEvent); " is 156.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OpeningDropDown,The length of the statement  "            RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' true' true); " is 133.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OpeningDropDown,The length of the statement  "            RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' true' true' DropDownOpeningEvent); " is 155.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,HasFocus,The length of the statement  "                this.IsKeyboardFocusWithin ? Keyboard.FocusedElement as DependencyObject : FocusManager.GetFocusedElement(this) as DependencyObject; " is 132.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,TextUpdated,The length of the statement  "            if (IsTextCompletionEnabled && TextBox != null && TextBox.SelectionLength > 0 && TextBox.SelectionStart != TextBox.Text.Length) " is 127.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,UpdateTextCompletion,The length of the statement  "                        object top = FilterMode == AutoCompleteFilterMode.StartsWith || FilterMode == AutoCompleteFilterMode.StartsWithCaseSensitive " is 124.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the statement  "                _collectionChangedWeakEventListener = new WeakEventListener<AutoCompleteBox' object' NotifyCollectionChangedEventArgs>(this); " is 125.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the statement  "                _collectionChangedWeakEventListener.OnEventAction = (instance' source' eventArgs) => instance.ItemsSourceCollectionChanged(source' eventArgs); " is 142.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnItemsSourceChanged,The length of the statement  "                _collectionChangedWeakEventListener.OnDetachAction = (weakEventListener) => newValueINotifyCollectionChanged.CollectionChanged -= weakEventListener.OnEvent; " is 156.
Long Statement,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,UpdateVisualState,The length of the statement  "            VisualStateManager.GoToState(this' IsDropDownOpen ? VisualStates.StatePopupOpened : VisualStates.StatePopupClosed' useTransitions); " is 131.
Long Statement,System.Windows.Controls,SelectorSelectionAdapter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\SelectorSelectionAdapter.cs,SelectedIndexIncrement,The length of the statement  "                SelectorControl.SelectedIndex = SelectorControl.SelectedIndex + 1 >= SelectorControl.Items.Count ? -1 : SelectorControl.SelectedIndex + 1; " is 138.
Long Statement,System.Windows.Controls,Rating,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,UpdateValues,The length of the statement  "                if (oldSelectedItem != null && AutomationPeer.ListenerExists(AutomationEvents.SelectionItemPatternOnElementRemovedFromSelection)) " is 129.
Long Statement,System.Windows.Controls,RatingItem,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\RatingItem.cs,OnDisplayValueChanged,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentUICulture' Properties.Resources.InvalidAttemptToChangeReadOnlyProperty' "DisplayValue")); " is 158.
Long Statement,System.Windows.Controls,RatingItem,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\RatingItem.cs,OnIsReadOnlyChanged,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentUICulture' Properties.Resources.InvalidAttemptToChangeReadOnlyProperty' "IsReadOnly")); " is 156.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,OnFilterModePropertyChanged,The conditional expression  "mode != AutoCompleteFilterMode.Contains &&                  mode != AutoCompleteFilterMode.ContainsCaseSensitive &&                  mode != AutoCompleteFilterMode.ContainsOrdinal &&                  mode != AutoCompleteFilterMode.ContainsOrdinalCaseSensitive &&                  mode != AutoCompleteFilterMode.Custom &&                   mode != AutoCompleteFilterMode.Equals &&                  mode != AutoCompleteFilterMode.EqualsCaseSensitive &&                  mode != AutoCompleteFilterMode.EqualsOrdinal &&                  mode != AutoCompleteFilterMode.EqualsOrdinalCaseSensitive &&                  mode != AutoCompleteFilterMode.None &&                  mode != AutoCompleteFilterMode.StartsWith &&                  mode != AutoCompleteFilterMode.StartsWithCaseSensitive &&                  mode != AutoCompleteFilterMode.StartsWithOrdinal &&                  mode != AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive"  is complex.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,UpdateTextValue,The conditional expression  "(userInitiated == null || userInitiated == false) && TextBox != null && TextBox.Text != value"  is complex.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\AutoCompleteBox.cs,TextUpdated,The conditional expression  "IsTextCompletionEnabled && TextBox != null && TextBox.SelectionLength > 0 && TextBox.SelectionStart != TextBox.Text.Length"  is complex.
Complex Conditional,System.Windows.Controls,PopupHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The conditional expression  "Popup == null                  || PopupChild == null  #if SILVERLIGHT   || OutsidePopupCanvas == null  #endif   || Application.Current == null  #if SILVERLIGHT   || Application.Current.Host == null                  || Application.Current.Host.Content == null  #endif   || false"  is complex.
Complex Conditional,System.Windows.Controls,PopupHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The conditional expression  "rootHeight == 0 || rootWidth == 0 || popupContentWidth == 0 || popupContentHeight == 0"  is complex.
Virtual Method Call from Constructor,System.Windows.Controls.Primitives,Clipper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Clipper.cs,Clipper,The constructor "Clipper" calls a virtual method "ClipContent".
Magic Number,System.Windows.Controls,PopupHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: popupMaxHeight = (rootHeight - myControlHeight) * 3 / 5;
Magic Number,System.Windows.Controls,PopupHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: popupMaxHeight = (rootHeight - myControlHeight) * 3 / 5;
Magic Number,System.Windows.Controls,PopupHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\AutoCompleteBox\System\Windows\Controls\PopupHelper.cs,Arrange,The following statement contains a magic number: rootOffsetY < (rootHeight - myControlHeight) / 2
Missing Default,System.Windows.Controls,Rating,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\WPFToolkit\Source\Input\Rating\System\Windows\Controls\Rating.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.Key)              {                  case Key.Left:                      {  #if SILVERLIGHT                          RatingItem ratingItem = FocusManager.GetFocusedElement() as RatingItem;  #else                          RatingItem ratingItem = FocusManager.GetFocusedElement(Application.Current.MainWindow) as RatingItem;  #endif                          if (ratingItem != null)                          {                              ratingItem = GetRatingItemAtOffsetFrom(ratingItem' -1);                          }                          else                          {                              ratingItem = GetRatingItems().FirstOrDefault();                          }                          if (ratingItem != null)                          {                              if (ratingItem.Focus())                              {                                  e.Handled = true;                              }                          }                      }                      break;                  case Key.Right:                      {  #if SILVERLIGHT                          RatingItem ratingItem = FocusManager.GetFocusedElement() as RatingItem;  #else                          RatingItem ratingItem = FocusManager.GetFocusedElement(Application.Current.MainWindow) as RatingItem;  #endif                          if (ratingItem != null)                          {                              ratingItem = GetRatingItemAtOffsetFrom(ratingItem' 1);                          }                          else                          {                              ratingItem = GetRatingItems().FirstOrDefault();                          }                          if (ratingItem != null)                          {                              if (ratingItem.Focus())                              {                                  e.Handled = true;                              }                          }                                              }                      break;                  case Key.Add:                      {                          if (!this.IsReadOnly)                          {                              RatingItem ratingItem = GetSelectedRatingItem();                              if (ratingItem != null)                              {                                  ratingItem = GetRatingItemAtOffsetFrom(ratingItem' 1);                              }                              else                              {                                  ratingItem = GetRatingItems().FirstOrDefault();                              }                              if (ratingItem != null)                              {                                  ratingItem.SelectValue();                                  e.Handled = true;                              }                          }                      }                      break;                  case Key.Subtract:                      {                          if (!this.IsReadOnly)                          {                              RatingItem ratingItem = GetSelectedRatingItem();                              if (ratingItem != null)                              {                                  ratingItem = GetRatingItemAtOffsetFrom(ratingItem' -1);                              }                              if (ratingItem != null)                              {                                  ratingItem.SelectValue();                                  e.Handled = true;                              }                          }                      }                      break;              }
