Implementation smell,Namespace,Class,File,Method,Description
Long Method,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The method has 147 lines of code.
Long Method,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The method has 111 lines of code.
Long Statement,GraphSharp.Sample,MainWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Exit_Executed); " is 132.
Long Statement,GraphSharp.Sample,MainWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\MainWindow.xaml.cs,Connect,The length of the statement  "            ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.NotificationTest_Executed); " is 156.
Long Statement,GraphSharp.Sample,MainWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\MainWindow.xaml.cs,Connect,The length of the statement  "            ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CompoundLayoutTest_Executed); " is 158.
Long Statement,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The length of the statement  "                                     //    var args = evt as TestingCompoundLayoutIterationEventArgs<object' IEdge<object>' TestingCompoundVertexInfo' object>; " is 122.
Long Statement,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The length of the statement  "                                     //                                         Animate(origo' Canvas.LeftProperty' args.GravitationCenter.X - origo.Width / 2.0' animationDuration); " is 144.
Long Statement,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The length of the statement  "                                     //                                         Animate(origo' Canvas.TopProperty' args.GravitationCenter.Y - origo.Height / 2.0' animationDuration); " is 144.
Long Statement,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/GraphSharp.Sample;component/plaincompoundlayouttest.xaml"' System.UriKind.Relative); " is 130.
Long Statement,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,SaveGraphs,The length of the statement  "					PocSerializeHelper.SaveGraph( model.Graph' Path.Combine( fd.SelectedPath' string.Format( "{0}.{1}"' model.Name' Settings.Default.GraphMLExtension ) ) ); " is 152.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,GraphSharp.Sample,MainWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((GraphSharp.Sample.MainWindow)(target));              return;              case 2:                            #line 99 "..\..\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Exit_Executed);                            #line default              #line hidden              return;              case 3:              this.zoomSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:                            #line 201 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.NotificationTest_Executed);                            #line default              #line hidden              return;              case 5:                            #line 208 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CompoundLayoutTest_Executed);                            #line default              #line hidden              return;              }
Magic Number,GraphSharp.Sample,MainWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((GraphSharp.Sample.MainWindow)(target));              return;              case 2:                            #line 99 "..\..\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Exit_Executed);                            #line default              #line hidden              return;              case 3:              this.zoomSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:                            #line 201 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.NotificationTest_Executed);                            #line default              #line hidden              return;              case 5:                            #line 208 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CompoundLayoutTest_Executed);                            #line default              #line hidden              return;              }
Magic Number,GraphSharp.Sample,MainWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((GraphSharp.Sample.MainWindow)(target));              return;              case 2:                            #line 99 "..\..\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Exit_Executed);                            #line default              #line hidden              return;              case 3:              this.zoomSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:                            #line 201 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.NotificationTest_Executed);                            #line default              #line hidden              return;              case 5:                            #line 208 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CompoundLayoutTest_Executed);                            #line default              #line hidden              return;              }
Magic Number,GraphSharp.Sample,MainWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((GraphSharp.Sample.MainWindow)(target));              return;              case 2:                            #line 99 "..\..\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Exit_Executed);                            #line default              #line hidden              return;              case 3:              this.zoomSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:                            #line 201 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.NotificationTest_Executed);                            #line default              #line hidden              return;              case 5:                            #line 208 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CompoundLayoutTest_Executed);                            #line default              #line hidden              return;              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: origo.Width = 100;
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: origo.Height = 100;
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: Canvas.SetLeft(origo' -5);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: Canvas.SetTop(origo' -5);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: var s = new Size(20' 20);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: var s = new Size(20' 20);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: var b = new Thickness(5' 10' 5' 5);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: var b = new Thickness(5' 10' 5' 5);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: var b = new Thickness(5' 10' 5' 5);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,ShowGraph,The following statement contains a magic number: var b = new Thickness(5' 10' 5' 5);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: graphs = new CompoundGraph<object' IEdge<object>>[10];
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: string[] vertices = InitVertices(g' 20);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i % 5]' vertices[i]);              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i % 5]' vertices[i]);              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i % 5]' vertices[i]);              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[5]' vertices[4]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[5]' vertices[4]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[5]' vertices[2]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[5]' vertices[2]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[0]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[1]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[3]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[3]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[0]' vertices[2]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[4]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[4]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[0]' vertices[7]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[8]' vertices[7]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[8]' vertices[7]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: vertices = InitVertices(g' 10);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[0]' vertices[2]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[4]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[4]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[5]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[5]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[6]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[6]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[7]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[7]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[8]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[8]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[9]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[3]' vertices[9]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[4]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[4]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[1]' vertices[5]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: vertices = InitVertices(g' 10);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[1]' vertices[2]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[3]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[3]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[3]' vertices[0]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[1]' vertices[3]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[0]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: vertices = InitVertices(g' 50);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: vertices = InitVertices(g' 13);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 1; i < 13; i++ )                  g.AddEdge(new Edge<object>(vertices[0]' vertices[i]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 2]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 1]' vertices[i * 3 + 3]));                  g.AddEdge(new Edge<object>(vertices[i * 3 + 2]' vertices[i * 3 + 3]));              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: vertices = InitVertices(g' 51);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[0]' vertices[2]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[3]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[3]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[3]' vertices[4]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[3]' vertices[4]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[10]' vertices[11]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[10]' vertices[11]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[11]' vertices[12]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[11]' vertices[12]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[12]' vertices[13]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[12]' vertices[13]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[13]' vertices[10]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[13]' vertices[10]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i % 5 + 20]' vertices[i + 20]);              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i % 5 + 20]' vertices[i + 20]);              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i % 5 + 20]' vertices[i + 20]);              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i % 5 + 20]' vertices[i + 20]);              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i % 5 + 20]' vertices[i + 20]);              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[25]' vertices[24]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[25]' vertices[24]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[25]' vertices[22]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[25]' vertices[22]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[36]' vertices[20]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[36]' vertices[20]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[36]' vertices[21]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[36]' vertices[21]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[36]' vertices[23]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddChildVertex(vertices[36]' vertices[23]);
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[21]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[21]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[22]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[22]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[22]' vertices[24]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[22]' vertices[24]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[27]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[27]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[28]' vertices[27]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[28]' vertices[27]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[4]' vertices[39]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[4]' vertices[39]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[39]' vertices[40]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[39]' vertices[40]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[39]' vertices[41]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[39]' vertices[41]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[39]' vertices[42]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[39]' vertices[42]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[42]' vertices[43]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[42]' vertices[43]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[42]' vertices[44]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[42]' vertices[44]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[1]' vertices[45]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[45]' vertices[46]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[45]' vertices[46]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[45]' vertices[47]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[45]' vertices[47]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[45]' vertices[48]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[45]' vertices[48]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[48]' vertices[49]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[48]' vertices[49]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[48]' vertices[50]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,InitGraphs,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[48]' vertices[50]));
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,AddLine,The following statement contains a magic number: if (_lineDict.ContainsKey(lineKey))                  line = _lineDict[lineKey];              else              {                  line = new Line();                  _lineDict[lineKey] = line;                  lc.Children.Add(line);                  line.StrokeThickness = 2;                  if (b)                      line.Stroke = Brushes.Black;                  else line.Stroke = Brushes.Silver;              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,AddRect,The following statement contains a magic number: point.X -= size.Width / 2;
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,AddRect,The following statement contains a magic number: point.Y -= size.Height / 2;
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,AddRect,The following statement contains a magic number: if (_rectDict.ContainsKey(rectKey))                  rect = _rectDict[rectKey];              else              {                  rect = new Rectangle();                  _rectDict[rectKey] = rect;                  lc.Children.Add(rect);                  rect.Fill = brushes[bIndex];                  rect.Stroke = Brushes.Black;                  rect.StrokeThickness = 1;                  bIndex = (bIndex + 1) % brushes.Length;                  rect.Opacity = 0.7;              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,Animate,The following statement contains a magic number: var animation = new DoubleAnimation(fromValue' toValue' duration' FillBehavior.HoldEnd)                                  {                                      AccelerationRatio = 0.3'                                      DecelerationRatio = 0.3                                  };
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,Animate,The following statement contains a magic number: var animation = new DoubleAnimation(fromValue' toValue' duration' FillBehavior.HoldEnd)                                  {                                      AccelerationRatio = 0.3'                                      DecelerationRatio = 0.3                                  };
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 11 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Relayout_Click);                            #line default              #line hidden              return;              case 2:                            #line 13 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Pause_Click);                            #line default              #line hidden              return;              case 3:              this.cbGraph = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.txtMessage = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.lc = ((System.Windows.Controls.Canvas)(target));              return;              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 11 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Relayout_Click);                            #line default              #line hidden              return;              case 2:                            #line 13 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Pause_Click);                            #line default              #line hidden              return;              case 3:              this.cbGraph = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.txtMessage = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.lc = ((System.Windows.Controls.Canvas)(target));              return;              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 11 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Relayout_Click);                            #line default              #line hidden              return;              case 2:                            #line 13 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Pause_Click);                            #line default              #line hidden              return;              case 3:              this.cbGraph = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.txtMessage = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.lc = ((System.Windows.Controls.Canvas)(target));              return;              }
Magic Number,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 11 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Relayout_Click);                            #line default              #line hidden              return;              case 2:                            #line 13 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Pause_Click);                            #line default              #line hidden              return;              case 3:              this.cbGraph = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.txtMessage = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.lc = ((System.Windows.Controls.Canvas)(target));              return;              }
Magic Number,GraphSharp.Sample,PocVertex,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PocVertex.cs,ConstrainDouble,The following statement contains a magic number: val = System.Math.Round(val' 3);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: var vertices = new string[30];
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: for (int i = 0; i < 30; i++)              {                  vertices[i] = i.ToString();                  g.AddVertex(vertices[i]);              }
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i%5]' vertices[i]);              }
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i%5]' vertices[i]);              }
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: for (int i = 6; i < 15; i++)              {                  g.AddChildVertex(vertices[i%5]' vertices[i]);              }
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[5]' vertices[4]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[5]' vertices[4]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[5]' vertices[2]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[5]' vertices[2]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[0]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[1]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[3]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[3]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[20]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[20]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[21]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[21]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[22]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[22]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[23]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[23]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[24]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[16]' vertices[24]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[4]' vertices[25]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[4]' vertices[25]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[4]' vertices[26]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[4]' vertices[26]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[4]' vertices[27]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddChildVertex(vertices[4]' vertices[27]);
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[0]' vertices[2]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[4]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[2]' vertices[4]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[0]' vertices[7]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[8]' vertices[7]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[8]' vertices[7]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[3]' vertices[20]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[3]' vertices[20]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[21]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[21]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[22]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[20]' vertices[22]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[22]' vertices[23]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[22]' vertices[23]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[23]' vertices[24]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[23]' vertices[24]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[0]' vertices[28]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[0]' vertices[29]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[25]' vertices[27]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[25]' vertices[27]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[26]' vertices[25]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[26]' vertices[25]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[14]' vertices[27]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[14]' vertices[27]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[14]' vertices[26]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[14]' vertices[26]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[14]' vertices[25]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[14]' vertices[25]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[26]' vertices[27]));
Magic Number,GraphSharp.Sample,TestCompoundLayout,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestCompoundLayout.xaml.cs,TestCompoundLayout,The following statement contains a magic number: g.AddEdge(new Edge<object>(vertices[26]' vertices[27]));
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,Button_Click,The following statement contains a magic number: int rnd = random.Next(13) + 2;
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,Button_Click,The following statement contains a magic number: int rnd = random.Next(13) + 2;
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,Button_Click,The following statement contains a magic number: rnd = random.Next(graph.VertexCount * 2) + 2;
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,Button_Click,The following statement contains a magic number: rnd = random.Next(graph.VertexCount * 2) + 2;
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,AddVertex_Click,The following statement contains a magic number: if (graph == null || graph.VertexCount >= 100)                  return;
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,AddVertex_Click,The following statement contains a magic number: int verticesToAdd = Math.Max(graph.VertexCount / 4' 1);
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,AddVertex_Click,The following statement contains a magic number: for (int i = 0; i < verticesToAdd; i++)              {                  string newVertex = string.Empty;                  do                  {                      newVertex = rnd.Next(0' graph.VertexCount + 20) + "_new";                  } while (graph.ContainsVertex(newVertex));                  graph.AddVertex(newVertex);                    if (graph.VertexCount < 2)                      return;                    //string vo1 = graph.Vertices.ElementAt(rnd.Next(Math.Max(9 * graph.VertexCount / 10' graph.VertexCount - 1)));                  graph.AddEdge(new Edge<string>(parents[i]' newVertex));              }
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,AddVertex_Click,The following statement contains a magic number: for (int i = 0; i < verticesToAdd; i++)              {                  string newVertex = string.Empty;                  do                  {                      newVertex = rnd.Next(0' graph.VertexCount + 20) + "_new";                  } while (graph.ContainsVertex(newVertex));                  graph.AddVertex(newVertex);                    if (graph.VertexCount < 2)                      return;                    //string vo1 = graph.Vertices.ElementAt(rnd.Next(Math.Max(9 * graph.VertexCount / 10' graph.VertexCount - 1)));                  graph.AddEdge(new Edge<string>(parents[i]' newVertex));              }
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,RemoveVertex_Click,The following statement contains a magic number: for (int i = 0; i < 10 && graph.VertexCount > 1; i++)                  graph.RemoveVertex(graph.Vertices.ElementAt(rnd.Next(graph.VertexCount)));
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,RemoveEdge_Click,The following statement contains a magic number: for (int i = 0; i < 10 && graph.EdgeCount > 0; i++)                  graph.RemoveEdge(graph.Edges.ElementAt(rnd.Next(graph.EdgeCount)));
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,AddEdge_Click,The following statement contains a magic number: if (graph.VertexCount < 2)                  return;
Magic Number,GraphSharp.Sample,TestWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\TestWindow.xaml.cs,AddEdge_Click,The following statement contains a magic number: for (int i = 0; i < 10; i++)              {                  int v1 = rnd.Next(graph.VertexCount);                  int v2 = rnd.Next(graph.VertexCount);                    string vo1 = graph.Vertices.ElementAt(v1);                  string vo2 = graph.Vertices.ElementAt(v2);                    graph.AddEdge(new Edge<string>(vo1' vo2));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 11; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                    graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("ImporterToTarget"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(2)));                  graph.AddEdge(new PocEdge("ImporterToSource"' graph.Vertices.ElementAt(1)' graph.Vertices.ElementAt(3)));                    // Target Side                  graph.AddEdge(new PocEdge("TargetCleanupToStopword"' graph.Vertices.ElementAt(2)' graph.Vertices.ElementAt(4)));                  graph.AddEdge(new PocEdge("TargetStopwordToStemmer"' graph.Vertices.ElementAt(4)' graph.Vertices.ElementAt(6)));                  graph.AddEdge(new PocEdge("TargetStemmerToDictionary"' graph.Vertices.ElementAt(6)' graph.Vertices.ElementAt(8)));                  graph.AddEdge(new PocEdge("TargetDictionaryToTracer"' graph.Vertices.ElementAt(8)' graph.Vertices.ElementAt(9)));                    // Source side                  graph.AddEdge(new PocEdge("SourceCleanupToStopword"' graph.Vertices.ElementAt(3)' graph.Vertices.ElementAt(5)));                  graph.AddEdge(new PocEdge("SourceStopwordToStemmer"' graph.Vertices.ElementAt(5)' graph.Vertices.ElementAt(7)));                  graph.AddEdge(new PocEdge("SourceStemmerToTracer"' graph.Vertices.ElementAt(7)' graph.Vertices.ElementAt(9)));                      graph.AddEdge(new PocEdge("DecisionToImporter"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(1)));                  graph.AddEdge(new PocEdge("DecisionToEnd"' graph.Vertices.ElementAt(9)' graph.Vertices.ElementAt(10)));                    GraphModels.Add(new GraphModel("Fa"' graph));              }
Magic Number,GraphSharp.Sample.ViewModel,LayoutAnalyzerViewModel,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\ViewModel\LayoutAnalyzerViewModel.cs,CreateSampleGraphs,The following statement contains a magic number: {                  var graph = new PocGraph();                    for (int j = 0; j < 2; i++' j++)                  {                      var v = new PocVertex(i.ToString());                      graph.AddVertex(v);                      v.Desc = "test" + i.ToString();                  }                  graph.AddEdge(new PocEdge("StartToImporter"' graph.Vertices.ElementAt(0)' graph.Vertices.ElementAt(1)));                    GraphModels.Add(new GraphModel("Fb"' graph));              }
Missing Default,GraphSharp.Sample,MainWindow,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.root = ((GraphSharp.Sample.MainWindow)(target));              return;              case 2:                            #line 99 "..\..\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Exit_Executed);                            #line default              #line hidden              return;              case 3:              this.zoomSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:                            #line 201 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.NotificationTest_Executed);                            #line default              #line hidden              return;              case 5:                            #line 208 "..\..\MainWindow.xaml"              ((Microsoft.Windows.Controls.Ribbon.RibbonCommand)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CompoundLayoutTest_Executed);                            #line default              #line hidden              return;              }
Missing Default,GraphSharp.Sample,PlainCompoundLayoutTest,C:\repos\CoEST_TraceLab\Main\external\GraphSharp\Source\GraphSharp.Sample\PlainCompoundLayoutTest.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 11 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Relayout_Click);                            #line default              #line hidden              return;              case 2:                            #line 13 "..\..\PlainCompoundLayoutTest.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Pause_Click);                            #line default              #line hidden              return;              case 3:              this.cbGraph = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:              this.txtMessage = ((System.Windows.Controls.TextBlock)(target));              return;              case 5:              this.lc = ((System.Windows.Controls.Canvas)(target));              return;              }
