Method,LOC,CC,PC
AlgorithmBase:Compute,5,1,0
AlgorithmBase:InternalCompute,0,1,0
AlgorithmBase:Abort,14,2,0
AlgorithmBase:OnStateChanged,5,2,1
AlgorithmBase:OnStarted,5,2,1
AlgorithmBase:OnFinished,5,2,1
AlgorithmBase:OnAborted,5,2,1
AlgorithmBase:BeginComputation,11,1,0
AlgorithmBase:EndComputation,20,1,0
IAlgorithm:Compute,0,1,0
IAlgorithm:Abort,0,1,0
LayeredTopologicalSortAlgorithm<TVertex;TEdge>:LayeredTopologicalSortAlgorithm,7,2,1
LayeredTopologicalSortAlgorithm<TVertex;TEdge>:InternalCompute,35,6,0
LayeredTopologicalSortAlgorithm<TVertex;TEdge>:GetSources,5,1,1
LayeredTopologicalSortAlgorithm<TVertex;TEdge>:OnLayerFinished,4,2,1
FactoryHelper:CreateNewParameter,5,1,1
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:HighlightAlgorithmBase,5,1,2
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:ResetHighlight,0,1,0
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:OnVertexHighlighting,0,1,1
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:OnVertexHighlightRemoving,0,1,1
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:OnEdgeHighlighting,0,1,1
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:OnEdgeHighlightRemoving,0,1,1
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:IsParametersSettable,3,1,1
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:TrySetParameters,12,4,1
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:OnParametersChanged,3,1,0
HighlightAlgorithmBase<TVertex;TEdge;TGraph;TParameters>:OnParameterPropertyChanged,3,1,2
HighlightContext<TVertex;TEdge;TGraph>:HighlightContext,3,1,1
HighlightParameterBase:Clone,3,1,0
HighlightParameterBase:OnPropertyChanged,4,2,1
IHighlightAlgorithm:ResetHighlight,0,1,0
IHighlightAlgorithm:OnVertexHighlighting,0,1,1
IHighlightAlgorithm:OnVertexHighlightRemoving,0,1,1
IHighlightAlgorithm:OnEdgeHighlighting,0,1,1
IHighlightAlgorithm:OnEdgeHighlightRemoving,0,1,1
IHighlightAlgorithm:IsParametersSettable,0,1,1
IHighlightAlgorithm:TrySetParameters,0,1,1
IHighlightAlgorithmFactory:IsValidMode,0,1,1
IHighlightAlgorithmFactory:CreateAlgorithm,0,1,4
IHighlightAlgorithmFactory:CreateParameters,0,1,2
IHighlightAlgorithmFactory:GetHighlightMode,0,1,1
IHighlightController:IsHighlightedVertex,0,1,1
IHighlightController:IsHighlightedVertex,0,1,2
IHighlightController:IsSemiHighlightedVertex,0,1,1
IHighlightController:IsSemiHighlightedVertex,0,1,2
IHighlightController:IsHighlightedEdge,0,1,1
IHighlightController:IsHighlightedEdge,0,1,2
IHighlightController:IsSemiHighlightedEdge,0,1,1
IHighlightController:IsSemiHighlightedEdge,0,1,2
IHighlightController:HighlightVertex,0,1,2
IHighlightController:SemiHighlightVertex,0,1,2
IHighlightController:HighlightEdge,0,1,2
IHighlightController:SemiHighlightEdge,0,1,2
IHighlightController:RemoveHighlightFromVertex,0,1,1
IHighlightController:RemoveSemiHighlightFromVertex,0,1,1
IHighlightController:RemoveHighlightFromEdge,0,1,1
IHighlightController:RemoveSemiHighlightFromEdge,0,1,1
SimpleHighlightAlgorithm<TVertex;TEdge;TGraph>:SimpleHighlightAlgorithm,2,1,2
SimpleHighlightAlgorithm<TVertex;TEdge;TGraph>:ClearSemiHighlights,6,3,0
SimpleHighlightAlgorithm<TVertex;TEdge;TGraph>:ClearAllHighlights,7,3,0
SimpleHighlightAlgorithm<TVertex;TEdge;TGraph>:ResetHighlight,3,1,0
SimpleHighlightAlgorithm<TVertex;TEdge;TGraph>:OnVertexHighlighting,23,6,1
SimpleHighlightAlgorithm<TVertex;TEdge;TGraph>:OnVertexHighlightRemoving,4,1,1
SimpleHighlightAlgorithm<TVertex;TEdge;TGraph>:OnEdgeHighlighting,10,2,1
SimpleHighlightAlgorithm<TVertex;TEdge;TGraph>:OnEdgeHighlightRemoving,4,1,1
StandardHighlightAlgorithmFactory<TVertex;TEdge;TGraph>:IsValidMode,3,1,1
StandardHighlightAlgorithmFactory<TVertex;TEdge;TGraph>:CreateAlgorithm,9,2,4
StandardHighlightAlgorithmFactory<TVertex;TEdge;TGraph>:CreateParameters,9,2,2
StandardHighlightAlgorithmFactory<TVertex;TEdge;TGraph>:GetHighlightMode,5,2,1
BalloonTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:BalloonTreeLayoutAlgorithm,6,1,5
BalloonTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,7,1,0
BalloonTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:FirstWalk,21,3,1
BalloonTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:SecondWalk,25,3,6
BalloonTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:SetRadius,3,1,2
BalloonTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:AdjustChildren,12,2,3
BalloonTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:InitializeData,5,2,0
SimpleTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:SimpleTreeLayoutAlgorithm,5,1,4
SimpleTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,21,6,0
SimpleTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:GenerateSpanningTree,19,2,0
SimpleTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:CalculatePosition,47,5,3
SimpleTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:AssignPositions,24,5,0
Layer:Layer,3,1,0
CircularLayoutAlgorithm<TVertex;TEdge;TGraph>:CircularLayoutAlgorithm,5,1,4
CircularLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,41,6,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,58,7,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:SavePositions,29,2,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:GrowTreesOneLevel,15,3,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:GetSpringForce,28,5,5
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:GetRepulsionForce,23,3,5
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:ApplySpringForces,34,7,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:ApplyRepulsionForces,27,9,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:ApplyGravitationForces,17,4,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:ApplyApplicationSpecificForces,2,1,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:CalcNodePositionsAndSizes,10,3,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:IsInterGraphEdge,3,1,1
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:CompoundFDPLayoutAlgorithm,2,1,4
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:CompoundFDPLayoutAlgorithm,9,2,6
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:LevelOfVertex,3,1,1
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:RemoveAll,6,2,2
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:Init,13,1,3
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:InitGravitationMagnitude,13,3,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:RemoveTreeNodesFromRootGraph,37,9,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:InitMovableParentOfFixedVertices,34,7,1
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:InitSimpleVertices,20,2,1
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:InitCompoundVertices,50,7,4
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:InitialLevels,23,5,0
CompoundFDPLayoutAlgorithm<TVertex;TEdge;TGraph>:SetLevelIndices,11,3,0
RemovedTreeNodeData<TVertex;TEdge>:RemovedTreeNodeData,6,1,2
CompoundVertexData:CompoundVertexData,7,1,7
CompoundVertexData:PropogateToChildren,6,2,1
CompoundVertexData:ApplyForce,5,1,1
CompoundVertexData:RecalculateBounds,18,3,0
SimpleVertexData:SimpleVertexData,3,1,5
SimpleVertexData:ApplyForce,3,1,1
VertexData:VertexData,7,1,4
VertexData:ApplyForce,0,1,1
VertexData:ApplyForce,21,3,1
CompoundLayoutContext<TVertex;TEdge;TGraph>:CompoundLayoutContext,7,1,6
CompoundLayoutIterationEventArgs<TVertex;TEdge>:CompoundLayoutIterationEventArgs,3,1,5
TestingCompoundLayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:TestingCompoundLayoutIterationEventArgs,4,1,7
TestingCompoundLayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:GetVertexInfo,6,2,1
TestingCompoundVertexInfo:TestingCompoundVertexInfo,6,1,4
DoubleTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:DoubleTreeLayoutAlgorithm,6,1,5
DoubleTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,92,10,0
DoubleTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:SeparateSides,40,1,4
RadialTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:RadialTreeLayoutAlgorithm,3,1,4
RadialTreeLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,3,1,0
ContextualLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:CreateAlgorithm,12,2,3
ContextualLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:CreateParameters,11,2,2
ContextualLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:GetAlgorithmType,9,3,1
ContextualLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:IsValidAlgorithm,3,1,1
ContextualLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:NeedEdgeRouting,3,1,1
ContextualLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:NeedOverlapRemoval,3,1,1
ContextualLayoutContext<TVertex;TEdge;TGraph>:ContextualLayoutContext,4,1,4
EdgeRoutingAlgorithmBase<TVertex;TEdge;TGraph>:EdgeRoutingAlgorithmBase,3,1,2
EdgeRoutingParameters:Clone,3,1,0
EdgeRoutingParameters:NotifyChanged,4,2,1
IEdgeRoutingAlgorithmFactory:CreateAlgorithm,0,1,3
IEdgeRoutingAlgorithmFactory:CreateParameters,0,1,2
IEdgeRoutingAlgorithmFactory:IsValidAlgorithm,0,1,1
IEdgeRoutingAlgorithmFactory:GetAlgorithmType,0,1,1
StandardEdgeRoutingAlgorithmFactory<TVertex;TEdge;TGraph>:CreateAlgorithm,3,1,3
StandardEdgeRoutingAlgorithmFactory<TVertex;TEdge;TGraph>:CreateParameters,3,1,2
StandardEdgeRoutingAlgorithmFactory<TVertex;TEdge;TGraph>:IsValidAlgorithm,3,1,1
StandardEdgeRoutingAlgorithmFactory<TVertex;TEdge;TGraph>:GetAlgorithmType,3,1,1
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:InvariantMethod,5,1,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:EfficientSugiyamaLayoutAlgorithm,1,1,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:EfficientSugiyamaLayoutAlgorithm,3,1,4
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:InitTheGraph,20,4,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,8,1,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoCrossingMinimizations,38,2,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:Sweeping,56,5,6
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:OutputAlternatingLayer,20,3,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:ReplaceLayer,11,3,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CrossingMinimizationBetweenLayers,22,1,6
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:FindVerticesWithSameMeasure,34,7,4
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AddAlternatingLayerToSparseCompactionGraph,40,7,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoCrossCountingAndOptimization,109,7,6
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:ReinsertVerticesIntoLayer,12,3,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:ConvertRealEdgesToCrossCounterPairs,20,3,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:FindRealEdges,12,4,1
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:FindVirtualEdgePairs,40,5,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:Permutate,7,2,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:PermutateSomeHow,7,2,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:PermutateRandom,8,2,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:Permutate,28,5,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:BiLayerCrossCount,118,18,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:GetContainerLikeItems,18,3,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:PlaceQVertices,33,7,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AppendSegmentsToAlternatingLayer,17,3,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:ComputeMeasureValues,4,1,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:InitialOrderingOfNextLayer,37,5,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AssignPositionsOnActualLayer,31,5,1
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AssignMeasuresOnNextLayer,29,5,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:BuildSparseNormalizedGraph,7,2,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoWidthAndHeightOptimization,12,2,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:RewriteLayerIndexes,11,3,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoWHOptimizationStep,77,5,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CreateLayerWHOptInfos,39,8,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CreateVertexWHOptInfos,16,3,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:RemoveParallelEdges,11,4,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CreateInitialLayering,33,8,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CreateDummyVerticesAndSegments,43,5,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AddSegment,10,1,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AddDummyVertex,12,1,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoPreparing,5,1,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:RemoveIsolatedVertices,5,2,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:RemoveLoops,3,1,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:RemoveCycles,13,2,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CalculatePositions,16,5,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoEdgeRouting,13,2,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoOrthogonalEdgeRouting,37,4,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoTraditionalEdgeRouting,12,3,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SavePositions,7,3,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:PutbackIsolatedVertices,25,4,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CalculateLayerHeightsAndPositions,10,3,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CalculateRealPositions,21,3,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CalculateVerticalPositions,4,2,0
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CalculateHorizontalPositions,8,1,2
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:WriteOutAlignment,14,2,1
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:InitializeSinksAndShifts,8,2,1
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:PlaceBlock,61,2,4
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoHorizontalCompaction,14,5,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:DoAlignment,95,12,3
EfficientSugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:InitializeRootsAndAligns,8,2,1
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaLayoutAlgorithm,7,1,5
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaLayoutAlgorithm,6,1,4
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:ConvertGraph,21,3,1
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:FilterCycles,14,2,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:FilterParallelEdges,18,6,1
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:FilterIsolatedVertices,3,1,1
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:FilterLoops,3,1,1
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:FiltersAndRemovals,12,1,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AssignLayers,9,2,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:MinimizeHierarchicalEdgeLong,20,6,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:ReplaceLongEdges,38,6,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:ConstrainWidth,3,1,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:PrepareForSugiyama,54,10,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaPhase1Sweep,35,6,6
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaPhase2Sweep,27,5,5
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaDirtyPhase,7,2,1
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaPhase1,12,3,3
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaPhase1,3,1,1
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaPhase2,16,3,3
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:SugiyamaLayout,62,9,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AssignPriorities,4,2,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CalculateOverlap,3,1,2
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CalculateOverlap,3,1,3
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:HorizontalPositionAssignmentOnLayer,147,16,2
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:HorizontalPositionAssignmentSweep,4,2,4
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:HorizontalPositionAssignment,10,2,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:AssignPositions,21,3,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CopyPositionsSilent,3,1,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CopyPositionsSilent,49,10,1
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:CopyPositions,4,1,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,26,1,0
SugiyamaLayoutAlgorithm<TVertex;TEdge;TGraph>:OnIterationEnded,3,1,1
SugiEdge:SugiEdge,3,1,4
SugiEdge:ContractInvariants,7,1,0
SugiEdge:SugiEdge,1,1,3
SugiEdge:SaveMarkedToTemp,3,1,0
SugiEdge:LoadMarkedFromTemp,3,1,0
SugiVertex:SugiVertex,3,1,2
SugiVertex:ToString,3,1,0
SugiVertex:SugiVertex,3,1,0
SugiVertex:SugiVertex,3,1,2
SugiVertex:SavePositionToTemp,3,1,0
SugiVertex:LoadPositionFromTemp,3,1,0
VertexLayer:VertexLayer,5,1,3
VertexLayer:CalculateCrossCount,3,1,1
VertexLayer:CalculateCrossCount,10,3,3
VertexLayer:CalculateCrossings,47,6,3
VertexLayer:Add,5,1,1
VertexLayer:AddRange,6,2,1
VertexLayer:Remove,4,1,1
VertexLayer:Measure,15,5,2
VertexLayer:Measure,10,4,6
VertexLayer:ComputeBaryCenter,15,4,3
VertexLayer:ComputeHeight,3,1,0
VertexLayer:IsOrderedByBaryCenters,13,4,2
VertexLayer:SortByMeasure,6,1,0
VertexLayer:SavePositionsToTemp,4,2,0
VertexLayer:LoadPositionsFromTemp,4,2,0
VertexLayer:Permutate,28,5,1
VertexLayer:FindBestPermutation,42,9,1
VertexLayer:ReassignPositions,5,2,0
VertexLayer:CalculateSubPriorities,28,4,0
MeasureComparer:MeasureComparer,1,1,0
MeasureComparer:Compare,3,1,2
PositionComparer:PositionComparer,1,1,0
PositionComparer:Compare,3,1,2
MeasureAndPermutationIndexComparer:MeasureAndPermutationIndexComparer,1,1,0
MeasureAndPermutationIndexComparer:Compare,6,2,2
AlternatingLayer:EnsureAlternatingAndPositions,30,4,0
AlternatingLayer:EnsurePositions,31,5,0
AlternatingLayer:SetPositions,18,3,0
AlternatingLayer:Clone,12,3,0
AlternatingLayer:Clone,3,1,0
SugiVertex<TVertex>:InvariantContracts,9,1,0
SugiVertex<TVertex>:SugiVertex,1,1,0
SugiVertex<TVertex>:SugiVertex,6,1,1
Segment:InvariantContracts,4,1,0
ISegmentContainer:Append,0,1,1
ISegmentContainer:Join,0,1,1
ISegmentContainer:Split,0,1,3
ISegmentContainer:Split,0,1,3
SegmentContainer:SegmentContainer,1,1,0
SegmentContainer:SegmentContainer,1,1,1
SegmentContainer:Append,3,1,1
SegmentContainer:Join,3,1,1
SegmentContainer:Split,7,1,3
SegmentContainer:Split,6,1,3
SegmentContainer:Split,13,3,4
SegmentContainer:Clone,3,1,0
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo;TParam>:ParameterizedLayoutAlgorithmBase,1,1,1
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo;TParam>:ParameterizedLayoutAlgorithmBase,2,1,3
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo;TParam>:CreateLayoutIterationEventArgs,3,1,4
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo;TParam>:GetVertexInfo,6,2,1
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo;TParam>:GetEdgeInfo,6,2,1
DefaultParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:DefaultParameterizedLayoutAlgorithmBase,2,1,1
DefaultParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:DefaultParameterizedLayoutAlgorithmBase,2,1,3
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:GetParameters,3,1,0
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:ParameterizedLayoutAlgorithmBase,1,1,1
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:ParameterizedLayoutAlgorithmBase,4,1,3
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:InitParameters,8,2,1
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:InitializeWithRandomPositions,3,1,2
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:InitializeWithRandomPositions,15,3,4
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:NormalizePositions,6,1,0
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:NormalizePositions,19,4,1
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:OnIterationEnded,12,2,4
ParameterizedLayoutAlgorithmBase<TVertex;TEdge;TGraph;TParam>:CreateLayoutIterationEventArgs,3,1,4
ILayoutAlgorithm:GetVertexInfo,0,1,1
ILayoutAlgorithm:GetEdgeInfo,0,1,1
ILayoutAlgorithmFactory:CreateAlgorithm,0,1,3
ILayoutAlgorithmFactory:CreateParameters,0,1,2
ILayoutAlgorithmFactory:IsValidAlgorithm,0,1,1
ILayoutAlgorithmFactory:GetAlgorithmType,0,1,1
ILayoutAlgorithmFactory:NeedEdgeRouting,0,1,1
ILayoutAlgorithmFactory:NeedOverlapRemoval,0,1,1
IParameterizedLayoutAlgorithm:GetParameters,0,1,0
LayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo>:LayoutAlgorithmBase,2,1,1
LayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo>:LayoutAlgorithmBase,2,1,2
LayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo>:GetVertexInfo,6,2,1
LayoutAlgorithmBase<TVertex;TEdge;TGraph;TVertexInfo;TEdgeInfo>:GetEdgeInfo,6,2,1
LayoutAlgorithmBase<TVertex;TEdge;TGraph>:LayoutAlgorithmBase,2,1,1
LayoutAlgorithmBase<TVertex;TEdge;TGraph>:LayoutAlgorithmBase,8,2,2
LayoutAlgorithmBase<TVertex;TEdge;TGraph>:OnIterationEnded,9,3,1
LayoutAlgorithmBase<TVertex;TEdge;TGraph>:OnProgressChanged,4,2,1
LayoutAlgorithmBase<TVertex;TEdge;TGraph>:GetVertexInfo,3,1,1
LayoutAlgorithmBase<TVertex;TEdge;TGraph>:GetEdgeInfo,3,1,1
LayoutContext<TVertex;TEdge;TGraph>:LayoutContext,8,1,4
LayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:LayoutIterationEventArgs,1,1,0
LayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:LayoutIterationEventArgs,1,1,2
LayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:LayoutIterationEventArgs,1,1,3
LayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:LayoutIterationEventArgs,1,1,3
LayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:LayoutIterationEventArgs,4,1,6
LayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:GetVertexInfo,6,2,1
LayoutIterationEventArgs<TVertex;TEdge;TVertexInfo;TEdgeInfo>:GetEdgeInfo,6,2,1
LayoutIterationEventArgs<TVertex;TEdge>:LayoutIterationEventArgs,1,1,0
LayoutIterationEventArgs<TVertex;TEdge>:LayoutIterationEventArgs,1,1,2
LayoutIterationEventArgs<TVertex;TEdge>:LayoutIterationEventArgs,1,1,3
LayoutIterationEventArgs<TVertex;TEdge>:LayoutIterationEventArgs,1,1,3
LayoutIterationEventArgs<TVertex;TEdge>:LayoutIterationEventArgs,7,1,4
LayoutIterationEventArgs<TVertex;TEdge>:GetVertexInfo,3,1,1
LayoutIterationEventArgs<TVertex;TEdge>:GetEdgeInfo,3,1,1
LayoutParametersBase:Clone,3,1,0
LayoutParametersBase:NotifyPropertyChanged,5,2,1
LayoutState<TVertex;TEdge>:LayoutState,12,2,6
LayoutUtil:BiLayerCrossCount,73,14,3
LayoutUtil:GetClippingPoint,21,5,3
LayoutUtil:IsSameDirection,3,1,2
LayoutUtil:BiLayerCrossCount,20,4,1
StandardLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:CreateAlgorithm,74,4,3
StandardLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:CreateParameters,27,2,2
StandardLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:IsValidAlgorithm,3,1,1
StandardLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:GetAlgorithmType,9,3,1
StandardLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:NeedEdgeRouting,3,1,1
StandardLayoutAlgorithmFactory<TVertex;TEdge;TGraph>:NeedOverlapRemoval,7,1,1
ILayoutInfoIterationEventArgs:GetVertexInfo,0,1,1
ILayoutInfoIterationEventArgs:GetEdgeInfo,0,1,1
FRLayoutAlgorithm<Vertex;Edge;Graph>:FRLayoutAlgorithm,1,1,1
FRLayoutAlgorithm<Vertex;Edge;Graph>:FRLayoutAlgorithm,1,1,3
FRLayoutAlgorithm<Vertex;Edge;Graph>:InternalCompute,42,5,0
FRLayoutAlgorithm<Vertex;Edge;Graph>:IterateOne,53,6,0
BoundedFRLayoutParameters:UpdateParameters,5,1,0
ISOMLayoutAlgorithm<TVertex;TEdge;TGraph>:ISOMLayoutAlgorithm,3,1,2
ISOMLayoutAlgorithm<TVertex;TEdge;TGraph>:ISOMLayoutAlgorithm,3,1,3
ISOMLayoutAlgorithm<TVertex;TEdge;TGraph>:Init,7,1,1
ISOMLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,31,6,0
ISOMLayoutAlgorithm<TVertex;TEdge;TGraph>:Adjust,16,2,0
ISOMLayoutAlgorithm<TVertex;TEdge;TGraph>:AdjustVertex,32,5,1
ISOMLayoutAlgorithm<TVertex;TEdge;TGraph>:GetClosest,15,3,1
KKLayoutAlgorithm<Vertex;Edge;Graph>:KKLayoutAlgorithm,1,1,2
KKLayoutAlgorithm<Vertex;Edge;Graph>:KKLayoutAlgorithm,1,1,3
KKLayoutAlgorithm<Vertex;Edge;Graph>:InternalCompute,99,1,0
KKLayoutAlgorithm<Vertex;Edge;Graph>:Report,8,2,1
KKLayoutAlgorithm<Vertex;Edge;Graph>:CalcEnergyIfExchanged,20,3,2
KKLayoutAlgorithm<Vertex;Edge;Graph>:CalcEnergy,17,3,0
KKLayoutAlgorithm<Vertex;Edge;Graph>:CalcDeltaXY,33,3,1
KKLayoutAlgorithm<Vertex;Edge;Graph>:CalculateEnergyGradient,21,3,1
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:LinLogLayoutAlgorithm,1,1,1
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:LinLogLayoutAlgorithm,1,1,3
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:InternalCompute,85,12,0
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:CopyPositions,5,2,0
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:Report,4,1,1
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:GetDirection,17,3,3
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:AddGravitationDirection,8,1,2
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:AddAttractionDirection,18,4,2
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:AddRepulsionDirection,22,5,3
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:GetEnergy,4,1,2
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:GetGravitationEnergy,6,1,1
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:GetAttractionEnergy,12,3,1
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:GetRepulsionEnergy,17,5,2
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:InitAlgorithm,52,5,0
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:ComputeBaryCenter,15,3,0
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:ComputeRepulsionMultiplier,7,2,0
LinLogLayoutAlgorithm<TVertex;TEdge;TGraph>:BuildQuadTree,26,6,0
QuadTree:QuadTree,7,1,5
QuadTree:AddNode,13,3,4
QuadTree:AddNode2,42,6,4
QuadTree:MoveNode,12,4,3
FRLayoutParametersBase:UpdateParameters,4,1,0
FRLayoutParametersBase:CalculateConstantOfRepulsion,4,1,0
FRLayoutParametersBase:CalculateConstantOfAttraction,4,1,0
FRLayoutParametersBase:FRLayoutParametersBase,4,1,0
FSAAlgorithm<TObject>:FSAAlgorithm,3,1,2
FSAAlgorithm<TObject;TParam>:FSAAlgorithm,3,1,2
FSAAlgorithm<TObject;TParam>:RemoveOverlap,11,1,0
FSAAlgorithm<TObject;TParam>:force,21,3,2
FSAAlgorithm<TObject;TParam>:force2,18,3,2
FSAAlgorithm<TObject;TParam>:XComparison,13,3,2
FSAAlgorithm<TObject;TParam>:Horizontal,43,8,0
FSAAlgorithm<TObject;TParam>:HorizontalImproved,87,13,0
FSAAlgorithm<TObject;TParam>:YComparison,13,3,2
FSAAlgorithm<TObject;TParam>:Vertical,42,8,0
FSAAlgorithm<TObject;TParam>:VerticalImproved,81,13,0
IOverlapRemovalAlgorithm:GetParameters,0,1,0
IOverlapRemovalAlgorithmFactory:CreateAlgorithm,0,1,3
IOverlapRemovalAlgorithmFactory:CreateParameters,0,1,2
IOverlapRemovalAlgorithmFactory:IsValidAlgorithm,0,1,1
IOverlapRemovalAlgorithmFactory:GetAlgorithmType,0,1,1
OneWayFSAAlgorithm<TObject>:OneWayFSAAlgorithm,3,1,2
OneWayFSAAlgorithm<TObject>:RemoveOverlap,13,2,0
OneWayFSAAlgorithm<TObject>:HorizontalImproved,90,14,0
OverlapRemovalAlgorithmBase<TObject;TParam>:GetParameters,3,1,0
OverlapRemovalAlgorithmBase<TObject;TParam>:OverlapRemovalAlgorithmBase,15,2,2
OverlapRemovalAlgorithmBase<TObject;TParam>:InternalCompute,7,2,0
OverlapRemovalAlgorithmBase<TObject;TParam>:AddGaps,8,2,0
OverlapRemovalAlgorithmBase<TObject;TParam>:RemoveGaps,8,2,0
OverlapRemovalAlgorithmBase<TObject;TParam>:RemoveOverlap,0,1,0
OverlapRemovalContext<TVertex>:OverlapRemovalContext,4,1,1
OverlapRemovalHelper:GetCenter,3,1,1
OverlapRemovalParameters:Clone,3,1,0
OverlapRemovalParameters:NotifyChanged,4,2,1
RectangleWrapper<TObject>:RectangleWrapper,4,1,2
StandardOverlapRemovalAlgorithmFactory<TVertex>:CreateAlgorithm,13,3,3
StandardOverlapRemovalAlgorithmFactory<TVertex>:CreateParameters,15,2,2
StandardOverlapRemovalAlgorithmFactory<TVertex>:GetAlgorithmType,8,2,1
StandardOverlapRemovalAlgorithmFactory<TVertex>:IsValidAlgorithm,3,1,1
CompoundGraph<TVertex;TEdge>:CompoundGraph,2,1,0
CompoundGraph<TVertex;TEdge>:CompoundGraph,2,1,1
CompoundGraph<TVertex;TEdge>:CompoundGraph,2,1,2
CompoundGraph<TVertex;TEdge>:CompoundGraph,7,1,1
CompoundGraph<TVertex;TEdge>:CompoundGraph,15,3,1
CompoundGraph<TVertex;TEdge>:GetChildrenList,8,2,2
CompoundGraph<TVertex;TEdge>:AddChildVertex,7,2,2
CompoundGraph<TVertex;TEdge>:AddChildVertexRange,10,2,2
CompoundGraph<TVertex;TEdge>:GetParent,6,2,1
CompoundGraph<TVertex;TEdge>:IsChildVertex,3,1,1
CompoundGraph<TVertex;TEdge>:GetChildrenVertices,3,1,1
CompoundGraph<TVertex;TEdge>:GetChildrenCount,6,2,1
CompoundGraph<TVertex;TEdge>:IsCompoundVertex,3,1,1
CompoundGraph<TVertex;TEdge>:RemoveVertex,9,2,1
GraphHelper:GetNeighbours,5,1,2
GraphHelper:GetOutNeighbours,4,1,2
GraphHelper:GetEdgesBetween,13,4,3
GraphHelper:GetSources,5,1,1
GraphHelper:CreateGraph,16,2,4
GraphHelper:CreateGraph,12,2,4
GraphHelper:CreateGraph,3,1,3
GraphHelper:OtherVertex,3,1,2
GraphHelper:AddEdgeRange,4,2,2
GraphHelper:Convert,7,1,3
GraphHelper:Convert,4,1,2
GraphHelper:Convert,14,3,4
GraphHelper:Convert,4,1,3
GraphHelper:Convert,4,1,2
GraphHelper:CopyToBidirectionalGraph,8,1,1
GraphHideHelper<TVertex;TEdge>:GraphHideHelper,3,1,1
GraphHideHelper<TVertex;TEdge>:EdgesFor,3,1,1
GraphHideHelper<TVertex;TEdge>:GetHiddenCollection,9,2,1
GraphHideHelper<TVertex;TEdge>:OnEdgeHidden,4,2,1
GraphHideHelper<TVertex;TEdge>:OnEdgeUnhidden,4,2,1
GraphHideHelper<TVertex;TEdge>:OnVertexHidden,4,2,1
GraphHideHelper<TVertex;TEdge>:OnVertexUnhidden,4,2,1
GraphHideHelper<TVertex;TEdge>:HideVertex,12,2,1
GraphHideHelper<TVertex;TEdge>:HideVertices,7,2,1
GraphHideHelper<TVertex;TEdge>:HideVertex,11,1,2
GraphHideHelper<TVertex;TEdge>:HideVertices,6,2,2
GraphHideHelper<TVertex;TEdge>:HideVerticesIf,9,3,2
GraphHideHelper<TVertex;TEdge>:IsHiddenVertex,3,1,1
GraphHideHelper<TVertex;TEdge>:UnhideVertex,10,2,1
GraphHideHelper<TVertex;TEdge>:UnhideVertexAndEdges,7,2,1
GraphHideHelper<TVertex;TEdge>:HideEdge,12,2,1
GraphHideHelper<TVertex;TEdge>:GetHiddenEdgeListOf,10,2,1
GraphHideHelper<TVertex;TEdge>:HiddenEdgesOf,3,1,1
GraphHideHelper<TVertex;TEdge>:HiddenEdgeCountOf,3,1,1
GraphHideHelper<TVertex;TEdge>:HideEdge,8,1,2
GraphHideHelper<TVertex;TEdge>:HideEdges,7,2,1
GraphHideHelper<TVertex;TEdge>:HideEdges,7,2,2
GraphHideHelper<TVertex;TEdge>:HideEdgesIf,9,3,2
GraphHideHelper<TVertex;TEdge>:IsHiddenEdge,3,1,1
GraphHideHelper<TVertex;TEdge>:UnhideEdge,11,2,1
GraphHideHelper<TVertex;TEdge>:UnhideEdgesIf,9,3,1
GraphHideHelper<TVertex;TEdge>:UnhideEdges,7,2,1
GraphHideHelper<TVertex;TEdge>:Unhide,12,3,1
GraphHideHelper<TVertex;TEdge>:UnhideAll,11,3,0
GraphHideHelper<TVertex;TEdge>:Degree,3,1,1
GraphHideHelper<TVertex;TEdge>:InDegree,3,1,1
GraphHideHelper<TVertex;TEdge>:InEdge,3,1,2
GraphHideHelper<TVertex;TEdge>:InEdges,3,1,1
GraphHideHelper<TVertex;TEdge>:IsInEdgesEmpty,3,1,1
GraphHideHelper<TVertex;TEdge>:ContainsEdge,3,1,2
GraphHideHelper<TVertex;TEdge>:TryGetEdge,3,1,3
GraphHideHelper<TVertex;TEdge>:TryGetEdges,3,1,3
GraphHideHelper<TVertex;TEdge>:IsOutEdgesEmpty,3,1,1
GraphHideHelper<TVertex;TEdge>:OutDegree,3,1,1
GraphHideHelper<TVertex;TEdge>:OutEdge,3,1,2
GraphHideHelper<TVertex;TEdge>:OutEdges,3,1,1
GraphHideHelper<TVertex;TEdge>:ContainsVertex,3,1,1
GraphHideHelper<TVertex;TEdge>:ContainsEdge,3,1,1
GraphHideHelper<TVertex;TEdge>:TryGetInEdges,3,1,2
GraphHideHelper<TVertex;TEdge>:TryGetOutEdges,3,1,2
HierarchicalGraph<TVertex;TEdge>:HierarchicalGraph,1,1,0
HierarchicalGraph<TVertex;TEdge>:HierarchicalGraph,1,1,1
HierarchicalGraph<TVertex;TEdge>:HierarchicalGraph,1,1,2
HierarchicalGraph<TVertex;TEdge>:AddVertex,8,2,1
HierarchicalGraph<TVertex;TEdge>:RemoveVertex,20,6,1
HierarchicalGraph<TVertex;TEdge>:AddEdge,33,4,1
HierarchicalGraph<TVertex;TEdge>:RemoveEdge,33,4,1
HierarchicalGraph<TVertex;TEdge>:HierarchicalEdgesFor,4,1,1
HierarchicalGraph<TVertex;TEdge>:HierarchicalEdgeCountFor,3,1,1
HierarchicalGraph<TVertex;TEdge>:InHierarchicalEdges,3,1,1
HierarchicalGraph<TVertex;TEdge>:InHierarchicalEdgeCount,3,1,1
HierarchicalGraph<TVertex;TEdge>:OutHierarchicalEdges,3,1,1
HierarchicalGraph<TVertex;TEdge>:OutHierarchicalEdgeCount,3,1,1
HierarchicalGraph<TVertex;TEdge>:GeneralEdgesFor,11,3,1
HierarchicalGraph<TVertex;TEdge>:GeneralEdgeCountFor,3,1,1
HierarchicalGraph<TVertex;TEdge>:InGeneralEdges,3,1,1
HierarchicalGraph<TVertex;TEdge>:InGeneralEdgeCount,3,1,1
HierarchicalGraph<TVertex;TEdge>:OutGeneralEdges,3,1,1
HierarchicalGraph<TVertex;TEdge>:OutGeneralEdgeCount,3,1,1
ICompoundGraph:AddChildVertex,0,1,2
ICompoundGraph:AddChildVertexRange,0,1,2
ICompoundGraph:GetParent,0,1,1
ICompoundGraph:IsChildVertex,0,1,1
ICompoundGraph:GetChildrenVertices,0,1,1
ICompoundGraph:GetChildrenCount,0,1,1
ICompoundGraph:IsCompoundVertex,0,1,1
IHierarchicalBidirectionalGraph:HierarchicalEdgesFor,0,1,1
IHierarchicalBidirectionalGraph:HierarchicalEdgeCountFor,0,1,1
IHierarchicalBidirectionalGraph:InHierarchicalEdges,0,1,1
IHierarchicalBidirectionalGraph:InHierarchicalEdgeCount,0,1,1
IHierarchicalBidirectionalGraph:OutHierarchicalEdges,0,1,1
IHierarchicalBidirectionalGraph:OutHierarchicalEdgeCount,0,1,1
IHierarchicalBidirectionalGraph:GeneralEdgesFor,0,1,1
IHierarchicalBidirectionalGraph:GeneralEdgeCountFor,0,1,1
IHierarchicalBidirectionalGraph:InGeneralEdges,0,1,1
IHierarchicalBidirectionalGraph:InGeneralEdgeCount,0,1,1
IHierarchicalBidirectionalGraph:OutGeneralEdges,0,1,1
IHierarchicalBidirectionalGraph:OutGeneralEdgeCount,0,1,1
ISoftMutableGraph:HideVertex,0,1,1
ISoftMutableGraph:HideVertex,0,1,2
ISoftMutableGraph:HideVertices,0,1,1
ISoftMutableGraph:HideVertices,0,1,2
ISoftMutableGraph:HideVerticesIf,0,1,2
ISoftMutableGraph:IsHiddenVertex,0,1,1
ISoftMutableGraph:UnhideVertex,0,1,1
ISoftMutableGraph:UnhideVertexAndEdges,0,1,1
ISoftMutableGraph:HideEdge,0,1,1
ISoftMutableGraph:HideEdge,0,1,2
ISoftMutableGraph:HideEdges,0,1,1
ISoftMutableGraph:HideEdges,0,1,2
ISoftMutableGraph:HideEdgesIf,0,1,2
ISoftMutableGraph:IsHiddenEdge,0,1,1
ISoftMutableGraph:UnhideEdge,0,1,1
ISoftMutableGraph:UnhideEdges,0,1,1
ISoftMutableGraph:UnhideEdgesIf,0,1,1
ISoftMutableGraph:HiddenEdgesOf,0,1,1
ISoftMutableGraph:HiddenEdgeCountOf,0,1,1
ISoftMutableGraph:Unhide,0,1,1
ISoftMutableGraph:UnhideAll,0,1,0
SoftMutableBidirectionalGraph<TVertex;TEdge>:Init,3,1,0
SoftMutableBidirectionalGraph<TVertex;TEdge>:SoftMutableBidirectionalGraph,3,1,0
SoftMutableBidirectionalGraph<TVertex;TEdge>:SoftMutableBidirectionalGraph,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:SoftMutableBidirectionalGraph,3,1,2
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideVertex,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideVertex,3,1,2
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideVertices,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideVertices,3,1,2
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideVerticesIf,3,1,2
SoftMutableBidirectionalGraph<TVertex;TEdge>:IsHiddenVertex,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:UnhideVertex,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:UnhideVertexAndEdges,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideEdge,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideEdge,3,1,2
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideEdges,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideEdges,3,1,2
SoftMutableBidirectionalGraph<TVertex;TEdge>:HideEdgesIf,3,1,2
SoftMutableBidirectionalGraph<TVertex;TEdge>:IsHiddenEdge,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:UnhideEdge,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:UnhideEdges,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:UnhideEdgesIf,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:HiddenEdgesOf,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:HiddenEdgeCountOf,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:Unhide,3,1,1
SoftMutableBidirectionalGraph<TVertex;TEdge>:UnhideAll,3,1,0
SoftMutableHierarchicalGraph<TVertex;TEdge>:Init,3,1,0
SoftMutableHierarchicalGraph<TVertex;TEdge>:SoftMutableHierarchicalGraph,3,1,0
SoftMutableHierarchicalGraph<TVertex;TEdge>:SoftMutableHierarchicalGraph,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:SoftMutableHierarchicalGraph,3,1,2
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideVertex,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideVertex,3,1,2
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideVertices,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideVertices,3,1,2
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideVerticesIf,3,1,2
SoftMutableHierarchicalGraph<TVertex;TEdge>:IsHiddenVertex,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:UnhideVertex,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:UnhideVertexAndEdges,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideEdge,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideEdge,3,1,2
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideEdges,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideEdges,3,1,2
SoftMutableHierarchicalGraph<TVertex;TEdge>:HideEdgesIf,3,1,2
SoftMutableHierarchicalGraph<TVertex;TEdge>:IsHiddenEdge,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:UnhideEdge,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:UnhideEdges,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:UnhideEdgesIf,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:HiddenEdgesOf,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:HiddenEdgeCountOf,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:Unhide,3,1,1
SoftMutableHierarchicalGraph<TVertex;TEdge>:UnhideAll,3,1,0
TypedEdge<TVertex>:TypedEdge,3,1,3
TypedEdge<TVertex>:ToString,3,1,0
WeightedEdge<Vertex>:WeightedEdge,1,1,2
WeightedEdge<Vertex>:WeightedEdge,3,1,3
WrappedVertex<TVertex>:WrappedVertex,3,1,1
ICompoundGraphContract<TVertex;TEdge>:AddChildVertex,6,1,2
ICompoundGraphContract<TVertex;TEdge>:AddChildVertexRange,7,1,2
ICompoundGraphContract<TVertex;TEdge>:GetParent,8,1,1
ICompoundGraphContract<TVertex;TEdge>:IsChildVertex,6,1,1
ICompoundGraphContract<TVertex;TEdge>:GetChildrenVertices,6,1,1
ICompoundGraphContract<TVertex;TEdge>:GetChildrenCount,6,1,1
ICompoundGraphContract<TVertex;TEdge>:IsCompoundVertex,5,1,1
IContextualLayoutAlgorithmFactoryContract<TVertex;TEdge;TGraph>:CreateAlgorithm,7,1,3
ILayoutAlgorithmFactoryContract<TVertex;TEdge;TGraph>:CreateAlgorithm,7,1,3
ILayoutAlgorithmFactoryContract<TVertex;TEdge;TGraph>:CreateParameters,6,1,2
ILayoutAlgorithmFactoryContract<TVertex;TEdge;TGraph>:IsValidAlgorithm,6,1,1
ILayoutAlgorithmFactoryContract<TVertex;TEdge;TGraph>:GetAlgorithmType,6,1,1
ILayoutAlgorithmFactoryContract<TVertex;TEdge;TGraph>:NeedEdgeRouting,3,1,1
ILayoutAlgorithmFactoryContract<TVertex;TEdge;TGraph>:NeedOverlapRemoval,3,1,1
ILayoutContextContract<TVertex;TEdge;TGraph>:Invariants,6,1,0
