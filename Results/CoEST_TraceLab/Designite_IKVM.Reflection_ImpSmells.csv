Implementation smell,Namespace,Class,File,Method,Description
Long Method,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,IsAllowedPrimitiveConversion,The method has 127 lines of code.
Long Method,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,CompareAssemblyIdentityPure,The method has 108 lines of code.
Long Method,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseAssemblyName,The method has 130 lines of code.
Long Method,IKVM.Reflection,MarshalSpec,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MarshalSpec.cs,GetMarshalAsAttribute,The method has 124 lines of code.
Long Method,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,WriteType,The method has 147 lines of code.
Long Method,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,The method has 137 lines of code.
Long Method,IKVM.Reflection.Emit,BlobWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,WriteFixedArg,The method has 108 lines of code.
Long Method,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The method has 128 lines of code.
Long Method,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The method has 458 lines of code.
Long Method,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The method has 243 lines of code.
Long Method,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,Write,The method has 138 lines of code.
Long Method,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The method has 116 lines of code.
Complex Method,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,AssemblyName,Cyclomatic complexity of the method is 15
Complex Method,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,IsAllowedPrimitiveConversion,Cyclomatic complexity of the method is 22
Complex Method,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,SelectProperty,Cyclomatic complexity of the method is 16
Complex Method,IKVM.Reflection,CustomAttributeData,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeData.cs,ReadFieldOrPropType,Cyclomatic complexity of the method is 18
Complex Method,IKVM.Reflection,CustomAttributeData,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeData.cs,ReadFixedArg,Cyclomatic complexity of the method is 20
Complex Method,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,CompareAssemblyIdentityPure,Cyclomatic complexity of the method is 19
Complex Method,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseAssemblySimpleName,Cyclomatic complexity of the method is 15
Complex Method,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseAssemblyName,Cyclomatic complexity of the method is 31
Complex Method,IKVM.Reflection,MarshalSpec,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MarshalSpec.cs,GetMarshalAsAttribute,Cyclomatic complexity of the method is 26
Complex Method,IKVM.Reflection,MarshalSpec,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MarshalSpec.cs,WriteMarshallingDescriptor,Cyclomatic complexity of the method is 17
Complex Method,IKVM.Reflection,MethodBody,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodBody.cs,MethodBody,Cyclomatic complexity of the method is 10
Complex Method,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,ReadSig,Cyclomatic complexity of the method is 9
Complex Method,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,ReadStandAloneMethodSig,Cyclomatic complexity of the method is 12
Complex Method,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadType,Cyclomatic complexity of the method is 26
Complex Method,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,WriteType,Cyclomatic complexity of the method is 31
Complex Method,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,WriteStandAloneMethodSig,Cyclomatic complexity of the method is 12
Complex Method,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetMemberByName,Cyclomatic complexity of the method is 15
Complex Method,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetMethods,Cyclomatic complexity of the method is 12
Complex Method,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetSystemType,Cyclomatic complexity of the method is 19
Complex Method,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetTypeCode,Cyclomatic complexity of the method is 20
Complex Method,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,IsAssignableFrom,Cyclomatic complexity of the method is 10
Complex Method,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetInterfaceMap,Cyclomatic complexity of the method is 8
Complex Method,IKVM.Reflection,TypeNameParser,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\TypeNameParser.cs,GetType,Cyclomatic complexity of the method is 13
Complex Method,IKVM.Reflection,TypeNameParser,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\TypeNameParser.cs,Expand,Cyclomatic complexity of the method is 16
Complex Method,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,ImportImpl,Cyclomatic complexity of the method is 13
Complex Method,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,Cyclomatic complexity of the method is 23
Complex Method,IKVM.Reflection.Emit,CustomAttributeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,ToData,Cyclomatic complexity of the method is 8
Complex Method,IKVM.Reflection.Emit,BlobWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,WriteNamedArguments,Cyclomatic complexity of the method is 8
Complex Method,IKVM.Reflection.Emit,BlobWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,WriteFixedArg,Cyclomatic complexity of the method is 23
Complex Method,IKVM.Reflection.Emit,BlobWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,WriteFieldOrPropType,Cyclomatic complexity of the method is 18
Complex Method,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,Cyclomatic complexity of the method is 14
Complex Method,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,Cyclomatic complexity of the method is 19
Complex Method,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetDllImportPseudoCustomAttribute,Cyclomatic complexity of the method is 14
Complex Method,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ApplyUnmanagedExports,Cyclomatic complexity of the method is 8
Complex Method,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,AddConstant,Cyclomatic complexity of the method is 17
Complex Method,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ResolveMethod,Cyclomatic complexity of the method is 8
Complex Method,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,Cyclomatic complexity of the method is 226
Complex Method,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,CreateType,Cyclomatic complexity of the method is 9
Complex Method,IKVM.Reflection.Metadata,ConstantTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRawConstantValue,Cyclomatic complexity of the method is 18
Complex Method,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,Cyclomatic complexity of the method is 21
Complex Method,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,Cyclomatic complexity of the method is 21
Complex Method,IKVM.Reflection.Reader,MethodDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Method.cs,CreateDllImportPseudoCustomAttribute,Cyclomatic complexity of the method is 13
Complex Method,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveType,Cyclomatic complexity of the method is 15
Complex Method,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,GetMemberRef,Cyclomatic complexity of the method is 11
Complex Method,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveTypeMemberRef,Cyclomatic complexity of the method is 8
Complex Method,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,GetManifestResourceStream,Cyclomatic complexity of the method is 9
Complex Method,IKVM.Reflection.Writer,TableHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,WriteImpl,Cyclomatic complexity of the method is 10
Complex Method,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,Cyclomatic complexity of the method is 34
Complex Method,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,Write,Cyclomatic complexity of the method is 16
Complex Method,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,Write,Cyclomatic complexity of the method is 14
Complex Method,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,SetAttribute,Cyclomatic complexity of the method is 9
Long Parameter List,IKVM.Reflection,Binder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,BindToMethod,The method has 7 parameters. Parameters: bindingAttr' match' args' modifiers' culture' names' state
Long Parameter List,IKVM.Reflection,Binder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,SelectProperty,The method has 5 parameters. Parameters: bindingAttr' match' returnType' indexes' modifiers
Long Parameter List,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,SelectProperty,The method has 5 parameters. Parameters: bindingAttr' match' returnType' indexes' modifiers
Long Parameter List,IKVM.Reflection,CustomAttributeData,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeData.cs,CustomAttributeData,The method has 5 parameters. Parameters: asm' constructor' securityAction' blob' index
Long Parameter List,IKVM.Reflection,ExceptionHandlingClause,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\ExceptionHandlingClause.cs,ExceptionHandlingClause,The method has 8 parameters. Parameters: module' flags' tryOffset' tryLength' handlerOffset' handlerLength' classTokenOrfilterOffset' context
Long Parameter List,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,CompareAssemblyIdentityNative,The method has 5 parameters. Parameters: assemblyIdentity1' unified1' assemblyIdentity2' unified2' result
Long Parameter List,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,CompareAssemblyIdentity,The method has 6 parameters. Parameters: pwzAssemblyIdentity1' fUnified1' pwzAssemblyIdentity2' fUnified2' pfEquivalent' pResult
Long Parameter List,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,CompareAssemblyIdentityPure,The method has 5 parameters. Parameters: assemblyIdentity1' unified1' assemblyIdentity2' unified2' result
Long Parameter List,IKVM.Reflection,MarshalSpec,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MarshalSpec.cs,AddNamedArgument,The method has 5 parameters. Parameters: list' attributeType' fieldName' valueType' value
Long Parameter List,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,MethodSignature,The method has 5 parameters. Parameters: returnType' parameterTypes' modifiers' callingConvention' genericParamCount
Long Parameter List,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,MakeFromBuilder,The method has 5 parameters. Parameters: returnType' parameterTypes' modifiers' callingConvention' genericParamCount
Long Parameter List,IKVM.Reflection,PackedCustomModifiers,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,CreateFromExternal,The method has 5 parameters. Parameters: returnOptional' returnRequired' parameterOptional' parameterRequired' parameterCount
Long Parameter List,IKVM.Reflection,MissingGenericMethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Missing.cs,SetSignature,The method has 6 parameters. Parameters: returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers
Long Parameter List,IKVM.Reflection,Module,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Module.cs,GetMethod,The method has 6 parameters. Parameters: name' bindingAttr' binder' callConv' types' modifiers
Long Parameter List,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,WritePropertySig,The method has 7 parameters. Parameters: module' bb' callingConvention' returnType' returnTypeCustomModifiers' parameterTypes' parameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection,__StandAloneMethodSig,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\StandAloneMethodSig.cs,__StandAloneMethodSig,The method has 7 parameters. Parameters: unmanaged' unmanagedCallingConvention' callingConvention' returnType' parameterTypes' optionalParameterTypes' customModifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetMethod,The method has 5 parameters. Parameters: name' bindingAttr' binder' types' modifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetMethodWithBinder,The method has 5 parameters. Parameters: name' bindingAttr' binder' types' modifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetMethod,The method has 6 parameters. Parameters: name' bindingAttr' binder' callConvention' types' modifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetConstructor,The method has 5 parameters. Parameters: bindingAttr' binder' callingConvention' types' modifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetProperty,The method has 6 parameters. Parameters: name' bindingAttr' binder' returnType' types' modifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetPropertyWithBinder,The method has 6 parameters. Parameters: name' bindingAttr' binder' returnType' types' modifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__MakeArrayType,The method has 5 parameters. Parameters: rank' sizes' lobounds' requiredCustomModifiers' optionalCustomModifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingMethod,The method has 6 parameters. Parameters: name' callingConvention' returnType' returnTypeCustomModifiers' parameterTypes' parameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,CreateMissingMethod,The method has 5 parameters. Parameters: name' callingConvention' returnType' parameterTypes' customModifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingMethod,The method has 8 parameters. Parameters: name' callingConvention' returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers
Long Parameter List,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingProperty,The method has 6 parameters. Parameters: name' callingConvention' propertyType' propertyTypeCustomModifiers' parameterTypes' parameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,Make,The method has 5 parameters. Parameters: type' rank' sizes' lobounds' mods
Long Parameter List,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,MultiArrayType,The method has 5 parameters. Parameters: type' rank' sizes' lobounds' mods
Long Parameter List,IKVM.Reflection,BuiltinArrayMethod,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,BuiltinArrayMethod,The method has 6 parameters. Parameters: module' arrayClass' methodName' callingConvention' returnType' parameterTypes
Long Parameter List,IKVM.Reflection,TypeNameParser,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\TypeNameParser.cs,GetType,The method has 6 parameters. Parameters: universe' context' throwOnError' originalName' resolve' ignoreCase
Long Parameter List,IKVM.Reflection,TypeNameParser,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\TypeNameParser.cs,Expand,The method has 6 parameters. Parameters: type' context' throwOnError' originalName' resolve' ignoreCase
Long Parameter List,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,CompareAssemblyIdentity,The method has 5 parameters. Parameters: assemblyIdentity1' unified1' assemblyIdentity2' unified2' result
Long Parameter List,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,DefineDynamicAssembly,The method has 6 parameters. Parameters: name' access' dir' requiredPermissions' optionalPermissions' refusedPermissions
Long Parameter List,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,DefineDynamicAssemblyImpl,The method has 6 parameters. Parameters: name' access' dir' requiredPermissions' optionalPermissions' refusedPermissions
Long Parameter List,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,MakeStandAloneMethodSig,The method has 5 parameters. Parameters: callingConvention' returnType' returnTypeCustomModifiers' parameterTypes' parameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,MakeStandAloneMethodSig,The method has 6 parameters. Parameters: callingConvention' returnType' returnTypeCustomModifiers' parameterTypes' optionalParameterTypes' parameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,AssemblyBuilder,The method has 6 parameters. Parameters: universe' name' dir' requiredPermissions' optionalPermissions' refusedPermissions
Long Parameter List,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,DefineVersionInfoResource,The method has 5 parameters. Parameters: product' productVersion' company' copyright' trademark
Long Parameter List,IKVM.Reflection.Emit,ConstructorBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ConstructorBuilder.cs,__SetSignature,The method has 6 parameters. Parameters: returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,CustomAttributeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,CustomAttributeBuilder,The method has 6 parameters. Parameters: con' constructorArgs' namedProperties' propertyValues' namedFields' fieldValues
Long Parameter List,IKVM.Reflection.Emit,FieldBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\FieldBuilder.cs,FieldBuilder,The method has 5 parameters. Parameters: type' name' fieldType' customModifiers' attribs
Long Parameter List,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,EmitCalli,The method has 5 parameters. Parameters: opc' callingConvention' returnType' parameterTypes' optionalParameterTypes
Long Parameter List,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,MarkSequencePoint,The method has 5 parameters. Parameters: document' startLine' startColumn' endLine' endColumn
Long Parameter List,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetDllImportPseudoCustomAttribute,The method has 9 parameters. Parameters: dllName' entryName' nativeCallConv' nativeCharSet' bestFitMapping' throwOnUnmappableChar' setLastError' preserveSig' exactSpelling
Long Parameter List,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetSignature,The method has 6 parameters. Parameters: returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineType,The method has 5 parameters. Parameters: name' attr' parent' packingSize' typesize
Long Parameter List,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,__DefineField,The method has 5 parameters. Parameters: name' type' requiredCustomModifiers' optionalCustomModifiers' attributes
Long Parameter List,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineGlobalMethod,The method has 5 parameters. Parameters: name' attributes' callingConvention' returnType' parameterTypes
Long Parameter List,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineGlobalMethod,The method has 9 parameters. Parameters: name' attributes' callingConvention' returnType' requiredReturnTypeCustomModifiers' optionalReturnTypeCustomModifiers' parameterTypes' requiredParameterTypeCustomModifiers' optionalParameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefinePInvokeMethod,The method has 8 parameters. Parameters: name' dllName' attributes' callingConvention' returnType' parameterTypes' nativeCallConv' nativeCharSet
Long Parameter List,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefinePInvokeMethod,The method has 9 parameters. Parameters: name' dllName' entryName' attributes' callingConvention' returnType' parameterTypes' nativeCallConv' nativeCharSet
Long Parameter List,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetArrayMethod,The method has 5 parameters. Parameters: arrayClass' methodName' callingConvention' returnType' parameterTypes
Long Parameter List,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetArrayMethodToken,The method has 5 parameters. Parameters: arrayClass' methodName' callingConvention' returnType' parameterTypes
Long Parameter List,IKVM.Reflection.Emit,ArrayMethod,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ArrayMethod,The method has 6 parameters. Parameters: module' arrayClass' methodName' callingConvention' returnType' parameterTypes
Long Parameter List,IKVM.Reflection.Emit,PropertyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\PropertyBuilder.cs,PropertyBuilder,The method has 5 parameters. Parameters: typeBuilder' name' attributes' sig' patchCallingConvention
Long Parameter List,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The method has 7 parameters. Parameters: mod' returnType' requiredReturnTypeCustomModifiers' optionalReturnTypeCustomModifiers' parameterTypes' requiredParameterTypeCustomModifiers' optionalParameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The method has 8 parameters. Parameters: mod' callingConvention' returnType' requiredReturnTypeCustomModifiers' optionalReturnTypeCustomModifiers' parameterTypes' requiredParameterTypeCustomModifiers' optionalParameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineConstructor,The method has 5 parameters. Parameters: attribs' callingConvention' parameterTypes' requiredCustomModifiers' optionalCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineMethod,The method has 5 parameters. Parameters: name' attributes' callingConvention' returnType' parameterTypes
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineMethod,The method has 9 parameters. Parameters: name' attributes' callingConvention' returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The method has 8 parameters. Parameters: name' dllName' attributes' callingConvention' returnType' parameterTypes' nativeCallConv' nativeCharSet
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The method has 9 parameters. Parameters: name' dllName' entryName' attributes' callingConvention' returnType' parameterTypes' nativeCallConv' nativeCharSet
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The method has 13 parameters. Parameters: name' dllName' entryName' attributes' callingConvention' returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers' nativeCallConv' nativeCharSet
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineField,The method has 5 parameters. Parameters: fieldName' type' requiredCustomModifiers' optionalCustomModifiers' attributes
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The method has 8 parameters. Parameters: name' attributes' returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The method has 9 parameters. Parameters: name' attributes' callingConvention' returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,__DefineProperty,The method has 7 parameters. Parameters: name' attributes' callingConvention' returnType' returnTypeCustomModifiers' parameterTypes' parameterTypeCustomModifiers
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePropertyImpl,The method has 7 parameters. Parameters: name' attributes' callingConvention' patchCallingConvention' returnType' parameterTypes' customModifiers
Long Parameter List,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineNestedType,The method has 5 parameters. Parameters: name' attr' parent' packSize' typeSize
Long Parameter List,IKVM.Reflection.Impl,IMetaDataImport,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,GetTypeDefProps,The method has 6 parameters. Parameters: td' szTypeDef' cchTypeDef' pchTypeDef' pdwTypeDefFlags' ptkExtends
Long Parameter List,IKVM.Reflection.Impl,IMetaDataImport,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,GetMethodProps,The method has 10 parameters. Parameters: mb' pClass' szMethod' cchMethod' pchMethod' pdwAttr' ppvSigBlob' pcbSigBlob' pulCodeRVA' pdwImplFlags
Long Parameter List,IKVM.Reflection.Impl,ISymUnmanagedWriter2,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineLocalVariable,The method has 9 parameters. Parameters: name' attributes' cSig' signature' addrKind' addr1' addr2' startOffset' endOffset
Long Parameter List,IKVM.Reflection.Impl,ISymUnmanagedWriter2,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineSequencePoints,The method has 7 parameters. Parameters: document' spCount' offsets' lines' columns' endLines' endColumns
Long Parameter List,IKVM.Reflection.Impl,ISymUnmanagedWriter2,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineLocalVariable2,The method has 9 parameters. Parameters: name' attributes' token' addrKind' addr1' addr2' addr3' startOffset' endOffset
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineSequencePoints,The method has 6 parameters. Parameters: document' offsets' lines' columns' endLines' endColumns
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineLocalVariable2,The method has 9 parameters. Parameters: name' attributes' signature' addrKind' addr1' addr2' addr3' startOffset' endOffset
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineLocalVariable,The method has 9 parameters. Parameters: name' attributes' signature' addrKind' addr1' addr2' addr3' startOffset' endOffset
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineField,The method has 8 parameters. Parameters: parent' name' attributes' signature' addrKind' addr1' addr2' addr3
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineGlobalVariable,The method has 7 parameters. Parameters: name' attributes' signature' addrKind' addr1' addr2' addr3
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineParameter,The method has 7 parameters. Parameters: name' attributes' sequence' addrKind' addr1' addr2' addr3
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,SetMethodSourceRange,The method has 6 parameters. Parameters: startDoc' startLine' startColumn' endDoc' endLine' endColumn
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,GetTypeDefProps,The method has 6 parameters. Parameters: td' szTypeDef' cchTypeDef' pchTypeDef' pdwTypeDefFlags' ptkExtends
Long Parameter List,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,GetMethodProps,The method has 10 parameters. Parameters: mb' pClass' szMethod' cchMethod' pchMethod' pdwAttr' ppvSigBlob' pcbSigBlob' pulCodeRVA' pdwImplFlags
Long Parameter List,IKVM.Reflection.Impl,LocalVar,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,LocalVar,The method has 8 parameters. Parameters: attributes' signature' addrKind' addr1' addr2' addr3' startOffset' endOffset
Long Parameter List,IKVM.Reflection.Impl,ISymbolWriterImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\SymbolSupport.cs,DefineLocalVariable2,The method has 9 parameters. Parameters: name' attributes' signature' addrKind' addr1' addr2' addr3' startOffset' endOffset
Long Parameter List,IKVM.Reflection.Metadata,ModuleTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Add,The method has 5 parameters. Parameters: generation' name' mvid' encid' encbaseid
Long Parameter List,IKVM.Reflection.Metadata,MethodSemanticsTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,ComputeFlags,The method has 5 parameters. Parameters: module' token' isPublic' isNonPrivate' isStatic
Long Parameter List,IKVM.Reflection.Reader,MethodDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Method.cs,AddNamedArgument,The method has 5 parameters. Parameters: list' type' fieldName' flags' flagMask
Long Parameter List,IKVM.Reflection.Reader,MethodDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Method.cs,AddNamedArgument,The method has 5 parameters. Parameters: list' attributeType' fieldName' valueType' value
Long Parameter List,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModule,The method has 8 parameters. Parameters: keyPair' publicKey' moduleBuilder' fileKind' portableExecutableKind' imageFileMachine' resources' entryPointToken
Long Parameter List,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModule,The method has 9 parameters. Parameters: keyPair' publicKey' moduleBuilder' fileKind' portableExecutableKind' imageFileMachine' resources' entryPointToken' stream
Long Parameter List,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The method has 9 parameters. Parameters: keyPair' publicKey' moduleBuilder' fileKind' portableExecutableKind' imageFileMachine' resources' entryPointToken' stream
Long Parameter List,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,StrongName,The method has 6 parameters. Parameters: stream' keyPair' headerLength' textSectionFileOffset' strongNameSignatureFileOffset' strongNameSignatureLength
Long Parameter List,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,Write,The method has 7 parameters. Parameters: bb' writeDepth' currentDepth' offset' strings' stringTableOffset' stringTable
Long Parameter List,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,WriteEntry,The method has 5 parameters. Parameters: bb' offset' strings' stringTableOffset' stringTable
Long Parameter List,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,WriteNameOrOrdinal,The method has 5 parameters. Parameters: bb' id' strings' stringTableOffset' stringTable
Long Identifier,IKVM.Reflection,MissingGenericMethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Missing.cs,SetSignature,The length of the parameter returnTypeRequiredCustomModifiers is 33.
Long Identifier,IKVM.Reflection,MissingGenericMethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Missing.cs,SetSignature,The length of the parameter returnTypeOptionalCustomModifiers is 33.
Long Identifier,IKVM.Reflection,MissingGenericMethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Missing.cs,SetSignature,The length of the parameter parameterTypeRequiredCustomModifiers is 36.
Long Identifier,IKVM.Reflection,MissingGenericMethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Missing.cs,SetSignature,The length of the parameter parameterTypeOptionalCustomModifiers is 36.
Long Identifier,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingMethod,The length of the parameter returnTypeRequiredCustomModifiers is 33.
Long Identifier,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingMethod,The length of the parameter returnTypeOptionalCustomModifiers is 33.
Long Identifier,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingMethod,The length of the parameter parameterTypeRequiredCustomModifiers is 36.
Long Identifier,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingMethod,The length of the parameter parameterTypeOptionalCustomModifiers is 36.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_NonSerializedAttribute is 36.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_SerializableAttribute is 35.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_AttributeUsageAttribute is 37.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_DllImportAttribute is 56.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_FieldOffsetAttribute is 58.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_InAttribute is 49.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_MarshalAsAttribute is 56.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_UnmanagedType is 51.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_VarEnum is 45.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_OutAttribute is 50.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_StructLayoutAttribute is 59.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_OptionalAttribute is 55.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_PreserveSigAttribute is 58.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_CallingConvention is 55.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_CharSet is 45.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_InteropServices_ComImportAttribute is 56.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_CompilerServices_DecimalConstantAttribute is 63.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_CompilerServices_SpecialNameAttribute is 59.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Runtime_CompilerServices_MethodImplAttribute is 58.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Security_SuppressUnmanagedCodeSecurityAttribute is 61.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Reflection_AssemblyCopyrightAttribute is 51.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Reflection_AssemblyTrademarkAttribute is 51.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Reflection_AssemblyProductAttribute is 49.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Reflection_AssemblyCompanyAttribute is 49.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Reflection_AssemblyDescriptionAttribute is 53.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Reflection_AssemblyTitleAttribute is 47.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Reflection_AssemblyInformationalVersionAttribute is 62.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Reflection_AssemblyFileVersionAttribute is 53.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Security_Permissions_CodeAccessSecurityAttribute is 62.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Security_Permissions_PermissionSetAttribute is 57.
Long Identifier,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,,The length of the parameter typeof_System_Security_Permissions_SecurityAction is 49.
Long Identifier,IKVM.Reflection.Emit,ConstructorBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ConstructorBuilder.cs,__SetSignature,The length of the parameter returnTypeRequiredCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,ConstructorBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ConstructorBuilder.cs,__SetSignature,The length of the parameter returnTypeOptionalCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,ConstructorBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ConstructorBuilder.cs,__SetSignature,The length of the parameter parameterTypeRequiredCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,ConstructorBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ConstructorBuilder.cs,__SetSignature,The length of the parameter parameterTypeOptionalCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The length of the parameter COR_ILEXCEPTION_CLAUSE_EXCEPTION is 32.
Long Identifier,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The length of the parameter COR_ILEXCEPTION_CLAUSE_FINALLY is 30.
Long Identifier,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetSignature,The length of the parameter returnTypeRequiredCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetSignature,The length of the parameter returnTypeOptionalCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetSignature,The length of the parameter parameterTypeRequiredCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetSignature,The length of the parameter parameterTypeOptionalCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineGlobalMethod,The length of the parameter requiredReturnTypeCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineGlobalMethod,The length of the parameter optionalReturnTypeCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineGlobalMethod,The length of the parameter requiredParameterTypeCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineGlobalMethod,The length of the parameter optionalParameterTypeCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the parameter requiredReturnTypeCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the parameter optionalReturnTypeCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the parameter requiredParameterTypeCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the parameter optionalParameterTypeCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the parameter requiredReturnTypeCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the parameter optionalReturnTypeCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the parameter requiredParameterTypeCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the parameter optionalParameterTypeCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineMethod,The length of the parameter returnTypeRequiredCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineMethod,The length of the parameter returnTypeOptionalCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineMethod,The length of the parameter parameterTypeRequiredCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineMethod,The length of the parameter parameterTypeOptionalCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The length of the parameter returnTypeRequiredCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The length of the parameter returnTypeOptionalCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The length of the parameter parameterTypeRequiredCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The length of the parameter parameterTypeOptionalCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the parameter returnTypeRequiredCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the parameter returnTypeOptionalCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the parameter parameterTypeRequiredCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the parameter parameterTypeOptionalCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the parameter returnTypeRequiredCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the parameter returnTypeOptionalCustomModifiers is 33.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the parameter parameterTypeRequiredCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the parameter parameterTypeOptionalCustomModifiers is 36.
Long Identifier,IKVM.Reflection.Metadata,CliHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\CliHeader.cs,,The length of the parameter COMIMAGE_FLAGS_STRONGNAMESIGNED is 31.
Long Identifier,IKVM.Reflection.Metadata,CliHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\CliHeader.cs,,The length of the parameter COMIMAGE_FLAGS_NATIVE_ENTRYPOINT is 32.
Long Identifier,IKVM.Reflection.Reader,IMAGE_FILE_HEADER,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PEReader.cs,,The length of the parameter IMAGE_FILE_LARGE_ADDRESS_AWARE is 30.
Long Identifier,IKVM.Reflection.Reader,SectionHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PEReader.cs,,The length of the parameter IMAGE_SCN_CNT_INITIALIZED_DATA is 30.
Long Identifier,IKVM.Reflection.Writer,IMAGE_FILE_HEADER,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\PEWriter.cs,,The length of the parameter IMAGE_FILE_LARGE_ADDRESS_AWARE is 30.
Long Identifier,IKVM.Reflection.Writer,SectionHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\PEWriter.cs,,The length of the parameter IMAGE_SCN_CNT_INITIALIZED_DATA is 30.
Long Statement,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,GetPublicKeyToken,The length of the statement  "				// note that GetPublicKeyToken() has a side effect in this case' because we retain this token even after the public key subsequently gets changed " is 145.
Long Statement,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,ReferenceMatchesDefinition,The length of the statement  "			return System.Reflection.AssemblyName.ReferenceMatchesDefinition(new System.Reflection.AssemblyName(reference.FullName)' new System.Reflection.AssemblyName(definition.FullName)); " is 178.
Long Statement,IKVM.Reflection,CustomAttributeData,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeData.cs,ReadDeclarativeSecurity,The length of the statement  "				ConstructorInfo constructor = u.System_Security_Permissions_PermissionSetAttribute.GetPseudoCustomAttributeConstructor(u.System_Security_Permissions_SecurityAction); " is 165.
Long Statement,IKVM.Reflection,CustomAttributeData,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeData.cs,ReadDeclarativeSecurity,The length of the statement  "				args.Add(new CustomAttributeNamedArgument(GetProperty(u.System_Security_Permissions_PermissionSetAttribute' "XML"' u.System_String)' " is 132.
Long Statement,IKVM.Reflection,CustomAttributeData,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeData.cs,GetProperty,The length of the statement  "			return type.Module.universe.GetMissingPropertyOrThrow(type' name' PropertySignature.Create(CallingConventions.Standard | CallingConventions.HasThis' propertyType' null' new PackedCustomModifiers())); " is 199.
Long Statement,IKVM.Reflection,CustomAttributeData,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeData.cs,__ToBuilder,The length of the statement  "			return new CustomAttributeBuilder(Constructor' args' namedProperties.ToArray()' propertyValues.ToArray()' namedFields.ToArray()' fieldValues.ToArray()); " is 152.
Long Statement,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,CompareAssemblyIdentityNative,The length of the statement  "			Marshal.ThrowExceptionForHR(CompareAssemblyIdentity(assemblyIdentity1' unified1' assemblyIdentity2' unified2' out equivalent' out result)); " is 139.
Long Statement,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,CompareAssemblyIdentityPure,The length of the statement  "						result = partial ? AssemblyComparisonResult.NonEquivalentPartialVersion : AssemblyComparisonResult.NonEquivalentVersion; " is 120.
Long Statement,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,CompareAssemblyIdentityPure,The length of the statement  "						result = partial ? AssemblyComparisonResult.NonEquivalentPartialVersion : AssemblyComparisonResult.NonEquivalentVersion; " is 120.
Long Statement,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The length of the statement  "				// if the version consists of a single integer' it is invalid' but not invalid enough to fail the parse of the whole assembly name " is 130.
Long Statement,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The length of the statement  "				// this is a strange scenario' the version is invalid' but not invalid enough to fail the parse of the whole assembly name " is 122.
Long Statement,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The length of the statement  "				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build)) " is 129.
Long Statement,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The length of the statement  "				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))) " is 153.
Long Statement,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,ReadSig,The length of the statement  "			return new MethodSignature(returnType' parameterTypes' PackedCustomModifiers.Wrap(modifiers)' callingConvention' genericParamCount); " is 132.
Long Statement,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,ReadStandAloneMethodSig,The length of the statement  "			return new __StandAloneMethodSig(unmanaged' unmanagedCallingConvention' callingConvention' returnType' parameterTypes.ToArray()' optionalParameterTypes.ToArray()' PackedCustomModifiers.Wrap(customModifiers)); " is 208.
Long Statement,IKVM.Reflection,PackedCustomModifiers,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,CreateFromExternal,The length of the statement  "				Pack(ref modifiers' i + 1' CustomModifiers.FromReqOpt(Util.NullSafeElementAt(parameterRequired' i)' Util.NullSafeElementAt(parameterOptional' i))' parameterCount + 1); " is 167.
Long Statement,IKVM.Reflection,MissingGenericMethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Missing.cs,SetSignature,The length of the statement  "				PackedCustomModifiers.CreateFromExternal(returnTypeCustomModifiers' parameterTypeCustomModifiers' parameterTypes.Length)' " is 121.
Long Statement,IKVM.Reflection,MissingGenericMethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Missing.cs,SetSignature,The length of the statement  "				PackedCustomModifiers.CreateFromExternal(returnTypeOptionalCustomModifiers' returnTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers' parameterTypeRequiredCustomModifiers' parameterTypes.Length)' " is 210.
Long Statement,IKVM.Reflection,Module,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Module.cs,GetMethod,The length of the statement  "			return IsResource() ? null : GetModuleType().GetMethod(name' BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.DeclaredOnly); " is 156.
Long Statement,IKVM.Reflection,Module,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Module.cs,GetMethod,The length of the statement  "			return IsResource() ? null : GetModuleType().GetMethod(name' BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.DeclaredOnly' null' types' null); " is 175.
Long Statement,IKVM.Reflection,Module,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Module.cs,GetMethod,The length of the statement  "			return IsResource() ? null : GetModuleType().GetMethod(name' bindingAttr | BindingFlags.DeclaredOnly' binder' callConv' types' modifiers); " is 138.
Long Statement,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadGenericInst,The length of the statement  "				// LAMESPEC the Type production (23.2.12) doesn't include CustomMod* for genericinst' but C++ uses it' the verifier allows it and ildasm also supports it " is 153.
Long Statement,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadType,The length of the statement  "					return ReadType(module' br' context).__MakeArrayType(br.ReadCompressedInt()' ReadArrayBounds(br)' ReadArrayBounds(br)' mods); " is 125.
Long Statement,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,WriteType,The length of the statement  "					// LAMESPEC the Type production (23.2.12) doesn't include CustomMod* for arrays' but the verifier allows it and ildasm also supports it " is 135.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetMember,The length of the statement  "				filter = delegate(MemberInfo member' object filterCriteria) { return member.Name.ToLowerInvariant().Equals(filterCriteria); }; " is 126.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetMemberByName,The length of the statement  "				for (Type type = this.BaseType; (found == null || typeof(T) == typeof(MethodInfo)) && type != null; type = type.BaseType) " is 121.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetConstructor,The length of the statement  "				?? GetMethodWithBinder<ConstructorInfo>(ConstructorInfo.ConstructorName' bindingAttr' binder ?? DefaultBinder' types' modifiers); " is 129.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetProperty,The length of the statement  "			return GetMemberByName<PropertyInfo>(name' flags' delegate(PropertyInfo prop) { return prop.PropertyType.Equals(returnType); }) " is 127.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetProperty,The length of the statement  "			return GetMemberByName<PropertyInfo>(name' flags' delegate(PropertyInfo prop) { return prop.PropertySignature.MatchParameterTypes(types); }) " is 140.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetProperty,The length of the statement  "			return GetProperty(name' BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static' null' returnType' types' modifiers); " is 128.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__MakeArrayType,The length of the statement  "			return __MakeArrayType(rank' sizes' lobounds' CustomModifiers.FromReqOpt(requiredCustomModifiers' optionalCustomModifiers)); " is 124.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__MakeGenericType,The length of the statement  "			return GenericTypeInstance.Make(this' Util.Copy(typeArguments)' customModifiers == null ? null : (CustomModifiers[])customModifiers.Clone()); " is 141.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__MakeGenericType,The length of the statement  "					mods[i] = CustomModifiers.FromReqOpt(Util.NullSafeElementAt(requiredCustomModifiers' i)' Util.NullSafeElementAt(optionalCustomModifiers' i)); " is 141.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetInterfaceMap,The length of the statement  "				map.InterfaceMethods = interfaceType.GetMethods(BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Public); " is 121.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetInterfaceMap,The length of the statement  "						// TODO use proper method resolution (also take into account that no implicit base class implementation is used across assembly boundaries) " is 139.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetInterfaceMap,The length of the statement  "				for (Type baseType = this.BaseType; baseType != null && interfaceType.IsAssignableFrom(baseType); baseType = baseType.BaseType) " is 127.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetPseudoCustomAttributeConstructor,The length of the statement  "			MethodSignature methodSig = MethodSignature.MakeFromBuilder(u.System_Void' parameterTypes' new PackedCustomModifiers()' CallingConventions.Standard | CallingConventions.HasThis' 0); " is 181.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingMethod,The length of the statement  "			return CreateMissingMethod(name' callingConvention' returnType' parameterTypes' PackedCustomModifiers.CreateFromExternal(returnTypeCustomModifiers' parameterTypeCustomModifiers' parameterTypes.Length)); " is 202.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingMethod,The length of the statement  "			return CreateMissingMethod(name' callingConvention' returnType' parameterTypes' PackedCustomModifiers.CreateFromExternal(returnTypeOptionalCustomModifiers' returnTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers' parameterTypeRequiredCustomModifiers' parameterTypes.Length)); " is 291.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingField,The length of the statement  "			return __CreateMissingField(name' fieldType' CustomModifiers.FromReqOpt(requiredCustomModifiers' optionalCustomModifiers)); " is 123.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__CreateMissingProperty,The length of the statement  "				PackedCustomModifiers.CreateFromExternal(propertyTypeCustomModifiers' parameterTypeCustomModifiers' Util.NullSafeLength(parameterTypes))); " is 138.
Long Statement,IKVM.Reflection,Type,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,ResolvePotentialEnumOrValueType,The length of the statement  "			if (this.Assembly == this.Universe.Mscorlib || this.Assembly.GetName().Name.Equals("mscorlib"' StringComparison.OrdinalIgnoreCase)) " is 131.
Long Statement,IKVM.Reflection,ArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "			list.Add(new BuiltinArrayMethod(this.Module' this' "Set"' CallingConventions.Standard | CallingConventions.HasThis' this.Module.universe.System_Void' new Type[] { this.Module.universe.System_Int32' elementType })); " is 214.
Long Statement,IKVM.Reflection,ArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "			list.Add(new BuiltinArrayMethod(this.Module' this' "Address"' CallingConventions.Standard | CallingConventions.HasThis' elementType.MakeByRefType()' int32)); " is 157.
Long Statement,IKVM.Reflection,ArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "			list.Add(new BuiltinArrayMethod(this.Module' this' "Get"' CallingConventions.Standard | CallingConventions.HasThis' elementType' int32)); " is 137.
Long Statement,IKVM.Reflection,ArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "			list.Add(new ConstructorInfoImpl(new BuiltinArrayMethod(this.Module' this' ".ctor"' CallingConventions.Standard | CallingConventions.HasThis' this.Module.universe.System_Void' int32))); " is 185.
Long Statement,IKVM.Reflection,ArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "				list.Add(new ConstructorInfoImpl(new BuiltinArrayMethod(this.Module' this' ".ctor"' CallingConventions.Standard | CallingConventions.HasThis' this.Module.universe.System_Void' int32))); " is 185.
Long Statement,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "				new ConstructorInfoImpl(new BuiltinArrayMethod(this.Module' this' ".ctor"' CallingConventions.Standard | CallingConventions.HasThis' this.Module.universe.System_Void' getArgs))' " is 177.
Long Statement,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "				new ConstructorInfoImpl(new BuiltinArrayMethod(this.Module' this' ".ctor"' CallingConventions.Standard | CallingConventions.HasThis' this.Module.universe.System_Void' ctorArgs))' " is 178.
Long Statement,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "				new BuiltinArrayMethod(this.Module' this' "Set"' CallingConventions.Standard | CallingConventions.HasThis' this.Module.universe.System_Void' setArgs)' " is 150.
Long Statement,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "				new BuiltinArrayMethod(this.Module' this' "Address"' CallingConventions.Standard | CallingConventions.HasThis' elementType.MakeByRefType()' getArgs)' " is 149.
Long Statement,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The length of the statement  "				new BuiltinArrayMethod(this.Module' this' "Get"' CallingConventions.Standard | CallingConventions.HasThis' elementType' getArgs)' " is 129.
Long Statement,IKVM.Reflection,GenericTypeInstance,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,Make,The length of the statement  "				// we must not instantiate the identity instance' because typeof(Foo<>).MakeGenericType(typeof(Foo<>).GetGenericArguments()) == typeof(Foo<>) " is 141.
Long Statement,IKVM.Reflection,TypeNameParser,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\TypeNameParser.cs,Expand,The length of the statement  "					typeArgs[i] = genericParameters[i].GetType(type.Assembly.universe' context' throwOnError' originalName' resolve' ignoreCase); " is 125.
Long Statement,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,ImportImpl,The length of the statement  "				// note that we can't pass in the namespace here' because .NET's Type.Namespace implementation is broken for nested types " is 121.
Long Statement,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,DefineDynamicAssemblyImpl,The length of the statement  "			AssemblyBuilder asm = new AssemblyBuilder(this' name' dir' requiredPermissions' optionalPermissions' refusedPermissions); " is 121.
Long Statement,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,GetMissingTypeOrThrow,The length of the statement  "			throw new TypeLoadException(String.Format("Type '{0}' not found in assembly '{1}'"' fullName' module.Assembly.FullName)); " is 121.
Long Statement,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,MakeStandAloneMethodSig,The length of the statement  "			return new __StandAloneMethodSig(true' callingConvention' 0' returnType ?? this.System_Void' Util.Copy(parameterTypes)' Type.EmptyTypes' " is 136.
Long Statement,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,MakeStandAloneMethodSig,The length of the statement  "				PackedCustomModifiers.CreateFromExternal(returnTypeCustomModifiers' parameterTypeCustomModifiers' Util.NullSafeLength(parameterTypes))); " is 136.
Long Statement,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,MakeStandAloneMethodSig,The length of the statement  "			return new __StandAloneMethodSig(false' 0' callingConvention' returnType ?? this.System_Void' Util.Copy(parameterTypes)' Util.Copy(optionalParameterTypes)' " is 155.
Long Statement,IKVM.Reflection,Universe,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,MakeStandAloneMethodSig,The length of the statement  "				PackedCustomModifiers.CreateFromExternal(returnTypeCustomModifiers' parameterTypeCustomModifiers' Util.NullSafeLength(parameterTypes) + Util.NullSafeLength(optionalParameterTypes))); " is 182.
Long Statement,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,The length of the statement  "			System.Security.Permissions.SecurityAction requestOptional = System.Security.Permissions.SecurityAction.RequestOptional; " is 120.
Long Statement,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,The length of the statement  "			ResourceSection unmanagedResources = versionInfo != null || win32icon != null || win32manifest != null || win32resources != null " is 128.
Long Statement,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,The length of the statement  "						ModuleWriter.WriteModule(null' null' moduleBuilder' fileKind' portableExecutableKind' imageFileMachine' moduleBuilder.unmanagedResources' entryPoint.MetadataToken); " is 164.
Long Statement,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,The length of the statement  "						ModuleWriter.WriteModule(null' null' moduleBuilder' fileKind' portableExecutableKind' imageFileMachine' moduleBuilder.unmanagedResources' 0); " is 141.
Long Statement,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,The length of the statement  "			ModuleWriter.WriteModule(keyPair' publicKey' manifestModule' fileKind' portableExecutableKind' imageFileMachine' unmanagedResources ?? manifestModule.unmanagedResources' entryPointToken' streamOrNull); " is 201.
Long Statement,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,__DefineUnmanagedResource,The length of the statement  "			// The standard .NET DefineUnmanagedResource(byte[]) is useless' because it embeds "resource" (as-is) as the .rsrc section' " is 123.
Long Statement,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,__DefineUnmanagedResource,The length of the statement  "			// but it doesn't set the PE file Resource Directory entry to point to it. That's why we have a renamed version' which behaves " is 126.
Long Statement,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,DefineUnmanagedResource,The length of the statement  "			// This method reads the specified resource file (Win32 .res file) and converts it into the appropriate format and embeds it in the .rsrc section' " is 146.
Long Statement,IKVM.Reflection.Emit,ConstructorBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ConstructorBuilder.cs,__SetSignature,The length of the statement  "			methodBuilder.SetSignature(returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers); " is 201.
Long Statement,IKVM.Reflection.Emit,CustomAttributeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,ToData,The length of the statement  "						namedArgs.Add(new CustomAttributeNamedArgument(namedProperties[i]' RewrapValue(namedProperties[i].PropertyType' propertyValues[i]))); " is 133.
Long Statement,IKVM.Reflection.Emit,EnumBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\EnumBuilder.cs,DefineLiteral,The length of the statement  "			FieldBuilder fb = typeBuilder.DefineField(literalName' typeBuilder' FieldAttributes.Public | FieldAttributes.Static | FieldAttributes.Literal); " is 143.
Long Statement,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,The length of the statement  "				Debug.Assert(labelStackHeight[label.Index] == -1 || labelStackHeight[label.Index] == flowStackHeight || (flowStackHeight == -1 && labelStackHeight[label.Index] == 0)); " is 167.
Long Statement,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteByteBranchOffset,The length of the statement  "				throw new NotSupportedException("Branch offset of " + offset + " does not fit in one-byte branch target at position " + code.Position); " is 135.
Long Statement,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,The length of the statement  "			code.Write(0x11000000 | moduleBuilder.StandAloneSig.FindOrAddRecord(moduleBuilder.Blobs.Add(signature.GetSignature(moduleBuilder)))); " is 133.
Long Statement,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,EmitCalli,The length of the statement  "			__EmitCalli(opc' moduleBuilder.universe.MakeStandAloneMethodSig(callingConvention' returnType' new CustomModifiers()' parameterTypes' null)); " is 141.
Long Statement,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,EmitCalli,The length of the statement  "			__EmitCalli(opc' moduleBuilder.universe.MakeStandAloneMethodSig(callingConvention' returnType' new CustomModifiers()' parameterTypes' optionalParameterTypes' null)); " is 165.
Long Statement,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,__EmitCalli,The length of the statement  "				UpdateStack(opc' (callingConvention & CallingConventions.HasThis | CallingConventions.ExplicitThis) == CallingConventions.HasThis' sig.ReturnType' sig.ParameterCount); " is 167.
Long Statement,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteScope,The length of the statement  "					moduleBuilder.symbolWriter.DefineLocalVariable2(local.name' 0' localVarSigTok' SymAddressKind.ILOffset' local.LocalIndex' 0' 0' startOffset' endOffset); " is 152.
Long Statement,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetDllImportPseudoCustomAttribute,The length of the statement  "			rec.ImportScope = this.ModuleBuilder.ModuleRef.FindOrAddRecord(dllName == null ? 0 : this.ModuleBuilder.Strings.Add(dllName)); " is 126.
Long Statement,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetSignature,The length of the statement  "			SetSignature(returnType' parameterTypes' PackedCustomModifiers.CreateFromExternal(returnTypeOptionalCustomModifiers' returnTypeRequiredCustomModifiers' " is 151.
Long Statement,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,__SetSignature,The length of the statement  "			SetSignature(returnType' parameterTypes' PackedCustomModifiers.CreateFromExternal(returnTypeCustomModifiers' parameterTypeCustomModifiers' Util.NullSafeLength(parameterTypes))); " is 177.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineEnum,The length of the statement  "			TypeBuilder tb = DefineType(name' (visibility & TypeAttributes.VisibilityMask) | TypeAttributes.Sealed' universe.System_Enum); " is 126.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineEnum,The length of the statement  "			FieldBuilder fb = tb.DefineField("value__"' underlyingType' FieldAttributes.Public | FieldAttributes.SpecialName | FieldAttributes.RTSpecialName); " is 146.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,__DefineModuleInitializer,The length of the statement  "			return moduleType.DefineConstructor(visibility | MethodAttributes.Static | MethodAttributes.SpecialName | MethodAttributes.RTSpecialName' CallingConventions.Standard' Type.EmptyTypes); " is 184.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineGlobalMethod,The length of the statement  "			return moduleType.DefineMethod(name' attributes' callingConvention' returnType' requiredReturnTypeCustomModifiers' optionalReturnTypeCustomModifiers' parameterTypes' requiredParameterTypeCustomModifiers' optionalParameterTypeCustomModifiers); " is 242.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefinePInvokeMethod,The length of the statement  "			return moduleType.DefinePInvokeMethod(name' dllName' attributes' callingConvention' returnType' parameterTypes' nativeCallConv' nativeCharSet); " is 143.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefinePInvokeMethod,The length of the statement  "			return moduleType.DefinePInvokeMethod(name' dllName' entryName' attributes' callingConvention' returnType' parameterTypes' nativeCallConv' nativeCharSet); " is 154.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,AddDeclarativeSecurity,The length of the statement  "			rec.PermissionSet = this.Blobs.Add(ByteBuffer.Wrap(System.Text.Encoding.Unicode.GetBytes(permissionSet.ToXml().ToString()))); " is 125.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ApplyUnmanagedExports,The length of the statement  "							exp.rva = new RelativeVirtualAddress(rva.initializedDataOffset + (uint)(methods.IndexOf(unmanagedExports[i].mb) * size)); " is 121.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,IsVisible,The length of the statement  "			return type.IsPublic || ((type.IsNestedFamily || type.IsNestedFamORAssem || type.IsNestedPublic) && IsVisible(type.DeclaringType)); " is 131.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineUnmanagedResource,The length of the statement  "			// This method reads the specified resource file (Win32 .res file) and converts it into the appropriate format and embeds it in the .rsrc section' " is 146.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetSignatureToken,The length of the statement  "			return new SignatureToken(this.StandAloneSig.FindOrAddRecord(this.Blobs.Add(sigHelper.GetSignature(this))) | (StandAloneSigTable.Index << 24)); " is 143.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetSignatureToken,The length of the statement  "			return new SignatureToken(this.StandAloneSig.FindOrAddRecord(this.Blobs.Add(ByteBuffer.Wrap(sigBytes' sigLength))) | (StandAloneSigTable.Index << 24)); " is 151.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SaveImpl,The length of the statement  "				string[] placeholderTypeNames = new string[] { "AssemblyAttributesGoHere"' "AssemblyAttributesGoHereM"' "AssemblyAttributesGoHereS"' "AssemblyAttributesGoHereSM" }; " is 164.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SaveImpl,The length of the statement  "						// we manually add a TypeRef without looking it up in mscorlib' because Mono and Silverlight's mscorlib don't have these types " is 126.
Long Statement,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SaveImpl,The length of the statement  "			ModuleWriter.WriteModule(null' null' this' PEFileKinds.Dll' portableExecutableKind' imageFileMachine' unmanagedResources' 0' streamOrNull); " is 139.
Long Statement,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the statement  "			return GetPropertySigHelper(mod' CallingConventions.Standard' returnType' requiredReturnTypeCustomModifiers' optionalReturnTypeCustomModifiers' parameterTypes' requiredParameterTypeCustomModifiers' optionalParameterTypeCustomModifiers); " is 236.
Long Statement,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetPropertySigHelper,The length of the statement  "			sig.returnTypeCustomModifiers = CustomModifiers.FromReqOpt(requiredReturnTypeCustomModifiers' optionalReturnTypeCustomModifiers); " is 129.
Long Statement,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetSignature,The length of the statement  "						Signature.WriteStandAloneMethodSig(module' bb' module.universe.MakeStandAloneMethodSig(unmanagedCallConv' returnType' returnTypeCustomModifiers' args.ToArray()' customModifiers.ToArray())); " is 189.
Long Statement,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetSignature,The length of the statement  "						Signature.WriteStandAloneMethodSig(module' bb' module.universe.MakeStandAloneMethodSig(callingConvention' returnType' returnTypeCustomModifiers' args.ToArray()' optionalArgs.ToArray()' customModifiers.ToArray())); " is 213.
Long Statement,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetSignature,The length of the statement  "					Signature.WritePropertySig(module' bb' callingConvention' returnType' returnTypeCustomModifiers' args.ToArray()' customModifiers.ToArray()); " is 140.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineDefaultConstructor,The length of the statement  "			ilgen.Emit(OpCodes.Call' BaseType.GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null)); " is 149.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineConstructor,The length of the statement  "			string name = (attribs & MethodAttributes.Static) == 0 ? ConstructorInfo.ConstructorName : ConstructorInfo.TypeConstructorName; " is 127.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineConstructor,The length of the statement  "			MethodBuilder mb = DefineMethod(name' attribs' callingConvention' null' null' null' parameterTypes' requiredCustomModifiers' optionalCustomModifiers); " is 150.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineTypeInitializer,The length of the statement  "			MethodBuilder mb = DefineMethod(ConstructorInfo.TypeConstructorName' MethodAttributes.Private | MethodAttributes.Static | MethodAttributes.RTSpecialName | MethodAttributes.SpecialName' null' Type.EmptyTypes); " is 208.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineMethod,The length of the statement  "			mb.SetSignature(returnType' returnTypeRequiredCustomModifiers' returnTypeOptionalCustomModifiers' parameterTypes' parameterTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers); " is 190.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The length of the statement  "			return DefinePInvokeMethod(name' dllName' null' attributes' callingConvention' returnType' null' null' parameterTypes' null' null' nativeCallConv' nativeCharSet); " is 162.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefinePInvokeMethod,The length of the statement  "			return DefinePInvokeMethod(name' dllName' entryName' attributes' callingConvention' returnType' null' null' parameterTypes' null' null' nativeCallConv' nativeCharSet); " is 167.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineField,The length of the statement  "			return __DefineField(fieldName' type' CustomModifiers.FromReqOpt(requiredCustomModifiers' optionalCustomModifiers)' attributes); " is 128.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the statement  "				PackedCustomModifiers.CreateFromExternal(returnTypeOptionalCustomModifiers' returnTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers' parameterTypeRequiredCustomModifiers' Util.NullSafeLength(parameterTypes))); " is 225.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineProperty,The length of the statement  "				PackedCustomModifiers.CreateFromExternal(returnTypeOptionalCustomModifiers' returnTypeRequiredCustomModifiers' parameterTypeOptionalCustomModifiers' parameterTypeRequiredCustomModifiers' Util.NullSafeLength(parameterTypes))); " is 225.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,__DefineProperty,The length of the statement  "				PackedCustomModifiers.CreateFromExternal(returnTypeCustomModifiers' parameterTypeCustomModifiers' Util.NullSafeLength(parameterTypes))); " is 136.
Long Statement,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,DefineInitializedData,The length of the statement  "				TypeBuilder tb = this.ModuleBuilder.DefineType("$ArrayType$" + data.Length' TypeAttributes.Public | TypeAttributes.Sealed | TypeAttributes.ExplicitLayout' this.Module.universe.System_ValueType' PackingSize.Size1' data.Length); " is 226.
Long Statement,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,DefineLocalVariable2,The length of the statement  "			currentMethod.scopeStack.Peek().locals[name] = new LocalVar(attributes' signature' addrKind' addr1' addr2' addr3' startOffset' endOffset); " is 138.
Long Statement,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,InitWriter,The length of the statement  "				// pro-actively delete the .pdb to get a meaningful IOException' instead of COMInteropException if the file can't be overwritten (or is corrupt' or who knows what) " is 163.
Long Statement,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,Close,The length of the statement  "					symUnmanagedWriter.DefineSequencePoints(doc' method.offsets.Length' method.offsets' method.lines' method.columns' method.endLines' method.endColumns); " is 150.
Long Statement,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,GetMethodProps,The length of the statement  "			if (pdwAttr != IntPtr.Zero || ppvSigBlob != IntPtr.Zero || pcbSigBlob != IntPtr.Zero || pulCodeRVA != IntPtr.Zero || pdwImplFlags != IntPtr.Zero) " is 145.
Long Statement,IKVM.Reflection.Impl,Scope,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,Do,The length of the statement  "					symUnmanagedWriter.DefineLocalVariable2(kv.Key' (int)kv.Value.attributes' kv.Value.signature' (int)kv.Value.addrKind' kv.Value.addr1' kv.Value.addr2' kv.Value.addr3' kv.Value.startOffset' kv.Value.endOffset); " is 208.
Long Statement,IKVM.Reflection.Impl,SymbolSupport,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\SymbolSupport.cs,CreateSymbolWriterFor,The length of the statement  "			throw new NotSupportedException("IKVM.Reflection compiled with NO_SYMBOL_WRITER does not support writing debugging symbols."); " is 126.
Long Statement,IKVM.Reflection.Impl,SymbolSupport,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\SymbolSupport.cs,CreateSymbolWriterFor,The length of the statement  "				throw new NotSupportedException("IKVM.Reflection must be compiled with MONO defined to support writing Mono debugging symbols."); " is 129.
Long Statement,IKVM.Reflection.Reader,AssemblyReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\AssemblyReader.cs,GetModuleIndex,The length of the statement  "				if (name.Equals(manifestModule.GetString(manifestModule.File.records[i].Name)' StringComparison.InvariantCultureIgnoreCase)) " is 124.
Long Statement,IKVM.Reflection.Reader,AssemblyReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\AssemblyReader.cs,GetModule,The length of the statement  "			string location = Path.Combine(Path.GetDirectoryName(this.location)' manifestModule.GetString(manifestModule.File.records[index].Name)); " is 136.
Long Statement,IKVM.Reflection.Reader,FieldDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Field.cs,GetCustomAttributesData,The length of the statement  "				&& (attributeType == null || attributeType.IsAssignableFrom(module.universe.System_Runtime_InteropServices_MarshalAsAttribute))) " is 128.
Long Statement,IKVM.Reflection.Reader,FieldDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Field.cs,GetCustomAttributesData,The length of the statement  "				&& (attributeType == null || attributeType.IsAssignableFrom(module.universe.System_Runtime_InteropServices_FieldOffsetAttribute))) " is 130.
Long Statement,IKVM.Reflection.Reader,FieldDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Field.cs,GetCustomAttributesData,The length of the statement  "					ConstructorInfo constructor = module.universe.System_Runtime_InteropServices_FieldOffsetAttribute.GetPseudoCustomAttributeConstructor(module.universe.System_Int32); " is 164.
Long Statement,IKVM.Reflection.Reader,MethodDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Method.cs,PopulateParameters,The length of the statement  "				int end = module.MethodDef.records.Length > index + 1 ? module.MethodDef.records[index + 1].ParamList - 1 : module.Param.records.Length; " is 136.
Long Statement,IKVM.Reflection.Reader,MethodDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Method.cs,GetCustomAttributesData,The length of the statement  "				&& (attributeType == null || attributeType.IsAssignableFrom(module.universe.System_Runtime_InteropServices_DllImportAttribute))) " is 128.
Long Statement,IKVM.Reflection.Reader,MethodDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Method.cs,CreateDllImportPseudoCustomAttribute,The length of the statement  "				AddNamedArgument(list' type' "PreserveSig"' (int)GetMethodImplementationFlags()' (int)MethodImplAttributes.PreserveSig); " is 120.
Long Statement,IKVM.Reflection.Reader,MethodDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Method.cs,CreateDllImportPseudoCustomAttribute,The length of the statement  "				AddNamedArgument(list' type' "CallingConvention"' module.universe.System_Runtime_InteropServices_CallingConvention' (int)callingConvention); " is 140.
Long Statement,IKVM.Reflection.Reader,ParameterInfoImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\Method.cs,GetCustomAttributesData,The length of the statement  "				&& (attributeType == null || attributeType.IsAssignableFrom(this.Module.universe.System_Runtime_InteropServices_MarshalAsAttribute))) " is 133.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,TokenOutOfRangeException,The length of the statement  "			return new ArgumentOutOfRangeException("metadataToken"' String.Format("Token 0x{0:x8} is not valid in the scope of module {1}."' metadataToken' this.Name)); " is 156.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveField,The length of the statement  "				throw new ArgumentException(String.Format("Token 0x{0:x8} is not a valid FieldInfo token in the scope of module {1}."' metadataToken' this.Name)' "metadataToken"); " is 163.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveMethod,The length of the statement  "				throw new ArgumentException(String.Format("Token 0x{0:x8} is not a valid MethodBase token in the scope of module {1}."' metadataToken' this.Name)' "metadataToken"); " is 164.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveMethod,The length of the statement  "				MethodInfo method = (MethodInfo)ResolveMethod(MethodSpec.records[index].Method' genericTypeArguments' genericMethodArguments); " is 126.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveMethod,The length of the statement  "				return method.MakeGenericMethod(Signature.ReadMethodSpec(this' instantiation' new GenericContext(genericTypeArguments' genericMethodArguments))); " is 145.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,__ResolveOptionalParameterTypes,The length of the statement  "				return Signature.ReadOptionalParameterTypes(this' GetBlob(sig)' new GenericContext(genericTypeArguments' genericMethodArguments)' out customModifiers); " is 151.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,GetMemberRef,The length of the statement  "							MethodSignature methodSig = MethodSignature.ReadSig(this' ByteReader.FromBlob(blobHeap' sig)' new GenericContext(genericTypeArguments' genericMethodArguments)); " is 160.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,__ResolveStandAloneMethodSig,The length of the statement  "				return MethodSignature.ReadStandAloneMethodSig(this' GetStandAloneSig(index)' new GenericContext(genericTypeArguments' genericMethodArguments)); " is 144.
Long Statement,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveExportedType,The length of the statement  "					return ResolveExportedType((implementation & 0xFFFFFF) - 1).ResolveNestedType(typeName).SetMetadataTokenForMissing(token); " is 122.
Long Statement,IKVM.Reflection.Reader,PropertyInfoImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PropertyInfoImpl.cs,GetAccessors,The length of the statement  "			return module.MethodSemantics.GetMethods(module' this.MetadataToken' nonPublic' MethodSemanticsTable.Getter | MethodSemanticsTable.Setter | MethodSemanticsTable.Other); " is 168.
Long Statement,IKVM.Reflection.Reader,TypeDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\TypeDefImpl.cs,__GetDeclaredEvents,The length of the statement  "				int end = module.EventMap.records.Length > i + 1 ? module.EventMap.records[i + 1].EventList - 1 : module.Event.records.Length; " is 126.
Long Statement,IKVM.Reflection.Reader,TypeDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\TypeDefImpl.cs,__GetDeclaredFields,The length of the statement  "			int end = module.TypeDef.records.Length > index + 1 ? module.TypeDef.records[index + 1].FieldList - 1 : module.Field.records.Length; " is 132.
Long Statement,IKVM.Reflection.Reader,TypeDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\TypeDefImpl.cs,__GetDeclaredMethods,The length of the statement  "			int end = module.TypeDef.records.Length > index + 1 ? module.TypeDef.records[index + 1].MethodList - 1 : module.MethodDef.records.Length; " is 137.
Long Statement,IKVM.Reflection.Reader,TypeDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\TypeDefImpl.cs,__GetMethodImplMap,The length of the statement  "				MethodInfo declaration = (MethodInfo)module.ResolveMethod(module.MethodImpl.records[i].MethodDeclaration' typeArgs' null); " is 122.
Long Statement,IKVM.Reflection.Reader,TypeDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\TypeDefImpl.cs,__GetDeclaredProperties,The length of the statement  "				int end = module.PropertyMap.records.Length > i + 1 ? module.PropertyMap.records[i + 1].PropertyList - 1 : module.Property.records.Length; " is 138.
Long Statement,IKVM.Reflection.Writer,UserStringHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,Add,The length of the statement  "					throw new FileFormatLimitationExceededException("No logical space left to create more user strings."' FileFormatLimitationExceededException.META_E_STRINGSPACE_FULL); " is 165.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModule,The length of the statement  "			WriteModule(keyPair' publicKey' moduleBuilder' fileKind' portableExecutableKind' imageFileMachine' resources' entryPointToken' null); " is 133.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModule,The length of the statement  "					WriteModuleImpl(keyPair' publicKey' moduleBuilder' fileKind' portableExecutableKind' imageFileMachine' resources' entryPointToken' fs); " is 135.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModule,The length of the statement  "				WriteModuleImpl(keyPair' publicKey' moduleBuilder' fileKind' portableExecutableKind' imageFileMachine' resources' entryPointToken' stream); " is 139.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The length of the statement  "			moduleBuilder.ModuleTable.Add(0' moduleBuilder.Strings.Add(moduleBuilder.moduleName)' moduleBuilder.Guids.Add(moduleBuilder.ModuleVersionId)' 0' 0); " is 148.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The length of the statement  "			text.Characteristics = SectionHeader.IMAGE_SCN_CNT_CODE | SectionHeader.IMAGE_SCN_MEM_EXECUTE | SectionHeader.IMAGE_SCN_MEM_READ; " is 129.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The length of the statement  "			sdata.Characteristics = SectionHeader.IMAGE_SCN_CNT_INITIALIZED_DATA | SectionHeader.IMAGE_SCN_MEM_READ | SectionHeader.IMAGE_SCN_MEM_WRITE; " is 140.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The length of the statement  "			reloc.Characteristics = SectionHeader.IMAGE_SCN_MEM_READ | SectionHeader.IMAGE_SCN_CNT_INITIALIZED_DATA | SectionHeader.IMAGE_SCN_MEM_DISCARDABLE; " is 146.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The length of the statement  "				StrongName(stream' keyPair' writer.HeaderSize' text.PointerToRawData' code.StrongNameSignatureRVA - text.VirtualAddress + text.PointerToRawData' code.StrongNameSignatureLength); " is 177.
Long Statement,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,ComputeStrongNameSignatureLength,The length of the statement  "				// it must be the ECMA pseudo public key' we don't know the key size of the real key' but currently both Mono and Microsoft use a 1024 bit key size " is 147.
Long Statement,IKVM.Reflection.Writer,ResourceSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,AddManifest,The length of the statement  "			root[new OrdinalOrName(RT_MANIFEST)][new OrdinalOrName(resourceID)][new OrdinalOrName(0)].Data = ByteBuffer.Wrap(manifest); " is 123.
Long Statement,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,Write,The length of the statement  "			for (int i = (int)(ExportDirectoryRVA - (DebugDirectoryRVA + DebugDirectoryLength + DebugDirectoryContentsLength)); i > 0; i--) " is 127.
Long Statement,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,Write,The length of the statement  "								mw.Write((uint)text.peWriter.Headers.OptionalHeader.ImageBase + text.moduleBuilder.unmanagedExports[pos].rva.initializedDataOffset + sdataRVA); " is 143.
Long Statement,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,Write,The length of the statement  "								mw.Write(text.peWriter.Headers.OptionalHeader.ImageBase + text.moduleBuilder.unmanagedExports[pos].rva.initializedDataOffset + sdataRVA); " is 137.
Long Statement,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The length of the statement  "				// AssemblyName.CultureInfo throws an ArgumentException if AssemblyBuilder.__SetAssemblyCulture() was used to specify a non-existing culture " is 140.
Long Statement,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The length of the statement  "			  0x56' 0x00' 0x53' 0x00' 0x5F' 0x00' 0x56' 0x00' 0x45' 0x00' 0x52' 0x00' 0x53' 0x00' 0x49' 0x00' 0x4F' 0x00' 0x4E' 0x00' 0x5F' 0x00' 0x49' 0x00' 0x4E' 0x00' 0x46' 0x00' 0x4F' 0x00' 0x00' 0x00'  // "VS_VERSION_INFO\0" " is 215.
Long Statement,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The length of the statement  "			  0x56' 0x00' 0x61' 0x00' 0x72' 0x00' 0x46' 0x00' 0x69' 0x00' 0x6C' 0x00' 0x65' 0x00' 0x49' 0x00' 0x6E' 0x00' 0x66' 0x00' 0x6F' 0x00' 0x00' 0x00'	// "VarFileInfo\0" " is 162.
Long Statement,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The length of the statement  "			  0x54' 0x00' 0x72' 0x00' 0x61' 0x00' 0x6E' 0x00' 0x73' 0x00' 0x6C' 0x00' 0x61' 0x00' 0x74' 0x00' 0x69' 0x00' 0x6F' 0x00' 0x6E' 0x00' 0x00' 0x00'	// "Translation\0" " is 162.
Complex Conditional,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,AssemblyName,The conditional expression  "parsed.Culture == null || parsed.PublicKeyToken == null || parsed.Version == null || parsed.Version.Build == -1 || parsed.Version.Revision == -1"  is complex.
Complex Conditional,IKVM.Reflection,CustomAttributeData,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeData.cs,AppendValue,The conditional expression  "elementType.IsPrimitive  					|| elementType == type.Module.universe.System_Object  					|| elementType == type.Module.universe.System_String  					|| elementType == type.Module.universe.System_Type"  is complex.
Complex Conditional,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseAssemblySimpleName,The conditional expression  "ch == '=' || (quoteOrComma == ''' && (ch == '\'' || ch == '"'))"  is complex.
Complex Conditional,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The conditional expression  "ushort.TryParse(parts[0]' System.Globalization.NumberStyles.Integer' null' out major)  				&& ushort.TryParse(parts[1]' System.Globalization.NumberStyles.Integer' null' out minor)  				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build))  				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))"  is complex.
Complex Conditional,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,__Save,The conditional expression  "!stream.CanRead || !stream.CanWrite || !stream.CanSeek || stream.Position != 0"  is complex.
Complex Conditional,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,__DefineUnmanagedResource,The conditional expression  "versionInfo != null || win32icon != null || win32manifest != null || win32resources != null"  is complex.
Complex Conditional,IKVM.Reflection.Emit,CustomAttributeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,GetLegacyDeclSecurity,The conditional expression  "con.DeclaringType == con.Module.universe.System_Security_Permissions_PermissionSetAttribute  				&& blob == null  				&& (namedFields == null || namedFields.Length == 0)  				&& namedProperties != null  				&& namedProperties.Length == 1  				&& namedProperties[0].Name == "XML""  is complex.
Complex Conditional,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,The conditional expression  "(opc == OpCodes.Ldloc || opc == OpCodes.Ldloca || opc == OpCodes.Stloc) && local.LocalIndex < 256"  is complex.
Complex Conditional,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteBody,The conditional expression  "locals.Count == 0 && exceptions.Count == 0 && maxStack <= 8 && code.Length < 64 && !fatHeader"  is complex.
Complex Conditional,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The conditional expression  "block.tryOffset > 65535 || block.tryLength > 255 || block.handlerOffset > 65535 || block.handlerLength > 255"  is complex.
Complex Conditional,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,__Save,The conditional expression  "!stream.CanRead || !stream.CanWrite || !stream.CanSeek || stream.Position != 0"  is complex.
Complex Conditional,IKVM.Reflection.Impl,PdbWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Impl\PdbWriter.cs,GetMethodProps,The conditional expression  "pdwAttr != IntPtr.Zero || ppvSigBlob != IntPtr.Zero || pcbSigBlob != IntPtr.Zero || pulCodeRVA != IntPtr.Zero || pdwImplFlags != IntPtr.Zero"  is complex.
Complex Conditional,IKVM.Reflection.Metadata,AssemblyRefTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,FindOrAddRecord,The conditional expression  "records[i].Name == rec.Name  					&& records[i].MajorVersion == rec.MajorVersion  					&& records[i].MinorVersion == rec.MinorVersion  					&& records[i].BuildNumber == rec.BuildNumber  					&& records[i].RevisionNumber == rec.RevisionNumber  					&& records[i].Flags == rec.Flags  					&& records[i].PublicKeyOrToken == rec.PublicKeyOrToken  					&& records[i].Culture == rec.Culture"  is complex.
Complex Conditional,IKVM.Reflection.Writer,UserStringHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,WriteImpl,The conditional expression  "ch > 0x7E  							|| (ch >= 0x01 && ch <= 0x08)  							|| (ch >= 0x0E && ch <= 0x1F)  							|| ch == 0x27  							|| ch == 0x2D"  is complex.
Empty Catch Block,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModule,The method has an empty catch block.
Empty Catch Block,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The method has an empty catch block.
Magic Number,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,AssemblyName,The following statement contains a magic number: parsed.Version != null && parsed.Version.Major != 65535 && parsed.Version.Minor != 65535
Magic Number,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,AssemblyName,The following statement contains a magic number: parsed.Version != null && parsed.Version.Major != 65535 && parsed.Version.Minor != 65535
Magic Number,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,ComputePublicKeyToken,The following statement contains a magic number: StringBuilder sb = new StringBuilder("Foo' PublicKey="' 20 + publicKey.Length * 2);
Magic Number,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,ComputePublicKeyToken,The following statement contains a magic number: StringBuilder sb = new StringBuilder("Foo' PublicKey="' 20 + publicKey.Length * 2);
Magic Number,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,AppendPublicKey,The following statement contains a magic number: sb.Append("0123456789abcdef"[publicKey[i] >> 4]);
Magic Number,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,SelectBestMatch,The following statement contains a magic number: switch (MatchSignatures(mb1.MethodSignature' mb2.MethodSignature' types))  			{  				case 1:  					return mb1;  				case 2:  					return mb2;  			}
Magic Number,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,MatchTypes,The following statement contains a magic number: return 2;
Magic Number,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,MatchTypes,The following statement contains a magic number: return conv == type2.IsAssignableFrom(type1) ? 0 : conv ? 2 : 1;
Magic Number,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,SelectProperty,The following statement contains a magic number: best == 2
Magic Number,IKVM.Reflection,CustomAttributeNamedArgument,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeNamedArgument.cs,GetHashCode,The following statement contains a magic number: return member.GetHashCode() ^ 53 * value.GetHashCode();
Magic Number,IKVM.Reflection,CustomAttributeTypedArgument,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\CustomAttributeTypedArgument.cs,GetHashCode,The following statement contains a magic number: return type.GetHashCode() ^ 77 * (value == null ? 0 : value.GetHashCode());
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: parts.Length < 2 || parts.Length > 4
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: parts.Length < 2 || parts.Length > 4
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort major' minor' build = 65535' revision = 65535;
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort major' minor' build = 65535' revision = 65535;
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: parts.Length == 4 && parts[3] != "" && parts[2] != ""
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: parts.Length == 4 && parts[3] != "" && parts[2] != ""
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: parts.Length == 4 && parts[3] != "" && parts[2] != ""
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort.TryParse(parts[0]' System.Globalization.NumberStyles.Integer' null' out major)  				&& ushort.TryParse(parts[1]' System.Globalization.NumberStyles.Integer' null' out minor)  				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build))  				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort.TryParse(parts[0]' System.Globalization.NumberStyles.Integer' null' out major)  				&& ushort.TryParse(parts[1]' System.Globalization.NumberStyles.Integer' null' out minor)  				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build))  				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort.TryParse(parts[0]' System.Globalization.NumberStyles.Integer' null' out major)  				&& ushort.TryParse(parts[1]' System.Globalization.NumberStyles.Integer' null' out minor)  				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build))  				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort.TryParse(parts[0]' System.Globalization.NumberStyles.Integer' null' out major)  				&& ushort.TryParse(parts[1]' System.Globalization.NumberStyles.Integer' null' out minor)  				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build))  				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort.TryParse(parts[0]' System.Globalization.NumberStyles.Integer' null' out major)  				&& ushort.TryParse(parts[1]' System.Globalization.NumberStyles.Integer' null' out minor)  				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build))  				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort.TryParse(parts[0]' System.Globalization.NumberStyles.Integer' null' out major)  				&& ushort.TryParse(parts[1]' System.Globalization.NumberStyles.Integer' null' out minor)  				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build))  				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParseVersion,The following statement contains a magic number: ushort.TryParse(parts[0]' System.Globalization.NumberStyles.Integer' null' out major)  				&& ushort.TryParse(parts[1]' System.Globalization.NumberStyles.Integer' null' out minor)  				&& (parts.Length <= 2 || parts[2] == "" || ushort.TryParse(parts[2]' System.Globalization.NumberStyles.Integer' null' out build))  				&& (parts.Length <= 3 || parts[3] == "" || (parts[2] != "" && ushort.TryParse(parts[3]' System.Globalization.NumberStyles.Integer' null' out revision)))
Magic Number,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,ParsePublicKey,The following statement contains a magic number: StringBuilder sb = new StringBuilder(token.Length * 2);
Magic Number,IKVM.Reflection,GenericMethodInstance,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\GenericWrappers.cs,GetHashCode,The following statement contains a magic number: return declaringType.GetHashCode() * 33 ^ method.GetHashCode() ^ Util.GetHashCode(methodArgs);
Magic Number,IKVM.Reflection,GenericFieldInstance,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\GenericWrappers.cs,GetHashCode,The following statement contains a magic number: return declaringType.GetHashCode() * 3 ^ field.GetHashCode();
Magic Number,IKVM.Reflection,GenericPropertyInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\GenericWrappers.cs,GetHashCode,The following statement contains a magic number: return typeInstance.GetHashCode() * 537 + property.GetHashCode();
Magic Number,IKVM.Reflection,GenericEventInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\GenericWrappers.cs,GetHashCode,The following statement contains a magic number: return typeInstance.GetHashCode() * 777 + eventInfo.GetHashCode();
Magic Number,IKVM.Reflection,MarshalSpec,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MarshalSpec.cs,WriteMarshallingDescriptor,The following statement contains a magic number: ByteBuffer bb = new ByteBuffer(5);
Magic Number,IKVM.Reflection,MethodBody,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodBody.cs,MethodBody,The following statement contains a magic number: body = br.ReadBytes(b >> 2);
Magic Number,IKVM.Reflection,MethodBody,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodBody.cs,MethodBody,The following statement contains a magic number: maxStack = 8;
Magic Number,IKVM.Reflection,MethodBody,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodBody.cs,MethodBody,The following statement contains a magic number: (b & 3) == CorILMethod_TinyFormat
Magic Number,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,GetHashCode,The following statement contains a magic number: return genericParamCount ^ 77 * (int)callingConvention  				^ 3 * returnType.GetHashCode()  				^ Util.GetHashCode(parameterTypes) * 5  				^ modifiers.GetHashCode() * 55;
Magic Number,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,GetHashCode,The following statement contains a magic number: return genericParamCount ^ 77 * (int)callingConvention  				^ 3 * returnType.GetHashCode()  				^ Util.GetHashCode(parameterTypes) * 5  				^ modifiers.GetHashCode() * 55;
Magic Number,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,GetHashCode,The following statement contains a magic number: return genericParamCount ^ 77 * (int)callingConvention  				^ 3 * returnType.GetHashCode()  				^ Util.GetHashCode(parameterTypes) * 5  				^ modifiers.GetHashCode() * 55;
Magic Number,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,GetHashCode,The following statement contains a magic number: return genericParamCount ^ 77 * (int)callingConvention  				^ 3 * returnType.GetHashCode()  				^ Util.GetHashCode(parameterTypes) * 5  				^ modifiers.GetHashCode() * 55;
Magic Number,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,ReadSig,The following statement contains a magic number: switch (flags & 7)  			{  				case DEFAULT:  					callingConvention = CallingConventions.Standard;  					break;  				case VARARG:  					callingConvention = CallingConventions.VarArgs;  					break;  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,MethodSignature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\MethodSignature.cs,ReadStandAloneMethodSig,The following statement contains a magic number: switch (flags & 7)  			{  				case DEFAULT:  					callingConvention = CallingConventions.Standard;  					unmanaged = false;  					break;  				case 0x01:	// C  					unmanagedCallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl;  					unmanaged = true;  					break;  				case 0x02:	// STDCALL  					unmanagedCallingConvention = System.Runtime.InteropServices.CallingConvention.StdCall;  					unmanaged = true;  					break;  				case 0x03:	// THISCALL  					unmanagedCallingConvention = System.Runtime.InteropServices.CallingConvention.ThisCall;  					unmanaged = true;  					break;  				case 0x04:	// FASTCALL  					unmanagedCallingConvention = System.Runtime.InteropServices.CallingConvention.FastCall;  					unmanaged = true;  					break;  				case VARARG:  					callingConvention = CallingConventions.VarArgs;  					unmanaged = false;  					break;  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,Module,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Module.cs,GetTables,The following statement contains a magic number: Table[] tables = new Table[64];
Magic Number,IKVM.Reflection,ParameterInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\ParameterInfo.cs,GetHashCode,The following statement contains a magic number: return this.Member.GetHashCode() * 1777 + this.Position;
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadLocalVarSig,The following statement contains a magic number: br.Length < 2 || br.ReadByte() != LOCAL_SIG
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadTypeDefOrRefEncoded,The following statement contains a magic number: switch (encoded & 3)  			{  				case 0:  					return module.ResolveType((TypeDefTable.Index << 24) + (encoded >> 2)' null' null);  				case 1:  					return module.ResolveType((TypeRefTable.Index << 24) + (encoded >> 2)' null' null);  				case 2:  					return module.ResolveType((TypeSpecTable.Index << 24) + (encoded >> 2)' context);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadTypeDefOrRefEncoded,The following statement contains a magic number: switch (encoded & 3)  			{  				case 0:  					return module.ResolveType((TypeDefTable.Index << 24) + (encoded >> 2)' null' null);  				case 1:  					return module.ResolveType((TypeRefTable.Index << 24) + (encoded >> 2)' null' null);  				case 2:  					return module.ResolveType((TypeSpecTable.Index << 24) + (encoded >> 2)' context);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadTypeDefOrRefEncoded,The following statement contains a magic number: switch (encoded & 3)  			{  				case 0:  					return module.ResolveType((TypeDefTable.Index << 24) + (encoded >> 2)' null' null);  				case 1:  					return module.ResolveType((TypeRefTable.Index << 24) + (encoded >> 2)' null' null);  				case 2:  					return module.ResolveType((TypeSpecTable.Index << 24) + (encoded >> 2)' context);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadTypeDefOrRefEncoded,The following statement contains a magic number: switch (encoded & 3)  			{  				case 0:  					return module.ResolveType((TypeDefTable.Index << 24) + (encoded >> 2)' null' null);  				case 1:  					return module.ResolveType((TypeRefTable.Index << 24) + (encoded >> 2)' null' null);  				case 2:  					return module.ResolveType((TypeSpecTable.Index << 24) + (encoded >> 2)' context);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadTypeDefOrRefEncoded,The following statement contains a magic number: switch (encoded & 3)  			{  				case 0:  					return module.ResolveType((TypeDefTable.Index << 24) + (encoded >> 2)' null' null);  				case 1:  					return module.ResolveType((TypeRefTable.Index << 24) + (encoded >> 2)' null' null);  				case 2:  					return module.ResolveType((TypeSpecTable.Index << 24) + (encoded >> 2)' context);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadTypeDefOrRefEncoded,The following statement contains a magic number: switch (encoded & 3)  			{  				case 0:  					return module.ResolveType((TypeDefTable.Index << 24) + (encoded >> 2)' null' null);  				case 1:  					return module.ResolveType((TypeRefTable.Index << 24) + (encoded >> 2)' null' null);  				case 2:  					return module.ResolveType((TypeSpecTable.Index << 24) + (encoded >> 2)' context);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadTypeDefOrRefEncoded,The following statement contains a magic number: switch (encoded & 3)  			{  				case 0:  					return module.ResolveType((TypeDefTable.Index << 24) + (encoded >> 2)' null' null);  				case 1:  					return module.ResolveType((TypeRefTable.Index << 24) + (encoded >> 2)' null' null);  				case 2:  					return module.ResolveType((TypeSpecTable.Index << 24) + (encoded >> 2)' context);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,Signature,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Signature.cs,ReadTypeDefOrRefEncoded,The following statement contains a magic number: switch (encoded & 3)  			{  				case 0:  					return module.ResolveType((TypeDefTable.Index << 24) + (encoded >> 2)' null' null);  				case 1:  					return module.ResolveType((TypeRefTable.Index << 24) + (encoded >> 2)' null' null);  				case 2:  					return module.ResolveType((TypeSpecTable.Index << 24) + (encoded >> 2)' context);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection,ArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetHashCode,The following statement contains a magic number: return elementType.GetHashCode() * 5;
Magic Number,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The following statement contains a magic number: Type[] ctorArgs = new Type[rank * 2];
Magic Number,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The following statement contains a magic number: ctorArgs[i * 2 + 0] = int32;
Magic Number,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,__GetDeclaredMethods,The following statement contains a magic number: ctorArgs[i * 2 + 1] = int32;
Magic Number,IKVM.Reflection,MultiArrayType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetHashCode,The following statement contains a magic number: return elementType.GetHashCode() * 9 + rank;
Magic Number,IKVM.Reflection,ByRefType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetHashCode,The following statement contains a magic number: return elementType.GetHashCode() * 3;
Magic Number,IKVM.Reflection,PointerType,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetHashCode,The following statement contains a magic number: return elementType.GetHashCode() * 7;
Magic Number,IKVM.Reflection,GenericTypeInstance,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Type.cs,GetHashCode,The following statement contains a magic number: return type.GetHashCode() * 3 ^ Util.GetHashCode(args);
Magic Number,IKVM.Reflection,TypeName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\TypeNameParser.cs,GetHashCode,The following statement contains a magic number: return ns == null ? name.GetHashCode() : ns.GetHashCode() * 37 + name.GetHashCode();
Magic Number,IKVM.Reflection,TypeNameParser,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\TypeNameParser.cs,Escape,The following statement contains a magic number: switch (c)  				{  					case '\\':  					case '+':  					case ''':  					case '[':  					case ']':  					case '*':  					case '&':  						if (sb == null)  						{  							sb = new StringBuilder(name' 0' pos' name.Length + 3);  						}  						sb.Append("\\").Append(c);  						break;  					default:  						if (sb != null)  						{  							sb.Append(c);  						}  						break;  				}
Magic Number,IKVM.Reflection,ScopedTypeName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Universe.cs,GetHashCode,The following statement contains a magic number: return scope.GetHashCode() * 7 + name.GetHashCode();
Magic Number,IKVM.Reflection,Util,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Util.cs,GetHashCode,The following statement contains a magic number: h *= 3;
Magic Number,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,The following statement contains a magic number: ByteBuffer versionInfoData = new ByteBuffer(512);
Magic Number,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,SaveImpl,The following statement contains a magic number: unmanagedResources.AddManifest(win32manifest' fileKind == PEFileKinds.Dll ? (ushort)2 : (ushort)1);
Magic Number,IKVM.Reflection.Emit,AssemblyBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\AssemblyBuilder.cs,AddFile,The following statement contains a magic number: byte[] buf = new byte[8192];
Magic Number,IKVM.Reflection.Emit,CustomAttributeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\CustomAttributeBuilder.cs,GetBlob,The following statement contains a magic number: ByteBuffer bb = new ByteBuffer(100);
Magic Number,IKVM.Reflection.Emit,FieldBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\FieldBuilder.cs,FieldBuilder,The following statement contains a magic number: ByteBuffer sig = new ByteBuffer(5);
Magic Number,IKVM.Reflection.Emit,FieldBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\FieldBuilder.cs,SetDataAndRvaImpl,The following statement contains a magic number: bb.Align(8);
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,The following statement contains a magic number: code.Write((byte)(opc.Value >> 8));
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteByteBranchOffset,The following statement contains a magic number: offset < -128 || offset > 127
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteByteBranchOffset,The following statement contains a magic number: offset < -128 || offset > 127
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,The following statement contains a magic number: switch (local.LocalIndex)  					{  						case 0:  							Emit(OpCodes.Ldloc_0);  							break;  						case 1:  							Emit(OpCodes.Ldloc_1);  							break;  						case 2:  							Emit(OpCodes.Ldloc_2);  							break;  						case 3:  							Emit(OpCodes.Ldloc_3);  							break;  						default:  							Emit(OpCodes.Ldloc_S);  							code.Write((byte)local.LocalIndex);  							break;  					}
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,The following statement contains a magic number: switch (local.LocalIndex)  					{  						case 0:  							Emit(OpCodes.Ldloc_0);  							break;  						case 1:  							Emit(OpCodes.Ldloc_1);  							break;  						case 2:  							Emit(OpCodes.Ldloc_2);  							break;  						case 3:  							Emit(OpCodes.Ldloc_3);  							break;  						default:  							Emit(OpCodes.Ldloc_S);  							code.Write((byte)local.LocalIndex);  							break;  					}
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,The following statement contains a magic number: (opc == OpCodes.Ldloc || opc == OpCodes.Ldloca || opc == OpCodes.Stloc) && local.LocalIndex < 256
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,__EmitCalli,The following statement contains a magic number: ByteBuffer bb = new ByteBuffer(16);
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteBody,The following statement contains a magic number: locals.Count == 0 && exceptions.Count == 0 && maxStack <= 8 && code.Length < 64 && !fatHeader
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteBody,The following statement contains a magic number: locals.Count == 0 && exceptions.Count == 0 && maxStack <= 8 && code.Length < 64 && !fatHeader
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,ResolveBranches,The following statement contains a magic number: int offset = fixup.offset + 4 + 4 * count;
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,ResolveBranches,The following statement contains a magic number: int offset = fixup.offset + 4 + 4 * count;
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,ResolveBranches,The following statement contains a magic number: code.Position += 4;
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteTinyHeaderAndCode,The following statement contains a magic number: bb.Write((byte)(CorILMethod_TinyFormat | (code.Length << 2)));
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: bb.Align(4);
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: ByteBuffer localVarSig = new ByteBuffer(locals.Count + 2);
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: short flagsAndSize = (short)(CorILMethod_FatFormat | (3 << 12));
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: short flagsAndSize = (short)(CorILMethod_FatFormat | (3 << 12));
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: bb.Align(4);
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: block.tryOffset > 65535 || block.tryLength > 255 || block.handlerOffset > 65535 || block.handlerLength > 255
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: block.tryOffset > 65535 || block.tryLength > 255 || block.handlerOffset > 65535 || block.handlerLength > 255
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: block.tryOffset > 65535 || block.tryLength > 255 || block.handlerOffset > 65535 || block.handlerLength > 255
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: block.tryOffset > 65535 || block.tryLength > 255 || block.handlerOffset > 65535 || block.handlerLength > 255
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: exceptions.Count * 12 + 4 > 255
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: exceptions.Count * 12 + 4 > 255
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: exceptions.Count * 12 + 4 > 255
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: int dataSize = exceptions.Count * 24 + 4;
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: int dataSize = exceptions.Count * 24 + 4;
Magic Number,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,WriteFatHeaderAndCode,The following statement contains a magic number: bb.Write((short)(dataSize >> 8));
Magic Number,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,GetILGenerator,The following statement contains a magic number: return GetILGenerator(16);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,WriteDeclSecurityBlob,The following statement contains a magic number: ByteBuffer namedArgs = new ByteBuffer(100);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,WriteDeclSecurityBlob,The following statement contains a magic number: ByteBuffer bb = new ByteBuffer(list.Count * 100);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineManifestResource,The following statement contains a magic number: manifestResources.Align(8);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,DefineManifestResource,The following statement contains a magic number: manifestResources.Write(savePosition - (manifestResources.Position + 4));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ImportMethodOrField,The following statement contains a magic number: ByteBuffer bb = new ByteBuffer(16);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ImportType,The following statement contains a magic number: ByteBuffer spec = new ByteBuffer(5);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ApplyUnmanagedExports,The following statement contains a magic number: size = 4;
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetHeaderLength,The following statement contains a magic number: return  				4 + // Signature  				2 + // MajorVersion  				2 + // MinorVersion  				4 + // Reserved  				4 + // ImageRuntimeVersion Length  				StringToPaddedUTF8Length(asm.ImageRuntimeVersion) +  				2 + // Flags  				2 + // Streams  				4 + // #~ Offset  				4 + // #~ Size  				4 + // StringToPaddedUTF8Length("#~")  				4 + // #Strings Offset  				4 + // #Strings Size  				12 + // StringToPaddedUTF8Length("#Strings")  				4 + // #US Offset  				4 + // #US Size  				4 + // StringToPaddedUTF8Length("#US")  				4 + // #GUID Offset  				4 + // #GUID Size  				8 + // StringToPaddedUTF8Length("#GUID")  				(Blobs.IsEmpty ? 0 :  				(  				4 + // #Blob Offset  				4 + // #Blob Size  				8   // StringToPaddedUTF8Length("#Blob")  				));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,WriteMetadata,The following statement contains a magic number: mw.Write((ushort)4);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,StringToPaddedUTF8Length,The following statement contains a magic number: return (System.Text.Encoding.UTF8.GetByteCount(str) + 4) & ~3;
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,StringToPaddedUTF8Length,The following statement contains a magic number: return (System.Text.Encoding.UTF8.GetByteCount(str) + 4) & ~3;
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,StringToPaddedUTF8,The following statement contains a magic number: byte[] buf = new byte[(System.Text.Encoding.UTF8.GetByteCount(str) + 4) & ~3];
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,StringToPaddedUTF8,The following statement contains a magic number: byte[] buf = new byte[(System.Text.Encoding.UTF8.GetByteCount(str) + 4) & ~3];
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,AddConstant,The following statement contains a magic number: ByteBuffer val = new ByteBuffer(16);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ResolveMethod,The following statement contains a magic number: (metadataToken >> 24) == MemberRefTable.Index
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetStringConstant,The following statement contains a magic number: return new StringToken(this.UserStrings.Add(str) | (0x70 << 24));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetSignatureToken,The following statement contains a magic number: return new SignatureToken(this.StandAloneSig.FindOrAddRecord(this.Blobs.Add(sigHelper.GetSignature(this))) | (StandAloneSigTable.Index << 24));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetSignatureToken,The following statement contains a magic number: return new SignatureToken(this.StandAloneSig.FindOrAddRecord(this.Blobs.Add(ByteBuffer.Wrap(sigBytes' sigLength))) | (StandAloneSigTable.Index << 24));
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,GetSignatureBlobIndex,The following statement contains a magic number: ByteBuffer bb = new ByteBuffer(16);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SaveImpl,The following statement contains a magic number: int[] placeholderTokens = new int[4];
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SaveImpl,The following statement contains a magic number: index = 3;
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,__GetReferencedTypes,The following statement contains a magic number: kv.Value >> 24 == TypeRefTable.Index
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,__AddVTableFixups,The following statement contains a magic number: initializedData.Align(8);
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,__AddVTableFixups,The following statement contains a magic number: fixups.SlotWidth == 8
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SetInterfaceImplementationCustomAttribute,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SetInterfaceImplementationCustomAttribute,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SetInterfaceImplementationCustomAttribute,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SetInterfaceImplementationCustomAttribute,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,SetInterfaceImplementationCustomAttribute,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Emit,ModuleBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ModuleBuilder.cs,ResolveInterfaceImplPseudoTokens,The following statement contains a magic number: RegisterTokenFixup(rec.pseudoToken' (InterfaceImplTable.Index << 24) | (i + 1));
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following statement contains a magic number: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,TakesSingleByteArgument,The following statement contains a magic number: switch (inst.Value)  			{  				case 14:  				case 15:  				case 16:  				case 17:  				case 18:  				case 19:  				case 31:  				case 43:  				case 44:  				case 45:  				case 46:  				case 47:  				case 48:  				case 49:  				case 50:  				case 51:  				case 52:  				case 53:  				case 54:  				case 55:  				case 222:  				case -494:  					return true;  				default:  					return false;  			}
Magic Number,IKVM.Reflection.Emit,SignatureHelper,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\SignatureHelper.cs,GetSignature,The following statement contains a magic number: ByteBuffer bb = new ByteBuffer(16);
Magic Number,IKVM.Reflection.Emit,GenericTypeParameterBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,SetCustomAttribute,The following statement contains a magic number: this.ModuleBuilder.SetCustomAttribute((GenericParamTable.Index << 24) | paramPseudoIndex' customBuilder);
Magic Number,IKVM.Reflection.Emit,GenericTypeParameterBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,GetModuleBuilderToken,The following statement contains a magic number: ByteBuffer spec = new ByteBuffer(5);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,MetadataRW,The following statement contains a magic number: this.bigResolutionScope = IsBig(2' module.ModuleTable' module.ModuleRef' module.AssemblyRef' module.TypeRef);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,MetadataRW,The following statement contains a magic number: this.bigTypeDefOrRef = IsBig(2' module.TypeDef' module.TypeRef' module.TypeSpec);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,MetadataRW,The following statement contains a magic number: this.bigMemberRefParent = IsBig(3' module.TypeDef' module.TypeRef' module.ModuleRef' module.MethodDef' module.TypeSpec);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,MetadataRW,The following statement contains a magic number: this.bigHasCustomAttribute = IsBig(5' module.MethodDef' module.Field' module.TypeRef' module.TypeDef' module.Param' module.InterfaceImpl' module.MemberRef'  				module.ModuleTable' /*module.Permission'*/ module.Property' module.Event' module.StandAloneSig' module.ModuleRef' module.TypeSpec' module.AssemblyTable'  				module.AssemblyRef' module.File' module.ExportedType' module.ManifestResource);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,MetadataRW,The following statement contains a magic number: this.bigCustomAttributeType = IsBig(3' module.MethodDef' module.MemberRef);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,MetadataRW,The following statement contains a magic number: this.bigHasConstant = IsBig(2' module.Field' module.Param' module.Property);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,MetadataRW,The following statement contains a magic number: this.bigHasDeclSecurity = IsBig(2' module.TypeDef' module.MethodDef' module.AssemblyTable);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,MetadataRW,The following statement contains a magic number: this.bigImplementation = IsBig(2' module.File' module.AssemblyRef' module.ExportedType);
Magic Number,IKVM.Reflection.Metadata,MetadataRW,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\MetadataRW.cs,IsBig,The following statement contains a magic number: int limit = 1 << (16 - bitsUsed);
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteStringIndex,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteGuidIndex,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteBlobIndex,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteTypeDefOrRef,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteField,The following statement contains a magic number: size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteMethodDef,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteParam,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteResolutionScope,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteMemberRefParent,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteHasCustomAttribute,The following statement contains a magic number: size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteCustomAttributeType,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteHasConstant,The following statement contains a magic number: size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteTypeDef,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteMethodDefOrRef,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteEvent,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteProperty,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteHasSemantics,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteImplementation,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteTypeOrMethodDef,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteGenericParam,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteHasDeclSecurity,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteMemberForwarded,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteModuleRef,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,RowSizeCalc,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,WriteHasFieldMarshal,The following statement contains a magic number: this.size += 4;
Magic Number,IKVM.Reflection.Metadata,Table<T>,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,AddRecord,The following statement contains a magic number: T[] newarr = new T[records.Length * 2];
Magic Number,IKVM.Reflection.Metadata,Enumerable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,BinarySearch,The following statement contains a magic number: int mid = min + ((max - min) / 2);
Magic Number,IKVM.Reflection.Metadata,ModuleTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(2)  				.WriteStringIndex()  				.WriteGuidIndex()  				.WriteGuidIndex()  				.WriteGuidIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,TypeDefTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(4)  				.WriteStringIndex()  				.WriteStringIndex()  				.WriteTypeDefOrRef()  				.WriteField()  				.WriteMethodDef()  				.Value;
Magic Number,IKVM.Reflection.Metadata,FieldTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(2)  				.WriteStringIndex()  				.WriteBlobIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,MethodDefTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(8)  				.WriteStringIndex()  				.WriteBlobIndex()  				.WriteParam()  				.Value;
Magic Number,IKVM.Reflection.Metadata,ParamTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(4)  				.WriteStringIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,InterfaceImplTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case 0:  						break;  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case TypeRefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case TypeSpecTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,InterfaceImplTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case 0:  						break;  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case TypeRefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case TypeSpecTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,InterfaceImplTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case 0:  						break;  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case TypeRefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case TypeSpecTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,InterfaceImplTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case 0:  						break;  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case TypeRefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case TypeSpecTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,InterfaceImplTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case 0:  						break;  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case TypeRefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case TypeSpecTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,ConstantTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(2)  				.WriteHasConstant()  				.WriteBlobIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,ConstantTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 0;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 1;  						break;  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,ConstantTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 0;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 1;  						break;  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,ConstantTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 0;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 1;  						break;  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,ConstantTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 0;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 1;  						break;  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,ConstantTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 0;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 1;  						break;  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,ConstantTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRawConstantValue,The following statement contains a magic number: switch (module.Constant.records[i].Type)  				{  					// see ModuleBuilder.AddConstant for the encodings  					case Signature.ELEMENT_TYPE_BOOLEAN:  						return br.ReadByte() != 0;  					case Signature.ELEMENT_TYPE_I1:  						return br.ReadSByte();  					case Signature.ELEMENT_TYPE_I2:  						return br.ReadInt16();  					case Signature.ELEMENT_TYPE_I4:  						return br.ReadInt32();  					case Signature.ELEMENT_TYPE_I8:  						return br.ReadInt64();  					case Signature.ELEMENT_TYPE_U1:  						return br.ReadByte();  					case Signature.ELEMENT_TYPE_U2:  						return br.ReadUInt16();  					case Signature.ELEMENT_TYPE_U4:  						return br.ReadUInt32();  					case Signature.ELEMENT_TYPE_U8:  						return br.ReadUInt64();  					case Signature.ELEMENT_TYPE_R4:  						return br.ReadSingle();  					case Signature.ELEMENT_TYPE_R8:  						return br.ReadDouble();  					case Signature.ELEMENT_TYPE_CHAR:  						return br.ReadChar();  					case Signature.ELEMENT_TYPE_STRING:  						{  							char[] chars = new char[br.Length / 2];  							for (int j = 0; j < chars.Length; j++)  							{  								chars[j] = br.ReadChar();  							}  							return new String(chars);  						}  					case Signature.ELEMENT_TYPE_CLASS:  						if (br.ReadInt32() != 0)  						{  							throw new BadImageFormatException();  						}  						return null;  					default:  						throw new BadImageFormatException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,CustomAttributeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case MethodDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 0;  						break;  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 1;  						break;  					case TypeRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 2;  						break;  					case TypeDefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 3;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 4;  						break;  					case InterfaceImplTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 5;  						break;  					case MemberRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 6;  						break;  					case ModuleTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 7;  						break;  					// Permission (8) table doesn't exist in the spec  					case PropertyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 9;  						break;  					case EventTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 10;  						break;  					case StandAloneSigTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 11;  						break;  					case ModuleRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 12;  						break;  					case TypeSpecTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 13;  						break;  					case AssemblyTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 14;  						break;  					case AssemblyRefTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 15;  						break;  					case FileTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 16;  						break;  					case ExportedTypeTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 17;  						break;  					case ManifestResourceTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 5 | 18;  						break;  					case GenericParamTable.Index:  						records[i].Parent = (genericParamFixup[(token & 0xFFFFFF) - 1] + 1) << 5 | 19;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,FieldMarshalTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case FieldTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 1 | 0;  						break;  					case ParamTable.Index:  						records[i].Parent = (token & 0xFFFFFF) << 1 | 1;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,DeclSecurityTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(2)  				.WriteHasDeclSecurity()  				.WriteBlobIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,DeclSecurityTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case MethodDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case AssemblyTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,DeclSecurityTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case MethodDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case AssemblyTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,DeclSecurityTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case MethodDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case AssemblyTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,DeclSecurityTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case MethodDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case AssemblyTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,DeclSecurityTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case TypeDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 0;  						break;  					case MethodDefTable.Index:  						token = (token & 0xFFFFFF) << 2 | 1;  						break;  					case AssemblyTable.Index:  						token = (token & 0xFFFFFF) << 2 | 2;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,ClassLayoutTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(6)  				.WriteTypeDef()  				.Value;
Magic Number,IKVM.Reflection.Metadata,FieldLayoutTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(4)  				.WriteField()  				.Value;
Magic Number,IKVM.Reflection.Metadata,EventTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(2)  				.WriteStringIndex()  				.WriteTypeDefOrRef()  				.Value;
Magic Number,IKVM.Reflection.Metadata,PropertyTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(2)  				.WriteStringIndex()  				.WriteBlobIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,MethodSemanticsTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(2)  				.WriteMethodDef()  				.WriteHasSemantics()  				.Value;
Magic Number,IKVM.Reflection.Metadata,MethodSemanticsTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case EventTable.Index:  						token = (token & 0xFFFFFF) << 1 | 0;  						break;  					case PropertyTable.Index:  						token = (token & 0xFFFFFF) << 1 | 1;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Metadata,MethodSemanticsTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetMethod,The following statement contains a magic number: MethodBase method = module.ResolveMethod((MethodDefTable.Index << 24) + records[i].Method);
Magic Number,IKVM.Reflection.Metadata,MethodSemanticsTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetMethods,The following statement contains a magic number: MethodInfo method = (MethodInfo)module.ResolveMethod((MethodDefTable.Index << 24) + records[i].Method);
Magic Number,IKVM.Reflection.Metadata,MethodSemanticsTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,ComputeFlags,The following statement contains a magic number: MethodBase method = module.ResolveMethod((MethodDefTable.Index << 24) + records[i].Method);
Magic Number,IKVM.Reflection.Metadata,ImplMapTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(2)  				.WriteMemberForwarded()  				.WriteStringIndex()  				.WriteModuleRef()  				.Value;
Magic Number,IKVM.Reflection.Metadata,FieldRVATable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(4)  				.WriteField()  				.Value;
Magic Number,IKVM.Reflection.Metadata,AssemblyTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(16)  				.WriteBlobIndex()  				.WriteStringIndex()  				.WriteStringIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,AssemblyRefTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(12)  				.WriteBlobIndex()  				.WriteStringIndex()  				.WriteStringIndex()  				.WriteBlobIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,FileTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(4)  				.WriteStringIndex()  				.WriteBlobIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,ExportedTypeTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(8)  				.WriteStringIndex()  				.WriteStringIndex()  				.WriteImplementation()  				.Value;
Magic Number,IKVM.Reflection.Metadata,ManifestResourceTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(8)  				.WriteStringIndex()  				.WriteImplementation()  				.Value;
Magic Number,IKVM.Reflection.Metadata,GenericParamTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,GetRowSize,The following statement contains a magic number: return rsc  				.AddFixed(4)  				.WriteTypeOrMethodDef()  				.WriteStringIndex()  				.Value;
Magic Number,IKVM.Reflection.Metadata,GenericParamTable,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Metadata\Tables.cs,Fixup,The following statement contains a magic number: switch (token >> 24)  				{  					case TypeDefTable.Index:  						records[i].Owner = (token & 0xFFFFFF) << 1 | 0;  						break;  					case MethodDefTable.Index:  						records[i].Owner = (token & 0xFFFFFF) << 1 | 1;  						break;  					default:  						throw new InvalidOperationException();  				}
Magic Number,IKVM.Reflection.Reader,ByteReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ByteReader.cs,FromBlob,The following statement contains a magic number: ByteReader br = new ByteReader(blobHeap' blob' 4);
Magic Number,IKVM.Reflection.Reader,ByteReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ByteReader.cs,ReadInt16,The following statement contains a magic number: end - pos < 2
Magic Number,IKVM.Reflection.Reader,ByteReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ByteReader.cs,ReadInt16,The following statement contains a magic number: return (short)(b1 | (b2 << 8));
Magic Number,IKVM.Reflection.Reader,ByteReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ByteReader.cs,ReadInt32,The following statement contains a magic number: end - pos < 4
Magic Number,IKVM.Reflection.Reader,ByteReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ByteReader.cs,ReadInt32,The following statement contains a magic number: return (int)(b1 | (b2 << 8) | (b3 << 16) | (b4 << 24));
Magic Number,IKVM.Reflection.Reader,ByteReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ByteReader.cs,ReadInt32,The following statement contains a magic number: return (int)(b1 | (b2 << 8) | (b3 << 16) | (b4 << 24));
Magic Number,IKVM.Reflection.Reader,ByteReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ByteReader.cs,ReadInt32,The following statement contains a magic number: return (int)(b1 | (b2 << 8) | (b3 << 16) | (b4 << 24));
Magic Number,IKVM.Reflection.Reader,ByteReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ByteReader.cs,ReadInt64,The following statement contains a magic number: return (long)(lo | (hi << 32));
Magic Number,IKVM.Reflection.Reader,EventInfoImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\EventInfoImpl.cs,GetHashCode,The following statement contains a magic number: return declaringType.GetHashCode() * 123 + index;
Magic Number,IKVM.Reflection.Reader,GenericTypeParameter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\GenericTypeParameter.cs,BindTypeParameters,The following statement contains a magic number: (owner >> 24) == MethodDefTable.Index
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadInt16,The following statement contains a magic number: FillBuffer(2);
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadInt16,The following statement contains a magic number: pos > bufferLength - 2
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadInt16,The following statement contains a magic number: return (short)(b1 | (b2 << 8));
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadInt32,The following statement contains a magic number: FillBuffer(4);
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadInt32,The following statement contains a magic number: pos > bufferLength - 4
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadInt32,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24);
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadInt32,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24);
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadInt32,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24);
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadResolutionScope,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (ModuleTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 3:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDefOrRef,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDefOrRef,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDefOrRef,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDefOrRef,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDefOrRef,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDefOrRef,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDefOrRef,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDefOrRef,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberRefParent,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 3);  				case 1:  					return (TypeRefTable.Index << 24) + (codedIndex >> 3);  				case 2:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 4:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasCustomAttribute,The following statement contains a magic number: switch (codedIndex & 31)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 5);  				case 1:  					return (FieldTable.Index << 24) + (codedIndex >> 5);  				case 2:  					return (TypeRefTable.Index << 24) + (codedIndex >> 5);  				case 3:  					return (TypeDefTable.Index << 24) + (codedIndex >> 5);  				case 4:  					return (ParamTable.Index << 24) + (codedIndex >> 5);  				case 5:  					return (InterfaceImplTable.Index << 24) + (codedIndex >> 5);  				case 6:  					return (MemberRefTable.Index << 24) + (codedIndex >> 5);  				case 7:  					return (ModuleTable.Index << 24) + (codedIndex >> 5);  				case 8:  					throw new BadImageFormatException();  				case 9:  					return (PropertyTable.Index << 24) + (codedIndex >> 5);  				case 10:  					return (EventTable.Index << 24) + (codedIndex >> 5);  				case 11:  					return (StandAloneSigTable.Index << 24) + (codedIndex >> 5);  				case 12:  					return (ModuleRefTable.Index << 24) + (codedIndex >> 5);  				case 13:  					return (TypeSpecTable.Index << 24) + (codedIndex >> 5);  				case 14:  					return (AssemblyTable.Index << 24) + (codedIndex >> 5);  				case 15:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 5);  				case 16:  					return (FileTable.Index << 24) + (codedIndex >> 5);  				case 17:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 5);  				case 18:  					return (ManifestResourceTable.Index << 24) + (codedIndex >> 5);  				case 19:  					return (GenericParamTable.Index << 24) + (codedIndex >> 5);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadCustomAttributeType,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 2:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MemberRefTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadCustomAttributeType,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 2:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MemberRefTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadCustomAttributeType,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 2:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MemberRefTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadCustomAttributeType,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 2:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MemberRefTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadCustomAttributeType,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 2:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MemberRefTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadCustomAttributeType,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 2:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MemberRefTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadCustomAttributeType,The following statement contains a magic number: switch (codedIndex & 7)  			{  				case 2:  					return (MethodDefTable.Index << 24) + (codedIndex >> 3);  				case 3:  					return (MemberRefTable.Index << 24) + (codedIndex >> 3);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMethodDefOrRef,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (MemberRefTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMethodDefOrRef,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (MethodDefTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (MemberRefTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasConstant,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (PropertyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasConstant,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (PropertyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasConstant,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (PropertyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasConstant,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (PropertyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasConstant,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (PropertyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasConstant,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (PropertyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasConstant,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (PropertyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasConstant,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (PropertyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasSemantics,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (EventTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (PropertyTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasSemantics,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (EventTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (PropertyTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasFieldMarshal,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasFieldMarshal,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (ParamTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasDeclSecurity,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasDeclSecurity,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasDeclSecurity,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasDeclSecurity,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasDeclSecurity,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasDeclSecurity,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasDeclSecurity,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadHasDeclSecurity,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (AssemblyTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeOrMethodDef,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeOrMethodDef,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (TypeDefTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberForwarded,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadMemberForwarded,The following statement contains a magic number: switch (codedIndex & 1)  			{  				case 0:  					return (FieldTable.Index << 24) + (codedIndex >> 1);  				case 1:  					return (MethodDefTable.Index << 24) + (codedIndex >> 1);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadImplementation,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FileTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadImplementation,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FileTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadImplementation,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FileTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadImplementation,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FileTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadImplementation,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FileTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadImplementation,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FileTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadImplementation,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FileTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadImplementation,The following statement contains a magic number: switch (codedIndex & 3)  			{  				case 0:  					return (FileTable.Index << 24) + (codedIndex >> 2);  				case 1:  					return (AssemblyRefTable.Index << 24) + (codedIndex >> 2);  				case 2:  					return (ExportedTypeTable.Index << 24) + (codedIndex >> 2);  				default:  					throw new BadImageFormatException();  			}
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadTypeDef,The following statement contains a magic number: return ReadIndex(bigTypeDef) | (TypeDefTable.Index << 24);
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadGenericParam,The following statement contains a magic number: return ReadIndex(bigGenericParam) | (GenericParamTable.Index << 24);
Magic Number,IKVM.Reflection.Reader,MetadataReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\MetadataReader.cs,ReadModuleRef,The following statement contains a magic number: return ReadIndex(bigModuleRef) | (ModuleRefTable.Index << 24);
Magic Number,IKVM.Reflection.Reader,StreamHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,Read,The following statement contains a magic number: byte[] buf = new byte[32];
Magic Number,IKVM.Reflection.Reader,StreamHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,Read,The following statement contains a magic number: int padding = -1 + ((len + 4) & ~3) - len;
Magic Number,IKVM.Reflection.Reader,StreamHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,Read,The following statement contains a magic number: int padding = -1 + ((len + 4) & ~3) - len;
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ReadTables,The following statement contains a magic number: metadataStreamVersion = MajorVersion << 16 | MinorVersion;
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ReadTables,The following statement contains a magic number: i < 64
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ReadTables,The following statement contains a magic number: i < 64
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,PopulateTypeDef,The following statement contains a magic number: implementation >> 24 == AssemblyRefTable.Index
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveString,The following statement contains a magic number: (metadataToken >> 24) != 0x70
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(len / 2);
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveString,The following statement contains a magic number: char ch = (char)(userStringHeap[index + i] | userStringHeap[index + i + 1] << 8);
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveType,The following statement contains a magic number: (metadataToken >> 24) == TypeSpecTable.Index
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,PublicKeyOrTokenToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(br.Length * 2);
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveMember,The following statement contains a magic number: switch (metadataToken >> 24)  			{  				case FieldTable.Index:  					return ResolveField(metadataToken' genericTypeArguments' genericMethodArguments);  				case MemberRefTable.Index:  					int index = (metadataToken & 0xFFFFFF) - 1;  					if (index < 0 || index >= MemberRef.RowCount)  					{  						goto default;  					}  					return GetMemberRef(index' genericTypeArguments' genericMethodArguments);  				case MethodDefTable.Index:  				case MethodSpecTable.Index:  					return ResolveMethod(metadataToken' genericTypeArguments' genericMethodArguments);  				default:  					throw TokenOutOfRangeException(metadataToken);  			}
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,GetMemberRef,The following statement contains a magic number: switch (owner >> 24)  				{  					case MethodDefTable.Index:  						return GetMethodAt(null' (owner & 0xFFFFFF) - 1);  					case ModuleRefTable.Index:  						memberRefs[index] = ResolveTypeMemberRef(ResolveModuleType(owner)' name' ByteReader.FromBlob(blobHeap' sig));  						break;  					case TypeDefTable.Index:  					case TypeRefTable.Index:  						memberRefs[index] = ResolveTypeMemberRef(ResolveType(owner)' name' ByteReader.FromBlob(blobHeap' sig));  						break;  					case TypeSpecTable.Index:  					{  						Type type = ResolveType(owner' genericTypeArguments' genericMethodArguments);  						if (type.IsArray)  						{  							MethodSignature methodSig = MethodSignature.ReadSig(this' ByteReader.FromBlob(blobHeap' sig)' new GenericContext(genericTypeArguments' genericMethodArguments));  							return type.FindMethod(name' methodSig)  								?? universe.GetMissingMethodOrThrow(type' name' methodSig);  						}  						else if (type.IsGenericTypeInstance)  						{  							MemberInfo member = ResolveTypeMemberRef(type.GetGenericTypeDefinition()' name' ByteReader.FromBlob(blobHeap' sig));  							MethodBase mb = member as MethodBase;  							if (mb != null)  							{  								member = mb.BindTypeParameters(type);  							}  							FieldInfo fi = member as FieldInfo;  							if (fi != null)  							{  								member = fi.BindTypeParameters(type);  							}  							return member;  						}  						else  						{  							return ResolveTypeMemberRef(type' name' ByteReader.FromBlob(blobHeap' sig));  						}  					}  					default:  						throw new BadImageFormatException();  				}
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveSignature,The following statement contains a magic number: (metadataToken >> 24) == StandAloneSigTable.Index && index >= 0 && index < StandAloneSig.RowCount
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,__ResolveStandAloneMethodSig,The following statement contains a magic number: (metadataToken >> 24) == StandAloneSigTable.Index && index >= 0 && index < StandAloneSig.RowCount
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,GetManifestResourceStream,The following statement contains a magic number: switch (ManifestResource.records[i].Implementation >> 24)  						{  							case FileTable.Index:  								string fileName = Path.Combine(Path.GetDirectoryName(location)' info.FileName);  								if (System.IO.File.Exists(fileName))  								{  									// note that' like System.Reflection' we return null for zero length files and  									// ManifestResource.Offset is ignored  									FileStream fs = new FileStream(fileName' FileMode.Open' FileAccess.Read' FileShare.Read | FileShare.Delete);  									if (fs.Length == 0)  									{  										fs.Close();  										return null;  									}  									return fs;  								}  								return null;  							case AssemblyRefTable.Index:  								Assembly asm = info.ReferencedAssembly;  								if (asm.__IsMissing)  								{  									return null;  								}  								return asm.GetManifestResourceStream(resourceName);  							default:  								throw new BadImageFormatException();  						}
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,__GetReferencedTypes,The following statement contains a magic number: arr[i] = ResolveType((TypeRefTable.Index << 24) + i + 1);
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,ResolveExportedType,The following statement contains a magic number: switch (implementation >> 24)  			{  				case AssemblyRefTable.Index:  					return ResolveAssemblyRef((implementation & 0xFFFFFF) - 1).ResolveType(typeName).SetMetadataTokenForMissing(token);  				case ExportedTypeTable.Index:  					return ResolveExportedType((implementation & 0xFFFFFF) - 1).ResolveNestedType(typeName).SetMetadataTokenForMissing(token);  				default:  					throw new NotImplementedException();  			}
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,__GetPlaceholderAssemblyCustomAttributes,The following statement contains a magic number: switch ((multiple ? 1 : 0) + (security ? 2 : 0))  			{  				case 0:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHere");  					break;  				case 1:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereM");  					break;  				case 2:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereS");  					break;  				case 3:  				default:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereSM");  					break;  			}
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,__GetPlaceholderAssemblyCustomAttributes,The following statement contains a magic number: switch ((multiple ? 1 : 0) + (security ? 2 : 0))  			{  				case 0:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHere");  					break;  				case 1:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereM");  					break;  				case 2:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereS");  					break;  				case 3:  				default:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereSM");  					break;  			}
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,__GetPlaceholderAssemblyCustomAttributes,The following statement contains a magic number: switch ((multiple ? 1 : 0) + (security ? 2 : 0))  			{  				case 0:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHere");  					break;  				case 1:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereM");  					break;  				case 2:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereS");  					break;  				case 3:  				default:  					typeName = new TypeName("System.Runtime.CompilerServices"' "AssemblyAttributesGoHereSM");  					break;  			}
Magic Number,IKVM.Reflection.Reader,ModuleReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\ModuleReader.cs,__GetPlaceholderAssemblyCustomAttributes,The following statement contains a magic number: (CustomAttribute.records[i].Parent >> 24) == TypeRefTable.Index
Magic Number,IKVM.Reflection.Reader,SectionHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PEReader.cs,Read,The following statement contains a magic number: char[] name = new char[8];
Magic Number,IKVM.Reflection.Reader,SectionHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PEReader.cs,Read,The following statement contains a magic number: int len = 8;
Magic Number,IKVM.Reflection.Reader,SectionHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PEReader.cs,Read,The following statement contains a magic number: b == 0 && len == 8
Magic Number,IKVM.Reflection.Reader,SectionHeader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PEReader.cs,Read,The following statement contains a magic number: i < 8
Magic Number,IKVM.Reflection.Reader,PEReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PEReader.cs,Read,The following statement contains a magic number: br.BaseStream.Seek(58' SeekOrigin.Current);
Magic Number,IKVM.Reflection.Reader,PEReader,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PEReader.cs,GetComDescriptorVirtualAddress,The following statement contains a magic number: return headers.OptionalHeader.DataDirectory[14].VirtualAddress;
Magic Number,IKVM.Reflection.Reader,PropertyInfoImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\PropertyInfoImpl.cs,GetHashCode,The following statement contains a magic number: return declaringType.GetHashCode() * 77 + index;
Magic Number,IKVM.Reflection.Reader,TypeDefImpl,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Reader\TypeDefImpl.cs,GetInterfaceImplCustomAttributes,The following statement contains a magic number: return module.GetCustomAttributes((InterfaceImplTable.Index << 24) | (i + 1)' attributeType);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Grow,The following statement contains a magic number: byte[] newbuf = new byte[Math.Max(buffer.Length + minGrow' buffer.Length * 2)];
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,GetInt32AtCurrentPosition,The following statement contains a magic number: return buffer[pos]  				+ (buffer[pos + 1] << 8)  				+ (buffer[pos + 2] << 16)  				+ (buffer[pos + 3] << 24);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,GetInt32AtCurrentPosition,The following statement contains a magic number: return buffer[pos]  				+ (buffer[pos + 1] << 8)  				+ (buffer[pos + 2] << 16)  				+ (buffer[pos + 3] << 24);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,GetInt32AtCurrentPosition,The following statement contains a magic number: return buffer[pos]  				+ (buffer[pos + 1] << 8)  				+ (buffer[pos + 2] << 16)  				+ (buffer[pos + 3] << 24);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,GetInt32AtCurrentPosition,The following statement contains a magic number: return buffer[pos]  				+ (buffer[pos + 1] << 8)  				+ (buffer[pos + 2] << 16)  				+ (buffer[pos + 3] << 24);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,GetInt32AtCurrentPosition,The following statement contains a magic number: return buffer[pos]  				+ (buffer[pos + 1] << 8)  				+ (buffer[pos + 2] << 16)  				+ (buffer[pos + 3] << 24);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: Grow(2);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: pos + 2 > buffer.Length
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 8);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: Grow(4);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: pos + 4 > buffer.Length
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 8);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 16);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 24);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: Grow(8);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: pos + 8 > buffer.Length
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 8);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 16);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 24);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 32);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 40);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 48);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: buffer[pos++] = (byte)(value >> 56);
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,WriteTypeDefOrRefEncoded,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 0);  					break;  				case TypeRefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 1);  					break;  				case TypeSpecTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 2);  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,WriteTypeDefOrRefEncoded,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 0);  					break;  				case TypeRefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 1);  					break;  				case TypeSpecTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 2);  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,WriteTypeDefOrRefEncoded,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 0);  					break;  				case TypeRefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 1);  					break;  				case TypeSpecTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 2);  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,WriteTypeDefOrRefEncoded,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 0);  					break;  				case TypeRefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 1);  					break;  				case TypeSpecTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 2);  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,WriteTypeDefOrRefEncoded,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 0);  					break;  				case TypeRefTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 1);  					break;  				case TypeSpecTable.Index:  					WriteCompressedInt((token & 0xFFFFFF) << 2 | 2);  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Write,The following statement contains a magic number: const int chunkSize = 8192;
Magic Number,IKVM.Reflection.Writer,ByteBuffer,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ByteBuffer.cs,Hash,The following statement contains a magic number: hash *= 37;
Magic Number,IKVM.Reflection.Writer,TableHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,WriteImpl,The following statement contains a magic number: mw.Write((byte)(ver >> 16));
Magic Number,IKVM.Reflection.Writer,TableHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,GetLength,The following statement contains a magic number: int len = 4 + 4 + 8 + 8;
Magic Number,IKVM.Reflection.Writer,TableHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,GetLength,The following statement contains a magic number: int len = 4 + 4 + 8 + 8;
Magic Number,IKVM.Reflection.Writer,TableHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,GetLength,The following statement contains a magic number: int len = 4 + 4 + 8 + 8;
Magic Number,IKVM.Reflection.Writer,TableHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,GetLength,The following statement contains a magic number: int len = 4 + 4 + 8 + 8;
Magic Number,IKVM.Reflection.Writer,TableHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,GetLength,The following statement contains a magic number: len += 4;
Magic Number,IKVM.Reflection.Writer,UserStringHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,Add,The following statement contains a magic number: int length = str.Length * 2 + 1 + MetadataWriter.GetCompressedIntLength(str.Length * 2 + 1);
Magic Number,IKVM.Reflection.Writer,UserStringHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,Add,The following statement contains a magic number: int length = str.Length * 2 + 1 + MetadataWriter.GetCompressedIntLength(str.Length * 2 + 1);
Magic Number,IKVM.Reflection.Writer,UserStringHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,WriteImpl,The following statement contains a magic number: mw.WriteCompressedInt(str.Length * 2 + 1);
Magic Number,IKVM.Reflection.Writer,GuidHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,GetLength,The following statement contains a magic number: return list.Count * 16;
Magic Number,IKVM.Reflection.Writer,BlobHeap,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\Heaps.cs,Add,The following statement contains a magic number: keys[index].next = new Key[4];
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: stream.WriteByte((byte)(value >> 8));
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[1] = (byte)(value >> 8);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[2] = (byte)(value >> 16);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[2] = (byte)(value >> 16);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[3] = (byte)(value >> 24);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[3] = (byte)(value >> 24);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: stream.Write(buffer' 0' 4);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[1] = (byte)(value >> 8);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[2] = (byte)(value >> 16);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[2] = (byte)(value >> 16);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[3] = (byte)(value >> 24);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[3] = (byte)(value >> 24);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[4] = (byte)(value >> 32);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[4] = (byte)(value >> 32);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[5] = (byte)(value >> 40);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[5] = (byte)(value >> 40);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[6] = (byte)(value >> 48);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[6] = (byte)(value >> 48);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[7] = (byte)(value >> 56);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: buffer[7] = (byte)(value >> 56);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,Write,The following statement contains a magic number: stream.Write(buffer' 0' 8);
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteTypeDefOrRef,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteTypeDefOrRef,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteTypeDefOrRef,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteTypeDefOrRef,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteTypeDefOrRef,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteCustomAttributeType,The following statement contains a magic number: switch (token >> 24)  			{  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MemberRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteCustomAttributeType,The following statement contains a magic number: switch (token >> 24)  			{  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MemberRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteCustomAttributeType,The following statement contains a magic number: switch (token >> 24)  			{  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MemberRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteCustomAttributeType,The following statement contains a magic number: switch (token >> 24)  			{  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MemberRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteCustomAttributeType,The following statement contains a magic number: switch (token >> 24)  			{  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MemberRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteResolutionScope,The following statement contains a magic number: switch (token >> 24)  			{  				case ModuleTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteResolutionScope,The following statement contains a magic number: switch (token >> 24)  			{  				case ModuleTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteResolutionScope,The following statement contains a magic number: switch (token >> 24)  			{  				case ModuleTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteResolutionScope,The following statement contains a magic number: switch (token >> 24)  			{  				case ModuleTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteResolutionScope,The following statement contains a magic number: switch (token >> 24)  			{  				case ModuleTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteResolutionScope,The following statement contains a magic number: switch (token >> 24)  			{  				case ModuleTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteResolutionScope,The following statement contains a magic number: switch (token >> 24)  			{  				case ModuleTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 3;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberRefParent,The following statement contains a magic number: switch (token >> 24)  			{  				case TypeDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 0;  					break;  				case TypeRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 1;  					break;  				case ModuleRefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 2;  					break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 3 | 3;  					break;  				case TypeSpecTable.Index:  					token = (token & 0xFFFFFF) << 3 | 4;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMethodDefOrRef,The following statement contains a magic number: switch (token >> 24)  			{  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 1 | 0;  					break;  				case MemberRefTable.Index:  					token = (token & 0xFFFFFF) << 1 | 1;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteImplementation,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case FileTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case ExportedTypeTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteImplementation,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case FileTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case ExportedTypeTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteImplementation,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case FileTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case ExportedTypeTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteImplementation,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case FileTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case ExportedTypeTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteImplementation,The following statement contains a magic number: switch (token >> 24)  			{  				case 0:  					break;  				case FileTable.Index:  					token = (token & 0xFFFFFF) << 2 | 0;  					break;  				case AssemblyRefTable.Index:  					token = (token & 0xFFFFFF) << 2 | 1;  					break;  				case ExportedTypeTable.Index:  					token = (token & 0xFFFFFF) << 2 | 2;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,MetadataWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\MetadataWriter.cs,WriteMemberForwarded,The following statement contains a magic number: switch (token >> 24)  			{  				case FieldTable.Index:  					token = (token & 0xFFFFFF) << 1 | 0;  				    break;  				case MethodDefTable.Index:  					token = (token & 0xFFFFFF) << 1 | 1;  					break;  				default:  					throw new InvalidOperationException();  			}
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: cliHeader.MajorRuntimeVersion = 2;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: cliHeader.MinorRuntimeVersion = moduleBuilder.MDStreamVersion < 0x20000 ? (ushort)0 : (ushort)5;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[12].VirtualAddress = code.ImportAddressTableRVA;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[12].Size = code.ImportAddressTableLength;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[14].VirtualAddress = code.ComDescriptorRVA;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[14].Size = code.ComDescriptorLength;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[6].VirtualAddress = code.DebugDirectoryRVA;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[6].Size = code.DebugDirectoryLength;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[2].VirtualAddress = rsrc.VirtualAddress;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[2].Size = rsrc.VirtualSize;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: reloc.VirtualSize = ((uint)moduleBuilder.unmanagedExports.Count + 1) * 12;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[5].VirtualAddress = reloc.VirtualAddress;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,WriteModuleImpl,The following statement contains a magic number: writer.Headers.OptionalHeader.DataDirectory[5].Size = reloc.VirtualSize;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,StrongName,The following statement contains a magic number: byte[] buf = new byte[8192];
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,StrongName,The following statement contains a magic number: int count = (int)stream.Length / 4;
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,StrongName,The following statement contains a magic number: int carry = (int)(sum >> 32);
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,StrongName,The following statement contains a magic number: sum = (sum & 0xFFFF) + (sum >> 16);
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,StrongName,The following statement contains a magic number: (sum >> 16) != 0
Magic Number,IKVM.Reflection.Writer,ModuleWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ModuleWriter.cs,StrongName,The following statement contains a magic number: ByteBuffer bb = new ByteBuffer(4);
Magic Number,IKVM.Reflection.Writer,PEWriter,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\PEWriter.cs,WriteSectionHeader,The following statement contains a magic number: byte[] name = new byte[8];
Magic Number,IKVM.Reflection.Writer,ResourceSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,AddIcon,The following statement contains a magic number: ByteBuffer group = new ByteBuffer(6 + 14 * idCount);
Magic Number,IKVM.Reflection.Writer,ResourceSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,AddIcon,The following statement contains a magic number: ByteBuffer group = new ByteBuffer(6 + 14 * idCount);
Magic Number,IKVM.Reflection.Writer,ResourceSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,AddIcon,The following statement contains a magic number: ushort id = (ushort)(2 + i);
Magic Number,IKVM.Reflection.Writer,ResourceSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,AddIcon,The following statement contains a magic number: root[new OrdinalOrName(RT_GROUP_ICON)][new OrdinalOrName(32512)][new OrdinalOrName(0)].Data = group;
Magic Number,IKVM.Reflection.Writer,ResourceSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,ExtractResources,The following statement contains a magic number: br.Align(4);
Magic Number,IKVM.Reflection.Writer,ResourceSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,ExtractResources,The following statement contains a magic number: br.Length >= 32
Magic Number,IKVM.Reflection.Writer,ResourceSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,Finish,The following statement contains a magic number: bb = new ByteBuffer(1024);
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,Write,The following statement contains a magic number: ByteBuffer stringTable = new ByteBuffer(16);
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,Write,The following statement contains a magic number: int offset = 16 + entries.Count * 8;
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,Write,The following statement contains a magic number: int offset = 16 + entries.Count * 8;
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,Write,The following statement contains a magic number: pass < 3
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,Write,The following statement contains a magic number: stringTable.Align(4);
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,WriteResourceDataEntries,The following statement contains a magic number: offset += (entry.Data.Length + 3) & ~3;
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,WriteResourceDataEntries,The following statement contains a magic number: offset += (entry.Data.Length + 3) & ~3;
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,WriteData,The following statement contains a magic number: bb.Align(4);
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,WriteEntry,The following statement contains a magic number: offset += 16 + entries.Count * 8;
Magic Number,IKVM.Reflection.Writer,ResourceDirectoryEntry,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,WriteEntry,The following statement contains a magic number: offset += 16 + entries.Count * 8;
Magic Number,IKVM.Reflection.Writer,RESOURCEHEADER,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\ResourceSection.cs,RESOURCEHEADER,The following statement contains a magic number: br.Align(4);
Magic Number,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteImportDirectory,The following statement contains a magic number: mw.Write(ImportDirectoryRVA + 40);
Magic Number,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteImportDirectory,The following statement contains a magic number: mw.Write(ImportHintNameTableRVA + 14);
Magic Number,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteImportDirectory,The following statement contains a magic number: mw.Write(new byte[20]);
Magic Number,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteImportDirectory,The following statement contains a magic number: int size = 48;
Magic Number,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteImportDirectory,The following statement contains a magic number: size += 4;
Magic Number,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteRelocations,The following statement contains a magic number: switch (peWriter.Headers.FileHeader.Machine)  			{  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_I386:  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_AMD64:  					relocAddress += 2;  					break;  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_IA64:  					relocAddress += 0x20;  					break;  			}
Magic Number,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteRelocationBlock,The following statement contains a magic number: switch (peWriter.Headers.FileHeader.Machine)  			{  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_I386:  					mw.Write(0x3000 + relocAddress - pageRVA);				// Type / Offset  					break;  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_AMD64:  					mw.Write(0xA000 + relocAddress - pageRVA);				// Type / Offset  					break;  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_IA64:  					// on IA64 the StartupStubRVA is 16 byte aligned' so these two addresses won't cross a page boundary  					mw.Write((short)(0xA000 + relocAddress - pageRVA));		// Type / Offset  					mw.Write((short)(0xA000 + relocAddress - pageRVA + 8));	// Type / Offset  					break;  			}
Magic Number,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,ExportTables,The following statement contains a magic number: exportNamePointerTableRVA = exportAddressTableRVA + 4 * entries;
Magic Number,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,ExportTables,The following statement contains a magic number: exportOrdinalTableRVA = exportNamePointerTableRVA + 4 * nameCount;
Magic Number,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,ExportTables,The following statement contains a magic number: namesRVA = exportOrdinalTableRVA + 2 * nameCount;
Magic Number,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,ExportTables,The following statement contains a magic number: stubsRVA = (namesRVA + namesLength + 15) & ~15U;
Magic Number,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,ExportTables,The following statement contains a magic number: stubsRVA = (namesRVA + namesLength + 15) & ~15U;
Magic Number,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,ExportTables,The following statement contains a magic number: switch (text.peWriter.Headers.FileHeader.Machine)  				{  					case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_I386:  						stubLength = 8;  						break;  					case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_AMD64:  						stubLength = 16;  						break;  					default:  						throw new NotImplementedException();  				}
Magic Number,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,ExportTables,The following statement contains a magic number: switch (text.peWriter.Headers.FileHeader.Machine)  				{  					case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_I386:  						stubLength = 8;  						break;  					case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_AMD64:  						stubLength = 16;  						break;  					default:  						throw new NotImplementedException();  				}
Magic Number,IKVM.Reflection.Writer,ExportTables,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteRelocations,The following statement contains a magic number: text.WriteRelocationBlock(mw' stubsRVA + 2 + (uint)pos * stubLength);
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: int codepage = 1200;
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: ByteBuffer stringTable = new ByteBuffer(512);
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: stringTable.Align(4);
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: ByteBuffer stringFileInfo = new ByteBuffer(512);
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: stringFileInfo.Align(4);
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: bb.Write((short)(2 + preamble1.Length + 8 + 8 + preamble2.Length + 4 + stringFileInfo.Length));
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: bb.Write((short)(2 + preamble1.Length + 8 + 8 + preamble2.Length + 4 + stringFileInfo.Length));
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: bb.Write((short)(2 + preamble1.Length + 8 + 8 + preamble2.Length + 4 + stringFileInfo.Length));
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,Write,The following statement contains a magic number: bb.Write((short)(2 + preamble1.Length + 8 + 8 + preamble2.Length + 4 + stringFileInfo.Length));
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,WriteString,The following statement contains a magic number: bb.Align(4);
Magic Number,IKVM.Reflection.Writer,VersionInfo,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\VersionInfo.cs,WriteString,The following statement contains a magic number: bb.Align(4);
Missing Default,IKVM.Reflection,AssemblyName,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\AssemblyName.cs,AssemblyName,The following switch statement is missing a default case: switch (Fusion.ParseAssemblyName(assemblyName' out parsed))  			{  				case ParseAssemblyResult.GenericError:  					throw new FileLoadException();  				case ParseAssemblyResult.DuplicateKey:  					throw new System.Runtime.InteropServices.COMException();  			}
Missing Default,IKVM.Reflection,DefaultBinder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Binder.cs,SelectBestMatch,The following switch statement is missing a default case: switch (MatchSignatures(mb1.MethodSignature' mb2.MethodSignature' types))  			{  				case 1:  					return mb1;  				case 2:  					return mb2;  			}
Missing Default,IKVM.Reflection,Fusion,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Fusion.cs,IsFrameworkAssembly,The following switch statement is missing a default case: switch (name.Name)  			{  				case "System":  				case "System.Core":  				case "System.Data":  				case "System.Data.DataSetExtensions":  				case "System.Data.Linq":  				case "System.Data.OracleClient":  				case "System.Data.Services":  				case "System.Data.Services.Client":  				case "System.IdentityModel":  				case "System.IdentityModel.Selectors":  				case "System.Runtime.Remoting":  				case "System.Runtime.Serialization":  				case "System.ServiceModel":  				case "System.Transactions":  				case "System.Windows.Forms":  				case "System.Xml":  				case "System.Xml.Linq":  					return name.PublicKeyToken == "b77a5c561934e089";    				case "System.Configuration":  				case "System.Configuration.Install":  				case "System.Design":  				case "System.DirectoryServices":  				case "System.Drawing":  				case "System.Drawing.Design":  				case "System.EnterpriseServices":  				case "System.Management":  				case "System.Messaging":  				case "System.Runtime.Serialization.Formatters.Soap":  				case "System.Security":  				case "System.ServiceProcess":  				case "System.Web":  				case "System.Web.Mobile":  				case "System.Web.Services":  					return name.PublicKeyToken == "b03f5f7f11d50a3a";    				case "System.ComponentModel.DataAnnotations":  				case "System.ServiceModel.Web":  				case "System.Web.Abstractions":  				case "System.Web.Extensions":  				case "System.Web.Extensions.Design":  				case "System.Web.DynamicData":  				case "System.Web.Routing":  					return name.PublicKeyToken == "31bf3856ad364e35";  			}
Missing Default,IKVM.Reflection.Emit,ILGenerator,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\ILGenerator.cs,Emit,The following switch statement is missing a default case: switch (opc.OperandType)  				{  					case OperandType.InlineVar:  						code.Write((ushort)local.LocalIndex);  						break;  					case OperandType.ShortInlineVar:  						code.Write((byte)local.LocalIndex);  						break;  				}
Missing Default,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetDllImportPseudoCustomAttribute,The following switch statement is missing a default case: switch (nativeCallConv.Value)  				{  					case System.Runtime.InteropServices.CallingConvention.Cdecl:  						flags |= CallConvCdecl;  						break;  					case System.Runtime.InteropServices.CallingConvention.FastCall:  						flags |= CallConvFastcall;  						break;  					case System.Runtime.InteropServices.CallingConvention.StdCall:  						flags |= CallConvStdcall;  						break;  					case System.Runtime.InteropServices.CallingConvention.ThisCall:  						flags |= CallConvThiscall;  						break;  					case System.Runtime.InteropServices.CallingConvention.Winapi:  						flags |= CallConvWinapi;  						break;  				}
Missing Default,IKVM.Reflection.Emit,MethodBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\MethodBuilder.cs,SetDllImportPseudoCustomAttribute,The following switch statement is missing a default case: switch (nativeCharSet.Value)  				{  					case CharSet.Ansi:  					case CharSet.None:  						flags |= CharSetAnsi;  						break;  					case CharSet.Auto:  						flags |= CharSetAuto;  						break;  					case CharSet.Unicode:  						flags |= CharSetUnicode;  						break;  				}
Missing Default,IKVM.Reflection.Emit,OpCodes,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\OpCodes.cs,GetName,The following switch statement is missing a default case: switch (value)  			{  				case 0:  					return "nop";  				case 1:  					return "break";  				case 2:  					return "ldarg.0";  				case 3:  					return "ldarg.1";  				case 4:  					return "ldarg.2";  				case 5:  					return "ldarg.3";  				case 6:  					return "ldloc.0";  				case 7:  					return "ldloc.1";  				case 8:  					return "ldloc.2";  				case 9:  					return "ldloc.3";  				case 10:  					return "stloc.0";  				case 11:  					return "stloc.1";  				case 12:  					return "stloc.2";  				case 13:  					return "stloc.3";  				case 14:  					return "ldarg.s";  				case 15:  					return "ldarga.s";  				case 16:  					return "starg.s";  				case 17:  					return "ldloc.s";  				case 18:  					return "ldloca.s";  				case 19:  					return "stloc.s";  				case 20:  					return "ldnull";  				case 21:  					return "ldc.i4.m1";  				case 22:  					return "ldc.i4.0";  				case 23:  					return "ldc.i4.1";  				case 24:  					return "ldc.i4.2";  				case 25:  					return "ldc.i4.3";  				case 26:  					return "ldc.i4.4";  				case 27:  					return "ldc.i4.5";  				case 28:  					return "ldc.i4.6";  				case 29:  					return "ldc.i4.7";  				case 30:  					return "ldc.i4.8";  				case 31:  					return "ldc.i4.s";  				case 32:  					return "ldc.i4";  				case 33:  					return "ldc.i8";  				case 34:  					return "ldc.r4";  				case 35:  					return "ldc.r8";  				case 37:  					return "dup";  				case 38:  					return "pop";  				case 39:  					return "jmp";  				case 40:  					return "call";  				case 41:  					return "calli";  				case 42:  					return "ret";  				case 43:  					return "br.s";  				case 44:  					return "brfalse.s";  				case 45:  					return "brtrue.s";  				case 46:  					return "beq.s";  				case 47:  					return "bge.s";  				case 48:  					return "bgt.s";  				case 49:  					return "ble.s";  				case 50:  					return "blt.s";  				case 51:  					return "bne.un.s";  				case 52:  					return "bge.un.s";  				case 53:  					return "bgt.un.s";  				case 54:  					return "ble.un.s";  				case 55:  					return "blt.un.s";  				case 56:  					return "br";  				case 57:  					return "brfalse";  				case 58:  					return "brtrue";  				case 59:  					return "beq";  				case 60:  					return "bge";  				case 61:  					return "bgt";  				case 62:  					return "ble";  				case 63:  					return "blt";  				case 64:  					return "bne.un";  				case 65:  					return "bge.un";  				case 66:  					return "bgt.un";  				case 67:  					return "ble.un";  				case 68:  					return "blt.un";  				case 69:  					return "switch";  				case 70:  					return "ldind.i1";  				case 71:  					return "ldind.u1";  				case 72:  					return "ldind.i2";  				case 73:  					return "ldind.u2";  				case 74:  					return "ldind.i4";  				case 75:  					return "ldind.u4";  				case 76:  					return "ldind.i8";  				case 77:  					return "ldind.i";  				case 78:  					return "ldind.r4";  				case 79:  					return "ldind.r8";  				case 80:  					return "ldind.ref";  				case 81:  					return "stind.ref";  				case 82:  					return "stind.i1";  				case 83:  					return "stind.i2";  				case 84:  					return "stind.i4";  				case 85:  					return "stind.i8";  				case 86:  					return "stind.r4";  				case 87:  					return "stind.r8";  				case 88:  					return "add";  				case 89:  					return "sub";  				case 90:  					return "mul";  				case 91:  					return "div";  				case 92:  					return "div.un";  				case 93:  					return "rem";  				case 94:  					return "rem.un";  				case 95:  					return "and";  				case 96:  					return "or";  				case 97:  					return "xor";  				case 98:  					return "shl";  				case 99:  					return "shr";  				case 100:  					return "shr.un";  				case 101:  					return "neg";  				case 102:  					return "not";  				case 103:  					return "conv.i1";  				case 104:  					return "conv.i2";  				case 105:  					return "conv.i4";  				case 106:  					return "conv.i8";  				case 107:  					return "conv.r4";  				case 108:  					return "conv.r8";  				case 109:  					return "conv.u4";  				case 110:  					return "conv.u8";  				case 111:  					return "callvirt";  				case 112:  					return "cpobj";  				case 113:  					return "ldobj";  				case 114:  					return "ldstr";  				case 115:  					return "newobj";  				case 116:  					return "castclass";  				case 117:  					return "isinst";  				case 118:  					return "conv.r.un";  				case 121:  					return "unbox";  				case 122:  					return "throw";  				case 123:  					return "ldfld";  				case 124:  					return "ldflda";  				case 125:  					return "stfld";  				case 126:  					return "ldsfld";  				case 127:  					return "ldsflda";  				case 128:  					return "stsfld";  				case 129:  					return "stobj";  				case 130:  					return "conv.ovf.i1.un";  				case 131:  					return "conv.ovf.i2.un";  				case 132:  					return "conv.ovf.i4.un";  				case 133:  					return "conv.ovf.i8.un";  				case 134:  					return "conv.ovf.u1.un";  				case 135:  					return "conv.ovf.u2.un";  				case 136:  					return "conv.ovf.u4.un";  				case 137:  					return "conv.ovf.u8.un";  				case 138:  					return "conv.ovf.i.un";  				case 139:  					return "conv.ovf.u.un";  				case 140:  					return "box";  				case 141:  					return "newarr";  				case 142:  					return "ldlen";  				case 143:  					return "ldelema";  				case 144:  					return "ldelem.i1";  				case 145:  					return "ldelem.u1";  				case 146:  					return "ldelem.i2";  				case 147:  					return "ldelem.u2";  				case 148:  					return "ldelem.i4";  				case 149:  					return "ldelem.u4";  				case 150:  					return "ldelem.i8";  				case 151:  					return "ldelem.i";  				case 152:  					return "ldelem.r4";  				case 153:  					return "ldelem.r8";  				case 154:  					return "ldelem.ref";  				case 155:  					return "stelem.i";  				case 156:  					return "stelem.i1";  				case 157:  					return "stelem.i2";  				case 158:  					return "stelem.i4";  				case 159:  					return "stelem.i8";  				case 160:  					return "stelem.r4";  				case 161:  					return "stelem.r8";  				case 162:  					return "stelem.ref";  				case 163:  					return "ldelem";  				case 164:  					return "stelem";  				case 165:  					return "unbox.any";  				case 179:  					return "conv.ovf.i1";  				case 180:  					return "conv.ovf.u1";  				case 181:  					return "conv.ovf.i2";  				case 182:  					return "conv.ovf.u2";  				case 183:  					return "conv.ovf.i4";  				case 184:  					return "conv.ovf.u4";  				case 185:  					return "conv.ovf.i8";  				case 186:  					return "conv.ovf.u8";  				case 194:  					return "refanyval";  				case 195:  					return "ckfinite";  				case 198:  					return "mkrefany";  				case 208:  					return "ldtoken";  				case 209:  					return "conv.u2";  				case 210:  					return "conv.u1";  				case 211:  					return "conv.i";  				case 212:  					return "conv.ovf.i";  				case 213:  					return "conv.ovf.u";  				case 214:  					return "add.ovf";  				case 215:  					return "add.ovf.un";  				case 216:  					return "mul.ovf";  				case 217:  					return "mul.ovf.un";  				case 218:  					return "sub.ovf";  				case 219:  					return "sub.ovf.un";  				case 220:  					return "endfinally";  				case 221:  					return "leave";  				case 222:  					return "leave.s";  				case 223:  					return "stind.i";  				case 224:  					return "conv.u";  				case 248:  					return "prefix7";  				case 249:  					return "prefix6";  				case 250:  					return "prefix5";  				case 251:  					return "prefix4";  				case 252:  					return "prefix3";  				case 253:  					return "prefix2";  				case 254:  					return "prefix1";  				case 255:  					return "prefixref";  				case -512:  					return "arglist";  				case -511:  					return "ceq";  				case -510:  					return "cgt";  				case -509:  					return "cgt.un";  				case -508:  					return "clt";  				case -507:  					return "clt.un";  				case -506:  					return "ldftn";  				case -505:  					return "ldvirtftn";  				case -503:  					return "ldarg";  				case -502:  					return "ldarga";  				case -501:  					return "starg";  				case -500:  					return "ldloc";  				case -499:  					return "ldloca";  				case -498:  					return "stloc";  				case -497:  					return "localloc";  				case -495:  					return "endfilter";  				case -494:  					return "unaligned.";  				case -493:  					return "volatile.";  				case -492:  					return "tail.";  				case -491:  					return "initobj";  				case -490:  					return "constrained.";  				case -489:  					return "cpblk";  				case -488:  					return "initblk";  				case -486:  					return "rethrow";  				case -484:  					return "sizeof";  				case -483:  					return "refanytype";  				case -482:  					return "readonly.";  			}
Missing Default,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,SetStructLayoutPseudoCustomAttribute,The following switch statement is missing a default case: switch (attr.Value)  			{  				case LayoutKind.Auto:  					attribs |= TypeAttributes.AutoLayout;  					break;  				case LayoutKind.Explicit:  					attribs |= TypeAttributes.ExplicitLayout;  					break;  				case LayoutKind.Sequential:  					attribs |= TypeAttributes.SequentialLayout;  					break;  			}
Missing Default,IKVM.Reflection.Emit,TypeBuilder,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Emit\TypeBuilder.cs,SetStructLayoutPseudoCustomAttribute,The following switch statement is missing a default case: switch (attr.CharSet)  			{  				case CharSet.None:  				case CharSet.Ansi:  					attribs |= TypeAttributes.AnsiClass;  					break;  				case CharSet.Auto:  					attribs |= TypeAttributes.AutoClass;  					break;  				case CharSet.Unicode:  					attribs |= TypeAttributes.UnicodeClass;  					break;  			}
Missing Default,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteRelocations,The following switch statement is missing a default case: switch (peWriter.Headers.FileHeader.Machine)  			{  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_I386:  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_AMD64:  					relocAddress += 2;  					break;  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_IA64:  					relocAddress += 0x20;  					break;  			}
Missing Default,IKVM.Reflection.Writer,TextSection,D:\research\architectureSmells\repos\CoEST_TraceLab\Main\external\ikvm\src\reflect\Writer\TextSection.cs,WriteRelocationBlock,The following switch statement is missing a default case: switch (peWriter.Headers.FileHeader.Machine)  			{  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_I386:  					mw.Write(0x3000 + relocAddress - pageRVA);				// Type / Offset  					break;  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_AMD64:  					mw.Write(0xA000 + relocAddress - pageRVA);				// Type / Offset  					break;  				case IMAGE_FILE_HEADER.IMAGE_FILE_MACHINE_IA64:  					// on IA64 the StartupStubRVA is 16 byte aligned' so these two addresses won't cross a page boundary  					mw.Write((short)(0xA000 + relocAddress - pageRVA));		// Type / Offset  					mw.Write((short)(0xA000 + relocAddress - pageRVA + 8));	// Type / Offset  					break;  			}
