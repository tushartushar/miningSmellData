Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallString,Cyclomatic complexity of the method is 11
Complex Method,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,ShortRecallString,Cyclomatic complexity of the method is 11
Complex Method,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,Cyclomatic complexity of the method is 11
Complex Method,SEMERU.Core.Models,TermDocumentMatrix,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\TermDocumentMatrix.cs,TermDocumentMatrix,Cyclomatic complexity of the method is 8
Complex Method,SEMERU.Core.Models,TermDocumentMatrix,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\TermDocumentMatrix.cs,Equalize,Cyclomatic complexity of the method is 10
Long Parameter List,SEMERU.Core.Metrics,OverallMetricsComputation,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\OverallMetricsComputation.cs,ComputeMetrics,The method has 7 parameters.
Long Statement,SEMERU.Core.Metrics,MetricsPerSourceArtifact,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\MetricsPerSourceArtifact.cs,Compute,The length of the statement  "		pairs.PrecisionData.Add (new KeyValuePair<string' double> (sourceArtifact' numCorrect / Convert.ToDouble (links.Count))); " is 121.
Long Statement,SEMERU.Core.Metrics,MetricsPerSourceArtifact,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\MetricsPerSourceArtifact.cs,Compute,The length of the statement  "	pairs.MeanAveragePrecisionData.Add (new KeyValuePair<string' double> ("#TOTAL"' DataSetPairsCollection.CalculateAverage (pairs.AveragePrecisionData))); " is 151.
Long Statement,SEMERU.Core.Metrics,OverallMetricsComputation,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\OverallMetricsComputation.cs,ComputeMetrics,The length of the statement  "	recall.Add (new KeyValuePair<string' double> ("#TOTAL"' Math.Ceiling (oracle.Count * RecallLevelUtil.RecallValue (level)) / oracle.Count)); " is 139.
Long Statement,SEMERU.Core.Metrics,OverallMetricsComputation,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\OverallMetricsComputation.cs,ComputeMetrics,The length of the statement  "	meanAvgPrecision.Add (new KeyValuePair<string' double> ("#TOTAL"' MeanAveragePrecision.Compute (Similarities.CreateMatrix (links)' oracle))); " is 141.
Long Statement,SEMERU.Core.Models,Affine,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\Affine.cs,Transform,The length of the statement  "		combined.AddLink (largeLink.SourceArtifactId' largeLink.TargetArtifactId' Combine (largeLink.Score' smallLink' lambda)); " is 120.
Long Statement,SEMERU.Core.Models,JSD,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\JSD.cs,Compute,The length of the statement  "			list.Add (new TLSingleLink (matrices [0].GetDocumentName (i)' matrices [1].GetDocumentName (j)' DocumentSimilarity (matrices [0].GetDocument (i)' matrices [1].GetDocument (j)))); " is 178.
Long Statement,SEMERU.Core.Models,TermDocumentMatrix,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\TermDocumentMatrix.cs,EqualizeDocuments,The length of the statement  "	return EqualizeDocuments (matrix1' matrix1.GetDocumentIndex (artifact1)' matrix2' matrix2.GetDocumentIndex (artifact2)); " is 120.
Magic Number,SEMERU.Core.IO,Similarities,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\IO\Similarities.cs,Import,The following statement contains a magic number: while ((line = file.ReadLine ()) != null) {  	num++;  	if (String.IsNullOrWhiteSpace (line))  		continue;  	try {  		String[] artifacts = line.Split ();  		String source = artifacts [0];  		String target = artifacts [1];  		double score = Convert.ToDouble (artifacts [2]);  		answer.AddLink (source' target' score);  	}  	catch (IndexOutOfRangeException e) {  		file.Close ();  		throw new InvalidDataException ("Invalid data format on line " + num + " of file:" + filename' e);  	}  }  
Magic Number,SEMERU.Core.IO,Similarities,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\IO\Similarities.cs,Import,The following statement contains a magic number: try {  	String[] artifacts = line.Split ();  	String source = artifacts [0];  	String target = artifacts [1];  	double score = Convert.ToDouble (artifacts [2]);  	answer.AddLink (source' target' score);  }  catch (IndexOutOfRangeException e) {  	file.Close ();  	throw new InvalidDataException ("Invalid data format on line " + num + " of file:" + filename' e);  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: switch (level) {  case RecallLevel.Recall10:  	return 0.1;  case RecallLevel.Recall20:  	return 0.2;  case RecallLevel.Recall30:  	return 0.3;  case RecallLevel.Recall40:  	return 0.4;  case RecallLevel.Recall50:  	return 0.5;  case RecallLevel.Recall60:  	return 0.6;  case RecallLevel.Recall70:  	return 0.7;  case RecallLevel.Recall80:  	return 0.8;  case RecallLevel.Recall90:  	return 0.9;  case RecallLevel.Recall100:  	return 1.0;  default:  	return 0.0;  }  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.1;  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.2;  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.3;  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.4;  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.5;  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.6;  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.7;  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.8;  
Magic Number,SEMERU.Core.Metrics,RecallLevelUtil,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Metrics\RecallLevel.cs,RecallValue,The following statement contains a magic number: return 0.9;  
Magic Number,SEMERU.Core.Models,JSD,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\JSD.cs,DocumentSimilarity,The following statement contains a magic number: temp = mulDocument (0.5' temp);  
Magic Number,SEMERU.Core.Models,JSD,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\JSD.cs,DocumentSimilarity,The following statement contains a magic number: similarity = similarity - (entropy (distribution1) + entropy (distribution2)) / 2;  
Magic Number,SEMERU.Core.Models,JSD,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\JSD.cs,entropy,The following statement contains a magic number: for (i = 0; i < docDistrib.Length; i++) {  	if (docDistrib [i] > 0) {  		entropia = entropia - docDistrib [i] * Math.Log (docDistrib [i]' 2);  	}  }  
Magic Number,SEMERU.Core.Models,JSD,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\JSD.cs,entropy,The following statement contains a magic number: if (docDistrib [i] > 0) {  	entropia = entropia - docDistrib [i] * Math.Log (docDistrib [i]' 2);  }  
Magic Number,SEMERU.Core.Models,JSD,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\JSD.cs,entropy,The following statement contains a magic number: entropia = entropia - docDistrib [i] * Math.Log (docDistrib [i]' 2);  
Magic Number,SEMERU.Core.Models,TermDocumentMatrix,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\TermDocumentMatrix.cs,EqualizeDocuments,The following statement contains a magic number: newmatrix._matrix = new double[2][];  
Magic Number,SEMERU.Core.Models,VSM,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\VSM.cs,ComputeSimilarities,The following statement contains a magic number: for (int i = 0; i < ids.NumDocs; i++) {  	TLLinksList links = new TLLinksList ();  	for (int j = 0; j < tfidf.NumDocs; j++) {  		double product = 0.0;  		double asquared = 0.0;  		double bsquared = 0.0;  		for (int k = 0; k < matrices [0].NumTerms; k++) {  			double a = matrices [0] [i' k];  			double b = matrices [1] [j' k];  			product += (a * b);  			asquared += Math.Pow (a' 2);  			bsquared += Math.Pow (b' 2);  		}  		double cross = Math.Sqrt (asquared) * Math.Sqrt (bsquared);  		if (cross == 0.0) {  			links.Add (new TLSingleLink (ids.GetDocumentName (i)' tfidf.GetDocumentName (j)' 0.0));  		}  		else {  			links.Add (new TLSingleLink (ids.GetDocumentName (i)' tfidf.GetDocumentName (j)' product / cross));  		}  	}  	links.Sort ();  	foreach (TLSingleLink link in links) {  		sims.AddLink (link.SourceArtifactId' link.TargetArtifactId' link.Score);  	}  }  
Magic Number,SEMERU.Core.Models,VSM,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\VSM.cs,ComputeSimilarities,The following statement contains a magic number: for (int i = 0; i < ids.NumDocs; i++) {  	TLLinksList links = new TLLinksList ();  	for (int j = 0; j < tfidf.NumDocs; j++) {  		double product = 0.0;  		double asquared = 0.0;  		double bsquared = 0.0;  		for (int k = 0; k < matrices [0].NumTerms; k++) {  			double a = matrices [0] [i' k];  			double b = matrices [1] [j' k];  			product += (a * b);  			asquared += Math.Pow (a' 2);  			bsquared += Math.Pow (b' 2);  		}  		double cross = Math.Sqrt (asquared) * Math.Sqrt (bsquared);  		if (cross == 0.0) {  			links.Add (new TLSingleLink (ids.GetDocumentName (i)' tfidf.GetDocumentName (j)' 0.0));  		}  		else {  			links.Add (new TLSingleLink (ids.GetDocumentName (i)' tfidf.GetDocumentName (j)' product / cross));  		}  	}  	links.Sort ();  	foreach (TLSingleLink link in links) {  		sims.AddLink (link.SourceArtifactId' link.TargetArtifactId' link.Score);  	}  }  
Magic Number,SEMERU.Core.Models,VSM,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\VSM.cs,ComputeSimilarities,The following statement contains a magic number: for (int j = 0; j < tfidf.NumDocs; j++) {  	double product = 0.0;  	double asquared = 0.0;  	double bsquared = 0.0;  	for (int k = 0; k < matrices [0].NumTerms; k++) {  		double a = matrices [0] [i' k];  		double b = matrices [1] [j' k];  		product += (a * b);  		asquared += Math.Pow (a' 2);  		bsquared += Math.Pow (b' 2);  	}  	double cross = Math.Sqrt (asquared) * Math.Sqrt (bsquared);  	if (cross == 0.0) {  		links.Add (new TLSingleLink (ids.GetDocumentName (i)' tfidf.GetDocumentName (j)' 0.0));  	}  	else {  		links.Add (new TLSingleLink (ids.GetDocumentName (i)' tfidf.GetDocumentName (j)' product / cross));  	}  }  
Magic Number,SEMERU.Core.Models,VSM,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\VSM.cs,ComputeSimilarities,The following statement contains a magic number: for (int j = 0; j < tfidf.NumDocs; j++) {  	double product = 0.0;  	double asquared = 0.0;  	double bsquared = 0.0;  	for (int k = 0; k < matrices [0].NumTerms; k++) {  		double a = matrices [0] [i' k];  		double b = matrices [1] [j' k];  		product += (a * b);  		asquared += Math.Pow (a' 2);  		bsquared += Math.Pow (b' 2);  	}  	double cross = Math.Sqrt (asquared) * Math.Sqrt (bsquared);  	if (cross == 0.0) {  		links.Add (new TLSingleLink (ids.GetDocumentName (i)' tfidf.GetDocumentName (j)' 0.0));  	}  	else {  		links.Add (new TLSingleLink (ids.GetDocumentName (i)' tfidf.GetDocumentName (j)' product / cross));  	}  }  
Magic Number,SEMERU.Core.Models,VSM,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\VSM.cs,ComputeSimilarities,The following statement contains a magic number: for (int k = 0; k < matrices [0].NumTerms; k++) {  	double a = matrices [0] [i' k];  	double b = matrices [1] [j' k];  	product += (a * b);  	asquared += Math.Pow (a' 2);  	bsquared += Math.Pow (b' 2);  }  
Magic Number,SEMERU.Core.Models,VSM,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\VSM.cs,ComputeSimilarities,The following statement contains a magic number: for (int k = 0; k < matrices [0].NumTerms; k++) {  	double a = matrices [0] [i' k];  	double b = matrices [1] [j' k];  	product += (a * b);  	asquared += Math.Pow (a' 2);  	bsquared += Math.Pow (b' 2);  }  
Magic Number,SEMERU.Core.Models,VSM,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\VSM.cs,ComputeSimilarities,The following statement contains a magic number: asquared += Math.Pow (a' 2);  
Magic Number,SEMERU.Core.Models,VSM,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Models\VSM.cs,ComputeSimilarities,The following statement contains a magic number: bsquared += Math.Pow (b' 2);  
Magic Number,SEMERU.Core.Preprocessors,POSTagger,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Preprocessors\POSTagger.cs,ExtractPOS,The following statement contains a magic number: foreach (string term in text.Split ()) {  	string[] kvp = term.Split ('_');  	if (kvp.Length < 2)  		continue;  	if (kvp [1].Length == 0)  		continue;  	if (kvp [1] [0] == 'N') {  		dict [POSTaggerSpeechType.Noun].Add (kvp [0]);  		continue;  	}  	if (kvp [1] [0] == 'V') {  		dict [POSTaggerSpeechType.Verb].Add (kvp [0]);  		continue;  	}  	dict [POSTaggerSpeechType.Other].Add (kvp [0]);  }  
Magic Number,SEMERU.Core.Preprocessors,POSTagger,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SEMERU-WM\1.0.0.0\SEMERU\SEMERU.Core\Preprocessors\POSTagger.cs,ExtractPOS,The following statement contains a magic number: if (kvp.Length < 2)  	continue;  
