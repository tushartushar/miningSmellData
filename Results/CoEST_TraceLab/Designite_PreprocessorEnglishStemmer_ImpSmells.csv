Implementation smell,Namespace,Class,File,Method,Description
Long Method,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step3,The method has 108 lines of code.
Complex Method,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,m,Cyclomatic complexity of the method is 8
Complex Method,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step1,Cyclomatic complexity of the method is 14
Complex Method,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step3,Cyclomatic complexity of the method is 60
Complex Method,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step4,Cyclomatic complexity of the method is 22
Complex Method,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step5,Cyclomatic complexity of the method is 52
Complex Conditional,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,cvc,The conditional expression  "i < 2 || !cons (i) || cons (i - 1) || !cons (i - 2)"  is complex.
Complex Conditional,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step5,The conditional expression  "ends ("ion") && j >= 0 && (b [j] == 's' || b [j] == 't')"  is complex.
Magic Number,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,cvc,The following statement contains a magic number: if (i < 2 || !cons (i) || cons (i - 1) || !cons (i - 2))  	return false;  
Magic Number,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,cvc,The following statement contains a magic number: if (i < 2 || !cons (i) || cons (i - 1) || !cons (i - 2))  	return false;  
Magic Number,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step1,The following statement contains a magic number: if (b [k] == 's') {  	if (ends ("sses"))  		k -= 2;  	else if (ends ("ies"))  		setto ("i");  	else if (b [k - 1] != 's')  		k--;  }  
Magic Number,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step1,The following statement contains a magic number: if (ends ("sses"))  	k -= 2;  else if (ends ("ies"))  	setto ("i");  else if (b [k - 1] != 's')  	k--;  
Magic Number,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step1,The following statement contains a magic number: k -= 2;  
Missing Default,PorterStemmerAlgorithm,PorterStemmer,C:\repos\CoEST_TraceLab\Main\ComponentsSources\SAREC-DePaul\TraceLab Components Source\PreprocessorEnglishStemmer\PorterStemmerAlgorithm.cs,step4,The following switch statement is missing a default case: switch (b [k]) {  case 'e':  	if (ends ("icate")) {  		r ("ic");  		break;  	}  	if (ends ("ative")) {  		r ("");  		break;  	}  	if (ends ("alize")) {  		r ("al");  		break;  	}  	break;  case 'i':  	if (ends ("iciti")) {  		r ("ic");  		break;  	}  	break;  case 'l':  	if (ends ("ical")) {  		r ("ic");  		break;  	}  	if (ends ("ful")) {  		r ("");  		break;  	}  	break;  case 's':  	if (ends ("ness")) {  		r ("");  		break;  	}  	break;  }  
