Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EvolveQuest.iOS,QuestCodeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestCodeViewController.cs,ReleaseDesignerOutlets,Cyclomatic complexity of the method is 8
Complex Method,EvolveQuest.iOS,QuestViewController2,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestViewController2.cs,ReleaseDesignerOutlets,Cyclomatic complexity of the method is 8
Complex Method,EvolveQuest.Shared.ViewModels,QuestViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\QuestViewModel.cs,CheckBeacon,Cyclomatic complexity of the method is 10
Long Statement,EvolveQuest.iOS,AppDelegate,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\AppDelegate.cs,FinishedLaunching,The length of the statement  "            FileCache.SaveLocation = System.IO.Directory.GetParent(Environment.GetFolderPath(Environment.SpecialFolder.Personal)).ToString() + "/tmp"; " is 138.
Long Statement,EvolveQuest.iOS,AboutViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\AboutViewController.cs,ViewDidLoad,The length of the statement  "                    new HtmlElement("ZXing.NET Barcode Scanning"' NSUrl.FromString("https://components.xamarin.com/view/zxing.net.mobile"))' " is 120.
Long Statement,EvolveQuest.iOS,AboutViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\AboutViewController.cs,ViewDidLoad,The length of the statement  "                    new HtmlElement("Discreet Notifications"' NSUrl.FromString("https://components.xamarin.com/view/gcdiscreetnotification"))' " is 122.
Long Statement,EvolveQuest.iOS,QuestViewController2,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestViewController2.cs,ButtonContinueQuest_TouchUpInside,The length of the statement  "                var question = storyboard.InstantiateViewController("QuestAskQuestionViewController") as QuestAskQuestionViewController; " is 120.
Long Statement,EvolveQuest.iOS,WelcomeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\WelcomeViewController.cs,HandlePropertyChanged,The length of the statement  "                                ServiceContainer.Resolve<IMessageDialog>().SendMessage("Evolve Quest"' "Your quest begins on October 6th' 2014. Check back soon."); " is 131.
Long Statement,EvolveQuest.iOS,WelcomeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\WelcomeViewController.cs,GetTargetPositionFromPercent,The length of the statement  "                return new CoreGraphics.CGRect(0' (float)-MapImage.Image.Size.Height + View.Frame.Size.Height' MapImage.Frame.Size.Width' View.Frame.Size.Height); " is 146.
Long Statement,EvolveQuest.Shared.ViewModels,GameCompleteViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\GameCompleteViewModel.cs,CheckBanana,The length of the statement  "                messages.SendMessage("Congratulations!"' "You found the top secret hidden beacon and have unlocked a special prize at the end of your adventure!"); " is 147.
Long Statement,EvolveQuest.Shared.ViewModels,QuestViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\QuestViewModel.cs,ExecuteLoadQuestCommand,The length of the statement  "                    Quest = new Quest { Major = -1' Beacons = new List<Beacon>()' Clue = new Clue { Image = "http://blog.xamarin.com/wp-content/uploads/2014/01/evolve-2014.png"' Message = "Congratulations' you have completed the Evolve 2014 Quest!" } }; " is 233.
Long Statement,EvolveQuest.Shared.ViewModels,QuestViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\QuestViewModel.cs,CheckBeacon,The length of the statement  "                messages.SendMessage("Congratulations!"' "You found the top secret hidden beacon and have unlocked a special prize at the end of your adventure!"); " is 147.
Long Statement,EvolveQuest.Shared.ViewModels,QuestViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\QuestViewModel.cs,CheckAnswer,The length of the statement  "                messages.SendMessage("Wrong Answer"' "Quick Hint: look for the good looking people in the Xamarin shirts. They just may know the answer.");   " is 139.
Long Statement,EvolveQuest.Shared.ViewModels,WelcomeViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\WelcomeViewModel.cs,ExecuteLoadGameCommand,The length of the statement  "                messages.SendMessage("Not all who wander are lost..."' "But you might be. Looks like you were unable to load Evolve Quest because you dropped the connection. Please check if you have reception and try again."); " is 210.
Magic Number,EvolveQuest.iOS.Helpers,Messages,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\Helpers\Messages.cs,SendToast,The following statement contains a magic number: Utils.EnsureInvokedOnMainThread(() =>                  {                      var notificationView = new GCDiscreetNotificationView(toast' false' GCDNPresentationMode.Bottom'                                     UIApplication.SharedApplication.KeyWindow.RootViewController.View);                        notificationView.ShowAndDismissAfter(3);                  });
Magic Number,EvolveQuest.iOS,GameCompleteViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\GameCompleteViewController.cs,ViewDidLoad,The following statement contains a magic number: ButtonShare.Layer.CornerRadius = 5;
Magic Number,EvolveQuest.iOS,GameCompleteViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\GameCompleteViewController.cs,ViewDidLoad,The following statement contains a magic number: manager.DidRangeBeacons += (sender2' e) =>              {                  if (e.Beacons == null)                      return;                    foreach (var beacon in e.Beacons)                  {                      if (beacon.Proximity != CLProximity.Immediate)                      {                          return;                      }                        if (beacon.Accuracy > .1)//close' but not close enough.              return;                        viewModel.CheckBanana(beacon.Major.Int32Value' beacon.Minor.Int32Value);                  }              };
Magic Number,EvolveQuest.iOS,GameCompleteViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\GameCompleteViewController.cs,StartRanging,The following statement contains a magic number: secretRegion = new CLBeaconRegion(new NSUuid(viewModel.UUID)' 9999' BeaconId);
Magic Number,EvolveQuest.iOS,QuestAskQuestionViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestAskQuestionViewController.cs,ViewDidLoad,The following statement contains a magic number: ButtonAnswer.Layer.CornerRadius = ButtonCancel.Layer.CornerRadius = 5;
Magic Number,EvolveQuest.iOS,QuestCodeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestCodeViewController.cs,ViewDidLoad,The following statement contains a magic number: ButtonEnterCode.Layer.CornerRadius = ButtonCancel.Layer.CornerRadius = 5;
Magic Number,EvolveQuest.iOS,QuestCodeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestCodeViewController.cs,ScrollTheView,The following statement contains a magic number: UIView.SetAnimationDuration(0.3);
Magic Number,EvolveQuest.iOS,QuestCompletedViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestCompletedViewController.cs,ViewDidLoad,The following statement contains a magic number: ButtonContinue.Layer.CornerRadius = 5;
Magic Number,EvolveQuest.iOS,QuestViewController2,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestViewController2.cs,ViewDidLoad,The following statement contains a magic number: ButtonContinueQuest.Layer.CornerRadius = 5;
Magic Number,EvolveQuest.iOS,QuestViewController2,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestViewController2.cs,ViewDidLoad,The following statement contains a magic number: ProgressBar = new UIActivityIndicatorView(new CoreGraphics.CGRect(0' 0' 20' 20))              {                  HidesWhenStopped = true'                  ActivityIndicatorViewStyle = UIActivityIndicatorViewStyle.White              };
Magic Number,EvolveQuest.iOS,QuestViewController2,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestViewController2.cs,ViewDidLoad,The following statement contains a magic number: ProgressBar = new UIActivityIndicatorView(new CoreGraphics.CGRect(0' 0' 20' 20))              {                  HidesWhenStopped = true'                  ActivityIndicatorViewStyle = UIActivityIndicatorViewStyle.White              };
Magic Number,EvolveQuest.iOS,QuestViewController2,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestViewController2.cs,ManagerDidRangeBeacons,The following statement contains a magic number: beacon.Accuracy > .1
Magic Number,EvolveQuest.iOS,QuestViewController2,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestViewController2.cs,StartRanging,The following statement contains a magic number: secretRegion = new CLBeaconRegion(new NSUuid(viewModel.UUID)' 9999' BeaconId);
Magic Number,EvolveQuest.iOS,WelcomeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\WelcomeViewController.cs,ViewDidLoad,The following statement contains a magic number: ButtonLoadGame.Layer.CornerRadius = ButtonAbout.Layer.CornerRadius = 5;
Magic Number,EvolveQuest.iOS,WelcomeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\WelcomeViewController.cs,MoveMap,The following statement contains a magic number: var quests = 11.0;
Magic Number,EvolveQuest.iOS,WelcomeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\WelcomeViewController.cs,MoveMap,The following statement contains a magic number: time = 1.5;
Magic Number,EvolveQuest.iOS,WelcomeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\WelcomeViewController.cs,MoveMap,The following statement contains a magic number: percent > .5
Magic Number,EvolveQuest.iOS,WelcomeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\WelcomeViewController.cs,GetTargetPositionFromPercent,The following statement contains a magic number: position -= (height * .12);
Magic Number,EvolveQuest.Shared.Extensions,Images,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Extensions\Images.cs,LoadUrl,The following statement contains a magic number: UIView.Animate (.3'   				() => imageView.Image = image'  				() => {  					progress.StopAnimating ();  					progress.RemoveFromSuperview ();  				});
Magic Number,EvolveQuest.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,EvolveQuest.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,EvolveQuest.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,EvolveQuest.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,EvolveQuest.Shared.Helpers,Color,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\Color.cs,FromHex,The following statement contains a magic number: return new Color              {                  R = at(16) / 255.0'                  G = at(8) / 255.0'                  B = at(0) / 255.0              };
Magic Number,EvolveQuest.Shared.Helpers,FileCache,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\FileCache.cs,hex,The following statement contains a magic number: v < 10
Magic Number,EvolveQuest.Shared.Helpers,FileCache,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\FileCache.cs,hex,The following statement contains a magic number: return 'a' + v - 10;
Magic Number,EvolveQuest.Shared.Helpers,FileCache,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\FileCache.cs,md5,The following statement contains a magic number: var ret = new char [32];
Magic Number,EvolveQuest.Shared.Helpers,FileCache,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\FileCache.cs,md5,The following statement contains a magic number: ret[i * 2] = (char)hex(bytes[i] >> 4);
Magic Number,EvolveQuest.Shared.Helpers,FileCache,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\FileCache.cs,md5,The following statement contains a magic number: ret[i * 2] = (char)hex(bytes[i] >> 4);
Magic Number,EvolveQuest.Shared.Helpers,FileCache,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\FileCache.cs,md5,The following statement contains a magic number: ret[i * 2 + 1] = (char)hex(bytes[i] & 0xf);
Magic Number,EvolveQuest.Shared.Helpers,FileCache,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\Helpers\FileCache.cs,md5,The following statement contains a magic number: i < 16
Magic Number,EvolveQuest.Shared.ViewModels,GameCompleteViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\GameCompleteViewModel.cs,CheckBanana,The following statement contains a magic number: major == 9999 && minor == 1000
Magic Number,EvolveQuest.Shared.ViewModels,GameCompleteViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\GameCompleteViewModel.cs,CheckBanana,The following statement contains a magic number: major == 9999 && minor == 1000
Magic Number,EvolveQuest.Shared.ViewModels,GameCompleteViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\GameCompleteViewModel.cs,CheckBanana,The following statement contains a magic number: major == 9999 && major == 9999
Magic Number,EvolveQuest.Shared.ViewModels,GameCompleteViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\GameCompleteViewModel.cs,CheckBanana,The following statement contains a magic number: major == 9999 && major == 9999
Magic Number,EvolveQuest.Shared.ViewModels,QuestViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\QuestViewModel.cs,CheckBeacon,The following statement contains a magic number: major == 9999 && minor == 1000
Magic Number,EvolveQuest.Shared.ViewModels,QuestViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\QuestViewModel.cs,CheckBeacon,The following statement contains a magic number: major == 9999 && minor == 1000
Magic Number,EvolveQuest.Shared.ViewModels,QuestViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\QuestViewModel.cs,CheckBeacon,The following statement contains a magic number: major == 9999 && major == 9999
Magic Number,EvolveQuest.Shared.ViewModels,QuestViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\QuestViewModel.cs,CheckBeacon,The following statement contains a magic number: major == 9999 && major == 9999
Magic Number,EvolveQuest.Shared.ViewModels,WelcomeViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\WelcomeViewModel.cs,ExecuteLoadGameCommand,The following statement contains a magic number: var url = string.Format(GameUrl' random.Next(0' 3));
Magic Number,EvolveQuest.Shared.ViewModels,WelcomeViewModel,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.Shared\ViewModels\WelcomeViewModel.cs,ExecuteLoadGameCommand,The following statement contains a magic number: client.Timeout = new TimeSpan(0' 0' 15);
Missing Default,EvolveQuest.iOS,GameCompleteViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\GameCompleteViewController.cs,HandlePropertyChanged,The following switch statement is missing a default case: switch (e.PropertyName)                      {                            case BaseViewModel.IsBusyPropertyName:                              if (viewModel.IsBusy)                                  ProgressBar.StartAnimating();                              else                                  ProgressBar.StopAnimating();                              break;                          case GameCompleteViewModel.PrizePropertyName:                              {                                  LabelMessage.Text = viewModel.Prize.Message;                                    if (viewModel.SecretBananaFound)                                      ImageMain.Image = UIImage.FromBundle("ic_secret_prize");                                  StartRanging();                              }                              break;                          case GameCompleteViewModel.SecretBananaFoundPropertyName:                              if (viewModel.SecretBananaFound)                                  ImageMain.Image = UIImage.FromBundle("ic_secret_prize");                              break;                      }
Missing Default,EvolveQuest.iOS,QuestViewController2,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\QuestViewController2.cs,HandlePropertyChanged,The following switch statement is missing a default case: switch (e.PropertyName)                      {                          case QuestViewModel.ExtraTaskVisiblePropertyName:                              ButtonContinueQuest.Hidden = !viewModel.ExtraTaskVisible;                              break;                          case BaseViewModel.IsBusyPropertyName:                              if (viewModel.IsBusy)                              {                                  NavigationItem.RightBarButtonItem = loadingButton;                                  ProgressBar.StartAnimating();                              }                              else                              {                                  ProgressBar.StopAnimating();                                  NavigationItem.RightBarButtonItem = scanButton;                              }                              break;                          case QuestViewModel.QuestPropertyName:                          case QuestViewModel.NewQuestPropertyName:                              InitializeBeacons();                              break;                          case QuestViewModel.QuestsPropertyName:                              UpdateBeacons();                              break;                          case QuestViewModel.GameCompletePropertyName:  						//GoToGameCompleted();                              break;                          case QuestViewModel.CompletionDisplayPropertyName:                              this.Title = viewModel.CompletionDisplay;                              break;                        }
Missing Default,EvolveQuest.iOS,WelcomeViewController,D:\research\architectureSmells\repos\xamarin_evolve-quest\EvolveQuest.iOS\WelcomeViewController.cs,HandlePropertyChanged,The following switch statement is missing a default case: switch (e.PropertyName)              {                  case BaseViewModel.IsBusyPropertyName:                      {                          ButtonLoadGame.Enabled = ButtonAbout.Enabled = !viewModel.IsBusy;                          if (viewModel.IsBusy)                              ProgressBar.StartAnimating();                          else                              ProgressBar.StopAnimating();                      }                      break;                  case WelcomeViewModel.GameLoadedPropertyName:                      {                          if (viewModel.GameLoaded)                          {                              if (viewModel.Game.Started)                                  GoToGame();                              else                                  ServiceContainer.Resolve<IMessageDialog>().SendMessage("Evolve Quest"' "Your quest begins on October 6th' 2014. Check back soon.");                          }                      }                      break;              }
