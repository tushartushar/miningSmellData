Implementation smell,Namespace,Class,File,Method,Description
Complex Method,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,ReadConfig,Cyclomatic complexity of the method is 14
Complex Method,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,HelperManager,Cyclomatic complexity of the method is 12
Complex Method,s4pi.Helpers,RunHelper,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\RunHelper.cs,Run,Cyclomatic complexity of the method is 12
Long Parameter List,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,Edit,The method has 5 parameters. Parameters: key' res' command' wantsQuotes' ignoreWriteTimestamp
Long Statement,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,Execute,The length of the statement  "                if (arguments.IndexOf("{" + prop.ToLower() + "}") >= 0) arguments = arguments.Replace("{" + prop.ToLower() + "}"' "" + res[prop]); " is 130.
Long Statement,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,Execute,The length of the statement  "                    typeof(HelperManager).Assembly.FullName + "\n" + String.Format("Application failed to start:\n{0}\n{1}"' command' arguments)' " is 125.
Magic Number,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,ReadConfig,The following statement contains a magic number: foreach (string file in Directory.GetFiles(folder' "*.helper"))              {                  StreamReader sr = new StreamReader(new FileStream(file' FileMode.Open' FileAccess.Read' FileShare.Read));                  Dictionary<string' string> target = new Dictionary<string' string>();                  target.Add("file"' Path.GetFileNameWithoutExtension(file));                    bool inCommentBlock = false;                    for (string s = sr.ReadLine(); s != null; s = sr.ReadLine())                  {                      s = s.Trim();                        #region Comments                      if (inCommentBlock)                      {                          int i = s.IndexOf("*/");                          if (i > -1)                          {                              s = s.Substring(i + 2).Trim();                              inCommentBlock = false;                          }                      }                        string[] commentMarks = { "#"' ";"' "//" };                      for (int i = 0; s.Length > 0 && i < commentMarks.Length; i++)                      {                          int j = s.IndexOf(commentMarks[i]);                          if (j > -1) s = s.Substring(0' j).Trim();                      }                        if (inCommentBlock || s.Length == 0) continue;                        if (s.Contains("/*"))                      {                          s = s.Substring(0' s.IndexOf("/*")).Trim();                          inCommentBlock = true;                      }                      #endregion                        string[] headtail = s.Trim().Split(new char[] { ':'' '=' }' 2);                      if (headtail.Length != 2) continue;                      string keyword = headtail[0].Trim();                      if (reserved.Contains(keyword.ToLower())) keyword = keyword.ToLower();                      if (!keywords.Contains(keyword)) continue;                      if (target.ContainsKey(keyword)) continue;                      target.Add(keyword' headtail[1].Trim());                  }                    sr.Close();                    if (target.Count > 0 && target.ContainsKey("command"))                      helpers.Add(Path.GetFileNameWithoutExtension(file)' target);              }
Magic Number,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,ReadConfig,The following statement contains a magic number: foreach (string file in Directory.GetFiles(folder' "*.helper"))              {                  StreamReader sr = new StreamReader(new FileStream(file' FileMode.Open' FileAccess.Read' FileShare.Read));                  Dictionary<string' string> target = new Dictionary<string' string>();                  target.Add("file"' Path.GetFileNameWithoutExtension(file));                    bool inCommentBlock = false;                    for (string s = sr.ReadLine(); s != null; s = sr.ReadLine())                  {                      s = s.Trim();                        #region Comments                      if (inCommentBlock)                      {                          int i = s.IndexOf("*/");                          if (i > -1)                          {                              s = s.Substring(i + 2).Trim();                              inCommentBlock = false;                          }                      }                        string[] commentMarks = { "#"' ";"' "//" };                      for (int i = 0; s.Length > 0 && i < commentMarks.Length; i++)                      {                          int j = s.IndexOf(commentMarks[i]);                          if (j > -1) s = s.Substring(0' j).Trim();                      }                        if (inCommentBlock || s.Length == 0) continue;                        if (s.Contains("/*"))                      {                          s = s.Substring(0' s.IndexOf("/*")).Trim();                          inCommentBlock = true;                      }                      #endregion                        string[] headtail = s.Trim().Split(new char[] { ':'' '=' }' 2);                      if (headtail.Length != 2) continue;                      string keyword = headtail[0].Trim();                      if (reserved.Contains(keyword.ToLower())) keyword = keyword.ToLower();                      if (!keywords.Contains(keyword)) continue;                      if (target.ContainsKey(keyword)) continue;                      target.Add(keyword' headtail[1].Trim());                  }                    sr.Close();                    if (target.Count > 0 && target.ContainsKey("command"))                      helpers.Add(Path.GetFileNameWithoutExtension(file)' target);              }
Magic Number,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,ReadConfig,The following statement contains a magic number: foreach (string file in Directory.GetFiles(folder' "*.helper"))              {                  StreamReader sr = new StreamReader(new FileStream(file' FileMode.Open' FileAccess.Read' FileShare.Read));                  Dictionary<string' string> target = new Dictionary<string' string>();                  target.Add("file"' Path.GetFileNameWithoutExtension(file));                    bool inCommentBlock = false;                    for (string s = sr.ReadLine(); s != null; s = sr.ReadLine())                  {                      s = s.Trim();                        #region Comments                      if (inCommentBlock)                      {                          int i = s.IndexOf("*/");                          if (i > -1)                          {                              s = s.Substring(i + 2).Trim();                              inCommentBlock = false;                          }                      }                        string[] commentMarks = { "#"' ";"' "//" };                      for (int i = 0; s.Length > 0 && i < commentMarks.Length; i++)                      {                          int j = s.IndexOf(commentMarks[i]);                          if (j > -1) s = s.Substring(0' j).Trim();                      }                        if (inCommentBlock || s.Length == 0) continue;                        if (s.Contains("/*"))                      {                          s = s.Substring(0' s.IndexOf("/*")).Trim();                          inCommentBlock = true;                      }                      #endregion                        string[] headtail = s.Trim().Split(new char[] { ':'' '=' }' 2);                      if (headtail.Length != 2) continue;                      string keyword = headtail[0].Trim();                      if (reserved.Contains(keyword.ToLower())) keyword = keyword.ToLower();                      if (!keywords.Contains(keyword)) continue;                      if (target.ContainsKey(keyword)) continue;                      target.Add(keyword' headtail[1].Trim());                  }                    sr.Close();                    if (target.Count > 0 && target.ContainsKey("command"))                      helpers.Add(Path.GetFileNameWithoutExtension(file)' target);              }
Magic Number,s4pi.Helpers,HelperManager,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\Helpers.cs,Execute,The following statement contains a magic number: while (!p.WaitForExit(500))                  Application.DoEvents();
Magic Number,s4pi.Helpers,RunHelper,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\RunHelper.cs,Run,The following statement contains a magic number: if (useClipboard && files.Count > 0)              {                  CopyableMessageBox.Show("Do not use /Clipboard with other arguments"'                      "Fail"' CopyableMessageBoxButtons.OK' CopyableMessageBoxIcon.Stop);                  return 2;              }
Magic Number,s4pi.Helpers,RunHelper,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\RunHelper.cs,Run,The following statement contains a magic number: if (files.Count > 1)              {                  CopyableMessageBox.Show("Only pass a single file argument"'                      "Fail"' CopyableMessageBoxButtons.OK' CopyableMessageBoxIcon.Stop);                  return 3;              }
Magic Number,s4pi.Helpers,RunHelper,C:\repos\Sims4Group_Sims4Tools\s4pi Extras\Helpers\RunHelper.cs,Run,The following statement contains a magic number: if (useClipboard)              {                  ms = Clipboard.GetData(DataFormats.Serializable) as MemoryStream;                  if (ms == null)                  {                      CopyableMessageBox.Show("Invalid clipboard content"'                          "Fail"' CopyableMessageBoxButtons.OK' CopyableMessageBoxIcon.Stop);                      return 4;                  }                  Clipboard.Clear();              }              else              {                  try                  {                      ms = File.Open(files[0]' FileMode.Open' FileAccess.ReadWrite);                  }                  catch (Exception ex)                  {                      CopyableMessageBox.IssueException(ex' files[0] + "\n" + mainForm.Assembly.FullName' "Failed to open file");                      return -1;                  }              }
