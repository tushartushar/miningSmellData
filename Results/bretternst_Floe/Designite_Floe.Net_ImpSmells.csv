Implementation smell,Namespace,Class,File,Method,Description
Long Method,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,The method has 118 lines of code.
Complex Method,Floe.Net,CtcpCommand,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\CtcpCommand.cs,Quote,Cyclomatic complexity of the method is 8
Complex Method,Floe.Net,CtcpCommand,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\CtcpCommand.cs,Unquote,Cyclomatic complexity of the method is 10
Complex Method,Floe.Net,DccOperation,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccOperation.cs,SocketLoop,Cyclomatic complexity of the method is 10
Complex Method,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,Cyclomatic complexity of the method is 18
Complex Method,Floe.Net,IrcMessage,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcMessage.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Floe.Net,IrcChannelMode,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcModes.cs,ParseModes,Cyclomatic complexity of the method is 8
Complex Method,Floe.Net,IrcSession,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcSession.cs,OnMessageReceived,Cyclomatic complexity of the method is 15
Complex Method,Floe.Net,IrcSession,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcSession.cs,OnOther,Cyclomatic complexity of the method is 8
Complex Method,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,Cyclomatic complexity of the method is 13
Complex Method,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,Cyclomatic complexity of the method is 11
Long Parameter List,Floe.Net,IrcSession,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcSession.cs,Open,The method has 11 parameters. Parameters: server' port' isSecure' nickname' userName' fullname' autoReconnect' password' invisible' findExternalAddress' proxy
Long Parameter List,Floe.Net,NatHelper,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\NatHelper.cs,BeginAddForwardingRule,The method has 5 parameters. Parameters: port' protocol' description' callback' state
Long Parameter List,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,OnReceived,The method has 6 parameters. Parameters: peer' payloadType' seqNumber' timeStamp' payload' count
Long Statement,Floe.Net,DccXmitReceiver,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitReceiver.cs,OnReceived,The length of the statement  "						(this.ForceResume || (_timeStamp > 0 && _timeStamp == (int)(_fileInfo.LastWriteTimeUtc - new DateTime(1970' 1' 1)).TotalSeconds))) " is 130.
Long Statement,Floe.Net,DccXmitSender,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitSender.cs,OnConnected,The length of the statement  "			var timeStampBytes = BitConverter.GetBytes(IPAddress.HostToNetworkOrder((int)(_fileInfo.LastWriteTimeUtc - new DateTime(1970' 1' 1)).TotalSeconds)); " is 148.
Long Statement,Floe.Net,IrcSession,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcSession.cs,OnMode,The length of the statement  "					this.UserModes = (from m in e.Modes.Where((newMode) => newMode.Set).Select((newMode) => newMode.Mode).Union(this.UserModes).Distinct() " is 134.
Long Statement,Floe.Net,NatHelper,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\NatHelper.cs,BeginAddForwardingRule,The length of the statement  "				address = Dns.GetHostAddresses(Dns.GetHostName()).Where((ip) => ip.AddressFamily == AddressFamily.InterNetwork).First(); " is 120.
Long Statement,Floe.Net,NatHelper,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\NatHelper.cs,BeginDeleteForwardingRule,The length of the statement  "				address = Dns.GetHostAddresses(Dns.GetHostName()).Where((ip) => ip.AddressFamily == AddressFamily.InterNetwork).First(); " is 120.
Long Statement,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Loop,The length of the statement  "				var arr = _client.Client.BeginReceiveFrom(buffer' 0' HeaderSize + MaxPayloadSize' SocketFlags.None' ref sender' null' null); " is 124.
Complex Conditional,Floe.Net,DccXmitReceiver,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitReceiver.cs,OnReceived,The conditional expression  "_fileInfo.Exists && _fileInfo.Length < int.MaxValue &&  						(this.ForceResume || (_timeStamp > 0 && _timeStamp == (int)(_fileInfo.LastWriteTimeUtc - new DateTime(1970' 1' 1)).TotalSeconds))"  is complex.
Complex Conditional,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The conditional expression  "response.Length > HeaderLength &&  							response[0] == 0x01 && response[1] == 0x01 && // MessageType = Response  							response.Skip(4).Take(4).SequenceEqual(StunCookie) && // Magic Cookie  							response.Skip(8).Take(12).SequenceEqual(idBytes)"  is complex.
Empty Catch Block,Floe.Net,IrcSession,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcSession.cs,OnStateChanged,The method has an empty catch block.
Magic Number,Floe.Net,DccOperation,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccOperation.cs,SocketLoop,The following statement contains a magic number: switch (WaitHandle.WaitAny(handles))  					{  						case 0:  							int count = _stream.EndRead(arr);  							arr = null;  							if (count <= 0)  							{  								return;  							}  							this.OnReceived(readBuffer' count);  							break;  						case 1:  							if (arw != null)  							{  								_stream.EndWrite(arw);  								arw = null;  								this.OnSent(outgoing.Item1' outgoing.Item2' outgoing.Item3);  							}  							break;  						case 2:  							if (arw != null)  							{  								_stream.EndWrite(arw);  							}  							return;  					}
Magic Number,Floe.Net,DccSendReceiver,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccSendReceiver.cs,OnReceived,The following statement contains a magic number: this.QueueWrite(writeBuffer' 0' 4);
Magic Number,Floe.Net,DccXmitReceiver,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitReceiver.cs,OnReceived,The following statement contains a magic number: Array.Copy(buffer' 0' _timeStampBytes' _handshakeBytesReceived' Math.Min(4' count));
Magic Number,Floe.Net,DccXmitReceiver,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitReceiver.cs,OnReceived,The following statement contains a magic number: _fileInfo.Exists && _fileInfo.Length < int.MaxValue &&  						(this.ForceResume || (_timeStamp > 0 && _timeStamp == (int)(_fileInfo.LastWriteTimeUtc - new DateTime(1970' 1' 1)).TotalSeconds))
Magic Number,Floe.Net,DccXmitReceiver,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitReceiver.cs,OnReceived,The following statement contains a magic number: this.QueueWrite(resumeBytes' 0' 4);
Magic Number,Floe.Net,DccXmitReceiver,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitReceiver.cs,OnReceived,The following statement contains a magic number: _handshakeBytesReceived >= 4
Magic Number,Floe.Net,DccXmitReceiver,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitReceiver.cs,CloseFile,The following statement contains a magic number: File.SetLastWriteTimeUtc(_fileInfo.FullName' new DateTime(1970' 1' 1) + TimeSpan.FromSeconds(_timeStamp));
Magic Number,Floe.Net,DccXmitSender,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitSender.cs,OnConnected,The following statement contains a magic number: var timeStampBytes = BitConverter.GetBytes(IPAddress.HostToNetworkOrder((int)(_fileInfo.LastWriteTimeUtc - new DateTime(1970' 1' 1)).TotalSeconds));
Magic Number,Floe.Net,DccXmitSender,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitSender.cs,OnConnected,The following statement contains a magic number: this.QueueWrite(timeStampBytes' 0' 4);
Magic Number,Floe.Net,DccXmitSender,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitSender.cs,OnReceived,The following statement contains a magic number: Array.Copy(buffer' 0' _resumeBytes' _handshakeBytesReceived' Math.Min(4' count));
Magic Number,Floe.Net,DccXmitSender,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccXmitSender.cs,OnReceived,The following statement contains a magic number: _handshakeBytesReceived >= 4
Magic Number,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,Open,The following statement contains a magic number: port <= 0 || port > 65535
Magic Number,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,The following statement contains a magic number: byte[] readBuffer = new byte[512]' writeBuffer = new byte[Encoding.UTF8.GetMaxByteCount(512)];
Magic Number,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,The following statement contains a magic number: byte[] readBuffer = new byte[512]' writeBuffer = new byte[Encoding.UTF8.GetMaxByteCount(512)];
Magic Number,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,The following statement contains a magic number: var input = new List<byte>(512);
Magic Number,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,The following statement contains a magic number: arr = stream.BeginRead(readBuffer' 0' 512' null' null);
Magic Number,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,The following statement contains a magic number: count = Math.Min(510' count);
Magic Number,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,The following statement contains a magic number: arw = stream.BeginWrite(writeBuffer' 0' count + 2' null' null);
Magic Number,Floe.Net,IrcConnection,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcConnection.cs,SocketLoop,The following statement contains a magic number: switch (idx)  				{  					case 0:  						count = stream.EndRead(arr);  						arr = null;  						if (count == 0)  						{  							_tcpClient.Close();  						}  						else  						{  							for (int i = 0; i < count; i++)  							{  								switch (readBuffer[i])  								{  									case 0xa:  										if (gotCR)  										{  											var incoming = IrcMessage.Parse(Encoding.UTF8.GetString(input.ToArray()));  											this.Dispatch(this.OnMessageReceived' incoming);  											input.Clear();  										}  										break;  									case 0xd:  										break;  									default:  										input.Add(readBuffer[i]);  										break;  								}  								gotCR = readBuffer[i] == 0xd;  							}  						}  						break;  					case 1:  						if (arw != null)  						{  							stream.EndWrite(arw);  							arw = null;  							this.Dispatch(this.OnMessageSent' outgoing);  						}  						break;  					case 2:  						if (arw != null)  						{  							stream.EndWrite(arw);  						}  						return;  					case WaitHandle.WaitTimeout:  						this.Dispatch(this.OnHeartbeat);  						break;  				}
Magic Number,Floe.Net,IrcKickEventArgs,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcEventArgs.cs,IrcKickEventArgs,The following statement contains a magic number: this.Text = message.Parameters.Count > 2 ? message.Parameters[2] : null;
Magic Number,Floe.Net,IrcKickEventArgs,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcEventArgs.cs,IrcKickEventArgs,The following statement contains a magic number: this.Text = message.Parameters.Count > 2 ? message.Parameters[2] : null;
Magic Number,Floe.Net,IrcInfoEventArgs,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcEventArgs.cs,IrcInfoEventArgs,The following statement contains a magic number: this.IsError = (int)this.Code >= 400;
Magic Number,Floe.Net,IrcMessage,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcMessage.cs,Parse,The following statement contains a magic number: int size = data.Length > 512 ? 512 : data.Length;
Magic Number,Floe.Net,IrcMessage,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcMessage.cs,Parse,The following statement contains a magic number: int size = data.Length > 512 ? 512 : data.Length;
Magic Number,Floe.Net,IrcSession,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcSession.cs,Mode,The following statement contains a magic number: ++i == 3
Magic Number,Floe.Net,IrcSession,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcSession.cs,OnStateChanged,The following statement contains a magic number: this.AddHandler(new IrcCodeHandler((e) =>  					{  						e.Handled = true;  						if (e.Message.Parameters.Count < 2)  						{  							return true;  						}    						var parts = e.Message.Parameters[1].Split('@');  						if (parts.Length > 1)  						{  							IPAddress external;  							if (!IPAddress.TryParse(parts[1]' out external))  							{  								Dns.BeginGetHostEntry(parts[1]' (ar) =>  									{  										try  										{  											var host = Dns.EndGetHostEntry(ar);  											if (host.AddressList.Length > 0)  											{  												this.ExternalAddress = host.AddressList[0];  											}  										}  										catch { }  									}' null);  							}  							else  							{  								this.ExternalAddress = external;  							}  						}  						return true;  					}' IrcCode.RPL_USERHOST));
Magic Number,Floe.Net,IrcSession,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Irc\IrcSession.cs,OnOther,The following statement contains a magic number: this.NetworkName = parts[3];
Magic Number,Floe.Net,NatHelper,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\NatHelper.cs,BeginDiscover,The following statement contains a magic number: var endpoint = new IPEndPoint(IPAddress.Broadcast' 1900);
Magic Number,Floe.Net,NatHelper,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\NatHelper.cs,BeginDiscover,The following statement contains a magic number: byte[] inBuf = new Byte[4096];
Magic Number,Floe.Net,NatHelper,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\NatHelper.cs,BeginDiscover,The following statement contains a magic number: ThreadPool.QueueUserWorkItem((o) =>  				{  					int tries = MaxTries;  					while (--tries >= 0)  					{  						try  						{  							sock.SendTo(outBuf' endpoint);  							sock.ReceiveTimeout = DiscoverTimeout;  							while (true)  							{  								int length = sock.Receive(inBuf);  								string data = Encoding.ASCII.GetString(inBuf' 0' length).ToLowerInvariant();    								var match = ResponseLocation.Match(data);  								if (match.Success && match.Groups["location"].Success)  								{  									System.Diagnostics.Debug.WriteLine("Found UPnP device at " + match.Groups["location"]);  									string controlUrl = GetServiceUrl(match.Groups["location"].Value);  									if (!string.IsNullOrEmpty(controlUrl))  									{  										_controlUrl = controlUrl;  										System.Diagnostics.Debug.WriteLine("Found control URL at " + _controlUrl);  										ar.IsSuccessful = true;  										break;  									}  									else  									{  										continue;  									}  								}  							}  						}  						catch (Exception ex)  						{  							// ignore timeout exceptions  							if (!(ex is SocketException && ((SocketException)ex).ErrorCode == 10060))  							{  								System.Diagnostics.Debug.WriteLine(ex.ToString());  							}  						}  					}    					((ManualResetEvent)ar.AsyncWaitHandle).Set();  					if (callback != null)  					{  						callback(ar);  					}  				}' null);
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: var buffer = new byte[256];
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: this.Read(stream' buffer' 2);
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: this.Read(stream' buffer' 2);
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: stream.WriteByte((byte)((result.Port >> 8) & 0xFF));
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: this.Read(stream' buffer' 4);
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: switch(buffer[3])  			{  				case 0x1:  					this.Read(stream' buffer' 4);  					break;  				case 0x3:  					this.ReadString(stream' buffer);  					break;  				case 0x4:  					this.Read(stream' buffer' 16);  					break;  			}
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: switch(buffer[3])  			{  				case 0x1:  					this.Read(stream' buffer' 4);  					break;  				case 0x3:  					this.ReadString(stream' buffer);  					break;  				case 0x4:  					this.Read(stream' buffer' 16);  					break;  			}
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: switch(buffer[3])  			{  				case 0x1:  					this.Read(stream' buffer' 4);  					break;  				case 0x3:  					this.ReadString(stream' buffer);  					break;  				case 0x4:  					this.Read(stream' buffer' 16);  					break;  			}
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following statement contains a magic number: this.Read(stream' buffer' 2);
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,WriteString,The following statement contains a magic number: str = str.Substring(0' 255);
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,WriteString,The following statement contains a magic number: str.Length > 255
Magic Number,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,Read,The following statement contains a magic number: count < 2
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: Array.Copy(StunCookie' 0' bytes' 4' 4);
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: Array.Copy(StunCookie' 0' bytes' 4' 4);
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: var idBytes = new byte[12];
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: Array.Copy(idBytes' 0' bytes' 8' 12);
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: Array.Copy(idBytes' 0' bytes' 8' 12);
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: int attrType = (ushort)response[idx] << 8 | (ushort)response[idx + 1];
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: int attrLength = (ushort)response[idx + 2] << 8 | (ushort)response[idx + 3];
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: int attrLength = (ushort)response[idx + 2] << 8 | (ushort)response[idx + 3];
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: int attrLength = (ushort)response[idx + 2] << 8 | (ushort)response[idx + 3];
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: int port = (ushort)response[idx + 6] << 8 | (ushort)response[idx + 7];
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: int port = (ushort)response[idx + 6] << 8 | (ushort)response[idx + 7];
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: int port = (ushort)response[idx + 6] << 8 | (ushort)response[idx + 7];
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: var address = new IPAddress(response.Skip(idx + 8).Take(attrLength - 4).ToArray());
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: var address = new IPAddress(response.Skip(idx + 8).Take(attrLength - 4).ToArray());
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: attrType == 0x01 && attrLength >= 8
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: idx += 32 + attrLength;
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: idx + 24 < response.Length
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: response.Length > HeaderLength &&  							response[0] == 0x01 && response[1] == 0x01 && // MessageType = Response  							response.Skip(4).Take(4).SequenceEqual(StunCookie) && // Magic Cookie  							response.Skip(8).Take(12).SequenceEqual(idBytes)
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: response.Length > HeaderLength &&  							response[0] == 0x01 && response[1] == 0x01 && // MessageType = Response  							response.Skip(4).Take(4).SequenceEqual(StunCookie) && // Magic Cookie  							response.Skip(8).Take(12).SequenceEqual(idBytes)
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: response.Length > HeaderLength &&  							response[0] == 0x01 && response[1] == 0x01 && // MessageType = Response  							response.Skip(4).Take(4).SequenceEqual(StunCookie) && // Magic Cookie  							response.Skip(8).Take(12).SequenceEqual(idBytes)
Magic Number,Floe.Net,StunUdpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\StunUdpClient.cs,Loop,The following statement contains a magic number: response.Length > HeaderLength &&  							response[0] == 0x01 && response[1] == 0x01 && // MessageType = Response  							response.Skip(4).Take(4).SequenceEqual(StunCookie) && // Magic Cookie  							response.Skip(8).Take(12).SequenceEqual(idBytes)
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,RtpClient,The following statement contains a magic number: _ssrc = new byte[4];
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[2] = (byte)(_seqNumber >> 8);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[2] = (byte)(_seqNumber >> 8);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[3] = (byte)(_seqNumber);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[4] = (byte)(timeStamp >> 24);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[4] = (byte)(timeStamp >> 24);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[5] = (byte)(timeStamp >> 16);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[5] = (byte)(timeStamp >> 16);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[6] = (byte)(timeStamp >> 8);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[6] = (byte)(timeStamp >> 8);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: _sendBuffer[7] = (byte)(timeStamp);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: Array.Copy(_ssrc' 0' _sendBuffer' 8' 4);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: Array.Copy(_ssrc' 0' _sendBuffer' 8' 4);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Send,The following statement contains a magic number: Array.Copy(payload' 0' _sendBuffer' 12' _payloadSize);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Loop,The following statement contains a magic number: switch (WaitHandle.WaitAny(handles' KeepAliveInterval))  				{  					case 0:  						int count = 0;  						try  						{  							count = _client.Client.EndReceiveFrom(arr' ref sender);  						}  						catch (SocketException ex)  						{  							// Ignore packets that are too large.  							if (ex.ErrorCode == 10040)  							{  								continue;  							}  							else  							{  								throw;  							}  						}  						var endpoint = (IPEndPoint)sender;  						if (_peers.Contains(endpoint))  						{  							this.ReadPacket(endpoint' buffer' count);  						}  						break;  					case 1:  						return;  					case WaitHandle.WaitTimeout:  						if (_peers.Count == 0)  						{  							this.SendKeepAlive(_keepAliveTarget);  						}  						else  						{  							foreach (var peer in _peers)  							{  								this.SendKeepAlive(peer);  							}  						}  						break;  				}
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: ushort seq = (ushort)((buffer[2] << 8) | buffer[3]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: ushort seq = (ushort)((buffer[2] << 8) | buffer[3]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: ushort seq = (ushort)((buffer[2] << 8) | buffer[3]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int timeStamp = (int)((buffer[4] << 24) | (buffer[5] << 16) | (buffer[6] << 8) | buffer[7]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int timeStamp = (int)((buffer[4] << 24) | (buffer[5] << 16) | (buffer[6] << 8) | buffer[7]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int timeStamp = (int)((buffer[4] << 24) | (buffer[5] << 16) | (buffer[6] << 8) | buffer[7]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int timeStamp = (int)((buffer[4] << 24) | (buffer[5] << 16) | (buffer[6] << 8) | buffer[7]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int timeStamp = (int)((buffer[4] << 24) | (buffer[5] << 16) | (buffer[6] << 8) | buffer[7]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int timeStamp = (int)((buffer[4] << 24) | (buffer[5] << 16) | (buffer[6] << 8) | buffer[7]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int timeStamp = (int)((buffer[4] << 24) | (buffer[5] << 16) | (buffer[6] << 8) | buffer[7]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int source = (int)((buffer[8] << 24) | (buffer[9] << 16) | (buffer[10] << 8) | buffer[11]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int source = (int)((buffer[8] << 24) | (buffer[9] << 16) | (buffer[10] << 8) | buffer[11]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int source = (int)((buffer[8] << 24) | (buffer[9] << 16) | (buffer[10] << 8) | buffer[11]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int source = (int)((buffer[8] << 24) | (buffer[9] << 16) | (buffer[10] << 8) | buffer[11]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int source = (int)((buffer[8] << 24) | (buffer[9] << 16) | (buffer[10] << 8) | buffer[11]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int source = (int)((buffer[8] << 24) | (buffer[9] << 16) | (buffer[10] << 8) | buffer[11]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: int source = (int)((buffer[8] << 24) | (buffer[9] << 16) | (buffer[10] << 8) | buffer[11]);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: Array.Copy(buffer' 12' _payload' 0' count - HeaderSize);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: ushort seqHigh = (ushort)(oldSeq >> 16);
Magic Number,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,ReadPacket,The following statement contains a magic number: newSeq = ((seqHigh - 1) << 16) | seq;
Missing Default,Floe.Net,CtcpCommand,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\CtcpCommand.cs,Unquote,The following switch statement is missing a default case: switch (c)  					{  						case '0':  							output.Append('\u0000');  							break;  						case '1':  							output.Append('\u0001');  							break;  						case 'n':  							output.Append('\u000a');  							break;  						case 'r':  							output.Append('\u000d');  							break;  						case '@':  							output.Append(' ');  							break;  						case '\\':  							output.Append('\\');  							last = '\u0000';  							break;  					}
Missing Default,Floe.Net,DccOperation,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccOperation.cs,Listen,The following switch statement is missing a default case: switch (index)  					{  						case 0:  							try  							{  								_tcpClient = _listener.EndAcceptTcpClient((IAsyncResult)ar);  							}  							catch (SocketException)  							{  								break;  							}  							finally  							{  								_listener.Stop();  							}    							var endpoint = (IPEndPoint)_tcpClient.Client.RemoteEndPoint;  							this.Address = endpoint.Address;  							this.Port = endpoint.Port;  							this.OnConnected();    							try  							{  								this.SocketLoop();  							}  							catch (Exception ex)  							{  								this.OnError(ex);  							}  							break;    						case 1:  							_listener.Stop();  							break;    						case WaitHandle.WaitTimeout:  							_listener.Stop();  							this.OnError(new TimeoutException());  							break;  					}
Missing Default,Floe.Net,DccOperation,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Dcc\DccOperation.cs,SocketLoop,The following switch statement is missing a default case: switch (WaitHandle.WaitAny(handles))  					{  						case 0:  							int count = _stream.EndRead(arr);  							arr = null;  							if (count <= 0)  							{  								return;  							}  							this.OnReceived(readBuffer' count);  							break;  						case 1:  							if (arw != null)  							{  								_stream.EndWrite(arw);  								arw = null;  								this.OnSent(outgoing.Item1' outgoing.Item2' outgoing.Item3);  							}  							break;  						case 2:  							if (arw != null)  							{  								_stream.EndWrite(arw);  							}  							return;  					}
Missing Default,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following switch statement is missing a default case: switch(buffer[1])  			{  				case 0x1:  					throw new SocksException("General failure.");  				case 0x2:  					throw new SocksException("Connection not allowed by ruleset.");  				case 0x3:  					throw new SocksException("Network unreachable.");  				case 0x4:  					throw new SocksException("Host unreachable.");  				case 0x5:  					throw new SocksException("Connection refused by destination host.");  				case 0x6:  					throw new SocksException("TTL expired.");  				case 0x7:  					throw new SocksException("Command not supported / protocol error.");  				case 0x8:  					throw new SocksException("Address type not supported.");  			}
Missing Default,Floe.Net,SocksTcpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Network\SocksTcpClient.cs,DoHandshake,The following switch statement is missing a default case: switch(buffer[3])  			{  				case 0x1:  					this.Read(stream' buffer' 4);  					break;  				case 0x3:  					this.ReadString(stream' buffer);  					break;  				case 0x4:  					this.Read(stream' buffer' 16);  					break;  			}
Missing Default,Floe.Net,RtpClient,D:\research\architectureSmells\repos\bretternst_Floe\Floe.Net\Rtp\RtpClient.cs,Loop,The following switch statement is missing a default case: switch (WaitHandle.WaitAny(handles' KeepAliveInterval))  				{  					case 0:  						int count = 0;  						try  						{  							count = _client.Client.EndReceiveFrom(arr' ref sender);  						}  						catch (SocketException ex)  						{  							// Ignore packets that are too large.  							if (ex.ErrorCode == 10040)  							{  								continue;  							}  							else  							{  								throw;  							}  						}  						var endpoint = (IPEndPoint)sender;  						if (_peers.Contains(endpoint))  						{  							this.ReadPacket(endpoint' buffer' count);  						}  						break;  					case 1:  						return;  					case WaitHandle.WaitTimeout:  						if (_peers.Count == 0)  						{  							this.SendKeepAlive(_keepAliveTarget);  						}  						else  						{  							foreach (var peer in _peers)  							{  								this.SendKeepAlive(peer);  							}  						}  						break;  				}
