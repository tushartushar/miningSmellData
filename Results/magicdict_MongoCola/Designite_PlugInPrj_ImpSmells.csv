Implementation smell,Namespace,Class,File,Method,Description
Magic Number,PlugInPrj,PlugIn,D:\research\architectureSmells\repos\magicdict_MongoCola\PlugInPrj\PlugIn.cs,LoadPlugIn,The following statement contains a magic number: var typeName = fileName.Substring(0' fileName.Length - 4);
Missing Default,PlugInPrj,PlugIn,D:\research\architectureSmells\repos\magicdict_MongoCola\PlugInPrj\PlugIn.cs,RunPlugIn,The following switch statement is missing a default case: switch (mPlug.RunLv)              {                  case PlugInBase.PathLv.ConnectionLv:                      mPlug.PlugObj = RuntimeMongoDbContext.GetCurrentServer();                      break;                  case PlugInBase.PathLv.InstanceLv:                      mPlug.PlugObj = RuntimeMongoDbContext.GetCurrentServer();                      break;                  case PlugInBase.PathLv.DatabaseLv:                      mPlug.PlugObj = RuntimeMongoDbContext.GetCurrentDataBase();                      break;                  case PlugInBase.PathLv.CollectionLv:                      mPlug.PlugObj = RuntimeMongoDbContext.GetCurrentCollection();                      break;                  case PlugInBase.PathLv.DocumentLv:                      break;              }
Missing Default,PlugInPrj,PlugIn,D:\research\architectureSmells\repos\magicdict_MongoCola\PlugInPrj\PlugIn.cs,LoadPlugInMenuItem,The following switch statement is missing a default case: switch (plugin.Value.RunLv)                      {                          case PlugInBase.PathLv.ConnectionLv:                              plugInType = "[Connection]";                              break;                          case PlugInBase.PathLv.InstanceLv:                              plugInType = "[Instance]";                              break;                          case PlugInBase.PathLv.DatabaseLv:                              plugInType = "[Database]";                              break;                          case PlugInBase.PathLv.CollectionLv:                              plugInType = "[Collection]";                              break;                          case PlugInBase.PathLv.DocumentLv:                              plugInType = "[Document]";                              break;                          case PlugInBase.PathLv.Misc:                              plugInType = "[Misc]";                              break;                      }
