Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WebShop.BusinessObjects,ValueConverter,C:\repos\hovek_WebShop\WebShop.BusinessObjects\ValueConverter.cs,Convert,Cyclomatic complexity of the method is 16
Complex Method,WebShop.BusinessObjects.Item,ArchiveItemChange,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\ArchiveItemChange.cs,getDifferences,Cyclomatic complexity of the method is 14
Complex Method,WebShop.BusinessObjects.Item,AttributeDefinition,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeDefinition.cs,get,Cyclomatic complexity of the method is 10
Complex Method,WebShop.BusinessObjects.Item,AttributeTemplateAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,GetConstrainedReferenceList,Cyclomatic complexity of the method is 11
Complex Method,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetRawValues,Cyclomatic complexity of the method is 24
Complex Method,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetItemAttribute,Cyclomatic complexity of the method is 8
Complex Method,WebShop.BusinessObjects.Item,PredefinedListValue,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\PredefinedList.cs,GetValue,Cyclomatic complexity of the method is 9
Complex Method,WebShop.BusinessObjects.Item,Reference,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Reference.cs,ConvertToCommonReferenceList,Cyclomatic complexity of the method is 9
Long Parameter List,WebShop.BusinessObjects.Item,ArchiveItemChange,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\ArchiveItemChange.cs,getDifferences,The method has 9 parameters.
Long Parameter List,WebShop.BusinessObjects.Item,AttributeTemplateConstraint,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,GetRawValue,The method has 5 parameters.
Long Parameter List,WebShop.BusinessObjects.Item,Item,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetItemAttribute,The method has 5 parameters.
Long Parameter List,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetRawValues,The method has 5 parameters.
Long Parameter List,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetItemAttribute,The method has 8 parameters.
Long Identifier,WebShop.BusinessObjects.Item,AttributeTemplate,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,Get,The length of the parameter paramAllowGetFromNearestParent is 30.
Long Statement,WebShop.BusinessObjects.Item,ArchiveItemChange,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\ArchiveItemChange.cs,getDifferences,The length of the statement  "		bool differs = intPrev.Count != intCurr.Count || stringPrev.Count != stringCurr.Count || decimalPrev.Count != decimalCurr.Count || dateTimePrev.Count != dateTimeCurr.Count; " is 172.
Long Statement,WebShop.BusinessObjects.Item,ArchiveItemChange,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\ArchiveItemChange.cs,CompareAndSave,The length of the statement  "	List<KeyValuePair<IItemAttribute' IItemAttribute>> attributePairs = new List<KeyValuePair<IItemAttribute' IItemAttribute>> (); " is 126.
Long Statement,WebShop.BusinessObjects.Item,ArchiveItemChange,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\ArchiveItemChange.cs,CompareAndSave,The length of the statement  "		IItemAttribute currAttribute = DeletedAttributes.Exists (a => a == prevAttribute.AttributeId) ? null : CurrentItem.Attributes.Find (a => a.AttributeId == prevAttribute.AttributeId); " is 181.
Long Statement,WebShop.BusinessObjects.Item,AttributeDefinition,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeDefinition.cs,FormatValues_CollectionChanged,The length of the statement  "	S.IItem formatItem = RawItem.Children.Find (i => i.TypeId == (int)ItemDefinitionTypeEnum.AttributeDefinitionValueFormat); " is 121.
Long Statement,WebShop.BusinessObjects.Item,AttributeDefinition,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeDefinition.cs,DisplayValues_CollectionChanged,The length of the statement  "	S.IItem displayItem = RawItem.Children.Find (i => i.TypeId == (int)ItemDefinitionTypeEnum.AttributeDefinitionDisplayValue); " is 123.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplate,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,Get,The length of the statement  "			attributeTemplate.Attributes.Add (AttributeTemplateAttribute.Get (rawTemplateChild' attributeDefinitions' attributeTemplate.Cache)); " is 132.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplate,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,Get,The length of the statement  "			attributeTemplate.Groups.Add (AttributeTemplateAttributeGroup.Get (rawTemplateChild' attributeDefinitions' attributeTemplate.Cache)); " is 133.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplate,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,Get,The length of the statement  "	List<IAttributeDefinition> attributeDefinitions = this.Cache.I<AttributeDefinition> ().Get (SPNames.GetAttributeDefinition); " is 124.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplateAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,GetConstrainedReferenceList,The length of the statement  "	Dictionary<IAttributeDefinition' List<int>> constrainAttributesValues = new Dictionary<IAttributeDefinition' List<int>> (); " is 123.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplateAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,GetConstrainedReferenceList,The length of the statement  "		constrainAttributesValues [attr.Attribute].AddRange (attr.IntValues.Where (v => v.LanguageId == languageId || v.LanguageId == 0).Select (v => v.Value)); " is 152.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplateAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,GetConstrainedReferenceList,The length of the statement  "	Dictionary<IAttributeDefinition' List<int>> constrainAttributesValues = new Dictionary<IAttributeDefinition' List<int>> (); " is 123.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplateAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,GetConstrainedReferenceList,The length of the statement  "	List<IAttributeDefinition> attributeDefinitions = this.Cache.I<IAttributeDefinition> (Module.I<IAttributeDefinition> ().GetType ()).Get (); " is 139.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplateAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,GetConstrainedReferenceList,The length of the statement  "	Dictionary<AttributeDataSystemListReferenceEnum' List<int>> foreignKeyList = new Dictionary<AttributeDataSystemListReferenceEnum' List<int>> (); " is 144.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplateAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,GetConstrainedReferenceList,The length of the statement  "		referenceList = SystemListForeignKeyFilter.Filter (fk.Key' this.Attribute.SystemListReferenceId.Value' fk.Value' referenceList); " is 128.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplateAttributeGroup,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,Get,The length of the statement  "			attributeGroup.Attributes.Add (AttributeTemplateAttribute.Get (rawTemplateChild' attributeDefinitions' attributeGroup.Cache)); " is 126.
Long Statement,WebShop.BusinessObjects.Item,AttributeTemplateAttributeGroup,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,Get,The length of the statement  "			attributeGroup.Add (AttributeTemplateAttributeGroup.Get (rawTemplateChild' attributeDefinitions' attributeGroup.Cache)); " is 120.
Long Statement,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetItemAttribute,The length of the statement  "	attribute.Attribute = Module.I<IAttributeLocator> ().Find (attributeDefinitions' a => a.Id == attributeDefinitionId' cache); " is 124.
Magic Number,WebShop.BusinessObjects.Item,AttributeTemplateConstraint,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,Get,The following statement contains a magic number: foreach (S.IItemData<int> rawIntValue in rawItem.IntData) {  	if (rawIntValue.TypeId < 51) {  		IItemDefinitionValue<int> value = Module.I<IItemDefinitionValue<int>> ();  		value.RawItem = rawIntValue;  		attributeTemplateConstraint.IntValues.Add (value);  	}  }  
Magic Number,WebShop.BusinessObjects.Item,AttributeTemplateConstraint,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,Get,The following statement contains a magic number: if (rawIntValue.TypeId < 51) {  	IItemDefinitionValue<int> value = Module.I<IItemDefinitionValue<int>> ();  	value.RawItem = rawIntValue;  	attributeTemplateConstraint.IntValues.Add (value);  }  
Magic Number,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetItemAttribute,The following statement contains a magic number: foreach (S.IItemData<string> item in rawItem.StringData.Where (i => i.TypeId < 51)) {  	IItemValue<string> itemValue = ModuleDefinitions.Module.I<IItemValue<string>> ();  	itemValue.RawItem = item;  	attribute.StringValues.Add (itemValue);  }  
Magic Number,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetItemAttribute,The following statement contains a magic number: foreach (S.IItemData<int> item in rawItem.IntData.Where (i => i.TypeId < 51)) {  	IItemValue<int> itemValue = ModuleDefinitions.Module.I<IItemValue<int>> ();  	itemValue.RawItem = item;  	attribute.IntValues.Add (itemValue);  }  
Magic Number,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetItemAttribute,The following statement contains a magic number: foreach (S.IItemData<decimal> item in rawItem.DecimalData.Where (i => i.TypeId < 51)) {  	IItemValue<decimal> itemValue = ModuleDefinitions.Module.I<IItemValue<decimal>> ();  	itemValue.RawItem = item;  	attribute.DecimalValues.Add (itemValue);  }  
Magic Number,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetItemAttribute,The following statement contains a magic number: foreach (S.IItemData<DateTime> item in rawItem.DateTimeData.Where (i => i.TypeId < 51)) {  	IItemValue<DateTime> itemValue = ModuleDefinitions.Module.I<IItemValue<DateTime>> ();  	itemValue.RawItem = item;  	attribute.DateTimeValues.Add (itemValue);  }  
Missing Default,WebShop.BusinessObjects.Item,AttributeTemplateConstraint,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\AttributeTemplate.cs,getType,The following switch statement is missing a default case: switch (i.TypeId) {  case (int)ItemDefinitionDataTypeEnum.AttributeTemplateConstraintMinEntry:  case (int)ItemDefinitionDataTypeEnum.AttributeTemplateConstraintMaxEntry:  case (int)ItemDefinitionDataTypeEnum.AttributeTemplateConstraintForeignKeyAttribute:  	return true;  }  
Missing Default,WebShop.BusinessObjects.Item,ItemAttribute,C:\repos\hovek_WebShop\WebShop.BusinessObjects\Item\Item.cs,GetRawValues,The following switch statement is missing a default case: switch (Attribute.DataType) {  case AttributeDataTypeEnum.Bool:  case AttributeDataTypeEnum.Int:  case AttributeDataTypeEnum.Reference:  	foreach (var val in IntValues.Where (i => i.LanguageId == languageId || i.LanguageId == 0)) {  		if (Attribute.DataType == AttributeDataTypeEnum.Bool)  			values.Add (Convert.ToBoolean (val.Value));  		else  			values.Add (val.Value);  	}  	break;  case AttributeDataTypeEnum.String:  case AttributeDataTypeEnum.Image:  	foreach (var val in StringValues.Where (i => i.LanguageId == languageId || i.LanguageId == 0))  		values.Add (val.Value);  	break;  case AttributeDataTypeEnum.DateTime:  	foreach (var val in DateTimeValues.Where (i => i.LanguageId == languageId || i.LanguageId == 0))  		values.Add (val.Value);  	break;  case AttributeDataTypeEnum.Decimal:  	foreach (var val in DecimalValues.Where (i => i.LanguageId == languageId || i.LanguageId == 0))  		values.Add (val.Value);  	break;  }  
