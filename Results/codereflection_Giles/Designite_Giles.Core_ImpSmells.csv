Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Giles.Core.IO,FileSystemWatcherOptions,C:\repos\codereflection_Giles\src\Giles.Core\IO\FileSystemWatcherOptions.cs,FileSystemWatcherOptions,The method has 7 parameters. Parameters: path' filter' changedAction' createdAction' errorAction' deletedAction' renamedAction
Long Parameter List,Giles.Core.IO,IFileSystem,C:\repos\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The method has 7 parameters. Parameters: filePath' filter' changeAction' createdAction' deletedAction' renamedAction' errorAction
Long Parameter List,Giles.Core.IO,FileSystem,C:\repos\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The method has 7 parameters. Parameters: filePath' filter' changeAction' createdAction' deletedAction' renamedAction' errorAction
Long Identifier,Giles.Core.Configuration,TestAssemblyFinder,C:\repos\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The length of the parameter numberOfReferencedTestAssemblies is 32.
Long Statement,Giles.Core.Encryption,EncryptionHelper,C:\repos\codereflection_Giles\src\Giles.Core\Encryption\EncryptionHelper.cs,DecryptString,The length of the statement  "            byte[] result = ProtectedData.Unprotect(Convert.FromBase64String(stringToDecrypt)' entropy' DataProtectionScope.CurrentUser); " is 125.
Long Statement,Giles.Core.Encryption,EncryptionHelper,C:\repos\codereflection_Giles\src\Giles.Core\Encryption\EncryptionHelper.cs,EncryptString,The length of the statement  "            byte[] result = ProtectedData.Protect(Encoding.Unicode.GetBytes(stringToEncrypt)' entropy' DataProtectionScope.CurrentUser); " is 124.
Long Statement,Giles.Core.Runners,BuildRunner,C:\repos\codereflection_Giles\src\Giles.Core\Runners\BuildRunner.cs,FormatBuildMessages,The length of the statement  "                message += string.Format("\r\nError Message: {0}\r\n\r\nBuild Output: \r\n{1}"' result.ErrorMessage' result.CommandOutput); " is 123.
Long Statement,Giles.Core.Runners,TestRunnerResult,C:\repos\codereflection_Giles\src\Giles.Core\Runners\CommandProcessExecutor.cs,ToString,The length of the statement  "            return string.Format("{0} Passed: {1}' Failed: {2}' Ignored: {3}"' RunnerName' Stats.Passed' Stats.Failed' Stats.Ignored); " is 122.
Long Statement,Giles.Core.UI,GrowlUserDisplay,C:\repos\codereflection_Giles\src\Giles.Core\UI\GrowlUserDisplay.cs,DisplayMessage,The length of the statement  "            var notification = new Notification(application.Name' informationNotificationType.Name' DateTime.Now.Ticks.ToString()' title' text); " is 132.
Long Statement,Giles.Core.UI,GrowlUserDisplay,C:\repos\codereflection_Giles\src\Giles.Core\UI\GrowlUserDisplay.cs,DisplayResult,The length of the statement  "            var notification = new Notification(application.Name' notifyType.Name' DateTime.Now.Ticks.ToString()' title' result.Runner.ToString()) { Icon = icon }; " is 151.
Long Statement,Giles.Core.Watchers,SourceWatcher,C:\repos\codereflection_Giles\src\Giles.Core\Watchers\SourceWatcher.cs,Watch,The length of the statement  "            var fileSystemWatcher = fileWatcherFactory.Build(new FileSystemWatcherOptions(solutionFolder' filter' ChangeAction' null' ErrorAction' DeletedAction' RenamedAction)); " is 166.
Long Statement,Giles.Core.Watchers,SourceWatcher,C:\repos\codereflection_Giles\src\Giles.Core\Watchers\SourceWatcher.cs,Watch,The length of the statement  "            fileSystemWatcher.NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite | NotifyFilters.CreationTime | NotifyFilters.FileName | NotifyFilters.DirectoryName; " is 168.
Long Statement,Giles.Core.Watchers,SourceWatcher,C:\repos\codereflection_Giles\src\Giles.Core\Watchers\SourceWatcher.cs,RunNow,The length of the statement  "            testAssembliesToRun.Each(assm => runResults.AddRange(manager.Run(assm' config.Filters.Where(f => f.Type != FilterType.Exclusive).Select(f => f.Name).ToList()))); " is 161.
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,C:\repos\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: var score = numberOfReferencedTestAssemblies * 10;
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,C:\repos\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: if (assemblyName.Contains("UnitTest"))                  score += 5;              else if (assemblyName.Contains("Test"))                  score += 3;
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,C:\repos\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: if (assemblyName.Contains("UnitTest"))                  score += 5;              else if (assemblyName.Contains("Test"))                  score += 3;
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,C:\repos\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: if (assemblyName.Contains("Spec"))                  score += 2;
Magic Number,Giles.Core.IO,FileSystem,C:\repos\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The following statement contains a magic number: fileWatcher.Error += (sender' args) =>              {                  fileWatcher.EnableRaisingEvents = false;                    while (!fileWatcher.EnableRaisingEvents)                  {                      try                      {                          fileWatcher.Changed -= changeAction;                          fileWatcher.Created -= createdAction;                          fileWatcher.Deleted -= deletedAction;                          fileWatcher.Renamed -= renamedAction;                          fileWatcher.Error -= errorAction;                            fileWatcher = new FileSystemWatcher(filePath' filter);                            fileWatcher.Changed += changeAction;                          fileWatcher.Created += createdAction;                          fileWatcher.Deleted += deletedAction;                          fileWatcher.Renamed += renamedAction;                          fileWatcher.Error += errorAction;                            fileWatcher.EnableRaisingEvents = true;                      }                      catch                      {                          fileWatcher.EnableRaisingEvents = false;                          System.Threading.Thread.Sleep(5000);                      }                  }              };
Magic Number,Giles.Core.IO,FileSystem,C:\repos\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,BlockUntilFileAvailable,The following statement contains a magic number: return BlockUntilFileAvailable(path' TimeSpan.FromMinutes(5));
Magic Number,Giles.Core.IO,FileSystem,C:\repos\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,BlockUntilFileAvailable,The following statement contains a magic number: do              {                  FileStream fs = null;                  try                  {                      fs = File.Open(path' FileMode.Open' FileAccess.ReadWrite' FileShare.None);                      FileAvailable = true;                  }                  catch                  {                      System.Threading.Thread.Sleep(1000);                  }                  finally                  {                      if (fs != null)                          fs.Close();                  }              } while (!FileAvailable && DateTime.Now.Subtract(StartDateTime).CompareTo(timeout) < 0);
Missing Default,Giles.Core.Configuration,MsBuildProject,C:\repos\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetAssemblyFilePath,The following switch statement is missing a default case: switch(outtype.ToUpper())              {                  case "LIBRARY":                      assemblyName += ".dll";                      break;                  case "EXE":                      assemblyName += ".exe";                      break;              }
Missing Default,Giles.Core.Configuration,MsBuildProject,C:\repos\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetPropertyValue,The following switch statement is missing a default case: switch (specific.Length)              {                  case 1:                      return specific[0];                  case 0:                      switch (defaultConfig.Length)                      {                          case 1:                              return defaultConfig[0];                          case 0:                              throw new InvalidOperationException(                                  string.Format("No value found for property '{0}' using "                                      + "platform configuration '{1}'"' property' platformConfig));                      }                      break;              }
Missing Default,Giles.Core.Configuration,MsBuildProject,C:\repos\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetPropertyValue,The following switch statement is missing a default case: switch (defaultConfig.Length)                      {                          case 1:                              return defaultConfig[0];                          case 0:                              throw new InvalidOperationException(                                  string.Format("No value found for property '{0}' using "                                      + "platform configuration '{1}'"' property' platformConfig));                      }
