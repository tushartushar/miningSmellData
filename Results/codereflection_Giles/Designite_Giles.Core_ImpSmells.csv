Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Giles.Core.IO,FileSystemWatcherOptions,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\FileSystemWatcherOptions.cs,FileSystemWatcherOptions,The method has 7 parameters.
Long Parameter List,Giles.Core.IO,IFileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The method has 7 parameters.
Long Parameter List,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The method has 7 parameters.
Long Identifier,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The length of the parameter numberOfReferencedTestAssemblies is 32.
Long Statement,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetPropertyValue,The length of the statement  "	where propertyGroup.Name == "PropertyGroup" && propertyGroup.Attributes != null && propertyGroup.Attributes ["Condition"] != null && propertyGroup.Attributes ["Condition"].InnerText.Contains (condition) " is 202.
Long Statement,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetPropertyValue,The length of the statement  "	where propertyGroup.Name == "PropertyGroup" && (propertyGroup.Attributes == null || propertyGroup.Attributes ["Condition"] == null) " is 131.
Long Statement,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetPropertyValue,The length of the statement  "			throw new InvalidOperationException (string.Format ("No value found for property '{0}' using " + "platform configuration '{1}'"' property' platformConfig)); " is 156.
Long Statement,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetPropertyValue,The length of the statement  "	throw new InvalidOperationException (string.Format ("The property '{0}' had multiple values " + "applicable for the same platform configuration '{1}'"' property' platformConfig)); " is 179.
Long Statement,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetDefaultPropertyValue,The length of the statement  "	where propertyGroup.Name == "PropertyGroup" && (propertyGroup.Attributes == null || propertyGroup.Attributes ["Condition"] == null) " is 131.
Long Statement,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetDefaultPropertyValue,The length of the statement  "	where configNode.Name == property && configNode.Attributes != null && configNode.Attributes ["Condition"] != null && configNode.Attributes ["Condition"].InnerText.Contains ("'$(" + property + ")' == ''") " is 203.
Long Statement,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The length of the statement  "	var numberOfReferencedTestAssemblies = SupportedAssemblies.Where (item => IsTestFrameworkReferenced (project' item)).Count (); " is 126.
Long Statement,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,IsTestFrameworkReferenced,The length of the statement  "	return project.GetLocalAssemblyRefs ().Any (info => info.EndsWith (frameworkAssemblyFilename' StringComparison.OrdinalIgnoreCase)); " is 131.
Long Statement,Giles.Core.Encryption,EncryptionHelper,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Encryption\EncryptionHelper.cs,DecryptString,The length of the statement  "	byte[] result = ProtectedData.Unprotect (Convert.FromBase64String (stringToDecrypt)' entropy' DataProtectionScope.CurrentUser); " is 127.
Long Statement,Giles.Core.Encryption,EncryptionHelper,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Encryption\EncryptionHelper.cs,EncryptString,The length of the statement  "	byte[] result = ProtectedData.Protect (Encoding.Unicode.GetBytes (stringToEncrypt)' entropy' DataProtectionScope.CurrentUser); " is 126.
Long Statement,Giles.Core.IO,FileWatcherFactory,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\FileWatcherFactory.cs,Build,The length of the statement  "	return fileSystem.SetupFileWatcher (fileSystemWatcherOptions.Path' fileSystemWatcherOptions.Filter' fileSystemWatcherOptions.ChangedAction' fileSystemWatcherOptions.CreatedAction' fileSystemWatcherOptions.DeletedAction' fileSystemWatcherOptions.RenamedAction' fileSystemWatcherOptions.ErrorAction); " is 298.
Long Statement,Giles.Core.Runners,BuildRunner,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Runners\BuildRunner.cs,FormatBuildMessages,The length of the statement  "	var message = string.Format ("Build complete in {0} seconds. Result: {1}"' watch.Elapsed.TotalSeconds' result.ExitCode == 0 ? "Success" : "Failure"); " is 149.
Long Statement,Giles.Core.Runners,BuildRunner,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Runners\BuildRunner.cs,FormatBuildMessages,The length of the statement  "		message += string.Format ("\r\nError Message: {0}\r\n\r\nBuild Output: \r\n{1}"' result.ErrorMessage' result.CommandOutput); " is 124.
Long Statement,Giles.Core.Runners,TestRunnerResult,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Runners\CommandProcessExecutor.cs,ToString,The length of the statement  "	return string.Format ("{0} Passed: {1}' Failed: {2}' Ignored: {3}"' RunnerName' Stats.Passed' Stats.Failed' Stats.Ignored); " is 123.
Long Statement,Giles.Core.Runners,TestFrameworkResolver,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Runners\TestFrameworkResolver.cs,Resolve,The length of the statement  "	var runners = frameworkInspectors.Where (inspector => referencedAssemblies.AnyMatchesRequirementFor (inspector.Requirement)).Select (AnInstanceOfTheTestRunner); " is 160.
Long Statement,Giles.Core.Runners,TestFrameworkResolver,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Runners\TestFrameworkResolver.cs,GetRunnerFrom,The length of the statement  "	var result = Assembly.LoadFrom (assemblyLocation).GetTypes ().Where (x => typeof(IFrameworkRunner).IsAssignableFrom (x) && x.IsClass).FirstOrDefault (); " is 152.
Long Statement,Giles.Core.UI,GrowlUserDisplay,F:\newReposMay17\codereflection_Giles\src\Giles.Core\UI\GrowlUserDisplay.cs,DisplayMessage,The length of the statement  "	var notification = new Notification (application.Name' informationNotificationType.Name' DateTime.Now.Ticks.ToString ()' title' text); " is 134.
Long Statement,Giles.Core.UI,GrowlUserDisplay,F:\newReposMay17\codereflection_Giles\src\Giles.Core\UI\GrowlUserDisplay.cs,DisplayResult,The length of the statement  "	var notification = new Notification (application.Name' notifyType.Name' DateTime.Now.Ticks.ToString ()' title' result.Runner.ToString ()) { " is 139.
Long Statement,Giles.Core.Watchers,SourceWatcher,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Watchers\SourceWatcher.cs,Watch,The length of the statement  "	var fileSystemWatcher = fileWatcherFactory.Build (new FileSystemWatcherOptions (solutionFolder' filter' ChangeAction' null' ErrorAction' DeletedAction' RenamedAction)); " is 168.
Long Statement,Giles.Core.Watchers,SourceWatcher,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Watchers\SourceWatcher.cs,Watch,The length of the statement  "	fileSystemWatcher.NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite | NotifyFilters.CreationTime | NotifyFilters.FileName | NotifyFilters.DirectoryName; " is 168.
Long Statement,Giles.Core.Watchers,SourceWatcher,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Watchers\SourceWatcher.cs,RunNow,The length of the statement  "	testAssembliesToRun.Each (assm => runResults.AddRange (manager.Run (assm' config.Filters.Where (f => f.Type != FilterType.Exclusive).Select (f => f.Name).ToList ()))); " is 167.
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: if (assemblyName.Contains ("UnitTest"))  	score += 5;  else if (assemblyName.Contains ("Test"))  	score += 3;  
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: if (assemblyName.Contains ("UnitTest"))  	score += 5;  else if (assemblyName.Contains ("Test"))  	score += 3;  
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: score += 5;  
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: if (assemblyName.Contains ("Test"))  	score += 3;  
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: score += 3;  
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: if (assemblyName.Contains ("Spec"))  	score += 2;  
Magic Number,Giles.Core.Configuration,TestAssemblyFinder,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\TestAssemblyFinder.cs,GetIsTestProjectScore,The following statement contains a magic number: score += 2;  
Magic Number,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The following statement contains a magic number: fileWatcher.Error += (sender' args) => {  	fileWatcher.EnableRaisingEvents = false;  	while (!fileWatcher.EnableRaisingEvents) {  		try {  			fileWatcher.Changed -= changeAction;  			fileWatcher.Created -= createdAction;  			fileWatcher.Deleted -= deletedAction;  			fileWatcher.Renamed -= renamedAction;  			fileWatcher.Error -= errorAction;  			fileWatcher = new FileSystemWatcher (filePath' filter);  			fileWatcher.Changed += changeAction;  			fileWatcher.Created += createdAction;  			fileWatcher.Deleted += deletedAction;  			fileWatcher.Renamed += renamedAction;  			fileWatcher.Error += errorAction;  			fileWatcher.EnableRaisingEvents = true;  		} catch {  			fileWatcher.EnableRaisingEvents = false;  			System.Threading.Thread.Sleep (5000);  		}  	}  };  
Magic Number,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The following statement contains a magic number: while (!fileWatcher.EnableRaisingEvents) {  	try {  		fileWatcher.Changed -= changeAction;  		fileWatcher.Created -= createdAction;  		fileWatcher.Deleted -= deletedAction;  		fileWatcher.Renamed -= renamedAction;  		fileWatcher.Error -= errorAction;  		fileWatcher = new FileSystemWatcher (filePath' filter);  		fileWatcher.Changed += changeAction;  		fileWatcher.Created += createdAction;  		fileWatcher.Deleted += deletedAction;  		fileWatcher.Renamed += renamedAction;  		fileWatcher.Error += errorAction;  		fileWatcher.EnableRaisingEvents = true;  	} catch {  		fileWatcher.EnableRaisingEvents = false;  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The following statement contains a magic number: try {  	fileWatcher.Changed -= changeAction;  	fileWatcher.Created -= createdAction;  	fileWatcher.Deleted -= deletedAction;  	fileWatcher.Renamed -= renamedAction;  	fileWatcher.Error -= errorAction;  	fileWatcher = new FileSystemWatcher (filePath' filter);  	fileWatcher.Changed += changeAction;  	fileWatcher.Created += createdAction;  	fileWatcher.Deleted += deletedAction;  	fileWatcher.Renamed += renamedAction;  	fileWatcher.Error += errorAction;  	fileWatcher.EnableRaisingEvents = true;  } catch {  	fileWatcher.EnableRaisingEvents = false;  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,SetupFileWatcher,The following statement contains a magic number: System.Threading.Thread.Sleep (5000);  
Magic Number,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,BlockUntilFileAvailable,The following statement contains a magic number: return BlockUntilFileAvailable (path' TimeSpan.FromMinutes (5));  
Magic Number,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,BlockUntilFileAvailable,The following statement contains a magic number: do {  	FileStream fs = null;  	try {  		fs = File.Open (path' FileMode.Open' FileAccess.ReadWrite' FileShare.None);  		FileAvailable = true;  	} catch {  		System.Threading.Thread.Sleep (1000);  	} finally {  		if (fs != null)  			fs.Close ();  	}  } while (!FileAvailable && DateTime.Now.Subtract (StartDateTime).CompareTo (timeout) < 0);  
Magic Number,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,BlockUntilFileAvailable,The following statement contains a magic number: try {  	fs = File.Open (path' FileMode.Open' FileAccess.ReadWrite' FileShare.None);  	FileAvailable = true;  } catch {  	System.Threading.Thread.Sleep (1000);  } finally {  	if (fs != null)  		fs.Close ();  }  
Magic Number,Giles.Core.IO,FileSystem,F:\newReposMay17\codereflection_Giles\src\Giles.Core\IO\IFileSystem.cs,BlockUntilFileAvailable,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Missing Default,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetAssemblyFilePath,The following switch statement is missing a default case: switch (outtype.ToUpper ()) {  case "LIBRARY":  	assemblyName += ".dll";  	break;  case "EXE":  	assemblyName += ".exe";  	break;  }  
Missing Default,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetPropertyValue,The following switch statement is missing a default case: switch (specific.Length) {  case 1:  	return specific [0];  case 0:  	switch (defaultConfig.Length) {  	case 1:  		return defaultConfig [0];  	case 0:  		throw new InvalidOperationException (string.Format ("No value found for property '{0}' using " + "platform configuration '{1}'"' property' platformConfig));  	}  	break;  }  
Missing Default,Giles.Core.Configuration,MsBuildProject,F:\newReposMay17\codereflection_Giles\src\Giles.Core\Configuration\MsBuildProject.cs,GetPropertyValue,The following switch statement is missing a default case: switch (defaultConfig.Length) {  case 1:  	return defaultConfig [0];  case 0:  	throw new InvalidOperationException (string.Format ("No value found for property '{0}' using " + "platform configuration '{1}'"' property' platformConfig));  }  
