Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PubSubSQLGUI,ListViewDataset,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\ListViewDataset.cs,ProcessRow,Cyclomatic complexity of the method is 21
Magic Number,PubSubSQLGUI,MainForm,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\MainForm.cs,tick,The following statement contains a magic number: if (dataset.ResetDirty ()) {  	setStatusOk ();  	setJSON ();  	listView.VirtualListSize = dataset.RowCount;  	resultsTabContainer.SelectedTab = resultsTab;  	listView.BeginUpdate ();  	listView.EndUpdate ();  	flashTicks = DateTime.Now.Ticks;  }  else if ((DateTime.Now.Ticks - flashTicks) < (FLASH_TIMEOUT * 2)) {  	// make sure that we clear the background color  	listView.VirtualListSize = dataset.RowCount;  	listView.BeginUpdate ();  	listView.EndUpdate ();  }  
Magic Number,PubSubSQLGUI,MainForm,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\MainForm.cs,tick,The following statement contains a magic number: if ((DateTime.Now.Ticks - flashTicks) < (FLASH_TIMEOUT * 2)) {  	// make sure that we clear the background color  	listView.VirtualListSize = dataset.RowCount;  	listView.BeginUpdate ();  	listView.EndUpdate ();  }  
Magic Number,PubSubSQLGUI,MainForm,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\MainForm.cs,syncColumns,The following statement contains a magic number: for (int i = listView.Columns.Count; i < dataset.ColumnCount; i++) {  	string col = dataset.Column (i);  	listView.Columns.Add (col);  	listView.Columns [i].Width = 100;  }  
Magic Number,PubSubSQLGUI,MainForm,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\MainForm.cs,syncColumns,The following statement contains a magic number: listView.Columns [i].Width = 100;  
Magic Number,PubSubSQLGUI,Simulator,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\Simulator.cs,Run,The following statement contains a magic number: try {  	ids.Clear ();  	client.Connect (Address);  	// first insert data  	for (int row = 1; row <= Rows && !stopFlag; row++) {  		string insert = generateInsert (row);  		client.Execute (insert);  		client.NextRow ();  		string id = client.GetValue ("id");  		if (string.IsNullOrEmpty (id))  			throw new Exception ("id is empty");  		ids.Add (id);  	}  	//  	while (!stopFlag) {  		for (int i = 0; i < 100 && !stopFlag; i++) {  			string update = generateUpdate ();  			client.Stream (update);  		}  		// gui thread can not process that many messages from the server  		// slow down the updates  		Thread.Sleep (100);  	}  	client.Disconnect ();  }  catch (Exception e) {  	System.Windows.Forms.MessageBox.Show (e.Message);  }  finally {  	client.Disconnect ();  }  
Magic Number,PubSubSQLGUI,Simulator,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\Simulator.cs,Run,The following statement contains a magic number: try {  	ids.Clear ();  	client.Connect (Address);  	// first insert data  	for (int row = 1; row <= Rows && !stopFlag; row++) {  		string insert = generateInsert (row);  		client.Execute (insert);  		client.NextRow ();  		string id = client.GetValue ("id");  		if (string.IsNullOrEmpty (id))  			throw new Exception ("id is empty");  		ids.Add (id);  	}  	//  	while (!stopFlag) {  		for (int i = 0; i < 100 && !stopFlag; i++) {  			string update = generateUpdate ();  			client.Stream (update);  		}  		// gui thread can not process that many messages from the server  		// slow down the updates  		Thread.Sleep (100);  	}  	client.Disconnect ();  }  catch (Exception e) {  	System.Windows.Forms.MessageBox.Show (e.Message);  }  finally {  	client.Disconnect ();  }  
Magic Number,PubSubSQLGUI,Simulator,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\Simulator.cs,Run,The following statement contains a magic number: while (!stopFlag) {  	for (int i = 0; i < 100 && !stopFlag; i++) {  		string update = generateUpdate ();  		client.Stream (update);  	}  	// gui thread can not process that many messages from the server  	// slow down the updates  	Thread.Sleep (100);  }  
Magic Number,PubSubSQLGUI,Simulator,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\Simulator.cs,Run,The following statement contains a magic number: while (!stopFlag) {  	for (int i = 0; i < 100 && !stopFlag; i++) {  		string update = generateUpdate ();  		client.Stream (update);  	}  	// gui thread can not process that many messages from the server  	// slow down the updates  	Thread.Sleep (100);  }  
Magic Number,PubSubSQLGUI,Simulator,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\Simulator.cs,Run,The following statement contains a magic number: for (int i = 0; i < 100 && !stopFlag; i++) {  	string update = generateUpdate ();  	client.Stream (update);  }  
Magic Number,PubSubSQLGUI,Simulator,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\Simulator.cs,Run,The following statement contains a magic number: Thread.Sleep (100);  
Missing Default,PubSubSQLGUI,ListViewDataset,C:\repos\PubSubSQL_dotnet\PubSubSQLGUI\ListViewDataset.cs,ProcessRow,The following switch statement is missing a default case: switch (client.Action) {  case "select":  case "add":  case "insert":  	// add row  	row = new List<Cell> (columns.Count);  	// for select operations columns are always in the same order  	foreach (string col in columns) {  		row.Add (new Cell (client.GetValue (col)));  	}  	rows.Add (row);  	if (!string.IsNullOrEmpty (id)) {  		idsToRows [id] = row;  	}  	break;  case "update":  	if (idsToRows.TryGetValue (id' out row)) {  		foreach (string col in client.Columns) {  			int ordinal = columnOrdinals [col];  			// auto expand row  			for (int i = row.Count; i <= ordinal; i++) {  				row.Add (new Cell (string.Empty));  			}  			row [ordinal].Value = client.GetValue (col);  			row [ordinal].LastUpdated = DateTime.Now.Ticks;  		}  	}  	break;  case "delete":  case "remove":  	if (idsToRows.TryGetValue (id' out row)) {  		idsToRows.Remove (id);  		rows.Remove (row);  	}  	break;  }  
