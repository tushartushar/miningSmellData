Implementation smell,Namespace,Class,File,Method,Description
Magic Number,npantarhei.distribution.wcf.tests,test_Integration,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Integration.cs,Run,The following statement contains a magic number: using (var server = new FlowRuntime(configServer))              using (new WcfOperationHost(server' "localhost:8000"))              {                  server.Message += Console.WriteLine;                    var configClient = new FlowRuntimeConfiguration()                                      .AddOperation(new WcfStandInOperation("standin"' "localhost:8100"' "localhost:8000"))                                      .AddStream(".in"' "standin#hello")                                      .AddStream("standin#hello"' ".out");                  using (var client = new FlowRuntime(configClient))                  {                      client.Message += Console.WriteLine;                        client.Process(".in"' "peter");                        var result = "";                      Assert.IsTrue(client.WaitForResult(2000' _ => result = (string)_.Data));                        Assert.AreEqual("hello' peter"' result);                  }              }
Magic Number,npantarhei.distribution.wcf.tests,test_Transceivers,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Transceivers.cs,StandIn_to_Host,The following statement contains a magic number: using(var host = new WcfHostTransceiver("localhost:8000"))              using (var standIn = new WcfStandInTransceiver("localhost:8001"' "localhost:8000"))              {                  HostInput input = null;                  host.ReceivedFromStandIn += _ => input = _;                     standIn.SendToHost(new HostInput {Data = new byte[]{4'2}});                    Assert.AreEqual(new byte[]{4'2}' input.Data);              }
Magic Number,npantarhei.distribution.wcf.tests,test_Transceivers,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Transceivers.cs,StandIn_to_Host,The following statement contains a magic number: using(var host = new WcfHostTransceiver("localhost:8000"))              using (var standIn = new WcfStandInTransceiver("localhost:8001"' "localhost:8000"))              {                  HostInput input = null;                  host.ReceivedFromStandIn += _ => input = _;                     standIn.SendToHost(new HostInput {Data = new byte[]{4'2}});                    Assert.AreEqual(new byte[]{4'2}' input.Data);              }
Magic Number,npantarhei.distribution.wcf.tests,test_Transceivers,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Transceivers.cs,StandIn_to_Host,The following statement contains a magic number: using(var host = new WcfHostTransceiver("localhost:8000"))              using (var standIn = new WcfStandInTransceiver("localhost:8001"' "localhost:8000"))              {                  HostInput input = null;                  host.ReceivedFromStandIn += _ => input = _;                     standIn.SendToHost(new HostInput {Data = new byte[]{4'2}});                    Assert.AreEqual(new byte[]{4'2}' input.Data);              }
Magic Number,npantarhei.distribution.wcf.tests,test_Transceivers,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Transceivers.cs,StandIn_to_Host,The following statement contains a magic number: using(var host = new WcfHostTransceiver("localhost:8000"))              using (var standIn = new WcfStandInTransceiver("localhost:8001"' "localhost:8000"))              {                  HostInput input = null;                  host.ReceivedFromStandIn += _ => input = _;                     standIn.SendToHost(new HostInput {Data = new byte[]{4'2}});                    Assert.AreEqual(new byte[]{4'2}' input.Data);              }
Magic Number,npantarhei.distribution.wcf.tests,test_Transceivers,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Transceivers.cs,Host_to_StandIn,The following statement contains a magic number: using (var host = new WcfHostTransceiver("localhost:8000"))              using (var standIn = new WcfStandInTransceiver("localhost:8001"' "localhost:8000"))              {                  HostOutput output = null;                  standIn.ReceivedFromHost += _ => output = _;                    host.SendToStandIn(new Tuple<string' HostOutput>("localhost:8001"' new HostOutput{Data = new byte[]{4'2}}));                    Assert.AreEqual(new byte[]{4'2}' output.Data);              }
Magic Number,npantarhei.distribution.wcf.tests,test_Transceivers,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Transceivers.cs,Host_to_StandIn,The following statement contains a magic number: using (var host = new WcfHostTransceiver("localhost:8000"))              using (var standIn = new WcfStandInTransceiver("localhost:8001"' "localhost:8000"))              {                  HostOutput output = null;                  standIn.ReceivedFromHost += _ => output = _;                    host.SendToStandIn(new Tuple<string' HostOutput>("localhost:8001"' new HostOutput{Data = new byte[]{4'2}}));                    Assert.AreEqual(new byte[]{4'2}' output.Data);              }
Magic Number,npantarhei.distribution.wcf.tests,test_Transceivers,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Transceivers.cs,Host_to_StandIn,The following statement contains a magic number: using (var host = new WcfHostTransceiver("localhost:8000"))              using (var standIn = new WcfStandInTransceiver("localhost:8001"' "localhost:8000"))              {                  HostOutput output = null;                  standIn.ReceivedFromHost += _ => output = _;                    host.SendToStandIn(new Tuple<string' HostOutput>("localhost:8001"' new HostOutput{Data = new byte[]{4'2}}));                    Assert.AreEqual(new byte[]{4'2}' output.Data);              }
Magic Number,npantarhei.distribution.wcf.tests,test_Transceivers,C:\repos\ralfw_NPantaRhei\source\npantarhei.distribution\npantarhei.distribution.wcf\tests\test_Transceivers.cs,Host_to_StandIn,The following statement contains a magic number: using (var host = new WcfHostTransceiver("localhost:8000"))              using (var standIn = new WcfStandInTransceiver("localhost:8001"' "localhost:8000"))              {                  HostOutput output = null;                  standIn.ReceivedFromHost += _ => output = _;                    host.SendToStandIn(new Tuple<string' HostOutput>("localhost:8001"' new HostOutput{Data = new byte[]{4'2}}));                    Assert.AreEqual(new byte[]{4'2}' output.Data);              }
