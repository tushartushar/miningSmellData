Implementation smell,Namespace,Class,File,Method,Description
Complex Method,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,Cyclomatic complexity of the method is 8
Long Statement,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The length of the statement  "		Console.WriteLine ("The config file must be either next to ProcessLauncher.exe' and named ProcessLauncher.config' OR specified by a full path as the first argument to ProcessLauncher.exe"); " is 189.
Long Statement,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The length of the statement  "			Console.WriteLine (string.Format ("Error setting up parent process '{0}'{1}{2}"' procToLaunch.Path' Environment.NewLine' ex.Message)); " is 134.
Long Statement,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The length of the statement  "				Console.WriteLine (string.Format ("Error setting up child process '{0}'{1}{2}"' childDep.Path' Environment.NewLine' ex.Message)); " is 129.
Long Statement,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The length of the statement  "				//we want to watch for child spawns - if we run this thing and it spawns a child' and then dies (because it's another helper app)' we want to pay attention to it's child and treat it as the "parent" " is 198.
Long Statement,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The length of the statement  "					foreach (var childProc in _configInfo.Processes.SelectMany (proc => proc.Dependencies.Where (x => !x.ProcessInfo.HasExited))) { " is 127.
Long Statement,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,SetupProcess,The length of the statement  "		throw new ArgumentException ("You must specify a valid path for all processes!"' new FileNotFoundException ("File not found: " + dep.Path)); " is 140.
Long Statement,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,SetupProcess,The length of the statement  "		throw new ArgumentException ("You must specify a valid working directory or none at all for all processes!"' new DirectoryNotFoundException ("Directory not found: " + dep.WorkingDir)); " is 184.
Magic Number,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The following statement contains a magic number: lock (_configInfo) {  	foreach (var proc in _configInfo.Processes) {  		//kick off a parent  		proc.ProcessInfo.Start ();  		foreach (var childProc in proc.Dependencies) {  			//kick off all the children for this parent  			Thread.Sleep (100);  			//wait a little bit in between child processes  			childProc.ProcessInfo.Start ();  		}  	}  }  
Magic Number,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The following statement contains a magic number: foreach (var proc in _configInfo.Processes) {  	//kick off a parent  	proc.ProcessInfo.Start ();  	foreach (var childProc in proc.Dependencies) {  		//kick off all the children for this parent  		Thread.Sleep (100);  		//wait a little bit in between child processes  		childProc.ProcessInfo.Start ();  	}  }  
Magic Number,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The following statement contains a magic number: foreach (var childProc in proc.Dependencies) {  	//kick off all the children for this parent  	Thread.Sleep (100);  	//wait a little bit in between child processes  	childProc.ProcessInfo.Start ();  }  
Magic Number,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The following statement contains a magic number: Thread.Sleep (2500);  
Magic Number,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The following statement contains a magic number: while (true) {  	//do we kill the program yet?  	lock (_configInfo) {  		if (_configInfo.Processes.All (x => x.ProcessInfo.HasExited)) {  			//we want to watch for child spawns - if we run this thing and it spawns a child' and then dies (because it's another helper app)' we want to pay attention to it's child and treat it as the "parent"  			var parentsHaveLiveChildren = false;  			foreach (var launchInfo in _configInfo.Processes) {  				//the parent process is dead at this point' but we know what it's processID was.  				var children = ProcessExtensions.GetChildProcesses (launchInfo.ProcessInfo.Id);  				if (children.Count () > 0) {  					//then we have spawns and should not exit  					parentsHaveLiveChildren = true;  					break;  				}  			}  			if (!parentsHaveLiveChildren) {  				//kill all dependencies  				foreach (var childProc in _configInfo.Processes.SelectMany (proc => proc.Dependencies.Where (x => !x.ProcessInfo.HasExited))) {  					childProc.ProcessInfo.EnableRaisingEvents = false;  					childProc.ProcessInfo.Kill ();  				}  				Environment.Exit (0);  			}  		}  	}  	Thread.Sleep (5000);  }  
Magic Number,IDF.Utilities.ProcLaunch,ProcessLauncher,C:\repos\StoneFin_ProcessLauncher\IDFProcLaunch\ProcessLauncher.cs,Main,The following statement contains a magic number: Thread.Sleep (5000);  
