Implementation smell,Namespace,Class,File,Method,Description
Long Method,Facebook.Client,FacebookUriMapper,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\FacebookUriMapper.cs,MapUri,The method has 169 lines of code.
Long Parameter List,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,ShowFeedDialogViaBrowser,The method has 6 parameters. Parameters: toId' link' linkName' linkCaption' linkDescription' picture
Long Parameter List,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,ShowFeedDialog,The method has 6 parameters. Parameters: toId' link' linkName' linkCaption' linkDescription' picture
Long Parameter List,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowFeedDialogViaBrowser,The method has 6 parameters. Parameters: toId' link' linkName' linkCaption' linkDescription' picture
Long Parameter List,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowFeedDialog,The method has 6 parameters. Parameters: toId' link' linkName' linkCaption' linkDescription' picture
Long Identifier,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,,The length of the parameter OnFacebookAuthenticationFinished is 32.
Long Identifier,Facebook.Client.Controls,PlacePicker,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\PlacePicker\PlacePicker.cs,,The length of the parameter DisplayProfilePicturesProperty is 30.
Long Identifier,Facebook.Client.Controls,FriendPicker,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Universal\Controls\FriendPicker\FriendPicker.cs,,The length of the parameter DisplayProfilePicturesProperty is 30.
Long Statement,Facebook.Client,AppAuthenticationHelper,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\AppAuthenticationHelper.cs,AuthenticateWithApp,The length of the statement  "            string uriString = string.Format(FacebookConnectUriTemplate' appId' permissions' redirectUri' HttpHelper.UrlEncode(state == null ? string.Empty : state)); " is 154.
Long Statement,Facebook.Client,FacebookAppLinkResolver,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\FacebookAppLinkResolver.cs,GetAppLinkAsync,The length of the statement  "            String finalUrl = String.Format("https://graph.facebook.com/v2.0/?ids={0}&type=al&fields=windows'windows_phone'windows_universal"' sourceUrl); " is 142.
Long Statement,Facebook.Client,FacebookAppLinkResolver,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\FacebookAppLinkResolver.cs,GetAppLinkAsync,The length of the statement  "                targets.Add(new Target { Uri = (string)windowsObject["url"]' Platform = Platform.Windows' Name = (string)windowsObject["app_name"] }); " is 134.
Long Statement,Facebook.Client,FacebookAppLinkResolver,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\FacebookAppLinkResolver.cs,GetAppLinkAsync,The length of the statement  "                targets.Add(new Target { Uri = (string)windowsPhoneObject["url"]' Platform = Platform.WindowsPhone' Name = (string)windowsPhoneObject["app_name"] }); " is 149.
Long Statement,Facebook.Client,FacebookAppLinkResolver,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\FacebookAppLinkResolver.cs,GetAppLinkAsync,The length of the statement  "                targets.Add(new Target { Uri = (string)universalObject["url"]' Platform = Platform.Universal' Name = (string)universalObject["app_name"] }); " is 140.
Long Statement,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,LoginWithBehavior,The length of the statement  "                                "https://m.facebook.com/v2.1/dialog/oauth?redirect_uri={0}&display=touch&state=%7B%220is_active_session%22%3A1%2C%22is_open_session%22%3A1%2C%22com.facebook.sdk_client_state%22%3A1%2C%223_method%22%3A%22browser_auth%22%7D&scope={2}&type=user_agent&client_id={1}&sdk=ios"' " is 271.
Long Statement,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,LoginWithBehavior,The length of the statement  "                                "https://m.facebook.com/v2.1/dialog/oauth?redirect_uri={0}%3A%2F%2Fauthorize&display=touch&state=%7B%220is_active_session%22%3A1%2C%22is_open_session%22%3A1%2C%22com.facebook.sdk_client_state%22%3A1%2C%223_method%22%3A%22browser_auth%22%7D&scope={2}&type=user_agent&client_id={1}&sdk=ios"' " is 289.
Long Statement,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,CheckAndExtendTokenIfNeeded,The length of the statement  "                String extensionString = "[{\"method\":\"GET\"'\"relative_url\":\"oauth\\/access_token?grant_type=fb_extend_sso_token&access_token=" + ActiveSession.CurrentAccessTokenData.AccessToken + "\"}]"; " is 193.
Long Statement,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,CheckAndExtendTokenIfNeeded,The length of the statement  "                     // return an error?? Since this is token extension' maybe we should wait until the token is finally expired before throwing an error. " is 133.
Long Statement,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,PromptOAuthDialog,The length of the statement  "                throw new NotImplementedException("Following login behavior is not supported on Windows Phone: " + loginBehavior.ToString()); " is 125.
Long Statement,Facebook.Client.Controls,ScaleConverter,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\ScaleConverter.cs,Convert,The length of the statement  "            return System.Convert.ToDouble(value' CultureInfo.InvariantCulture) * System.Convert.ToDouble(parameter' CultureInfo.InvariantCulture); " is 135.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = "1"' Name = "Michael Alexander"' FirstName = "Michael"' LastName = "Alexander"' ProfilePictureUrl = profilePictureUrl }); " is 151.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Pilar Ackerman"' FirstName = "Pilar"' LastName = "Ackerman"' ProfilePictureUrl = profilePictureUrl }); " is 154.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Yan Li"' FirstName = "Yan"' LastName = "Li"' ProfilePictureUrl = profilePictureUrl }); " is 138.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Madeleine Kelly"' FirstName = "Madeleine"' LastName = "Kelly"' ProfilePictureUrl = profilePictureUrl }); " is 156.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Peter Connelly"' FirstName = "Peter"' LastName = "Connelly"' ProfilePictureUrl = profilePictureUrl }); " is 154.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Alicia Thornber"' FirstName = "Alicia"' LastName = "Thornber"' ProfilePictureUrl = profilePictureUrl }); " is 156.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Frank Martinez"' FirstName = "Frank"' LastName = "Martinez"' ProfilePictureUrl = profilePictureUrl }); " is 154.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Tina Makovec"' FirstName = "Tina"' LastName = "Makovec"' ProfilePictureUrl = profilePictureUrl }); " is 150.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Lisa Toftemark"' FirstName = "Lisa"' LastName = "Toftemark"' ProfilePictureUrl = profilePictureUrl }); " is 154.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Karen Toh"' FirstName = "Karen"' LastName = "Toh"' ProfilePictureUrl = profilePictureUrl }); " is 144.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Peter Villadsen"' FirstName = "Peter"' LastName = "Villadsen"' ProfilePictureUrl = profilePictureUrl }); " is 156.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Anna Misiec"' FirstName = "Anna"' LastName = "Misiec"' ProfilePictureUrl = profilePictureUrl }); " is 148.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Doris Krieger"' FirstName = "Doris"' LastName = "Krieger"' ProfilePictureUrl = profilePictureUrl }); " is 152.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Pat Coleman"' FirstName = "Pat"' LastName = "Coleman"' ProfilePictureUrl = profilePictureUrl }); " is 148.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Samantha Smith"' FirstName = "Samantha"' LastName = "Smith"' ProfilePictureUrl = profilePictureUrl }); " is 154.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Roman Stachnio"' FirstName = "Roman"' LastName = "Stachnio"' ProfilePictureUrl = profilePictureUrl }); " is 154.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Oliver Lee"' FirstName = "Oliver"' LastName = "Lee"' ProfilePictureUrl = profilePictureUrl }); " is 146.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Jacky Chan"' FirstName = "Jacky"' LastName = "Chan"' ProfilePictureUrl = profilePictureUrl }); " is 146.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Daniela Guaita"' FirstName = "Daniela"' LastName = "Guaita"' ProfilePictureUrl = profilePictureUrl }); " is 154.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Nina Vietzen"' FirstName = "Nina"' LastName = "Vietzen"' ProfilePictureUrl = profilePictureUrl }); " is 150.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Ray Mohrman"' FirstName = "Ray"' LastName = "Mohrman"' ProfilePictureUrl = profilePictureUrl }); " is 148.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Eduardo Melo"' FirstName = "Eduardo"' LastName = "Melo"' ProfilePictureUrl = profilePictureUrl }); " is 150.
Long Statement,Facebook.Client.Controls,FriendPickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\FriendPicker\FriendPickerDesignSupport.cs,LoadDesignData,The length of the statement  "            data.Add(new GraphUser { Id = string.Empty' Name = "Jesse Merriam"' FirstName = "Jesse"' LastName = "Merriam"' ProfilePictureUrl = profilePictureUrl }); " is 152.
Long Statement,Facebook.Client.Controls,LoginButton,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\LoginButton\LoginButton.cs,LoginButton_Loaded,The length of the statement  "            UpdateButtonCaption(Session.ActiveSession.CurrentAccessTokenData != null && !String.IsNullOrEmpty(Session.ActiveSession.CurrentAccessTokenData.AccessToken) ? LoginStatus.LoggedIn : LoginStatus.LoggedOut); ; " is 206.
Long Statement,Facebook.Client.Controls,LoginButton,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\LoginButton\LoginButton.cs,UpdateSession,The length of the statement  "            UpdateButtonCaption(Session.ActiveSession.CurrentAccessTokenData != null && !String.IsNullOrEmpty(Session.ActiveSession.CurrentAccessTokenData.AccessToken) ? LoginStatus.LoggedIn : LoginStatus.LoggedOut); ; " is 206.
Long Statement,Facebook.Client.Controls,LoginButton,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\LoginButton\LoginButton.cs,UpdateButtonCaption,The length of the statement  "            if (Session.ActiveSession.CurrentAccessTokenData != null && !String.IsNullOrEmpty(Session.ActiveSession.CurrentAccessTokenData.AccessToken)) " is 140.
Long Statement,Facebook.Client.Controls,LoginButton,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\LoginButton\LoginButton.cs,UpdateButtonCaption,The length of the statement  "            var caption = String.IsNullOrEmpty(Session.ActiveSession.CurrentAccessTokenData.AccessToken) ? AppResources.LoginButtonCaptionOpenSession : AppResources.LoginButtonCaptionCloseSession; " is 184.
Long Statement,Facebook.Client.Controls,PlacePicker,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\PlacePicker\PlacePicker.cs,OnTrackLocationPropertyChanged,The length of the statement  "            if ((placePicker.cancelGeopositionOperation != null) && (!placePicker.cancelGeopositionOperation.IsCancellationRequested)) " is 122.
Long Statement,Facebook.Client.Controls,PlacePicker,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\PlacePicker\PlacePicker.cs,LoadData,The length of the statement  "                var currentLocation = this.TrackLocation ? await this.GetCurrentLocation() : new LocationCoordinate(this.Latitude' this.Longitude); " is 131.
Long Statement,Facebook.Client.Controls,PlacePicker,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\PlacePicker\PlacePicker.cs,GetCurrentLocation,The length of the statement  "                var position = await this.geoLocator.GetGeopositionAsync(new TimeSpan(0' 1' 0)' new TimeSpan(0' 0' 0' 10)).AsTask(this.cancelGeopositionOperation.Token); " is 153.
Long Statement,Facebook.Client.Controls,PlacePickerDesignSupport,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\PlacePicker\PlacePickerDesignSupport.cs,LoadDesignData,The length of the statement  "            var blankProfilePictureUrl = string.Format(CultureInfo.InvariantCulture' "ms-appx:///{0}/Images/{1}"' libraryName' BlankProfilePictureSquare); " is 142.
Long Statement,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowAppRequestsDialog,The length of the statement  "            dialogWebBrowser.Navigate(new Uri(String.Format("https://facebook.com/dialog/apprequests?display=popup&app_id={0}&message={1}&redirect_uri=https://www.facebook.com/connect/login_success.html{2}&title={3}"' Session.AppId' message' idBuilder.Length > 4? idBuilder.ToString() : String.Empty' title)' UriKind.Absolute)); " is 316.
Long Statement,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowAppRequestsDialog,The length of the statement  "            dialogWebBrowser.Navigate(new Uri(String.Format("https://m.facebook.com/v2.1/dialog/apprequests?access_token={0}&redirect_uri=fb{2}%3A%2F%2Fsuccess&app_id={1}&message={3}&display=touch{4}&title={5}"' Session.ActiveSession.CurrentAccessTokenData.AccessToken' Session.AppId' Session.AppId' message' idBuilder.Length > 4 ? idBuilder.ToString() : String.Empty' title))); " is 366.
Long Statement,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowAppRequestsDialog,The length of the statement  "            dialogWebBrowser.Navigate(new Uri(String.Format("https://m.facebook.com/v2.1/dialog/apprequests?access_token={0}&redirect_uri=fbconnect%3A%2F%2Fsuccess&app_id={1}&message={2}&display=touch{3}&title={4}"' Session.ActiveSession.CurrentAccessTokenData.AccessToken' Session.AppId' message' idBuilder.Length > 4 ? idBuilder.ToString() : String.Empty' title))); " is 355.
Long Statement,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowAppRequestDialogViaBrowser,The length of the statement  "            Launcher.LaunchUriAsync(new Uri(String.Format("https://m.facebook.com/v2.1/dialog/apprequests?access_token={0}&redirect_uri={2}&app_id={1}&message={5}&display=touch{3}&title={4}&data={6}"' Session.ActiveSession.CurrentAccessTokenData.AccessToken' Session.AppId' Session.AppRequestRedirectUri' idBuilder.Length > 4 ? idBuilder.ToString() : String.Empty' title' message' data))); " is 377.
Long Statement,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowFeedDialogViaBrowser,The length of the statement  "            Launcher.LaunchUriAsync(new Uri(String.Format("https://m.facebook.com/v2.1/dialog/feed?access_token={0}&redirect_uri={2}&app_id={1}&display=touch&to={3}&link={4}&name={5}&caption={6}&description={7}&picture={8}"' Session.ActiveSession.CurrentAccessTokenData.AccessToken' Session.AppId' Session.FeedRedirectUri' toId' link' linkName' linkCaption' linkDescription' picture))); " is 374.
Long Statement,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowFeedDialog,The length of the statement  "            dialogWebBrowser.Navigate(new Uri(String.Format("https://facebook.com/dialog/feed?display=popup&app_id={0}&redirect_uri=https://www.facebook.com/connect/login_success.html&to={1}&link={2}&name={3}&caption={4}&description={5}&picture={6}"' Session.AppId' toId' link' linkName' linkCaption' linkDescription' picture)' UriKind.Absolute)); " is 335.
Long Statement,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowFeedDialog,The length of the statement  "            dialogWebBrowser.Navigate(new Uri(String.Format("https://m.facebook.com/v2.1/dialog/feed?access_token={0}&redirect_uri=fbconnect%3A%2F%2Fsuccess&app_id={1}&display=touch&to={2}&link={3}&name={4}&caption={5}&description={6}&picture={7}"' Session.ActiveSession.CurrentAccessTokenData.AccessToken' Session.AppId' toId' link' linkName' linkCaption' linkDescription' picture))); " is 373.
Long Statement,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowFeedDialog,The length of the statement  "            dialogWebBrowser.Navigate(new Uri(String.Format("https://m.facebook.com/v2.1/dialog/feed?access_token={0}&redirect_uri=fb{2}%3A%2F%2Fsuccess&app_id={1}&display=touch&to={3}&link={4}&name={5}&caption={6}&description={7}&picture={8}"' Session.ActiveSession.CurrentAccessTokenData.AccessToken' Session.AppId' Session.AppId' toId' link' linkName' linkCaption' linkDescription' picture))); " is 384.
Empty Catch Block,Facebook.Client,LifecycleHelper,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\LifecycleHelper.cs,FacebookAuthenticationReceived,The method has an empty catch block.
Empty Catch Block,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,dialogWebBrowser_NavigationStarting,The method has an empty catch block.
Magic Number,Facebook.Client,FacebookUriMapper,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\FacebookUriMapper.cs,MapUri,The following statement contains a magic number: if (uriType == FacebookUriType.Login)              {                  try                  {                      AccessTokenData session = new AccessTokenData();                      session.ParseQueryString(WebUtility.UrlDecode(uri.ToString()));                      if (!String.IsNullOrEmpty(session.AccessToken))                      {                          session.AppId = Session.AppId;                          Session.ActiveSession.CurrentAccessTokenData = session;                            // trigger the event handler with the session                          if (Session.OnFacebookAuthenticationFinished != null)                          {                              Session.OnFacebookAuthenticationFinished(session);                          }                            if (Session.OnSessionStateChanged != null)                          {                              Session.OnSessionStateChanged(LoginStatus.LoggedIn);                          }                      }                  }                  catch (Facebook.FacebookOAuthException exc)                  {                      // fire the authentication finished handler with the exception                       if (Session.OnFacebookAuthenticationFinished != null)                      {                          Session.OnFacebookAuthenticationFinished(null);                      }                  }              }              else if (uriType == FacebookUriType.AppRequest)              {                  // parsing query string to get request id and facebook ids of the people the request has been sent to                  // or error code and error messages                  FBResult fbResult = new FBResult();                    try                  {                      fbResult.Json = new JsonObject();    #if WP8                      string queryString = GetQueryStringFromUri(HttpUtility.UrlDecode(tempUri));  #else                      string queryString = GetQueryStringFromUri("/Protocol?encodedLaunchUri=" + WebUtility.UrlDecode(tempUri));  #endif                        string[] queries = queryString.Split('&');                      if (queries.Length > 0)                      {                          string request = string.Empty;                          List<string> toList = new List<string>();                            foreach (string query in queries)                          {                              string[] keyValue = query.Split('=');                              if (keyValue.Length >= 2)                              {                                  if (keyValue[0].Contains("request"))                                      request = keyValue[1];                                  else if (keyValue[0].Contains("to"))                                      toList.Add(keyValue[1]);                                  else if (keyValue[0].Contains("error_code"))                                      fbResult.Error = keyValue[1];                                  else if (keyValue[0].Contains("error_message"))                                      fbResult.Text = keyValue[1].Replace('+'' ' ');                              }                          }                          if (!string.IsNullOrWhiteSpace(request))                          {                              fbResult.Json.Add(new KeyValuePair<string' object>("request"' request));                              fbResult.Json.Add(new KeyValuePair<string' object>("to"' toList));                          }                            // If there's no error' assign the success text                          if (string.IsNullOrWhiteSpace(fbResult.Text))                              fbResult.Text = "Success";                      }                  }                  catch                  {                      fbResult.Error = "Failure";                      fbResult.Text = "AppRequest cancelled or ended with exceptional state";                  }                    // trigger the event handler with the session                  if (Session.OnFacebookAppRequestFinished != null)                  {                      Session.OnFacebookAppRequestFinished(fbResult);                  }              }              else if (uriType == FacebookUriType.Feed)              {                  // parsing query string to get request id and facebook ids of the people the request has been sent to                  // or error code and error messages                  FBResult fbResult = new FBResult();                    try                  {                      // parsing query string to get request id and facebook ids of the people the request has been sent to                      // or error code and error messages                      fbResult.Json = new JsonObject();    #if WP8                      string queryString = GetQueryStringFromUri(HttpUtility.UrlDecode(tempUri));  #else                      string queryString = GetQueryStringFromUri("/Protocol?encodedLaunchUri=" + WebUtility.UrlDecode(tempUri));  #endif                        string[] queries = queryString.Split('&');                      if (queries.Length > 0)                      {                          string postId = string.Empty;                          List<string> toList = new List<string>();                            foreach (string query in queries)                          {                              string[] keyValue = query.Split('=');                              if (keyValue.Length >= 2)                              {                                  if (keyValue[0].Contains("post_id"))                                      postId = keyValue[1];                                  else if (keyValue[0].Contains("error_code"))                                      fbResult.Error = keyValue[1];                                  else if (keyValue[0].Contains("error_msg"))                                      fbResult.Text = keyValue[1].Replace('+'' ' ');                              }                          }                          if (!string.IsNullOrWhiteSpace(postId))                          {                              fbResult.Json.Add(new KeyValuePair<string' object>("post_id"' postId));                          }                      }                        // If there's no error' assign the success text                      if (string.IsNullOrWhiteSpace(fbResult.Text))                          fbResult.Text = "Success";                    }                  catch                  {                      fbResult.Error = "Failure";                      fbResult.Text = "Feed cancelled or ended with exceptional state";                  }                    // trigger the event handler with the session                  if (Session.OnFacebookFeedFinished != null)                  {                      Session.OnFacebookFeedFinished(fbResult);                  }              }
Magic Number,Facebook.Client,FacebookUriMapper,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\FacebookUriMapper.cs,MapUri,The following statement contains a magic number: if (uriType == FacebookUriType.Login)              {                  try                  {                      AccessTokenData session = new AccessTokenData();                      session.ParseQueryString(WebUtility.UrlDecode(uri.ToString()));                      if (!String.IsNullOrEmpty(session.AccessToken))                      {                          session.AppId = Session.AppId;                          Session.ActiveSession.CurrentAccessTokenData = session;                            // trigger the event handler with the session                          if (Session.OnFacebookAuthenticationFinished != null)                          {                              Session.OnFacebookAuthenticationFinished(session);                          }                            if (Session.OnSessionStateChanged != null)                          {                              Session.OnSessionStateChanged(LoginStatus.LoggedIn);                          }                      }                  }                  catch (Facebook.FacebookOAuthException exc)                  {                      // fire the authentication finished handler with the exception                       if (Session.OnFacebookAuthenticationFinished != null)                      {                          Session.OnFacebookAuthenticationFinished(null);                      }                  }              }              else if (uriType == FacebookUriType.AppRequest)              {                  // parsing query string to get request id and facebook ids of the people the request has been sent to                  // or error code and error messages                  FBResult fbResult = new FBResult();                    try                  {                      fbResult.Json = new JsonObject();    #if WP8                      string queryString = GetQueryStringFromUri(HttpUtility.UrlDecode(tempUri));  #else                      string queryString = GetQueryStringFromUri("/Protocol?encodedLaunchUri=" + WebUtility.UrlDecode(tempUri));  #endif                        string[] queries = queryString.Split('&');                      if (queries.Length > 0)                      {                          string request = string.Empty;                          List<string> toList = new List<string>();                            foreach (string query in queries)                          {                              string[] keyValue = query.Split('=');                              if (keyValue.Length >= 2)                              {                                  if (keyValue[0].Contains("request"))                                      request = keyValue[1];                                  else if (keyValue[0].Contains("to"))                                      toList.Add(keyValue[1]);                                  else if (keyValue[0].Contains("error_code"))                                      fbResult.Error = keyValue[1];                                  else if (keyValue[0].Contains("error_message"))                                      fbResult.Text = keyValue[1].Replace('+'' ' ');                              }                          }                          if (!string.IsNullOrWhiteSpace(request))                          {                              fbResult.Json.Add(new KeyValuePair<string' object>("request"' request));                              fbResult.Json.Add(new KeyValuePair<string' object>("to"' toList));                          }                            // If there's no error' assign the success text                          if (string.IsNullOrWhiteSpace(fbResult.Text))                              fbResult.Text = "Success";                      }                  }                  catch                  {                      fbResult.Error = "Failure";                      fbResult.Text = "AppRequest cancelled or ended with exceptional state";                  }                    // trigger the event handler with the session                  if (Session.OnFacebookAppRequestFinished != null)                  {                      Session.OnFacebookAppRequestFinished(fbResult);                  }              }              else if (uriType == FacebookUriType.Feed)              {                  // parsing query string to get request id and facebook ids of the people the request has been sent to                  // or error code and error messages                  FBResult fbResult = new FBResult();                    try                  {                      // parsing query string to get request id and facebook ids of the people the request has been sent to                      // or error code and error messages                      fbResult.Json = new JsonObject();    #if WP8                      string queryString = GetQueryStringFromUri(HttpUtility.UrlDecode(tempUri));  #else                      string queryString = GetQueryStringFromUri("/Protocol?encodedLaunchUri=" + WebUtility.UrlDecode(tempUri));  #endif                        string[] queries = queryString.Split('&');                      if (queries.Length > 0)                      {                          string postId = string.Empty;                          List<string> toList = new List<string>();                            foreach (string query in queries)                          {                              string[] keyValue = query.Split('=');                              if (keyValue.Length >= 2)                              {                                  if (keyValue[0].Contains("post_id"))                                      postId = keyValue[1];                                  else if (keyValue[0].Contains("error_code"))                                      fbResult.Error = keyValue[1];                                  else if (keyValue[0].Contains("error_msg"))                                      fbResult.Text = keyValue[1].Replace('+'' ' ');                              }                          }                          if (!string.IsNullOrWhiteSpace(postId))                          {                              fbResult.Json.Add(new KeyValuePair<string' object>("post_id"' postId));                          }                      }                        // If there's no error' assign the success text                      if (string.IsNullOrWhiteSpace(fbResult.Text))                          fbResult.Text = "Success";                    }                  catch                  {                      fbResult.Error = "Failure";                      fbResult.Text = "Feed cancelled or ended with exceptional state";                  }                    // trigger the event handler with the session                  if (Session.OnFacebookFeedFinished != null)                  {                      Session.OnFacebookFeedFinished(fbResult);                  }              }
Magic Number,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,ShowAppRequestsDialog,The following statement contains a magic number: dialogPopup.VerticalOffset = 40;
Magic Number,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,ShowAppRequestsDialog,The following statement contains a magic number: dialogPopup.Height = Window.Current.Bounds.Height - 40;
Magic Number,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,ShowFeedDialog,The following statement contains a magic number: dialogPopup.VerticalOffset = 40;
Magic Number,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,ShowFeedDialog,The following statement contains a magic number: dialogPopup.Height = Window.Current.Bounds.Height - 40;
Magic Number,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,CheckAndExtendTokenIfNeeded,The following statement contains a magic number: if (DateTime.UtcNow - ActiveSession.CurrentAccessTokenData.Issued > TimeSpan.FromHours(24)) // one day               {                  var client = new HttpClient();                  String tokenExtendUri = "https://graph.facebook.com/v2.1";                  client.BaseAddress = new Uri(tokenExtendUri);                    var request = new HttpRequestMessage();                    var mfdc = new MultipartFormDataContent();                  var _appId = Session.AppId;                    mfdc.Add(new StringContent(_appId)' name: "batch_app_id");                    String extensionString = "[{\"method\":\"GET\"'\"relative_url\":\"oauth\\/access_token?grant_type=fb_extend_sso_token&access_token=" + ActiveSession.CurrentAccessTokenData.AccessToken + "\"}]";                  mfdc.Add(new StringContent(extensionString)' name: "batch");                    HttpResponseMessage response = await client.PostAsync(tokenExtendUri' mfdc);                  String resultContent = await response.Content.ReadAsStringAsync();                    var result = SimpleJson.DeserializeObject(resultContent);                    // extract the access token and save it in the session                  var data = (List<object>)result;                    var dictionary = (IDictionary<string' object>)data[0];                  var code = (long)dictionary["code"];                  if (code == 200)                  {                      // the API succeeded                      var body = (IDictionary<string' object>) SimpleJson.DeserializeObject((string) dictionary["body"]);                      var access_token = (string) body["access_token"];                      var expires_at = (long) body["expires_at"];                        var accessTokenData = new AccessTokenData();                      // token extension failed...                      accessTokenData.AccessToken = access_token;                        // parse out other types                      long expiresInValue;                      var now = DateTime.UtcNow;                      accessTokenData.Expires = now + TimeSpan.FromSeconds(expires_at);                      accessTokenData.Issued = now - (TimeSpan.FromDays(60) - TimeSpan.FromSeconds(expires_at));                      accessTokenData.AppId = _appId;                        // Assign the accessTokenData object over' this saves it to the disk as well.                      ActiveSession.CurrentAccessTokenData = accessTokenData;                  }                  else                  {                       // return an error?? Since this is token extension' maybe we should wait until the token is finally expired before throwing an error.                  }              }
Magic Number,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,CheckAndExtendTokenIfNeeded,The following statement contains a magic number: if (DateTime.UtcNow - ActiveSession.CurrentAccessTokenData.Issued > TimeSpan.FromHours(24)) // one day               {                  var client = new HttpClient();                  String tokenExtendUri = "https://graph.facebook.com/v2.1";                  client.BaseAddress = new Uri(tokenExtendUri);                    var request = new HttpRequestMessage();                    var mfdc = new MultipartFormDataContent();                  var _appId = Session.AppId;                    mfdc.Add(new StringContent(_appId)' name: "batch_app_id");                    String extensionString = "[{\"method\":\"GET\"'\"relative_url\":\"oauth\\/access_token?grant_type=fb_extend_sso_token&access_token=" + ActiveSession.CurrentAccessTokenData.AccessToken + "\"}]";                  mfdc.Add(new StringContent(extensionString)' name: "batch");                    HttpResponseMessage response = await client.PostAsync(tokenExtendUri' mfdc);                  String resultContent = await response.Content.ReadAsStringAsync();                    var result = SimpleJson.DeserializeObject(resultContent);                    // extract the access token and save it in the session                  var data = (List<object>)result;                    var dictionary = (IDictionary<string' object>)data[0];                  var code = (long)dictionary["code"];                  if (code == 200)                  {                      // the API succeeded                      var body = (IDictionary<string' object>) SimpleJson.DeserializeObject((string) dictionary["body"]);                      var access_token = (string) body["access_token"];                      var expires_at = (long) body["expires_at"];                        var accessTokenData = new AccessTokenData();                      // token extension failed...                      accessTokenData.AccessToken = access_token;                        // parse out other types                      long expiresInValue;                      var now = DateTime.UtcNow;                      accessTokenData.Expires = now + TimeSpan.FromSeconds(expires_at);                      accessTokenData.Issued = now - (TimeSpan.FromDays(60) - TimeSpan.FromSeconds(expires_at));                      accessTokenData.AppId = _appId;                        // Assign the accessTokenData object over' this saves it to the disk as well.                      ActiveSession.CurrentAccessTokenData = accessTokenData;                  }                  else                  {                       // return an error?? Since this is token extension' maybe we should wait until the token is finally expired before throwing an error.                  }              }
Magic Number,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,CheckAndExtendTokenIfNeeded,The following statement contains a magic number: if (DateTime.UtcNow - ActiveSession.CurrentAccessTokenData.Issued > TimeSpan.FromHours(24)) // one day               {                  var client = new HttpClient();                  String tokenExtendUri = "https://graph.facebook.com/v2.1";                  client.BaseAddress = new Uri(tokenExtendUri);                    var request = new HttpRequestMessage();                    var mfdc = new MultipartFormDataContent();                  var _appId = Session.AppId;                    mfdc.Add(new StringContent(_appId)' name: "batch_app_id");                    String extensionString = "[{\"method\":\"GET\"'\"relative_url\":\"oauth\\/access_token?grant_type=fb_extend_sso_token&access_token=" + ActiveSession.CurrentAccessTokenData.AccessToken + "\"}]";                  mfdc.Add(new StringContent(extensionString)' name: "batch");                    HttpResponseMessage response = await client.PostAsync(tokenExtendUri' mfdc);                  String resultContent = await response.Content.ReadAsStringAsync();                    var result = SimpleJson.DeserializeObject(resultContent);                    // extract the access token and save it in the session                  var data = (List<object>)result;                    var dictionary = (IDictionary<string' object>)data[0];                  var code = (long)dictionary["code"];                  if (code == 200)                  {                      // the API succeeded                      var body = (IDictionary<string' object>) SimpleJson.DeserializeObject((string) dictionary["body"]);                      var access_token = (string) body["access_token"];                      var expires_at = (long) body["expires_at"];                        var accessTokenData = new AccessTokenData();                      // token extension failed...                      accessTokenData.AccessToken = access_token;                        // parse out other types                      long expiresInValue;                      var now = DateTime.UtcNow;                      accessTokenData.Expires = now + TimeSpan.FromSeconds(expires_at);                      accessTokenData.Issued = now - (TimeSpan.FromDays(60) - TimeSpan.FromSeconds(expires_at));                      accessTokenData.AppId = _appId;                        // Assign the accessTokenData object over' this saves it to the disk as well.                      ActiveSession.CurrentAccessTokenData = accessTokenData;                  }                  else                  {                       // return an error?? Since this is token extension' maybe we should wait until the token is finally expired before throwing an error.                  }              }
Magic Number,Facebook.Client,WebviewAuthentication,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\WebviewAuthentication.cs,AuthenticateAsync,The following statement contains a magic number: dialogPopup.VerticalOffset = 40;
Magic Number,Facebook.Client,WebviewAuthentication,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\WebviewAuthentication.cs,AuthenticateAsync,The following statement contains a magic number: dialogPopup.Height = Window.Current.Bounds.Height - 40;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: var red = rgbColor.R / 255.0;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: var green = rgbColor.G / 255.0;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: var blue = rgbColor.B / 255.0;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: var alpha = rgbColor.A / 255.0;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: hlsColor.L = (minVal + maxVal) / 2.0;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: hlsColor.S = delta / ((hlsColor.L < 0.5) ? (maxVal + minVal) : (2.0 - maxVal - minVal));
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: hlsColor.S = delta / ((hlsColor.L < 0.5) ? (maxVal + minVal) : (2.0 - maxVal - minVal));
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: if (green == maxVal) hlsColor.H = 2.0 + ((blue - red) / delta);
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: if (blue == maxVal) hlsColor.H = 4.0 + ((red - green) / delta);
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: hlsColor.H *= 60;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,FromRgb,The following statement contains a magic number: if (hlsColor.H < 0) hlsColor.H += 360;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: if (this.S == 0)              {                  rgbColor.R = (byte)(this.L * 255);                  rgbColor.G = (byte)(this.L * 255);                  rgbColor.B = (byte)(this.L * 255);                  rgbColor.A = (byte)(this.A * 255);                  return rgbColor;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: if (this.S == 0)              {                  rgbColor.R = (byte)(this.L * 255);                  rgbColor.G = (byte)(this.L * 255);                  rgbColor.B = (byte)(this.L * 255);                  rgbColor.A = (byte)(this.A * 255);                  return rgbColor;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: if (this.S == 0)              {                  rgbColor.R = (byte)(this.L * 255);                  rgbColor.G = (byte)(this.L * 255);                  rgbColor.B = (byte)(this.L * 255);                  rgbColor.A = (byte)(this.A * 255);                  return rgbColor;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: if (this.S == 0)              {                  rgbColor.R = (byte)(this.L * 255);                  rgbColor.G = (byte)(this.L * 255);                  rgbColor.B = (byte)(this.L * 255);                  rgbColor.A = (byte)(this.A * 255);                  return rgbColor;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: if (this.L < 0.5)              {                  t1 = this.L * (1.0 + this.S);              }              else              {                  t1 = this.L + this.S - (this.L * this.S);              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: var t2 = (2.0 * this.L) - t1;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: var h = this.H / 360;
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: var tR = h + (1.0 / 3.0);
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: var tB = h - (1.0 / 3.0);
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: rgbColor.R = (byte)(r * 255);
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: rgbColor.G = (byte)(g * 255);
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: rgbColor.B = (byte)(b * 255);
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,ToRgb,The following statement contains a magic number: rgbColor.A = (byte)(this.A * 255);
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,TransformColor,The following statement contains a magic number: if (6.0 * t3 < 1)              {                  color = t2 + ((t1 - t2) * 6.0 * t3);              }              else if (2.0 * t3 < 1)              {                  color = t1;              }              else if (3.0 * t3 < 2)              {                  color = t2 + ((t1 - t2) * ((2.0 / 3.0) - t3) * 6.0);              }              else              {                  color = t2;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,TransformColor,The following statement contains a magic number: if (6.0 * t3 < 1)              {                  color = t2 + ((t1 - t2) * 6.0 * t3);              }              else if (2.0 * t3 < 1)              {                  color = t1;              }              else if (3.0 * t3 < 2)              {                  color = t2 + ((t1 - t2) * ((2.0 / 3.0) - t3) * 6.0);              }              else              {                  color = t2;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,TransformColor,The following statement contains a magic number: if (6.0 * t3 < 1)              {                  color = t2 + ((t1 - t2) * 6.0 * t3);              }              else if (2.0 * t3 < 1)              {                  color = t1;              }              else if (3.0 * t3 < 2)              {                  color = t2 + ((t1 - t2) * ((2.0 / 3.0) - t3) * 6.0);              }              else              {                  color = t2;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,TransformColor,The following statement contains a magic number: if (6.0 * t3 < 1)              {                  color = t2 + ((t1 - t2) * 6.0 * t3);              }              else if (2.0 * t3 < 1)              {                  color = t1;              }              else if (3.0 * t3 < 2)              {                  color = t2 + ((t1 - t2) * ((2.0 / 3.0) - t3) * 6.0);              }              else              {                  color = t2;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,TransformColor,The following statement contains a magic number: if (6.0 * t3 < 1)              {                  color = t2 + ((t1 - t2) * 6.0 * t3);              }              else if (2.0 * t3 < 1)              {                  color = t1;              }              else if (3.0 * t3 < 2)              {                  color = t2 + ((t1 - t2) * ((2.0 / 3.0) - t3) * 6.0);              }              else              {                  color = t2;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,TransformColor,The following statement contains a magic number: if (6.0 * t3 < 1)              {                  color = t2 + ((t1 - t2) * 6.0 * t3);              }              else if (2.0 * t3 < 1)              {                  color = t1;              }              else if (3.0 * t3 < 2)              {                  color = t2 + ((t1 - t2) * ((2.0 / 3.0) - t3) * 6.0);              }              else              {                  color = t2;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,TransformColor,The following statement contains a magic number: if (6.0 * t3 < 1)              {                  color = t2 + ((t1 - t2) * 6.0 * t3);              }              else if (2.0 * t3 < 1)              {                  color = t1;              }              else if (3.0 * t3 < 2)              {                  color = t2 + ((t1 - t2) * ((2.0 / 3.0) - t3) * 6.0);              }              else              {                  color = t2;              }
Magic Number,Facebook.Client.Controls,HlsColor,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\Converters\HlsColor.cs,TransformColor,The following statement contains a magic number: if (6.0 * t3 < 1)              {                  color = t2 + ((t1 - t2) * 6.0 * t3);              }              else if (2.0 * t3 < 1)              {                  color = t1;              }              else if (3.0 * t3 < 2)              {                  color = t2 + ((t1 - t2) * ((2.0 / 3.0) - t3) * 6.0);              }              else              {                  color = t2;              }
Magic Number,Facebook.Client.Controls,PlacePicker,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\PlacePicker\PlacePicker.cs,GetCurrentLocation,The following statement contains a magic number: try              {                  if ((this.cancelGeopositionOperation != null) && (!this.cancelGeopositionOperation.IsCancellationRequested))                  {                      this.cancelGeopositionOperation.Cancel();                  }                    this.cancelGeopositionOperation = new CancellationTokenSource(3000);                  var position = await this.geoLocator.GetGeopositionAsync(new TimeSpan(0' 1' 0)' new TimeSpan(0' 0' 0' 10)).AsTask(this.cancelGeopositionOperation.Token);                  return new LocationCoordinate(position.Coordinate.Latitude' position.Coordinate.Longitude);              }              catch (System.UnauthorizedAccessException)              {                  this.OnLoadFailed(new LoadFailedEventArgs("Error retrieving current location."' "Location is disabled."));              }              catch (TaskCanceledException)              {                  this.OnLoadFailed(new LoadFailedEventArgs("Error retrieving current location."' "Task was cancelled."));              }              catch (Exception ex)              {                  this.OnLoadFailed(new LoadFailedEventArgs("Error retrieving current location."' ex.Message));              }              finally              {                  this.cancelGeopositionOperation = null;              }
Magic Number,Facebook.Client.Controls,PlacePicker,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\PlacePicker\PlacePicker.cs,GetCurrentLocation,The following statement contains a magic number: try              {                  if ((this.cancelGeopositionOperation != null) && (!this.cancelGeopositionOperation.IsCancellationRequested))                  {                      this.cancelGeopositionOperation.Cancel();                  }                    this.cancelGeopositionOperation = new CancellationTokenSource(3000);                  var position = await this.geoLocator.GetGeopositionAsync(new TimeSpan(0' 1' 0)' new TimeSpan(0' 0' 0' 10)).AsTask(this.cancelGeopositionOperation.Token);                  return new LocationCoordinate(position.Coordinate.Latitude' position.Coordinate.Longitude);              }              catch (System.UnauthorizedAccessException)              {                  this.OnLoadFailed(new LoadFailedEventArgs("Error retrieving current location."' "Location is disabled."));              }              catch (TaskCanceledException)              {                  this.OnLoadFailed(new LoadFailedEventArgs("Error retrieving current location."' "Task was cancelled."));              }              catch (Exception ex)              {                  this.OnLoadFailed(new LoadFailedEventArgs("Error retrieving current location."' ex.Message));              }              finally              {                  this.cancelGeopositionOperation = null;              }
Magic Number,Facebook.Client.Controls,SizeToGridCellConverter,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Universal\Controls\Converters\SizeToGridCellConverter.cs,Convert,The following statement contains a magic number: if (bool.Parse((string)parameter))              {                  var width = ((int)(control.ActualWidth / numColumns)) - 10;                  return Math.Max(width' MinimumWidth);              }              else              {                  var height = ((int)(control.ActualHeight / numRows)) - 10;                  return Math.Max(height' MinimumHeight);              }
Magic Number,Facebook.Client.Controls,SizeToGridCellConverter,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Universal\Controls\Converters\SizeToGridCellConverter.cs,Convert,The following statement contains a magic number: if (bool.Parse((string)parameter))              {                  var width = ((int)(control.ActualWidth / numColumns)) - 10;                  return Math.Max(width' MinimumWidth);              }              else              {                  var height = ((int)(control.ActualHeight / numRows)) - 10;                  return Math.Max(height' MinimumHeight);              }
Magic Number,Facebook.Client.Controls,SortedLocaleGrouping,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Universal\Controls\FriendPicker\SortedLocaleGrouping.cs,SortedLocaleGrouping,The following statement contains a magic number: this.groupDisplayNames = Enumerable.Range('a'' 26).Select(c => ((char)c).ToString()).ToList();
Magic Number,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowAppRequestsDialog,The following statement contains a magic number: dialogWebBrowser.Navigate(new Uri(String.Format("https://m.facebook.com/v2.1/dialog/apprequests?access_token={0}&redirect_uri=fb{2}%3A%2F%2Fsuccess&app_id={1}&message={3}&display=touch{4}&title={5}"' Session.ActiveSession.CurrentAccessTokenData.AccessToken' Session.AppId' Session.AppId' message' idBuilder.Length > 4 ? idBuilder.ToString() : String.Empty' title)));
Magic Number,Facebook.Client.Controls.WebDialog,WebDialogUserControl,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Controls\WebDialog\WebDialogUserControl.xaml.cs,ShowAppRequestDialogViaBrowser,The following statement contains a magic number: Launcher.LaunchUriAsync(new Uri(String.Format("https://m.facebook.com/v2.1/dialog/apprequests?access_token={0}&redirect_uri={2}&app_id={1}&message={5}&display=touch{3}&title={4}&data={6}"' Session.ActiveSession.CurrentAccessTokenData.AccessToken' Session.AppId' Session.AppRequestRedirectUri' idBuilder.Length > 4 ? idBuilder.ToString() : String.Empty' title' message' data)));
Missing Default,Facebook.Client,Session,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Session.cs,LoginWithBehavior,The following switch statement is missing a default case: switch (behavior)              {                  case FacebookLoginBehavior.LoginBehaviorMobileInternetExplorerOnly:                  {  #if (WP8 || WINDOWS_PHONE)                        String appId = Session.AppId;                      Uri uri =                          new Uri(                              String.Format(                                  "https://m.facebook.com/v2.1/dialog/oauth?redirect_uri={0}&display=touch&state=%7B%220is_active_session%22%3A1%2C%22is_open_session%22%3A1%2C%22com.facebook.sdk_client_state%22%3A1%2C%223_method%22%3A%22browser_auth%22%7D&scope={2}&type=user_agent&client_id={1}&sdk=ios"'                                  LoginRedirectUri' appId' permissions)' UriKind.Absolute);                                            Launcher.LaunchUriAsync(uri);                      break;                    #else                      throw new NotImplementedException("Internet explorer based login is not available on Windows");  #endif                  }                  case FacebookLoginBehavior.LoginBehaviorWebViewOnly:                  {                      String appId = Session.AppId;    #if WP8 || WINDOWS_PHONE                      Uri uri =                          new Uri(                              String.Format(                                  "https://m.facebook.com/v2.1/dialog/oauth?redirect_uri={0}%3A%2F%2Fauthorize&display=touch&state=%7B%220is_active_session%22%3A1%2C%22is_open_session%22%3A1%2C%22com.facebook.sdk_client_state%22%3A1%2C%223_method%22%3A%22browser_auth%22%7D&scope={2}&type=user_agent&client_id={1}&sdk=ios"'                                  String.Format("fb{0}"' appId)' appId' permissions)' UriKind.Absolute);  #else                      Uri uri = await GetLoginUrl(permissions);    #endif                      WebviewAuthentication.AuthenticateAsync(WebAuthenticationOptions.None' uri' null);                      break;                  }                  case FacebookLoginBehavior.LoginBehaviorWebAuthenticationBroker:  #if WINDOWS                  {                      try                      {                          // TODO: What to do here? LoginAsync returns inproc. Login with IE returns out of proc?                          var result = await LoginAsync(permissions' FacebookLoginBehavior.LoginBehaviorWebAuthenticationBroker);                          // when the results are available' launch the event handler                          if (OnFacebookAuthenticationFinished != null)                          {                              OnFacebookAuthenticationFinished(result);                          }                            if (OnSessionStateChanged != null)                          {                              OnSessionStateChanged(LoginStatus.LoggedIn);                          }                      }                      catch (FacebookOAuthException e)                      {                          if (OnSessionStateChanged != null)                          {                              OnSessionStateChanged(LoginStatus.LoggedOut);                          }                      }                        break;                  }  #else                  {                      throw new NotImplementedException("WebviewAuthentication is not implemented on Windows Phone");                  }  #endif// WINDOWS                    case FacebookLoginBehavior.LoginBehaviorApplicationOnly:                  {  #if WP8 || WINDOWS_PHONE                        LoginWithApp(permissions);                      break;                    #else                      throw new NotImplementedException("Login via app is not available on Windows");  #endif                  }              }
Missing Default,Facebook.Client.Controls,FriendPicker,C:\repos\facebook-csharp-sdk_facebook-winclient-sdk\Source\Facebook.Client\Universal\Controls\FriendPicker\FriendPicker.cs,FormatDisplayName,The following switch statement is missing a default case: switch (displayOrder)                  {                      case FriendPickerDisplayOrder.DisplayFirstNameFirst:                          return user.FirstName + (hasFirstNameAndLastName ? " " : null) + user.LastName;                      case FriendPickerDisplayOrder.DisplayLastNameFirst:                          return user.LastName + (hasFirstNameAndLastName ? "' " : null) + user.FirstName;                  }
