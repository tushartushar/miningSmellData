Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,Cyclomatic complexity of the method is 8
Empty Catch Block,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The method has an empty catch block.
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: foreach (var bin in bins) {  	facadedata bldgdata = new facadedata ();  	//http://a810-bisweb.nyc.gov/bisweb/FacadeStatusInformationServlet?allisn=0000024332&allbin=1016880&requestid=2  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1016880";  	//string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=1009012";  	string url = "http://a810-bisweb.nyc.gov/bisweb/FacadesByLocationServlet?requestid=1&allbin=" + bin;  	//System.Net.WebRequest request = System.Net.WebRequest.Create(url);  	//System.Net.WebResponse myresponse = request.GetResponse();  	// Open data stream:  	//System.IO.Stream _WebStream = myresponse.GetResponseStream();  	//string path = @"C:\Temp\streetview";  	//var result = new System.Net.WebClient().DownloadData(url);  	string astringHTML = string.Empty;  	try {  		astringHTML = new System.Net.WebClient ().DownloadString (url);  	}  	catch (Exception) {  		// throw; // do nothing  	}  	if (astringHTML != string.Empty) {  		string[] splitone =  {  			"ErrorMsg :: "  		};  		string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  		if (words [1].StartsWith ("\n"))// there is data available keep contunie  		 {  			string[] splittwo =  {  				"[0:FCycle]{"  			};  			string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  			for (int i = 1; i < wordscycles.ToList ().Count; i++) {  				//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  				string[] splitfour =  {  					"}\n"'  					"[1:FControlNumber]{"'  					"[2:FHouseNumber]{"'  					"[3:FStreetName]{"'  					"[5:FCurrentStatus]{"'  					"[6:FBin]{"'  					"[7:FNumStories]{"'  					"[8:FInitFileDate]{"'  					"[9:FaIsn]{"  				};  				string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  				if (wordsinfo [11] == bin) {  					cycle acycle = new cycle ();  					acycle.FCycle = wordsinfo [0];  					acycle.FCtrlNum = wordsinfo [2];  					bldgdata.Num = wordsinfo [4];  					bldgdata.Strt = wordsinfo [6];  					acycle.FCurStat = wordsinfo [9];  					bldgdata.BIN = wordsinfo [11];  					bldgdata.NumStory = wordsinfo [13];  					acycle.FInitDate = wordsinfo [15];  					acycle.FaISN = wordsinfo [17];  					bldgdata.Cycles.Add (acycle);  				}  			}  			//populate zipcode and borough  			string[] splitfive =  {  				"\nNmBoro :: "'  				"\nVlBin :: "'  				"\nVlNumZip :: "'  				"\nVlTaxBlock :: "  			};  			string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  			bldgdata.Boro = wordsthree [1];  			bldgdata.Zip = wordsthree [3];  			if (bldgdata.Cycles.Count > 0) {  				scrapeddata.Add (bldgdata);  			}  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (astringHTML != string.Empty) {  	string[] splitone =  {  		"ErrorMsg :: "  	};  	string[] words = astringHTML.Split (splitone' StringSplitOptions.None);  	if (words [1].StartsWith ("\n"))// there is data available keep contunie  	 {  		string[] splittwo =  {  			"[0:FCycle]{"  		};  		string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  		for (int i = 1; i < wordscycles.ToList ().Count; i++) {  			//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  			string[] splitfour =  {  				"}\n"'  				"[1:FControlNumber]{"'  				"[2:FHouseNumber]{"'  				"[3:FStreetName]{"'  				"[5:FCurrentStatus]{"'  				"[6:FBin]{"'  				"[7:FNumStories]{"'  				"[8:FInitFileDate]{"'  				"[9:FaIsn]{"  			};  			string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  			if (wordsinfo [11] == bin) {  				cycle acycle = new cycle ();  				acycle.FCycle = wordsinfo [0];  				acycle.FCtrlNum = wordsinfo [2];  				bldgdata.Num = wordsinfo [4];  				bldgdata.Strt = wordsinfo [6];  				acycle.FCurStat = wordsinfo [9];  				bldgdata.BIN = wordsinfo [11];  				bldgdata.NumStory = wordsinfo [13];  				acycle.FInitDate = wordsinfo [15];  				acycle.FaISN = wordsinfo [17];  				bldgdata.Cycles.Add (acycle);  			}  		}  		//populate zipcode and borough  		string[] splitfive =  {  			"\nNmBoro :: "'  			"\nVlBin :: "'  			"\nVlNumZip :: "'  			"\nVlTaxBlock :: "  		};  		string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  		bldgdata.Boro = wordsthree [1];  		bldgdata.Zip = wordsthree [3];  		if (bldgdata.Cycles.Count > 0) {  			scrapeddata.Add (bldgdata);  		}  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (words [1].StartsWith ("\n"))// there is data available keep contunie   {  	string[] splittwo =  {  		"[0:FCycle]{"  	};  	string[] wordscycles = astringHTML.Split (splittwo' StringSplitOptions.None);  	for (int i = 1; i < wordscycles.ToList ().Count; i++) {  		//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  		string[] splitfour =  {  			"}\n"'  			"[1:FControlNumber]{"'  			"[2:FHouseNumber]{"'  			"[3:FStreetName]{"'  			"[5:FCurrentStatus]{"'  			"[6:FBin]{"'  			"[7:FNumStories]{"'  			"[8:FInitFileDate]{"'  			"[9:FaIsn]{"  		};  		string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  		if (wordsinfo [11] == bin) {  			cycle acycle = new cycle ();  			acycle.FCycle = wordsinfo [0];  			acycle.FCtrlNum = wordsinfo [2];  			bldgdata.Num = wordsinfo [4];  			bldgdata.Strt = wordsinfo [6];  			acycle.FCurStat = wordsinfo [9];  			bldgdata.BIN = wordsinfo [11];  			bldgdata.NumStory = wordsinfo [13];  			acycle.FInitDate = wordsinfo [15];  			acycle.FaISN = wordsinfo [17];  			bldgdata.Cycles.Add (acycle);  		}  	}  	//populate zipcode and borough  	string[] splitfive =  {  		"\nNmBoro :: "'  		"\nVlBin :: "'  		"\nVlNumZip :: "'  		"\nVlTaxBlock :: "  	};  	string[] wordsthree = astringHTML.Split (splitfive' StringSplitOptions.None);  	bldgdata.Boro = wordsthree [1];  	bldgdata.Zip = wordsthree [3];  	if (bldgdata.Cycles.Count > 0) {  		scrapeddata.Add (bldgdata);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < wordscycles.ToList ().Count; i++) {  	//string[] splitthree = { "}\n"'"[1:FControlNumber]{"' "[5:FCurrentStatus]{"' "[8:FInitFileDate]{"' "[9:FaIsn]{" };  	string[] splitfour =  {  		"}\n"'  		"[1:FControlNumber]{"'  		"[2:FHouseNumber]{"'  		"[3:FStreetName]{"'  		"[5:FCurrentStatus]{"'  		"[6:FBin]{"'  		"[7:FNumStories]{"'  		"[8:FInitFileDate]{"'  		"[9:FaIsn]{"  	};  	string[] wordsinfo = wordscycles [i].Split (splitfour' StringSplitOptions.None);  	if (wordsinfo [11] == bin) {  		cycle acycle = new cycle ();  		acycle.FCycle = wordsinfo [0];  		acycle.FCtrlNum = wordsinfo [2];  		bldgdata.Num = wordsinfo [4];  		bldgdata.Strt = wordsinfo [6];  		acycle.FCurStat = wordsinfo [9];  		bldgdata.BIN = wordsinfo [11];  		bldgdata.NumStory = wordsinfo [13];  		acycle.FInitDate = wordsinfo [15];  		acycle.FaISN = wordsinfo [17];  		bldgdata.Cycles.Add (acycle);  	}  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: if (wordsinfo [11] == bin) {  	cycle acycle = new cycle ();  	acycle.FCycle = wordsinfo [0];  	acycle.FCtrlNum = wordsinfo [2];  	bldgdata.Num = wordsinfo [4];  	bldgdata.Strt = wordsinfo [6];  	acycle.FCurStat = wordsinfo [9];  	bldgdata.BIN = wordsinfo [11];  	bldgdata.NumStory = wordsinfo [13];  	acycle.FInitDate = wordsinfo [15];  	acycle.FaISN = wordsinfo [17];  	bldgdata.Cycles.Add (acycle);  }  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: acycle.FCtrlNum = wordsinfo [2];  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: bldgdata.Num = wordsinfo [4];  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: bldgdata.Strt = wordsinfo [6];  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: acycle.FCurStat = wordsinfo [9];  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: bldgdata.BIN = wordsinfo [11];  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: bldgdata.NumStory = wordsinfo [13];  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: acycle.FInitDate = wordsinfo [15];  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: acycle.FaISN = wordsinfo [17];  
Magic Number,BIS,Program,C:\repos\elcinertugrul_facademy\BIS\BIS\Program.cs,Main,The following statement contains a magic number: bldgdata.Zip = wordsthree [3];  
