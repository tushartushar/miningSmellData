Implementation smell,Namespace,Class,File,Method,Description
Long Method,Core,InputLayouts,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\InputLayouts.cs,InitAll,The method has 113 lines of code.
Long Method,Core,RenderStates,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\RenderStates.cs,InitAll,The method has 141 lines of code.
Long Method,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,BasicEffect,The method has 109 lines of code.
Complex Method,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,WndProc,Cyclomatic complexity of the method is 11
Complex Method,Core,InputLayouts,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\InputLayouts.cs,InitAll,Cyclomatic complexity of the method is 13
Complex Method,Core.Model,AnimEvaluator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\AnimEvaluator.cs,Evaluate,Cyclomatic complexity of the method is 20
Complex Method,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,BasicModel,Cyclomatic complexity of the method is 8
Complex Method,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,Cyclomatic complexity of the method is 8
Complex Method,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadSdkMesh,Cyclomatic complexity of the method is 8
Complex Method,Core.Model,SceneAnimator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SceneAnimator.cs,Init,Cyclomatic complexity of the method is 10
Complex Method,Core.Terrain,QuadTreeNode,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\QuadTree.cs,Intersects,Cyclomatic complexity of the method is 11
Complex Method,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,Cyclomatic complexity of the method is 9
Complex Method,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,CalculateWalkability,Cyclomatic complexity of the method is 9
Complex Method,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,ConnectNeighboringTiles,Cyclomatic complexity of the method is 8
Complex Method,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,CreateTileSets,Cyclomatic complexity of the method is 8
Complex Method,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,GetPath,Cyclomatic complexity of the method is 11
Complex Method,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Draw,Cyclomatic complexity of the method is 11
Complex Method,Core.Terrain,WalkMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateWalkableTexture,Cyclomatic complexity of the method is 8
Long Parameter List,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,PerlinNoise2D,The method has 5 parameters. Parameters: seed' persistence' octave' x' y
Long Parameter List,Core,FontCache,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FontCache.cs,RegisterFont,The method has 6 parameters. Parameters: name' fontSize' fontFace' fontWeight' fontStyle' fontStretch
Long Parameter List,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateCylinder,The method has 5 parameters. Parameters: bottomRadius' topRadius' height' sliceCount' stackCount
Long Parameter List,Core,Vertex,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,Vertex,The method has 11 parameters. Parameters: px' py' pz' nx' ny' nz' tx' ty' tz' u' v
Long Parameter List,Core,ParticleSystem,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ParticleSystem.cs,Init,The method has 5 parameters. Parameters: device' fx' texArraySRV' randomTexSRV' maxParticles
Long Parameter List,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,Ssao,The method has 6 parameters. Parameters: device' dc' width' height' fovY' farZ
Long Parameter List,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,CreateTexture2DArraySRV,The method has 6 parameters. Parameters: device' immediateContext' filenames' format' filter' mipFilter
Long Parameter List,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The method has 6 parameters. Parameters: m' n' dx' dt' speed' damping
Long Parameter List,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,BasicModel,The method has 5 parameters. Parameters: device' texMgr' filename' texturePath' flipUv
Long Parameter List,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,CreateCylinder,The method has 6 parameters. Parameters: device' bottomRadius' topRadius' height' sliceCount' stackCount
Long Parameter List,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,CreateGrid,The method has 5 parameters. Parameters: device' width' depth' xVerts' zVerts
Long Parameter List,Core.Model,IModel<TVertexType>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\IModel.cs,CreateCylinder,The method has 6 parameters. Parameters: device' bottomRadius' topRadius' height' sliceCount' stackCount
Long Parameter List,Core.Model,IModel<TVertexType>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\IModel.cs,CreateGrid,The method has 5 parameters. Parameters: device' width' depth' xVerts' zVerts
Long Parameter List,Core.Model,IModelInstance<T>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\IModel.cs,Draw,The method has 5 parameters. Parameters: dc' effectPass' view' proj' method
Long Parameter List,Core.Model,IModelInstance<T>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\IModel.cs,Draw,The method has 5 parameters. Parameters: dc' effectPass' view' proj' renderMode
Long Parameter List,Core.Model,MeshGeometry,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\MeshGeometry.cs,DrawInstanced,The method has 5 parameters. Parameters: dc' subsetId' instanceBuffer' numInstances' instanceStride
Long Parameter List,Core.Model,SkinnedModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SkinnedModel.cs,SkinnedModel,The method has 5 parameters. Parameters: device' texMgr' filename' texturePath' flipTexY
Long Parameter List,Core.Model,SkinnedModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SkinnedModel.cs,CreateCylinder,The method has 6 parameters. Parameters: device' bottomRadius' topRadius' height' sliceCount' stackCount
Long Parameter List,Core.Model,SkinnedModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SkinnedModel.cs,CreateGrid,The method has 5 parameters. Parameters: device' width' depth' xVerts' zVerts
Long Parameter List,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The method has 6 parameters. Parameters: device' texMgr' width' depth' texture1' texture2
Long Parameter List,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMapParallel,The method has 5 parameters. Parameters: seed' noiseSize' persistence' octaves' drawProgress
Long Parameter List,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The method has 6 parameters. Parameters: device' dc' minimapWidth' minimapHeight' terrain' viewCam
Long Parameter List,Vertex,PosNormalTexTanSkinned,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Vertex.cs,PosNormalTexTanSkinned,The method has 6 parameters. Parameters: pos' norm' uv' tan' weight' boneIndices
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light0TexAlphaClipFogReflectTech is 32.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light1TexAlphaClipFogReflectTech is 32.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light2TexAlphaClipFogReflectTech is 32.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light3TexAlphaClipFogReflectTech is 32.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light0TexAlphaClipFogSkinnedTech is 32.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light1TexAlphaClipFogSkinnedTech is 32.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light2TexAlphaClipFogSkinnedTech is 32.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light3TexAlphaClipFogSkinnedTech is 32.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light0TexAlphaClipReflectSkinnedTech is 36.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light1TexAlphaClipReflectSkinnedTech is 36.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light2TexAlphaClipReflectSkinnedTech is 36.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light3TexAlphaClipReflectSkinnedTech is 36.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light0TexFogReflectSkinnedTech is 30.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light1TexFogReflectSkinnedTech is 30.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light2TexFogReflectSkinnedTech is 30.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light3TexFogReflectSkinnedTech is 30.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light0TexAlphaClipFogReflectSkinnedTech is 39.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light1TexAlphaClipFogReflectSkinnedTech is 39.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light2TexAlphaClipFogReflectSkinnedTech is 39.
Long Identifier,Core.FX,BasicEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BasicEffect.cs,,The length of the parameter Light3TexAlphaClipFogReflectSkinnedTech is 39.
Long Identifier,Core.FX,BuildShadowMapEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\BuildShadowMapEffect.cs,,The length of the parameter TessBuildShadowMapAlphaClipTech is 31.
Long Statement,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,InitDirect3D,The length of the statement  "                Console.WriteLine("Direct3D Feature Level 11 unsupported\nSupported feature level: " + Enum.GetName(Device.FeatureLevel.GetType()' Device.FeatureLevel)); " is 153.
Long Statement,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,InitDirect3D,The length of the statement  "                    SampleDescription = Enable4XMsaa && Device.FeatureLevel >= FeatureLevel.Level_10_1 ? new SampleDescription(4' Msaa4XQuality - 1) : new SampleDescription(1' 0)' " is 159.
Long Statement,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,BuildScreenQuadGeometryBuffers,The length of the statement  "            var vbd = new BufferDescription(Basic32.Stride * verts.Count' ResourceUsage.Immutable' BindFlags.VertexBuffer' CpuAccessFlags.None' ResourceOptionFlags.None' 0); " is 161.
Long Statement,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,BuildScreenQuadGeometryBuffers,The length of the statement  "            var ibd = new BufferDescription(sizeof(int) * quad.Indices.Count' ResourceUsage.Immutable' BindFlags.IndexBuffer' CpuAccessFlags.None' ResourceOptionFlags.None' 0); " is 164.
Long Statement,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,OnResize,The length of the statement  "                SampleDescription = (Enable4XMsaa && Device.FeatureLevel >= FeatureLevel.Level_10_1) ? new SampleDescription(4' Msaa4XQuality - 1) : new SampleDescription(1' 0)' " is 161.
Long Statement,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateGrid,The length of the statement  "                    ret.Vertices.Add(new Vertex(new Vector3(x' 0' z)' new Vector3(0' 1' 0)' new Vector3(1' 0' 0)' new Vector2(j * du' i * dv))); " is 124.
Long Statement,Core,InputLayouts,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\InputLayouts.cs,InitAll,The length of the statement  "                    if (passDesc.Signature != null) PosNormal = new InputLayout(device' passDesc.Signature' InputLayoutDescriptions.PosNormal); " is 123.
Long Statement,Core,InputLayouts,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\InputLayouts.cs,InitAll,The length of the statement  "                    InstancedPosNormalTexTan = new InputLayout(device' passDesc.Signature' InputLayoutDescriptions.InstancedPosNormalTexTan); " is 121.
Long Statement,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,CreateRandomTexture1DSRV,The length of the statement  "                randomValues.Add(new Vector4(MathF.Rand(-1.0f' 1.0f)' MathF.Rand(-1.0f' 1.0f)' MathF.Rand(-1.0f' 1.0f)' MathF.Rand(-1.0f' 1.0f))); " is 130.
Long Statement,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,The length of the statement  "            ret.Vertices.AddRange(vertices.Select(v => new PosNormalTexTan(v.Position' v.Normal' v.Tex' new Vector3(1' 0' 0))).ToList()); " is 125.
Long Statement,Core.Model,MeshGeometry,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\MeshGeometry.cs,DrawInstanced,The length of the statement  "            dc.InputAssembler.SetVertexBuffers(0' new VertexBufferBinding(_vb' _vertexStride' offset)' new VertexBufferBinding(instanceBuffer' instanceStride' 0)); " is 151.
Long Statement,Core.Model,MeshGeometry,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\MeshGeometry.cs,DrawInstanced,The length of the statement  "            dc.DrawIndexedInstanced(_subsetTable[subsetId].FaceCount * 3' numInstances' _subsetTable[subsetId].FaceStart * 3'  0' 0); " is 121.
Long Statement,Core.Model,SdkMeshVertexBuffer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,ToString,The length of the statement  "                    sb.AppendLine("\tVertexElement(Stream: " + elem.Stream + " Offset: " + elem.Offset + " Type: " + elem.Type + " Method: " + elem.Method + " Usage: " + elem.Usage + " UsageIndex: " + elem.UsageIndex + ")"); " is 204.
Long Statement,Core.Model,SkinnedModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SkinnedModel.cs,ExtractVertices,The length of the statement  "                var v = new PosNormalTexTanSkinned(pos' norm.ToVector3()' texC.ToVector2()' tan.ToVector3()' weights.First()' boneIndices); " is 123.
Long Statement,Core.Terrain,PriorityQueue<T>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\PriorityQueue.cs,HasHigherPriority,The length of the statement  "            return higher.Priority < lower.Priority || (Math.Abs(higher.Priority - lower.Priority) < float.Epsilon && higher.InsertionIndex < lower.InsertionIndex); " is 152.
Long Statement,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,The length of the statement  "                points[i] = new Vector3(Math.Min(Math.Max(hit.X' -float.MaxValue)' float.MaxValue)' 0' Math.Min(Math.Max(hit.Z' -float.MaxValue)' float.MaxValue)); " is 147.
Long Statement,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,BuildQuadTree,The length of the statement  "            var quadNode = new QuadTreeNode { Bounds = new BoundingBox(new Vector3(minX' minMaxY.X' minZ)' new Vector3(maxX' minMaxY.Y' maxZ)) }; " is 133.
Long Statement,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The length of the statement  "                D3DApp.GD3DApp.ProgressUpdate.Draw(0.70f + 0.05f * ((float)y / terrain.HeightMap.HeightMapHeight)' "Generating blendmap"); " is 122.
Long Statement,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The length of the statement  "            var blendTex = new Texture2D(device' texDec' new DataRectangle(terrain.HeightMap.HeightMapWidth * Marshal.SizeOf(typeof(Color4))' new DataStream(colors.ToArray()' false' false))) { DebugName = "terrain blend texture" }; " is 219.
Long Statement,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The length of the statement  "            var srvDesc = new ShaderResourceViewDescription { Format = texDec.Format' Dimension = ShaderResourceViewDimension.Texture2D' MostDetailedMip = 0' MipLevels = -1 }; " is 163.
Complex Conditional,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Contains,The conditional expression  "p.X >= ScreenPosition.X && p.X <= ScreenPosition.X + Size.X &&                  p.Y >= ScreenPosition.Y && p.Y <= ScreenPosition.Y + Size.Y"  is complex.
Complex Conditional,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,GetPath,The conditional expression  "!Within(start) || !Within(goal) || start == goal || startTile == null || goalTile == null"  is complex.
Complex Conditional,Core.Terrain,WalkMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateWalkableTexture,The conditional expression  "y1 < 0 || y1 >= heightInTiles || x1 < 0 || x1 >= widthInTiles"  is complex.
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,SetLens,The following statement contains a magic number: NearWindowHeight = 2.0f * NearZ * MathF.Tan(0.5f * FovY);
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,SetLens,The following statement contains a magic number: NearWindowHeight = 2.0f * NearZ * MathF.Tan(0.5f * FovY);
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,SetLens,The following statement contains a magic number: FarWindowHeight = 2.0f * FarZ * MathF.Tan(0.5f * FovY);
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,SetLens,The following statement contains a magic number: FarWindowHeight = 2.0f * FarZ * MathF.Tan(0.5f * FovY);
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetPickingRay,The following statement contains a magic number: var vx = (2.0f * sp.X / screenDims.X - 1.0f) / p.M11;
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetPickingRay,The following statement contains a magic number: var vy = (-2.0f * sp.Y / screenDims.Y + 1.0f) / p.M22;
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: var hNear = 2 * MathF.Tan(FovY / 2) * NearZ;
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: var hNear = 2 * MathF.Tan(FovY / 2) * NearZ;
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: var hFar = 2 * MathF.Tan(FovY / 2) * FarZ;
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: var hFar = 2 * MathF.Tan(FovY / 2) * FarZ;
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,CameraBase,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\CameraBase.cs,GetFrustumCorners,The following statement contains a magic number: return new[] {                  //ntl                  cNear + (Up*hNear/2) - (Right*wNear/2)'                  //ntr                  cNear + (Up*hNear/2) + (Right*wNear/2)'                  //nbl                  cNear - (Up *hNear/2) - (Right*wNear/2)'                  //nbr                  cNear - (Up *hNear/2) + (Right*wNear/2)'                  //ftl                  cFar + (Up*hFar/2) - (Right*wFar/2)'                  //ftr                  cFar + (Up*hFar/2) + (Right*wFar/2)'                  //fbl                  cFar - (Up *hFar/2) - (Right*wFar/2)'                  //fbr                  cFar - (Up *hFar/2) + (Right*wFar/2)'              };
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,Zoom,The following statement contains a magic number: var newFov = MathF.Clamp(FovY + dr' 0.1f' MathF.PI / 2);
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,Zoom,The following statement contains a magic number: var newFov = MathF.Clamp(FovY + dr' 0.1f' MathF.PI / 2);
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[2' 0] = Right.Z;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[3' 0] = x;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[2' 1] = Up.Z;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[3' 1] = y;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[0' 2] = Look.X;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[1' 2] = Look.Y;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[2' 2] = Look.Z;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[2' 2] = Look.Z;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[3' 2] = z;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[3' 2] = z;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[0' 3] = v[1' 3] = v[2' 3] = 0;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[0' 3] = v[1' 3] = v[2' 3] = 0;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[0' 3] = v[1' 3] = v[2' 3] = 0;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[0' 3] = v[1' 3] = v[2' 3] = 0;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[3' 3] = 1;
Magic Number,Core.Camera,FpsCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\FpsCamera.cs,UpdateViewMatrix,The following statement contains a magic number: v[3' 3] = 1;
Magic Number,Core.Camera,OrthoCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\OrthoCamera.cs,SetLens,The following statement contains a magic number: Proj = Matrix.OrthoLH(width' height' 0.1f' 2000);
Magic Number,Core.Camera,OrthoCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\OrthoCamera.cs,SetLens,The following statement contains a magic number: Proj = Matrix.OrthoLH(width' height' 0.1f' 2000);
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,LookAtCamera,The following statement contains a magic number: _alpha = _beta = 0.5f;
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,LookAtCamera,The following statement contains a magic number: _radius = 10.0f;
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,Pitch,The following statement contains a magic number: _beta = MathF.Clamp(_beta' 0.05f' MathF.PI/2.0f - 0.01f);
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,Pitch,The following statement contains a magic number: _beta = MathF.Clamp(_beta' 0.05f' MathF.PI/2.0f - 0.01f);
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,Pitch,The following statement contains a magic number: _beta = MathF.Clamp(_beta' 0.05f' MathF.PI/2.0f - 0.01f);
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,Yaw,The following statement contains a magic number: _alpha = (_alpha + angle) % (MathF.PI*2.0f);
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,Zoom,The following statement contains a magic number: _radius = MathF.Clamp(_radius' 2.0f' 150.0f);
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,Zoom,The following statement contains a magic number: _radius = MathF.Clamp(_radius' 2.0f' 150.0f);
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,UpdateViewMatrix,The following statement contains a magic number: Position = new Vector3(Position.X'  Height(Position.X' Position.Z) + 2.0f' Position.Z);
Magic Number,Core.Camera,LookAtCamera,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Camera\LookAtCamera.cs,UpdateViewMatrix,The following statement contains a magic number: Height != null && Position.Y <= Height(Position.X' Position.Z) + 2.0f
Magic Number,Core.Controls,ColorPickButton,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Controls\ColorPickButton.cs,ColorFromVector3,The following statement contains a magic number: return Color.FromArgb((int)(colorVector.X * 256)' (int)(colorVector.Y * 256)' (int)(colorVector.Z * 256));
Magic Number,Core.Controls,ColorPickButton,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Controls\ColorPickButton.cs,ColorFromVector3,The following statement contains a magic number: return Color.FromArgb((int)(colorVector.X * 256)' (int)(colorVector.Y * 256)' (int)(colorVector.Z * 256));
Magic Number,Core.Controls,ColorPickButton,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Controls\ColorPickButton.cs,ColorFromVector3,The following statement contains a magic number: return Color.FromArgb((int)(colorVector.X * 256)' (int)(colorVector.Y * 256)' (int)(colorVector.Z * 256));
Magic Number,Core.Controls,ColorPickButton,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Controls\ColorPickButton.cs,Vector3FromColor,The following statement contains a magic number: return new Vector3(c.R / 256.0f' c.G / 256.0f' c.B / 256.0f);
Magic Number,Core.Controls,ColorPickButton,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Controls\ColorPickButton.cs,Vector3FromColor,The following statement contains a magic number: return new Vector3(c.R / 256.0f' c.G / 256.0f' c.B / 256.0f);
Magic Number,Core.Controls,ColorPickButton,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Controls\ColorPickButton.cs,Vector3FromColor,The following statement contains a magic number: return new Vector3(c.R / 256.0f' c.G / 256.0f' c.B / 256.0f);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,LookupCos,The following statement contains a magic number: var a1 = (int)(a * 1000);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,ToRadians,The following statement contains a magic number: return PI * degrees / 180.0f;
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,ToDegrees,The following statement contains a magic number: return radians * (180.0f / PI);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,Noise,The following statement contains a magic number: x = (x << 13) ^ x;
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,Noise,The following statement contains a magic number: return (1.0f - ((x * (x * x * 15731) + 1376312589) & 0x7fffffff) / 1073741824.0f);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,Noise,The following statement contains a magic number: return (1.0f - ((x * (x * x * 15731) + 1376312589) & 0x7fffffff) / 1073741824.0f);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,Noise,The following statement contains a magic number: return (1.0f - ((x * (x * x * 15731) + 1376312589) & 0x7fffffff) / 1073741824.0f);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,CosInterpolate,The following statement contains a magic number: var prc = (1.0f - LookupCos(angle)) * 0.5f;
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,PerlinNoise2D,The following statement contains a magic number: var freq = (float)Math.Pow(2.0f' octave);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,PerlinNoise2D,The following statement contains a magic number: var v1 = Noise(txi + tyi * 57 + seed);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,PerlinNoise2D,The following statement contains a magic number: var v2 = Noise(txi + 1 + tyi * 57 + seed);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,PerlinNoise2D,The following statement contains a magic number: var v3 = Noise(txi + (tyi + 1) * 57 + seed);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,PerlinNoise2D,The following statement contains a magic number: var v4 = Noise(txi + 1 + (tyi + 1) * 57 + seed);
Magic Number,Core,MathF,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\CosTable.cs,AngleFromXY,The following statement contains a magic number: theta += 2*PI;
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,InitMainWindow,The following statement contains a magic number: Window = new D3DForm {                      Text = MainWindowCaption'                      Name = "D3DWndClassName"'                      FormBorderStyle = FormBorderStyle.Sizable'                      ClientSize = new Size(ClientWidth' ClientHeight)'                      StartPosition = FormStartPosition.CenterScreen'                      MyWndProc = WndProc'                      MinimumSize = new Size(200' 200)'                  };
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,InitMainWindow,The following statement contains a magic number: Window = new D3DForm {                      Text = MainWindowCaption'                      Name = "D3DWndClassName"'                      FormBorderStyle = FormBorderStyle.Sizable'                      ClientSize = new Size(ClientWidth' ClientHeight)'                      StartPosition = FormStartPosition.CenterScreen'                      MyWndProc = WndProc'                      MinimumSize = new Size(200' 200)'                  };
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {                  case WM_ACTIVATE:                      if (m.WParam.ToInt32().LowWord() == 0) {                          AppPaused = true;                          Timer.Stop();                      } else {                          AppPaused = false;                          Timer.Start();                      }                      return true;                  case WM_SIZE:                      ClientWidth = m.LParam.ToInt32().LowWord();                      ClientHeight = m.LParam.ToInt32().HighWord();                      if (Device != null) {                          if (m.WParam.ToInt32() == 1) { // SIZE_MINIMIZED                              AppPaused = true;                              Minimized = true;                              Maximized = false;                          } else if (m.WParam.ToInt32() == 2) { // SIZE_MAXIMIZED                              AppPaused = false;                              Minimized = false;                              Maximized = true;                              OnResize();                          } else if (m.WParam.ToInt32() == 0) { // SIZE_RESTORED                              if (Minimized) {                                  AppPaused = false;                                  Minimized = false;                                  OnResize();                              } else if (Maximized) {                                  AppPaused = false;                                  Maximized = false;                                  OnResize();                              } else if (Resizing) {                                } else {                                  OnResize();                              }                          }                      }                      return true;                  case WM_DESTROY:                      _running = false;                      return true;              }
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,InitDirect3D,The following statement contains a magic number: var sd = new SwapChainDescription {                      ModeDescription = new ModeDescription(ClientWidth' ClientHeight' new Rational(60' 1)' format) {                          ScanlineOrdering = DisplayModeScanlineOrdering.Unspecified'                          Scaling = DisplayModeScaling.Unspecified                      }'                      SampleDescription = Enable4XMsaa && Device.FeatureLevel >= FeatureLevel.Level_10_1 ? new SampleDescription(4' Msaa4XQuality - 1) : new SampleDescription(1' 0)'                      Usage = Usage.RenderTargetOutput'                      BufferCount = 1'                      OutputHandle = Window.Handle'                      IsWindowed = true'                      SwapEffect = SwapEffect.Discard'                      Flags = SwapChainFlags.None                    };
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,InitDirect3D,The following statement contains a magic number: var sd = new SwapChainDescription {                      ModeDescription = new ModeDescription(ClientWidth' ClientHeight' new Rational(60' 1)' format) {                          ScanlineOrdering = DisplayModeScanlineOrdering.Unspecified'                          Scaling = DisplayModeScaling.Unspecified                      }'                      SampleDescription = Enable4XMsaa && Device.FeatureLevel >= FeatureLevel.Level_10_1 ? new SampleDescription(4' Msaa4XQuality - 1) : new SampleDescription(1' 0)'                      Usage = Usage.RenderTargetOutput'                      BufferCount = 1'                      OutputHandle = Window.Handle'                      IsWindowed = true'                      SwapEffect = SwapEffect.Discard'                      Flags = SwapChainFlags.None                    };
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,CalculateFrameRateStats,The following statement contains a magic number: var mspf = 1000.0f / fps;
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,D3DApp,The following statement contains a magic number: ClientWidth = 800;
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,D3DApp,The following statement contains a magic number: ClientHeight = 600;
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,OnResize,The following statement contains a magic number: var depthStencilDesc = new Texture2DDescription {                  Width = ClientWidth'                  Height = ClientHeight'                  MipLevels = 1'                  ArraySize = 1'                  Format = Format.D24_UNorm_S8_UInt'                  SampleDescription = (Enable4XMsaa && Device.FeatureLevel >= FeatureLevel.Level_10_1) ? new SampleDescription(4' Msaa4XQuality - 1) : new SampleDescription(1' 0)'                  Usage = ResourceUsage.Default'                  BindFlags = BindFlags.DepthStencil'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.None              };
Magic Number,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,Run,The following statement contains a magic number: Timer.FrameTime = 1.0f / 60.0f;
Magic Number,Core,FontCache,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FontCache.cs,FontCache,The following statement contains a magic number: _default = new TextBlockRenderer(sprite' "Arial"' FontWeight.Normal' FontStyle.Normal' FontStretch.Normal' 12);
Magic Number,Core,Frustum,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Frustum.cs,Intersect,The following statement contains a magic number: return 2;
Magic Number,Core,Frustum,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Frustum.cs,Intersect,The following statement contains a magic number: totalIn == 6
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: var w2 = 0.5f * width;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: var h2 = 0.5f * height;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: var d2 = 0.5f * depth;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateBox,The following statement contains a magic number: ret.Indices.AddRange(new[]{                  0'1'2'0'2'3'                  4'5'6'4'6'7'                  8'9'10'8'10'11'                  12'13'14'12'14'15'                  16'17'18'16'18'19'                  20'21'22'20'22'23              });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateSphere,The following statement contains a magic number: var thetaStep = 2.0f * MathF.PI / sliceCount;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateSphere,The following statement contains a magic number: var uv = new Vector2(theta / (MathF.PI * 2)' phi / MathF.PI);
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateSphere,The following statement contains a magic number: i < stackCount - 2
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateGeosphere,The following statement contains a magic number: var texC = new Vector2(theta / (2 * MathF.PI)' phi / MathF.PI);
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateCylinder,The following statement contains a magic number: var y = -0.5f * height + i * stackHeight;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateCylinder,The following statement contains a magic number: var dTheta = 2.0f * MathF.PI / sliceCount;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderTopCap,The following statement contains a magic number: var y = 0.5f * height;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderTopCap,The following statement contains a magic number: var dTheta = 2.0f * MathF.PI / sliceCount;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderTopCap,The following statement contains a magic number: var u = x / height + 0.5f;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderTopCap,The following statement contains a magic number: var v = z / height + 0.5f;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderTopCap,The following statement contains a magic number: ret.Vertices.Add(new Vertex(0' y' 0' 0' 1' 0' 1' 0' 0' 0.5f' 0.5f));
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderTopCap,The following statement contains a magic number: ret.Vertices.Add(new Vertex(0' y' 0' 0' 1' 0' 1' 0' 0' 0.5f' 0.5f));
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderBottomCap,The following statement contains a magic number: var y = -0.5f * height;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderBottomCap,The following statement contains a magic number: var dTheta = 2.0f * MathF.PI / sliceCount;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderBottomCap,The following statement contains a magic number: var u = x / height + 0.5f;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderBottomCap,The following statement contains a magic number: var v = z / height + 0.5f;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderBottomCap,The following statement contains a magic number: ret.Vertices.Add(new Vertex(0' y' 0' 0' -1' 0' 1' 0' 0' 0.5f' 0.5f));
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,BuildCylinderBottomCap,The following statement contains a magic number: ret.Vertices.Add(new Vertex(0' y' 0' 0' -1' 0' 1' 0' 0' 0.5f' 0.5f));
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateGrid,The following statement contains a magic number: var halfWidth = width * 0.5f;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateGrid,The following statement contains a magic number: var halfDepth = depth * 0.5f;
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateFullScreenQuad,The following statement contains a magic number: ret.Indices.AddRange(new[] { 0' 1' 2' 0' 2' 3 });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateFullScreenQuad,The following statement contains a magic number: ret.Indices.AddRange(new[] { 0' 1' 2' 0' 2' 3 });
Magic Number,Core,GeometryGenerator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,CreateFullScreenQuad,The following statement contains a magic number: ret.Indices.AddRange(new[] { 0' 1' 2' 0' 2' 3 });
Magic Number,Core,Subdivider,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,Subdivide4,The following statement contains a magic number: var numTris = mesh.Indices.Count / 3;
Magic Number,Core,Subdivider,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,Subdivide4,The following statement contains a magic number: var i1 = mesh.Indices[i * 3];
Magic Number,Core,Subdivider,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,Subdivide4,The following statement contains a magic number: var i2 = mesh.Indices[i * 3 + 1];
Magic Number,Core,Subdivider,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,Subdivide4,The following statement contains a magic number: var i3 = mesh.Indices[i * 3 + 2];
Magic Number,Core,Subdivider,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,Subdivide4,The following statement contains a magic number: var i3 = mesh.Indices[i * 3 + 2];
Magic Number,Core,Subdivider,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\GeometryGenerator.cs,GetNewVertex,The following statement contains a magic number: _vertices.Add(new Vertex() { Position = (_vertices[i1].Position + _vertices[i2].Position) * 0.5f });
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _borderBounds = new Rectangle(18' rt1.PixelSize.Height / 2 - 2' rt1.PixelSize.Width - 36' 24);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _borderBounds = new Rectangle(18' rt1.PixelSize.Height / 2 - 2' rt1.PixelSize.Width - 36' 24);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _borderBounds = new Rectangle(18' rt1.PixelSize.Height / 2 - 2' rt1.PixelSize.Width - 36' 24);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _borderBounds = new Rectangle(18' rt1.PixelSize.Height / 2 - 2' rt1.PixelSize.Width - 36' 24);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _borderBounds = new Rectangle(18' rt1.PixelSize.Height / 2 - 2' rt1.PixelSize.Width - 36' 24);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _barBounds = new Rectangle(20' rt1.PixelSize.Height / 2' rt1.PixelSize.Width - 40' 20);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _barBounds = new Rectangle(20' rt1.PixelSize.Height / 2' rt1.PixelSize.Width - 40' 20);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _barBounds = new Rectangle(20' rt1.PixelSize.Height / 2' rt1.PixelSize.Width - 40' 20);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _barBounds = new Rectangle(20' rt1.PixelSize.Height / 2' rt1.PixelSize.Width - 40' 20);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _txtFormat = new TextFormat(_factory' "Arial"' FontWeight.Normal' FontStyle.Normal' FontStretch.Normal' 18' "en-us") {                  TextAlignment = TextAlignment.Center              };
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _textRect = new Rectangle(100' rt1.PixelSize.Height / 2 - 25' _rt.PixelSize.Width - 200' 20);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _textRect = new Rectangle(100' rt1.PixelSize.Height / 2 - 25' _rt.PixelSize.Width - 200' 20);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _textRect = new Rectangle(100' rt1.PixelSize.Height / 2 - 25' _rt.PixelSize.Width - 200' 20);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _textRect = new Rectangle(100' rt1.PixelSize.Height / 2 - 25' _rt.PixelSize.Width - 200' 20);
Magic Number,Core,ProgressUpdate,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\ProgressUpdate.cs,ProgressUpdate,The following statement contains a magic number: _textRect = new Rectangle(100' rt1.PixelSize.Height / 2 - 25' _rt.PixelSize.Width - 200' 20);
Magic Number,Core,Sky,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Sky.cs,Sky,The following statement contains a magic number: var sphere = GeometryGenerator.CreateSphere(skySphereRadius' 30' 30);
Magic Number,Core,Sky,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Sky.cs,Sky,The following statement contains a magic number: var sphere = GeometryGenerator.CreateSphere(skySphereRadius' 30' 30);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,OnSize,The following statement contains a magic number: _ambientMapViewport = new Viewport(0' 0' width / 2.0f' height / 2.0f' 0' 1);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,OnSize,The following statement contains a magic number: _ambientMapViewport = new Viewport(0' 0' width / 2.0f' height / 2.0f' 0' 1);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,SetNormalDepthRenderTarget,The following statement contains a magic number: var clearColor = new Color4(1e5f' 0.0f' 0.0f' -1.0f);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,ComputeSsao,The following statement contains a magic number: T.M11 = 0.5f;
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,ComputeSsao,The following statement contains a magic number: T.M22 = -0.5f;
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,ComputeSsao,The following statement contains a magic number: T.M41 = 0.5f;
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,ComputeSsao,The following statement contains a magic number: T.M42 = 0.5f;
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,ComputeSsao,The following statement contains a magic number: _dc.DrawIndexed(6' 0' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BlurAmbientMap,The following statement contains a magic number: _dc.DrawIndexed(6' 0' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFrustumFarCorners,The following statement contains a magic number: var halfHeight = farz * MathF.Tan(0.5f * fovy);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFrustumFarCorners,The following statement contains a magic number: _frustumFarCorners[2] = new Vector4(+halfWidth' +halfHeight' farz' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFrustumFarCorners,The following statement contains a magic number: _frustumFarCorners[3] = new Vector4(+halfWidth' -halfHeight' farz' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: var v = new Basic32[4];
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: v[2] = new Basic32(new Vector3(+1' +1' 0)' new Vector3(2' 0' 0)' new Vector2(1' 0));
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: v[2] = new Basic32(new Vector3(+1' +1' 0)' new Vector3(2' 0' 0)' new Vector2(1' 0));
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: v[3] = new Basic32(new Vector3(+1' -1' 0)' new Vector3(3' 0' 0)' new Vector2(1' 1));
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: v[3] = new Basic32(new Vector3(+1' -1' 0)' new Vector3(3' 0' 0)' new Vector2(1' 1));
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: var vbd = new BufferDescription(Basic32.Stride * 4' ResourceUsage.Immutable' BindFlags.VertexBuffer'                  CpuAccessFlags.None' ResourceOptionFlags.None' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: var indices = new short[] { 0' 1' 2' 0' 2' 3 };
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: var indices = new short[] { 0' 1' 2' 0' 2' 3 };
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: var indices = new short[] { 0' 1' 2' 0' 2' 3 };
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildFullScreenQuad,The following statement contains a magic number: var ibd = new BufferDescription(sizeof(short) * 6' ResourceUsage.Immutable' BindFlags.IndexBuffer'                  CpuAccessFlags.None' ResourceOptionFlags.None' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildTextureViews,The following statement contains a magic number: texDesc.Width = _renderTargetWidth / 2;
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildTextureViews,The following statement contains a magic number: texDesc.Height = _renderTargetHeight / 2;
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildRandomVectorTexture,The following statement contains a magic number: var texDesc = new Texture2DDescription {                  Width = 256'                  Height = 256'                  MipLevels = 1'                  ArraySize = 1'                  Format = Format.R8G8B8A8_UNorm'                  SampleDescription = new SampleDescription(1' 0)'                  Usage = ResourceUsage.Dynamic'                  BindFlags = BindFlags.ShaderResource'                  CpuAccessFlags = CpuAccessFlags.Write'                  OptionFlags = ResourceOptionFlags.None              };
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildRandomVectorTexture,The following statement contains a magic number: var texDesc = new Texture2DDescription {                  Width = 256'                  Height = 256'                  MipLevels = 1'                  ArraySize = 1'                  Format = Format.R8G8B8A8_UNorm'                  SampleDescription = new SampleDescription(1' 0)'                  Usage = ResourceUsage.Dynamic'                  BindFlags = BindFlags.ShaderResource'                  CpuAccessFlags = CpuAccessFlags.Write'                  OptionFlags = ResourceOptionFlags.None              };
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildRandomVectorTexture,The following statement contains a magic number: j < 256
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildRandomVectorTexture,The following statement contains a magic number: i < 256
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildRandomVectorTexture,The following statement contains a magic number: box.Data.Write((byte)(color4.Red * 255));
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildRandomVectorTexture,The following statement contains a magic number: box.Data.Write((byte)(color4.Green * 255));
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildRandomVectorTexture,The following statement contains a magic number: box.Data.Write((byte)(color4.Blue * 255));
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[2] = new Vector4(-1' +1' +1' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[3] = new Vector4(+1' -1' -1' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[4] = new Vector4(+1' +1' -1' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[5] = new Vector4(-1' -1' +1' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[6] = new Vector4(-1' +1' -1' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[7] = new Vector4(+1' -1' +1' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[8] = new Vector4(-1' 0' 0' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[9] = new Vector4(+1' 0' 0' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[10] = new Vector4(0' -1' 0' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[11] = new Vector4(0' +1' 0' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[12] = new Vector4(0' 0' -1' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: _offsets[13] = new Vector4(0' 0' +1' 0);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: var s = MathF.Rand(0.25f' 1.0f);
Magic Number,Core,Ssao,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\SSAO.cs,BuildOffsetVectors,The following statement contains a magic number: i < 14
Magic Number,Core,TextureAtlas,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\TextureAtlas.cs,TextureAtlas,The following statement contains a magic number: Columns = Math.Min(8192 / w' (int)Math.Ceiling(Math.Sqrt(NumCells)));
Magic Number,Core,TextureAtlas,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\TextureAtlas.cs,TextureAtlas,The following statement contains a magic number: Rows = Math.Min(8192 / h' (int)Math.Ceiling((float)NumCells/Columns));
Magic Number,Core,TextureAtlas,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\TextureAtlas.cs,TextureAtlas,The following statement contains a magic number: _texTransforms[r * Columns + c] =                          Matrix.Scaling(1.0f/(Columns*2)' 1.0f / (2*Rows)' 0) *                           Matrix.Translation(c * w / (float)bitmap.Width' r * h / (float)bitmap.Width' 0);
Magic Number,Core,TextureAtlas,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\TextureAtlas.cs,TextureAtlas,The following statement contains a magic number: _texTransforms[r * Columns + c] =                          Matrix.Scaling(1.0f/(Columns*2)' 1.0f / (2*Rows)' 0) *                           Matrix.Translation(c * w / (float)bitmap.Width' r * h / (float)bitmap.Width' 0);
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,Center,The following statement contains a magic number: return (b.Maximum + b.Minimum) / 2;
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,ToMaterial,The following statement contains a magic number: ret.Specular = new Color4(ret.Specular.Alpha' 0.5f' 0.5f' 0.5f);
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,ToMaterial,The following statement contains a magic number: ret.Specular = new Color4(ret.Specular.Alpha' 0.5f' 0.5f' 0.5f);
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,ToMaterial,The following statement contains a magic number: ret.Specular = new Color4(ret.Specular.Alpha' 0.5f' 0.5f' 0.5f);
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,ToMatrix,The following statement contains a magic number: j < 4
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,ToMatrix,The following statement contains a magic number: i < 4
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,HighWord,The following statement contains a magic number: return (i >> 16) & 0xFFFF;
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,CreateRandomTexture1DSRV,The following statement contains a magic number: i < 1024
Magic Number,Core,Util,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Util.cs,CreateRandomTexture1DSRV,The following statement contains a magic number: var texDesc = new Texture1DDescription() {                  ArraySize = 1'                  BindFlags = BindFlags.ShaderResource'                  CpuAccessFlags = CpuAccessFlags.None'                  Format = Format.R32G32B32A32_Float'                  MipLevels = 1'                  OptionFlags = ResourceOptionFlags.None'                  Usage = ResourceUsage.Immutable'                  Width = 1024              };
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The following statement contains a magic number: TriangleCount = (m - 1) * (n - 1) * 2;
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The following statement contains a magic number: var d = damping * dt + 2.0f;
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The following statement contains a magic number: _k1 = (damping * dt - 2.0f) / d;
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The following statement contains a magic number: _k2 = (4.0f - 8.0f * e) / d;
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The following statement contains a magic number: _k2 = (4.0f - 8.0f * e) / d;
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The following statement contains a magic number: _k3 = (2.0f * e) / d;
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The following statement contains a magic number: var w2 = (n - 1) * dx * 0.5f;
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Init,The following statement contains a magic number: var d2 = (m - 1) * dx * 0.5f;
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Update,The following statement contains a magic number: _normals[i*ColumnCount + j] = Vector3.Normalize(new Vector3(-r+l' 2.0f*_spatialStep' b-t));
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Update,The following statement contains a magic number: _tangentX[i*ColumnCount + j]  = Vector3.Normalize(new Vector3(2.0f*_spatialStep' r-l' 0.0f));
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Disturb,The following statement contains a magic number: Debug.Assert(i > 1 && i < RowCount-2);
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Disturb,The following statement contains a magic number: Debug.Assert(j > 1 && j < ColumnCount -2);
Magic Number,Core,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Waves.cs,Disturb,The following statement contains a magic number: var m2 = 0.5f * magnitude;
Magic Number,Core.FX,TerrainEffect,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\FX\TerrainEffect.cs,SetWorldFrustumPlanes,The following statement contains a magic number: Debug.Assert(planes.Length == 6);
Magic Number,Core.Model,AnimEvaluator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\AnimEvaluator.cs,AnimEvaluator,The following statement contains a magic number: TicksPerSecond = anim.TicksPerSecond > 0.0f ? (float)anim.TicksPerSecond : 920.0f;
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,BasicModel,The following statement contains a magic number: var subset = new MeshGeometry.Subset {                        VertexCount = mesh.VertexCount'                      VertexStart = Vertices.Count'                      FaceStart = Indices.Count / 3'                      FaceCount = mesh.FaceCount                  };
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,InitFromMeshData,The following statement contains a magic number: var subset = new MeshGeometry.Subset {                  FaceCount = mesh.Indices.Count / 3'                  FaceStart = 0'                  VertexCount = mesh.Vertices.Count'                  VertexStart = 0              };
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,InitFromMeshData,The following statement contains a magic number: Materials.Add(new Material { Ambient = Color.Gray' Diffuse = Color.White' Specular = new Color4(16' 1' 1' 1) });
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,The following statement contains a magic number: vertices.Add(                                       new Basic32(                                           new Vector3(                                               Convert.ToSingle(vals[0].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[1].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[2].Trim()' CultureInfo.InvariantCulture))'                                           new Vector3(                                               Convert.ToSingle(vals[3].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[4].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[5].Trim()' CultureInfo.InvariantCulture))'                                           new Vector2()                                           )                              );
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,The following statement contains a magic number: vertices.Add(                                       new Basic32(                                           new Vector3(                                               Convert.ToSingle(vals[0].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[1].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[2].Trim()' CultureInfo.InvariantCulture))'                                           new Vector3(                                               Convert.ToSingle(vals[3].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[4].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[5].Trim()' CultureInfo.InvariantCulture))'                                           new Vector2()                                           )                              );
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,The following statement contains a magic number: vertices.Add(                                       new Basic32(                                           new Vector3(                                               Convert.ToSingle(vals[0].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[1].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[2].Trim()' CultureInfo.InvariantCulture))'                                           new Vector3(                                               Convert.ToSingle(vals[3].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[4].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[5].Trim()' CultureInfo.InvariantCulture))'                                           new Vector2()                                           )                              );
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,The following statement contains a magic number: vertices.Add(                                       new Basic32(                                           new Vector3(                                               Convert.ToSingle(vals[0].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[1].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[2].Trim()' CultureInfo.InvariantCulture))'                                           new Vector3(                                               Convert.ToSingle(vals[3].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[4].Trim()' CultureInfo.InvariantCulture)'                                               Convert.ToSingle(vals[5].Trim()' CultureInfo.InvariantCulture))'                                           new Vector2()                                           )                              );
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,The following statement contains a magic number: indices.Add(Convert.ToInt32(m[2].Trim()));
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,The following statement contains a magic number: var subset = new MeshGeometry.Subset {                  FaceCount = indices.Count / 3'                  FaceStart = 0'                  VertexCount = vertices.Count'                  VertexStart = 0              };
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadFromTxtFile,The following statement contains a magic number: ret.Materials.Add(new Material { Ambient = Color.Gray' Diffuse = Color.White' Specular = new Color4(16' 1' 1' 1) });
Magic Number,Core.Model,BasicModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\BasicModel.cs,LoadSdkMesh,The following statement contains a magic number: var subset = new MeshGeometry.Subset {                      FaceCount = (int)(sdkMeshSubset.IndexCount / 3)'                      FaceStart = faceStart'                      VertexCount = (int)sdkMeshSubset.VertexCount'                      VertexStart = vertexStart                  };
Magic Number,Core.Model,MeshGeometry,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\MeshGeometry.cs,Draw,The following statement contains a magic number: dc.DrawIndexed(_subsetTable[subsetId].FaceCount*3' _subsetTable[subsetId].FaceStart*3' 0);
Magic Number,Core.Model,MeshGeometry,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\MeshGeometry.cs,Draw,The following statement contains a magic number: dc.DrawIndexed(_subsetTable[subsetId].FaceCount*3' _subsetTable[subsetId].FaceStart*3' 0);
Magic Number,Core.Model,MeshGeometry,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\MeshGeometry.cs,DrawInstanced,The following statement contains a magic number: dc.DrawIndexedInstanced(_subsetTable[subsetId].FaceCount * 3' numInstances' _subsetTable[subsetId].FaceStart * 3'  0' 0);
Magic Number,Core.Model,MeshGeometry,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\MeshGeometry.cs,DrawInstanced,The following statement contains a magic number: dc.DrawIndexedInstanced(_subsetTable[subsetId].FaceCount * 3' numInstances' _subsetTable[subsetId].FaceStart * 3'  0' 0);
Magic Number,Core.Model,SceneAnimator,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SceneAnimator.cs,Init,The following statement contains a magic number: const float timestep = 1.0f / 30.0f;
Magic Number,Core.Model,SdkMeshHeader,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,SdkMeshHeader,The following statement contains a magic number: reader.ReadBytes(3);
Magic Number,Core.Model,SdkMeshVertexBuffer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,SdkMeshVertexBuffer,The following statement contains a magic number: stream < 16 && processElem
Magic Number,Core.Model,SdkMeshMesh,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,SdkMeshMesh,The following statement contains a magic number: reader.ReadBytes(3);
Magic Number,Core.Model,SdkMeshFrame,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,SdkMeshFrame,The following statement contains a magic number: k < 4
Magic Number,Core.Model,SdkMeshFrame,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,SdkMeshFrame,The following statement contains a magic number: j < 4
Magic Number,Core.Model,SkinnedModel,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SkinnedModel.cs,SkinnedModel,The following statement contains a magic number: var subset = new MeshGeometry.Subset {                      VertexCount = mesh.VertexCount'                      VertexStart = Vertices.Count'                      FaceStart = Indices.Count / 3'                      FaceCount = mesh.FaceCount                  };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: DispFactor0 = new Vector2(0.01f' 0.03f);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: DispFactor0 = new Vector2(0.01f' 0.03f);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: DispFactor1 = new Vector2(0.01f' 0.03f);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: DispFactor1 = new Vector2(0.01f' 0.03f);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: NormalFactor0 = new Vector2(0.05f' 0.02f);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: NormalFactor0 = new Vector2(0.05f' 0.02f);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: NormalFactor1 = new Vector2(0.02f' 0.05f);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: NormalFactor1 = new Vector2(0.02f' 0.05f);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: DispScale0 = new Vector3(2'2' 1);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: DispScale0 = new Vector3(2'2' 1);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: NormalScale0 = new Vector3(22'22'1 );
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: NormalScale0 = new Vector3(22'22'1 );
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: NormalScale1 = new Vector3(16'16' 1);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Waves,The following statement contains a magic number: NormalScale1 = new Vector3(16'16' 1);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: _gridModel.CreateGrid(device' width' depth' ((int)width) * 2' ((int)depth) * 2);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: _gridModel.CreateGrid(device' width' depth' ((int)width) * 2' ((int)depth) * 2);
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: Material = new Material {                  Ambient = new Color4(0.1f' 0.1f' 0.3f)'                  Diffuse = new Color4(0.4f' 0.4f' 0.7f)'                  Specular = new Color4(128f' 0.8f' 0.8f' 0.8f)'                  Reflect = new Color4(0.4f' 0.4f' 0.4f)              };
Magic Number,Core.Model,Waves,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\Waves.cs,Init,The following statement contains a magic number: World = Matrix.Translation(0' -0.2f' 0);
Magic Number,Core.Terrain,Heuristics,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Heuristics.cs,DiagonalDistance2,The following statement contains a magic number: var h = (dx + dy) + (MathF.Sqrt2 - 2) * Math.Min(dx' dy);
Magic Number,Core.Terrain,PriorityQueue<T>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\PriorityQueue.cs,OnNodeUpdated,The following statement contains a magic number: var parentIndex = node.QueueIndex/2;
Magic Number,Core.Terrain,PriorityQueue<T>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\PriorityQueue.cs,CascadeUp,The following statement contains a magic number: var parent = node.QueueIndex/2;
Magic Number,Core.Terrain,PriorityQueue<T>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\PriorityQueue.cs,CascadeUp,The following statement contains a magic number: parent = node.QueueIndex/2;
Magic Number,Core.Terrain,PriorityQueue<T>,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\PriorityQueue.cs,CascadeDown,The following statement contains a magic number: var childLeftIndex = 2*finalQueueIndex;
Magic Number,Core.Terrain,QuadTreeNode,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\QuadTree.cs,Intersects,The following statement contains a magic number: hit = (Bounds.Minimum + Bounds.Maximum) / 2;
Magic Number,Core.Terrain,QuadTreeNode,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\QuadTree.cs,Intersects,The following statement contains a magic number: cd += MathF.Rand(-0.001f' 0.001f);
Magic Number,Core.Terrain,QuadTreeNode,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\QuadTree.cs,Intersects,The following statement contains a magic number: cd += MathF.Rand(-0.001f' 0.001f);
Magic Number,Core.Terrain,QuadTreeNode,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\QuadTree.cs,Intersects,The following statement contains a magic number: var bestHit = ray.Position + ray.Direction * 1000;
Magic Number,Core.Terrain,QuadTreeNode,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\QuadTree.cs,Intersects,The following statement contains a magic number: !(dot > 0.9f)
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,LoadHeightmap,The following statement contains a magic number: _heightMap = input.Select(i => (i / 255.0f * MaxHeight)).ToArray();
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,Smooth,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.50f + 0.25f * ((float)i / HeightMapHeight)' "Smoothing terrain");
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,Smooth,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.50f + 0.25f * ((float)i / HeightMapHeight)' "Smoothing terrain");
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,BuildHeightMapThumb,The following statement contains a magic number: var userBuffer = _heightMap.Select(h => (byte)((h / MaxHeight) * 255)).ToArray();
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,BuildHeightMapThumb,The following statement contains a magic number: values[i] = userBuffer[i / 3];
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: var freq = (float)Math.Pow(2.0f' i);
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: var v1 = MathF.Noise(txi + tyi * 57 + seed);
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: var v2 = MathF.Noise(txi + 1 + tyi * 57 + seed);
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: var v3 = MathF.Noise(txi + (tyi + 1) * 57 + seed);
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: var v4 = MathF.Noise(txi + 1 + (tyi + 1) * 57 + seed);
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: var b = (int)(128 + total * 128.0f);
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: var b = (int)(128 + total * 128.0f);
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: b = 255;
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: b > 255
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMap,The following statement contains a magic number: _heightMap[x + y * HeightMapHeight] = (b / 255.0f) * MaxHeight;
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMapParallel,The following statement contains a magic number: tasks.Add(() => {                          var xf = (x1 / (float)HeightMapWidth) * noiseSize;                          var yf = (y1 / (float)HeightMapHeight) * noiseSize;                            var total = 0.0f;                          for (var i = 0; i < octaves; i++) {                              var f = MathF.PerlinNoise2D(seed' persistence' i' xf' yf);                              total += f;                          }                          var b = (int)(128 + total * 128.0f);                          if (b < 0) b = 0;                          if (b > 255) b = 255;                            _heightMap[x1 + y1 * HeightMapHeight] = (b / 255.0f) * MaxHeight;                      });
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMapParallel,The following statement contains a magic number: tasks.Add(() => {                          var xf = (x1 / (float)HeightMapWidth) * noiseSize;                          var yf = (y1 / (float)HeightMapHeight) * noiseSize;                            var total = 0.0f;                          for (var i = 0; i < octaves; i++) {                              var f = MathF.PerlinNoise2D(seed' persistence' i' xf' yf);                              total += f;                          }                          var b = (int)(128 + total * 128.0f);                          if (b < 0) b = 0;                          if (b > 255) b = 255;                            _heightMap[x1 + y1 * HeightMapHeight] = (b / 255.0f) * MaxHeight;                      });
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMapParallel,The following statement contains a magic number: tasks.Add(() => {                          var xf = (x1 / (float)HeightMapWidth) * noiseSize;                          var yf = (y1 / (float)HeightMapHeight) * noiseSize;                            var total = 0.0f;                          for (var i = 0; i < octaves; i++) {                              var f = MathF.PerlinNoise2D(seed' persistence' i' xf' yf);                              total += f;                          }                          var b = (int)(128 + total * 128.0f);                          if (b < 0) b = 0;                          if (b > 255) b = 255;                            _heightMap[x1 + y1 * HeightMapHeight] = (b / 255.0f) * MaxHeight;                      });
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMapParallel,The following statement contains a magic number: tasks.Add(() => {                          var xf = (x1 / (float)HeightMapWidth) * noiseSize;                          var yf = (y1 / (float)HeightMapHeight) * noiseSize;                            var total = 0.0f;                          for (var i = 0; i < octaves; i++) {                              var f = MathF.PerlinNoise2D(seed' persistence' i' xf' yf);                              total += f;                          }                          var b = (int)(128 + total * 128.0f);                          if (b < 0) b = 0;                          if (b > 255) b = 255;                            _heightMap[x1 + y1 * HeightMapHeight] = (b / 255.0f) * MaxHeight;                      });
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMapParallel,The following statement contains a magic number: tasks.Add(() => {                          var xf = (x1 / (float)HeightMapWidth) * noiseSize;                          var yf = (y1 / (float)HeightMapHeight) * noiseSize;                            var total = 0.0f;                          for (var i = 0; i < octaves; i++) {                              var f = MathF.PerlinNoise2D(seed' persistence' i' xf' yf);                              total += f;                          }                          var b = (int)(128 + total * 128.0f);                          if (b < 0) b = 0;                          if (b > 255) b = 255;                            _heightMap[x1 + y1 * HeightMapHeight] = (b / 255.0f) * MaxHeight;                      });
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMapParallel,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.1f + 0.40f * ((float)y / HeightMapHeight)' "Generating random terrain");
Magic Number,Core.Terrain,HeightMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\HeightMap.cs,CreateRandomHeightMapParallel,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.1f + 0.40f * ((float)y / HeightMapHeight)' "Generating random terrain");
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: var vbd = new BufferDescription(                  VertexPC.Stride * 5'                  ResourceUsage.Dynamic'                  BindFlags.VertexBuffer'                  CpuAccessFlags.Write'                  ResourceOptionFlags.None'                  0              );
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: _edgePlanes = new[] {                  new Plane(1' 0' 0' -_terrain.Width / 2)'                  new Plane(-1' 0' 0' _terrain.Width / 2)'                  new Plane(0' 1' 0' -_terrain.Depth / 2)'                  new Plane(0' -1' 0' _terrain.Depth / 2)              };
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: _edgePlanes = new[] {                  new Plane(1' 0' 0' -_terrain.Width / 2)'                  new Plane(-1' 0' 0' _terrain.Width / 2)'                  new Plane(0' 1' 0' -_terrain.Depth / 2)'                  new Plane(0' -1' 0' _terrain.Depth / 2)              };
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: _edgePlanes = new[] {                  new Plane(1' 0' 0' -_terrain.Width / 2)'                  new Plane(-1' 0' 0' _terrain.Width / 2)'                  new Plane(0' 1' 0' -_terrain.Depth / 2)'                  new Plane(0' -1' 0' _terrain.Depth / 2)              };
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: _edgePlanes = new[] {                  new Plane(1' 0' 0' -_terrain.Width / 2)'                  new Plane(-1' 0' 0' _terrain.Width / 2)'                  new Plane(0' 1' 0' -_terrain.Depth / 2)'                  new Plane(0' -1' 0' _terrain.Depth / 2)              };
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: ScreenPosition = new Vector2(0.25f' 0.75f);
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: ScreenPosition = new Vector2(0.25f' 0.75f);
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: Size = new Vector2(0.25f' 0.25f);
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Minimap,The following statement contains a magic number: Size = new Vector2(0.25f' 0.25f);
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,SetupOrthoCamera,The following statement contains a magic number: _orthoCamera.SetLens(_terrain.Width' _terrain.Depth' 1' _terrain.Depth * 2);
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,OnClick,The following statement contains a magic number: var terrainX = _terrain.Width * p.X - _terrain.Width / 2;
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,OnClick,The following statement contains a magic number: var terrainZ = -_terrain.Depth * p.Y + _terrain.Depth / 2;
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,The following statement contains a magic number: var points = new Vector3[4];
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,The following statement contains a magic number: dirs[i] *= 100000.0f;
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,The following statement contains a magic number: hit *= 2;
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,The following statement contains a magic number: i < 4 && ok
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,The following statement contains a magic number: buf.Data.Write(new VertexPC(points[2]' Color.White));
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,The following statement contains a magic number: buf.Data.Write(new VertexPC(points[3]' Color.White));
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,DrawCameraFrustum,The following statement contains a magic number: _dc.Draw(5' 0);
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Draw,The following statement contains a magic number: var world = new Matrix {                  M11 = Size.X'                  M22 = Size.Y'                  M33 = 1.0f'                  M41 = -1.0f + 2 * ScreenPosition.X + (Size.X)'                  M42 = 1.0f - 2 * ScreenPosition.Y - (Size.Y)'                  M44 = 1.0f              };
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Draw,The following statement contains a magic number: var world = new Matrix {                  M11 = Size.X'                  M22 = Size.Y'                  M33 = 1.0f'                  M41 = -1.0f + 2 * ScreenPosition.X + (Size.X)'                  M42 = 1.0f - 2 * ScreenPosition.Y - (Size.Y)'                  M44 = 1.0f              };
Magic Number,Core.Terrain,Minimap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Minimap.cs,Draw,The following statement contains a magic number: dc.DrawIndexed(6' 0' 0);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,TessFactor,The following statement contains a magic number: var c = (Bounds.Maximum - Bounds.Minimum) / 2 + Bounds.Minimum;
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,TessFactor,The following statement contains a magic number: return (int)Math.Pow(2' (int)(TerrainRenderer.MinTess + (TerrainRenderer.MaxTess-1 - TerrainRenderer.MinTess) * s));
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,CreateMesh,The following statement contains a magic number: var halfWidth = 0.5f * terrain.Width;
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,CreateMesh,The following statement contains a magic number: var halfDepth = 0.5f * terrain.Depth;
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildCenterIndices,The following statement contains a magic number: var t = (int)Math.Pow(2' tessLevel);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildCenterIndices,The following statement contains a magic number: tessLevel <= 6
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildIndices,The following statement contains a magic number: var t = (int)Math.Pow(2' tessLevel);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildIndices,The following statement contains a magic number: tessLevel <= 6
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildLeftEdges,The following statement contains a magic number: t = (int)Math.Pow(2' i);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildLeftEdges,The following statement contains a magic number: i < 6
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildLeftEdges,The following statement contains a magic number: t = (int)Math.Pow(2' i);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildLeftEdges,The following statement contains a magic number: var t1 = (int)Math.Pow(2' i + 1);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildLeftEdges,The following statement contains a magic number: i < 6
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildLeftEdges,The following statement contains a magic number: t = (int)Math.Pow(2' i);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildLeftEdges,The following statement contains a magic number: var t1 = (int)Math.Pow(2' i - 1);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildLeftEdges,The following statement contains a magic number: i <= 6
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildTopEdges,The following statement contains a magic number: t = (int)Math.Pow(2' i);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildTopEdges,The following statement contains a magic number: i < 6
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildTopEdges,The following statement contains a magic number: t = (int)Math.Pow(2' i);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildTopEdges,The following statement contains a magic number: var t1 = (int)Math.Pow(2' i + 1);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildTopEdges,The following statement contains a magic number: i < 6
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildTopEdges,The following statement contains a magic number: t = (int)Math.Pow(2' i);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildTopEdges,The following statement contains a magic number: var t1 = (int)Math.Pow(2' i - 1);
Magic Number,Core.Terrain,Patch,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Patch.cs,BuildTopEdges,The following statement contains a magic number: i <= 6
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,Terrain,The following statement contains a magic number: _renderer = new TerrainRenderer(new Material { Ambient = Color.White' Diffuse = Color.White' Specular = new Color4(64.0f' 0' 0' 0)' Reflect = Color.Black }' this);
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,Height,The following statement contains a magic number: var c = (x + 0.5f * Width) / Info.CellSpacing;
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,Height,The following statement contains a magic number: var d = (z - 0.5f * Depth) / -Info.CellSpacing;
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,Init,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.1f' "Loading terrain from file");
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,Init,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.55f' "Building picking quadtree...");
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,GenerateRandomTerrain,The following statement contains a magic number: var hm2 = new HeightMap(Info.HeightMapWidth' Info.HeightMapHeight' 2.0f);
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,GenerateRandomTerrain,The following statement contains a magic number: hm2.Cap(hm2.MaxHeight * 0.4f);
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,SetTilePositionsAndTypes,The following statement contains a magic number: var worldX = (x * Info.CellSpacing * TileSize) + (Info.CellSpacing * TileSize / 2) - (Width / 2);
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,SetTilePositionsAndTypes,The following statement contains a magic number: var worldX = (x * Info.CellSpacing * TileSize) + (Info.CellSpacing * TileSize / 2) - (Width / 2);
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,SetTilePositionsAndTypes,The following statement contains a magic number: var worldZ = (-y * Info.CellSpacing * TileSize) - (Info.CellSpacing * TileSize / 2) + (Depth / 2);
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,SetTilePositionsAndTypes,The following statement contains a magic number: var worldZ = (-y * Info.CellSpacing * TileSize) - (Info.CellSpacing * TileSize / 2) + (Depth / 2);
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,SetTilePositionsAndTypes,The following statement contains a magic number: tile.Height < HeightMap.MaxHeight * (0.05f)
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,CalculateWalkability,The following statement contains a magic number: v <= 0.01f
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,ConnectNeighboringTiles,The following statement contains a magic number: i < 8
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,ConnectNeighboringTiles,The following statement contains a magic number: i < 8
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,GetPath,The following statement contains a magic number: i < 8
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,BuildQuadTree,The following statement contains a magic number: const float tolerance = 0.01f;
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,BuildQuadTree,The following statement contains a magic number: var minX = topLeft.X * Info.CellSpacing - Width / 2;
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,BuildQuadTree,The following statement contains a magic number: var maxX = bottomRight.X * Info.CellSpacing - Width / 2;
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,BuildQuadTree,The following statement contains a magic number: var minZ = -topLeft.Y * Info.CellSpacing + Depth / 2;
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,BuildQuadTree,The following statement contains a magic number: var maxZ = -bottomRight.Y * Info.CellSpacing + Depth / 2;
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,BuildQuadTree,The following statement contains a magic number: var width = (int)Math.Floor((bottomRight.X - topLeft.X) / 2);
Magic Number,Core.Terrain,Terrain,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\Terrain.cs,BuildQuadTree,The following statement contains a magic number: var depth = (int)Math.Floor((bottomRight.Y - topLeft.Y) / 2);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Init,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.60f' "Building terrain patches");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Init,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.65f' "Loading textures");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Init,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.70f' "Loading blendmap from file");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Init,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.95f' "Building quadtree debug vertex buffers");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,BuildQuadPatchVB,The following statement contains a magic number: var halfWidth = 0.5f * _terrain.Width;
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,BuildQuadPatchVB,The following statement contains a magic number: var halfDepth = 0.5f * _terrain.Depth;
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,BuildPatches,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.75f + 0.1f * ((float)z / (NumPatchVertRows - 2))' "Building terrain patches");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,BuildPatches,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.75f + 0.1f * ((float)z / (NumPatchVertRows - 2))' "Building terrain patches");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,BuildPatches,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.75f + 0.1f * ((float)z / (NumPatchVertRows - 2))' "Building terrain patches");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: color.Red = elev / (hm.MaxHeight) + MathF.Rand(-0.05f' 0.05f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: color.Red = elev / (hm.MaxHeight) + MathF.Rand(-0.05f' 0.05f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.05f + MathF.Rand(-0.05f' 0.05f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.05f + MathF.Rand(-0.05f' 0.05f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.05f + MathF.Rand(-0.05f' 0.05f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: color.Green = elev / hm.MaxHeight + MathF.Rand(-0.05f' 0.05f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: color.Green = elev / hm.MaxHeight + MathF.Rand(-0.05f' 0.05f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.4f + MathF.Rand(-0.15f' 0.15f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.4f + MathF.Rand(-0.15f' 0.15f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.4f + MathF.Rand(-0.15f' 0.15f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: color.Alpha = elev / hm.MaxHeight + MathF.Rand(-0.05f' 0.05f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: color.Alpha = elev / hm.MaxHeight + MathF.Rand(-0.05f' 0.05f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.75f + MathF.Rand(-0.1f' 0.1f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.75f + MathF.Rand(-0.1f' 0.1f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: elev > hm.MaxHeight * (0.75f + MathF.Rand(-0.1f' 0.1f))
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.70f + 0.05f * ((float)y / terrain.HeightMap.HeightMapHeight)' "Generating blendmap");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateBlendMap,The following statement contains a magic number: D3DApp.GD3DApp.ProgressUpdate.Draw(0.70f + 0.05f * ((float)y / terrain.HeightMap.HeightMapHeight)' "Generating blendmap");
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,SmoothBlendMap,The following statement contains a magic number: y1 < y + 2
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhVerts.AddRange(corners.Select(c => {                      var color = Color.White;                      switch (_aabCount % 4) {                          case 1:                              color = Color.Blue;                              break;                          case 2:                              color = Color.Magenta;                              break;                          case 3:                              color = Color.Yellow;                              break;                      }                      return new VertexPC(c' color);                  }));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhVerts.AddRange(corners.Select(c => {                      var color = Color.White;                      switch (_aabCount % 4) {                          case 1:                              color = Color.Blue;                              break;                          case 2:                              color = Color.Magenta;                              break;                          case 3:                              color = Color.Yellow;                              break;                      }                      return new VertexPC(c' color);                  }));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhVerts.AddRange(corners.Select(c => {                      var color = Color.White;                      switch (_aabCount % 4) {                          case 1:                              color = Color.Blue;                              break;                          case 2:                              color = Color.Magenta;                              break;                          case 3:                              color = Color.Yellow;                              break;                      }                      return new VertexPC(c' color);                  }));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: _bvhIndices.AddRange(                                       new[] { 0' 1' 1' 2' 2' 3' 3' 0' 4' 5' 5' 6' 6' 7' 7' 4' 4' 0' 5' 1' 7' 3' 6' 2 }.Select(                                                                                                                               i => i + vertBase));
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following statement contains a magic number: level == 9
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Draw,The following statement contains a magic number: var toTexSpace = Matrix.Scaling(0.5f' -0.5f' 1.0f) * Matrix.Translation(0.5f' 0.5f' 0);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Draw,The following statement contains a magic number: var toTexSpace = Matrix.Scaling(0.5f' -0.5f' 1.0f) * Matrix.Translation(0.5f' 0.5f' 0);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Draw,The following statement contains a magic number: var toTexSpace = Matrix.Scaling(0.5f' -0.5f' 1.0f) * Matrix.Translation(0.5f' 0.5f' 0);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Draw,The following statement contains a magic number: var toTexSpace = Matrix.Scaling(0.5f' -0.5f' 1.0f) * Matrix.Translation(0.5f' 0.5f' 0);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Draw,The following statement contains a magic number: Effects.TerrainFX.SetFogStart(15.0f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Draw,The following statement contains a magic number: Effects.TerrainFX.SetFogRange(175.0f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,Draw,The following statement contains a magic number: dc.DrawIndexed(_numPatchQuadFaces * 4' 0' 0);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,ComputeSsao,The following statement contains a magic number: Effects.SsaoFX.SetOcclusionRadius(0.1f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,ComputeSsao,The following statement contains a magic number: Effects.SsaoFX.SetOcclusionFadeEnd(0.75f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,ComputeSsao,The following statement contains a magic number: dc.DrawIndexed(_numPatchQuadFaces * 4' 0' 0);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,ComputeSsao,The following statement contains a magic number: ssao.BlurAmbientMap(4);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,ComputeSsao,The following statement contains a magic number: Effects.SsaoFX.SetOcclusionRadius(0.5f);
Magic Number,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,DrawToShadowMap,The following statement contains a magic number: dc.DrawIndexed(_numPatchQuadFaces * 4' 0' 0);
Magic Number,Core.Terrain,WalkMap,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,CreateWalkableTexture,The following statement contains a magic number: colors.Add((byte)(tiles[x + widthInTiles * y].Walkable ? 0 : 255));
Magic Number,Vertex,PosNormalTexTanSkinned,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Vertex.cs,PosNormalTexTanSkinned,The following statement contains a magic number: switch (index) {                          case 0:                              BoneIndices.B0 = boneIndices[index];                              break;                          case 1:                              BoneIndices.B1 = boneIndices[index];                              break;                          case 2:                              BoneIndices.B2 = boneIndices[index];                              break;                          case 3:                              BoneIndices.B3 = boneIndices[index];                              break;                      }
Magic Number,Vertex,PosNormalTexTanSkinned,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Vertex.cs,PosNormalTexTanSkinned,The following statement contains a magic number: switch (index) {                          case 0:                              BoneIndices.B0 = boneIndices[index];                              break;                          case 1:                              BoneIndices.B1 = boneIndices[index];                              break;                          case 2:                              BoneIndices.B2 = boneIndices[index];                              break;                          case 3:                              BoneIndices.B3 = boneIndices[index];                              break;                      }
Missing Default,Core,D3DApp,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\D3DApp.cs,WndProc,The following switch statement is missing a default case: switch (m.Msg) {                  case WM_ACTIVATE:                      if (m.WParam.ToInt32().LowWord() == 0) {                          AppPaused = true;                          Timer.Stop();                      } else {                          AppPaused = false;                          Timer.Start();                      }                      return true;                  case WM_SIZE:                      ClientWidth = m.LParam.ToInt32().LowWord();                      ClientHeight = m.LParam.ToInt32().HighWord();                      if (Device != null) {                          if (m.WParam.ToInt32() == 1) { // SIZE_MINIMIZED                              AppPaused = true;                              Minimized = true;                              Maximized = false;                          } else if (m.WParam.ToInt32() == 2) { // SIZE_MAXIMIZED                              AppPaused = false;                              Minimized = false;                              Maximized = true;                              OnResize();                          } else if (m.WParam.ToInt32() == 0) { // SIZE_RESTORED                              if (Minimized) {                                  AppPaused = false;                                  Minimized = false;                                  OnResize();                              } else if (Maximized) {                                  AppPaused = false;                                  Maximized = false;                                  OnResize();                              } else if (Resizing) {                                } else {                                  OnResize();                              }                          }                      }                      return true;                  case WM_DESTROY:                      _running = false;                      return true;              }
Missing Default,Core.Model,SdkMeshVertexBuffer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,ReadVertices,The following switch statement is missing a default case: switch (element.Type) {                              case DeclarationType.Float3:                                  var v3 = new Vector3(reader.ReadSingle()' reader.ReadSingle()' reader.ReadSingle());                                  switch (element.Usage) {                                      case DeclarationUsage.Position:                                          vertex.Pos = v3;                                          break;                                      case DeclarationUsage.Normal:                                          vertex.Normal = v3;                                          break;                                      case DeclarationUsage.Tangent:                                          vertex.Tan = v3;                                          break;                                  }                                  //Console.WriteLine("{0} - {1}"' element.Usage' v3);                                  break;                              case DeclarationType.Float2:                                  var v2 = new Vector2(reader.ReadSingle()' reader.ReadSingle());                                  switch (element.Usage) {                                      case DeclarationUsage.TextureCoordinate:                                          vertex.Tex = v2;                                          break;                                  }                                  //Console.WriteLine("{0} - {1}"' element.Usage' v2);                                  break;                          }
Missing Default,Core.Model,SdkMeshVertexBuffer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,ReadVertices,The following switch statement is missing a default case: switch (element.Usage) {                                      case DeclarationUsage.Position:                                          vertex.Pos = v3;                                          break;                                      case DeclarationUsage.Normal:                                          vertex.Normal = v3;                                          break;                                      case DeclarationUsage.Tangent:                                          vertex.Tan = v3;                                          break;                                  }
Missing Default,Core.Model,SdkMeshVertexBuffer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Model\SDKMesh.cs,ReadVertices,The following switch statement is missing a default case: switch (element.Usage) {                                      case DeclarationUsage.TextureCoordinate:                                          vertex.Tex = v2;                                          break;                                  }
Missing Default,Core.Terrain,TerrainRenderer,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Terrain\TerrainRenderer.cs,GetQuadTreeVerticesAndIndices,The following switch statement is missing a default case: switch (_aabCount % 4) {                          case 1:                              color = Color.Blue;                              break;                          case 2:                              color = Color.Magenta;                              break;                          case 3:                              color = Color.Yellow;                              break;                      }
Missing Default,Vertex,PosNormalTexTanSkinned,D:\research\architectureSmells\repos\ericrrichards_dx11\DX11\Core\Vertex.cs,PosNormalTexTanSkinned,The following switch statement is missing a default case: switch (index) {                          case 0:                              BoneIndices.B0 = boneIndices[index];                              break;                          case 1:                              BoneIndices.B1 = boneIndices[index];                              break;                          case 2:                              BoneIndices.B2 = boneIndices[index];                              break;                          case 3:                              BoneIndices.B3 = boneIndices[index];                              break;                      }
