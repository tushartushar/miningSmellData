Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,UpdateScene,Cyclomatic complexity of the method is 12
Long Statement,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,BuildInstancedBuffer,The length of the statement  "            var bd = new BufferDescription(Marshal.SizeOf(typeof(Matrix)) * NumTrees' ResourceUsage.Dynamic' BindFlags.VertexBuffer' CpuAccessFlags.Write' ResourceOptionFlags.None' 0); " is 172.
Long Statement,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,DrawScene,The length of the statement  "            ImmediateContext.ClearDepthStencilView(DepthStencilView' DepthStencilClearFlags.Depth | DepthStencilClearFlags.Stencil' 1.0f' 0); " is 129.
Long Statement,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,DrawScene,The length of the statement  "                        _treeModel.ModelMesh.DrawInstanced(ImmediateContext' i' _instanceBuffer' _visibleTrees' Marshal.SizeOf(typeof(Matrix))); " is 120.
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,TerrainDemo,The following statement contains a magic number: _camera = new LookAtCamera {                  Position = new Vector3(0' 20' 100)              };
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,TerrainDemo,The following statement contains a magic number: _camera = new LookAtCamera {                  Position = new Vector3(0' 20' 100)              };
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,Init,The following statement contains a magic number: var tii = new InitInfo {                  HeightMapFilename = "Textures/terrain.raw"'                  LayerMapFilename0 = "textures/grass.dds"'                  LayerMapFilename1 = "textures/darkdirt.dds"'                  LayerMapFilename2 = "textures/stone.dds"'                  LayerMapFilename3 = "Textures/lightdirt.dds"'                  LayerMapFilename4 = "textures/snow.dds"'                  BlendMapFilename = "textures/blend.dds"'                  HeightScale = 50.0f'                  HeightMapWidth = 2049'                  HeightMapHeight = 2049'                  CellSpacing = 0.5f              };
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,Init,The following statement contains a magic number: var tii = new InitInfo {                  HeightMapFilename = "Textures/terrain.raw"'                  LayerMapFilename0 = "textures/grass.dds"'                  LayerMapFilename1 = "textures/darkdirt.dds"'                  LayerMapFilename2 = "textures/stone.dds"'                  LayerMapFilename3 = "Textures/lightdirt.dds"'                  LayerMapFilename4 = "textures/snow.dds"'                  BlendMapFilename = "textures/blend.dds"'                  HeightScale = 50.0f'                  HeightMapWidth = 2049'                  HeightMapHeight = 2049'                  CellSpacing = 0.5f              };
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,Init,The following statement contains a magic number: for (var i = 0; i < NumTrees; i++) {                  var good = false;                  var x = MathF.Rand(0' _terrain.Width);                  var z = MathF.Rand(0' _terrain.Depth);                  while (!good) {                                              if (_terrain.Height(x' z) < 12.0f) {                          good = true;                      }                      x = MathF.Rand(-_terrain.Width/2' _terrain.Width/2);                      z = MathF.Rand(-_terrain.Depth/2' _terrain.Depth/2);                  }                  var treeInstance = new BasicModelInstance(_treeModel) {                                            World = Matrix.RotationX(MathF.PI / 2) * Matrix.Translation(x' _terrain.Height(x' z)' z)                  };                  _treeInstances.Add(treeInstance);              }
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,Init,The following statement contains a magic number: for (var i = 0; i < NumTrees; i++) {                  var good = false;                  var x = MathF.Rand(0' _terrain.Width);                  var z = MathF.Rand(0' _terrain.Depth);                  while (!good) {                                              if (_terrain.Height(x' z) < 12.0f) {                          good = true;                      }                      x = MathF.Rand(-_terrain.Width/2' _terrain.Width/2);                      z = MathF.Rand(-_terrain.Depth/2' _terrain.Depth/2);                  }                  var treeInstance = new BasicModelInstance(_treeModel) {                                            World = Matrix.RotationX(MathF.PI / 2) * Matrix.Translation(x' _terrain.Height(x' z)' z)                  };                  _treeInstances.Add(treeInstance);              }
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,Init,The following statement contains a magic number: for (var i = 0; i < NumTrees; i++) {                  var good = false;                  var x = MathF.Rand(0' _terrain.Width);                  var z = MathF.Rand(0' _terrain.Depth);                  while (!good) {                                              if (_terrain.Height(x' z) < 12.0f) {                          good = true;                      }                      x = MathF.Rand(-_terrain.Width/2' _terrain.Width/2);                      z = MathF.Rand(-_terrain.Depth/2' _terrain.Depth/2);                  }                  var treeInstance = new BasicModelInstance(_treeModel) {                                            World = Matrix.RotationX(MathF.PI / 2) * Matrix.Translation(x' _terrain.Height(x' z)' z)                  };                  _treeInstances.Add(treeInstance);              }
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,Init,The following statement contains a magic number: for (var i = 0; i < NumTrees; i++) {                  var good = false;                  var x = MathF.Rand(0' _terrain.Width);                  var z = MathF.Rand(0' _terrain.Depth);                  while (!good) {                                              if (_terrain.Height(x' z) < 12.0f) {                          good = true;                      }                      x = MathF.Rand(-_terrain.Width/2' _terrain.Width/2);                      z = MathF.Rand(-_terrain.Depth/2' _terrain.Depth/2);                  }                  var treeInstance = new BasicModelInstance(_treeModel) {                                            World = Matrix.RotationX(MathF.PI / 2) * Matrix.Translation(x' _terrain.Height(x' z)' z)                  };                  _treeInstances.Add(treeInstance);              }
Magic Number,TerrainDemo,TerrainDemo,C:\repos\ericrrichards_dx11\DX11\TerrainDemo\TerrainDemo.cs,Init,The following statement contains a magic number: for (var i = 0; i < NumTrees; i++) {                  var good = false;                  var x = MathF.Rand(0' _terrain.Width);                  var z = MathF.Rand(0' _terrain.Depth);                  while (!good) {                                              if (_terrain.Height(x' z) < 12.0f) {                          good = true;                      }                      x = MathF.Rand(-_terrain.Width/2' _terrain.Width/2);                      z = MathF.Rand(-_terrain.Depth/2' _terrain.Depth/2);                  }                  var treeInstance = new BasicModelInstance(_treeModel) {                                            World = Matrix.RotationX(MathF.PI / 2) * Matrix.Translation(x' _terrain.Height(x' z)' z)                  };                  _treeInstances.Add(treeInstance);              }
