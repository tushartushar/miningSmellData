Implementation smell,Namespace,Class,File,Method,Description
Complex Method,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,UpdateScene,Cyclomatic complexity of the method is 10
Long Statement,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The length of the statement  "            _sphereModel.Materials[0] = new Material { Ambient = Color.Blue' Diffuse = Color.Blue' Specular = new Color4(64.0f' 1.0f' 1.0f' 1.0f) }; " is 136.
Long Statement,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The length of the statement  "            _cylinderModel.Materials[0] = new Material { Ambient = Color.Green' Diffuse = Color.Green' Specular = new Color4(64.0f' 1.0f' 1.0f' 1.0f) }; " is 140.
Long Statement,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,DrawScene,The length of the statement  "            ImmediateContext.ClearDepthStencilView(DepthStencilView' DepthStencilClearFlags.Depth | DepthStencilClearFlags.Stencil' 1.0f' 0); " is 129.
Magic Number,_34_Ballistic,AmmoRound,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Render,The following statement contains a magic number: Model.World = Matrix.Scaling(new Vector3(1 + Particle.Mass / 100)) * Matrix.Translation(position);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,BallisticDemo,The following statement contains a magic number: _camera.LookAt(new Vector3(10' 2' -10)' new Vector3(0' 1' 0)' Vector3.UnitY);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,BallisticDemo,The following statement contains a magic number: _camera.LookAt(new Vector3(10' 2' -10)' new Vector3(0' 1' 0)' Vector3.UnitY);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,BallisticDemo,The following statement contains a magic number: _camera.LookAt(new Vector3(10' 2' -10)' new Vector3(0' 1' 0)' Vector3.UnitY);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _gridModel.CreateGrid(Device' 20' 20' 40' 40);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _gridModel.CreateGrid(Device' 20' 20' 40' 40);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _gridModel.CreateGrid(Device' 20' 20' 40' 40);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _gridModel.CreateGrid(Device' 20' 20' 40' 40);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _gridModel.Materials[0] = new Material { Diffuse = Color.SaddleBrown' Specular = new Color4(16' .9f' .9f' .9f) };
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _sphereModel.CreateSphere(Device' 0.3f' 5' 4);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _sphereModel.CreateSphere(Device' 0.3f' 5' 4);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _cylinderModel.CreateCylinder(Device' 1' 1' 3' 20' 20);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _cylinderModel.CreateCylinder(Device' 1' 1' 3' 20' 20);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _cylinderModel.CreateCylinder(Device' 1' 1' 3' 20' 20);
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _grid = new BasicModelInstance(_gridModel) {                  TexTransform = Matrix.Scaling(10' 10' 1)'                  World = Matrix.Scaling(10' 1' 10) * Matrix.Translation(0' 0' 90)              };
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _grid = new BasicModelInstance(_gridModel) {                  TexTransform = Matrix.Scaling(10' 10' 1)'                  World = Matrix.Scaling(10' 1' 10) * Matrix.Translation(0' 0' 90)              };
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _grid = new BasicModelInstance(_gridModel) {                  TexTransform = Matrix.Scaling(10' 10' 1)'                  World = Matrix.Scaling(10' 1' 10) * Matrix.Translation(0' 0' 90)              };
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _grid = new BasicModelInstance(_gridModel) {                  TexTransform = Matrix.Scaling(10' 10' 1)'                  World = Matrix.Scaling(10' 1' 10) * Matrix.Translation(0' 0' 90)              };
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Init,The following statement contains a magic number: _grid = new BasicModelInstance(_gridModel) {                  TexTransform = Matrix.Scaling(10' 10' 1)'                  World = Matrix.Scaling(10' 1' 10) * Matrix.Translation(0' 0' 90)              };
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Fire,The following statement contains a magic number: switch (_currentShotType) {                  case ShotType.Pistol:                      shot.Particle = new Particle(firingPoint'                          new Vector3(0' 0' 35)' // 35 m/s                          new Vector3(0' -1' 0)' // small amount of gravity                          2.0f // 2 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Artillery:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 30' 40)' // 50 m/s                          new Vector3(0' -20' 0)' // large amount of gravity                          200.0f // 200 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Fireball:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 10)' // 10 m/s                          new Vector3(0' 0.6f' 0)' // float up slightly                          1.0f // 1 kg                          ) { Damping = 0.9f };                      break;                  case ShotType.Laser:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 100)' // 100 m/s                          new Vector3(0' 0' 0)'  // no gravity                          0.1f // 100 grams                          ) { Damping = 0.99f };                      break;              }
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Fire,The following statement contains a magic number: switch (_currentShotType) {                  case ShotType.Pistol:                      shot.Particle = new Particle(firingPoint'                          new Vector3(0' 0' 35)' // 35 m/s                          new Vector3(0' -1' 0)' // small amount of gravity                          2.0f // 2 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Artillery:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 30' 40)' // 50 m/s                          new Vector3(0' -20' 0)' // large amount of gravity                          200.0f // 200 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Fireball:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 10)' // 10 m/s                          new Vector3(0' 0.6f' 0)' // float up slightly                          1.0f // 1 kg                          ) { Damping = 0.9f };                      break;                  case ShotType.Laser:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 100)' // 100 m/s                          new Vector3(0' 0' 0)'  // no gravity                          0.1f // 100 grams                          ) { Damping = 0.99f };                      break;              }
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Fire,The following statement contains a magic number: switch (_currentShotType) {                  case ShotType.Pistol:                      shot.Particle = new Particle(firingPoint'                          new Vector3(0' 0' 35)' // 35 m/s                          new Vector3(0' -1' 0)' // small amount of gravity                          2.0f // 2 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Artillery:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 30' 40)' // 50 m/s                          new Vector3(0' -20' 0)' // large amount of gravity                          200.0f // 200 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Fireball:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 10)' // 10 m/s                          new Vector3(0' 0.6f' 0)' // float up slightly                          1.0f // 1 kg                          ) { Damping = 0.9f };                      break;                  case ShotType.Laser:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 100)' // 100 m/s                          new Vector3(0' 0' 0)'  // no gravity                          0.1f // 100 grams                          ) { Damping = 0.99f };                      break;              }
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Fire,The following statement contains a magic number: switch (_currentShotType) {                  case ShotType.Pistol:                      shot.Particle = new Particle(firingPoint'                          new Vector3(0' 0' 35)' // 35 m/s                          new Vector3(0' -1' 0)' // small amount of gravity                          2.0f // 2 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Artillery:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 30' 40)' // 50 m/s                          new Vector3(0' -20' 0)' // large amount of gravity                          200.0f // 200 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Fireball:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 10)' // 10 m/s                          new Vector3(0' 0.6f' 0)' // float up slightly                          1.0f // 1 kg                          ) { Damping = 0.9f };                      break;                  case ShotType.Laser:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 100)' // 100 m/s                          new Vector3(0' 0' 0)'  // no gravity                          0.1f // 100 grams                          ) { Damping = 0.99f };                      break;              }
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Fire,The following statement contains a magic number: switch (_currentShotType) {                  case ShotType.Pistol:                      shot.Particle = new Particle(firingPoint'                          new Vector3(0' 0' 35)' // 35 m/s                          new Vector3(0' -1' 0)' // small amount of gravity                          2.0f // 2 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Artillery:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 30' 40)' // 50 m/s                          new Vector3(0' -20' 0)' // large amount of gravity                          200.0f // 200 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Fireball:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 10)' // 10 m/s                          new Vector3(0' 0.6f' 0)' // float up slightly                          1.0f // 1 kg                          ) { Damping = 0.9f };                      break;                  case ShotType.Laser:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 100)' // 100 m/s                          new Vector3(0' 0' 0)'  // no gravity                          0.1f // 100 grams                          ) { Damping = 0.99f };                      break;              }
Magic Number,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Fire,The following statement contains a magic number: switch (_currentShotType) {                  case ShotType.Pistol:                      shot.Particle = new Particle(firingPoint'                          new Vector3(0' 0' 35)' // 35 m/s                          new Vector3(0' -1' 0)' // small amount of gravity                          2.0f // 2 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Artillery:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 30' 40)' // 50 m/s                          new Vector3(0' -20' 0)' // large amount of gravity                          200.0f // 200 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Fireball:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 10)' // 10 m/s                          new Vector3(0' 0.6f' 0)' // float up slightly                          1.0f // 1 kg                          ) { Damping = 0.9f };                      break;                  case ShotType.Laser:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 100)' // 100 m/s                          new Vector3(0' 0' 0)'  // no gravity                          0.1f // 100 grams                          ) { Damping = 0.99f };                      break;              }
Missing Default,_34_Ballistic,BallisticDemo,C:\repos\ericrrichards_dx11\DX11\34-Ballistic\BallisticDemo.cs,Fire,The following switch statement is missing a default case: switch (_currentShotType) {                  case ShotType.Pistol:                      shot.Particle = new Particle(firingPoint'                          new Vector3(0' 0' 35)' // 35 m/s                          new Vector3(0' -1' 0)' // small amount of gravity                          2.0f // 2 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Artillery:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 30' 40)' // 50 m/s                          new Vector3(0' -20' 0)' // large amount of gravity                          200.0f // 200 kg                          ) { Damping = 0.99f };                      break;                  case ShotType.Fireball:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 10)' // 10 m/s                          new Vector3(0' 0.6f' 0)' // float up slightly                          1.0f // 1 kg                          ) { Damping = 0.9f };                      break;                  case ShotType.Laser:                      shot.Particle = new Particle(                          firingPoint'                          new Vector3(0' 0' 100)' // 100 m/s                          new Vector3(0' 0' 0)'  // no gravity                          0.1f // 100 grams                          ) { Damping = 0.99f };                      break;              }
