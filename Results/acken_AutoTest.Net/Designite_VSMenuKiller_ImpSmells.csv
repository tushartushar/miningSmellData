Implementation smell,Namespace,Class,File,Method,Description
Complex Method,VSMenuKiller,Program,C:\repos\acken_AutoTest.Net\addins\VisualStudio\VSMenuKiller\Program.cs,Main,Cyclomatic complexity of the method is 8
Long Statement,VSMenuKiller,objectExtensions,C:\repos\acken_AutoTest.Net\addins\VisualStudio\VSMenuKiller\Program.cs,Invoke,The length of the statement  "            return obj.GetType().InvokeMember(methodName' System.Reflection.BindingFlags.InvokeMethod' null' obj' new object[] { }); " is 120.
Long Statement,VSMenuKiller,objectExtensions,C:\repos\acken_AutoTest.Net\addins\VisualStudio\VSMenuKiller\Program.cs,Invoke,The length of the statement  "            return (T) obj.GetType().InvokeMember(methodName' System.Reflection.BindingFlags.InvokeMethod' null' obj' new object[] { }); " is 124.
Long Statement,VSMenuKiller,objectExtensions,C:\repos\acken_AutoTest.Net\addins\VisualStudio\VSMenuKiller\Program.cs,Get,The length of the statement  "            return obj.GetType().InvokeMember(propertyName' System.Reflection.BindingFlags.GetProperty' null' obj' new object[] { }); " is 121.
Long Statement,VSMenuKiller,objectExtensions,C:\repos\acken_AutoTest.Net\addins\VisualStudio\VSMenuKiller\Program.cs,Get,The length of the statement  "            return (T) obj.GetType().InvokeMember(propertyName' System.Reflection.BindingFlags.GetProperty' null' obj' new object[] { }); " is 125.
Magic Number,VSMenuKiller,Program,C:\repos\acken_AutoTest.Net\addins\VisualStudio\VSMenuKiller\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length < 3)                      throw new Exception("Usage 'VisualStudio.DTE.10.0' 'MenuBar' 'AutoTest.Net' ['SomeMenu'] [--non-recursive]");                    object control = null;                  var dte = getDte(args[0]);                  var nonRecursive = args.Count(x => x.Equals("--non-recursive")) > 0;                  IEnumerator controls = getCommandBars(dte' args[1]);                  for (int i = 2; i < args.Length; i++)                  {                      if (args[i].StartsWith("--"))                          continue;                      control = getControl(controls' args[i]);                      controls = getControls(control);                  }                    if (control == null)                  {                      Console.WriteLine("Specified menu was not found");                      return;                  }                    var toDelete = new List<object>();                  if (!nonRecursive)                  {                      while (controls.MoveNext())                      {                          toDelete.Add(controls.Current);                      }                  }                  toDelete.Add(control);                    foreach (var ctl in toDelete)                  {                      try                      {                          Console.WriteLine("Deleting. " + ctl.Get<string>("accName"));                          ctl.Invoke("Delete");                      }                      catch (Exception ex)                      {                          Console.WriteLine(ex.Message);                      }                  }                    Thread.Sleep(1000);                  dte.Invoke("Quit");                    Console.WriteLine("Done");              }              catch (Exception ex)              {                  Console.WriteLine(ex.ToString());              }
Magic Number,VSMenuKiller,Program,C:\repos\acken_AutoTest.Net\addins\VisualStudio\VSMenuKiller\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length < 3)                      throw new Exception("Usage 'VisualStudio.DTE.10.0' 'MenuBar' 'AutoTest.Net' ['SomeMenu'] [--non-recursive]");                    object control = null;                  var dte = getDte(args[0]);                  var nonRecursive = args.Count(x => x.Equals("--non-recursive")) > 0;                  IEnumerator controls = getCommandBars(dte' args[1]);                  for (int i = 2; i < args.Length; i++)                  {                      if (args[i].StartsWith("--"))                          continue;                      control = getControl(controls' args[i]);                      controls = getControls(control);                  }                    if (control == null)                  {                      Console.WriteLine("Specified menu was not found");                      return;                  }                    var toDelete = new List<object>();                  if (!nonRecursive)                  {                      while (controls.MoveNext())                      {                          toDelete.Add(controls.Current);                      }                  }                  toDelete.Add(control);                    foreach (var ctl in toDelete)                  {                      try                      {                          Console.WriteLine("Deleting. " + ctl.Get<string>("accName"));                          ctl.Invoke("Delete");                      }                      catch (Exception ex)                      {                          Console.WriteLine(ex.Message);                      }                  }                    Thread.Sleep(1000);                  dte.Invoke("Quit");                    Console.WriteLine("Done");              }              catch (Exception ex)              {                  Console.WriteLine(ex.ToString());              }
Magic Number,VSMenuKiller,Program,C:\repos\acken_AutoTest.Net\addins\VisualStudio\VSMenuKiller\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length < 3)                      throw new Exception("Usage 'VisualStudio.DTE.10.0' 'MenuBar' 'AutoTest.Net' ['SomeMenu'] [--non-recursive]");                    object control = null;                  var dte = getDte(args[0]);                  var nonRecursive = args.Count(x => x.Equals("--non-recursive")) > 0;                  IEnumerator controls = getCommandBars(dte' args[1]);                  for (int i = 2; i < args.Length; i++)                  {                      if (args[i].StartsWith("--"))                          continue;                      control = getControl(controls' args[i]);                      controls = getControls(control);                  }                    if (control == null)                  {                      Console.WriteLine("Specified menu was not found");                      return;                  }                    var toDelete = new List<object>();                  if (!nonRecursive)                  {                      while (controls.MoveNext())                      {                          toDelete.Add(controls.Current);                      }                  }                  toDelete.Add(control);                    foreach (var ctl in toDelete)                  {                      try                      {                          Console.WriteLine("Deleting. " + ctl.Get<string>("accName"));                          ctl.Invoke("Delete");                      }                      catch (Exception ex)                      {                          Console.WriteLine(ex.Message);                      }                  }                    Thread.Sleep(1000);                  dte.Invoke("Quit");                    Console.WriteLine("Done");              }              catch (Exception ex)              {                  Console.WriteLine(ex.ToString());              }
