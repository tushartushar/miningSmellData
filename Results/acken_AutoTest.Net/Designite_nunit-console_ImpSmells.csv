Implementation smell,Namespace,Class,File,Method,Description
Long Method,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,Execute,The method has 140 lines of code.
Complex Method,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,Execute,Cyclomatic complexity of the method is 33
Complex Method,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,MakeTestPackage,Cyclomatic complexity of the method is 10
Complex Method,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,WriteErrorsAndFailures,Cyclomatic complexity of the method is 8
Complex Method,NUnit.ConsoleRunner,EventCollector,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\EventCollector.cs,TestFinished,Cyclomatic complexity of the method is 26
Complex Method,NUnit.ConsoleRunner,Runner,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\Runner.cs,Main,Cyclomatic complexity of the method is 13
Complex Method,NUnit.ConsoleRunner,TestNameParser,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\TestNameParser.cs,GetSeparator,Cyclomatic complexity of the method is 15
Long Statement,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,Execute,The length of the statement  "	ProcessModel processModel = package.Settings.Contains ("ProcessModel") ? (ProcessModel)package.Settings ["ProcessModel"] : ProcessModel.Default; " is 144.
Long Statement,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,Execute,The length of the statement  "	DomainUsage domainUsage = package.Settings.Contains ("DomainUsage") ? (DomainUsage)package.Settings ["DomainUsage"] : DomainUsage.Default; " is 138.
Long Statement,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,Execute,The length of the statement  "	RuntimeFramework framework = package.Settings.Contains ("RuntimeFramework") ? (RuntimeFramework)package.Settings ["RuntimeFramework"] : RuntimeFramework.CurrentFramework; " is 170.
Long Statement,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,WriteSummaryReport,The length of the statement  "	Console.WriteLine ("Tests run: {0}' Errors: {1}' Failures: {2}' Inconclusive: {3}' Time: {4} seconds"' summary.TestsRun' summary.Errors' summary.Failures' summary.Inconclusive' summary.Time); " is 191.
Long Statement,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,WriteSummaryReport,The length of the statement  "	Console.WriteLine ("  Not run: {0}' Invalid: {1}' Ignored: {2}' Skipped: {3}"' summary.TestsNotRun' summary.NotRunnable' summary.Ignored' summary.Skipped); " is 155.
Long Statement,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,WriteSingleResult,The length of the statement  "	string status = result.IsFailure || result.IsError ? string.Format ("{0} {1}"' result.FailureSite' result.ResultState) : result.ResultState.ToString (); " is 152.
Long Statement,NUnit.ConsoleRunner,ConsoleUi,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\ConsoleUi.cs,WriteSingleResult,The length of the statement  "		Console.WriteLine (result.IsFailure ? StackTraceFilter.Filter (result.StackTrace) : result.StackTrace + Environment.NewLine); " is 125.
Long Statement,NUnit.ConsoleRunner,Runner,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\Runner.cs,Main,The length of the statement  "	InternalTraceLevel level = (InternalTraceLevel)settingsService.GetSetting ("Options.InternalTraceLevel"' InternalTraceLevel.Default); " is 133.
Long Statement,NUnit.ConsoleRunner,Runner,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\Runner.cs,WriteCopyright,The length of the statement  "	string copyrightText = "Copyright (C) 2002-2012 Charlie Poole.\r\nCopyright (C) 2002-2004 James W. Newkirk' Michael C. Two' Alexei A. Vorontsov.\r\nCopyright (C) 2000-2002 Philip Craig.\r\nAll Rights Reserved."; " is 211.
Missing Default,NUnit.ConsoleRunner,EventCollector,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\EventCollector.cs,TestFinished,The following switch statement is missing a default case: switch (testResult.ResultState) {  case ResultState.Error:  case ResultState.Failure:  case ResultState.Cancelled:  	testRunCount++;  	failureCount++;  	if (progress)  		Console.Write ("F");  	messages.Add (string.Format ("{0}) {1} :"' failureCount' testResult.Test.TestName.FullName));  	messages.Add (testResult.Message.Trim (Environment.NewLine.ToCharArray ()));  	string stackTrace = StackTraceFilter.Filter (testResult.StackTrace);  	if (stackTrace != null && stackTrace != string.Empty) {  		string[] trace = stackTrace.Split (System.Environment.NewLine.ToCharArray ());  		foreach (string s in trace) {  			if (s != string.Empty) {  				string link = Regex.Replace (s.Trim ()' @".* in (.*):line (.*)"' "$1($2)");  				messages.Add (string.Format ("at\n{0}"' link));  			}  		}  	}  	break;  case ResultState.Inconclusive:  case ResultState.Success:  	testRunCount++;  	break;  case ResultState.Ignored:  case ResultState.Skipped:  case ResultState.NotRunnable:  	testIgnoreCount++;  	if (progress)  		Console.Write ("N");  	break;  }  
Missing Default,NUnit.ConsoleRunner,EventCollector,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\EventCollector.cs,TestOutput,The following switch statement is missing a default case: switch (output.Type) {  case TestOutputType.Out:  	outWriter.Write (output.Text);  	break;  case TestOutputType.Error:  	errorWriter.Write (output.Text);  	break;  }  
Missing Default,NUnit.ConsoleRunner,TestNameParser,F:\newReposMay17\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.6.0.12051\src\ConsoleRunner\nunit-console\TestNameParser.cs,GetSeparator,The following switch statement is missing a default case: switch (argument [index]) {  case ''':  	if (nest == 0)  		return index;  	break;  case '"':  	while (++index < argument.Length && argument [index] != '"')  		;  	break;  case '(':  case '<':  	nest++;  	break;  case ')':  case '>':  	nest--;  	break;  }  
