Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AutoTest.TestRunners.NUnit,Runner,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\Runner.cs,IsTest,The length of the statement  "                return (method.Attributes.Contains("NUnit.Framework.TestAttribute") || method.Attributes.Contains("NUnit.Framework.TestCaseAttribute")) &&" is 138.
Long Statement,AutoTest.TestRunners.NUnit,TestHarvester,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\TestHarvester.cs,TestFinished,The length of the statement  "                    var failure = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Failed' testResult.Message); " is 262.
Long Statement,AutoTest.TestRunners.NUnit,TestHarvester,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\TestHarvester.cs,TestFinished,The length of the statement  "                    var success = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Passed' testResult.Message); " is 262.
Long Statement,AutoTest.TestRunners.NUnit,TestHarvester,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\TestHarvester.cs,TestFinished,The length of the statement  "                    var ignoreResult = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Ignored' testResult.Message); " is 268.
Long Statement,AutoTest.TestRunners.NUnit,TestHarvester,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\TestHarvester.cs,UnhandledException,The length of the statement  "            _results.Add(new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' ""' 0' "Unhandled exception"' TestRunners.Shared.Results.TestState.Panic' exception.ToString())); " is 187.
Magic Number,AutoTest.TestRunners.NUnit,TestHarvester,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\TestHarvester.cs,TestFinished,The following statement contains a magic number: switch (testResult.ResultState)              {                  case ResultState.Error:                  case ResultState.Failure:                  case ResultState.Cancelled:                      var failure = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Failed' testResult.Message);                      failure.AddStackLines(getStackLines(testResult).ToArray());                      _results.Add(failure);                      _channel.TestFinished(failure);                      break;                    case ResultState.Success:                      var success = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Passed' testResult.Message);                      _results.Add(success);                      _channel.TestFinished(success);                      break;                    case ResultState.Inconclusive:                  case ResultState.Ignored:                  case ResultState.Skipped:                  case ResultState.NotRunnable:                      var ignoreResult = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Ignored' testResult.Message);                      ignoreResult.AddStackLines(getStackLines(testResult).ToArray());                      _results.Add(ignoreResult);                      _channel.TestFinished(ignoreResult);                      break;              }
Magic Number,AutoTest.TestRunners.NUnit,TestHarvester,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\TestHarvester.cs,TestFinished,The following statement contains a magic number: switch (testResult.ResultState)              {                  case ResultState.Error:                  case ResultState.Failure:                  case ResultState.Cancelled:                      var failure = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Failed' testResult.Message);                      failure.AddStackLines(getStackLines(testResult).ToArray());                      _results.Add(failure);                      _channel.TestFinished(failure);                      break;                    case ResultState.Success:                      var success = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Passed' testResult.Message);                      _results.Add(success);                      _channel.TestFinished(success);                      break;                    case ResultState.Inconclusive:                  case ResultState.Ignored:                  case ResultState.Skipped:                  case ResultState.NotRunnable:                      var ignoreResult = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Ignored' testResult.Message);                      ignoreResult.AddStackLines(getStackLines(testResult).ToArray());                      _results.Add(ignoreResult);                      _channel.TestFinished(ignoreResult);                      break;              }
Magic Number,AutoTest.TestRunners.NUnit,TestHarvester,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\TestHarvester.cs,TestFinished,The following statement contains a magic number: switch (testResult.ResultState)              {                  case ResultState.Error:                  case ResultState.Failure:                  case ResultState.Cancelled:                      var failure = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Failed' testResult.Message);                      failure.AddStackLines(getStackLines(testResult).ToArray());                      _results.Add(failure);                      _channel.TestFinished(failure);                      break;                    case ResultState.Success:                      var success = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Passed' testResult.Message);                      _results.Add(success);                      _channel.TestFinished(success);                      break;                    case ResultState.Inconclusive:                  case ResultState.Ignored:                  case ResultState.Skipped:                  case ResultState.NotRunnable:                      var ignoreResult = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Ignored' testResult.Message);                      ignoreResult.AddStackLines(getStackLines(testResult).ToArray());                      _results.Add(ignoreResult);                      _channel.TestFinished(ignoreResult);                      break;              }
Missing Default,AutoTest.TestRunners.NUnit,TestHarvester,D:\research\architectureSmells\repos\acken_AutoTest.Net\src\AutoTest.TestRunner\Plugins\AutoTest.TestRunners.NUnit\TestHarvester.cs,TestFinished,The following switch statement is missing a default case: switch (testResult.ResultState)              {                  case ResultState.Error:                  case ResultState.Failure:                  case ResultState.Cancelled:                      var failure = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Failed' testResult.Message);                      failure.AddStackLines(getStackLines(testResult).ToArray());                      _results.Add(failure);                      _channel.TestFinished(failure);                      break;                    case ResultState.Success:                      var success = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Passed' testResult.Message);                      _results.Add(success);                      _channel.TestFinished(success);                      break;                    case ResultState.Inconclusive:                  case ResultState.Ignored:                  case ResultState.Skipped:                  case ResultState.NotRunnable:                      var ignoreResult = new AutoTest.TestRunners.Shared.Results.TestResult("NUnit"' currentAssembly' getFixture(testResult.Test.TestName.FullName)' testResult.Time * 1000' testResult.Test.TestName.FullName' TestRunners.Shared.Results.TestState.Ignored' testResult.Message);                      ignoreResult.AddStackLines(getStackLines(testResult).ToArray());                      _results.Add(ignoreResult);                      _channel.TestFinished(ignoreResult);                      break;              }
