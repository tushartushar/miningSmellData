Implementation smell,Namespace,Class,File,Method,Description
Long Method,NUnit.Core,PlatformHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\PlatformHelper.cs,IsPlatformSupported,The method has 109 lines of code.
Long Method,NUnit.Core.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\NUnitTestCaseBuilder.cs,CheckTestMethodSignature,The method has 105 lines of code.
Complex Method,NUnit.Core,ExpectedExceptionProcessor,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\ExpectedExceptionProcessor.cs,ProcessException,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Core,MethodHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\MethodHelper.cs,GetDisplayString,Cyclomatic complexity of the method is 30
Complex Method,NUnit.Core,MethodHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\MethodHelper.cs,EscapeControlChar,Cyclomatic complexity of the method is 13
Complex Method,NUnit.Core,NUnitConfiguration,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\NUnitConfiguration.cs,GetNUnitBinDirectory,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Core,NUnitFramework,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\NUnitFramework.cs,ApplyCommonAttributes,Cyclomatic complexity of the method is 23
Complex Method,NUnit.Core,PlatformHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\PlatformHelper.cs,IsPlatformSupported,Cyclomatic complexity of the method is 31
Complex Method,NUnit.Core,TestSuiteBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\TestSuiteBuilder.cs,Build,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Core,TypeHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\TypeHelper.cs,GetDisplayName,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Core,TypeHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\TypeHelper.cs,GetDisplayName,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Core,TypeHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\TypeHelper.cs,BestCommonType,Cyclomatic complexity of the method is 27
Complex Method,NUnit.Core,TypeHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\TypeHelper.cs,CanDeduceTypeArgsFromArgs,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Core.Builders,DatapointProvider,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\DatapointProvider.cs,GetDataFor,Cyclomatic complexity of the method is 12
Complex Method,NUnit.Core.Builders,LegacySuiteBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\LegacySuiteBuilder.cs,BuildFrom,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Core.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\NUnitTestCaseBuilder.cs,BuildParameterizedMethodSuite,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Core.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\NUnitTestCaseBuilder.cs,BuildSingleTestMethod,Cyclomatic complexity of the method is 12
Complex Method,NUnit.Core.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\NUnitTestCaseBuilder.cs,CheckTestMethodSignature,Cyclomatic complexity of the method is 15
Complex Method,NUnit.Core.Builders,NUnitTestFixtureBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\NUnitTestFixtureBuilder.cs,GetTestFixtureAttributes,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Core.Builders,PairwiseTestCaseGenerator,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\PairwiseStrategy.cs,ExtendTupleSet,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Core.Builders,PairwiseTestCaseGenerator,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\PairwiseStrategy.cs,MaximizeCoverage,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Core.Builders,TestCaseParameterProvider,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\TestCaseParameterProvider.cs,GetTestCasesFor,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Core.Builders,TestCaseParameterProvider,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\TestCaseParameterProvider.cs,PerformSpecialConversions,Cyclomatic complexity of the method is 10
Long Parameter List,NUnit.Core,TestSuite,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\TestSuite.cs,MarkTestsNotRun,The method has 6 parameters. Parameters: tests' resultState' ignoreReason' suiteResult' listener' filter
Long Parameter List,NUnit.Core,TestSuite,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\TestSuite.cs,MarkTestNotRun,The method has 6 parameters. Parameters: test' resultState' ignoreReason' suiteResult' listener' filter
Long Statement,NUnit.Core.Builders,DatapointProvider,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\DatapointProvider.cs,HasDataFor,The length of the statement  "            foreach (MemberInfo member in fixtureType.GetMembers(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance)) " is 145.
Long Statement,NUnit.Core.Builders,DatapointProvider,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\DatapointProvider.cs,GetDataFor,The length of the statement  "            foreach (MemberInfo member in fixtureType.GetMembers(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance)) " is 145.
Complex Conditional,NUnit.Core,NUnitFramework,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\NUnitFramework.cs,CheckSetUpTearDownMethods,The conditional expression  "theMethod.IsAbstract ||                       !theMethod.IsPublic && !theMethod.IsFamily ||                       theMethod.GetParameters().Length > 0 ||                       !theMethod.ReturnType.Equals(typeof(void))"  is complex.
Complex Conditional,NUnit.Core,PlatformHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\PlatformHelper.cs,IsPlatformSupported,The conditional expression  "rt.ClrVersion.Major == version.Major &&  					 rt.ClrVersion.Minor == version.Minor &&  				   ( version.Build == -1 || rt.ClrVersion.Build == version.Build ) &&  				   ( version.Revision == -1 || rt.ClrVersion.Revision == version.Revision )"  is complex.
Complex Conditional,NUnit.Core.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\NUnitTestCaseBuilder.cs,CheckTestMethodSignature,The conditional expression  "!testMethod.Method.ReturnType.Equals(typeof(void)) &&                  (parms == null || !parms.HasExpectedResult && parms.ExpectedExceptionName == null)"  is complex.
Empty Catch Block,NUnit.Core.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\NUnitTestCaseBuilder.cs,CheckTestMethodSignature,The method has an empty catch block.
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,CalcHeaderOffsets,The following statement contains a magic number: fileHeader = peHeader + 4;
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,CalcHeaderOffsets,The following statement contains a magic number: optionalHeader = fileHeader + 20;
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,CalcHeaderOffsets,The following statement contains a magic number: dataDirectory = peType == 0x20b                      ? optionalHeader + 112                      : optionalHeader + 96;
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,CalcHeaderOffsets,The following statement contains a magic number: dataDirectory = peType == 0x20b                      ? optionalHeader + 112                      : optionalHeader + 96;
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,CalcHeaderOffsets,The following statement contains a magic number: fs.Position = dataDirectory - 4;
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,CalcHeaderOffsets,The following statement contains a magic number: fs.Position += 12;
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,CalcHeaderOffsets,The following statement contains a magic number: fs.Position += 8;
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,CalcHeaderOffsets,The following statement contains a magic number: fs.Position += 16;
Magic Number,NUnit.Core,AssemblyReader,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\AssemblyReader.cs,DataDirectoryRva,The following statement contains a magic number: fs.Position = dataDirectory + n * 8;
Magic Number,NUnit.Core,MethodHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\MethodHelper.cs,EscapeControlChar,The following statement contains a magic number: switch (c)              {                  case '\'':                      return "\\\'";                  case '\"':                      return "\\\"";                  case '\\':                      return "\\\\";                  case '\0':                      return "\\0";                  case '\a':                      return "\\a";                  case '\b':                      return "\\b";                  case '\f':                      return "\\f";                  case '\n':                      return "\\n";                  case '\r':                      return "\\r";                  case '\t':                      return "\\t";                  case '\v':                      return "\\v";                    case '\x0085':                  case '\x2028':                  case '\x2029':                      return string.Format("\\x{0:X4}"' (int)c);                    default:                      return char.IsControl(c) || (int)c > 128                          ? string.Format("\\x{0:X4}"' (int)c)                          : c.ToString();              }
Magic Number,NUnit.Core,NUnitConfiguration,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\NUnitConfiguration.cs,GetNUnitBinDirectory,The following statement contains a magic number: (Environment.Version.Major >= 2) == (v.Major >= 2)
Magic Number,NUnit.Core,NUnitConfiguration,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\NUnitConfiguration.cs,GetNUnitBinDirectory,The following statement contains a magic number: (Environment.Version.Major >= 2) == (v.Major >= 2)
Magic Number,NUnit.Core,NUnitConfiguration,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\NUnitConfiguration.cs,GetNUnitBinDirectory,The following statement contains a magic number: string altDir = dir.Replace(current' v.ToString(2));
Magic Number,NUnit.Core,PlatformHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\PlatformHelper.cs,IsPlatformSupported,The following statement contains a magic number: parts.Length == 2
Magic Number,NUnit.Core,TypeHelper,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\TypeHelper.cs,GetDisplayName,The following statement contains a magic number: name = name.Substring(0' index) + name.Substring(index2 + 2);
Magic Number,NUnit.Core.Builders,CombinatorialTestCaseProvider,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\CombinatorialTestCaseProvider.cs,GetStrategy,The following statement contains a magic number: Reflect.HasAttribute(method' PairwiseAttribute' false) &&                  method.GetParameters().Length > 2
Magic Number,NUnit.Core.Builders,FleaRand,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\PairwiseStrategy.cs,FleaRand,The following statement contains a magic number: i < 10
Magic Number,NUnit.Core.Builders,FleaRand,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\PairwiseStrategy.cs,Batch,The following statement contains a magic number: d = (c << 19) + (c >> 13) + b;
Magic Number,NUnit.Core.Builders,FleaRand,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\PairwiseStrategy.cs,Batch,The following statement contains a magic number: d = (c << 19) + (c >> 13) + b;
Magic Number,NUnit.Core.Builders,PairwiseTestCaseGenerator,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\PairwiseStrategy.cs,FindGoodTestCase,The following statement contains a magic number: i < 5
Missing Default,NUnit.Core.Builders,DatapointProvider,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\DatapointProvider.cs,GetDataFor,The following switch statement is missing a default case: switch(member.MemberType)                          {                              case MemberTypes.Field:                                  FieldInfo field = member as FieldInfo;                                  instance = field.IsStatic ? null : ProviderCache.GetInstanceOf(fixtureType);                                  datapoints.AddRange((ICollection)field.GetValue(instance));                                  break;                              case MemberTypes.Property:                                  PropertyInfo property = member as PropertyInfo;                                  MethodInfo getMethod = property.GetGetMethod(true);                                  instance = getMethod.IsStatic ? null : ProviderCache.GetInstanceOf(fixtureType);                                  datapoints.AddRange((ICollection)property.GetValue(instance'null));                                  break;                              case MemberTypes.Method:                                  MethodInfo method = member as MethodInfo;                                  instance = method.IsStatic ? null : ProviderCache.GetInstanceOf(fixtureType);                                  datapoints.AddRange((ICollection)method.Invoke(instance' Type.EmptyTypes));                                  break;                          }
Missing Default,NUnit.Core.Builders,ProviderReference,D:\research\architectureSmells\repos\acken_AutoTest.Net\lib\NUnit\src\NUnit-2.5.9.10348\src\NUnitCore\core\Builders\ProviderInfo.cs,GetProviderObjectFromMember,The following switch statement is missing a default case: switch (member.MemberType)              {                  case MemberTypes.Property:                      PropertyInfo providerProperty = member as PropertyInfo;                      MethodInfo getMethod = providerProperty.GetGetMethod(true);                      if (!getMethod.IsStatic)                          //instance = ProviderCache.GetInstanceOf(providerType);                          instance = Reflect.Construct(providerType' providerArgs);                      providerObject = providerProperty.GetValue(instance' null);                      break;                    case MemberTypes.Method:                      MethodInfo providerMethod = member as MethodInfo;                      if (!providerMethod.IsStatic)                          //instance = ProviderCache.GetInstanceOf(providerType);                          instance = Reflect.Construct(providerType' providerArgs);                      providerObject = providerMethod.Invoke(instance' null);                      break;                    case MemberTypes.Field:                      FieldInfo providerField = member as FieldInfo;                      if (!providerField.IsStatic)                          //instance = ProviderCache.GetInstanceOf(providerType);                          instance = Reflect.Construct(providerType' providerArgs);                      providerObject = providerField.GetValue(instance);                      break;              }
