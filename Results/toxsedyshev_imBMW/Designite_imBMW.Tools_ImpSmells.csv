Implementation smell,Namespace,Class,File,Method,Description
Complex Method,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,PasteASCII,Cyclomatic complexity of the method is 10
Complex Method,imBMW.Tools,StringHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\StringHelpers.cs,Translit,Cyclomatic complexity of the method is 12
Complex Method,imBMW.Tools,StringHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\StringHelpers.cs,UTF8ToASCII,Cyclomatic complexity of the method is 9
Long Parameter List,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,PasteASCII,The method has 5 parameters. Parameters: data' s' offset' limit' align
Magic Number,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,ToHex,The following statement contains a magic number: var sb = new StringBuilder(data.Length * 2);
Magic Number,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,ToHex,The following statement contains a magic number: var sb = new StringBuilder(data.Length * 2 + (data.Length - 1) * spacer.Length);
Magic Number,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,ToHex,The following statement contains a magic number: var sb = new StringBuilder(data.Length * 2 + data.Length - 1);
Magic Number,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,PasteASCII,The following statement contains a magic number: alignOffset = (byte)((limit - len) / 2);
Magic Number,imBMW.Tools,DateTimeHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\DateTimeHelpers.cs,GetTotalHours,The following statement contains a magic number: return days * 24 + timespan.Hours;
Magic Number,imBMW.Tools,DateTimeHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\DateTimeHelpers.cs,GetTotalMinutes,The following statement contains a magic number: return hours * 60 + timespan.Minutes;
Magic Number,imBMW.Tools,DateTimeHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\DateTimeHelpers.cs,GetTotalSeconds,The following statement contains a magic number: return (long)minutes * 60 + timespan.Seconds;
Magic Number,imBMW.Tools,DateTimeHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\DateTimeHelpers.cs,GetTotalMilliseconds,The following statement contains a magic number: return seconds * 1000 + timespan.Milliseconds;
Magic Number,imBMW.Tools,MathEx,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\Math.cs,ToRadians,The following statement contains a magic number: return val * (System.Math.PI / 180);
Magic Number,imBMW.Tools,NumHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\NumHelpers.cs,checkByteBitIndex,The following statement contains a magic number: bitIndex < 0 || bitIndex > 7
Magic Number,imBMW.Tools,StringHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\StringHelpers.cs,Translit,The following statement contains a magic number: switch (t)                  {                      case CharType.Upper:                          i = c - 0x0410;                          break;                      case CharType.Lower:                          i = c - 0x0430;                          break;                      case CharType.UpperYo:                      case CharType.LowerYo:                          i = 32;                          break;                      default:                          throw new Exception("Unknown char for translit.");                  }
Missing Default,imBMW.Tools,LoggerArgs,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\LoggerArgs.cs,LoggerArgs,The following switch statement is missing a default case: switch (priority)                  {                      case LogPriority.Error:                          PriorityTitle = "ERROR";                          break;                      case LogPriority.Warning:                          PriorityTitle = "warn";                          break;                      case LogPriority.Info:                          PriorityTitle = "i";                          break;                  }
