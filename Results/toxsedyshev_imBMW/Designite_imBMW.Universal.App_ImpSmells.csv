Implementation smell,Namespace,Class,File,Method,Description
Long Statement,imBMW.Universal.App,App,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\App.xaml.cs,Logger_Logged,The length of the statement  "                toastXml.GetElementsByTagName("text")[1].AppendChild(toastXml.CreateTextNode(log.Exception != null ? log.Exception.Message : "")); " is 130.
Long Statement,imBMW.Universal.App,App,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\App.xaml.cs,OnLaunched,The length of the statement  "                Windows.UI.Core.SystemNavigationManager.GetForCurrentView().AppViewBackButtonVisibility = AppViewBackButtonVisibility.Visible; " is 126.
Complex Conditional,imBMW.Universal.App.Models,ObservableObject,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Models\ObservableObject.cs,Set,The conditional expression  "field == null && value == null || field != null && field.Equals(value)"  is complex.
Complex Conditional,imBMW.Universal.App.Views,ExtendedPage,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Views\ExtendedPage.cs,Set,The conditional expression  "field == null && value == null || field != null && field.Equals(value)"  is complex.
Empty Catch Block,imBMW.Universal.App,App,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\App.xaml.cs,OnLaunched,The method has an empty catch block.
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: Width = Height = 2 * (Diameter / 2 + StrokeThickness);
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: Width = Height = 2 * (Diameter / 2 + StrokeThickness);
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var startAngle = StartAngle * invert * Multiply - 90;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var figure = new PathFigure              {                  StartPoint = new Point(Diameter / 2' Diameter / 2)'                  IsClosed = true'              };
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var figure = new PathFigure              {                  StartPoint = new Point(Diameter / 2' Diameter / 2)'                  IsClosed = true'              };
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var lineX = Diameter / 2 + Math.Sin(startAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var lineX = Diameter / 2 + Math.Sin(startAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var lineX = Diameter / 2 + Math.Sin(startAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var lineY = Diameter / 2 - Math.Cos(startAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var lineY = Diameter / 2 - Math.Cos(startAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var lineY = Diameter / 2 - Math.Cos(startAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arcX = Diameter / 2 + Math.Sin(endAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arcX = Diameter / 2 + Math.Sin(endAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arcX = Diameter / 2 + Math.Sin(endAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arcY = Diameter / 2 - Math.Cos(endAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arcY = Diameter / 2 - Math.Cos(endAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arcY = Diameter / 2 - Math.Cos(endAngle * Math.PI / 180) * Diameter / 2;
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arc = new ArcSegment              {                  IsLargeArc = Angle * Multiply >= 180.0'                  Point = new Point(arcX' arcY)'                  Size = new Size(Diameter / 2' Diameter / 2)'                  SweepDirection = SweepDirection.Clockwise'              };
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arc = new ArcSegment              {                  IsLargeArc = Angle * Multiply >= 180.0'                  Point = new Point(arcX' arcY)'                  Size = new Size(Diameter / 2' Diameter / 2)'                  SweepDirection = SweepDirection.Clockwise'              };
Magic Number,imBMW.Universal.App.Controls,PieSlice,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Controls\PieSlice.cs,Redraw,The following statement contains a magic number: var arc = new ArcSegment              {                  IsLargeArc = Angle * Multiply >= 180.0'                  Point = new Point(arcX' arcY)'                  Size = new Size(Diameter / 2' Diameter / 2)'                  SweepDirection = SweepDirection.Clockwise'              };
Magic Number,imBMW.Universal.App.Views,DashboardPage,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Views\DashboardPage.xaml.cs,TestTimer_Tick,The following statement contains a magic number: if (testTimerTicks > 200)              {                  testTimer.Stop();                  testTimer = null;                  return;              }
Magic Number,imBMW.Universal.App.Views,DashboardPage,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Views\DashboardPage.xaml.cs,TestTimer_Tick,The following statement contains a magic number: testTimerTicks += 8;
Magic Number,imBMW.Universal.App.Views,DashboardPage,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Views\DashboardPage.xaml.cs,TestGauge,The following statement contains a magic number: if (percent > 100)              {                  percent = 200 - percent;              }
Magic Number,imBMW.Universal.App.Views,DashboardPage,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Views\DashboardPage.xaml.cs,TestGauge,The following statement contains a magic number: if (percent > 100)              {                  percent = 200 - percent;              }
Magic Number,imBMW.Universal.App.Views,DashboardPage,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Views\DashboardPage.xaml.cs,TestGauge,The following statement contains a magic number: if (percent < 3)              {                  percent = 0;              }
Magic Number,imBMW.Universal.App.Views,DashboardPage,C:\repos\toxsedyshev_imBMW\Sources\NET\imBMW.Universal.App\Views\DashboardPage.xaml.cs,TestGauges,The following statement contains a magic number: testTimer.Interval = TimeSpan.FromMilliseconds(3);
