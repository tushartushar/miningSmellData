Implementation smell,Namespace,Class,File,Method,Description
Long Method,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,ProcessIKEMessage,The method has 162 lines of code.
Complex Method,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,PasteASCII,Cyclomatic complexity of the method is 10
Complex Method,imBMW.Tools,StringHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\StringHelpers.cs,Translit,Cyclomatic complexity of the method is 12
Complex Method,imBMW.Tools,StringHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\StringHelpers.cs,UTF8ToASCII,Cyclomatic complexity of the method is 9
Complex Method,imBMW.iBus,MessageReceiverRegistration,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\ManagerTools.cs,Matches,Cyclomatic complexity of the method is 8
Complex Method,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,IsValid,Cyclomatic complexity of the method is 10
Complex Method,imBMW.iBus,MessageParser,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\MessageParser.cs,Parse,Cyclomatic complexity of the method is 12
Complex Method,imBMW.iBus.Devices.Real,BodyModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\BodyModule.cs,ProcessGMMessage,Cyclomatic complexity of the method is 9
Complex Method,imBMW.iBus.Devices.Real,BordmonitorText,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ParseItems,Cyclomatic complexity of the method is 8
Complex Method,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ProcessNavGraphicsMessage,Cyclomatic complexity of the method is 12
Complex Method,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,Cyclomatic complexity of the method is 11
Complex Method,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,ProcessIKEMessage,Cyclomatic complexity of the method is 33
Complex Method,imBMW.iBus.Devices.Real,LightControlModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\LightControlModule.cs,OnLightStatusReceived,Cyclomatic complexity of the method is 13
Complex Method,imBMW.iBus.Devices.Real,MultiFunctionSteeringWheel,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\MultiFunctionSteeringWheel.cs,ProcessMFLMessage,Cyclomatic complexity of the method is 13
Long Parameter List,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,PasteASCII,The method has 5 parameters. Parameters: data' s' offset' limit' align
Long Parameter List,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,init,The method has 6 parameters. Parameters: source' destination' data' packetLength' check' description
Long Parameter List,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The method has 5 parameters. Parameters: s' field' index' isChecked' send
Long Parameter List,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The method has 6 parameters. Parameters: s' align' field' index' isChecked' send
Long Identifier,imBMW.iBus.Devices.Real,BodyModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\BodyModule.cs,,The length of the parameter MessageOpenWindowPassengerFront is 31.
Long Identifier,imBMW.iBus.Devices.Real,BodyModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\BodyModule.cs,,The length of the parameter MessageOpenWindowPassengerRear is 30.
Long Identifier,imBMW.iBus.Devices.Real,BodyModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\BodyModule.cs,,The length of the parameter MessageCloseWindowPassengerFront is 32.
Long Identifier,imBMW.iBus.Devices.Real,BodyModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\BodyModule.cs,,The length of the parameter MessageCloseWindowPassengerRear is 31.
Long Identifier,imBMW.iBus.Devices.Real,BodyModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\BodyModule.cs,,The length of the parameter MessageUnfoldPassengerMirrorE39 is 31.
Long Statement,imBMW.iBus,PerformanceInfo,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,ToString,The length of the statement  "                    s = "Processed: " + span.GetTotalSeconds() + "." + span.Milliseconds.ToString().PrependToLength(3' '0'); // TODO use string format " is 130.
Long Statement,imBMW.iBus,PerformanceInfo,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,ToString,The length of the statement  "                    s += "In queue: " + span.GetTotalSeconds() + "." + span.Milliseconds.ToString().PrependToLength(3' '0'); // TODO use string format " is 130.
Long Statement,imBMW.iBus,MessageRegistry,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\MessageRegistry.cs,ToPrettyString,The length of the statement  "            description = message.SourceDevice.ToStringValue() + " > " + message.DestinationDevice.ToStringValue() + ": " + description; " is 124.
Long Statement,imBMW.iBus,Manager,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET\imBMW.Universal\iBus\Manager.cs,AddMessageReceiverForSourceDevice,The length of the statement  "            messageReceiverList.Add(new MessageReceiverRegistration(source' DeviceAddress.Unset' callback' MessageReceiverRegistration.MatchType.Source)); " is 142.
Long Statement,imBMW.iBus,Manager,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET\imBMW.Universal\iBus\Manager.cs,AddMessageReceiverForDestinationDevice,The length of the statement  "            messageReceiverList.Add(new MessageReceiverRegistration(DeviceAddress.Unset' destination' callback' MessageReceiverRegistration.MatchType.Destination)); " is 152.
Long Statement,imBMW.iBus,Manager,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET\imBMW.Universal\iBus\Manager.cs,AddMessageReceiverForSourceAndDestinationDevice,The length of the statement  "            messageReceiverList.Add(new MessageReceiverRegistration(source' destination' callback' MessageReceiverRegistration.MatchType.SourceAndDestination)); " is 148.
Long Statement,imBMW.iBus,Manager,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET\imBMW.Universal\iBus\Manager.cs,AddMessageReceiverForSourceOrDestinationDevice,The length of the statement  "            messageReceiverList.Add(new MessageReceiverRegistration(source' destination' callback' MessageReceiverRegistration.MatchType.SourceOrDestination)); " is 147.
Long Statement,imBMW.iBus.Devices.Real,BordmonitorText,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ParseItems,The length of the statement  "                        var s = ASCIIEncoding.GetString(Data' offset' i - offset + (isNext ? 0 : 1) - (isChecked ? 1 : 0)' false).Trim().ASCIIToUTF8(); " is 127.
Long Statement,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,OnScreenUpdated,The length of the statement  "                Manager.EnqueueMessage(new Message(DeviceAddress.GraphicsNavigationDriver' DeviceAddress.Radio' "Screen updated messages: " + (i + 1)' 0x22' 0x00' i)); " is 151.
Long Statement,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,OnScreenUpdated,The length of the statement  "                Manager.EnqueueMessage(new Message(DeviceAddress.GraphicsNavigationDriver' DeviceAddress.Radio' "Menu updated messages: " + (i + 1)' 0x22' i' 0xFF)); " is 149.
Long Statement,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The length of the statement  "            var m = new Message(iBus.DeviceAddress.Radio' iBus.DeviceAddress.GraphicsNavigationDriver' "Show message on BM (" + index.ToHex() + "): " + s' data); " is 149.
Long Statement,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,PressItem,The length of the statement  "            Manager.EnqueueMessage(new Message(DeviceAddress.GraphicsNavigationDriver' DeviceAddress.Radio' "Press Screen item #" + index' 0x31' 0x60' 0x00' index)); " is 153.
Long Statement,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,PressItem,The length of the statement  "            Manager.EnqueueMessage(new Message(DeviceAddress.GraphicsNavigationDriver' DeviceAddress.Radio' "Release Screen item #" + index' 0x31' 0x60' 0x00' index)); " is 155.
Long Statement,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,DisplayText,The length of the statement  "            Manager.EnqueueMessage(new Message(DeviceAddress.Telephone' DeviceAddress.InstrumentClusterElectronics' "Show text \"" + s + "\" on IKE"' data)); " is 145.
Long Statement,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,SetSpeedLimit,The length of the statement  "                Manager.EnqueueMessage(new Message(DeviceAddress.GraphicsNavigationDriver' DeviceAddress.InstrumentClusterElectronics' "Set speed limit"' 0x40' 0x09' (byte)(limit >> 8)' (byte)(limit & 0xFF))); " is 193.
Long Statement,imBMW.iBus.Devices.Real,MultiFunctionSteeringWheel,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\MultiFunctionSteeringWheel.cs,VolumeUp,The length of the statement  "            Manager.EnqueueMessage(new Message(DeviceAddress.MultiFunctionSteeringWheel' DeviceAddress.Radio' "Volume Up +" + step' 0x32' p)); " is 130.
Long Statement,imBMW.iBus.Devices.Real,MultiFunctionSteeringWheel,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\MultiFunctionSteeringWheel.cs,VolumeDown,The length of the statement  "            Manager.EnqueueMessage(new Message(DeviceAddress.MultiFunctionSteeringWheel' DeviceAddress.Radio' "Volume Down -" + step' 0x32' p)); " is 132.
Long Statement,imBMW.iBus.Devices.Real,Radio,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Radio.cs,DisplayTextMID,The length of the statement  "            Manager.EnqueueMessage(new Message(DeviceAddress.Radio' DeviceAddress.MultiInfoDisplay' "Show text \"" + s + "\" on MID"' data)); " is 129.
Long Statement,imBMW.iBus.Devices.Real,Radio,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Radio.cs,DisplayTextMID,The length of the statement  "            //    Manager.EnqueueMessage(new Message(DeviceAddress.Radio' DeviceAddress.Broadcast' "Show text \"" + s + "\" on MID and IKE"' data)); " is 136.
Long Statement,imBMW.iBus.Devices.Real,Radio,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Radio.cs,DisplayTextRadio,The length of the statement  "            Manager.EnqueueMessage(new Message(DeviceAddress.Telephone' DeviceAddress.InstrumentClusterElectronics' "Show text \"" + s + "\" on the radio"' data)); " is 151.
Long Statement,imBMW.Clients,BluetoothClient,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET\imBMW.Universal\Clients\BluetoothClient.cs,Connect,The length of the statement  "                var sppService = serviceList.FirstOrDefault(s => s.Device.Name.Contains("imBMW") && s.Device.Name.Contains("BlackBox")); " is 120.
Long Statement,imBMW.Clients,BluetoothClient,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET\imBMW.Universal\Clients\BluetoothClient.cs,Connect,The length of the statement  "                    throw new Exception($"Can't connect to {sppService.Device.Name} Bluetooth device. Check that it's paired and online. " + ex.Message' ex); " is 137.
Long Statement,imBMW.Clients,SocketClient,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET\imBMW.Universal\Clients\SocketClient.cs,OnConnected,The length of the statement  "            readingLoopTask = Task.Factory.StartNew(ReadingLoop' cancellationToken.Token' TaskCreationOptions.LongRunning' TaskScheduler.Default); " is 134.
Complex Conditional,imBMW.iBus,MessageReceiverRegistration,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\ManagerTools.cs,Matches,The conditional expression  "Source == m.SourceDevice                          && (Destination == m.DestinationDevice                              || m.DestinationDevice == DeviceAddress.Broadcast                              || m.DestinationDevice == DeviceAddress.GlobalBroadcastAddress)"  is complex.
Complex Conditional,imBMW.iBus,MessageReceiverRegistration,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\ManagerTools.cs,Matches,The conditional expression  "Source == m.SourceDevice                          || Destination == m.DestinationDevice                          || m.DestinationDevice == DeviceAddress.Broadcast                          || m.DestinationDevice == DeviceAddress.GlobalBroadcastAddress"  is complex.
Complex Conditional,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,OnDateChanged,The conditional expression  "_dateIsSet && _dateDay == day && _dateMonth == month && _dateYear == year"  is complex.
Virtual Method Call from Constructor,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,MS43AnalogValues,The constructor "MS43AnalogValues" calls a virtual method "Parse".
Virtual Method Call from Constructor,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,MS43AnalogValues,The constructor "MS43AnalogValues" calls a virtual method "Parse".
Magic Number,imBMW.Diagnostics,DBusMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DBusMessage.cs,DBusMessage,The following statement contains a magic number: var packetLength = data.Length + 3;
Magic Number,imBMW.Diagnostics,DBusMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DBusMessage.cs,TryCreate,The following statement contains a magic number: return new DBusMessage((DeviceAddress)buffer[0]' buffer.SkipAndTake(2' ParseDataLength(buffer' bufferLength)));
Magic Number,imBMW.Diagnostics,DBusMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DBusMessage.cs,ParsePacketLength,The following statement contains a magic number: bufferLength < 2
Magic Number,imBMW.Diagnostics,DBusMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DBusMessage.cs,ParseDataLength,The following statement contains a magic number: return ParsePacketLength(buffer' bufferLength) - 3;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,CanParse,The following statement contains a magic number: return message.SourceDevice == DeviceAddress.DME                  && message.DestinationDevice == DeviceAddress.Diagnostic                  && message.Data.Length >= 42                   && message.Data[0] == 0xA0;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: RPM = (d[1] << 8) + d[2];
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: RPM = (d[1] << 8) + d[2];
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Speed = d[3];
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Pedal = ((d[4] << 8) + d[5]) * 0.0018311;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Pedal = ((d[4] << 8) + d[5]) * 0.0018311;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Pedal = ((d[4] << 8) + d[5]) * 0.0018311;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Pedal = ((d[4] << 8) + d[5]) * 0.0018311;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Throttle = ((d[6] << 8) + d[7]) * 0.0018311;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Throttle = ((d[6] << 8) + d[7]) * 0.0018311;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Throttle = ((d[6] << 8) + d[7]) * 0.0018311;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: Throttle = ((d[6] << 8) + d[7]) * 0.0018311;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AirMass = ((d[8] << 8) + d[9]) * 0.25;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AirMass = ((d[8] << 8) + d[9]) * 0.25;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AirMass = ((d[8] << 8) + d[9]) * 0.25;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AirMass = ((d[8] << 8) + d[9]) * 0.25;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: IntakeTemp = d[10] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: IntakeTemp = d[10] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: IntakeTemp = d[10] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: CoolantTemp = d[11] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: CoolantTemp = d[11] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: CoolantTemp = d[11] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: OilTemp = d[12] * 0.796 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: OilTemp = d[12] * 0.796 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: OilTemp = d[12] * 0.796 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: CoolantRadiatorTemp = d[13] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: CoolantRadiatorTemp = d[13] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: CoolantRadiatorTemp = d[13] * 0.75 - 48;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: IgnitionAngle = -d[14] * 0.375 + 72;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: IgnitionAngle = -d[14] * 0.375 + 72;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: IgnitionAngle = -d[14] * 0.375 + 72;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: InjectionTime = ((d[15] << 8) + d[16]) * 0.0053333;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: InjectionTime = ((d[15] << 8) + d[16]) * 0.0053333;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: InjectionTime = ((d[15] << 8) + d[16]) * 0.0053333;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: InjectionTime = ((d[15] << 8) + d[16]) * 0.0053333;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ISAPWM_IS = ((d[17] << 8) + d[18]) * 0.0015;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ISAPWM_IS = ((d[17] << 8) + d[18]) * 0.0015;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ISAPWM_IS = ((d[17] << 8) + d[18]) * 0.0015;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ISAPWM_IS = ((d[17] << 8) + d[18]) * 0.0015;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ISAPWM_ISA = ((d[19] << 8) + d[20]) * 0.0015;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ISAPWM_ISA = ((d[19] << 8) + d[20]) * 0.0015;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ISAPWM_ISA = ((d[19] << 8) + d[20]) * 0.0015;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ISAPWM_ISA = ((d[19] << 8) + d[20]) * 0.0015;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VanosPositionIntake = d[21] * 0.375 + 60;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VanosPositionIntake = d[21] * 0.375 + 60;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VanosPositionIntake = d[21] * 0.375 + 60;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VanosPositionExhaust = -d[22] * 0.375 - 60;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VanosPositionExhaust = -d[22] * 0.375 - 60;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VanosPositionExhaust = -d[22] * 0.375 - 60;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VoltageKL15 = d[23] * 0.10156;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VoltageKL15 = d[23] * 0.10156;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator1 = ((d[24] << 8) + d[25]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator1 = ((d[24] << 8) + d[25]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator1 = ((d[24] << 8) + d[25]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator1 = ((d[24] << 8) + d[25]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator1 = ((d[24] << 8) + d[25]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator2 = ((d[26] << 8) + d[27]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator2 = ((d[26] << 8) + d[27]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator2 = ((d[26] << 8) + d[27]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator2 = ((d[26] << 8) + d[27]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaIntegrator2 = ((d[26] << 8) + d[27]) * 0.000015259 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaHeatingBeforeCats1 = d[28] * 0.391;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaHeatingBeforeCats1 = d[28] * 0.391;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaHeatingBeforeCats2 = d[29] * 0.391;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaHeatingBeforeCats2 = d[29] * 0.391;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaHeatingAfterCats1 = d[30] * 0.391;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaHeatingAfterCats1 = d[30] * 0.391;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaHeatingAfterCats2 = d[31] * 0.391;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: LambdaHeatingAfterCats2 = d[31] * 0.391;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AirMassPerStroke = ((d[32] << 8) + d[33]) * 0.0212;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AirMassPerStroke = ((d[32] << 8) + d[33]) * 0.0212;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AirMassPerStroke = ((d[32] << 8) + d[33]) * 0.0212;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AirMassPerStroke = ((d[32] << 8) + d[33]) * 0.0212;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: KnockSensor2 = ((d[34] << 8) + d[35]) * 0.0000778;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: KnockSensor2 = ((d[34] << 8) + d[35]) * 0.0000778;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: KnockSensor2 = ((d[34] << 8) + d[35]) * 0.0000778;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: KnockSensor2 = ((d[34] << 8) + d[35]) * 0.0000778;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: KnockSensor5 = ((d[36] << 8) + d[37]) * 0.0000778;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: KnockSensor5 = ((d[36] << 8) + d[37]) * 0.0000778;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: KnockSensor5 = ((d[36] << 8) + d[37]) * 0.0000778;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: KnockSensor5 = ((d[36] << 8) + d[37]) * 0.0000778;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ElectricFanSpeed = d[38] * 0.39063;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: ElectricFanSpeed = d[38] * 0.39063;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AtmosphericPressure = (int)(((d[39] << 8) + d[40]) * 0.08292);
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AtmosphericPressure = (int)(((d[39] << 8) + d[40]) * 0.08292);
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AtmosphericPressure = (int)(((d[39] << 8) + d[40]) * 0.08292);
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: AtmosphericPressure = (int)(((d[39] << 8) + d[40]) * 0.08292);
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VoltageBattery = d[41] * 0.10156;
Magic Number,imBMW.Diagnostics.DME,MS43AnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43AnalogValues.cs,Parse,The following statement contains a magic number: VoltageBattery = d[41] * 0.10156;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,CanParse,The following statement contains a magic number: return message.SourceDevice == DeviceAddress.DME                  && message.DestinationDevice == DeviceAddress.Diagnostic                  && message.Data.Length == 51                  && message.Data[0] == 0xA0;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: d.Length < 51
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: WideBandLambda = (double)d[42] / 255 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: WideBandLambda = (double)d[42] / 255 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: WideBandLambda = (double)d[42] / 255 + 0.5;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: IntakePressure = d[43] * 10;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: IntakePressure = d[43] * 10;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: FuelPressure = d[44] * 40;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: FuelPressure = d[44] * 40;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: OilPressure = d[45] * 40;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: OilPressure = d[45] * 40;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: IntakeTempAfterCooler = d[46] / 2.55;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: IntakeTempAfterCooler = d[46] / 2.55;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: CoolerInTemp = d[47] / 2.55;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: CoolerInTemp = d[47] / 2.55;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: CoolerOutTemp = d[48] / 2.55;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: CoolerOutTemp = d[48] / 2.55;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: IsMethanolInjecting = d[49] == 1;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,Parse,The following statement contains a magic number: IsMethanolFailsafe = d[50] == 1;
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data = data.PadRight(0x00' 51 - data.Length);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data.Length < 51
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[42] = ToByte((av.WideBandLambda - 0.5) * 255);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[42] = ToByte((av.WideBandLambda - 0.5) * 255);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[42] = ToByte((av.WideBandLambda - 0.5) * 255);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[43] = ToByte(av.IntakePressure / 10);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[43] = ToByte(av.IntakePressure / 10);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[44] = ToByte(av.FuelPressure / 40);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[44] = ToByte(av.FuelPressure / 40);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[45] = ToByte(av.OilPressure / 40);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[45] = ToByte(av.OilPressure / 40);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[46] = ToByte(av.IntakeTempAfterCooler * 2.55);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[46] = ToByte(av.IntakeTempAfterCooler * 2.55);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[47] = ToByte(av.CoolerInTemp * 2.55);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[47] = ToByte(av.CoolerInTemp * 2.55);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[48] = ToByte(av.CoolerOutTemp * 2.55);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[48] = ToByte(av.CoolerOutTemp * 2.55);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[49] = ToByte(av.IsMethanolInjecting ? 0x01 : 0x00);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ModifyMS43Message,The following statement contains a magic number: data[50] = ToByte(av.IsMethanolFailsafe ? 0x01 : 0x00);
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ToByte,The following statement contains a magic number: return (byte)Math.Min(255' Math.Max(0' d));
Magic Number,imBMW.Diagnostics.DME,MS43BBAnalogValues,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Diagnostics\DME\MS43BBAnalogValues.cs,ToByte,The following statement contains a magic number: return (byte)Math.Min(255' Math.Max(0' Math.Round(d)));
Magic Number,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,ToHex,The following statement contains a magic number: var sb = new StringBuilder(data.Length * 2);
Magic Number,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,ToHex,The following statement contains a magic number: var sb = new StringBuilder(data.Length * 2 + (data.Length - 1) * spacer.Length);
Magic Number,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,ToHex,The following statement contains a magic number: var sb = new StringBuilder(data.Length * 2 + data.Length - 1);
Magic Number,imBMW.Tools,ArrayHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\ArrayHelpers.cs,PasteASCII,The following statement contains a magic number: alignOffset = (byte)((limit - len) / 2);
Magic Number,imBMW.Tools,NumHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\NumHelpers.cs,checkByteBitIndex,The following statement contains a magic number: bitIndex < 0 || bitIndex > 7
Magic Number,imBMW.Tools,StringHelpers,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW.Tools\StringHelpers.cs,Translit,The following statement contains a magic number: switch (t)                  {                      case CharType.Upper:                          i = c - 0x0410;                          break;                      case CharType.Lower:                          i = c - 0x0430;                          break;                      case CharType.UpperYo:                      case CharType.LowerYo:                          i = 32;                          break;                      default:                          throw new Exception("Unknown char for translit.");                  }
Magic Number,imBMW.iBus,InternalMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\InternalMessage.cs,TryCreate,The following statement contains a magic number: return new InternalMessage((DeviceAddress)buffer[0]' buffer.SkipAndTake(3' ParseDataLength(buffer' bufferLength)));
Magic Number,imBMW.iBus,InternalMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\InternalMessage.cs,ParsePacketLength,The following statement contains a magic number: bufferLength < 3
Magic Number,imBMW.iBus,InternalMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\InternalMessage.cs,ParsePacketLength,The following statement contains a magic number: return (buffer[2] << 8) + buffer[1] + 2;
Magic Number,imBMW.iBus,InternalMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\InternalMessage.cs,ParsePacketLength,The following statement contains a magic number: return (buffer[2] << 8) + buffer[1] + 2;
Magic Number,imBMW.iBus,InternalMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\InternalMessage.cs,ParsePacketLength,The following statement contains a magic number: return (buffer[2] << 8) + buffer[1] + 2;
Magic Number,imBMW.iBus,InternalMessage,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\InternalMessage.cs,ParseDataLength,The following statement contains a magic number: return ParsePacketLength(buffer' bufferLength) - 4;
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,init,The following statement contains a magic number: check ^= (byte)(data.Length + 2);
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,init,The following statement contains a magic number: init(source' destination' data' data.Length + 4' check' description);
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,TryCreate,The following statement contains a magic number: return new Message(buffer[0]' buffer[2]' buffer.SkipAndTake(3' ParseDataLength(buffer' bufferLength)));
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,TryCreate,The following statement contains a magic number: return new Message(buffer[0]' buffer[2]' buffer.SkipAndTake(3' ParseDataLength(buffer' bufferLength)));
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,IsValid,The following statement contains a magic number: packetCheck == 0x00 && packetLength > 8
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,CheckDeviceAddresses,The following statement contains a magic number: bufferLength >= 3 && !CheckDestinationDeviceAddress(buffer[2])
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,CheckDeviceAddresses,The following statement contains a magic number: bufferLength >= 3 && !CheckDestinationDeviceAddress(buffer[2])
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,ParsePacketLength,The following statement contains a magic number: bufferLength < 2
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,ParsePacketLength,The following statement contains a magic number: return buffer[1] + 2;
Magic Number,imBMW.iBus,Message,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,ParseDataLength,The following statement contains a magic number: return ParsePacketLength(buffer' bufferLength) - 4;
Magic Number,imBMW.iBus,PerformanceInfo,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,ToString,The following statement contains a magic number: s = "Processed: " + span.GetTotalSeconds() + "." + span.Milliseconds.ToString().PrependToLength(3' '0');
Magic Number,imBMW.iBus,PerformanceInfo,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Message.cs,ToString,The following statement contains a magic number: s += "In queue: " + span.GetTotalSeconds() + "." + span.Milliseconds.ToString().PrependToLength(3' '0');
Magic Number,imBMW.iBus.Devices.Real,BodyModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\BodyModule.cs,ProcessGMMessage,The following statement contains a magic number: btn.HasBit(4)
Magic Number,imBMW.iBus.Devices.Real,BodyModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\BodyModule.cs,ProcessGMMessage,The following statement contains a magic number: m.Data.Length == 2 && m.Data[0] == 0x72
Magic Number,imBMW.iBus.Devices.Real,BordmonitorText,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ParseItems,The following statement contains a magic number: var index = (byte)(Data[3] & 0x0F);
Magic Number,imBMW.iBus.Devices.Real,BordmonitorText,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ParseItems,The following statement contains a magic number: var offset = 4;
Magic Number,imBMW.iBus.Devices.Real,BordmonitorText,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ParseItems,The following statement contains a magic number: Data.Length > 3
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,OnScreenUpdated,The following statement contains a magic number: _screenUpdatedMenuCounter >= 3
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The following statement contains a magic number: switch (field)              {                  case BordmonitorFields.Title:                      len = 11;                      data = DataShowTitle;                      break;                  case BordmonitorFields.Status:                      len = 11;                      data = DataShowStatus;                      break;                  case BordmonitorFields.Item:                      if (isChecked)                      {                          len = 15;                      }                      else                      {                          switch (NaviVersion)                          {                              case Tools.NaviVersion.MK4:                                  len = System.Math.Min(23' s.Length);                                  break;                              default:                                  len = 15;                                  break;                          }                      }                      index += 0x40;                      /*if (index == 0x47)                      {                          index = 0x7;                      }*/                      if (NaviVersion == Tools.NaviVersion.MK2)                      {                          data = new byte[] { 0xA5' 0x62' 0x00' (byte)index };                      }                      else                      {                          data = new byte[] { 0x21' 0x60' 0x00' (byte)index };                      }                      break;                  default:                      throw new Exception("TODO");              }
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The following statement contains a magic number: switch (field)              {                  case BordmonitorFields.Title:                      len = 11;                      data = DataShowTitle;                      break;                  case BordmonitorFields.Status:                      len = 11;                      data = DataShowStatus;                      break;                  case BordmonitorFields.Item:                      if (isChecked)                      {                          len = 15;                      }                      else                      {                          switch (NaviVersion)                          {                              case Tools.NaviVersion.MK4:                                  len = System.Math.Min(23' s.Length);                                  break;                              default:                                  len = 15;                                  break;                          }                      }                      index += 0x40;                      /*if (index == 0x47)                      {                          index = 0x7;                      }*/                      if (NaviVersion == Tools.NaviVersion.MK2)                      {                          data = new byte[] { 0xA5' 0x62' 0x00' (byte)index };                      }                      else                      {                          data = new byte[] { 0x21' 0x60' 0x00' (byte)index };                      }                      break;                  default:                      throw new Exception("TODO");              }
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The following statement contains a magic number: switch (field)              {                  case BordmonitorFields.Title:                      len = 11;                      data = DataShowTitle;                      break;                  case BordmonitorFields.Status:                      len = 11;                      data = DataShowStatus;                      break;                  case BordmonitorFields.Item:                      if (isChecked)                      {                          len = 15;                      }                      else                      {                          switch (NaviVersion)                          {                              case Tools.NaviVersion.MK4:                                  len = System.Math.Min(23' s.Length);                                  break;                              default:                                  len = 15;                                  break;                          }                      }                      index += 0x40;                      /*if (index == 0x47)                      {                          index = 0x7;                      }*/                      if (NaviVersion == Tools.NaviVersion.MK2)                      {                          data = new byte[] { 0xA5' 0x62' 0x00' (byte)index };                      }                      else                      {                          data = new byte[] { 0x21' 0x60' 0x00' (byte)index };                      }                      break;                  default:                      throw new Exception("TODO");              }
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The following statement contains a magic number: switch (field)              {                  case BordmonitorFields.Title:                      len = 11;                      data = DataShowTitle;                      break;                  case BordmonitorFields.Status:                      len = 11;                      data = DataShowStatus;                      break;                  case BordmonitorFields.Item:                      if (isChecked)                      {                          len = 15;                      }                      else                      {                          switch (NaviVersion)                          {                              case Tools.NaviVersion.MK4:                                  len = System.Math.Min(23' s.Length);                                  break;                              default:                                  len = 15;                                  break;                          }                      }                      index += 0x40;                      /*if (index == 0x47)                      {                          index = 0x7;                      }*/                      if (NaviVersion == Tools.NaviVersion.MK2)                      {                          data = new byte[] { 0xA5' 0x62' 0x00' (byte)index };                      }                      else                      {                          data = new byte[] { 0x21' 0x60' 0x00' (byte)index };                      }                      break;                  default:                      throw new Exception("TODO");              }
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The following statement contains a magic number: switch (field)              {                  case BordmonitorFields.Title:                      len = 11;                      data = DataShowTitle;                      break;                  case BordmonitorFields.Status:                      len = 11;                      data = DataShowStatus;                      break;                  case BordmonitorFields.Item:                      if (isChecked)                      {                          len = 15;                      }                      else                      {                          switch (NaviVersion)                          {                              case Tools.NaviVersion.MK4:                                  len = System.Math.Min(23' s.Length);                                  break;                              default:                                  len = 15;                                  break;                          }                      }                      index += 0x40;                      /*if (index == 0x47)                      {                          index = 0x7;                      }*/                      if (NaviVersion == Tools.NaviVersion.MK2)                      {                          data = new byte[] { 0xA5' 0x62' 0x00' (byte)index };                      }                      else                      {                          data = new byte[] { 0x21' 0x60' 0x00' (byte)index };                      }                      break;                  default:                      throw new Exception("TODO");              }
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,ShowText,The following statement contains a magic number: data[data.Length - 2] = 0x2A;
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,GetItemIndex,The following statement contains a magic number: index > 9
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,GetItemIndex,The following statement contains a magic number: var smallscreenOffset = count > 6 ? 0 : 2;
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,GetItemIndex,The following statement contains a magic number: var smallscreenOffset = count > 6 ? 0 : 2;
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,GetItemIndex,The following statement contains a magic number: index += (byte)(3 + smallscreenOffset);
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,GetItemIndex,The following statement contains a magic number: index > 2 && index < smallscreenOffset + 3
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,GetItemIndex,The following statement contains a magic number: index > 2 && index < smallscreenOffset + 3
Magic Number,imBMW.iBus.Devices.Real,Bordmonitor,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,GetItemIndex,The following statement contains a magic number: return (byte)(index <= 2 ? index : index + smallscreenOffset);
Magic Number,imBMW.iBus.Devices.Real,Immobiliser,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Immobiliser.cs,ProcessEWSMessage,The following statement contains a magic number: LastKeyInserted = m.Data[2];
Magic Number,imBMW.iBus.Devices.Real,Immobiliser,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Immobiliser.cs,ProcessEWSMessage,The following statement contains a magic number: m.Data.Length == 3 && m.Data[0] == 0x74
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,ProcessIKEMessage,The following statement contains a magic number: OnSpeedRPMChanged((ushort)(m.Data[1] * 2)' (ushort)(m.Data[2] * 100));
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,ProcessIKEMessage,The following statement contains a magic number: OnSpeedRPMChanged((ushort)(m.Data[1] * 2)' (ushort)(m.Data[2] * 100));
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,ProcessIKEMessage,The following statement contains a magic number: OnSpeedRPMChanged((ushort)(m.Data[1] * 2)' (ushort)(m.Data[2] * 100));
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,ProcessIKEMessage,The following statement contains a magic number: m.Data.Length == 3 && m.Data[0] == 0x18
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,DisplayText,The following statement contains a magic number: data.PasteASCII(s.Translit()' 3' DisplayTextMaxLength' align);
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,SetSpeedLimit,The following statement contains a magic number: limit = 10;
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,SetSpeedLimit,The following statement contains a magic number: limit < 10
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,SetSpeedLimit,The following statement contains a magic number: limit = 300;
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,SetSpeedLimit,The following statement contains a magic number: limit > 300
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,SetSpeedLimit,The following statement contains a magic number: Manager.EnqueueMessage(new Message(DeviceAddress.GraphicsNavigationDriver' DeviceAddress.InstrumentClusterElectronics' "Set speed limit"' 0x40' 0x09' (byte)(limit >> 8)' (byte)(limit & 0xFF)));
Magic Number,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,RunEngineStartedTimer,The following statement contains a magic number: engineStartedTimer = new Timer(delegate              {                  if (CurrentIgnitionState == IgnitionState.Ign                       && CurrentRPM > 0                      && EngineStarted != null)                  {                      EngineStarted.Invoke();                  }              }' null' 2000' 0);
Magic Number,imBMW.iBus.Devices.Real,LightControlModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\LightControlModule.cs,ProcessLCMMessage,The following statement contains a magic number: m.Data.Length == 5 && m.Data[0] == 0x5B
Magic Number,imBMW.iBus.Devices.Real,LightControlModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\LightControlModule.cs,OnDimmerChanged,The following statement contains a magic number: var value = 100.0 * rawValue / 0xFE;
Magic Number,imBMW.iBus.Devices.Real,LightControlModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\LightControlModule.cs,OnDimmerChanged,The following statement contains a magic number: m.ReceiverDescription = "Dimmer " + (int)value + "%' unknown=" + m.Data[2].ToHex();
Magic Number,imBMW.iBus.Devices.Real,LightControlModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\LightControlModule.cs,OnLightStatusReceived,The following statement contains a magic number: var error = m.Data[2];
Magic Number,imBMW.iBus.Devices.Real,LightControlModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\LightControlModule.cs,OnLightStatusReceived,The following statement contains a magic number: var errorUnk = m.Data[3];
Magic Number,imBMW.iBus.Devices.Real,LightControlModule,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\LightControlModule.cs,OnLightStatusReceived,The following statement contains a magic number: var errorReason = m.Data[4];
Magic Number,imBMW.iBus.Devices.Real,MultiFunctionSteeringWheel,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\MultiFunctionSteeringWheel.cs,VolumeUp,The following statement contains a magic number: step = (byte)System.Math.Max((byte)1' System.Math.Min(step' (byte)9));
Magic Number,imBMW.iBus.Devices.Real,MultiFunctionSteeringWheel,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\MultiFunctionSteeringWheel.cs,VolumeUp,The following statement contains a magic number: var p = (byte)((step << 4) + 1);
Magic Number,imBMW.iBus.Devices.Real,MultiFunctionSteeringWheel,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\MultiFunctionSteeringWheel.cs,VolumeDown,The following statement contains a magic number: step = (byte)System.Math.Max((byte)1' System.Math.Min(step' (byte)9));
Magic Number,imBMW.iBus.Devices.Real,MultiFunctionSteeringWheel,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\MultiFunctionSteeringWheel.cs,VolumeDown,The following statement contains a magic number: var p = (byte)(step << 4);
Magic Number,imBMW.iBus.Devices.Real,Radio,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Radio.cs,DisplayTextMID,The following statement contains a magic number: data.PasteASCII(s.Translit()' 3' DisplayTextMaxLength' align);
Magic Number,imBMW.iBus.Devices.Real,Radio,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Radio.cs,DisplayTextRadio,The following statement contains a magic number: data.PasteASCII(s.Translit()' 3' DisplayTextMaxLength' align);
Magic Number,imBMW.Clients,SocketClient,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET\imBMW.Universal\Clients\SocketClient.cs,ReadingLoop,The following statement contains a magic number: var size = await dataReader.LoadAsync(1028);
Missing Default,imBMW.iBus,MessageReceiverRegistration,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\ManagerTools.cs,Matches,The following switch statement is missing a default case: switch (Match)              {                  case MessageReceiverRegistration.MatchType.Source:                      if (Source == m.SourceDevice)                      {                          return true;                      }                      break;                  case MessageReceiverRegistration.MatchType.Destination:                      if (Destination == m.DestinationDevice                          || m.DestinationDevice == DeviceAddress.Broadcast                          || m.DestinationDevice == DeviceAddress.GlobalBroadcastAddress)                      {                          return true;                      }                      break;                  case MessageReceiverRegistration.MatchType.SourceAndDestination:                      if (Source == m.SourceDevice                          && (Destination == m.DestinationDevice                              || m.DestinationDevice == DeviceAddress.Broadcast                              || m.DestinationDevice == DeviceAddress.GlobalBroadcastAddress))                      {                          return true;                      }                      break;                  case MessageReceiverRegistration.MatchType.SourceOrDestination:                      if (Source == m.SourceDevice                          || Destination == m.DestinationDevice                          || m.DestinationDevice == DeviceAddress.Broadcast                          || m.DestinationDevice == DeviceAddress.GlobalBroadcastAddress)                      {                          return true;                      }                      break;              }
Missing Default,imBMW.iBus.Devices.Real,BordmonitorText,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\Bordmonitor.cs,Parse,The following switch statement is missing a default case: switch (Field)              {                  case BordmonitorFields.Title:                      Text = ASCIIEncoding.GetString(Data' Bordmonitor.DataShowTitle.Length' -1' false).Trim().ASCIIToUTF8();                      break;                  case BordmonitorFields.Status:                      Text = ASCIIEncoding.GetString(Data' Bordmonitor.DataShowStatus.Length' -1' false).Trim().ASCIIToUTF8();                      break;                  case BordmonitorFields.Item:                      throw new Exception("Use ParseItems() instead.");              }
Missing Default,imBMW.iBus.Devices.Real,InstrumentClusterElectronics,D:\research\architectureSmells\repos1\toxsedyshev_imBMW\Sources\NET-MF\imBMW\iBus\Devices\InstrumentClusterElectronics.cs,ProcessIKEMessage,The following switch statement is missing a default case: switch (m.Data[1])                  {                      case 0x01:                          if (m.Data.Length == 10)                          {                              var hourStr = new string(new[] { (char)m.Data[3]' (char)m.Data[4] });                              var minuteStr = new string(new[] { (char)m.Data[6]' (char)m.Data[7] });                              if (hourStr == "--" || minuteStr == "--")                              {                                  m.ReceiverDescription = "Time: unset";                                  break;                              }                              var hour = Convert.ToByte(hourStr);                              var minute = Convert.ToByte(minuteStr);                              if (hour == 12 && m.Data[8] == 'A') // 12AM                              {                                  hour = 0;                              }                              else if (hour != 12 && m.Data[8] == 'P') // PM < 12                              {                                  hour += 12;                              }                              OnTimeChanged(hour' minute);                              m.ReceiverDescription = "Time: " + hour + ":" + minute;                          }                          break;                      case 0x02:                          if (m.Data.Length == 13)                          {                              var dayStr = new string(new[] { (char)m.Data[3]' (char)m.Data[4] });                              var monthStr = new string(new[] { (char)m.Data[6]' (char)m.Data[7] });                              var yearStr = new string(new[] { (char)m.Data[9]' (char)m.Data[10]' (char)m.Data[11]' (char)m.Data[12] });                              if (dayStr == "--" || monthStr == "--" || yearStr == "----") // year is always set                              {                                  m.ReceiverDescription = "Date: unset";                                  break;                              }                              var day = Convert.ToByte(dayStr);                              var month = Convert.ToByte(monthStr);                              var year = Convert.ToUInt16(yearStr);                              if (m.Data[5] == 0x2F || month > 12 && day <= 12)                              {                                  // TODO use region settings                                  var t = day;                                  day = month;                                  month = t;                              }                              OnDateChanged(day' month' year);                              m.ReceiverDescription = "Date: " + day + "/" + month + "/" + year;                          }                          break;                      case 0x03:                          if (m.Data.Length >= 8)                          {                              float temperature;                              if (m.Data.ParseFloat(out temperature' 3' 5))                              {                                  //TemperatureOutside = (sbyte)temperature;                                  m.ReceiverDescription = "Outside temperature  " + temperature + "°C";                              }                          }                          break;                      case 0x04:                      case 0x05:                          if (m.Data.Length >= 7)                          {                              float consumption = 0;                              m.Data.ParseFloat(out consumption' 3' 4);                              OnConsumptionChanged(m.Data[1] == 0x04' consumption);                              m.ReceiverDescription = "Consumption " + (m.Data[1] == 0x04 ? 1 : 2) + " = " + consumption + " l/km";                          }                          break;                      case 0x06:                          if (m.Data.Length >= 7)                          {                              int range;                              if (m.Data.ParseInt(out range' 3' 4))                              {                                  OnRangeChanged((uint)range);                                  m.ReceiverDescription = "Range  " + Range + " km";                              }                          }                          break;                      case 0x09:                          if (m.Data.Length >= 7)                          {                              int speedLimit;                              if (m.Data.ParseInt(out speedLimit' 3' 3))                              {                                  OnSpeedLimitChanged((ushort)speedLimit);                                  m.ReceiverDescription = "Speed limit  " + SpeedLimit + " km/h";                              }                          }                          break;                      case 0x0A:                          if (m.Data.Length >= 7)                          {                              float speed = 0;                              m.Data.ParseFloat(out speed' 3' 4);                              OnAverageSpeedChanged(speed);                              m.ReceiverDescription = "Average speed  " + AverageSpeed + " km/h";                          }                          break;                  }
