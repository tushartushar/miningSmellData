Design smell,Namespace,Class,File,Cause
Unutilized Abstraction,JsonConfig.Extensions,JsonConfigExtensions,C:\repos\Dynalon_JsonConfig\JsonConfig\JsonConfigExtensions.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Duplicate Abstraction,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  Merger (C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs' [1' 22])' Config (C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs' [1' 22])' ConfigObject (C:\repos\Dynalon_JsonConfig\JsonConfig\ConfigObjects.cs' [1' 22])
Unnecessary Abstraction,JsonConfig,TypeMissmatchException,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Unutilized Abstraction,JsonConfig,TypeMissmatchException,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Duplicate Abstraction,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  Config (C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs' [1' 23])' ConfigObject (C:\repos\Dynalon_JsonConfig\JsonConfig\ConfigObjects.cs' [1' 23])
Deficient Encapsulation,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Default' User' defaultEnding
Deficient Encapsulation,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,The tool detected the smell in this class because the class declares global (public static) fields. Following fields are declared with public static modifiers: Default' User' defaultEnding
Cyclically-dependent Modularization,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.Merger' JsonConfig.ConfigObject
Cyclically-dependent Modularization,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.Merger' JsonConfig.Config' JsonConfig.ConfigObject
Cyclically-dependent Modularization,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.Merger' JsonConfig.ConfigObject' JsonConfig.Config
Cyclically-dependent Modularization,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.Merger' JsonConfig.Config' JsonConfig.ConfigObject
Cyclically-dependent Modularization,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.Config' JsonConfig.ConfigObject
Cyclically-dependent Modularization,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.Config' JsonConfig.ConfigObject' JsonConfig.Merger
Cyclically-dependent Modularization,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.Config' JsonConfig.ConfigObject' JsonConfig.Merger
Cyclically-dependent Modularization,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.Config' JsonConfig.ConfigObject' JsonConfig.Merger
Cyclically-dependent Modularization,JsonConfig,ConfigObject,C:\repos\Dynalon_JsonConfig\JsonConfig\ConfigObjects.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.ConfigObject' JsonConfig.Config
Cyclically-dependent Modularization,JsonConfig,ConfigObject,C:\repos\Dynalon_JsonConfig\JsonConfig\ConfigObjects.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JsonConfig.ConfigObject' JsonConfig.Merger' JsonConfig.Config
Missing Hierarchy,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: NullExceptionPreventer' NullExceptionPreventer' ConfigObject' ConfigObject (in method "Merge" of class "Merger").
Missing Hierarchy,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: NullExceptionPreventer' NullExceptionPreventer (in method "Merge" of class "Merger").
