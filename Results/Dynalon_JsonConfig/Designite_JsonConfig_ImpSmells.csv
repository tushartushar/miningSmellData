Implementation smell,Namespace,Class,File,Method,Description
Complex Method,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,Merge,Cyclomatic complexity of the method is 18
Long Statement,JsonConfig.Extensions,JsonConfigExtensions,C:\repos\Dynalon_JsonConfig\JsonConfig\JsonConfigExtensions.cs,GetMappedValue,The length of the statement  "                        //Occurs if the value is not directly convertible to the default type. Attempt the IConvertible method of casting instead. " is 122.
Magic Number,JsonConfig,Merger,C:\repos\Dynalon_JsonConfig\JsonConfig\Merger.cs,MergeMultiple,The following statement contains a magic number: if (objects.Length == 1)  				return objects[0];    			else if (objects.Length == 2)  				return Merge (objects[0]' objects[1]);    			else {  				object head = objects.First ();  				object[] tail = objects.Skip (1).Take (objects.Length - 1).ToArray ();    				return Merge (head' MergeMultiple (tail));  			}
Magic Number,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,WatchUserConfig,The following statement contains a magic number: userConfigWatcher.Changed += delegate {  	                	DateTime lastWriteTime = File.GetLastWriteTime(info.FullName);  		                if (lastWriteTime.Subtract(lastRead).TotalMilliseconds > 100)  		                {  		                    Console.WriteLine("user configuration has changed' updating config information");  		                    try  		                    {  		                        User = (ConfigObject)ParseJson(File.ReadAllText(info.FullName));  		                    }  		                    catch (IOException)  		                    {  		                        System.Threading.Thread.Sleep(100); //Sleep shortly' and try again.  		                        try  		                        {  		                            User = (ConfigObject)ParseJson(File.ReadAllText(info.FullName));  		                        }  		                        catch (Exception)  		                        {  		                            Console.WriteLine("updating user config failed.");  		                            throw;  		                        }  		                    }  		  		  		                      		                    // invalidate the Global config' forcing a re-merge next time its accessed  		                    global_config = null;  		  		                    // trigger our event  		                    if (OnUserConfigFileChanged != null)  		                        OnUserConfigFileChanged();  		                }  		                lastRead = lastWriteTime;  			};
Magic Number,JsonConfig,Config,C:\repos\Dynalon_JsonConfig\JsonConfig\Config.cs,WatchUserConfig,The following statement contains a magic number: userConfigWatcher.Changed += delegate {  	                	DateTime lastWriteTime = File.GetLastWriteTime(info.FullName);  		                if (lastWriteTime.Subtract(lastRead).TotalMilliseconds > 100)  		                {  		                    Console.WriteLine("user configuration has changed' updating config information");  		                    try  		                    {  		                        User = (ConfigObject)ParseJson(File.ReadAllText(info.FullName));  		                    }  		                    catch (IOException)  		                    {  		                        System.Threading.Thread.Sleep(100); //Sleep shortly' and try again.  		                        try  		                        {  		                            User = (ConfigObject)ParseJson(File.ReadAllText(info.FullName));  		                        }  		                        catch (Exception)  		                        {  		                            Console.WriteLine("updating user config failed.");  		                            throw;  		                        }  		                    }  		  		  		                      		                    // invalidate the Global config' forcing a re-merge next time its accessed  		                    global_config = null;  		  		                    // trigger our event  		                    if (OnUserConfigFileChanged != null)  		                        OnUserConfigFileChanged();  		                }  		                lastRead = lastWriteTime;  			};
