Implementation smell,Namespace,Class,File,Method,Description
Complex Method,JsonConfig,Merger,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Merger.cs,Merge,Cyclomatic complexity of the method is 17
Long Statement,JsonConfig.Extensions,JsonConfigExtensions,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\JsonConfigExtensions.cs,GetMappedValue,The length of the statement  "				//Occurs if the value is not directly convertible to the default type. Attempt the IConvertible method of casting instead. " is 122.
Long Statement,JsonConfig,Config,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Config.cs,ScanForDefaultConfig,The length of the statement  "	var dconf_resource = res.Where (r => r.EndsWith ("default.conf"' StringComparison.OrdinalIgnoreCase) || r.EndsWith ("default.json"' StringComparison.OrdinalIgnoreCase) || r.EndsWith ("default.conf.json"' StringComparison.OrdinalIgnoreCase)).FirstOrDefault (); " is 259.
Magic Number,JsonConfig,Merger,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Merger.cs,MergeMultiple,The following statement contains a magic number: if (objects.Length == 1)  	return objects [0];  else if (objects.Length == 2)  	return Merge (objects [0]' objects [1]);  else {  	object head = objects.First ();  	object[] tail = objects.Skip (1).Take (objects.Length - 1).ToArray ();  	return Merge (head' MergeMultiple (tail));  }  
Magic Number,JsonConfig,Merger,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Merger.cs,MergeMultiple,The following statement contains a magic number: if (objects.Length == 2)  	return Merge (objects [0]' objects [1]);  else {  	object head = objects.First ();  	object[] tail = objects.Skip (1).Take (objects.Length - 1).ToArray ();  	return Merge (head' MergeMultiple (tail));  }  
Magic Number,JsonConfig,Config,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Config.cs,WatchUserConfig,The following statement contains a magic number: userConfigWatcher.Changed += delegate {  	DateTime lastWriteTime = File.GetLastWriteTime (info.FullName);  	if (lastWriteTime.Subtract (lastRead).TotalMilliseconds > 100) {  		Console.WriteLine ("user configuration has changed' updating config information");  		try {  			User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  		} catch (IOException) {  			System.Threading.Thread.Sleep (100);  			//Sleep shortly' and try again.  			try {  				User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  			} catch (Exception) {  				Console.WriteLine ("updating user config failed.");  				throw;  			}  		}  		// invalidate the Global config' forcing a re-merge next time its accessed  		global_config = null;  		// trigger our event  		if (OnUserConfigFileChanged != null)  			OnUserConfigFileChanged ();  	}  	lastRead = lastWriteTime;  };  
Magic Number,JsonConfig,Config,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Config.cs,WatchUserConfig,The following statement contains a magic number: userConfigWatcher.Changed += delegate {  	DateTime lastWriteTime = File.GetLastWriteTime (info.FullName);  	if (lastWriteTime.Subtract (lastRead).TotalMilliseconds > 100) {  		Console.WriteLine ("user configuration has changed' updating config information");  		try {  			User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  		} catch (IOException) {  			System.Threading.Thread.Sleep (100);  			//Sleep shortly' and try again.  			try {  				User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  			} catch (Exception) {  				Console.WriteLine ("updating user config failed.");  				throw;  			}  		}  		// invalidate the Global config' forcing a re-merge next time its accessed  		global_config = null;  		// trigger our event  		if (OnUserConfigFileChanged != null)  			OnUserConfigFileChanged ();  	}  	lastRead = lastWriteTime;  };  
Magic Number,JsonConfig,Config,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Config.cs,WatchUserConfig,The following statement contains a magic number: if (lastWriteTime.Subtract (lastRead).TotalMilliseconds > 100) {  	Console.WriteLine ("user configuration has changed' updating config information");  	try {  		User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  	} catch (IOException) {  		System.Threading.Thread.Sleep (100);  		//Sleep shortly' and try again.  		try {  			User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  		} catch (Exception) {  			Console.WriteLine ("updating user config failed.");  			throw;  		}  	}  	// invalidate the Global config' forcing a re-merge next time its accessed  	global_config = null;  	// trigger our event  	if (OnUserConfigFileChanged != null)  		OnUserConfigFileChanged ();  }  
Magic Number,JsonConfig,Config,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Config.cs,WatchUserConfig,The following statement contains a magic number: if (lastWriteTime.Subtract (lastRead).TotalMilliseconds > 100) {  	Console.WriteLine ("user configuration has changed' updating config information");  	try {  		User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  	} catch (IOException) {  		System.Threading.Thread.Sleep (100);  		//Sleep shortly' and try again.  		try {  			User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  		} catch (Exception) {  			Console.WriteLine ("updating user config failed.");  			throw;  		}  	}  	// invalidate the Global config' forcing a re-merge next time its accessed  	global_config = null;  	// trigger our event  	if (OnUserConfigFileChanged != null)  		OnUserConfigFileChanged ();  }  
Magic Number,JsonConfig,Config,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Config.cs,WatchUserConfig,The following statement contains a magic number: try {  	User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  } catch (IOException) {  	System.Threading.Thread.Sleep (100);  	//Sleep shortly' and try again.  	try {  		User = (ConfigObject)ParseJson (File.ReadAllText (info.FullName));  	} catch (Exception) {  		Console.WriteLine ("updating user config failed.");  		throw;  	}  }  
Magic Number,JsonConfig,Config,F:\newReposMay17\Dynalon_JsonConfig\JsonConfig\Config.cs,WatchUserConfig,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
