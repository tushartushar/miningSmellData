Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,ByteSearch,Cyclomatic complexity of the method is 8
Long Statement,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Main,The length of the statement  "	BonCodeAJP13ForwardRequest FR = new BonCodeAJP13ForwardRequest (BonCodeAJP13HTTPMethods.BONCODEAJP13_GET' "HTTP/1.1"' myURL' "::1"' "::1"' myServer' iPort' false' 1); " is 166.
Long Statement,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Main,The length of the statement  "	BonCodeAJP13ForwardRequest FR2 = new BonCodeAJP13ForwardRequest (BonCodeAJP13HTTPMethods.BONCODEAJP13_GET' "HTTP/1.1"' myURL' "::1"' "::1"' myServer' iPort' false' 1); " is 167.
Long Statement,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,ByteSearch,The length of the statement  "	if (searchIn.Length > 0 && searchBytes.Length > 0 && start <= (searchIn.Length - searchBytes.Length) && searchIn.Length >= searchBytes.Length) { " is 144.
Complex Conditional,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,ByteSearch,The conditional expression  "searchIn.Length > 0 && searchBytes.Length > 0 && start <= (searchIn.Length - searchBytes.Length) && searchIn.Length >= searchBytes.Length"  is complex.
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 2) {  	myServer = (string)args [1];  }  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 3) {  	myPort = (string)args [2];  }  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 3) {  	myPort = (string)args [2];  }  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Main,The following statement contains a magic number: myPort = (string)args [2];  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Connect,The following statement contains a magic number: try {  	// Create a TcpClient.  	// Note' for this client to work you need to have a TcpServer   	// connected to the same address as specified by the server' port  	// combination.  	Int32 port = 8009;  	TcpClient client = new TcpClient (server' port);  	// Translate the passed message into ASCII and store it as a Byte array.  	//Byte[] data = System.Text.Encoding.ASCII.GetBytes(message);  	Byte[] data = message;  	// Get a client stream for reading and writing.  	//  Stream stream = client.GetStream();  	NetworkStream stream = client.GetStream ();  	// Send the message to the connected TcpServer.   	stream.Write (data' 0' data.Length);  	Console.WriteLine ("Sent bytes: {0}"' message.Length);  	// buffer to store the response bytes. We will get responses in 8KB packets  	data = new Byte[8196];  	// String to store the response ASCII representation.  	String responseData = String.Empty;  	Int32 bytes;  	// Receive the TcpServer.response.   	stream.Read (data' 0' 0);  	//call empty read so we block until we receive a response  	// Read the first batch of the TcpServer response bytes.  	bool bGoOn = true;  	//try until error  	while (bGoOn && client.Connected) {  		try {  			bytes = stream.Read (data' 0' data.Length);  			responseData = System.Text.Encoding.ASCII.GetString (data' 0' bytes);  			Console.WriteLine ("Received: {0}"' responseData);  		} catch (Exception) {  			bGoOn = false;  		}  	}  	// Close everything.  	stream.Close ();  	client.Close ();  } catch (ArgumentNullException e) {  	Console.WriteLine ("ArgumentNullException: {0}"' e);  } catch (SocketException e) {  	Console.WriteLine ("SocketException: {0}"' e);  }  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Connect,The following statement contains a magic number: try {  	// Create a TcpClient.  	// Note' for this client to work you need to have a TcpServer   	// connected to the same address as specified by the server' port  	// combination.  	Int32 port = 8009;  	TcpClient client = new TcpClient (server' port);  	// Translate the passed message into ASCII and store it as a Byte array.  	//Byte[] data = System.Text.Encoding.ASCII.GetBytes(message);  	Byte[] data = message;  	// Get a client stream for reading and writing.  	//  Stream stream = client.GetStream();  	NetworkStream stream = client.GetStream ();  	// Send the message to the connected TcpServer.   	stream.Write (data' 0' data.Length);  	Console.WriteLine ("Sent bytes: {0}"' message.Length);  	// buffer to store the response bytes. We will get responses in 8KB packets  	data = new Byte[8196];  	// String to store the response ASCII representation.  	String responseData = String.Empty;  	Int32 bytes;  	// Receive the TcpServer.response.   	stream.Read (data' 0' 0);  	//call empty read so we block until we receive a response  	// Read the first batch of the TcpServer response bytes.  	bool bGoOn = true;  	//try until error  	while (bGoOn && client.Connected) {  		try {  			bytes = stream.Read (data' 0' data.Length);  			responseData = System.Text.Encoding.ASCII.GetString (data' 0' bytes);  			Console.WriteLine ("Received: {0}"' responseData);  		} catch (Exception) {  			bGoOn = false;  		}  	}  	// Close everything.  	stream.Close ();  	client.Close ();  } catch (ArgumentNullException e) {  	Console.WriteLine ("ArgumentNullException: {0}"' e);  } catch (SocketException e) {  	Console.WriteLine ("SocketException: {0}"' e);  }  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,Connect,The following statement contains a magic number: data = new Byte[8196];  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,MultiPackackeWrite,The following statement contains a magic number: client.SendBufferSize = 4;  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,StringToBytes,The following statement contains a magic number: for (int x = 0; x < numBytes; ++x) {  	bytes [x] = Convert.ToByte (inputString.Substring (x * 2' 2)' 16);  }  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,StringToBytes,The following statement contains a magic number: for (int x = 0; x < numBytes; ++x) {  	bytes [x] = Convert.ToByte (inputString.Substring (x * 2' 2)' 16);  }  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,StringToBytes,The following statement contains a magic number: for (int x = 0; x < numBytes; ++x) {  	bytes [x] = Convert.ToByte (inputString.Substring (x * 2' 2)' 16);  }  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,StringToBytes,The following statement contains a magic number: bytes [x] = Convert.ToByte (inputString.Substring (x * 2' 2)' 16);  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,StringToBytes,The following statement contains a magic number: bytes [x] = Convert.ToByte (inputString.Substring (x * 2' 2)' 16);  
Magic Number,ConsoleTCPIP,Program,F:\newReposMay17\Bilal-S_iis2tomcat\ConsoleTCPIP\Program.cs,StringToBytes,The following statement contains a magic number: bytes [x] = Convert.ToByte (inputString.Substring (x * 2' 2)' 16);  
