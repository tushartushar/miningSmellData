Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_originate_string,The length of the statement  "                 "{origination_uuid='985cea12-4e70-4c03-8a2c-2c4b4502bbbb''bypass_media='true''origination_caller_id_name='Test''origination_caller_id_number='12341234''execute_on_originate='start_dtmf''ignore_early_media='true''originate_retries='3''originate_retry_sleep_ms='4000''return_ring_ready='true''originate_timeout='20''hangup_after_bridge='false''foo='bar''baz='widgets'}"; " is 368.
Long Statement,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_play_get_digits_string,The length of the statement  "                                  ValidDigits = "1234567890" //note that in the command string this gets transformed into the regex ^(1|2|3|4|5|6|7|8|9|0)+ " is 121.
Long Statement,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_play_get_digits_string,The length of the statement  "            Assert.Equal(@"4 8 3 4000 # ivr/8000/ivr-please_enter_pin_followed_by_pound.wav ivr/8000/ivr-that_was_an_invalid_entry.wav play_get_digits_result ^(1|2|3|4|5|6|7|8|9|0)+ 2000"' toString); " is 187.
Long Statement,NEventSocket.Tests,BridgeTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\BridgeTests.cs,can_format_BridgeOptions,The length of the statement  "            const string Expected = "{origination_uuid='985cea12-4e70-4c03-8a2c-2c4b4502bbbb''leg_timeout='20''origination_caller_id_name='Dan B Leg''origination_caller_id_number='987654321''ignore_early_media='true'}"; " is 207.
Long Statement,NEventSocket.Tests,OriginateTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\OriginateTests.cs,Can_format_originate_options,The length of the statement  "                "{origination_caller_id_name='Dan''origination_caller_id_number='0123457890''execute_on_originate='my_app::my_arg''originate_retries='5''originate_retry_sleep_ms='200''return_ring_ready='true''originate_timeout='60''origination_uuid='83fe4f3d-b957-4b26-b6bf-3879d7e21972''ignore_early_media='true'}"' " is 300.
Long Statement,NEventSocket.Tests,OriginateTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\OriginateTests.cs,can_set_privacy,The length of the statement  "            var options = new OriginateOptions() { OriginationPrivacy = OriginationPrivacy.HideName | OriginationPrivacy.HideNumber | OriginationPrivacy.Screen}.ToString(); " is 160.
Long Statement,NEventSocket.Tests.Fakes,FakeFreeSwitchSocket,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Fakes\FakeFreeSwitchSocket.cs,SendDisconnectNotice,The length of the statement  "            return SendAsync("Content-Type: text/disconnect-notice\nContent-Length: 67\n\nDisconnected' goodbye.\nSee you at ClueCon! http://www.cluecon.com/\n"' CancellationToken.None); " is 174.
Long Statement,NEventSocket.Tests.Fakes,FakeFreeSwitchSocket,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Fakes\FakeFreeSwitchSocket.cs,SendApiResponseError,The length of the statement  "            return SendAsync("Content-Type: api/response\nContent-Length: {0}\n\n-ERR {1}".Fmt(5 + error.Length' error)' CancellationToken.None); " is 133.
Long Statement,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,an_invalid_password_should_throw_an_InboundSocketConnectionFailedException,The length of the statement  "                var aggregateException = Record.Exception(() => InboundSocket.Connect("127.0.0.1"' listener.Port' "WrongPassword").Wait()); " is 123.
Long Statement,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,an_invalid_password_should_throw_an_InboundSocketConnectionFailedException,The length of the statement  "                Assert.Equal("Invalid password when trying to connect to 127.0.0.1:" + listener.Port' aggregateException.InnerException.Message); " is 129.
Long Statement,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_AuthRequest_received_it_should_throw_TimeoutException_wrapped_in_InboundSocketConnectionFailedException,The length of the statement  "                var aggregateException = Record.Exception(() => InboundSocket.Connect("127.0.0.1"' listener.Port' "ClueCon"' TimeSpan.FromMilliseconds(100)).Wait()); " is 149.
Long Statement,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_response_to_auth_received_it_should_throw_TimeoutException_wrapped_in_InboundSocketConnectionFailedException,The length of the statement  "                var aggregateException = Record.Exception(() => InboundSocket.Connect("127.0.0.1"' listener.Port' "ClueCon"' TimeSpan.FromMilliseconds(100)).Wait()); " is 149.
Long Statement,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_api_response_received_it_should_throw_a_TimeOutException,The length of the statement  "                using (var client = InboundSocket.Connect("127.0.0.1"' listener.Port' "ClueCon"' TimeSpan.FromMilliseconds(100)).Result) " is 120.
Long Statement,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_command_reply_received_it_should_throw_a_TimeOutException,The length of the statement  "                using (var client = InboundSocket.Connect("127.0.0.1"' listener.Port' "ClueCon"' TimeSpan.FromMilliseconds(100)).Result) " is 120.
Magic Number,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_originate_string,The following statement contains a magic number: var options = new OriginateOptions()                                 {                                     UUID = "985cea12-4e70-4c03-8a2c-2c4b4502bbbb"'                                     BypassMedia = true'                                     CallerIdName = "Test"'                                     CallerIdNumber = "12341234"'                                     ExecuteOnOriginate = "start_dtmf"'                                     HangupAfterBridge = false'                                     IgnoreEarlyMedia = true'                                     Retries = 3'                                     RetrySleepMs = 4000'                                     ReturnRingReady = true'                                     TimeoutSeconds = 20                                 };
Magic Number,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_originate_string,The following statement contains a magic number: var options = new OriginateOptions()                                 {                                     UUID = "985cea12-4e70-4c03-8a2c-2c4b4502bbbb"'                                     BypassMedia = true'                                     CallerIdName = "Test"'                                     CallerIdNumber = "12341234"'                                     ExecuteOnOriginate = "start_dtmf"'                                     HangupAfterBridge = false'                                     IgnoreEarlyMedia = true'                                     Retries = 3'                                     RetrySleepMs = 4000'                                     ReturnRingReady = true'                                     TimeoutSeconds = 20                                 };
Magic Number,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_originate_string,The following statement contains a magic number: var options = new OriginateOptions()                                 {                                     UUID = "985cea12-4e70-4c03-8a2c-2c4b4502bbbb"'                                     BypassMedia = true'                                     CallerIdName = "Test"'                                     CallerIdNumber = "12341234"'                                     ExecuteOnOriginate = "start_dtmf"'                                     HangupAfterBridge = false'                                     IgnoreEarlyMedia = true'                                     Retries = 3'                                     RetrySleepMs = 4000'                                     ReturnRingReady = true'                                     TimeoutSeconds = 20                                 };
Magic Number,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_play_get_digits_string,The following statement contains a magic number: var options = new PlayGetDigitsOptions()                                {                                    MinDigits = 4'                                    MaxDigits = 8'                                    MaxTries = 3'                                    TimeoutMs = 4000'                                    TerminatorDigits = "#"'                                    PromptAudioFile =                                        "ivr/8000/ivr-please_enter_pin_followed_by_pound.wav"'                                    BadInputAudioFile = "ivr/8000/ivr-that_was_an_invalid_entry.wav"'                                    DigitTimeoutMs = 2000'                                    ValidDigits = "1234567890" //note that in the command string this gets transformed into the regex ^(1|2|3|4|5|6|7|8|9|0)+                                };
Magic Number,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_play_get_digits_string,The following statement contains a magic number: var options = new PlayGetDigitsOptions()                                {                                    MinDigits = 4'                                    MaxDigits = 8'                                    MaxTries = 3'                                    TimeoutMs = 4000'                                    TerminatorDigits = "#"'                                    PromptAudioFile =                                        "ivr/8000/ivr-please_enter_pin_followed_by_pound.wav"'                                    BadInputAudioFile = "ivr/8000/ivr-that_was_an_invalid_entry.wav"'                                    DigitTimeoutMs = 2000'                                    ValidDigits = "1234567890" //note that in the command string this gets transformed into the regex ^(1|2|3|4|5|6|7|8|9|0)+                                };
Magic Number,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_play_get_digits_string,The following statement contains a magic number: var options = new PlayGetDigitsOptions()                                {                                    MinDigits = 4'                                    MaxDigits = 8'                                    MaxTries = 3'                                    TimeoutMs = 4000'                                    TerminatorDigits = "#"'                                    PromptAudioFile =                                        "ivr/8000/ivr-please_enter_pin_followed_by_pound.wav"'                                    BadInputAudioFile = "ivr/8000/ivr-that_was_an_invalid_entry.wav"'                                    DigitTimeoutMs = 2000'                                    ValidDigits = "1234567890" //note that in the command string this gets transformed into the regex ^(1|2|3|4|5|6|7|8|9|0)+                                };
Magic Number,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_play_get_digits_string,The following statement contains a magic number: var options = new PlayGetDigitsOptions()                                {                                    MinDigits = 4'                                    MaxDigits = 8'                                    MaxTries = 3'                                    TimeoutMs = 4000'                                    TerminatorDigits = "#"'                                    PromptAudioFile =                                        "ivr/8000/ivr-please_enter_pin_followed_by_pound.wav"'                                    BadInputAudioFile = "ivr/8000/ivr-that_was_an_invalid_entry.wav"'                                    DigitTimeoutMs = 2000'                                    ValidDigits = "1234567890" //note that in the command string this gets transformed into the regex ^(1|2|3|4|5|6|7|8|9|0)+                                };
Magic Number,NEventSocket.Tests,Applications,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\Applications.cs,can_build_play_get_digits_string,The following statement contains a magic number: var options = new PlayGetDigitsOptions()                                {                                    MinDigits = 4'                                    MaxDigits = 8'                                    MaxTries = 3'                                    TimeoutMs = 4000'                                    TerminatorDigits = "#"'                                    PromptAudioFile =                                        "ivr/8000/ivr-please_enter_pin_followed_by_pound.wav"'                                    BadInputAudioFile = "ivr/8000/ivr-that_was_an_invalid_entry.wav"'                                    DigitTimeoutMs = 2000'                                    ValidDigits = "1234567890" //note that in the command string this gets transformed into the regex ^(1|2|3|4|5|6|7|8|9|0)+                                };
Magic Number,NEventSocket.Tests,BridgeTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\BridgeTests.cs,can_format_BridgeOptions,The following statement contains a magic number: var options = new BridgeOptions()              {                  UUID = "985cea12-4e70-4c03-8a2c-2c4b4502bbbb"'                  TimeoutSeconds = 20'                  CallerIdName = "Dan B Leg"'                  CallerIdNumber = "987654321"'                  HangupAfterBridge = false'                  IgnoreEarlyMedia = true'                  ContinueOnFail = true'                  RingBack = "${uk-ring}"              };
Magic Number,NEventSocket.Tests,BridgeTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\BridgeTests.cs,can_serialize_and_deserialize_BridgeOptions,The following statement contains a magic number: var options = new BridgeOptions()                  {                      UUID = "985cea12-4e70-4c03-8a2c-2c4b4502bbbb"'                      TimeoutSeconds = 20'                      CallerIdName = "Dan B Leg"'                      CallerIdNumber = "987654321"'                      HangupAfterBridge = false'                      IgnoreEarlyMedia = true'                      ContinueOnFail = true'                      RingBack = "${uk-ring}"                  };
Magic Number,NEventSocket.Tests,OriginateTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\OriginateTests.cs,Can_format_originate_options,The following statement contains a magic number: var options = new OriginateOptions()                                {                                    CallerIdName = "Dan"'                                    CallerIdNumber = "0123457890"'                                    ExecuteOnOriginate = "my_app::my_arg"'                                    Retries = 5'                                    RetrySleepMs = 200'                                    ReturnRingReady = true'                                    TimeoutSeconds = 60'                                    UUID = "83fe4f3d-b957-4b26-b6bf-3879d7e21972"'                                    IgnoreEarlyMedia = true'                                };
Magic Number,NEventSocket.Tests,OriginateTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\OriginateTests.cs,Can_format_originate_options,The following statement contains a magic number: var options = new OriginateOptions()                                {                                    CallerIdName = "Dan"'                                    CallerIdNumber = "0123457890"'                                    ExecuteOnOriginate = "my_app::my_arg"'                                    Retries = 5'                                    RetrySleepMs = 200'                                    ReturnRingReady = true'                                    TimeoutSeconds = 60'                                    UUID = "83fe4f3d-b957-4b26-b6bf-3879d7e21972"'                                    IgnoreEarlyMedia = true'                                };
Magic Number,NEventSocket.Tests,OriginateTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\OriginateTests.cs,Can_format_originate_options,The following statement contains a magic number: var options = new OriginateOptions()                                {                                    CallerIdName = "Dan"'                                    CallerIdNumber = "0123457890"'                                    ExecuteOnOriginate = "my_app::my_arg"'                                    Retries = 5'                                    RetrySleepMs = 200'                                    ReturnRingReady = true'                                    TimeoutSeconds = 60'                                    UUID = "83fe4f3d-b957-4b26-b6bf-3879d7e21972"'                                    IgnoreEarlyMedia = true'                                };
Magic Number,NEventSocket.Tests,OriginateTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\OriginateTests.cs,can_serialize_and_deserialize_OriginateOptions,The following statement contains a magic number: var options = new OriginateOptions()                  {                      CallerIdName = "Dan"'                      CallerIdNumber = "0123457890"'                      ExecuteOnOriginate = "my_app::my_arg"'                      Retries = 5'                      RetrySleepMs = 200'                      ReturnRingReady = true'                      TimeoutSeconds = 60'                      UUID = "83fe4f3d-b957-4b26-b6bf-3879d7e21972"'                      IgnoreEarlyMedia = true'                  };
Magic Number,NEventSocket.Tests,OriginateTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\OriginateTests.cs,can_serialize_and_deserialize_OriginateOptions,The following statement contains a magic number: var options = new OriginateOptions()                  {                      CallerIdName = "Dan"'                      CallerIdNumber = "0123457890"'                      ExecuteOnOriginate = "my_app::my_arg"'                      Retries = 5'                      RetrySleepMs = 200'                      ReturnRingReady = true'                      TimeoutSeconds = 60'                      UUID = "83fe4f3d-b957-4b26-b6bf-3879d7e21972"'                      IgnoreEarlyMedia = true'                  };
Magic Number,NEventSocket.Tests,OriginateTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Applications\OriginateTests.cs,can_serialize_and_deserialize_OriginateOptions,The following statement contains a magic number: var options = new OriginateOptions()                  {                      CallerIdName = "Dan"'                      CallerIdNumber = "0123457890"'                      ExecuteOnOriginate = "my_app::my_arg"'                      Retries = 5'                      RetrySleepMs = 200'                      ReturnRingReady = true'                      TimeoutSeconds = 60'                      UUID = "83fe4f3d-b957-4b26-b6bf-3879d7e21972"'                      IgnoreEarlyMedia = true'                  };
Magic Number,NEventSocket.Tests.Fakes,FakeFreeSwitchSocket,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Fakes\FakeFreeSwitchSocket.cs,FakeFreeSwitchSocket,The following statement contains a magic number: Receiver.SelectMany(x => Encoding.ASCII.GetString(x))                  .AggregateUntil(                      () => new StringBuilder()' (sb' c) => sb.Append(c)' sb => sb.ToString().EndsWith("\n\n"))                  .Select(x => x.ToString().Remove(x.Length - 2' 2))                  .Subscribe(                      x => incomingMessages.OnNext(x)'                      ex => incomingMessages.OnError(ex)'                      () => incomingMessages.OnCompleted());
Magic Number,NEventSocket.Tests.Fakes,FakeFreeSwitchSocket,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Fakes\FakeFreeSwitchSocket.cs,FakeFreeSwitchSocket,The following statement contains a magic number: Receiver.SelectMany(x => Encoding.ASCII.GetString(x))                  .AggregateUntil(                      () => new StringBuilder()' (sb' c) => sb.Append(c)' sb => sb.ToString().EndsWith("\n\n"))                  .Select(x => x.ToString().Remove(x.Length - 2' 2))                  .Subscribe(                      x => incomingMessages.OnNext(x)'                      ex => incomingMessages.OnError(ex)'                      () => incomingMessages.OnCompleted());
Magic Number,NEventSocket.Tests.Fakes,FakeFreeSwitchSocket,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Fakes\FakeFreeSwitchSocket.cs,SendApiResponseError,The following statement contains a magic number: return SendAsync("Content-Type: api/response\nContent-Length: {0}\n\n-ERR {1}".Fmt(5 + error.Length' error)' CancellationToken.None);
Magic Number,NEventSocket.Tests.Fakes,ProblematicListener,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Fakes\ProblematicListener.cs,ProblematicSocketFactory,The following statement contains a magic number: Interlocked.Increment(ref Counter) % 2 != 0
Magic Number,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_AuthRequest_received_it_should_throw_TimeoutException_wrapped_in_InboundSocketConnectionFailedException,The following statement contains a magic number: var aggregateException = Record.Exception(() => InboundSocket.Connect("127.0.0.1"' listener.Port' "ClueCon"' TimeSpan.FromMilliseconds(100)).Wait());
Magic Number,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_response_to_auth_received_it_should_throw_TimeoutException_wrapped_in_InboundSocketConnectionFailedException,The following statement contains a magic number: var aggregateException = Record.Exception(() => InboundSocket.Connect("127.0.0.1"' listener.Port' "ClueCon"' TimeSpan.FromMilliseconds(100)).Wait());
Magic Number,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_api_response_received_it_should_throw_a_TimeOutException,The following statement contains a magic number: listener.Connections.Subscribe(                      async socket =>                      {                          socket.MessagesReceived.FirstAsync(m => m.Equals("auth ClueCon"))                                .Subscribe(async m =>                                {                                    await socket.SendCommandReplyOk();                                });                            socket.MessagesReceived.FirstAsync(m => m.StartsWith("api"))                                .Subscribe(async m =>                                    {                                        apiRequestReceived = true;                                        await Task.Delay(1000);                                        await socket.SendApiResponseError("error");                                    });                            socket.MessagesReceived.Where(m => m.Equals("exit"))                                .Subscribe(                                    async _ =>                                    {                                        await socket.SendCommandReplyOk();                                        await socket.SendDisconnectNotice();                                    });                            await socket.Send("Content-Type: auth/request");                      });
Magic Number,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_api_response_received_it_should_throw_a_TimeOutException,The following statement contains a magic number: client.ResponseTimeOut = TimeSpan.FromMilliseconds(100);
Magic Number,NEventSocket.Tests.Sockets,InboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\InboundSocketTests.cs,when_no_command_reply_received_it_should_throw_a_TimeOutException,The following statement contains a magic number: listener.Connections.Subscribe(                      async socket =>                      {                          socket.MessagesReceived.FirstAsync(m => m.Equals("auth ClueCon"))                                .Subscribe(async m =>                                {                                    await socket.SendCommandReplyOk();                                });                            socket.MessagesReceived.FirstAsync(m => m.StartsWith("test"))                                .Subscribe(async m =>                                {                                    commandRequestReceived = true;                                    await Task.Delay(1000);                                    await socket.SendCommandReplyError("error");                                });                            await socket.Send("Content-Type: auth/request");                      });
Magic Number,NEventSocket.Tests.Sockets,OutboundSocketTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\OutboundSocketTests.cs,Calling_Exit_on_a_disconnected_OutboundSocket_should_close_gracefully,The following statement contains a magic number: freeSwitch.MessagesReceived.FirstAsync(m => m.StartsWith("connect"))                            .Subscribe(async _ =>                                {                                     await freeSwitch.SendChannelDataEvent();                                    await Task.Delay(500);                                    freeSwitch.Dispose();                                });
Magic Number,NEventSocket.Tests.Sockets,OutboundListenerTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\OutboundListenerTests.cs,Can_restart_the_listener_after_stopping,The following statement contains a magic number: await Wait.Until(() => counter == 2);
Magic Number,NEventSocket.Tests.Sockets,OutboundListenerTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\OutboundListenerTests.cs,each_new_connection_produces_a_new_outbound_socket_from_the_Connections_observable,The following statement contains a magic number: const int NumberOfConnections = 3;
Magic Number,NEventSocket.Tests.Sockets,OutboundListenerTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Sockets\OutboundListenerTests.cs,ProblematicSocket_connect_errors_should_not_cause_subsequent_connections_to_fail,The following statement contains a magic number: Assert.Equal(2' ProblematicListener.Counter);
Magic Number,NEventSocket.Tests.TestSupport,Wait,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\TestSupport\Wait.cs,Until,The following statement contains a magic number: await Task.Delay(100);
Magic Number,NEventSocket.Tests.TestSupport,PreventThreadPoolStarvation,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\TestSupport\TimeOut.cs,PreventThreadPoolStarvationWhenRunningTestsInParallel,The following statement contains a magic number: System.Threading.ThreadPool.SetMaxThreads(maxThreads * 2' maxIoPorts * 2);
Magic Number,NEventSocket.Tests.TestSupport,PreventThreadPoolStarvation,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\TestSupport\TimeOut.cs,PreventThreadPoolStarvationWhenRunningTestsInParallel,The following statement contains a magic number: System.Threading.ThreadPool.SetMaxThreads(maxThreads * 2' maxIoPorts * 2);
Magic Number,NEventSocket.Tests.Util,StringExtensionsTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Util\StringExtensionsTests.cs,can_format_strings,The following statement contains a magic number: var output = Format.Fmt(1' 2' 3);
Magic Number,NEventSocket.Tests.Util,StringExtensionsTests,D:\research\architectureSmells\repos\danbarua_NEventSocket\test\NEventSocket.Tests\Util\StringExtensionsTests.cs,can_format_strings,The following statement contains a magic number: var output = Format.Fmt(1' 2' 3);
