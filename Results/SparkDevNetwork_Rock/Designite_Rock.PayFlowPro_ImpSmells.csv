Implementation smell,Namespace,Class,File,Method,Description
Long Method,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetPayments,The method has 124 lines of code.
Complex Method,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,Charge,Cyclomatic complexity of the method is 8
Complex Method,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetPayments,Cyclomatic complexity of the method is 8
Long Parameter List,Rock.PayFlowPro.Reporting,Api,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Reporting\Api.cs,Api,The method has 5 parameters. Parameters: user' vendor' partner' password' test
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,Authorize,The length of the statement  "                    var ppTransaction = new ReferenceTransaction( "Authorization"' reference.TransactionCode' GetUserInfo( financialGateway )' GetConnection( financialGateway )' invoice' tender' PayflowUtility.RequestId ); " is 202.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,Authorize,The length of the statement  "                    var ppTransaction = new AuthorizationTransaction( GetUserInfo( financialGateway )' GetConnection( financialGateway )' invoice' tender' PayflowUtility.RequestId ); " is 162.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,Charge,The length of the statement  "                    var ppTransaction = new ReferenceTransaction( "Sale"' reference.TransactionCode' GetUserInfo( financialGateway )' GetConnection( financialGateway )' invoice' tender' PayflowUtility.RequestId ); " is 193.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,Charge,The length of the statement  "                    var ppTransaction = new SaleTransaction( GetUserInfo( financialGateway )' GetConnection( financialGateway )' invoice' tender' PayflowUtility.RequestId ); " is 153.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,Credit,The length of the statement  "                var ppTransaction = new CreditTransaction( origTransaction.TransactionCode' GetUserInfo( origTransaction.FinancialGateway )' GetConnection( origTransaction.FinancialGateway )' ppInvoice' PayflowUtility.RequestId ); " is 214.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,AddScheduledPayment,The length of the statement  "            var ppTransaction = new RecurringAddTransaction( GetUserInfo( financialGateway )' GetConnection( financialGateway )' GetInvoice( paymentInfo )' GetTender( paymentInfo )' " is 169.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,ReactivateScheduledPayment,The length of the statement  "            var ppTransaction = new RecurringReActivateTransaction( GetUserInfo( financialGateway )' GetConnection( financialGateway )' GetRecurring( transaction )' PayflowUtility.RequestId ); " is 180.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,UpdateScheduledPayment,The length of the statement  "                ppTransaction = new RecurringModifyTransaction( GetUserInfo( financialGateway )' GetConnection( financialGateway )' GetRecurring( transaction )' GetInvoice( paymentInfo )' GetTender( paymentInfo )' PayflowUtility.RequestId ); " is 225.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,UpdateScheduledPayment,The length of the statement  "                ppTransaction = new RecurringModifyTransaction( GetUserInfo( financialGateway )' GetConnection( financialGateway )' GetRecurring( transaction )' PayflowUtility.RequestId ); " is 172.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,CancelScheduledPayment,The length of the statement  "            var ppTransaction = new RecurringCancelTransaction( GetUserInfo( financialGateway )' GetConnection( financialGateway )' GetRecurring( transaction )' PayflowUtility.RequestId ); " is 176.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetScheduledPaymentStatus,The length of the statement  "            var ppTransaction = new RecurringInquiryTransaction( GetUserInfo( financialGateway )' GetConnection( financialGateway )' GetRecurring( transaction )' PayflowUtility.RequestId ); " is 177.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetPayments,The length of the statement  "            DataTable recurringBillingTable = reportingApi.GetReport( "RecurringBillingReport"' recurringBillingParams' out errorMessage ); " is 127.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetPayments,The length of the statement  "                var creditCardTypes = DefinedTypeCache.Get( Rock.SystemGuid.DefinedType.FINANCIAL_CREDIT_CARD_TYPE.AsGuid() ).DefinedValues; " is 124.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetPayments,The length of the statement  "                        // If the custom report did not include the transaction' run a transactionIDSearch report to get the amount and tender type " is 123.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetPayments,The length of the statement  "                        errorMessage = "The TransactionIDSearch report did not return a value for transaction: " + recurringBillingRow["Transaction ID"].ToString(); " is 140.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetFinancialGateway,The length of the statement  "            return transaction != null ? GetFinancialGateway( transaction.FinancialGateway' transaction.FinancialGatewayId ) : null; " is 120.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetFinancialGateway,The length of the statement  "            return scheduledTransaction != null ? GetFinancialGateway( scheduledTransaction.FinancialGateway' scheduledTransaction.FinancialGatewayId ) : null; " is 147.
Long Statement,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,SetPayPeriod,The length of the statement  "            // see https://www.paypalobjects.com/webstatic/en_US/developer/docs/pdf/wpppe_rp_guide.pdf for how these are implemented " is 120.
Magic Number,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,GetPayments,The following statement contains a magic number: amount = decimal.TryParse( customTable.Rows[rowNumber]["Amount"].ToString()' out amount ) ? ( amount / 100 ) : 0.0M;
Magic Number,Rock.PayFlowPro.Reporting,ReportRequest,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Reporting\ReportRequest.cs,ReportRequest,The following statement contains a magic number: PageSize = 50;
Magic Number,Rock.PayFlowPro.Reporting,SearchRequest,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Reporting\SearchRequest.cs,SearchRequest,The following statement contains a magic number: PageSize = 50;
Missing Default,Rock.PayFlowPro,Gateway,D:\research\architectureSmells\repos1\SparkDevNetwork_Rock\Rock.PayFlowPro\Gateway.cs,SetPayPeriod,The following switch statement is missing a default case: switch ( selectedFrequencyGuid )              {                  case Rock.SystemGuid.DefinedValue.TRANSACTION_FREQUENCY_ONE_TIME:                      recurringInfo.PayPeriod = "YEAR";                      recurringInfo.Term = 1;                      break;                  case Rock.SystemGuid.DefinedValue.TRANSACTION_FREQUENCY_WEEKLY:                      recurringInfo.PayPeriod = "WEEK";                      break;                  case Rock.SystemGuid.DefinedValue.TRANSACTION_FREQUENCY_BIWEEKLY:                      recurringInfo.PayPeriod = "BIWK";                      break;                  case Rock.SystemGuid.DefinedValue.TRANSACTION_FREQUENCY_TWICEMONTHLY:                      recurringInfo.PayPeriod = "SMMO";                      break;                  case Rock.SystemGuid.DefinedValue.TRANSACTION_FREQUENCY_MONTHLY:                      recurringInfo.PayPeriod = "MONT";                      break;              }
