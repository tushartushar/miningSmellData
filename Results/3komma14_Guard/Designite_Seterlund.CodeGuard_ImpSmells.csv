Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Seterlund.CodeGuard.Validators,ObjectValidatorExtensions,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Validators\ObjectValidatorExtensions.cs,IsOneOf,The length of the statement  "                arg.Message.Set(string.Format("The value of the parameter is not one of {0}"' string.Join("' "' collection.Select(x => x.ToString()).ToArray()))); " is 146.
Long Statement,Seterlund.CodeGuard.Internals,ErrorMessageFactory,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Internals\ErrorMessageFactory.cs,OutOfRange,The length of the statement  "            return string.Format("The value '{0}' of '{1}' is not in its allowed range of '{2}' to '{3}'"' arg.Value' arg.Name.Value' min' max); " is 132.
Magic Number,Seterlund.CodeGuard.Internals,ArgNameFunc<T>,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Internals\ArgNameFunc.cs,GetArgumentName,The following statement contains a magic number: return name.StartsWith("get_") ? name.Substring(4) : name;
Magic Number,Seterlund.CodeGuard.Internals,MemberInfoReader<T>,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Internals\MemberInfoReader.cs,MoveToNextPosition,The following statement contains a magic number: switch (code.OperandType)              {                  case OperandType.InlineNone:                      break;                    case OperandType.InlineI8:                  case OperandType.InlineR:                      position += 8;                      break;                    case OperandType.InlineField:                  case OperandType.InlineBrTarget:                  case OperandType.InlineMethod:                  case OperandType.InlineSig:                  case OperandType.InlineTok:                  case OperandType.InlineType:                  case OperandType.InlineI:                  case OperandType.InlineString:                  case OperandType.InlineSwitch:                  case OperandType.ShortInlineR:                      position += 4;                      break;                    case OperandType.InlineVar:                      position += 2;                      break;                    case OperandType.ShortInlineBrTarget:                  case OperandType.ShortInlineI:                  case OperandType.ShortInlineVar:                      position++;                      break;                    default:                      throw new InvalidOperationException("Unknown operand type.");              }
Magic Number,Seterlund.CodeGuard.Internals,MemberInfoReader<T>,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Internals\MemberInfoReader.cs,MoveToNextPosition,The following statement contains a magic number: switch (code.OperandType)              {                  case OperandType.InlineNone:                      break;                    case OperandType.InlineI8:                  case OperandType.InlineR:                      position += 8;                      break;                    case OperandType.InlineField:                  case OperandType.InlineBrTarget:                  case OperandType.InlineMethod:                  case OperandType.InlineSig:                  case OperandType.InlineTok:                  case OperandType.InlineType:                  case OperandType.InlineI:                  case OperandType.InlineString:                  case OperandType.InlineSwitch:                  case OperandType.ShortInlineR:                      position += 4;                      break;                    case OperandType.InlineVar:                      position += 2;                      break;                    case OperandType.ShortInlineBrTarget:                  case OperandType.ShortInlineI:                  case OperandType.ShortInlineVar:                      position++;                      break;                    default:                      throw new InvalidOperationException("Unknown operand type.");              }
Magic Number,Seterlund.CodeGuard.Internals,MemberInfoReader<T>,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Internals\MemberInfoReader.cs,MoveToNextPosition,The following statement contains a magic number: switch (code.OperandType)              {                  case OperandType.InlineNone:                      break;                    case OperandType.InlineI8:                  case OperandType.InlineR:                      position += 8;                      break;                    case OperandType.InlineField:                  case OperandType.InlineBrTarget:                  case OperandType.InlineMethod:                  case OperandType.InlineSig:                  case OperandType.InlineTok:                  case OperandType.InlineType:                  case OperandType.InlineI:                  case OperandType.InlineString:                  case OperandType.InlineSwitch:                  case OperandType.ShortInlineR:                      position += 4;                      break;                    case OperandType.InlineVar:                      position += 2;                      break;                    case OperandType.ShortInlineBrTarget:                  case OperandType.ShortInlineI:                  case OperandType.ShortInlineVar:                      position++;                      break;                    default:                      throw new InvalidOperationException("Unknown operand type.");              }
Magic Number,Seterlund.CodeGuard.Internals,MemberInfoReader<T>,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Internals\MemberInfoReader.cs,ReadInt32,The following statement contains a magic number: return ((il[position++] | (il[position++] << 8)) | (il[position++] << 0x10)) | (il[position++] << 0x18);
Magic Number,Seterlund.CodeGuard.Internals,MathUtil,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Internals\MathUtil.cs,IsPrime,The following statement contains a magic number: value < 2
Missing Default,Seterlund.CodeGuard.Internals,MemberInfoReader<T>,D:\research\architectureSmells\repos\3komma14_Guard\CodeGuard\Internals\MemberInfoReader.cs,GetMemberInfo,The following switch statement is missing a default case: switch (argumentInfo.OperandType)                  {                      case OperandType.InlineField:                          memberInfo = argType.Module.ResolveField(argumentInfo.Token' genericTypeArguments'                                                                   genericMethodArguments);                          break;                      case OperandType.InlineMethod:                          memberInfo = argType.Module.ResolveMethod(argumentInfo.Token' genericTypeArguments'                                                                    genericMethodArguments);                          break;                  }
