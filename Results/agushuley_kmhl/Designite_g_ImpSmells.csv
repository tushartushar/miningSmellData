Implementation smell,Namespace,Class,File,Method,Description
Complex Method,g,Class,C:\repos\agushuley_kmhl\g\Class.cs,CreateInstance,Cyclomatic complexity of the method is 8
Complex Method,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,Cyclomatic complexity of the method is 8
Complex Method,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,Cyclomatic complexity of the method is 8
Complex Method,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,IsSafe,Cyclomatic complexity of the method is 9
Complex Method,g.dbsync,OracleCeSyncProvider,C:\repos\agushuley_kmhl\g\dbsync\OracleCeSyncProvider.cs,OracleCeSyncProvider_OnSyncProgress,Cyclomatic complexity of the method is 38
Complex Method,g.forms,OwnerDrawList,C:\repos\agushuley_kmhl\g\forms\OwnerDrawList.cs,OnKeyDown,Cyclomatic complexity of the method is 8
Long Statement,g,DbTools,C:\repos\agushuley_kmhl\g\DbTools.cs,EschapeString,The length of the statement  "	return str.Replace ("%"' "" + eschape + '%').Replace ("_"' "" + eschape + '_').Replace ("" + eschape' "" + eschape + eschape); " is 126.
Long Statement,g.config,Config,C:\repos\agushuley_kmhl\g\config\Config.cs,loadConfig,The length of the statement  "	loadConfig (Environment.GetFolderPath (Environment.SpecialFolder.Personal) + "\\" + System.IO.Path.GetFileName (baseName)' dict); " is 129.
Long Statement,g.forms,SingleApp,C:\repos\agushuley_kmhl\g\forms\SingleApp.cs,Run,The length of the statement  "	String lockFileName = String.Format ("{0}\\{1}.lck"' System.Environment.GetFolderPath (Environment.SpecialFolder.ApplicationData)' name); " is 137.
Long Statement,g.forms,SingleApp,C:\repos\agushuley_kmhl\g\forms\SingleApp.cs,Run,The length of the statement  "			System.Windows.Forms.MessageBox.Show ("Запущен второй экземпляр приложения' новый экземпляр не будет запущен. Если Вы не согласны с этим' удалите файл " + lockFileName); " is 169.
Long Statement,g.orm.driver,OracleLiteCeDataFactory,C:\repos\agushuley_kmhl\g\orm\driver\OracleLiteCeDataFactory.cs,getAdapter,The length of the statement  "	System.Data.IDbDataAdapter adapter = Class.CreateInstance<System.Data.IDbDataAdapter> ("Oracle.Lite.Data.LiteDataAdapter' Oracle.DataAccess.Lite_wce"' null); " is 157.
Long Statement,g.orm.olitew32,OracleLiteW32Factory,C:\repos\agushuley_kmhl\g\orm\driver\OracleLiteW32Factory.cs,getConnection,The length of the statement  "	IDbConnection cnn = Class.CreateInstance<IDbConnection> ("Oracle.Lite.Data.LiteConnection' Oracle.DataAccess.Lite_w32"); " is 120.
Long Statement,g.orm.olitew32,OracleLiteW32Factory,C:\repos\agushuley_kmhl\g\orm\driver\OracleLiteW32Factory.cs,getAdapter,The length of the statement  "	IDbDataAdapter adapter = Class.CreateInstance<IDbDataAdapter> ("Oracle.Lite.Data.LiteDataAdapter' Oracle.DataAccess.Lite_w32"); " is 127.
Complex Conditional,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The conditional expression  "((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))"  is complex.
Complex Conditional,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,IsSafe,The conditional expression  "(((ch >= 'a') && (ch <= 'z')) || ((ch >= 'A') && (ch <= 'Z'))) || ((ch >= '0') && (ch <= '9'))"  is complex.
Empty Catch Block,g.forms,SingleApp,C:\repos\agushuley_kmhl\g\forms\SingleApp.cs,Run,The method has an empty catch block.
Magic Number,g,Class,C:\repos\agushuley_kmhl\g\Class.cs,CreateInstance,The following statement contains a magic number: if (typeNameParts.Length > 2) {  	throw new ArgumentException ("Type must have only two parts");  }  
Magic Number,g,Class,C:\repos\agushuley_kmhl\g\Class.cs,CreateInstance,The following statement contains a magic number: if (typeNameParts.Length >= 2) {  	// Загружаем ее  	typeAssemblyName = typeNameParts [1].Trim ();  	assembly = System.Reflection.Assembly.Load (typeAssemblyName);  	// Если сборка не загружена' то тип мы точно уже не загрузим  	if (assembly == null) {  		throw new ArgumentException ("Не смогли загрузить сборку " + typeAssemblyName);  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (int num2 = 0; num2 < num1; num2++) {  	char ch1 = s [num2];  	if (ch1 == '+') {  		ch1 = ' ';  	}  	else if ((ch1 == '%') && (num2 < (num1 - 2))) {  		if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  			int num3 = HttpUtility.HexToInt (s [num2 + 2]);  			int num4 = HttpUtility.HexToInt (s [num2 + 3]);  			int num5 = HttpUtility.HexToInt (s [num2 + 4]);  			int num6 = HttpUtility.HexToInt (s [num2 + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  				goto Label_0106;  			}  			ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  			num2 += 5;  			decoder1.AddChar (ch1);  			goto Label_0120;  		}  		int num7 = HttpUtility.HexToInt (s [num2 + 1]);  		int num8 = HttpUtility.HexToInt (s [num2 + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			byte num9 = (byte)((num7 << 4) | num8);  			num2 += 2;  			decoder1.AddByte (num9);  			goto Label_0120;  		}  	}  	Label_0106:  	if ((ch1 & 0xff80) == '\0') {  		decoder1.AddByte ((byte)ch1);  	}  	else {  		decoder1.AddChar (ch1);  	}  	Label_0120:  	;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch1 == '+') {  	ch1 = ' ';  }  else if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch1 == '%') && (num2 < (num1 - 2))) {  	if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  		int num3 = HttpUtility.HexToInt (s [num2 + 2]);  		int num4 = HttpUtility.HexToInt (s [num2 + 3]);  		int num5 = HttpUtility.HexToInt (s [num2 + 4]);  		int num6 = HttpUtility.HexToInt (s [num2 + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  			goto Label_0106;  		}  		ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  		num2 += 5;  		decoder1.AddChar (ch1);  		goto Label_0120;  	}  	int num7 = HttpUtility.HexToInt (s [num2 + 1]);  	int num8 = HttpUtility.HexToInt (s [num2 + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		byte num9 = (byte)((num7 << 4) | num8);  		num2 += 2;  		decoder1.AddByte (num9);  		goto Label_0120;  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [num2 + 1] == 'u') && (num2 < (num1 - 5))) {  	int num3 = HttpUtility.HexToInt (s [num2 + 2]);  	int num4 = HttpUtility.HexToInt (s [num2 + 3]);  	int num5 = HttpUtility.HexToInt (s [num2 + 4]);  	int num6 = HttpUtility.HexToInt (s [num2 + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))) {  		goto Label_0106;  	}  	ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  	num2 += 5;  	decoder1.AddChar (ch1);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: ch1 = (char)((ushort)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6));  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: num2 += 5;  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((num7 >= 0) && (num8 >= 0)) {  	byte num9 = (byte)((num7 << 4) | num8);  	num2 += 2;  	decoder1.AddByte (num9);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((num7 >= 0) && (num8 >= 0)) {  	byte num9 = (byte)((num7 << 4) | num8);  	num2 += 2;  	decoder1.AddByte (num9);  	goto Label_0120;  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: num2 += 2;  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: for (int num5 = 0; num5 < count; num5++) {  	byte num6 = bytes [offset + num5];  	char ch2 = (char)num6;  	if (HttpUtility.IsSafe (ch2)) {  		buffer1 [num4++] = num6;  	}  	else if (ch2 == ' ') {  		buffer1 [num4++] = 0x2b;  	}  	else {  		buffer1 [num4++] = 0x25;  		buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  		buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: for (int num5 = 0; num5 < count; num5++) {  	byte num6 = bytes [offset + num5];  	char ch2 = (char)num6;  	if (HttpUtility.IsSafe (ch2)) {  		buffer1 [num4++] = num6;  	}  	else if (ch2 == ' ') {  		buffer1 [num4++] = 0x2b;  	}  	else {  		buffer1 [num4++] = 0x25;  		buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  		buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: for (int num5 = 0; num5 < count; num5++) {  	byte num6 = bytes [offset + num5];  	char ch2 = (char)num6;  	if (HttpUtility.IsSafe (ch2)) {  		buffer1 [num4++] = num6;  	}  	else if (ch2 == ' ') {  		buffer1 [num4++] = 0x2b;  	}  	else {  		buffer1 [num4++] = 0x25;  		buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  		buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  	}  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (HttpUtility.IsSafe (ch2)) {  	buffer1 [num4++] = num6;  }  else if (ch2 == ' ') {  	buffer1 [num4++] = 0x2b;  }  else {  	buffer1 [num4++] = 0x25;  	buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  	buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (HttpUtility.IsSafe (ch2)) {  	buffer1 [num4++] = num6;  }  else if (ch2 == ' ') {  	buffer1 [num4++] = 0x2b;  }  else {  	buffer1 [num4++] = 0x25;  	buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  	buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (HttpUtility.IsSafe (ch2)) {  	buffer1 [num4++] = num6;  }  else if (ch2 == ' ') {  	buffer1 [num4++] = 0x2b;  }  else {  	buffer1 [num4++] = 0x25;  	buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  	buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (ch2 == ' ') {  	buffer1 [num4++] = 0x2b;  }  else {  	buffer1 [num4++] = 0x25;  	buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  	buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (ch2 == ' ') {  	buffer1 [num4++] = 0x2b;  }  else {  	buffer1 [num4++] = 0x25;  	buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  	buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (ch2 == ' ') {  	buffer1 [num4++] = 0x2b;  }  else {  	buffer1 [num4++] = 0x25;  	buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  	buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: buffer1 [num4++] = (byte)HttpUtility.IntToHex ((num6 >> 4) & 15);  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: buffer1 [num4++] = (byte)HttpUtility.IntToHex (num6 & 15);  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,IntToHex,The following statement contains a magic number: if (n <= 9) {  	return (char)((ushort)(n + 0x30));  }  
Magic Number,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,IntToHex,The following statement contains a magic number: return (char)((ushort)((n - 10) + 0x61));  
Magic Number,g.forms,OwnerDrawList,C:\repos\agushuley_kmhl\g\forms\OwnerDrawList.cs,OnResize,The following statement contains a magic number: if (this.items.Count > viewableItemCount) {  	this.vs.Visible = true;  	this.vs.LargeChange = viewableItemCount;  	this.offScreen = new Bitmap (this.ClientSize.Width - scrollWidth - 1' this.ClientSize.Height - 2);  }  else {  	this.vs.Visible = false;  	this.vs.LargeChange = this.items.Count;  	this.offScreen = new Bitmap (this.ClientSize.Width - 1' this.ClientSize.Height - 2);  }  
Magic Number,g.forms,OwnerDrawList,C:\repos\agushuley_kmhl\g\forms\OwnerDrawList.cs,OnResize,The following statement contains a magic number: if (this.items.Count > viewableItemCount) {  	this.vs.Visible = true;  	this.vs.LargeChange = viewableItemCount;  	this.offScreen = new Bitmap (this.ClientSize.Width - scrollWidth - 1' this.ClientSize.Height - 2);  }  else {  	this.vs.Visible = false;  	this.vs.LargeChange = this.items.Count;  	this.offScreen = new Bitmap (this.ClientSize.Width - 1' this.ClientSize.Height - 2);  }  
Magic Number,g.forms,OwnerDrawList,C:\repos\agushuley_kmhl\g\forms\OwnerDrawList.cs,OnResize,The following statement contains a magic number: this.offScreen = new Bitmap (this.ClientSize.Width - scrollWidth - 1' this.ClientSize.Height - 2);  
Magic Number,g.forms,OwnerDrawList,C:\repos\agushuley_kmhl\g\forms\OwnerDrawList.cs,OnResize,The following statement contains a magic number: this.offScreen = new Bitmap (this.ClientSize.Width - 1' this.ClientSize.Height - 2);  
Magic Number,g.forms,OwnerDrawList,C:\repos\agushuley_kmhl\g\forms\OwnerDrawList.cs,CalcTextColor,The following statement contains a magic number: if (sum > 256)  	return Color.Black;  else  	return Color.White;  
Missing Default,g,HttpUtility,C:\repos\agushuley_kmhl\g\HttpUtility.cs,IsSafe,The following switch statement is missing a default case: switch (ch) {  case '\'':  case '(':  case ')':  case '*':  case '-':  case '.':  case '_':  case '!':  	return true;  }  
Missing Default,g.dbsync,OracleCeSyncProvider,C:\repos\agushuley_kmhl\g\dbsync\OracleCeSyncProvider.cs,OracleCeSyncProvider_OnSyncProgress,The following switch statement is missing a default case: switch (args.stage) {  case SyncEventArgs.SYNC_PREPARE_START:  	state = SyncProgressState.SYNC_PREPARE_START;  	break;  case SyncEventArgs.SYNC_PREPARING:  	state = SyncProgressState.SYNC_PREPARING;  	break;  case SyncEventArgs.SYNC_PREPARE_FINISH:  	state = SyncProgressState.SYNC_PREPARE_FINISH;  	break;  case SyncEventArgs.SYNC_PROCESS_START:  	state = SyncProgressState.SYNC_PROCESS_START;  	break;  case SyncEventArgs.SYNC_PROCESSING:  	state = SyncProgressState.SYNC_PROCESSING;  	break;  case SyncEventArgs.SYNC_PROCESS_FINISH:  	state = SyncProgressState.SYNC_PROCESS_FINISH;  	break;  case SyncEventArgs.SYNC_RECEIVE_START:  	state = SyncProgressState.SYNC_RECEIVE_START;  	break;  case SyncEventArgs.SYNC_RECEIVING:  	state = SyncProgressState.SYNC_RECEIVING;  	break;  case SyncEventArgs.SYNC_RECEIVE_FINISH:  	state = SyncProgressState.SYNC_RECEIVE_FINISH;  	break;  case SyncEventArgs.SYNC_SEND_START:  	state = SyncProgressState.SYNC_SEND_START;  	break;  case SyncEventArgs.SYNC_SENDING:  	state = SyncProgressState.SYNC_SENDING;  	break;  case SyncEventArgs.SYNC_SEND_FINISH:  	state = SyncProgressState.SYNC_SEND_FINISH;  	break;  }  
Missing Default,g.forms,OwnerDrawList,C:\repos\agushuley_kmhl\g\forms\OwnerDrawList.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Down:  	if (this.SelectedIndex < this.vs.Maximum) {  		EnsureVisible (++this.SelectedIndex);  		this.Refresh ();  	}  	break;  case Keys.Up:  	if (this.SelectedIndex > this.vs.Minimum) {  		EnsureVisible (--this.SelectedIndex);  		this.Refresh ();  	}  	break;  }  
