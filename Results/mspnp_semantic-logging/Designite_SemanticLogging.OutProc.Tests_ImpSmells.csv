Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,InitializeTest,The method has 6 parameters. Parameters: serviceConfigFile' fileName' svcConfiguration' activityId' oldActivityId' shouldMonitorChanges
Long Parameter List,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ObjectArrayEvent4,The method has 5 parameters. Parameters: arg0' arg1' arg2' arg3' arg4
Long Identifier,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,,The length of the parameter SemanticLoggingServiceExecutableFilePath is 40.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSource.cs,,The length of the parameter ErrorWithKeywordDiagnosticEventId is 33.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSource.cs,,The length of the parameter CriticalWithKeywordPageEventId is 30.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSource.cs,,The length of the parameter InfoWithKeywordDiagnosticEventId is 32.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSource.cs,,The length of the parameter NonDefaultOpcodeNonDefaultVersionEventId is 40.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSource.cs,,The length of the parameter EventWithoutPayloadNorMessageId is 31.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSource.cs,,The length of the parameter ErrorWithKeywordDiagnosticEventId is 33.
Long Identifier,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSource.cs,,The length of the parameter CriticalWithKeywordPageEventId is 30.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,TestCleanup,The length of the statement  "            AzureTableHelper.DeleteTable(System.Configuration.ConfigurationManager.AppSettings["StorageConnectionString"]' AzureTableName); " is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,StartWindowsService,The length of the statement  "            Assert.IsNotNull(semanticLoggingService' "Service was not installed started. Make sure Visual Studio is ran as Administrator."); " is 128.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,ValidateAndInitSemanticLoggingService,The length of the statement  "                    " is not installed.  This test requires manually installing and starting located at " + SemanticLoggingServiceExecutableFilePath); " is 130.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,ValidateAndInitSemanticLoggingService,The length of the statement  "                        " is not installed from the correct location to run the code built for the BVTs.  Install and start the service located at " + SemanticLoggingServiceExecutableFilePath); " is 169.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,WindowsServiceIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\WindowsServiceIntegrationFixture.cs,CleanElasticsearch,The length of the statement  "                Assert.Inconclusive(String.Format("Error occured connecting to ES: Message{0}' StackTrace: {1}"' exp.Message' exp.StackTrace)); " is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingFlatFile,The length of the statement  "            string configFile = CopyConfigFileToWhereServiceExeFileIsLocatedAndReturnNewConfigFilePath("Configurations\\WinService"' "FlatFileWinService.xml"); " is 147.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingDatabase,The length of the statement  "            string configFile = CopyConfigFileToWhereServiceExeFileIsLocatedAndReturnNewConfigFilePath("Configurations\\WinService"' "sqlDB.xml"); " is 134.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingAzureTable,The length of the statement  "            string configFile = CopyConfigFileToWhereServiceExeFileIsLocatedAndReturnNewConfigFilePath("Configurations\\WinService"' "AzureTablesWinService.xml"); " is 150.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingAzureTable,The length of the statement  "            var event1 = events.SingleOrDefault(e => e.Payload.Contains(@"""message"": ""logging using windows service to azure tables""")); " is 128.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingAzureTable,The length of the statement  "            var event2 = events.SingleOrDefault(e => e.Payload.Contains(@"""message"": ""logging using windows service to azure tables 2""")); " is 130.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkProgrammatically,The length of the statement  "            SinkSettings sinkSettings = new SinkSettings("MockFlatFileSink"' subject' new List<EventSourceSettings>() { { settings } }); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenCustomSinkConstructionFails,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<Exception>(() => TraceEventServiceConfiguration.Load("Configurations\\CustomSink\\CustomSqlDBNotAllParams.xml")); " is 152.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkWithSchemaAndNotAllParametersProvided,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<Exception>(() => TraceEventServiceConfiguration.Load("Configurations\\CustomSink\\CustomSinkMissingParam.xml")); " is 151.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkWithSchemaAndNotAllParametersProvided,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The parameters specified in this element does not map to an existing type member. All paramters are required in the same order of the defined type member"); " is 195.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkAndParamsAreNotInOrder,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<Exception>(() => TraceEventServiceConfiguration.Load("Configurations\\CustomSink\\CustomSinkDiffOrder.xml")); " is 148.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkAndParamsAreNotInOrder,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The parameters specified in this element does not map to an existing type member. All paramters are required in the same order of the defined type member"); " is 195.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomFormatterProgramatically,The length of the statement  "            SinkSettings sinkSettings = new SinkSettings("flatFileSink"' subject' new List<EventSourceSettings>() { { settings } }); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenCustomFormatterThrowsAnExceptionAndUsedProgramatically,The length of the statement  "            SinkSettings sinkSettings = new SinkSettings("flatFileSink"' subject' new List<EventSourceSettings>() { { settings } }); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenCustomFormatterThrowsAnExceptionAndUsedProgramatically,The length of the statement  "                            StringAssert.Contains(collectErrorsListener.ToString()' "Payload : [message : System.InvalidOperationException: Operation is not valid due to the current state of the object."); " is 177.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenCustomFormatterThrowsAnExceptionAndUsedConfig,The length of the statement  "            TraceEventServiceConfiguration svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\CustomSink\\FlatFileCustomFormatter.xml"); " is 145.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenCustomFormatterThrowsAnExceptionAndUsedConfig,The length of the statement  "                            StringAssert.Contains(collectErrorsListener.ToString()' "Payload : [message : System.InvalidOperationException: Operation is not valid due to the current state of the object."); " is 177.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,JsonEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\JsonEventTextFormatterFixture.cs,WhenUsingJsonFormatterIndented,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileJsonFormatterIndentedOutProc.xml"); " is 134.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,JsonEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\JsonEventTextFormatterFixture.cs,WhenUsingJsonFormatterNotIndented,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileJsonFormatterOutProc.xml"); " is 126.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,JsonEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\JsonEventTextFormatterFixture.cs,WhenUsingJsonFormatterWithCustomDateTimeFormat,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileJsonFormatterDateTimeFormat.xml"); " is 133.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenUsingXmlFormatterInIndented,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileXmlFormatterIndentedOutProc.xml"); " is 133.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenUsingXmlFormatterInIndented,The length of the statement  "            Assert.AreEqual<Guid>(MockEventSourceOutProc.Logger.Guid' Guid.Parse(XmlFormattedEntry.Provider.Attribute("Guid").Value)); " is 122.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenUsingXmlFormatterInIndented,The length of the statement  "            Assert.AreEqual<int>(System.Diagnostics.Process.GetCurrentProcess().Id' Int32.Parse(XmlFormattedEntry.ProcessId.Value)); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenUsingXmlFormatterWithInvalidDateTimeFormate,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileXmlWrongDateTime.xml")); " is 169.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEventWithGuidPramLoggedInXml,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileXmlFormatterAndGuids.xml"); " is 126.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEventWithGuidPramLoggedInXml,The length of the statement  "            Assert.AreEqual<Guid>(MockEventSourceOutProcEnum.Logger.Guid' Guid.Parse(XmlFormattedEntry.Provider.Attribute("Guid").Value)); " is 126.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEnumsInPayloadInXml,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileXmlFormatterAndEnums.xml"); " is 126.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEnumsInPayloadInXml,The length of the statement  "            Assert.AreEqual<Guid>(MockEventSourceOutProcEnum.Logger.Guid' Guid.Parse(XmlFormattedEntry.Provider.Attribute("Guid").Value)); " is 126.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEnumsInPayloadInXml,The length of the statement  "            Assert.AreEqual<int>(System.Diagnostics.Process.GetCurrentProcess().Id' Int32.Parse(XmlFormattedEntry.ProcessId.Value)); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEnumsInPayloadInXml,The length of the statement  "            StringAssert.Contains(XmlFormattedEntry.Payload.ToString()' @"<Data Name=""a"">" + ((int)MockEventSourceOutProcEnum.MyColor.Red).ToString() + "</Data>"); " is 153.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEnumsInPayloadInXml,The length of the statement  "            StringAssert.Contains(XmlFormattedEntry.Payload.ToString()' @"<Data Name=""b"">" + ((int)MockEventSourceOutProcEnum.MyFlags.Flag3).ToString() + "</Data>"); " is 155.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenNotIndentedInXml,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileXmlFormatterOutProc.xml"); " is 125.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenNotIndentedInXml,The length of the statement  "            Assert.AreEqual<Guid>(MockEventSourceOutProc.Logger.Guid' Guid.Parse(XmlFormattedEntry.Provider.Attribute("Guid").Value)); " is 122.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenNotIndentedInXml,The length of the statement  "            Assert.AreEqual<int>(System.Diagnostics.Process.GetCurrentProcess().Id' Int32.Parse(XmlFormattedEntry.ProcessId.Value)); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenCustomDateTimeFormatInXml,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithFormatter\\FlatFileXmlFormatterDateTimeFormat.xml"); " is 132.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingAndTPLEventsAndMultipleSources,The length of the statement  "            Assert.AreEqual(2' entries.Count(entry => entry.Payload.ContainsKey("message") && entry.Payload["message"].ToString().ToLower().StartsWith("trigger"))); " is 152.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingAndTPLEventsAndMultipleSources,The length of the statement  "                && (entry.Payload["message"].ToString().ToLower() == "mainmessage" || entry.Payload["message"].ToString().ToLower().EndsWith("from process")))); " is 144.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenServiceStartedBeforeProcessStarted,The length of the statement  "                        process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" }; " is 135.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenServiceStartedAfterProcessStarted,The length of the statement  "                process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" }; " is 135.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenMultipleProcessesShareSameEventSource,The length of the statement  "                        process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" }; " is 135.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenFilteringMultipleProcessesSameEventSource,The length of the statement  "                        process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" }; " is 135.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSinkIsAdded,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSinkIsRemoved,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenEventLevelIsUpdated,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenKeywordIsUpdated,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSinkAddedWithErrorDoesNotRecycle,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSinkAddedWithErrorDoesNotRecycle,The length of the statement  "                            StringAssert.Contains(collectErrorsListener.ToString()' "One or more errors occurred when loading the TraceEventService configuration file."); " is 142.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSinkAddedWithErrorDoesNotRecycle,The length of the statement  "                            StringAssert.Contains(collectErrorsListener.ToString()' "The configuration was partially successfully loaded. Check logs for further error details."); " is 150.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenTwoSourcesSinkAddedThenRemoved,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenTwoSourcesSinkAddedThenRemoved,The length of the statement  "                    UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesSameListener.xml"' configFile); " is 122.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenTwoSourcesSinkAddedThenRemoved,The length of the statement  "                    UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesNoListener.xml"' configFile); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenConfigUpdatedTwice,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenConfigUpdatedTwice,The length of the statement  "                    TraceEventServiceConfiguration newConfig = TraceEventServiceConfiguration.Load("Configurations\\Reconfiguration\\NoListener.xml"); " is 130.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenConnfigUpdatedTwiceWithTwoListeners,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenConfigChangesSessionRecycles,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceAddedSessionRecycles,The length of the statement  "            var configFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\Configurations\\Reconfiguration\\temp\\configFile.xml"; " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceAddedSessionRecycles,The length of the statement  "                    UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesSameListener.xml"' configFile); " is 122.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\Reconfiguration\\TwoFlatFileListeners.xml"); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The length of the statement  "                    var newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation); " is 141.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The length of the statement  "                        var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName); " is 156.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The length of the statement  "                    newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation); " is 137.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The length of the statement  "                        var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName); " is 156.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenNoFormatterSpecified,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\RollingFlatFile\\RollingFlatFileNoFormatter.xml"); " is 126.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyFileName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\RollingFlatFile\\RollingFlatFileEmptyFileName.xml")); " is 175.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyFileName,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'fileName' attribute is invalid - The value '' is invalid according to its datatype "); " is 130.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyRollFileExistsBehavior,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\RollingFlatFile\\RollingFlatFileEmptyRollFileExistsBehavior.xml")); " is 189.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyRollFileExistsBehavior,The length of the statement  "            string expectedMessage = "The 'rollFileExistsBehavior' attribute is invalid - The value '' is invalid according to its datatype"; " is 129.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyRollInterval,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\RollingFlatFile\\RollingFlatFileEmptyRollInterval.xml")); " is 179.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyRollSizeKB,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\RollingFlatFile\\RollingFlatFileEmptyRollSizeKB.xml")); " is 177.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyTimeStampPattern,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\RollingFlatFile\\RollingFlatFileEmptyTimeStampPattern.xml")); " is 183.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyTimeStampPattern,The length of the statement  "            string expectedMessage = "The 'timeStampPattern' attribute is invalid - The value '' is invalid according to its datatype"; " is 123.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyMaxArchiveFiles,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\RollingFlatFile\\RollingFlatFileEmptyMaxArchiveFiles.xml")); " is 182.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenEmptyMaxArchiveFiles,The length of the statement  "            string expectedMessage = "The 'maxArchivedFiles' attribute is invalid - The value '' is invalid according to its datatype"; " is 123.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,RFFLSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\RFFLSinkConfigFixture.cs,WhenOnlyMandatoryProperties,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\RollingFlatFile\\RollingFlatFileMissingParams.xml"); " is 128.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenConfigurationJsonFormatterDefaultValuesForProperties,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\FlatFile\\FlatFileJsonFormatterMissingParams.xml"); " is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenConfiguringXmlFormatterDefaultValuesForProperties,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\FlatFile\\FlatFileXmlFormatterMissingParams.xml"); " is 126.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenConfiguringWithNoProperties,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\FlatFile\\FlatFileNoParams.xml")); " is 156.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenEmptyFileName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\FlatFile\\FlatFileEmptyFileName.xml")); " is 161.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenEmptyFileName,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'fileName' attribute is invalid - The value '' is invalid according to its datatype"); " is 129.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenSinkWithName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\FlatFile\\FlatFileEmptyName.xml")); " is 157.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenSinkWithName,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'name' attribute is invalid - The value '' is invalid according to its datatype"); " is 125.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenFilePathIsInvalid,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\FlatFile\\FlatWrongFormatInFile.xml")); " is 161.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConsoleSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConsoleSinkConfigFixture.cs,WhenEmptyDateTime,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\Console\\ConsoleEmptyDateTimeFormat.xml")); " is 165.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConsoleSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConsoleSinkConfigFixture.cs,WhenEmptyDateTime,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'dateTimeFormat' attribute is invalid - The value '' is invalid according to its datatype "); " is 136.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyConnectionString,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlDBEmptyConnStr.xml")); " is 180.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyConnectionString,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'connectionString' attribute is invalid - The value '' is invalid according to its datatype "); " is 138.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenMissingConnectionString,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlDBMissingConnStr.xml")); " is 182.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyInstanceName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlDBEmptyInstance.xml")); " is 181.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyInstanceName,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'instanceName' attribute is invalid - The value '' is invalid according to its datatype"); " is 133.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenMissingInstanceName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlDBMissingInstance.xml")); " is 183.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyDatabaseName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlDBEmptyName.xml")); " is 177.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyDatabaseName,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'name' attribute is invalid - The value '' is invalid according to its datatype "); " is 126.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenMissingDatabaseName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlDBMissingName.xml")); " is 179.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyBufferingInterval,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlBufferingIntervalEmpty.xml")); " is 188.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyBufferingInterval,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'bufferingIntervalInSeconds' attribute is invalid - The value '' is invalid according to its datatype "); " is 148.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyBufferingCount,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlBufferingCountEmpty.xml")); " is 185.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyBufferingCount,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'bufferingCount' attribute is invalid - The value '' is invalid according to its datatype "); " is 136.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyTableName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<EtwConfig.ConfigurationException>(() => EtwConfig.TraceEventServiceConfiguration.Load("Configurations\\SqlDatabase\\SqlDBTableEmpty.xml")); " is 178.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenEmptyTableName,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'tableName' attribute is invalid - The value '' is invalid according to its datatype"); " is 130.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenMissingConnectionString,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesMissingConnectionString.xml")); " is 177.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenMissingInstanceName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesMissingInstanceName.xml")); " is 173.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenMissingTableAddress,The length of the statement  "            var serviceConfiguration = TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesMissingTableAddress.xml"); " is 130.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenEmptyConnStr,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesEmptyConnectionString.xml")); " is 175.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenEmptyConnStr,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'connectionString' attribute is invalid - The value '' is invalid according to its datatype "); " is 138.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenEmptyInstanceName,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesEmptyInstanceName.xml")); " is 171.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenEmptyInstanceName,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'instanceName' attribute is invalid - The value '' is invalid according to its datatype"); " is 133.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenmptyTableAddress,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesEmptyTableAddress.xml")); " is 171.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenmptyTableAddress,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'tableAddress' attribute is invalid - The value '' is invalid according to its datatype"); " is 133.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenMaxBufferSizeEmpty,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesMaxBufferSizeEmpty.xml")); " is 172.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenMaxBufferSizeEmpty,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'maxBufferSize' attribute is invalid - The value '' is invalid according to its datatype"); " is 134.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenMaxBufferSizeLessThan500,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesMaxBufferSizeValidation.xml")); " is 177.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,AzureSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\AzureSinkConfigFixture.cs,WhenConfigValidAndComplete,The length of the statement  "            var serviceConfiguration = TraceEventServiceConfiguration.Load("Configurations\\AzureTables\\AzureTablesMaxBufferSize.xml"); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenTwoEventSourcesAreUsedInOneCollector,The length of the statement  "            SinkSettings sinkSettings = new SinkSettings("dbSink"' subject' new List<EventSourceSettings>() { settings' settings2 }); " is 121.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenEventsAreFiltered,The length of the statement  "            SinkSettings sinkSettings = new SinkSettings("flatFileSink"' subject' new List<EventSourceSettings>() { { settings } }); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenInfoAndMoreVerboseLevelsAreFiltered,The length of the statement  "            SinkSettings sinkSettings = new SinkSettings("flatFileSink"' subject' new List<EventSourceSettings>() { { settings } }); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenMoreVerboseEventsAreFilteredInConfig,The length of the statement  "            TraceEventServiceConfiguration svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\LevelFiltering\\LevelFiltering.xml"); " is 140.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenSomeKeywordsAreFiltered,The length of the statement  "            TraceEventServiceConfiguration svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\KeywordFiltering\\keywordFiltering.xml"); " is 144.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSessionNameIsTooLong,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\LongSessionPrefix.xml")); " is 147.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSinkNameIsTooLong,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\LongSinkName.xml")); " is 142.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkAssemblyNotFound,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\BasicConfigMissingAssembly.xml")); " is 156.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkAssemblyNotFound,The length of the statement  "            StringAssert.Contains(exc.ToString()' "One or more errors occurred when loading the TraceEventService configuration file."); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkAssemblyNotFound,The length of the statement  "            StringAssert.Contains(exc.ToString()' "Could not load file or assembly 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Tests' or one of its dependencies. The system cannot find the file specified."); " is 206.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkTypeIsMissing,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\BasicConfigWrongType.xml")); " is 150.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkTypeIsMissing,The length of the statement  "            StringAssert.Contains(exc.ToString()' "One or more errors occurred when loading the TraceEventService configuration file."); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkTypeIsMissing,The length of the statement  "            StringAssert.Contains(exc.ToString()' "Could not load type 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects.Foo' from assembly 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests'."); " is 232.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenFormatterTypeNotFound,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\WithWrongFormatterParameter2.xml")); " is 158.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenFormatterTypeNotFound,The length of the statement  "            StringAssert.Contains(exc.ToString()' "One or more errors occurred when loading the TraceEventService configuration file."); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenFormatterTypeNotFound,The length of the statement  "            StringAssert.Contains(exc.ToString()' "Could not load type 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Formatters' from assembly 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging'."); " is 199.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenWrongTypeForFormatter,The length of the statement  "            var svcConfiguration = TraceEventServiceConfiguration.Load("Configurations\\WithWrongFormatterParameter.xml"' createSinks: false); " is 130.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenUsingWrongFormatter,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\WithWrongFormatter.xml")); " is 148.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenUsingWrongFormatter,The length of the statement  "            StringAssert.Contains(exc.ToString()' "One or more errors occurred when loading the TraceEventService configuration file."); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenUsingWrongFormatter,The length of the statement  "            StringAssert.Contains(exc.ToString()' "Could not load type 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.CustomFormatterWithWait' from assembly 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests'."); " is 240.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenListenerMissing,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\BasicConfigError.xml")); " is 146.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenListenerMissing,The length of the statement  "            StringAssert.Contains(exc.Message' "One or more errors occurred when loading the TraceEventService configuration file."); " is 121.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenListenerMissing,The length of the statement  "            StringAssert.Contains(exc.ToString()' "Could not load type 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects.Foo' from assembly 'Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests'."); " is 232.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenOnlyGuidForEventSource,The length of the statement  "            Assert.AreEqual(new Guid("659518be-d338-564b-2759-c63c10ef82e2")' svcConfig.SinkSettings[0].EventSources.First().EventSourceId); " is 128.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenBothNameAndIDSpecified,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\BasicConfigSourceNameAndId.xml")); " is 156.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenBothNameAndIDSpecified,The length of the statement  "            StringAssert.Contains(exc.ToString()' "There is an ambiguity when both name and id are specified. Specify only one value."); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenNoEventSourceProperties,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\BasicConfigNoEventSourceIdentifier.xml")); " is 164.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenNoEventSourceProperties,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The EventSource 'name' and 'id' values are missing. Please provide either name or id."); " is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenDefaultValues,The length of the statement  "            Assert.AreEqual(new Guid("f150d8fb-960c-5e38-a69d-49bae6f97289")' svcConfiguration.SinkSettings[0].EventSources.First().EventSourceId); " is 135.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenKeywordsISEmpty,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\EmptyKeyword.xml")); " is 142.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenKeywordsISEmpty,The length of the statement  "            StringAssert.Contains(exc.ToString()' "One or more errors occurred when loading the TraceEventService configuration file."); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenKeywordsISEmpty,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'matchAnyKeyword' attribute is invalid - The value '' is invalid according to its datatype"); " is 136.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenKeywordISInvalid,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\StringKeyword.xml")); " is 143.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenKeywordISInvalid,The length of the statement  "            StringAssert.Contains(exc.ToString()' "One or more errors occurred when loading the TraceEventService configuration file."); " is 124.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenKeywordISInvalid,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'matchAnyKeyword' attribute is invalid - The value 'Database' is invalid according to its datatype 'http://www.w3.org/2001/XMLSchema:long' - The string 'Database' is not a valid Int64 value."); " is 236.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSessionPrefixIsEmpty,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\ConfigSessionNameEmpty.xml")); " is 152.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSessionPrefixIsEmpty,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'sessionNamePrefix' attribute is invalid - The value '' is invalid according to its datatype "); " is 139.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSourceNameIsEmpty,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\NoEventSourceName.xml")); " is 147.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSourceNameIsEmpty,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The EventSource 'name' and 'id' values are missing. Please provide either name or id."); " is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenDuplicateSinkNames,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\TwoSinksSameName.xml")); " is 146.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkSchemHasInvalidProperty,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\InnerSchemaValidation.xml")); " is 151.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkSchemHasInvalidProperty,The length of the statement  "            StringAssert.Contains(exc.Message' "One or more errors occurred when loading the TraceEventService configuration file."); " is 121.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkSchemaHasInvalidPropertyValue,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\ExternalSchemaValidation.xml")); " is 154.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkSchemaHasInvalidPropertyValue,The length of the statement  "            StringAssert.Contains(exc.ToString()' "The 'attr' attribute is invalid - The value 'foo' is invalid according to its datatype"); " is 128.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenCustomSinkSchemaHasMissingAttribute,The length of the statement  "            var exc = ExceptionAssertHelper.Throws<ConfigurationException>(() => TraceEventServiceConfiguration.Load("Configurations\\InnerSchemaValidation2.xml")); " is 152.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,Teardown,The length of the statement  "                AzureTableHelper.DeleteTable(System.Configuration.ConfigurationManager.AppSettings["StorageConnectionString"]' this.tableName); " is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,DatabaseSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\DatabaseSinkFixture.cs,WhenProcessId,The length of the statement  "            Assert.AreEqual(System.Diagnostics.Process.GetCurrentProcess().Id' Convert.ToInt32(eventsDataTable.Rows[0]["ProcessId"])); " is 122.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingFlatFileSinkProgrammatic,The length of the statement  "            SinkSettings sinkSettings = new SinkSettings("flatFileSink"' subject' new List<EventSourceSettings>() { { settings } }); " is 120.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingRollingSinkProgrammatic,The length of the statement  "            SinkSettings sinkSettings = new SinkSettings("rollingFlatFileSink"' subject' new List<EventSourceSettings>() { { settings } }); " is 127.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenObjectArgPayload,The length of the statement  "            StringAssert.Contains(entries.First()' "Payload : [arg0 : 10] [arg1 : stringarg1] [arg2 : 20] [arg3 : stringarg3] [arg4 : 30]"); " is 128.
Long Statement,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,CustomFormatterWithWait,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\CustomFormatterWithWait.cs,FormatPayload,The length of the statement  "                    sb.AppendFormat(" [{0} : {1}]"' "Exception"' string.Format(CultureInfo.CurrentCulture' TextSerializationError' e.Message)); " is 123.
Empty Catch Block,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,StopAllSemanticSvcInstances,The method has an empty catch block.
Empty Catch Block,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,StopService,The method has an empty catch block.
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,StopService,The following statement contains a magic number: svc.WaitForStatus(ServiceControllerStatus.Stopped' TimeSpan.FromSeconds(30));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,End2EndFixtureBase,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\End2EndFixtureBase.cs,StartServiceAsConsoleWithConfig,The following statement contains a magic number: System.Threading.Tasks.Task.Delay(TimeSpan.FromSeconds(5)).Wait();
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,WindowsServiceIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\WindowsServiceIntegrationFixture.cs,WhenUsingFlatFile,The following statement contains a magic number: entries = FlatFileHelper.PollUntilTextEventsAreWritten(FlatFileName' 2' "----------");
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,WindowsServiceIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\WindowsServiceIntegrationFixture.cs,WhenUsingFlatFile,The following statement contains a magic number: Assert.AreEqual(2' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,WindowsServiceIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\WindowsServiceIntegrationFixture.cs,WhenUsingAzureTable,The following statement contains a magic number: events = AzureTableHelper.PollForEvents(connectionString' End2EndFixtureBase.AzureTableName' 2);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,WindowsServiceIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\WindowsServiceIntegrationFixture.cs,WhenUsingAzureTable,The following statement contains a magic number: Assert.AreEqual(2' events.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingFlatFile,The following statement contains a magic number: this.ExecuteServiceTest(configFile' () =>              {                  logger.LogSomeMessage("logging to the windows service");                  logger.LogSomeMessage("logging to the windows service 2");                    entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "----------");              });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingFlatFile,The following statement contains a magic number: Assert.AreEqual(2' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingDatabase,The following statement contains a magic number: this.ExecuteServiceTest(configFile' () =>                  {                      logger.LogSomeMessage("logging to the windows service");                      logger.LogSomeMessage("logging to the windows service 2");                        logsTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 2);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingDatabase,The following statement contains a magic number: Assert.AreEqual(2' logsTable.Rows.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingAzureTable,The following statement contains a magic number: this.ExecuteServiceTest(configFile' () =>                  {                      logger.LogSomeMessage("logging using windows service to azure tables");                      logger.LogSomeMessage("logging using windows service to azure tables 2");                        events = AzureTableHelper.PollForEvents(connectionString' AzureTableName' 2);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.End2End,IntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\End2End\IntegrationFixture.cs,WhenUsingAzureTable,The following statement contains a magic number: Assert.AreEqual(2' events.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkWithSchema,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var logger = MockEventSourceOutProc.Logger;                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkWithSchema,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var logger = MockEventSourceOutProc.Logger;                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkWithSchema,The following statement contains a magic number: Assert.AreEqual(10' eventsDataTable.Rows.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var logger = MockEventSourceOutProc.Logger;                      logger.LogSomeMessage(message);                      logger.LogSomeMessage(message2);                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName1' 10' "--==--");                      entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 10' "==-==");                      DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 4);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var logger = MockEventSourceOutProc.Logger;                      logger.LogSomeMessage(message);                      logger.LogSomeMessage(message2);                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName1' 10' "--==--");                      entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 10' "==-==");                      DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 4);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var logger = MockEventSourceOutProc.Logger;                      logger.LogSomeMessage(message);                      logger.LogSomeMessage(message2);                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName1' 10' "--==--");                      entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 10' "==-==");                      DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 4);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual<int>(2' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual<int>(2' entries2.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(4' dt.Rows.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(2' rowsWithMessage1.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(4' (int)dr["Level"]);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(8' (int)dr["EventID"]);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(4' (int)dr["Level"]);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(8' (int)dr["EventID"]);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(2' rowsWithMessage2.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(4' (int)dr["Level"]);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(8' (int)dr["EventID"]);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(4' (int)dr["Level"]);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkBuiltInSinksForSameSource,The following statement contains a magic number: Assert.AreEqual(8' (int)dr["EventID"]);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkWithoutSchema,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      logger.LogSomeMessage("some message");                      logger.LogSomeMessage("some message2");                      logger.LogSomeMessage("some message3");                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 3' "==-==");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkWithoutSchema,The following statement contains a magic number: Assert.AreEqual<int>(3' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkProgrammatically,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      logger.LogSomeMessage("some message");                      logger.LogSomeMessage("some message2");                      logger.LogSomeMessage("some message3");                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 3' "==-==");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenUsingCustomSinkProgrammatically,The following statement contains a magic number: Assert.AreEqual<int>(3' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenCustomFormatterThrowsAnExceptionAndUsedProgramatically,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      using (var collectErrorsListener = new InMemoryEventListener())                      {                          try                          {                              collectErrorsListener.EnableEvents(SemanticLoggingEventSource.Log' EventLevel.LogAlways' Keywords.All);                                logger.LogSomeMessage("some message using formatter that throws");                              collectErrorsListener.WaitEvents.Wait(5000);                                StringAssert.Contains(collectErrorsListener.ToString()' "Payload : [message : System.InvalidOperationException: Operation is not valid due to the current state of the object.");                          }                          finally                          {                              collectErrorsListener.DisableEvents(SemanticLoggingEventSource.Log);                          }                      }                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Extensibility,CustomSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Extensibility\CustomSinkFixture.cs,WhenCustomFormatterThrowsAnExceptionAndUsedConfig,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      using (InMemoryEventListener collectErrorsListener = new InMemoryEventListener())                      {                          try                          {                              collectErrorsListener.EnableEvents(SemanticLoggingEventSource.Log' EventLevel.Error' Keywords.All);                              logger.LogSomeMessage("some message using formatter that throws");                              collectErrorsListener.WaitEvents.Wait(5000);                                StringAssert.Contains(collectErrorsListener.ToString()' "Payload : [message : System.InvalidOperationException: Operation is not valid due to the current state of the object.");                          }                          finally                          {                              collectErrorsListener.DisableEvents(SemanticLoggingEventSource.Log);                          }                      }                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,JsonEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\JsonEventTextFormatterFixture.cs,WhenUsingJsonFormatterIndented,The following statement contains a magic number: Assert.AreEqual(8' entry.EventId);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,JsonEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\JsonEventTextFormatterFixture.cs,WhenUsingJsonFormatterNotIndented,The following statement contains a magic number: Assert.AreEqual(8' entry.EventId);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,JsonEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\JsonEventTextFormatterFixture.cs,WhenEnumsInPayloadInJson,The following statement contains a magic number: Assert.AreEqual(2' entry.Payload.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenUsingXmlFormatterInIndented,The following statement contains a magic number: Assert.AreEqual<int>(8' Convert.ToInt32(XmlFormattedEntry.EventId.Value));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenUsingXmlFormatterInIndented,The following statement contains a magic number: Assert.AreEqual<int>(65526' Int32.Parse(XmlFormattedEntry.Task.Value));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEventWithGuidPramLoggedInXml,The following statement contains a magic number: Assert.AreEqual<int>(4' Convert.ToInt32(XmlFormattedEntry.EventId.Value));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEnumsInPayloadInXml,The following statement contains a magic number: Assert.AreEqual<int>(3' Convert.ToInt32(XmlFormattedEntry.EventId.Value));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenEnumsInPayloadInXml,The following statement contains a magic number: Assert.AreEqual(2' XmlFormattedEntry.Payload.Elements().Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenNotIndentedInXml,The following statement contains a magic number: Assert.AreEqual<int>(8' Convert.ToInt32(XmlFormattedEntry.EventId.Value));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Formatters,XmlEventTextFormatterFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Formatters\XmlEventTextFormatterFixture.cs,WhenNotIndentedInXml,The following statement contains a magic number: Assert.AreEqual<int>(65526' Int32.Parse(XmlFormattedEntry.Task.Value));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingForAProcessAndProcessIsRunning,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      var triggerLogger = TriggerEventSource.Logger;                      triggerLogger.TriggerEvent("triggermessage");                      SamplingEventSource.Logger.EventToSample("mainmessage");                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 2);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingForAProcessAndProcessIsRunning,The following statement contains a magic number: Assert.AreEqual(2' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingForAProcessAndProcessIsNotRunning,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      var triggerLogger = TriggerEventSource.Logger;                      triggerLogger.TriggerEvent("triggermessage");                      SamplingEventSource.Logger.EventToSample("mainmessage");                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 2);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingAndTPLEvents,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      var triggerLogger = TriggerEventSource.Logger;                      triggerLogger.TriggerEvent("triggermessage");                      SamplingEventSource.Logger.BeforeEventToSample("mainmessage");                      Task.Run(async () => { await LogEventsAsync(); });                      SamplingEventSource.Logger.AfterEventToSample("mainmessage");                        waitObject.WaitOne();                      entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 50);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingAndTPLEvents,The following statement contains a magic number: Assert.IsTrue(entries.Count() > 40 && entries.Count() < 50);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingAndTPLEvents,The following statement contains a magic number: Assert.IsTrue(entries.Count() > 40 && entries.Count() < 50);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingAndTPLEventsAndMultipleSources,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      var triggerLogger = TriggerEventSource.Logger;                      triggerLogger.TriggerEvent("triggermessage");                      SamplingEventSource.Logger.BeforeEventToSample("mainmessage");                      SamplingEventSource1.Logger.EventToSampleFromOtherSource("mainmessage");                      Task.Run(async () => await LogEventsAsync());                      SamplingEventSource.Logger.AfterEventToSample("mainmessage");                        waitObject.WaitOne();                      entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 200);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingAndTPLEventsAndMultipleSources,The following statement contains a magic number: Assert.AreEqual(2' entries.Count(entry => entry.Payload.ContainsKey("message") && entry.Payload["message"].ToString().ToLower().StartsWith("trigger")));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenEnablingSamplingAndTPLEventsAndMultipleSources,The following statement contains a magic number: Assert.AreEqual(5' entries.Count(entry => entry.Payload.ContainsKey("message")                  && (entry.Payload["message"].ToString().ToLower() == "mainmessage" || entry.Payload["message"].ToString().ToLower().EndsWith("from process"))));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenSamplingEnabledAndTriggerEventIsNotRaised,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      SamplingEventSource.Logger.BeforeEventToSample("mainmessage");                      Task.Run(() => { SamplingEventSource.Logger.EventInATask("test"); waitObject.Set(); });                      SamplingEventSource.Logger.AfterEventToSample("mainmessage");                        waitObject.WaitOne();                      entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 50);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenServiceStartedBeforeProcessStarted,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" };                          process.Start();                            process.StandardInput.Write("x");                          process.WaitForExit(1000);                            entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 1000);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenServiceStartedBeforeProcessStarted,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" };                          process.Start();                            process.StandardInput.Write("x");                          process.WaitForExit(1000);                            entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 1000);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenServiceStartedBeforeProcessStarted,The following statement contains a magic number: Assert.AreEqual(6' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenServiceStartedAfterProcessStarted,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StandardInput.Write("x");                          process.WaitForExit(1000);                          entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 1000);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenServiceStartedAfterProcessStarted,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StandardInput.Write("x");                          process.WaitForExit(1000);                          entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 1000);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenServiceStartedAfterProcessStarted,The following statement contains a magic number: Assert.AreEqual(6' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenInvalidKeys,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      TriggerEventSource.Logger.TriggerEvent("triggermessage1");                      SamplingEventSource.Logger.EventToSample("mainmessage1");                        WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenInvalidKeys,The following statement contains a magic number: Assert.AreEqual(4' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenInvalidKeyValue,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      // Create a new TriggerEventSource instead of the normal approach of using singleton                       // This is to force the EventSource constructor to fire which is where                      // the validation happens.                      new TriggerEventSource().TriggerEvent("triggermessage1");                      SamplingEventSource.Logger.EventToSample("mainmessage1");                        Task.Delay(TimeSpan.FromSeconds(10)).Wait();                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenInvalidKeyValue,The following statement contains a magic number: Assert.AreEqual(entries.First().EventId' 811);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenSamplingIsEnabledAndDisabledAtRunTime,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      TriggerEventSource.Logger.TriggerEvent("triggermessage1");                      SamplingEventSource.Logger.EventToSample("mainmessage1");                        WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                      Assert.AreEqual(2' entries.Count());                        string configuration = File.ReadAllText(serviceConfigFile);                      configuration = configuration.Replace("true"' "false");                      File.WriteAllText(serviceConfigFile' configuration);                        Task.Delay(TimeSpan.FromSeconds(1)).Wait();                        WriteMessagesWithNewActivityId();                      WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                      Assert.AreEqual(5' entries.Count());                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenSamplingIsEnabledAndDisabledAtRunTime,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      TriggerEventSource.Logger.TriggerEvent("triggermessage1");                      SamplingEventSource.Logger.EventToSample("mainmessage1");                        WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                      Assert.AreEqual(2' entries.Count());                        string configuration = File.ReadAllText(serviceConfigFile);                      configuration = configuration.Replace("true"' "false");                      File.WriteAllText(serviceConfigFile' configuration);                        Task.Delay(TimeSpan.FromSeconds(1)).Wait();                        WriteMessagesWithNewActivityId();                      WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                      Assert.AreEqual(5' entries.Count());                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenSamplingIsEnabledAndDisabledAtRunTime,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      TriggerEventSource.Logger.TriggerEvent("triggermessage1");                      SamplingEventSource.Logger.EventToSample("mainmessage1");                        WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                      Assert.AreEqual(2' entries.Count());                        string configuration = File.ReadAllText(serviceConfigFile);                      configuration = configuration.Replace("true"' "false");                      File.WriteAllText(serviceConfigFile' configuration);                        Task.Delay(TimeSpan.FromSeconds(1)).Wait();                        WriteMessagesWithNewActivityId();                      WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                      Assert.AreEqual(5' entries.Count());                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenSamplingIsEnabledAndDisabledAtRunTime,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                  {                      TriggerEventSource.Logger.TriggerEvent("triggermessage1");                      SamplingEventSource.Logger.EventToSample("mainmessage1");                        WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                      Assert.AreEqual(2' entries.Count());                        string configuration = File.ReadAllText(serviceConfigFile);                      configuration = configuration.Replace("true"' "false");                      File.WriteAllText(serviceConfigFile' configuration);                        Task.Delay(TimeSpan.FromSeconds(1)).Wait();                        WriteMessagesWithNewActivityId();                      WriteMessagesWithNewActivityId();                        entries = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName' 4);                      Assert.AreEqual(5' entries.Count());                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenMultipleProcessesShareSameEventSource,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" };                          process.Start();                            TriggerEventSource.Logger.TriggerEvent("triggermessage1");                          SamplingEventSource.Logger.EventToSample("mainmessage1");                            process.StandardInput.Write("x");                          process.WaitForExit(1000);                          entries1 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName1' 1000);                          entries2 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName2' 1000);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenMultipleProcessesShareSameEventSource,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" };                          process.Start();                            TriggerEventSource.Logger.TriggerEvent("triggermessage1");                          SamplingEventSource.Logger.EventToSample("mainmessage1");                            process.StandardInput.Write("x");                          process.WaitForExit(1000);                          entries1 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName1' 1000);                          entries2 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName2' 1000);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenMultipleProcessesShareSameEventSource,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" };                          process.Start();                            TriggerEventSource.Logger.TriggerEvent("triggermessage1");                          SamplingEventSource.Logger.EventToSample("mainmessage1");                            process.StandardInput.Write("x");                          process.WaitForExit(1000);                          entries1 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName1' 1000);                          entries2 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName2' 1000);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenMultipleProcessesShareSameEventSource,The following statement contains a magic number: Assert.AreEqual(2' entries1.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenFilteringMultipleProcessesSameEventSource,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" };                          process.Start();                            TriggerEventSource.Logger.TriggerEvent("triggermessage1");                          SamplingEventSource.Logger.EventToSample("mainmessage1");                            process.StandardInput.Write("x");                          process.WaitForExit(1000);                          entries1 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName1' 3);                          entries2 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName2' 1);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenFilteringMultipleProcessesSameEventSource,The following statement contains a magic number: TestScenario.WithConfiguration(svcConfiguration' () =>                      {                          process.StartInfo = new ProcessStartInfo() { UseShellExecute = false' RedirectStandardInput = true' FileName = "ProcessToSample.exe" };                          process.Start();                            TriggerEventSource.Logger.TriggerEvent("triggermessage1");                          SamplingEventSource.Logger.EventToSample("mainmessage1");                            process.StandardInput.Write("x");                          process.WaitForExit(1000);                          entries1 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName1' 3);                          entries2 = FlatFileHelper.PollUntilJsonEventsAreWritten<TestEventEntry>(fileName2' 1);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,WhenFilteringMultipleProcessesSameEventSource,The following statement contains a magic number: Assert.AreEqual(3' entries1.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests,SamplingFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\SamplingFixture.cs,LogEventsAsync,The following statement contains a magic number: await Task.Delay(10);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenEventLevelIsUpdated,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                      MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "some message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerLevelFiltered.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProcLevelFiltered.Logger.LogSomeMessage("this message should not be logged");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries2.Count());                        MockEventSourceOutProcLevelFiltered.Logger.Critical("this critical message should pass the filter");                      entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                      Assert.AreEqual(2' entries2.Count());                      StringAssert.Contains(entries2.First()' "some message to new added flat file");                      StringAssert.Contains(entries2.Last()' "this critical message should pass the filter");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenEventLevelIsUpdated,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                      MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "some message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerLevelFiltered.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProcLevelFiltered.Logger.LogSomeMessage("this message should not be logged");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries2.Count());                        MockEventSourceOutProcLevelFiltered.Logger.Critical("this critical message should pass the filter");                      entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                      Assert.AreEqual(2' entries2.Count());                      StringAssert.Contains(entries2.First()' "some message to new added flat file");                      StringAssert.Contains(entries2.Last()' "this critical message should pass the filter");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenKeywordIsUpdated,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProcKeywords.Logger.InformationalPage("No keyword filtering");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "No keyword filtering");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerKeywordFiltered.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProcKeywords.Logger.InformationalPage("InformationalPage ok");                      MockEventSourceOutProcKeywords.Logger.InformationalDatabase("InformationalDatabase ok");                      MockEventSourceOutProcKeywords.Logger.InformationalDiagnostic("Diagnostic not ok");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 3' "======");                      Assert.AreEqual(3' entries2.Count());                      StringAssert.Contains(entries2.First()' "No keyword filtering");                      StringAssert.Contains(entries2.ElementAt(1).ToString()' "InformationalPage ok");                      StringAssert.Contains(entries2.Last()' "InformationalDatabase ok");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenKeywordIsUpdated,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProcKeywords.Logger.InformationalPage("No keyword filtering");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "No keyword filtering");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerKeywordFiltered.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProcKeywords.Logger.InformationalPage("InformationalPage ok");                      MockEventSourceOutProcKeywords.Logger.InformationalDatabase("InformationalDatabase ok");                      MockEventSourceOutProcKeywords.Logger.InformationalDiagnostic("Diagnostic not ok");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 3' "======");                      Assert.AreEqual(3' entries2.Count());                      StringAssert.Contains(entries2.First()' "No keyword filtering");                      StringAssert.Contains(entries2.ElementAt(1).ToString()' "InformationalPage ok");                      StringAssert.Contains(entries2.Last()' "InformationalDatabase ok");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSinkAddedWithErrorDoesNotRecycle,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      using (var collectErrorsListener = new InMemoryEventListener())                      {                          collectErrorsListener.EnableEvents(SemanticLoggingEventSource.Log' EventLevel.LogAlways' Keywords.All);                          try                          {                              TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig"' 1);                              UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerError.xml"' configFile);                              TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 0);                              TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-2flatFileListener"' 1);                                MockEventSourceOutProc.Logger.LogSomeMessage("Some informational from a new listener.");                              var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                              Assert.AreEqual(1' entries2.Count());                              StringAssert.Contains(entries2.First()' "Some informational from a new listener.");                                collectErrorsListener.WaitEvents.Wait(TimeSpan.FromSeconds(3));                              StringAssert.Contains(collectErrorsListener.ToString()' "One or more errors occurred when loading the TraceEventService configuration file.");                              StringAssert.Contains(collectErrorsListener.ToString()' "The given path's format is not supported.");                              StringAssert.Contains(collectErrorsListener.ToString()' "The configuration was partially successfully loaded. Check logs for further error details.");                          }                          finally                          {                              File.Delete(configFile);                              collectErrorsListener.DisableEvents(SemanticLoggingEventSource.Log);                          }                      }                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenTwoSourcesSinkAddedThenRemoved,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "some message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesSameListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file2");                      MockEventSourceOutProc2.Logger.LogSomeMessage("some message to new added flat file3");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 3' "======");                      Assert.AreEqual(3' entries2.Count());                      StringAssert.Contains(entries2.First()' "some message to new added flat file");                      StringAssert.Contains(entries2.ElementAt(1)' "some message to new added flat file2");                      StringAssert.Contains(entries2.Last()' "some message to new added flat file3");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSources.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("last message to new added flat file");                      var entries3 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 4' "======");                      Assert.AreEqual(4' entries3.Count());                      StringAssert.Contains(entries3.Last()' "last message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesNoListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 0);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenTwoSourcesSinkAddedThenRemoved,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "some message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesSameListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file2");                      MockEventSourceOutProc2.Logger.LogSomeMessage("some message to new added flat file3");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 3' "======");                      Assert.AreEqual(3' entries2.Count());                      StringAssert.Contains(entries2.First()' "some message to new added flat file");                      StringAssert.Contains(entries2.ElementAt(1)' "some message to new added flat file2");                      StringAssert.Contains(entries2.Last()' "some message to new added flat file3");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSources.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("last message to new added flat file");                      var entries3 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 4' "======");                      Assert.AreEqual(4' entries3.Count());                      StringAssert.Contains(entries3.Last()' "last message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesNoListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 0);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenTwoSourcesSinkAddedThenRemoved,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "some message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesSameListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file2");                      MockEventSourceOutProc2.Logger.LogSomeMessage("some message to new added flat file3");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 3' "======");                      Assert.AreEqual(3' entries2.Count());                      StringAssert.Contains(entries2.First()' "some message to new added flat file");                      StringAssert.Contains(entries2.ElementAt(1)' "some message to new added flat file2");                      StringAssert.Contains(entries2.Last()' "some message to new added flat file3");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSources.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("last message to new added flat file");                      var entries3 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 4' "======");                      Assert.AreEqual(4' entries3.Count());                      StringAssert.Contains(entries3.Last()' "last message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesNoListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 0);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenTwoSourcesSinkAddedThenRemoved,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "some message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesSameListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file2");                      MockEventSourceOutProc2.Logger.LogSomeMessage("some message to new added flat file3");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 3' "======");                      Assert.AreEqual(3' entries2.Count());                      StringAssert.Contains(entries2.First()' "some message to new added flat file");                      StringAssert.Contains(entries2.ElementAt(1)' "some message to new added flat file2");                      StringAssert.Contains(entries2.Last()' "some message to new added flat file3");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSources.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("last message to new added flat file");                      var entries3 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 4' "======");                      Assert.AreEqual(4' entries3.Count());                      StringAssert.Contains(entries3.Last()' "last message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesNoListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 0);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceAddedSessionRecycles,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-dummyListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "some message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesSameListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-dummyListener2"' 1);                        MockEventSourceOutProc2.Logger.LogSomeMessage("another message to new added flat file");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                      Assert.AreEqual(2' entries2.Count());                      StringAssert.Contains(entries2.First()' "some message to new added flat file");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceAddedSessionRecycles,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-flatFileListener"' 1);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-dummyListener"' 1);                        MockEventSourceOutProc.Logger.LogSomeMessage("some message to new added flat file");                      var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      Assert.AreEqual(1' entries.Count());                      StringAssert.Contains(entries.First()' "some message to new added flat file");                        UpdateServiceConfigurationFile("Configurations\\Reconfiguration\\FlatFileListenerTwoSourcesSameListener.xml"' configFile);                      TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfig-dummyListener2"' 1);                        MockEventSourceOutProc2.Logger.LogSomeMessage("another message to new added flat file");                      var entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                      Assert.AreEqual(2' entries2.Count());                      StringAssert.Contains(entries2.First()' "some message to new added flat file");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation);                      try                      {                          var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName);                          instance.TestWithSource1();                      }                      finally                      {                          AppDomain.Unload(newDomain);                      }                        newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation);                      try                      {                          var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName);                          instance.TestWithSource2();                      }                      finally                      {                          AppDomain.Unload(newDomain);                      }                        var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                      Assert.AreEqual(2' entries.Count());                      entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 2' "======");                      Assert.AreEqual(2' entries.Count());                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation);                      try                      {                          var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName);                          instance.TestWithSource1();                      }                      finally                      {                          AppDomain.Unload(newDomain);                      }                        newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation);                      try                      {                          var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName);                          instance.TestWithSource2();                      }                      finally                      {                          AppDomain.Unload(newDomain);                      }                        var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                      Assert.AreEqual(2' entries.Count());                      entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 2' "======");                      Assert.AreEqual(2' entries.Count());                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation);                      try                      {                          var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName);                          instance.TestWithSource1();                      }                      finally                      {                          AppDomain.Unload(newDomain);                      }                        newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation);                      try                      {                          var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName);                          instance.TestWithSource2();                      }                      finally                      {                          AppDomain.Unload(newDomain);                      }                        var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                      Assert.AreEqual(2' entries.Count());                      entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 2' "======");                      Assert.AreEqual(2' entries.Count());                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,WhenSourceManifestIsUpdated,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      var newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation);                      try                      {                          var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName);                          instance.TestWithSource1();                      }                      finally                      {                          AppDomain.Unload(newDomain);                      }                        newDomain = AppDomain.CreateDomain("TestintDynamicManifest"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation);                      try                      {                          var instance = (IsolatedExecutingClass)newDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName' typeof(IsolatedExecutingClass).FullName);                          instance.TestWithSource2();                      }                      finally                      {                          AppDomain.Unload(newDomain);                      }                        var entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                      Assert.AreEqual(2' entries.Count());                      entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 2' "======");                      Assert.AreEqual(2' entries.Count());                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ReconfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,UpdateServiceConfigurationFile,The following statement contains a magic number: Task.Delay(TimeSpan.FromSeconds(2)).Wait();
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,MyNewCompanyEventSource2,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,Event2,The following statement contains a magic number: this.WriteEvent(2' id);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,IsolatedExecutingClass,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ReconfigFixture.cs,TestWithSource2,The following statement contains a magic number: logger.Event2(2);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenFormatterWithValuesForProperties,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      MockEventSourceOutProc.Logger.LogSomeMessage("some message");                      MockEventSourceOutProc.Logger.LogSomeMessage("some message2");                      entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "=======");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,FlatFileSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\FlatFileSinkConfigFixture.cs,WhenFormatterWithValuesForProperties,The following statement contains a magic number: Assert.AreEqual(2' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConsoleSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConsoleSinkConfigFixture.cs,WhenConfigValidAndComplete,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message to console " + n.ToString() + ".");                      }                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenConfigIsValidAndComplete,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenConfigIsValidAndComplete,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,DatabaseSinkConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\DatabaseSinkConfigFixture.cs,WhenConfigIsValidAndComplete,The following statement contains a magic number: Assert.AreEqual(10' eventsDataTable.Rows.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenUsingTwoCollectorsForSameEventSource,The following statement contains a magic number: eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 20);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenUsingTwoCollectorsForSameEventSource,The following statement contains a magic number: Assert.AreEqual(20' eventsDataTable.Rows.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenUsingTwoCollectorsForSameEventSourceWithDifferentSinkTypes,The following statement contains a magic number: eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenUsingTwoCollectorsForSameEventSourceWithDifferentSinkTypes,The following statement contains a magic number: entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 10' header);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenUsingTwoCollectorsForSameEventSourceWithDifferentSinkTypes,The following statement contains a magic number: Assert.AreEqual(10' eventsDataTable.Rows.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenUsingTwoCollectorsForSameEventSourceWithDifferentSinkTypes,The following statement contains a magic number: Assert.AreEqual(10' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenTwoEventSourcesAreUsedInOneCollector,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable.Rows.Count);                      StringAssert.Contains(eventsDataTable.Rows[0]["payload"].ToString()' "some message");                        DatabaseHelper.CleanLoggingDB(validConnectionString);                        for (int n = 0; n < 200; n++)                      {                          logger2.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable2 = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable2.Rows.Count);                      StringAssert.Contains(eventsDataTable2.Rows[0]["payload"].ToString()' "some message");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenTwoEventSourcesAreUsedInOneCollector,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable.Rows.Count);                      StringAssert.Contains(eventsDataTable.Rows[0]["payload"].ToString()' "some message");                        DatabaseHelper.CleanLoggingDB(validConnectionString);                        for (int n = 0; n < 200; n++)                      {                          logger2.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable2 = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable2.Rows.Count);                      StringAssert.Contains(eventsDataTable2.Rows[0]["payload"].ToString()' "some message");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenTwoEventSourcesAreUsedInOneCollector,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable.Rows.Count);                      StringAssert.Contains(eventsDataTable.Rows[0]["payload"].ToString()' "some message");                        DatabaseHelper.CleanLoggingDB(validConnectionString);                        for (int n = 0; n < 200; n++)                      {                          logger2.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable2 = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable2.Rows.Count);                      StringAssert.Contains(eventsDataTable2.Rows[0]["payload"].ToString()' "some message");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenTwoEventSourcesAreUsedInOneCollector,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable.Rows.Count);                      StringAssert.Contains(eventsDataTable.Rows[0]["payload"].ToString()' "some message");                        DatabaseHelper.CleanLoggingDB(validConnectionString);                        for (int n = 0; n < 200; n++)                      {                          logger2.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable2 = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable2.Rows.Count);                      StringAssert.Contains(eventsDataTable2.Rows[0]["payload"].ToString()' "some message");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenTwoEventSourcesAreUsedInOneCollector,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable.Rows.Count);                      StringAssert.Contains(eventsDataTable.Rows[0]["payload"].ToString()' "some message");                        DatabaseHelper.CleanLoggingDB(validConnectionString);                        for (int n = 0; n < 200; n++)                      {                          logger2.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable2 = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable2.Rows.Count);                      StringAssert.Contains(eventsDataTable2.Rows[0]["payload"].ToString()' "some message");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenTwoEventSourcesAreUsedInOneCollector,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable.Rows.Count);                      StringAssert.Contains(eventsDataTable.Rows[0]["payload"].ToString()' "some message");                        DatabaseHelper.CleanLoggingDB(validConnectionString);                        for (int n = 0; n < 200; n++)                      {                          logger2.LogSomeMessage("some message" + n.ToString());                      }                        var eventsDataTable2 = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 200);                      Assert.AreEqual(200' eventsDataTable2.Rows.Count);                      StringAssert.Contains(eventsDataTable2.Rows[0]["payload"].ToString()' "some message");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenEventsAreFiltered,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 200' EventTextFormatter.DashSeparator);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenEventsAreFiltered,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 200' EventTextFormatter.DashSeparator);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenInfoAndMoreVerboseLevelsAreFiltered,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message " + n.ToString());                          logger.Critical("some error " + n.ToString());                      }                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 200' EventTextFormatter.DashSeparator);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenInfoAndMoreVerboseLevelsAreFiltered,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message " + n.ToString());                          logger.Critical("some error " + n.ToString());                      }                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 200' EventTextFormatter.DashSeparator);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenInfoAndMoreVerboseLevelsAreFiltered,The following statement contains a magic number: Assert.AreEqual(200' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenMoreVerboseEventsAreFilteredInConfig,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      logger.Informational("some informational message");                      logger.Verbose("some verbose");                      logger.Critical("some critical");                      logger.Error("some error");                      logger.Warning("some warning");                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 2' "======");                      entries3 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName3' 3' "======");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenMoreVerboseEventsAreFilteredInConfig,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      logger.Informational("some informational message");                      logger.Verbose("some verbose");                      logger.Critical("some critical");                      logger.Error("some error");                      logger.Warning("some warning");                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' "======");                      entries2 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName2' 2' "======");                      entries3 = FlatFileHelper.PollUntilTextEventsAreWritten(fileName3' 3' "======");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenSomeKeywordsAreFiltered,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      logger.InformationalPage("some informational message filtered by Page keyword");                      logger.InformationalDatabase("some informational message filtered by Database keyword");                      logger.InformationalDiagnostic("some informational message filtered by Diagnostic keyword");                      entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 2' "======");                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,ConfigIntegrationFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\ConfigIntegrationFixture.cs,WhenSomeKeywordsAreFiltered,The following statement contains a magic number: Assert.AreEqual(2' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSomeSessionNamesAreInvalid,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      Assert.IsTrue(TraceSessionHelper.WaitAndAssertCountOfSessions("ServiceReconfigService"' 3));                      Assert.IsTrue(File.Exists("sessionLength.log"));                      Assert.IsTrue(File.Exists("sessionLength2.log"));                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSinkNameIsDuplicated1,The following statement contains a magic number: subject.LogToSqlDatabase("testInstance"' validConnectionString' "Traces"' TimeSpan.FromSeconds(10)' 200);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSinkNameIsDuplicated1,The following statement contains a magic number: subject.LogToSqlDatabase("testInstance"' validConnectionString' "Traces"' TimeSpan.FromSeconds(10)' 200);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSinkNameIsDuplicated1,The following statement contains a magic number: subject2.LogToSqlDatabase("testInstance"' validConnectionString' "Traces"' TimeSpan.FromSeconds(10)' 200);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.ServiceConfiguration,TraceEventServiceConfigFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\ServiceConfiguration\TraceEventServiceConfigFixture.cs,WhenSinkNameIsDuplicated1,The following statement contains a magic number: subject2.LogToSqlDatabase("testInstance"' validConnectionString' "Traces"' TimeSpan.FromSeconds(10)' 200);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenConnectionTakesTooLong,The following statement contains a magic number: Assert.IsTrue(Task.Run(() => subject.OnCompleted()).Wait(TimeSpan.FromSeconds(2)));
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenConfiguringProgrammatically,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int i = 0; i < 10; i++)                      {                          logger.Critical("Critical message");                      }                        events = AzureTableHelper.PollForEvents(connectionString' this.tableName' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenConfiguringProgrammatically,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int i = 0; i < 10; i++)                      {                          logger.Critical("Critical message");                      }                        events = AzureTableHelper.PollForEvents(connectionString' this.tableName' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenConfiguringProgrammatically,The following statement contains a magic number: Assert.AreEqual<int>(10' events.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenConfiguringProgrammatically,The following statement contains a magic number: Assert.AreEqual<int>(2' events.First().EventId);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenUsingExternalConfig,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int i = 0; i < 10; i++)                      {                          logger.Critical("Critical message");                      }                        events = AzureTableHelper.PollForEvents(connectionString' this.tableName' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenUsingExternalConfig,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int i = 0; i < 10; i++)                      {                          logger.Critical("Critical message");                      }                        events = AzureTableHelper.PollForEvents(connectionString' this.tableName' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenUsingExternalConfig,The following statement contains a magic number: Assert.AreEqual<int>(10' events.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,WindowsAzureTableSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\WindowsAzureTableSinkFixture.cs,WhenUsingExternalConfig,The following statement contains a magic number: Assert.AreEqual<int>(2' events.First().EventId);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,DatabaseSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\DatabaseSinkFixture.cs,WhenUsingSinkProgrammatically,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,DatabaseSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\DatabaseSinkFixture.cs,WhenUsingSinkProgrammatically,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,DatabaseSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\DatabaseSinkFixture.cs,WhenUsingSinkProgrammatically,The following statement contains a magic number: Assert.AreEqual(10' eventsDataTable.Rows.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,DatabaseSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\DatabaseSinkFixture.cs,WhenUsingSinkThroughConfig,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,DatabaseSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\DatabaseSinkFixture.cs,WhenUsingSinkThroughConfig,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 10; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        eventsDataTable = DatabaseHelper.PollUntilEventsAreWritten(validConnectionString' 10);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,DatabaseSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\DatabaseSinkFixture.cs,WhenUsingSinkThroughConfig,The following statement contains a magic number: Assert.AreEqual(10' eventsDataTable.Rows.Count);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingFlatFileSinkProgrammatic,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 200' EventTextFormatter.DashSeparator);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingFlatFileSinkProgrammatic,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 200' EventTextFormatter.DashSeparator);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingFlatFileSinkProgrammatic,The following statement contains a magic number: Assert.AreEqual(200' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingRollingSinkProgrammatic,The following statement contains a magic number: subject.LogToRollingFlatFile(fileName' 100' "d"' RollFileExistsBehavior.Overwrite' RollInterval.Day' formatter);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingRollingSinkProgrammatic,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 200' EventTextFormatter.DashSeparator);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingRollingSinkProgrammatic,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      for (int n = 0; n < 200; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 200' EventTextFormatter.DashSeparator);                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenUsingRollingSinkProgrammatic,The following statement contains a magic number: Assert.AreEqual(200' entries.Count());
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenIntArgPayload,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace("replaceEventSource"' "TestEventSourceNoAttributes")'                      () =>                      {                          var logger = TestEventSourceNoAttributes.Logger;                          logger.IntArgEvent2(10);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenLongArgPayload,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace("replaceEventSource"' "TestEventSourceNoAttributes")'                      () =>                      {                          var logger = TestEventSourceNoAttributes.Logger;                          logger.LongArgEvent3((long)10);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenObjectArgPayload,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace("replaceEventSource"' "TestEventSourceNoAttributes")'                      () =>                      {                          var logger = TestEventSourceNoAttributes.Logger;                          logger.ObjectArrayEvent4(10' "stringarg1"' 20' "stringarg3"' 30);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenObjectArgPayload,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace("replaceEventSource"' "TestEventSourceNoAttributes")'                      () =>                      {                          var logger = TestEventSourceNoAttributes.Logger;                          logger.ObjectArrayEvent4(10' "stringarg1"' 20' "stringarg3"' 30);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenObjectArgPayload,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace("replaceEventSource"' "TestEventSourceNoAttributes")'                      () =>                      {                          var logger = TestEventSourceNoAttributes.Logger;                          logger.ObjectArrayEvent4(10' "stringarg1"' 20' "stringarg3"' 30);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenTwoArgPayload,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace("replaceEventSource"' "TestEventSourceNoAttributes")'                      () =>                      {                          var logger = TestEventSourceNoAttributes.Logger;                          logger.TwoIntArgEvent6(10' 30);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenTwoArgPayload,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace("replaceEventSource"' "TestEventSourceNoAttributes")'                      () =>                      {                          var logger = TestEventSourceNoAttributes.Logger;                          logger.TwoIntArgEvent6(10' 30);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenStringAndLongArgPayload,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace("replaceEventSource"' "TestEventSourceNoAttributes")'                      () =>                      {                          var logger = TestEventSourceNoAttributes.Logger;                          logger.StringAndLongArgEvent9("message1"' 20);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenEventAttributeHasNoTask,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace(@"name=""replaceEventSource"""' @"id=""B4F8149D-6DD2-4EE2-A46A-45584A942D1C""")'                      () =>                      {                          var logger = TestAttributesEventSource.Logger;                          logger.NoTaskSpecfied2(1' 3' 5);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,FlatFileSinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\FlatFileSinkFixture.cs,WhenEventAttributeHasNoTask,The following statement contains a magic number: TestScenario.WithTempUpdatesInConfiguration(                  serviceConfigFile'                  xmlContent => xmlContent.Replace(@"name=""replaceEventSource"""' @"id=""B4F8149D-6DD2-4EE2-A46A-45584A942D1C""")'                      () =>                      {                          var logger = TestAttributesEventSource.Logger;                          logger.NoTaskSpecfied2(1' 3' 5);                            entries = FlatFileHelper.PollUntilTextEventsAreWritten(fileName' 1' EventTextFormatter.DashSeparator);                      });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,InMemorySinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\InMemorySinkFixture.cs,WhenConcurrentEventsRaised,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      sink.WaitSignalCondition = () => sink.EventWrittenCount == 100;                      for (int n = 0; n < 100; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        sink.WaitOnAsyncEvents.WaitOne(TimeSpan.FromSeconds(10));                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,InMemorySinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\InMemorySinkFixture.cs,WhenConcurrentEventsRaised,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      sink.WaitSignalCondition = () => sink.EventWrittenCount == 100;                      for (int n = 0; n < 100; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        sink.WaitOnAsyncEvents.WaitOne(TimeSpan.FromSeconds(10));                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.Sinks,InMemorySinkFixture,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\Sinks\InMemorySinkFixture.cs,WhenConcurrentEventsRaised,The following statement contains a magic number: TestScenario.WithConfiguration(                  svcConfiguration'                  () =>                  {                      sink.WaitSignalCondition = () => sink.EventWrittenCount == 100;                      for (int n = 0; n < 100; n++)                      {                          logger.LogSomeMessage("some message" + n.ToString());                      }                        sink.WaitOnAsyncEvents.WaitOne(TimeSpan.FromSeconds(10));                  });
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProc,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProc.cs,Critical,The following statement contains a magic number: this.WriteEvent(2' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProc,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProc.cs,LogSomeMessage,The following statement contains a magic number: this.WriteEvent(8' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProc2,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProc2.cs,LogSomeMessage,The following statement contains a magic number: this.WriteEvent(8' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcEnum,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcEnum.cs,SendEnumsEvent15,The following statement contains a magic number: this.WriteEvent(2' (int)a' (int)b);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcEnum,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcEnum.cs,SendEnumsEvent16,The following statement contains a magic number: this.WriteEvent(3' a' b);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcEnum,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcEnum.cs,SaveExpenseStarted,The following statement contains a magic number: this.WriteEvent(4' expenseId);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcFiltering,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcFiltering.cs,Verbose,The following statement contains a magic number: this.WriteEvent(2' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcFiltering,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcFiltering.cs,Critical,The following statement contains a magic number: this.WriteEvent(3' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcFiltering,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcFiltering.cs,Error,The following statement contains a magic number: this.WriteEvent(4' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcFiltering,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcFiltering.cs,Warning,The following statement contains a magic number: this.WriteEvent(5' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcKeywords,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcKeywords.cs,InformationalDatabase,The following statement contains a magic number: this.WriteEvent(2' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcKeywords,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcKeywords.cs,InformationalDiagnostic,The following statement contains a magic number: this.WriteEvent(3' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcLevelFiltered,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcLevelFiltered.cs,Critical,The following statement contains a magic number: this.WriteEvent(2' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcLevelFiltered,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcLevelFiltered.cs,LogSomeMessage,The following statement contains a magic number: this.WriteEvent(8' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcSvc,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcSvc.cs,Critical,The following statement contains a magic number: this.WriteEvent(2' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,MockEventSourceOutProcSvc,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\MockEventSourceOutProcSvc.cs,LogSomeMessage,The following statement contains a magic number: this.WriteEvent(8' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,SamplingEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\SamplingEventSource.cs,BeforeEventToSample,The following statement contains a magic number: this.WriteEvent(2' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,SamplingEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\SamplingEventSource.cs,AfterEventToSample,The following statement contains a magic number: this.WriteEvent(3' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,SamplingEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\SamplingEventSource.cs,EventInATask,The following statement contains a magic number: this.WriteEvent(4' message);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestAttributesEventSource,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestAttributesEventSource.cs,NoTaskSpecfied2,The following statement contains a magic number: this.WriteEvent(105' arg1' arg3' arg3);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,IntArgEvent2,The following statement contains a magic number: this.WriteEvent(2' arg);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,LongArgEvent3,The following statement contains a magic number: this.WriteEvent(3' arg);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ObjectArrayEvent4,The following statement contains a magic number: object[] args = new object[5];
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ObjectArrayEvent4,The following statement contains a magic number: args[2] = arg2;
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ObjectArrayEvent4,The following statement contains a magic number: args[3] = arg3;
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ObjectArrayEvent4,The following statement contains a magic number: args[4] = arg4;
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ObjectArrayEvent4,The following statement contains a magic number: this.WriteEvent(4' args);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,StringArgEvent5,The following statement contains a magic number: this.WriteEvent(5' arg);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,TwoIntArgEvent6,The following statement contains a magic number: this.WriteEvent(6' arg1' arg2);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,TwoLongArgEvent7,The following statement contains a magic number: this.WriteEvent(7' arg1' arg2);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,StringAndIntArgEvent8,The following statement contains a magic number: this.WriteEvent(8' arg1' arg2);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,StringAndLongArgEvent9,The following statement contains a magic number: this.WriteEvent(9' arg1' arg2);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,StringAndStringArgEvent10,The following statement contains a magic number: this.WriteEvent(10' arg1' arg2);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ThreeIntArgEvent11,The following statement contains a magic number: this.WriteEvent(11' arg1' arg2' arg3);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ThreeLongArgEvent12,The following statement contains a magic number: this.WriteEvent(12' arg1' arg2' arg3);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,StringAndTwoIntArgEvent13,The following statement contains a magic number: this.WriteEvent(13' arg1' arg2' arg3);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,ThreeStringArgEvent14,The following statement contains a magic number: this.WriteEvent(14' arg1' arg2' arg3);
Magic Number,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.OutProc.Tests.TestObjects,TestEventSourceNoAttributes,C:\research\architectureSmells\repos\mspnp_semantic-logging\BVT\SLAB.Tests\SemanticLogging.OutProc.Tests\TestObjects\TestEventSourceNoAttributes.cs,SendEnumsEvent15,The following statement contains a magic number: this.WriteEvent(15' (int)color' (int)flags);
