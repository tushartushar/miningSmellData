Implementation smell,Namespace,Class,File,Method,Description
Long Method,XSerializer.Tests,ListSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The method has 169 lines of code.
Long Method,XSerializer.Tests,ListDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The method has 163 lines of code.
Long Method,XSerializer.Tests,EqualPropertiesConstraint,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NUnit\Has.cs,Matches,The method has 135 lines of code.
Long Method,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptMultipleComplexElementValuesEachWithAttributes,The method has 104 lines of code.
Long Method,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptIndividualAttributeValues,The method has 103 lines of code.
Long Method,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptIndividualElementValues,The method has 102 lines of code.
Complex Method,XSerializer.Tests,EqualPropertiesConstraint,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NUnit\Has.cs,Matches,Cyclomatic complexity of the method is 17
Complex Method,XSerializer.Tests,EqualPropertiesConstraint,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NUnit\Has.cs,DoPropertyValuesMatch,Cyclomatic complexity of the method is 17
Long Parameter List,XSerializer.Tests,BclXmlSerializerExtensions,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\BclXmlSerializerExtensions.cs,SerializeObject,The method has 5 parameters. Parameters: serializer' instance' encoding' formatting' options
Long Parameter List,XSerializer.Tests,Foo3,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,Foo3,The method has 5 parameters. Parameters: bars' bazes' quxes' corges' graults
Long Parameter List,XSerializer.Tests,Foo2,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DeserializeEmptyStringIntoValueTypeTests.cs,Foo2,The method has 5 parameters. Parameters: bars' bazes' quxes' corges' graults
Long Parameter List,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,CreateProperty,The method has 5 parameters. Parameters: propertyType' typeBuilder' fieldBuilder' encrypt' name
Long Parameter List,XSerializer.Tests,EqualPropertiesConstraint,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NUnit\Has.cs,DoPropertyValuesMatch,The method has 5 parameters. Parameters: actualPropertyValue' expectedPropertyValue' propertyType' propertyName' path
Long Parameter List,XSerializer.Tests,SerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\SerializationTests.cs,ForTypesWithoutInterfacesCustomSerializerSerializesTheSameAsDefaultSerializer,The method has 7 parameters. Parameters: instance' defaultNamespace' extraTypes' rootElementName' encoding' formatting' namespaces
Long Parameter List,XSerializer.Tests,SerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\SerializationTests.cs,TypeWithInterfaceSerializesSameAsTypeWithAbstract,The method has 9 parameters. Parameters: instanceWithInterface' instanceWithAbstract' defaultNamespace' extraTypes' rootElementName' encoding' formatting' namespaces' defaultXmlReplacements
Long Parameter List,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,ByXmlStructure,The method has 5 parameters. Parameters: objectToSerialize' getTargetValue' getTargetNodeValue' expectedTargetNodeValue' extraTypes
Long Parameter List,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,ByType,The method has 5 parameters. Parameters: objectToSerialize' getTargetValue' getTargetNodeValue' expectedTargetNodeValue' extraTypes
Long Parameter List,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,PerformTest,The method has 5 parameters. Parameters: objectToSerialize' getTargetValue' getTargetNodeValue' expectedTargetNodeValue' extraTypes
Long Parameter List,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetTestCaseData,The method has 6 parameters. Parameters: name' objectToSerialize' getTargetValue' getTargetNodeValue' expectedTargetNodeValue' extraTypes
Long Identifier,XSerializer.Tests,DynamicTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,ADynamicPropertyWithAnEmptyValueRoundTripsFromXmlCorrectly,The length of the parameter shouldTreatEmptyElementAsString is 31.
Long Identifier,XSerializer.Tests,DynamicTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,AnObjectPropertyWithAnEmptyValueRoundTripsFromXmlCorrectly,The length of the parameter shouldTreatEmptyElementAsString is 31.
Long Identifier,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,,The length of the parameter MyCollectionXmlWithoutTypeHint is 30.
Long Identifier,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,,The length of the parameter ContainerXmlWithNoAttributesWithoutTypeHint is 43.
Long Identifier,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,,The length of the parameter ContainerXmlWithNoAttributesWithTypeHint is 40.
Long Identifier,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,,The length of the parameter ContainerXmlWithArrayAttributesWithoutTypeHint is 46.
Long Identifier,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,,The length of the parameter ContainerXmlWithArrayAttributesWithTypeHint is 43.
Long Identifier,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,,The length of the parameter ContainerXmlWithElementAttributeWithoutTypeHint is 47.
Long Identifier,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,,The length of the parameter ContainerXmlWithElementAttributeWithTypeHint is 44.
Long Identifier,XSerializer.Tests,SerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\SerializationTests.cs,,The length of the parameter InterfaceVersusAbstractTestSource is 33.
Long Identifier,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericListPropertyWhenTheListGenericArgumentClassIsDecoratedWithEncryptAttribute,The length of the parameter actualDecryptedItemElementValue is 31.
Long Identifier,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericListPropertyWhenTheListGenericArgumentClassIsDecoratedWithEncryptAttribute,The length of the parameter expectedDecryptedItemElementValue is 33.
Long Identifier,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The length of the parameter actualDecryptedItemElementValue is 31.
Long Identifier,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The length of the parameter expectedDecryptedItemElementValue is 33.
Long Identifier,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The length of the parameter actualDecryptedItemElementValue is 31.
Long Identifier,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The length of the parameter expectedDecryptedItemElementValue is 33.
Long Statement,XSerializer.Tests,ArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ArrayTests.cs,CanDeserializeArrayAsProperty,The length of the statement  "<ContainerWithArrayProperty xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 131.
Long Statement,XSerializer.Tests,ArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ArrayTests.cs,CanDeserializeEmptyArrayElementAsProperty,The length of the statement  "<ContainerWithArrayProperty xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 131.
Long Statement,XSerializer.Tests,ArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ArrayTests.cs,CanDeserializeArrayAsRoot,The length of the statement  "<ArrayOfDataPoint xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 121.
Long Statement,XSerializer.Tests,AttributedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\AttributedPropertyTests.cs,GetTypes,The length of the statement  "            yield return typeof(DerivedWithNonEmptyXmlElementDecorationInheritingFromBaseWithDifferentNonEmptyXmlElementDecoration);" is 120.
Long Statement,XSerializer.Tests,AttributedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\AttributedPropertyTests.cs,GetTypes,The length of the statement  "            yield return typeof(DerivedWithNonEmptyXmlElementDecorationInheritingFromBaseWithDifferentNonEmptyXmlAttributeDecoration);" is 122.
Long Statement,XSerializer.Tests,AttributedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\AttributedPropertyTests.cs,GetTypes,The length of the statement  "            yield return typeof(DerivedWithNonEmptyXmlAttributeDecorationInheritingFromBaseWithDifferentNonEmptyXmlElementDecoration);" is 122.
Long Statement,XSerializer.Tests,AttributedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\AttributedPropertyTests.cs,GetTypes,The length of the statement  "            yield return typeof(DerivedWithNonEmptyXmlAttributeDecorationInheritingFromBaseWithDifferentNonEmptyXmlAttributeDecoration);" is 124.
Long Statement,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,RoundTripsCorrectly,The length of the statement  "            var customXml = customSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes)).StripXsiXsdDeclarations();" is 187.
Long Statement,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,RoundTripsCorrectly,The length of the statement  "            var defaultXml = defaultSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes)).StripXsiXsdDeclarations();" is 189.
Long Statement,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,GetTestCaseData,The length of the statement  "            yield return new TestCaseData(CreateDemoInstance()' typeof(Demo)).SetName("Should serialize all when all conditionals return true");" is 132.
Long Statement,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,GetTestCaseData,The length of the statement  "            yield return new TestCaseData(CreateDemoInstance(int32ValueSpecified: false)' typeof(Demo)).SetName("Should skip when Specified property returns false");" is 153.
Long Statement,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,GetTestCaseData,The length of the statement  "            yield return new TestCaseData(CreateDemoInstance(shouldSerializeByteValue: false)' typeof(Demo)).SetName("Should skip when ShouldSerialize method returns false");" is 162.
Long Statement,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,GetTestCaseData,The length of the statement  "            yield return new TestCaseData(CreateDemoInstance(uInt64ValueSpecified: false)' typeof(Demo)).SetName("If Specified and ShouldSerialize both exist' should skip when Specified property returns false");" is 199.
Long Statement,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,GetTestCaseData,The length of the statement  "            yield return new TestCaseData(CreateDemoInstance(shouldSerializeUInt64Value: false)' typeof(Demo)).SetName("If Specified and ShouldSerialize both exist' should skip when ShouldSerialize method returns false");" is 209.
Long Statement,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,GetTestCaseData,The length of the statement  "            yield return new TestCaseData(CreateDemoInstance(uInt64ValueSpecified: false' shouldSerializeUInt64Value: false)' typeof(Demo)).SetName("If Specified and ShouldSerialize both exist' should skip when both Specified property and ShouldSerialize method returns false");" is 266.
Long Statement,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeClassWithMultiplNonDefaultConstructorsWhenOneIsDecoratedWithJsonConstructorAttribute,The length of the statement  "            var serializer = new JsonSerializer<FooWithMultipleNonDefaultConstructorsButOneDecoratedWithJsonConstructorAttribute>();" is 120.
Long Statement,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithOffsetSpecified,The length of the statement  "            var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(-5)).AddTicks(expectedAdditionalTicks);" is 121.
Long Statement,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithZuluTimeSpecified,The length of the statement  "            var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(0)).AddTicks(expectedAdditionalTicks);" is 120.
Long Statement,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanSerializeIDictionaryOfCustomTypeToCustomType,The length of the statement  "            var json = serializer.Serialize(new Dictionary<Grault' Corge> { { new Grault { Bar = "xyz"' Baz = false }' new Corge { Bar = "abc"' Baz = true } } });" is 150.
Long Statement,XSerializer.Tests,DictionaryTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,CanDeserializeDictionaryAsRoot,The length of the statement  "<DictionaryOfString_String xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,DictionaryTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,CanDeserializeDictionaryAsRoot,The length of the statement  "            var serializer = new XmlSerializer<Dictionary<string' string>>(options => options.Indent()' typeof(ArrayTests.Preference));" is 123.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,SerializesCorrectly,The length of the statement  "                var customXml = customSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes));" is 161.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadWriteGenericDictionaryClass { Map = new Dictionary<string' string> { { "foo"' "bar" }' { "baz"' "qux" } }' A = "Start"' Z = "End" }'" is 140.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadOnlyGenericDictionaryClass(new Dictionary<string' string> { { "foo"' "bar" }' { "baz"' "qux" } }) { A = "Start"' Z = "End" }'" is 133.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    string.Format(NonGenericDictionaryXmlFormat' typeof(ReadWriteNonGenericDictionaryClass).Name' " xsi:type=\"xsd:string\""' " xsi:type=\"xsd:string\""))" is 150.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    string.Format(NonGenericDictionaryXmlFormat' typeof(ReadOnlyNonGenericDictionaryClass).Name' " xsi:type=\"xsd:string\""' " xsi:type=\"xsd:string\""))" is 149.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadWriteGenericIDictionaryClass { Map = new Dictionary<string' string> { { "foo"' "bar" }' { "baz"' "qux" } }' A = "Start"' Z = "End" }'" is 141.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadOnlyGenericIDictionaryClass(new Dictionary<string' string> { { "foo"' "bar" }' { "baz"' "qux" } }) { A = "Start"' Z = "End" }'" is 134.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    string.Format(NonGenericDictionaryXmlFormat' typeof(ReadWriteNonGenericIDictionaryClass).Name' " xsi:type=\"xsd:string\""' " xsi:type=\"xsd:string\""))" is 151.
Long Statement,XSerializer.Tests,DictionarySerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    string.Format(NonGenericDictionaryXmlFormat' typeof(ReadOnlyNonGenericIDictionaryClass).Name' " xsi:type=\"xsd:string\""' " xsi:type=\"xsd:string\""))" is 150.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadWriteGenericDictionaryClass { Map = new Dictionary<string' string> { { "foo"' "bar" }' { "baz"' "qux" } }' A = "Start"' Z = "End" })" is 140.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadOnlyGenericDictionaryClass(new Dictionary<string' string> { { "foo"' "bar" }' { "baz"' "qux" } }) { A = "Start"' Z = "End" })" is 133.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    string.Format(GenericDictionaryXmlFormat' typeof(ReadWriteNonGenericDictionaryClass).Name' " xsi:type=\"xsd:string\""' " xsi:type=\"xsd:string\"")'" is 147.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadWriteNonGenericDictionaryClass { Map = new Hashtable { { "foo"' "bar" }' { "baz"' "qux" } }' A = "Start"' Z = "End" })" is 126.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    string.Format(GenericDictionaryXmlFormat' typeof(ReadOnlyNonGenericDictionaryClass).Name' " xsi:type=\"xsd:string\""' " xsi:type=\"xsd:string\"")'" is 146.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadWriteGenericIDictionaryClass { Map = new Dictionary<string' string> { { "foo"' "bar" }' { "baz"' "qux" } }' A = "Start"' Z = "End" })" is 141.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadOnlyGenericIDictionaryClass(new Dictionary<string' string> { { "foo"' "bar" }' { "baz"' "qux" } }) { A = "Start"' Z = "End" })" is 134.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    string.Format(GenericDictionaryXmlFormat' typeof(ReadWriteNonGenericIDictionaryClass).Name' " xsi:type=\"xsd:string\""' " xsi:type=\"xsd:string\"")'" is 148.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadWriteNonGenericIDictionaryClass { Map = new Hashtable { { "foo"' "bar" }' { "baz"' "qux" } }' A = "Start"' Z = "End" })" is 127.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    string.Format(GenericDictionaryXmlFormat' typeof(ReadOnlyNonGenericIDictionaryClass).Name' " xsi:type=\"xsd:string\""' " xsi:type=\"xsd:string\"")'" is 147.
Long Statement,XSerializer.Tests,DictionaryDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryTests.cs,GetTestCaseData,The length of the statement  "                    new ReadOnlyNonGenericIDictionaryClass(new Hashtable { { "foo"' "bar" }' { "baz"' "qux" } }) { A = "Start"' Z = "End" })" is 120.
Long Statement,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,SerializesCorrectly,The length of the statement  "                var customXml = customSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes));" is 161.
Long Statement,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,SerializesCorrectly,The length of the statement  "                var customXml = customSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes));" is 161.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumElementSerializesCorrectlyWhenExtraTypesArePassedIn,The length of the statement  "            var serializer = new CustomSerializer<EnumElementContainer>(null' TestXmlSerializerOptions.WithExtraTypes(typeof(IFoo)));" is 121.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumAttributeSerializesCorrectlyWhenExtraTypesArePassedIn,The length of the statement  "            var serializer = new CustomSerializer<EnumAttributeContainer>(null' TestXmlSerializerOptions.WithExtraTypes(typeof(IFoo)));" is 123.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumElementDeserializesCorrectlyWhenExtraTypesArePassedIn,The length of the statement  "<EnumElementContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 125.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumElementDeserializesCorrectlyWhenExtraTypesArePassedIn,The length of the statement  "            var serializer = new CustomSerializer<EnumElementContainer>(null' TestXmlSerializerOptions.WithExtraTypes(typeof(IFoo)));" is 121.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumAttributeDeserializesCorrectlyWhenExtraTypesArePassedIn,The length of the statement  "<EnumAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" MyEnum=""Value2"" />";" is 149.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumAttributeDeserializesCorrectlyWhenExtraTypesArePassedIn,The length of the statement  "            var serializer = new CustomSerializer<EnumAttributeContainer>(null' TestXmlSerializerOptions.WithExtraTypes(typeof(IFoo)));" is 123.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumElementDeserializesCorrectlyWhenIgnoreCaseForEnumIsPassedIn,The length of the statement  "<EnumElementContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 125.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumElementDeserializesCorrectlyWhenIgnoreCaseForEnumIsPassedIn,The length of the statement  "            var container = (EnumElementContainer)serializer.DeserializeObject(xml' new TestSerializeOptions { ShouldIgnoreCaseForEnum = true });" is 133.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumAttributeDeserializesCorrectlyWhenIgnoreCaseForEnumIsPassedIn,The length of the statement  "<EnumAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" MyEnum=""vALUE1"" />";" is 149.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumAttributeDeserializesCorrectlyWhenIgnoreCaseForEnumIsPassedIn,The length of the statement  "            var container = (EnumAttributeContainer)serializer.DeserializeObject(xml' new TestSerializeOptions { ShouldIgnoreCaseForEnum = true });" is 135.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumTypeElementDeserializesCorrectlyWhenExtraTypesArePassedIn,The length of the statement  "<EnumTypeElementContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 129.
Long Statement,XSerializer.Tests,EnumTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EnumTests.cs,EnumTypeAttributeDeserializesCorrectlyWhenExtraTypesArePassedIn,The length of the statement  "<EnumTypeAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" Value=""MyEnum.Value2"" />";" is 159.
Long Statement,XSerializer.Tests,IgnoreAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\IgnoreAttributeTests.cs,RoundTripsCorrectly,The length of the statement  "            var customXml = customSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes)).StripXsiXsdDeclarations();" is 187.
Long Statement,XSerializer.Tests,IgnoreAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\IgnoreAttributeTests.cs,RoundTripsCorrectly,The length of the statement  "            var defaultXml = defaultSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes)).StripXsiXsdDeclarations();" is 189.
Long Statement,XSerializer.Tests,IgnoreAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\IgnoreAttributeTests.cs,GetTestCaseData,The length of the statement  "            yield return new TestCaseData(new Foo { Bar = 1' Baz = 2' Qux = 3 }' typeof(Foo)).SetName("XmlIgnoreAttribute causes property to be skipped during serialization");" is 163.
Long Statement,XSerializer.Tests,JsonMiscellaneousTypesTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonMiscellaneousTypesTests.cs,CanSerializeType,The length of the statement  "            Assert.That(json' Is.EqualTo($@"{{""Bar"":""XSerializer.Tests.JsonMiscellaneousTypesTests+Foo3' {typeof(Foo3).Assembly.GetName().Name}""}}"));" is 142.
Long Statement,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanSerializeGenericIEnumerableOfObjectWhenAnItemTypeIsDecoratedWithEncrypteAttribute,The length of the statement  "            var json = serializer.Serialize(new List<object> { new Foo { Bar = "abc"' Baz = true }' new Foo { Bar = "xyz"' Baz = false } });" is 128.
Long Statement,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanSerializeGenericIEnumerableOfObjectWhenAnItemTypePropertyIsDecoratedWithEncrypteAttribute,The length of the statement  "            var json = serializer.Serialize(new List<object> { new Qux { Bar = "abc"' Baz = true }' new Qux { Bar = "xyz"' Baz = false } });" is 128.
Long Statement,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,CanSerializeListAsRoot,The length of the statement  "            var serializer = new XmlSerializer<List<ArrayTests.DataPoint>>(options => options.Indent()' typeof(ArrayTests.Preference));" is 123.
Long Statement,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,CanDeserializeListAsRoot,The length of the statement  "<ListOfDataPoint xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 120.
Long Statement,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,CanDeserializeListAsRoot,The length of the statement  "            var serializer = new XmlSerializer<List<ArrayTests.DataPoint>>(options => options.Indent()' typeof(ArrayTests.Preference));" is 123.
Long Statement,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,CanSerializeIEnumerableAsRoot,The length of the statement  "            var serializer = new XmlSerializer<IEnumerable<ArrayTests.DataPoint>>(options => options.Indent()' typeof(ArrayTests.Preference));" is 130.
Long Statement,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,CanDeserializeIEnumerableAsRoot,The length of the statement  "<IEnumerableOfDataPoint xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 127.
Long Statement,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,CanDeserializeIEnumerableAsRoot,The length of the statement  "            var serializer = new XmlSerializer<IEnumerable<ArrayTests.DataPoint>>(options => options.Indent()' typeof(ArrayTests.Preference));" is 130.
Long Statement,XSerializer.Tests,ListSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,SerializesCorrectly,The length of the statement  "                var customXml = customSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes));" is 161.
Long Statement,XSerializer.Tests,ListSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetSerializer,The length of the statement  "                    return ListSerializer.GetSerializer(type' null' new TestXmlSerializerOptions { RootElementName = "MyCollection" }' "MyItem");" is 125.
Long Statement,XSerializer.Tests,ListSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetSerializer,The length of the statement  "                return XmlSerializerFactory.Instance.GetSerializer(type' null' new TestXmlSerializerOptions { RootElementName = "MyContainer" });" is 129.
Long Statement,XSerializer.Tests,ListSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The length of the statement  "                    new ContainerWithReadWriteGenericListAndArrayAttributes { Items = new List<ListTests_ClassWithDynamicProperty> { Item } }'" is 122.
Long Statement,XSerializer.Tests,ListSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The length of the statement  "                    new ContainerWithReadWriteGenericIEnumerableAndArrayAttributes { Items = new List<ListTests_ClassWithDynamicProperty> { Item } }'" is 129.
Long Statement,XSerializer.Tests,ListSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The length of the statement  "                    new ContainerWithReadWriteGenericListAndElementAttribute { Items = new List<ListTests_ClassWithDynamicProperty> { Item } }'" is 123.
Long Statement,XSerializer.Tests,ListSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The length of the statement  "                    new ContainerWithReadWriteGenericIEnumerableAndElementAttribute { Items = new List<ListTests_ClassWithDynamicProperty> { Item } }'" is 130.
Long Statement,XSerializer.Tests,ListDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The length of the statement  "                    new ContainerWithReadWriteGenericListAndArrayAttributes { Items = new List<ListTests_ClassWithDynamicProperty> { Item } })" is 122.
Long Statement,XSerializer.Tests,ListDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The length of the statement  "                    new ContainerWithReadWriteGenericListAndElementAttribute { Items = new List<ListTests_ClassWithDynamicProperty> { Item } })" is 123.
Long Statement,XSerializer.Tests,ListDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The length of the statement  "                    new ContainerWithReadWriteGenericListAndElementAttributeAndAnotherProperty { Items = new List<ListTests_ClassWithDynamicProperty> { Item' SecondItem }' SomethingElse = "foobar" })" is 179.
Long Statement,XSerializer.Tests,ListDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetTestCaseData,The length of the statement  "                    new ContainerWithReadOnlyGenericListAndElementAttributeAndAnotherProperty(new List<ListTests_ClassWithDynamicProperty> { Item' SecondItem }) { SomethingElse = "foobar" })" is 170.
Long Statement,XSerializer.Tests,ListDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetSerializer,The length of the statement  "                    return ListSerializer.GetSerializer(type' null' new TestXmlSerializerOptions { RootElementName = "MyCollection" }' "MyItem");" is 125.
Long Statement,XSerializer.Tests,ListDeserializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,GetSerializer,The length of the statement  "                return XmlSerializerFactory.Instance.GetSerializer(type' null' new TestXmlSerializerOptions { RootElementName = "MyContainer" });" is 129.
Long Statement,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,RoundTripsCorrectly,The length of the statement  "            var customXml = customSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions()).StripXsiXsdDeclarations();" is 149.
Long Statement,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,RoundTripsCorrectly,The length of the statement  "            var defaultXml = defaultSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions()).StripXsiXsdDeclarations();" is 151.
Long Statement,XSerializer.Tests,EqualPropertiesConstraint,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NUnit\Has.cs,Matches,The length of the statement  "                    var expectedValueIsEmpty = expectedValueType == typeof(object) || (expectedValue is string && (string)expectedValue == "");" is 123.
Long Statement,XSerializer.Tests,EqualPropertiesConstraint,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NUnit\Has.cs,Matches,The length of the statement  "                    properties = actualValue.GetType().GetProperties().Where(p => p.IsSerializable(actualValue.GetType().GetConstructors().SelectMany(c => c.GetParameters()))).Select(p => new Property(p' actualValue' expectedValue));" is 213.
Long Statement,XSerializer.Tests,EqualPropertiesConstraint,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NUnit\Has.cs,Matches,The length of the statement  "                return properties.All(property => DoPropertyValuesMatch(property.ActualValue' property.ExpectedValue' property.Type' property.Name' path));" is 139.
Long Statement,XSerializer.Tests,EqualPropertiesConstraint,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NUnit\Has.cs,DoPropertyValuesMatch,The length of the statement  "                        if (!Matches(actualEnumerator.Value' expectedDictionary[actualEnumerator.Key]' string.Format("{0}.{1}[]"' path' propertyName)))" is 127.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedStringAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedNullableBoolAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedBoolAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedNullableEnumAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedEnumAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,NullableDateTimeAtrributesWithLocalValuesRedactCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("NullableDateTimeAttributeProperty=\"1111-11-11T11:11:11.1111111{0}11:11\""' expectedOffsetSign)));" is 149.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,DateTimeAtrributesWithLocalValuesRedactCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("DateTimeAttributeProperty=\"1111-11-11T11:11:11.1111111{0}11:11\""' expectedOffsetSign)));" is 141.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedDateTimeAtrributesFromLocalValueDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedNullableDateTimeAtrributesFromLocalValueDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedDateTimeAtrributesFromUtcValueDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedNullableDateTimeAtrributesFromUtcValueDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedNullableIntAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedIntAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedNullableDoubleAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedDoubleAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlAttributeContainer xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 144.
Long Statement,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,NullableDateTimeElementIsRedacted,The length of the statement  "            Assert.That(xml' Contains.Substring("<NullableDateTimeProperty>1111-11-11T11:11:11.1111111Z</NullableDateTimeProperty>"));" is 122.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,StringTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<StringTextProperty>{0}</StringTextProperty>"' expectedAttributeValue)));" is 124.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedStringAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,NullableBoolTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<NullableBoolTextProperty>{0}</NullableBoolTextProperty>"' expectedAttributeValue)));" is 136.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,BoolTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<BoolTextProperty>{0}</BoolTextProperty>"' expectedAttributeValue)));" is 120.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,NullableCharTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<NullableCharTextProperty>{0}</NullableCharTextProperty>"' expectedAttributeValue)));" is 136.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,CharTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<CharTextProperty>{0}</CharTextProperty>"' expectedAttributeValue)));" is 120.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableBoolAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedBoolAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedCharAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableCharAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,NullableEnumTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<NullableEnumTextProperty>{0}</NullableEnumTextProperty>"' expectedAttributeValue)));" is 136.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,EnumTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<EnumTextProperty>{0}</EnumTextProperty>"' expectedAttributeValue)));" is 120.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableEnumAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedEnumAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,NullableDateTimeAtrributesWithLocalValuesRedactCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<NullableDateTimeTextProperty>1111-11-11T11:11:11.1111111{0}11:11</NullableDateTimeTextProperty>"' expectedOffsetSign)));" is 172.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,NullableDateTimeAtrributesWithUtcValuesRedactCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring("<NullableDateTimeTextProperty>1111-11-11T11:11:11.1111111Z</NullableDateTimeTextProperty>"));" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,DateTimeAtrributesWithLocalValuesRedactCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<DateTimeTextProperty>1111-11-11T11:11:11.1111111{0}11:11</DateTimeTextProperty>"' expectedOffsetSign)));" is 156.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedDateTimeAtrributesFromLocalValueDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableDateTimeAtrributesFromLocalValueDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedDateTimeAtrributesFromUtcValueDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableDateTimeAtrributesFromUtcValueDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,NullableIntTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<NullableIntTextProperty>{0}</NullableIntTextProperty>"' expectedAttributeValue)));" is 134.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableIntAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedIntAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,NullableDoubleTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<NullableDoubleTextProperty>{0}</NullableDoubleTextProperty>"' expectedAttributeValue)));" is 140.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,DoubleTextRedactsCorrectly,The length of the statement  "            Assert.That(xml' Contains.Substring(string.Format("<DoubleTextProperty>{0}</DoubleTextProperty>"' expectedAttributeValue)));" is 124.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableDoubleAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedDoubleAttributeDeserializesCorrectly,The length of the statement  "<RedactTestClassForXmlText xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" is 130.
Long Statement,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The length of the statement  "                NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'" is 128.
Long Statement,XSerializer.Tests,RoundTripTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RoundTripTests.cs,XmlToObjectToXmlToObject,The length of the statement  "            var roundTripXml = serializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions());" is 120.
Long Statement,XSerializer.Tests,RoundTripTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RoundTripTests.cs,AssertAreEqual,The length of the statement  "            foreach (var property in instance.GetType().GetProperties().Where(p => p.IsSerializable(instance.GetType().GetConstructors().SelectMany(c => c.GetParameters()))))" is 162.
Long Statement,XSerializer.Tests,SerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\SerializationTests.cs,ForTypesWithoutInterfacesCustomSerializerSerializesTheSameAsDefaultSerializer,The length of the statement  "            var defaultXml = defaultSerializer.SerializeObject(instance' encoding' formatting' new TestSerializeOptions(namespaces)).StripXsiXsdDeclarations();" is 147.
Long Statement,XSerializer.Tests,SerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\SerializationTests.cs,ForTypesWithoutInterfacesCustomSerializerSerializesTheSameAsDefaultSerializer,The length of the statement  "            var customXml = customSerializer.SerializeObject(instance' encoding' formatting' new TestSerializeOptions(namespaces)).StripXsiXsdDeclarations();" is 145.
Long Statement,XSerializer.Tests,SerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\SerializationTests.cs,TypeWithInterfaceSerializesSameAsTypeWithAbstract,The length of the statement  "            var defaultXml = defaultSerializer.SerializeObject(instanceWithAbstract' encoding' formatting' new TestSerializeOptions(namespaces)).StripXsiXsdDeclarations();" is 159.
Long Statement,XSerializer.Tests,SerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\SerializationTests.cs,TypeWithInterfaceSerializesSameAsTypeWithAbstract,The length of the statement  "            var customXml = customSerializer.SerializeObject(instanceWithInterface' encoding' formatting' new TestSerializeOptions(namespaces)).StripXsiXsdDeclarations();" is 158.
Long Statement,XSerializer.Tests,SerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\SerializationTests.cs,TypeWithInterfaceSerializesSameAsTypeWithAbstract,The length of the statement  "                defaultXml = defaultXmlReplacements.Aggregate(defaultXml' (current' replacement) => current.Replace(replacement.Item1' replacement.Item2));" is 139.
Long Statement,XSerializer.Tests,XmlRootAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XmlRootAttributeTests.cs,WhenXmlRootAttributeDecoratesButRootElementIsSuppliedByConstructorUseTheRootElementNameFromTheConstructor,The length of the statement  "            var serializer = new XmlSerializer<FooWithXmlRootAttribute>(options => options.SetRootElementName("AndNowForSomethingCompletelyDifferent"));" is 140.
Long Statement,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,RoundTripsCorrectly,The length of the statement  "            var customXml = customSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes)).StripXsiXsdDeclarations();" is 187.
Long Statement,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,RoundTripsCorrectly,The length of the statement  "            var defaultXml = defaultSerializer.SerializeObject(instance' Encoding.UTF8' Formatting.Indented' new TestSerializeOptions(shouldAlwaysEmitTypes: AlwaysEmitTypes)).StripXsiXsdDeclarations();" is 189.
Long Statement,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptAComplexElementValue,The length of the statement  "            var options = new TestSerializeOptions { EncryptionMechanism = encryptionMechanism' SerializationState = new SerializationState() };" is 132.
Long Statement,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptMultipleComplexElementValuesEachWithAttributes,The length of the statement  "            var options = new TestSerializeOptions { EncryptionMechanism = encryptionMechanism' SerializationState = new SerializationState() };" is 132.
Long Statement,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptIndividualAttributeValues,The length of the statement  "            var options = new TestSerializeOptions { EncryptionMechanism = encryptionMechanism' SerializationState = new SerializationState() };" is 132.
Long Statement,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptIndividualAttributeValues,The length of the statement  "                    using (var reader = new XSerializerXmlReader(xmlReader' encryptionMechanism' options.EncryptKey' options.SerializationState))" is 125.
Long Statement,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptIndividualElementValues,The length of the statement  "            var options = new TestSerializeOptions { EncryptionMechanism = encryptionMechanism' SerializationState = new SerializationState() };" is 132.
Long Statement,XSerializer.Tests,XSerializerXmlReaderWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XSerializerXmlReaderWriterTests.cs,CanEncryptAndDecryptIndividualElementValues,The length of the statement  "                    using (var reader = new XSerializerXmlReader(xmlReader' encryptionMechanism' options.EncryptKey' options.SerializationState))" is 125.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,CanEncryptAndDecryptEntireRootObjectViaOptions,The length of the statement  "            var serializer = new XmlSerializer<UnencryptedThing>(x => x.EncryptRootObject().WithEncryptionMechanism(encryptionMechanism));" is 126.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,CanEncryptAndDecryptEntireRootObjectViaOptions,The length of the statement  "            Assert.That(encryptionMechanism.Decrypt(doc.Root.Attribute("Foo").Value' null' _serializationState)' Is.EqualTo("123"));" is 120.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,CanEncryptAndDecryptEntireRootObjectViaEncryptAttribute,The length of the statement  "            Assert.That(encryptionMechanism.Decrypt(doc.Root.Attribute("Foo").Value' null' _serializationState)' Is.EqualTo("123"));" is 120.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsPropertyWhenTheClassOfThePropertyTypeIsDecoratedWithEncryptAttribute,The length of the statement  "            Assert.That(encryptionMechanism.Decrypt(doc.Root.Element("Item").Value' null' _serializationState)' Is.EqualTo("<Bar>true</Bar>"));" is 131.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsPropertyWhenTheClassOfThePropertyTypeIsDecoratedWithEncryptAttribute,The length of the statement  "            Assert.That(encryptionMechanism.Decrypt(doc.Root.Element("Item").Attribute("Foo").Value' null' _serializationState)' Is.EqualTo("123"));" is 136.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericListPropertyWhenTheListGenericArgumentClassIsDecoratedWithEncryptAttribute,The length of the statement  "            var serializer = new XmlSerializer<Container<List<EncryptedThing>>>(x => x.WithEncryptionMechanism(encryptionMechanism));" is 121.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericListPropertyWhenTheListGenericArgumentClassIsDecoratedWithEncryptAttribute,The length of the statement  "            var actualDecryptedItemElementValue = encryptionMechanism.Decrypt(doc.Root.Element("Item").Value' null' _serializationState);" is 125.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The length of the statement  "            var serializer = new XmlSerializer<Container<Dictionary<EncryptedThing' int>>>(x => x.WithEncryptionMechanism(encryptionMechanism));" is 132.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The length of the statement  "            var actualDecryptedItemElementValue = encryptionMechanism.Decrypt(doc.Root.Element("Item").Value' null' _serializationState);" is 125.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The length of the statement  "            var serializer = new XmlSerializer<Container<Dictionary<int' EncryptedThing>>>(x => x.WithEncryptionMechanism(encryptionMechanism));" is 132.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The length of the statement  "            var actualDecryptedItemElementValue = encryptionMechanism.Decrypt(doc.Root.Element("Item").Value' null' _serializationState);" is 125.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,AListPropertyDecoratedWithXmlElementAndEncryptCannotExistWithOtherNonXmlAttributeProperties,The length of the statement  "            Assert.That(() => new XmlSerializer<Invalid>()' Throws.InstanceOf(ObjectManagerFixups.CanDoInvalidOperationFixup ? typeof(InvalidOperationException) : typeof(TargetInvocationException)));" is 187.
Long Statement,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,PerformTest,The length of the statement  "            var serializer = XmlSerializer.Create(objectToSerialize.GetType()' options => options.Indent().AlwaysEmitTypes()' extraTypes);" is 126.
Magic Number,XSerializer.Tests,ArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ArrayTests.cs,CanSerializeArrayAsProperty,The following statement contains a magic number: var container = new ContainerWithArrayProperty             {                 Information = new[]                 {                     new DataPoint                     {                         Name = "FooBar"'                         Preference = new Preference                         {                             Id = 123                         }                     }                 }             };
Magic Number,XSerializer.Tests,ArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ArrayTests.cs,CanSerializeArrayAsRoot,The following statement contains a magic number: var data = new[]                 {                     new DataPoint                     {                         Name = "FooBar"'                         Preference = new Preference                         {                             Id = 123                         }                     }                 };
Magic Number,XSerializer.Tests,Grault,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\AttributeTests.cs,GetHashCode,The following statement contains a magic number: return ((Bar != null ? Bar.GetHashCode() : 0) * 397) ^ Baz.GetHashCode();
Magic Number,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,CreateDemoInstance,The following statement contains a magic number: return                  new Demo(int32ValueSpecified' shouldSerializeByteValue' uInt64ValueSpecified' shouldSerializeUInt64Value)                 {                     Int32Value = 1'                     ByteValue = 2'                     UInt64Value = 3'                     Int16Value = 4                 };
Magic Number,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,CreateDemoInstance,The following statement contains a magic number: return                  new Demo(int32ValueSpecified' shouldSerializeByteValue' uInt64ValueSpecified' shouldSerializeUInt64Value)                 {                     Int32Value = 1'                     ByteValue = 2'                     UInt64Value = 3'                     Int16Value = 4                 };
Magic Number,XSerializer.Tests,ConditionalSerializationTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ConditionalSerializationTests.cs,CreateDemoInstance,The following statement contains a magic number: return                  new Demo(int32ValueSpecified' shouldSerializeByteValue' uInt64ValueSpecified' shouldSerializeUInt64Value)                 {                     Int32Value = 1'                     ByteValue = 2'                     UInt64Value = 3'                     Int16Value = 4                 };
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanSerializeReadWriteProperties,The following statement contains a magic number: var instance = new Bar                 {                     Baz = new Baz                     {                         Qux = "abc"'                         Garply = true                     }'                     Corge = 123.45                 };
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanSerializeWithEncryptRootObjectEnabled,The following statement contains a magic number: var instance = new Bar             {                 Baz = new Baz                 {                     Qux = "abc"'                     Garply = true                 }'                 Corge = 123.45             };
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeReadWriteProperties,The following statement contains a magic number: Assert.That(instance.Corge' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeWithEncryptRootObjectEnabled,The following statement contains a magic number: Assert.That(result.Corge' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,ReadonlyAddableTypeInjectedIntoNonDefaultConstructorIsNotDoubleAdded,The following statement contains a magic number: Assert.That(thing.Stuff.Count' Is.EqualTo(3));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,ReadonlyAddableTypeInjectedIntoNonDefaultConstructorIsNotDoubleAdded,The following statement contains a magic number: Assert.That(thing.Stuff' Is.EqualTo(new[] { 1' 2' 3 }));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,ReadonlyAddableTypeInjectedIntoNonDefaultConstructorIsNotDoubleAdded,The following statement contains a magic number: Assert.That(thing.Stuff' Is.EqualTo(new[] { 1' 2' 3 }));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeNonDefaultConstructor,The following statement contains a magic number: Assert.That(foo.Bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeNonDefaultConstructorWithExtraProperties,The following statement contains a magic number: Assert.That(foo.Bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeClassWithMultiplNonDefaultConstructorsWhenOneIsDecoratedWithJsonConstructorAttribute,The following statement contains a magic number: Assert.That(foo.Bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanCustomizePropertyName,The following statement contains a magic number: var foo = new FooWithJsonPropertyAttributes { Bar = 123' Baz = "abc" };
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanSerializeInterface,The following statement contains a magic number: ISpam ham = new Spam { Eggs = 123 };
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeInterfaceWhenMappingIsSpecifiedViaAttribute,The following statement contains a magic number: Assert.That(ham.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeInterfaceWhenMappingIsSpecifiedViaConfiguration,The following statement contains a magic number: Assert.That(spam.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeInterfaceWhenMappingIsSpecifiedByBothAttributeAndConfiguration,The following statement contains a magic number: Assert.That(ham.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanSerializeInterfacePropertyWithoutSpecifyingMapping,The following statement contains a magic number: var food = new Breakfast             {                 Menu = new Spam                 {                     Eggs = 123                 }             };
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeInterfacePropertyWhenMappingIsSpecifiedViaAttributedInterface,The following statement contains a magic number: Assert.That(food.Menu.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeInterfacePropertyWhenMappingIsSpecifiedViaConfigurationByType,The following statement contains a magic number: Assert.That(food.Menu.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeInterfacePropertyWhenMappingIsSpecifiedViaAttributedProperty,The following statement contains a magic number: Assert.That(food.Menu.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeInterfacePropertyWhenMappingIsSpecifiedViaConfigurationByProperty,The following statement contains a magic number: Assert.That(food.Menu.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,GivenMultipleMappingsConfigurationByPropertyHasHighestPriority,The following statement contains a magic number: Assert.That(food.Menu.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,GivenMultipleMappingsConfigurationByInterfaceHasSecondHighestPriority,The following statement contains a magic number: Assert.That(food.Menu.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,GivenMultipleMappingsAttributedPropertyHasThirdHighestPriority,The following statement contains a magic number: Assert.That(food.Menu.Eggs' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanOverrideAbstractClass,The following statement contains a magic number: Assert.That(widget.Gadget' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanOverrideConcreteClass,The following statement contains a magic number: Assert.That(widget.Gadget' Is.EqualTo(123));
Magic Number,XSerializer.Tests,CustomJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\CustomJsonSerializerTests.cs,CanDeserializeReadonlyPropertyWithNameSpecifiedByJsonPropertyAttribute,The following statement contains a magic number: Assert.That(foo.Bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithLocalKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Local).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithLocalKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Local).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithLocalKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Local).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithLocalKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Local).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithLocalKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Local).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithLocalKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Local).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUtcKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Utc).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUtcKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Utc).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUtcKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Utc).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUtcKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Utc).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUtcKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Utc).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUtcKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Utc).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUnspecifiedKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Unspecified).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUnspecifiedKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Unspecified).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUnspecifiedKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Unspecified).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUnspecifiedKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Unspecified).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUnspecifiedKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Unspecified).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeWithUnspecifiedKind,The following statement contains a magic number: var expectedValue = new DateTime(2016' 2' 24' 2' 29' 33' DateTimeKind.Unspecified).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(-5)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(-5)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(-5)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(-5)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(-5)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(-5)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(-5)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithZuluTimeSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(0)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithZuluTimeSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(0)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithZuluTimeSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(0)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithZuluTimeSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(0)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithZuluTimeSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(0)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithZuluTimeSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' TimeSpan.FromHours(0)).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithNoOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' utcOffset).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithNoOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' utcOffset).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithNoOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' utcOffset).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithNoOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' utcOffset).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithNoOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' utcOffset).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDateTimeHandlerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDateTimeHandlerTests.cs,CanParseDateTimeOffsetWithNoOffsetSpecified,The following statement contains a magic number: var expectedValue = new DateTimeOffset(2016' 2' 24' 2' 29' 33' utcOffset).AddTicks(expectedAdditionalTicks);
Magic Number,XSerializer.Tests,DefaultDocumentNamespaceTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDocumentNamespaceTests.cs,NotSpecifyingNamespacesYieldsXsdAndXsi,The following statement contains a magic number: Assert.That(attributes.Count' Is.EqualTo(2));
Magic Number,XSerializer.Tests,DefaultDocumentNamespaceTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DefaultDocumentNamespaceTests.cs,SpecifyingNonEmptyValuesYieldsTheSpecifiedValuesButNotXsdOrXsi,The following statement contains a magic number: Assert.That(attributes.Count' Is.EqualTo(2));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanSerializeIDictionaryOfStringToObject,The following statement contains a magic number: var json = serializer.Serialize(new Dictionary<string' object>{ { "foo"' "abc" }' { "bar"' 123.45 } });
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanSerializeIDictionaryOfStringToObjectEncrypted,The following statement contains a magic number: var json = serializer.Serialize(new Dictionary<string' object> { { "foo"' "abc" }' { "bar"' 123.45 } });
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeDictionaryOfStringToType,The following statement contains a magic number: Assert.That(dictionary["bar"]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeIDictionaryOfStringToType,The following statement contains a magic number: Assert.That(dictionary["bar"]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeDictionaryOfCustomTypeToType,The following statement contains a magic number: Assert.That(dictionary[new Grault { Bar = "xyz"' Baz = false }]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeIDictionaryOfCustomTypeToType,The following statement contains a magic number: Assert.That(dictionary[new Grault { Bar = "xyz"' Baz = false }]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeHashTable,The following statement contains a magic number: Assert.That(dictionary[new JsonObject { { "qux"' false } }]' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeNonGenericIDictionary,The following statement contains a magic number: Assert.That(dictionary[new JsonObject { { "qux"' false } }]' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyGenericDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Foo"]' Is.EqualTo(123));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyGenericDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Bar"]' Is.EqualTo(456));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericIDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Foo"]' Is.EqualTo(123));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericIDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Bar"]' Is.EqualTo(456));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericImplementationOfNonGenericIDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Foo"]' Is.EqualTo(123));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericImplementationOfNonGenericIDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Bar"]' Is.EqualTo(456));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyGenericIDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Foo"]' Is.EqualTo(123));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyGenericIDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Bar"]' Is.EqualTo(456));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyGenericImplementationOfGenericIDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Foo"]' Is.EqualTo(123));
Magic Number,XSerializer.Tests,DictionaryJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DictionaryJsonSerializerTests.cs,CanDeserializeReadonlyGenericImplementationOfGenericIDictionaryProperty,The following statement contains a magic number: Assert.That(garply.GraultMap["Bar"]' Is.EqualTo(456));
Magic Number,XSerializer.Tests,DynamicJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicJsonSerializerTests.cs,CanSerializeIEnumerable,The following statement contains a magic number: var items = new List<object> { 123.0' true' false' null };
Magic Number,XSerializer.Tests,DynamicJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicJsonSerializerTests.cs,CanSerializeCustomObject,The following statement contains a magic number: var instance = new CustomJsonSerializerTests.Bar             {                 Baz = new CustomJsonSerializerTests.Baz                 {                     Qux = "abc"'                     Garply = true                 }'                 Corge = 123.45             };
Magic Number,XSerializer.Tests,DynamicJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicJsonSerializerTests.cs,CanDeserializeJsonObjectAndReadPropertiesWithoutConversion,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,DynamicJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicJsonSerializerTests.cs,CanDeserializeJsonObjectAndReadPropertiesWithConversion,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,DynamicTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,ADynamicPropertyWithAZeroPaddedNumberValueRoundTripsFromXmlCorrectly,The following statement contains a magic number: var instance = new ClassWithDynamicProperty             {                 IntProperty = 789'                 DynamicProperty = dynamicProperty             };
Magic Number,XSerializer.Tests,DynamicTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,ADynamicPropertyWithAnEmptyValueRoundTripsFromXmlCorrectly,The following statement contains a magic number: var instance = new ClassWithDynamicProperty             {                 IntProperty = 123'                 DynamicProperty = dynamicProperty             };
Magic Number,XSerializer.Tests,DynamicTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,AnObjectPropertyWithAnEmptyValueRoundTripsFromXmlCorrectly,The following statement contains a magic number: var instance = new ClassWithObjectProperty             {                 IntProperty = 123'                 ObjectProperty = ""             };
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = 123 }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(int))' "123"))                         .SetName("dynamic property - int");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = 123.45 }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(double))' "123.45"))                         .SetName("dynamic property - double");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = 123.45M }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(decimal))' "123.45"))                         .SetName("dynamic property - decimal");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToFalse,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = 123 }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(int))' "123"))                         .SetName("dynamic property - int");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = 123.45 }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(double))' "123.45"))                         .SetName("dynamic property - double");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = 123.45M }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(decimal))' "123.45"))                         .SetName("dynamic property - decimal");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicSerializationTestsWithAlwaysEmitTypesSetToTrue,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) }'                     typeof(ClassWithDynamicProperty)'                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z"))                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(int))' "123")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = 123 })                         .SetName("dynamic property - int");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                         string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(double))' "123.45")'                         typeof(ClassWithDynamicProperty)'                         new ClassWithDynamicProperty { DynamicProperty = 123.45 })                             .SetName("dynamic property - double");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(decimal))' "123.45")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = 123.45M })                         .SetName("dynamic property - decimal");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(int))' "123")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = 123 })                         .SetName("dynamic property - int");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                         string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(double))' "123.45")'                         typeof(ClassWithDynamicProperty)'                         new ClassWithDynamicProperty { DynamicProperty = 123.45 })                             .SetName("dynamic property - double");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(decimal))' "123.45")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = 123.45M })                         .SetName("dynamic property - decimal");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,DynamicDeserializationTestsWithWithoutXsdTypes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\DynamicTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                     string.Format(ExpectedDynamicXmlFormat' GetXsiTypeString(typeof(DateTime))' "2013-03-17T06:56:10.2950000Z")'                     typeof(ClassWithDynamicProperty)'                     new ClassWithDynamicProperty { DynamicProperty = new DateTime(2013' 3' 17' 6' 56' 10' 295' DateTimeKind.Utc) })                         .SetName("dynamic property - DateTime");
Magic Number,XSerializer.Tests,EncryptionMarker,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EncryptionBugs.cs,Decrypt,The following statement contains a magic number: return cipherText.Substring(10' cipherText.Length - 11)                     .Replace(@"\["' "!!11@@22##33").Replace('['' '<').Replace("!!11@@22##33"' "[")                     .Replace(@"\]"' "!!11@@22##33").Replace(']'' '>').Replace("!!11@@22##33"' "]");
Magic Number,XSerializer.Tests,EncryptionMarker,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EncryptionBugs.cs,Decrypt,The following statement contains a magic number: return cipherText.Substring(10' cipherText.Length - 11)                     .Replace(@"\["' "!!11@@22##33").Replace('['' '<').Replace("!!11@@22##33"' "[")                     .Replace(@"\]"' "!!11@@22##33").Replace(']'' '>').Replace("!!11@@22##33"' "]");
Magic Number,XSerializer.Tests,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EncryptionTests.cs,Foooooo,The following statement contains a magic number: var foo = new Foo             {                 Bar = "abc"'                 Baz = 123'                 Qux = 123.45'                 Enum = ExpressionType.LeftShiftAssign'                 Type = typeof(BinaryExpression)'                 Uri = new Uri("https://www.google.com/search?q=weird+wild+stuff")             };
Magic Number,XSerializer.Tests,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\EncryptionTests.cs,Foooooo,The following statement contains a magic number: var foo = new Foo             {                 Bar = "abc"'                 Baz = 123'                 Qux = 123.45'                 Enum = ExpressionType.LeftShiftAssign'                 Type = typeof(BinaryExpression)'                 Uri = new Uri("https://www.google.com/search?q=weird+wild+stuff")             };
Magic Number,XSerializer.Tests,PropertyAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\GetCustomAttributeExtensionMethodTests.cs,WhenAnAttributeDecoratesAnInterfacePropertyAndItIsImplementedImplicitlyAndTheClassPropertyIsAlsoDecoratedWithTheSameAttributeTypeAndShouldUseAttributeDefinedInInterfaceIsTrueThenTheClassPropertyAttributeThenTheInterfacePropertyAttributeAreReturned,The following statement contains a magic number: Assert.That(attributes' Haz.Length.EqualTo(2));
Magic Number,XSerializer.Tests,IgnoreAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\IgnoreAttributeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = 1' Baz = 2' Qux = 3 }' typeof(Foo)).SetName("XmlIgnoreAttribute causes property to be skipped during serialization");
Magic Number,XSerializer.Tests,IgnoreAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\IgnoreAttributeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = 1' Baz = 2' Qux = 3 }' typeof(Foo)).SetName("XmlIgnoreAttribute causes property to be skipped during serialization");
Magic Number,XSerializer.Tests,IgnoreAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\IgnoreAttributeTests.cs,VerifyThatProxyPropertiesRoundTripCorrectly,The following statement contains a magic number: var foo = new Foo { Bar = 1' Baz = 2' Qux = 3 };
Magic Number,XSerializer.Tests,IgnoreAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\IgnoreAttributeTests.cs,VerifyThatProxyPropertiesRoundTripCorrectly,The following statement contains a magic number: var foo = new Foo { Bar = 1' Baz = 2' Qux = 3 };
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanRetrieveNumericJsonPrimitive,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToSByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToUInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToUInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToUInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToSingle,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToDouble,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanTransformItemsToDecimal,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToListOfObject,The following statement contains a magic number: Assert.That(baz' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToObjectArray,The following statement contains a magic number: Assert.That(baz' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToByteArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableByteArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToSByteArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableSByteArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToInt16Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableInt16Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToUInt16Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableUInt16Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToInt32Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableInt32Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToUInt32Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableUInt32Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToInt64Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableInt64Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToUInt64Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableUInt64Array,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToSingleArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableSingleArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToDoubleArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableDoubleArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToDecimalArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanConvertToNullableDecimalArray,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfSByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfSByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfSByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableSByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableSByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableSByte,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfUInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfUInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfUInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableUInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableUInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableUInt16,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfUInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfUInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfUInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableUInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableUInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableUInt32,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfUInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfUInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfUInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableUInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableUInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableUInt64,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfSingle,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfSingle,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfSingle,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableSingle,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableSingle,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableSingle,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfDouble,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfDouble,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfDouble,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableDouble,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableDouble,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableDouble,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfDecimal,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfDecimal,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfDecimal,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIEnumerableOfNullableDecimal,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToICollectionOfNullableDecimal,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDynamicConvertToIListOfNullableDecimal,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDecryptJsonObjectItem,The following statement contains a magic number: Assert.That(bar.qux' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDecryptJsonArrayItem,The following statement contains a magic number: Assert.That(bar[1]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDecryptJsonArrayItem,The following statement contains a magic number: Assert.That(bar[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,JsonArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonArrayTests.cs,CanDecryptJsonArrayItem,The following statement contains a magic number: Assert.That(bar[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveNumericJsonPrimitive,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveByteProjection,The following statement contains a magic number: const byte expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveSByteProjection,The following statement contains a magic number: const sbyte expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveInt16Projection,The following statement contains a magic number: const short expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveUInt16Projection,The following statement contains a magic number: const ushort expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveInt32Projection,The following statement contains a magic number: const int expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveUInt32Projection,The following statement contains a magic number: const uint expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveInt64Projection,The following statement contains a magic number: const long expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveUInt64Projection,The following statement contains a magic number: const ulong expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveSingleProjection,The following statement contains a magic number: const float expected = 123.45F;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveDoubleProjection,The following statement contains a magic number: const double expected = 123.45;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDynamicRetrieveDecimalProjection,The following statement contains a magic number: const decimal expected = 123.45M;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveNumericJsonPrimitive,The following statement contains a magic number: Assert.That(bar' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveByteProjection,The following statement contains a magic number: const byte expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveSByteProjection,The following statement contains a magic number: const sbyte expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveInt16Projection,The following statement contains a magic number: const short expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveUInt16Projection,The following statement contains a magic number: const ushort expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveInt32Projection,The following statement contains a magic number: const int expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveUInt32Projection,The following statement contains a magic number: const uint expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveInt64Projection,The following statement contains a magic number: const long expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveUInt64Projection,The following statement contains a magic number: const ulong expected = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveSingleProjection,The following statement contains a magic number: const float expected = 123.45F;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveDoubleProjection,The following statement contains a magic number: const double expected = 123.45;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanIndexerRetrieveDecimalProjection,The following statement contains a magic number: const decimal expected = 123.45M;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDecryptJsonObjectProperty,The following statement contains a magic number: Assert.That(bar.qux' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDecryptJsonArrayProperty,The following statement contains a magic number: Assert.That(bar[1]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDecryptJsonArrayProperty,The following statement contains a magic number: Assert.That(bar[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,CanDecryptJsonArrayProperty,The following statement contains a magic number: Assert.That(bar[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,GetHashCodeReturnsTheSameValueForEqualJsonObjects,The following statement contains a magic number: foo1.Baz = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,GetHashCodeReturnsTheSameValueForEqualJsonObjects,The following statement contains a magic number: foo2.Baz = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,EqualsReturnsTrueForEqualJsonObjects,The following statement contains a magic number: foo1.Baz = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,EqualsReturnsTrueForEqualJsonObjects,The following statement contains a magic number: foo2.Baz = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,EqualsReturnsFalseForNonEqualJsonObjects,The following statement contains a magic number: foo1.Baz = 123;
Magic Number,XSerializer.Tests,JsonObjectTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonObjectTests.cs,EqualsReturnsFalseForNonEqualJsonObjects,The following statement contains a magic number: foo2.Baz = 123;
Magic Number,XSerializer.Tests,JsonWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonWriterTests.cs,CanWriteDouble,The following statement contains a magic number: writer.WriteValue(123.45);
Magic Number,XSerializer.Tests,JsonWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonWriterTests.cs,CanWriteComplexObject,The following statement contains a magic number: writer.WriteValue(2);
Magic Number,XSerializer.Tests,JsonWriterTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\JsonWriterTests.cs,CanWriteComplexObject,The following statement contains a magic number: writer.WriteValue(3);
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericIListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.Null);
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericImplementationOfNonGenericIListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.Null);
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[1]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericImplementationOfGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[1]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericImplementationOfGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericImplementationOfGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericIListProperty,The following statement contains a magic number: Assert.That(garply.Graults[1]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericIListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericIListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericInterfaceImplementationOfGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[1]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericInterfaceImplementationOfGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyNonGenericInterfaceImplementationOfGenericListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericImplementationOfGenericIListProperty,The following statement contains a magic number: Assert.That(garply.Graults[1]' Is.EqualTo(2));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericImplementationOfGenericIListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListJsonSerializerTests.cs,CanDeserializeReadonlyGenericImplementationOfGenericIListProperty,The following statement contains a magic number: Assert.That(garply.Graults[2]' Is.EqualTo(3));
Magic Number,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,CanSerializeListAsRoot,The following statement contains a magic number: var data = new List<ArrayTests.DataPoint>                 {                     new ArrayTests.DataPoint                     {                         Name = "FooBar"'                         Preference = new ArrayTests.Preference                         {                             Id = 123                         }                     }                 };
Magic Number,XSerializer.Tests,ListTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ListTests.cs,CanSerializeIEnumerableAsRoot,The following statement contains a magic number: IEnumerable<ArrayTests.DataPoint> data = new List<ArrayTests.DataPoint>                 {                     new ArrayTests.DataPoint                     {                         Name = "FooBar"'                         Preference = new ArrayTests.Preference                         {                             Id = 123                         }                     }                 };
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ObjectMissingOpenCurlyBrace2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ObjectMissingOpenCurlyBrace2_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ObjectMissingValue_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ObjectMissingCloseCurlyBrace1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(10));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ObjectMissingCloseCurlyBrace2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(18));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ObjectMissingCloseCurlyBrace2_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ObjectExpectedEndOfString1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(11));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ObjectExpectedEndOfString2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(11));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DictionaryMissingOpenCurlyBrace1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DictionaryMissingOpenCurlyBrace1_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DictionaryMissingValue_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DictionaryMissingCloseCurlyBrace1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(10));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DictionaryMissingCloseCurlyBrace2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(18));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DictionaryMissingCloseCurlyBrace2_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DictionaryExpectedEndOfString1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(11));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DictionaryExpectedEndOfString2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(11));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyNameMissing_Encrypted1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyNameMissing_Encrypted2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyNameMissingOpenQuote_Encrypted1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyNameMissingOpenQuote_Encrypted2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyNameMissingCloseQuote_Encrypted1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyNameMissingCloseQuote_Encrypted2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyInvalidName_Encrypted1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyInvalidName_Encrypted2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingNameValueSeparator1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(6));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingNameValueSeparator1_Encrypted1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingNameValueSeparator1_Encrypted2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingNameValueSeparator2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(6));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingNameValueSeparator2_Encrypted1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingNameValueSeparator2_Encrypted2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingItemSeparator,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(10));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingItemSeparator_Encrypted1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,PropertyMissingItemSeparator_Encrypted2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringMissingOpenQuote,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringMissingOpenQuote_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringMissingCloseQuote,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringMissingCloseQuote_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringMissingValue,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringMissingValue_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringUnexpectedNode,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringUnexpectedNode_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringInvalidValue,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,StringInvalidValue_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue1_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue2_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue3,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue3_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue4,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue4_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue5,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue5_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue6,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,LiteralInvalidValue6_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanMissingValue,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanMissingValue_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanInvalidValue1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanInvalidValue1_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanInvalidValue2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanInvalidValue2_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanInvalidValue3,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanInvalidValue3_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanExpectedEndOfString1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(4));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,BooleanExpectedEndOfString2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(4));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberMissingValue,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberMissingValue_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberInvalidValue1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberInvalidValue1_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberInvalidValue2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberInvalidValue2_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberInvalidValue3,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberInvalidValue3_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberExpectedEndOfString1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(6));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,NumberExpectedEndOfString2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(6));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingValue,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingValue_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingOpenSquareBracket1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingOpenSquareBracket1_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingOpenSquareBracket2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingOpenSquareBracket2_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingCommaOrCloseSquareBracket1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(13));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingCommaOrCloseSquareBracket1_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingCommaOrCloseSquareBracket2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(13));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayMissingCommaOrCloseSquareBracket2_Encrypted,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayExpectedEndOfString1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,ArrayExpectedEndOfString2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(7));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicArrayMissingCommaOrCloseSquareBracket1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(6));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicArrayMissingCommaOrCloseSquareBracket2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(6));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicObjectMissingOpenCurlyBrace,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(5));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicObjectMissingCloseCurlyBrace,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(10));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicPropertyMissingNameValueSeparator1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(6));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicPropertyMissingNameValueSeparator2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(6));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicPropertyMissingItemSeparator,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(10));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicExpectedEndOfString1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(11));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,DynamicExpectedEndOfString2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(11));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,InvalidExtraNode1,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(18));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,InvalidExtraNode2,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(18));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,InvalidExtraNode3,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(23));
Magic Number,XSerializer.Tests,MalformedJsonTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\MalformedJsonTests.cs,InvalidExtraNode4,The following statement contains a magic number: Assert.That(ex.Position' Is.EqualTo(22));
Magic Number,XSerializer.Tests,NilTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NilTests.cs,VerifyThatNilIsEmittedForEachPropertyType,The following statement contains a magic number: Assert.That(Regex.Matches(xml' @"xsi:nil=""true""").Count' Is.EqualTo(6));
Magic Number,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                 new Child1 { ByteValue = 1' Int32Value = 2' UInt64Value = 3 }'                 typeof(Child1));
Magic Number,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                 new Child1 { ByteValue = 1' Int32Value = 2' UInt64Value = 3 }'                 typeof(Child1));
Magic Number,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                 new TopLevelParent                 {                     Parent1 =                         new Parent1                         {                             Child1 =                                 new Child1                                 {                                     ByteValue = 1'                                     Int32Value = 2'                                     UInt64Value = 3                                 }'                             Child2 =                                 new Child2                                 {                                     DecimalValue = 12.34M'                                     DoubleValue = 23.45'                                     SingleValue = 34.56F                                 }                         }'                     Parent2 =                         new Parent2                         {                             Child3 =                                 new Child3                                 {                                     StringValue = "abc"                                 }'                             Child4 =                                 new Child4                                 {                                     MyEnumeration = MyEnumeration.Value3                                 }                         }                 }'                 typeof(TopLevelParent));
Magic Number,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                 new TopLevelParent                 {                     Parent1 =                         new Parent1                         {                             Child1 =                                 new Child1                                 {                                     ByteValue = 1'                                     Int32Value = 2'                                     UInt64Value = 3                                 }'                             Child2 =                                 new Child2                                 {                                     DecimalValue = 12.34M'                                     DoubleValue = 23.45'                                     SingleValue = 34.56F                                 }                         }'                     Parent2 =                         new Parent2                         {                             Child3 =                                 new Child3                                 {                                     StringValue = "abc"                                 }'                             Child4 =                                 new Child4                                 {                                     MyEnumeration = MyEnumeration.Value3                                 }                         }                 }'                 typeof(TopLevelParent));
Magic Number,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                 new TopLevelParent                 {                     Parent1 =                         new Parent1                         {                             Child1 =                                 new Child1                                 {                                     ByteValue = 1'                                     Int32Value = 2'                                     UInt64Value = 3                                 }'                             Child2 =                                 new Child2                                 {                                     DecimalValue = 12.34M'                                     DoubleValue = 23.45'                                     SingleValue = 34.56F                                 }                         }'                     Parent2 =                         new Parent2                         {                             Child3 =                                 new Child3                                 {                                     StringValue = "abc"                                 }'                             Child4 =                                 new Child4                                 {                                     MyEnumeration = MyEnumeration.Value3                                 }                         }                 }'                 typeof(TopLevelParent));
Magic Number,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                 new TopLevelParent                 {                     Parent1 =                         new Parent1                         {                             Child1 =                                 new Child1                                 {                                     ByteValue = 1'                                     Int32Value = 2'                                     UInt64Value = 3                                 }'                             Child2 =                                 new Child2                                 {                                     DecimalValue = 12.34M'                                     DoubleValue = 23.45'                                     SingleValue = 34.56F                                 }                         }'                     Parent2 =                         new Parent2                         {                             Child3 =                                 new Child3                                 {                                     StringValue = "abc"                                 }'                             Child4 =                                 new Child4                                 {                                     MyEnumeration = MyEnumeration.Value3                                 }                         }                 }'                 typeof(TopLevelParent));
Magic Number,XSerializer.Tests,NonAbstractClassesWithOnlySimpleElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonAbstractClassesWithOnlySimpleElements.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(                 new TopLevelParent                 {                     Parent1 =                         new Parent1                         {                             Child1 =                                 new Child1                                 {                                     ByteValue = 1'                                     Int32Value = 2'                                     UInt64Value = 3                                 }'                             Child2 =                                 new Child2                                 {                                     DecimalValue = 12.34M'                                     DoubleValue = 23.45'                                     SingleValue = 34.56F                                 }                         }'                     Parent2 =                         new Parent2                         {                             Child3 =                                 new Child3                                 {                                     StringValue = "abc"                                 }'                             Child4 =                                 new Child4                                 {                                     MyEnumeration = MyEnumeration.Value3                                 }                         }                 }'                 typeof(TopLevelParent));
Magic Number,XSerializer.Tests,NonDefaultConstructorTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonDefaultConstructorTests.cs,CanRoundTripClassWithOnlyOneNonDefaultConstructor,The following statement contains a magic number: var foo = new Foo(Tuple.Create(1))             {                 OtherThings = new List<Tuple<int>>                 {                     Tuple.Create(2)'                     Tuple.Create(3)                 }             };
Magic Number,XSerializer.Tests,NonDefaultConstructorTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonDefaultConstructorTests.cs,CanRoundTripClassWithOnlyOneNonDefaultConstructor,The following statement contains a magic number: var foo = new Foo(Tuple.Create(1))             {                 OtherThings = new List<Tuple<int>>                 {                     Tuple.Create(2)'                     Tuple.Create(3)                 }             };
Magic Number,XSerializer.Tests,NonDefaultConstructorTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonDefaultConstructorTests.cs,CanRoundTripClassWithReadOnlyOfTypeArray,The following statement contains a magic number: var grault = new Grault(new[] { 1' 2' 3 });
Magic Number,XSerializer.Tests,NonDefaultConstructorTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NonDefaultConstructorTests.cs,CanRoundTripClassWithReadOnlyOfTypeArray,The following statement contains a magic number: var grault = new Grault(new[] { 1' 2' 3 });
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeDouble,The following statement contains a magic number: var json = serializer.Serialize(123.45);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableDouble,The following statement contains a magic number: var json = serializer.Serialize(123.45);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeInt,The following statement contains a magic number: var json = serializer.Serialize(123);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableInt,The following statement contains a magic number: var json = serializer.Serialize(123);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeLong,The following statement contains a magic number: var json = serializer.Serialize(10000000000000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableLong,The following statement contains a magic number: var json = serializer.Serialize(10000000000000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeUInt,The following statement contains a magic number: var json = serializer.Serialize(4000000000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableUInt,The following statement contains a magic number: var json = serializer.Serialize(4000000000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeByte,The following statement contains a magic number: var json = serializer.Serialize(255);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableByte,The following statement contains a magic number: var json = serializer.Serialize(255);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeSByte,The following statement contains a magic number: var json = serializer.Serialize(-128);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableSByte,The following statement contains a magic number: var json = serializer.Serialize(-128);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeShort,The following statement contains a magic number: var json = serializer.Serialize(32000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableShort,The following statement contains a magic number: var json = serializer.Serialize(32000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeUShort,The following statement contains a magic number: var json = serializer.Serialize(65000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableUShort,The following statement contains a magic number: var json = serializer.Serialize(65000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeULong,The following statement contains a magic number: var json = serializer.Serialize(10000000000000000000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableULong,The following statement contains a magic number: var json = serializer.Serialize(10000000000000000000);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeFloat,The following statement contains a magic number: var json = serializer.Serialize(123.45F);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableFloat,The following statement contains a magic number: var json = serializer.Serialize(123.45F);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeDecimal,The following statement contains a magic number: var json = serializer.Serialize(123.45M);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeNullableDecimal,The following statement contains a magic number: var json = serializer.Serialize(123.45M);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanSerializeEncrypted,The following statement contains a magic number: var json = serializer.Serialize(123.45);
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeDouble,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableDouble,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeInt,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableInt,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeLong,The following statement contains a magic number: Assert.That(value' Is.EqualTo(10000000000000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableLong,The following statement contains a magic number: Assert.That(value' Is.EqualTo(10000000000000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeUInt,The following statement contains a magic number: Assert.That(value' Is.EqualTo(4000000000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableUInt,The following statement contains a magic number: Assert.That(value' Is.EqualTo(4000000000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeByte,The following statement contains a magic number: Assert.That(value' Is.EqualTo(255));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableByte,The following statement contains a magic number: Assert.That(value' Is.EqualTo(255));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeSByte,The following statement contains a magic number: Assert.That(value' Is.EqualTo(-128));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableSByte,The following statement contains a magic number: Assert.That(value' Is.EqualTo(-128));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeShort,The following statement contains a magic number: Assert.That(value' Is.EqualTo(32000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableShort,The following statement contains a magic number: Assert.That(value' Is.EqualTo(32000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeUShort,The following statement contains a magic number: Assert.That(value' Is.EqualTo(65000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableUShort,The following statement contains a magic number: Assert.That(value' Is.EqualTo(65000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeULong,The following statement contains a magic number: Assert.That(value' Is.EqualTo(10000000000000000000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableULong,The following statement contains a magic number: Assert.That(value' Is.EqualTo(10000000000000000000));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeFloat,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableFloat,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123.45F));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeDecimal,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeNullableDecimal,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeWithWhitespace,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,NumberJsonSerializerTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\NumberJsonSerializerTests.cs,CanDeserializeEncrypted,The following statement contains a magic number: Assert.That(value' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new ByteArrayContainer             {                 Data = new byte[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new ByteArrayContainer             {                 Data = new byte[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new ByteArrayContainer             {                 Data = new byte[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new ByteArrayContainer             {                 Data = new byte[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new ByteArrayContainer             {                 Data = new byte[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new ByteArrayContainer             {                 Data = new byte[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new ByteArrayContainer             {                 Data = new byte[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new Int32ArrayContainer             {                 Data = new[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new Int32ArrayContainer             {                 Data = new[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new Int32ArrayContainer             {                 Data = new[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new Int32ArrayContainer             {                 Data = new[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new Int32ArrayContainer             {                 Data = new[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new Int32ArrayContainer             {                 Data = new[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new Int32ArrayContainer             {                 Data = new[] { 0' 1' 2' 4' 8' 16' 32' 64' 128 }             }).SetName("Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableByteArrayContainer             {                 Data = new byte?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableByteArrayContainer             {                 Data = new byte?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableByteArrayContainer             {                 Data = new byte?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableByteArrayContainer             {                 Data = new byte?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableByteArrayContainer             {                 Data = new byte?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableByteArrayContainer             {                 Data = new byte?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableByteArrayContainer             {                 Data = new byte?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Byte Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableInt32ArrayContainer             {                 Data = new int?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableInt32ArrayContainer             {                 Data = new int?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableInt32ArrayContainer             {                 Data = new int?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableInt32ArrayContainer             {                 Data = new int?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableInt32ArrayContainer             {                 Data = new int?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableInt32ArrayContainer             {                 Data = new int?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Int32 Array");
Magic Number,XSerializer.Tests,PrimitiveArrayTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\PrimitiveArrayTests.cs,GetTestCases,The following statement contains a magic number: yield return new TestCaseData(new NullableInt32ArrayContainer             {                 Data = new int?[] { 0' 1' 2' 4' 8' 16' 32' 64' 128' null }             }).SetName("Nullable Int32 Array");
Magic Number,XSerializer.Tests,ReadOnlyCollectionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ReadOnlyCollectionTests.cs,GetReadOnlyCollection,The following statement contains a magic number: return new ReadOnlyCollection<int>(new [] { 1' 2' 3 });
Magic Number,XSerializer.Tests,ReadOnlyCollectionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ReadOnlyCollectionTests.cs,GetReadOnlyCollection,The following statement contains a magic number: return new ReadOnlyCollection<int>(new [] { 1' 2' 3 });
Magic Number,XSerializer.Tests,ReadOnlyCollectionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ReadOnlyCollectionTests.cs,GetReadOnlyDictionary,The following statement contains a magic number: return new ReadOnlyDictionary<int' int>(new Dictionary<int' int>{{1'1}' {2'2}' {3'3}});
Magic Number,XSerializer.Tests,ReadOnlyCollectionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ReadOnlyCollectionTests.cs,GetReadOnlyDictionary,The following statement contains a magic number: return new ReadOnlyDictionary<int' int>(new Dictionary<int' int>{{1'1}' {2'2}' {3'3}});
Magic Number,XSerializer.Tests,ReadOnlyCollectionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ReadOnlyCollectionTests.cs,GetReadOnlyDictionary,The following statement contains a magic number: return new ReadOnlyDictionary<int' int>(new Dictionary<int' int>{{1'1}' {2'2}' {3'3}});
Magic Number,XSerializer.Tests,ReadOnlyCollectionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\ReadOnlyCollectionTests.cs,GetReadOnlyDictionary,The following statement contains a magic number: return new ReadOnlyDictionary<int' int>(new Dictionary<int' int>{{1'1}' {2'2}' {3'3}});
Magic Number,XSerializer.Tests,RedactAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactAttributeTests.cs,DateTimeRedactsToRedactedRoundTripRepresentation,The following statement contains a magic number: var dateTime = new DateTime(2013' 5' 3' 20' 8' 55' DateTimeKind.Utc);
Magic Number,XSerializer.Tests,RedactAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactAttributeTests.cs,DateTimeRedactsToRedactedRoundTripRepresentation,The following statement contains a magic number: var dateTime = new DateTime(2013' 5' 3' 20' 8' 55' DateTimeKind.Utc);
Magic Number,XSerializer.Tests,RedactAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactAttributeTests.cs,DateTimeRedactsToRedactedRoundTripRepresentation,The following statement contains a magic number: var dateTime = new DateTime(2013' 5' 3' 20' 8' 55' DateTimeKind.Utc);
Magic Number,XSerializer.Tests,RedactAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactAttributeTests.cs,DateTimeRedactsToRedactedRoundTripRepresentation,The following statement contains a magic number: var dateTime = new DateTime(2013' 5' 3' 20' 8' 55' DateTimeKind.Utc);
Magic Number,XSerializer.Tests,RedactAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactAttributeTests.cs,DateTimeRedactsToRedactedRoundTripRepresentation,The following statement contains a magic number: var dateTime = new DateTime(2013' 5' 3' 20' 8' 55' DateTimeKind.Utc);
Magic Number,XSerializer.Tests,RedactAttributeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactAttributeTests.cs,DateTimeRedactsToRedactedRoundTripRepresentation,The following statement contains a magic number: var dateTime = new DateTime(2013' 5' 3' 20' 8' 55' DateTimeKind.Utc);
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedNullableIntAttributeDeserializesCorrectly,The following statement contains a magic number: Assert.That(instance.Data.NullableIntAttributeProperty' Is.EqualTo(11111));
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedIntAttributeDeserializesCorrectly,The following statement contains a magic number: Assert.That(instance.Data.IntAttributeProperty' Is.EqualTo(11111));
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedNullableDoubleAttributeDeserializesCorrectly,The following statement contains a magic number: Assert.That(instance.Data.NullableDoubleAttributeProperty' Is.EqualTo(11111));
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactedDoubleAttributeDeserializesCorrectly,The following statement contains a magic number: Assert.That(instance.Data.DoubleAttributeProperty' Is.EqualTo(11111));
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlAttributes,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlAttributes.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var container = new RedactTestClassForXmlAttributeContainer             {                 Data = new RedactTestClassForXmlAttribute                 {                     BoolAttributeProperty = true'                     DateTimeAttributeProperty = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc)'                     DoubleAttributeProperty = 123.45'                     EnumAttributeProperty = RedactEnumForXmlAttribute.Second'                     IntAttributeProperty = 12345'                     NullableBoolAttributeProperty = false'                     NullableDateTimeAttributeProperty = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc)'                     NullableDoubleAttributeProperty = 987.65'                     NullableEnumAttributeProperty = RedactEnumForXmlAttribute.Third'                     NullableIntAttributeProperty = 98765'                     StringAttributeProperty = "abc123"                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,DictionaryElementIsRedacted,The following statement contains a magic number: var instance = new RedactTestClassForXmlElement             {                 Map = new Dictionary<int' string>                 {                     { 1' "1abc" }'                     { 2' "d2ef" }'                     { 3' "gh3i" }'                     { 4' "jkl4" }'                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,DictionaryElementIsRedacted,The following statement contains a magic number: var instance = new RedactTestClassForXmlElement             {                 Map = new Dictionary<int' string>                 {                     { 1' "1abc" }'                     { 2' "d2ef" }'                     { 3' "gh3i" }'                     { 4' "jkl4" }'                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,DictionaryElementIsRedacted,The following statement contains a magic number: var instance = new RedactTestClassForXmlElement             {                 Map = new Dictionary<int' string>                 {                     { 1' "1abc" }'                     { 2' "d2ef" }'                     { 3' "gh3i" }'                     { 4' "jkl4" }'                 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,ListElementIsRedacted,The following statement contains a magic number: var instance = new RedactTestClassForXmlElement             {                 List = new List<double> { 1.2' 34.56' 789.012 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,ListElementIsRedacted,The following statement contains a magic number: var instance = new RedactTestClassForXmlElement             {                 List = new List<double> { 1.2' 34.56' 789.012 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,ListElementIsRedacted,The following statement contains a magic number: var instance = new RedactTestClassForXmlElement             {                 List = new List<double> { 1.2' 34.56' 789.012 }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,DynamicElementIsRedacted,The following statement contains a magic number: var instance = new RedactTestClassForXmlElement             {                 Dynamic = new { Foo = 123' Bar = DateTime.UtcNow' Baz = new { Quirble = -123.456 } }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlElements,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlElements.cs,DynamicElementIsRedacted,The following statement contains a magic number: var instance = new RedactTestClassForXmlElement             {                 Dynamic = new { Foo = 123' Bar = DateTime.UtcNow' Baz = new { Quirble = -123.456 } }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableIntAttributeDeserializesCorrectly,The following statement contains a magic number: Assert.That(instance.NullableIntTextProperty.Value' Is.EqualTo(11111));
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedIntAttributeDeserializesCorrectly,The following statement contains a magic number: Assert.That(instance.IntTextProperty.Value' Is.EqualTo(11111));
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedNullableDoubleAttributeDeserializesCorrectly,The following statement contains a magic number: Assert.That(instance.NullableDoubleTextProperty.Value' Is.EqualTo(11111));
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactedDoubleAttributeDeserializesCorrectly,The following statement contains a magic number: Assert.That(instance.DoubleTextProperty.Value' Is.EqualTo(11111));
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,RedactTestsForXmlText,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\RedactTestsForXmlText.cs,RedactingDoesNotHappenWhenDisabled,The following statement contains a magic number: var instance = new RedactTestClassForXmlText             {                 BoolTextProperty = new BoolText { Value = true }'                 DateTimeTextProperty = new DateTimeText { Value = new DateTime(2222' 2' 22' 22' 22' 22' 222' DateTimeKind.Utc) }'                 DoubleTextProperty = new DoubleText { Value = 123.45 }'                 EnumTextProperty = new RedactEnumText { Value = RedactEnumForXmlText.Second }'                 IntTextProperty = new IntText { Value = 12345 }'                 NullableBoolTextProperty = new NullableBoolText { Value = false }'                 NullableDateTimeTextProperty = new NullableDateTimeText { Value = new DateTime(3333' 3' 30' 3' 33' 33' 333' DateTimeKind.Utc) }'                 NullableDoubleTextProperty = new NullableDoubleText { Value = 987.65 }'                 NullableEnumTextProperty = new NullableRedactEnumText { Value = RedactEnumForXmlText.Third }'                 NullableIntTextProperty = new NullableIntText { Value = 98765 }'                 StringTextProperty = new StringText { Value = "abc123" }             };
Magic Number,XSerializer.Tests,TimeSpanTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\TimeSpanTests.cs,TimeSpanValuesRoundTripCorrectly,The following statement contains a magic number: var foo = new Foo             {                 Bar = TimeSpan.FromSeconds(1)'                 Baz = TimeSpan.FromSeconds(2)             };
Magic Number,XSerializer.Tests,TimeSpanTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\TimeSpanTests.cs,TimeSpanValuesRoundTripCorrectlyForJson,The following statement contains a magic number: var foo = new Foo             {                 Bar = TimeSpan.FromSeconds(1)'                 Baz = TimeSpan.FromSeconds(2)             };
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = (byte)123 }' typeof(Foo)).SetName("byte");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = (sbyte)123 }' typeof(Foo)).SetName("sbyte");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = (short)123 }' typeof(Foo)).SetName("short");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = (ushort)123 }' typeof(Foo)).SetName("ushort");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = (int)123 }' typeof(Foo)).SetName("int");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = (uint)123 }' typeof(Foo)).SetName("uint");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = (long)123 }' typeof(Foo)).SetName("long");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = (ulong)123 }' typeof(Foo)).SetName("ulong");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = 123.45F }' typeof(Foo)).SetName("float");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = 123.45 }' typeof(Foo)).SetName("double");
Magic Number,XSerializer.Tests,XsdTypeTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\XsdTypeTests.cs,GetTestCaseData,The following statement contains a magic number: yield return new TestCaseData(new Foo { Bar = 123.45M }' typeof(Foo)).SetName("decimal");
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,CanEncryptAndDecryptEntireRootObjectViaOptions,The following statement contains a magic number: var instance = new UnencryptedThing             {                 Foo = 123'                 Bar = true             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,CanEncryptAndDecryptEntireRootObjectViaEncryptAttribute,The following statement contains a magic number: var instance = new EncryptedThing             {                 Foo = 123'                 Bar = true             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsPropertyWhenTheClassOfThePropertyTypeIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<EncryptedThing>             {                 Item = new EncryptedThing                 {                     Foo = 123'                     Bar = true                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericListPropertyWhenTheListGenericArgumentClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<List<EncryptedThing>>             {                 Item = new List<EncryptedThing>                 {                     new EncryptedThing                     {                         Foo = 123'                         Bar = true                     }'                     new EncryptedThing                     {                         Foo = 789'                         Bar = false                     }'                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericListPropertyWhenTheListGenericArgumentClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<List<EncryptedThing>>             {                 Item = new List<EncryptedThing>                 {                     new EncryptedThing                     {                         Foo = 123'                         Bar = true                     }'                     new EncryptedThing                     {                         Foo = 789'                         Bar = false                     }'                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericListPropertyWhenTheListGenericArgumentClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: Assert.That(roundTrip.Item.Count' Is.EqualTo(2));
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<Dictionary<EncryptedThing' int>>             {                 Item = new Dictionary<EncryptedThing' int>                 {                     {                         new EncryptedThing                         {                             Foo = 123'                             Bar = true                         }'                         1                     }'                     {                         new EncryptedThing                         {                             Foo = 789'                             Bar = false                         }'                         2                     }'                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<Dictionary<EncryptedThing' int>>             {                 Item = new Dictionary<EncryptedThing' int>                 {                     {                         new EncryptedThing                         {                             Foo = 123'                             Bar = true                         }'                         1                     }'                     {                         new EncryptedThing                         {                             Foo = 789'                             Bar = false                         }'                         2                     }'                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<Dictionary<EncryptedThing' int>>             {                 Item = new Dictionary<EncryptedThing' int>                 {                     {                         new EncryptedThing                         {                             Foo = 123'                             Bar = true                         }'                         1                     }'                     {                         new EncryptedThing                         {                             Foo = 789'                             Bar = false                         }'                         2                     }'                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var key = new EncryptedThing { Foo = 123' Bar = true };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheKeyClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: key = new EncryptedThing { Foo = 789' Bar = false };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<Dictionary<int' EncryptedThing>>             {                 Item = new Dictionary<int' EncryptedThing>                 {                     {                         1'                         new EncryptedThing                         {                             Foo = 123'                             Bar = true                         }                     }'                     {                         2'                         new EncryptedThing                         {                             Foo = 789'                             Bar = false                         }                     }'                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<Dictionary<int' EncryptedThing>>             {                 Item = new Dictionary<int' EncryptedThing>                 {                     {                         1'                         new EncryptedThing                         {                             Foo = 123'                             Bar = true                         }                     }'                     {                         2'                         new EncryptedThing                         {                             Foo = 789'                             Bar = false                         }                     }'                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: var instance = new Container<Dictionary<int' EncryptedThing>>             {                 Item = new Dictionary<int' EncryptedThing>                 {                     {                         1'                         new EncryptedThing                         {                             Foo = 123'                             Bar = true                         }                     }'                     {                         2'                         new EncryptedThing                         {                             Foo = 789'                             Bar = false                         }                     }'                 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: Assert.That(roundTrip.Item[2]' Is.EqualTo(instance.Item[2]));
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,EncryptsAndDecryptsGenericDictionaryPropertyWhenTheValueClassIsDecoratedWithEncryptAttribute,The following statement contains a magic number: Assert.That(roundTrip.Item[2]' Is.EqualTo(instance.Item[2]));
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,AListPropertyDecoratedWithXmlElementAndEncryptCanExistWithOtherXmlAttributeProperties,The following statement contains a magic number: var instance = new Valid             {                 CleartextAttribute = 123'                 CiphertextAttribute = 789'                 Items = new List<int> { 4' 5' 6 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,AListPropertyDecoratedWithXmlElementAndEncryptCanExistWithOtherXmlAttributeProperties,The following statement contains a magic number: var instance = new Valid             {                 CleartextAttribute = 123'                 CiphertextAttribute = 789'                 Items = new List<int> { 4' 5' 6 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,AListPropertyDecoratedWithXmlElementAndEncryptCanExistWithOtherXmlAttributeProperties,The following statement contains a magic number: var instance = new Valid             {                 CleartextAttribute = 123'                 CiphertextAttribute = 789'                 Items = new List<int> { 4' 5' 6 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,AListPropertyDecoratedWithXmlElementAndEncryptCanExistWithOtherXmlAttributeProperties,The following statement contains a magic number: var instance = new Valid             {                 CleartextAttribute = 123'                 CiphertextAttribute = 789'                 Items = new List<int> { 4' 5' 6 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,AListPropertyDecoratedWithXmlElementAndEncryptCanExistWithOtherXmlAttributeProperties,The following statement contains a magic number: var instance = new Valid             {                 CleartextAttribute = 123'                 CiphertextAttribute = 789'                 Items = new List<int> { 4' 5' 6 }             };
Magic Number,XSerializer.Tests.Encryption,EncryptionTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetExampleExpandoObject,The following statement contains a magic number: d.Foo = 123;
Magic Number,XSerializer.Tests.Encryption,EncryptedThing,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: return (Foo * 397) ^ Bar.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,Bar,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: return (Baz * 397) ^ Qux.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,BarImmutable,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: return (Baz * 397) ^ Qux.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,Baz,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: return (Qux * 397) ^ Corge.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,BazImmutable,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: return (Qux * 397) ^ Corge.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,Foo,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Baz.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,Foo,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Qux;
Magic Number,XSerializer.Tests.Encryption,Foo,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Corge.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,FooImmutable,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Baz.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,FooImmutable,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Qux;
Magic Number,XSerializer.Tests.Encryption,FooImmutable,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Corge.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,Example,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Bar != null ? Bar.GetHashCode() : 0);
Magic Number,XSerializer.Tests.Encryption,Example,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\EncryptionTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Baz.GetHashCode();
Magic Number,XSerializer.Tests.Encryption,TheGetMethod,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\SerializationStateTests.cs,ReturnsTheSameObjectFromEachCallToTheGetMethod,The following statement contains a magic number: var foo1 = state.Get(() => new Foo(2));
Magic Number,XSerializer.Tests.Encryption,TheGetMethod,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\SerializationStateTests.cs,ReturnsTheSameObjectFromEachCallToTheGetMethod,The following statement contains a magic number: var foo2 = state.Get(() => new Foo(2));
Magic Number,XSerializer.Tests.Encryption,TheGetMethod,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\SerializationStateTests.cs,ReturnsTheSameObjectFromEachCallToTheGetMethod,The following statement contains a magic number: var foo3 = state.Get(() => new Foo(2));
Magic Number,XSerializer.Tests.Encryption,WhenUsedInASerializationOperation,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\SerializationStateTests.cs,TheSameInstanceIsUsedForEachEncryptionOperationWithinASingleSerializationOperation,The following statement contains a magic number: Assert.That(counts.EncryptInvocationCount' Is.EqualTo(3));
Magic Number,XSerializer.Tests.Encryption,WhenUsedInASerializationOperation,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\SerializationStateTests.cs,TheSameInstanceIsUsedForEachEncryptionOperationWithinASingleSerializationOperation,The following statement contains a magic number: Assert.That(counts.DecryptInvocationCount' Is.EqualTo(3));
Magic Number,XSerializer.Tests.Encryption,PlaintextEncryptedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\PlaintextEncryptedPropertyTests.cs,CanJsonDeserializeEncryptedPropertyWithPlaintextOrCiphertextValue,The following statement contains a magic number: Assert.That(foo.Bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests.Encryption,PlaintextEncryptedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\PlaintextEncryptedPropertyTests.cs,CanJsonDeserializeEncryptedPropertyWithPlaintextOrCiphertextValue,The following statement contains a magic number: Assert.That(((JsonNumber)foo.Garply).DoubleValue' Is.EqualTo(123.45));
Magic Number,XSerializer.Tests.Encryption,PlaintextEncryptedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\PlaintextEncryptedPropertyTests.cs,CanJsonDeserializeEncryptedPropertyWithPlaintextOrCiphertextValue,The following statement contains a magic number: Assert.That(foo.Grault[0]' Is.EqualTo(456));
Magic Number,XSerializer.Tests.Encryption,PlaintextEncryptedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\PlaintextEncryptedPropertyTests.cs,CanXmlDeserializeEncryptedPropertyWithPlaintextOrCiphertextValue,The following statement contains a magic number: Assert.That(foo.Bar' Is.EqualTo(123));
Magic Number,XSerializer.Tests.Encryption,PlaintextEncryptedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\PlaintextEncryptedPropertyTests.cs,CanXmlDeserializeEncryptedPropertyWithPlaintextOrCiphertextValue,The following statement contains a magic number: Assert.That(foo.Garply' Is.EqualTo(123.45M));
Magic Number,XSerializer.Tests.Encryption,PlaintextEncryptedPropertyTests,C:\research\architectureSmells\repos\QuickenLoans_XSerializer\XSerializer.Tests\Encryption\PlaintextEncryptedPropertyTests.cs,CanXmlDeserializeEncryptedPropertyWithPlaintextOrCiphertextValue,The following statement contains a magic number: Assert.That(foo.Grault[0]' Is.EqualTo(456));
