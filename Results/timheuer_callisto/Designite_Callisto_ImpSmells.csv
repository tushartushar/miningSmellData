Implementation smell,Namespace,Class,File,Method,Description
Long Method,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The method has 122 lines of code.
Complex Method,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,Cyclomatic complexity of the method is 23
Complex Method,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,Cyclomatic complexity of the method is 13
Complex Method,Callisto.Controls,LiveTile,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\LiveTile\LiveTile.cs,UpdateNextItem,Cyclomatic complexity of the method is 9
Complex Method,Callisto.Controls,Menu,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Menu\Menu.cs,OnKeyDown,Cyclomatic complexity of the method is 8
Complex Method,Callisto.Controls,Rating,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\Rating.cs,OnKeyDown,Cyclomatic complexity of the method is 18
Complex Method,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,GetDayOfWeek,Cyclomatic complexity of the method is 8
Complex Method,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,Convert,Cyclomatic complexity of the method is 14
Complex Method,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ParseUrlQueryString,Cyclomatic complexity of the method is 12
Complex Method,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,QueryString,Cyclomatic complexity of the method is 11
Long Parameter List,Callisto.Controls,WrapPanel,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\WrapPanel\WrapPanel.cs,ArrangeLine,The method has 5 parameters. Parameters: lineStart' lineEnd' directDelta' indirectOffset' indirectGrowth
Long Parameter List,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,BeginTiltEffect,The method has 5 parameters. Parameters: element' touchPoint' centerPoint' centerDelta' pointer
Long Parameter List,Callisto.OAuth,OAuthTools,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\OAuth\OAuthHelper.cs,GetSignature,The method has 5 parameters. Parameters: signatureMethod' signatureTreatment' signatureBase' consumerSecret' tokenSecret
Long Identifier,Callisto.Controls.Common,InteractionHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Common\InteractionHelper.cs,,The length of the parameter SequentialClickThresholdInMilliseconds is 38.
Long Identifier,Callisto.Controls.Common,InteractionHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Common\InteractionHelper.cs,,The length of the parameter SequentialClickThresholdInPixelsSquared is 39.
Long Identifier,Callisto.Controls,CustomDialog,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\CustomDialog\CustomDialog.cs,,The length of the parameter BackButtonCommandParameterProperty is 34.
Long Identifier,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,,The length of the parameter ContentForegroundBrushProperty is 30.
Long Identifier,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,,The length of the parameter ContentBackgroundBrushProperty is 30.
Long Statement,Callisto.Controls.Common,AppManifestHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Common\AppManifestHelper.cs,GetManifestVisualElementsAsync,The length of the statement  "            using (Stream manifestStream = await Windows.ApplicationModel.Package.Current.InstalledLocation.OpenStreamForReadAsync("AppxManifest.xml")) " is 139.
Long Statement,Callisto.Controls.Common,AppManifestHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Common\AppManifestHelper.cs,GetManifestVisualElementsAsync,The length of the statement  "            if (visualElementNode == null) throw new ArgumentNullException("Could not parse the VisualElements from the app manifest."); " is 124.
Long Statement,Callisto.Controls.Common,InteractionHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Common\InteractionHelper.cs,UpdateVisualStateBase,The length of the statement  "                VisualStates.GoToState(Control' useTransitions' VisualStates.StatePointerPressed' VisualStates.StatePointerOver' VisualStates.StateNormal); " is 139.
Long Statement,Callisto.Controls,DynamicTextBlock,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\DynamicTextBlock\DynamicTextBlock.cs,MeasureOverride,The length of the statement  "            Size unboundSize = wrapping ? new Size(availableSize.Width' double.PositiveInfinity) : new Size(double.PositiveInfinity' availableSize.Height); " is 143.
Long Statement,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The length of the statement  "                    pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) }; " is 264.
Long Statement,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The length of the statement  "                    pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) }; " is 265.
Long Statement,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The length of the statement  "                    pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) }; " is 244.
Long Statement,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The length of the statement  "                    pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) }; " is 249.
Long Statement,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The length of the statement  "            x = pointArray[0].X; // TODO: taking this solves my horizontal nudging' but is a hack...keeping it though until a better solution " is 129.
Long Statement,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The length of the statement  "                else if (((placement == PlacementMode.Top) || (placement == PlacementMode.Bottom)) && (((x != target[0].X) && (x != target[1].X)) && (((x + width) != target[0].X) && ((x + width) != target[1].X)))) " is 197.
Long Statement,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,The length of the statement  "            var calcH = this.CalculateHorizontalCenterOffset(x' ((FrameworkElement)_hostPopup.Child).ActualWidth' element.ActualWidth); " is 123.
Long Statement,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,The length of the statement  "            var calcY = this.CalculateVerticalCenterOffset(y' ((FrameworkElement)_hostPopup.Child).ActualHeight' element.ActualHeight); " is 123.
Long Statement,Callisto.Controls,LiveTile,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\LiveTile\LiveTile.cs,UpdateNextItem,The length of the statement  "				anim.EasingFunction = new Windows.UI.Xaml.Media.Animation.CubicEase() { EasingMode = Windows.UI.Xaml.Media.Animation.EasingMode.EaseOut }; " is 138.
Long Statement,Callisto.Controls,Rating,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\Rating.cs,PrepareContainerForItemOverride,The length of the statement  "            ratingItem.SetBinding(Control.ForegroundProperty' new Binding() {Path = new PropertyPath("Foreground")' Source = this}); " is 120.
Long Statement,Callisto.Controls,Rating,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\Rating.cs,PrepareContainerForItemOverride,The length of the statement  "            ratingItem.SetBinding(RatingItem.PointerOverFillProperty' new Binding() { Path = new PropertyPath("PointerOverFill")' Source = this }); " is 135.
Long Statement,Callisto.Controls,Rating,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\Rating.cs,PrepareContainerForItemOverride,The length of the statement  "            ratingItem.SetBinding(RatingItem.PointerPressedFillProperty' new Binding() { Path = new PropertyPath("PointerPressedFill")' Source = this }); " is 141.
Long Statement,Callisto.Controls,Rating,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\Rating.cs,PrepareContainerForItemOverride,The length of the statement  "            ratingItem.SetBinding(RatingItem.FontSizeProperty' new Binding() { Path = new PropertyPath("FontSize")' Source = this }); " is 121.
Long Statement,Callisto.Controls,Rating,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\Rating.cs,PrepareContainerForItemOverride,The length of the statement  "            ratingItem.SetBinding(RatingItem.BackgroundProperty' new Binding() { Path = new PropertyPath("Background")' Source = this }); " is 125.
Long Statement,Callisto.Controls,Rating,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\Rating.cs,PrepareContainerForItemOverride,The length of the statement  "            ratingItem.SetBinding(RatingItem.ReadOnlyFillProperty' new Binding() { Path = new PropertyPath("ReadOnlyFill")' Source = this }); " is 129.
Long Statement,Callisto.Controls,RatingItem,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\RatingItem.cs,OnDisplayValueChanged,The length of the statement  "                throw new InvalidOperationException(string.Format("Invalid attempt to change read-only property '{0}.'"' "DisplayValue")); " is 122.
Long Statement,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,OnApplyTemplate,The length of the statement  "                                                     FromHorizontalOffset = (SettingsPane.Edge == SettingsEdgeLocation.Right) ? CONTENT_HORIZONTAL_OFFSET : (CONTENT_HORIZONTAL_OFFSET * -1) " is 135.
Long Statement,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,OnLoaded,The length of the statement  "            _hostPopup.SetValue(Canvas.LeftProperty' SettingsPane.Edge == SettingsEdgeLocation.Right ? (_windowBounds.Width - _settingsWidth) : 0); " is 135.
Long Statement,Callisto.Converters,ColorBrightnessConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\ColorBrightnessConverter.cs,Convert,The length of the statement  "            var newColor = new Color() { A = brush.Color.A' B = System.Convert.ToByte(brush.Color.B * factor' CultureInfo.InvariantCulture)' G = System.Convert.ToByte(brush.Color.G * factor' CultureInfo.InvariantCulture)' R = System.Convert.ToByte(brush.Color.R * factor' CultureInfo.InvariantCulture) }; " is 292.
Long Statement,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,TryStartTiltEffect,The length of the statement  "			Point tiltTouchPoint = e.GetCurrentPoint(element).Position; // container.TransformToVisual(element).TransformPoint(e.GetCurrentPoint(element)); " is 143.
Long Statement,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,PrepareControlForTilt,The length of the statement  "			if (element.Projection != null || (element.RenderTransform != null && element.RenderTransform.GetType() != typeof(MatrixTransform))) " is 132.
Long Statement,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,HashWith,The length of the statement  "            IBuffer hash = CryptographicEngine.Sign(cryptoKey' CryptographicBuffer.ConvertStringToBinary(input' BinaryStringEncoding.Utf8)); " is 128.
Long Statement,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,FromName,The length of the statement  "            if (colorProperty == null) throw new ArgumentException("This is not a known color name.  Use a proper hex color number."); " is 122.
Complex Conditional,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The conditional expression  "((y != target[0].Y) && (y != target[1].Y)) && (((y + height) != target[0].Y) && ((y + height) != target[1].Y))"  is complex.
Complex Conditional,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The conditional expression  "((placement == PlacementMode.Top) || (placement == PlacementMode.Bottom)) && (((x != target[0].X) && (x != target[1].X)) && (((x + width) != target[0].X) && ((x + width) != target[1].X)))"  is complex.
Complex Conditional,Callisto.Controls,Menu,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Menu\Menu.cs,ChangeFocusedItem,The conditional expression  "focusedElement != null && ((focusedElement == _itemContainerList || focusedElement == this) && _items.Count > 0)"  is complex.
Complex Conditional,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,GetPluralTimeUnits,The conditional expression  "(modTen >= 2 && modTen <= 4) && !(modHundred >= 12 && modHundred <= 14)"  is complex.
Virtual Method Call from Constructor,Callisto.Controls.Primitives,Clipper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Common\Clipper.cs,Clipper,The constructor "Clipper" calls a virtual method "ClipContent".
Magic Number,Callisto.Controls,DropDownButton,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\DropDownButton\DropDownButton.cs,EvaluateArrowGlyph,The following statement contains a magic number: FontSize <= 12
Magic Number,Callisto.Controls,DropDownButton,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\DropDownButton\DropDownButton.cs,EvaluateArrowGlyph,The following statement contains a magic number: FontSize >= 13.333 && FontSize < 21.333
Magic Number,Callisto.Controls,DropDownButton,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\DropDownButton\DropDownButton.cs,EvaluateArrowGlyph,The following statement contains a magic number: FontSize >= 13.333 && FontSize < 21.333
Magic Number,Callisto.Controls,DropDownButton,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\DropDownButton\DropDownButton.cs,EvaluateArrowGlyph,The following statement contains a magic number: FontSize >= 21.333 && FontSize < 40
Magic Number,Callisto.Controls,DropDownButton,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\DropDownButton\DropDownButton.cs,EvaluateArrowGlyph,The following statement contains a magic number: FontSize >= 21.333 && FontSize < 40
Magic Number,Callisto.Controls,DropDownButton,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\DropDownButton\DropDownButton.cs,EvaluateArrowGlyph,The following statement contains a magic number: FontSize > 40
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: switch (placement)              {                  case PlacementMode.Bottom:                      pointArray = new Point[] { new Point(target[2].X' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point((target[3].X - width) + 1.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0)))' new Point(0.0' Math.Max((double)0.0' (double)(target[2].Y + 1.0))) };                      break;                    case PlacementMode.Right:                      pointArray = new Point[] { new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' target[1].Y)' new Point(Math.Max((double)0.0' (double)(target[3].X + 1.0))' (target[3].Y - height) + 1.0)' new Point(Math.Max((double)0.0' (double)(target[1].X + 1.0))' 0.0) };                      break;                    case PlacementMode.Left:                      pointArray = new Point[] { new Point(Math.Min(window.Width' target[0].X) - width' target[1].Y)' new Point(Math.Min(window.Width' target[2].X) - width' (target[3].Y - height) + 1.0)' new Point(Math.Min(window.Width' target[0].X) - width' 0.0) };                      break;                    case PlacementMode.Top:                      pointArray = new Point[] { new Point(target[0].X' Math.Min(target[0].Y' window.Height) - height)' new Point((target[1].X - width) + 1.0' Math.Min(target[0].Y' window.Height) - height)' new Point(0.0' Math.Min(target[0].Y' window.Height) - height) };                      break;                    default:                      pointArray = new Point[] { new Point(0.0' 0.0) };                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PlacePopup,The following statement contains a magic number: double num18 = bounds.Top + (bounds.Height / 2.0);
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,GetTransformedPoints,The following statement contains a magic number: Point[] pointArray = new Point[4];
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,GetTransformedPoints,The following statement contains a magic number: pointArray[2] = gt.TransformPoint(new Point(0.0' element.ActualHeight));
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,GetTransformedPoints,The following statement contains a magic number: pointArray[3] = gt.TransformPoint(new Point(element.ActualWidth' element.ActualHeight));
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,The following statement contains a magic number: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,The following statement contains a magic number: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,The following statement contains a magic number: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,The following statement contains a magic number: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,CalculateHorizontalCenterOffset,The following statement contains a magic number: newX = this.HorizontalOffset + initialOffset - ((flyoutWidth / 2) - (elementWidth / 2));
Magic Number,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,CalculateHorizontalCenterOffset,The following statement contains a magic number: newX = this.HorizontalOffset + initialOffset - ((flyoutWidth / 2) - (elementWidth / 2));
Magic Number,Callisto.Controls,LiveTile,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\LiveTile\LiveTile.cs,EpisodeFlipControl_SizeChanged,The following statement contains a magic number: _scroller.Height = e.NewSize.Height * 2;
Magic Number,Callisto.Controls,LiveTile,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\LiveTile\LiveTile.cs,timer_Tick,The following statement contains a magic number: _timer.Interval = TimeSpan.FromSeconds(_randomizer.Next(5) + 5);
Magic Number,Callisto.Controls,LiveTile,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\LiveTile\LiveTile.cs,timer_Tick,The following statement contains a magic number: _timer.Interval = TimeSpan.FromSeconds(_randomizer.Next(5) + 5);
Magic Number,Callisto.Controls,LiveTile,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\LiveTile\LiveTile.cs,UpdateNextItem,The following statement contains a magic number: anim.Duration = new Duration(TimeSpan.FromMilliseconds(500));
Magic Number,Callisto.Controls,LiveTile,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\LiveTile\LiveTile.cs,Start,The following statement contains a magic number: _timer.Interval = TimeSpan.FromSeconds(_randomizer.Next(5) + 5);
Magic Number,Callisto.Controls,LiveTile,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\LiveTile\LiveTile.cs,Start,The following statement contains a magic number: _timer.Interval = TimeSpan.FromSeconds(_randomizer.Next(5) + 5);
Magic Number,Callisto.Controls,NumericUpDown,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\NumericUpDown\NumericUpDown.cs,EnsureValidDecimalPlacesValue,The following statement contains a magic number: decimalPlaces < 0 || decimalPlaces > 15
Magic Number,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: var yiq = ((newBrush.Color.R*299) + (newBrush.Color.G*587) + (newBrush.Color.B*114)) / 1000;
Magic Number,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: var yiq = ((newBrush.Color.R*299) + (newBrush.Color.G*587) + (newBrush.Color.B*114)) / 1000;
Magic Number,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: var yiq = ((newBrush.Color.R*299) + (newBrush.Color.G*587) + (newBrush.Color.B*114)) / 1000;
Magic Number,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: var yiq = ((newBrush.Color.R*299) + (newBrush.Color.G*587) + (newBrush.Color.B*114)) / 1000;
Magic Number,Callisto.Controls,SettingsFlyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Settings\SettingsFlyout.cs,OnHeaderBrushColorChanged,The following statement contains a magic number: Debug.WriteLine(yiq >= 128 ? "HeaderText: black" : "HeaderText: white");
Magic Number,Callisto.Converters,ColorContrastConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\ColorContrastConverter.cs,Convert,The following statement contains a magic number: var yiq = ((brush.Color.R * 299) + (brush.Color.G * 587) + (brush.Color.B * 114)) / 1000;
Magic Number,Callisto.Converters,ColorContrastConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\ColorContrastConverter.cs,Convert,The following statement contains a magic number: var yiq = ((brush.Color.R * 299) + (brush.Color.G * 587) + (brush.Color.B * 114)) / 1000;
Magic Number,Callisto.Converters,ColorContrastConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\ColorContrastConverter.cs,Convert,The following statement contains a magic number: var yiq = ((brush.Color.R * 299) + (brush.Color.G * 587) + (brush.Color.B * 114)) / 1000;
Magic Number,Callisto.Converters,ColorContrastConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\ColorContrastConverter.cs,Convert,The following statement contains a magic number: var yiq = ((brush.Color.R * 299) + (brush.Color.G * 587) + (brush.Color.B * 114)) / 1000;
Magic Number,Callisto.Converters,ColorContrastConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\ColorContrastConverter.cs,Convert,The following statement contains a magic number: contrastColor = invert                                  ? ((yiq >= 128) ? Colors.White : Colors.Black)                                  : ((yiq >= 128) ? Colors.Black : Colors.White);
Magic Number,Callisto.Converters,ColorContrastConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\ColorContrastConverter.cs,Convert,The following statement contains a magic number: contrastColor = invert                                  ? ((yiq >= 128) ? Colors.White : Colors.Black)                                  : ((yiq >= 128) ? Colors.Black : Colors.White);
Magic Number,Callisto.Converters,DateTimeFormatHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\DateTimeFormatHelper.cs,GetRelativeDayOfWeek,The following statement contains a magic number: return ((int)dt.DayOfWeek - (int)CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek + 7) % 7;
Magic Number,Callisto.Converters,DateTimeFormatHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\DateTimeFormatHelper.cs,GetRelativeDayOfWeek,The following statement contains a magic number: return ((int)dt.DayOfWeek - (int)CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek + 7) % 7;
Magic Number,Callisto.Converters,DateTimeFormatHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\DateTimeFormatHelper.cs,IsAtLeastOneWeekOld,The following statement contains a magic number: return ((int)(relative - given).TotalMinutes >= 7 * Day);
Magic Number,Callisto.Converters,DateTimeFormatHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\DateTimeFormatHelper.cs,IsPastDayOfWeekWithWindow,The following statement contains a magic number: return IsPastDayOfWeek(relative' given) && ((int)(relative - given).TotalMinutes > 3 * Hour);
Magic Number,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,SetLocalizationCulture,The following statement contains a magic number: PluralHourStrings = new string[4] {                     TimeResources.GetString("XHoursAgo_2To4")'                     TimeResources.GetString("XHoursAgo_EndsIn1Not11")'                     TimeResources.GetString("XHoursAgo_EndsIn2To4Not12To14")'                     TimeResources.GetString("XHoursAgo_Other")                 };
Magic Number,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,SetLocalizationCulture,The following statement contains a magic number: PluralMinuteStrings = new string[4] {                     TimeResources.GetString("XMinutesAgo_2To4")'                     TimeResources.GetString("XMinutesAgo_EndsIn1Not11")'                     TimeResources.GetString("XMinutesAgo_EndsIn2To4Not12To14")'                     TimeResources.GetString("XMinutesAgo_Other")                };
Magic Number,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,SetLocalizationCulture,The following statement contains a magic number: PluralSecondStrings = new string[4] {                     TimeResources.GetString("XSecondsAgo_2To4")'                     TimeResources.GetString("XSecondsAgo_EndsIn1Not11")'                     TimeResources.GetString("XSecondsAgo_EndsIn2To4Not12To14")'                     TimeResources.GetString("XSecondsAgo_Other")                 };
Magic Number,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,GetPluralMonth,The following statement contains a magic number: month >= 2 && month <= 4
Magic Number,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,GetPluralMonth,The following statement contains a magic number: month >= 2 && month <= 4
Magic Number,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,GetPluralTimeUnits,The following statement contains a magic number: int modTen = units % 10;
Magic Number,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,GetPluralTimeUnits,The following statement contains a magic number: int modHundred = units % 100;
Magic Number,Callisto.Converters,RelativeTimeConverter,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Converters\RelativeTimeConverter.cs,Convert,The following statement contains a magic number: result = GetPluralTimeUnits(2' PluralSecondStrings);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,TryStartTiltEffect,The following statement contains a magic number: Point elementCenter = new Point(element.ActualWidth / 2' element.ActualHeight / 2);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,TryStartTiltEffect,The following statement contains a magic number: Point elementCenter = new Point(element.ActualWidth / 2' element.ActualHeight / 2);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,GetCenterToCenterDelta,The following statement contains a magic number: Point elementCenter = new Point(element.ActualWidth / 2' element.ActualHeight / 2);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,GetCenterToCenterDelta,The following statement contains a magic number: Point elementCenter = new Point(element.ActualWidth / 2' element.ActualHeight / 2);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,GetCenterToCenterDelta,The following statement contains a magic number: Point containerCenter = new Point(container.ActualWidth / 2' container.ActualHeight / 2);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,GetCenterToCenterDelta,The following statement contains a magic number: Point containerCenter = new Point(container.ActualWidth / 2' container.ActualHeight / 2);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,ApplyTiltEffect,The following statement contains a magic number: Point normalizedPoint = new Point(  				Math.Min(Math.Max(touchPoint.X / (centerPoint.X * 2)' 0)' 1)'  				Math.Min(Math.Max(touchPoint.Y / (centerPoint.Y * 2)' 0)' 1));
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,ApplyTiltEffect,The following statement contains a magic number: Point normalizedPoint = new Point(  				Math.Min(Math.Max(touchPoint.X / (centerPoint.X * 2)' 0)' 1)'  				Math.Min(Math.Max(touchPoint.Y / (centerPoint.Y * 2)' 0)' 1));
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,ApplyTiltEffect,The following statement contains a magic number: double xMagnitude = Math.Abs(normalizedPoint.X - 0.5);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,ApplyTiltEffect,The following statement contains a magic number: double yMagnitude = Math.Abs(normalizedPoint.Y - 0.5);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,ApplyTiltEffect,The following statement contains a magic number: double xDirection = -Math.Sign(normalizedPoint.X - 0.5);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,ApplyTiltEffect,The following statement contains a magic number: double yDirection = Math.Sign(normalizedPoint.Y - 0.5);
Magic Number,Callisto.Effects,Tilt,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Effects\TiltEffect.cs,ApplyTiltEffect,The following statement contains a magic number: double angle = angleMagnitude * MaxAngle * 180 / Math.PI;
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,FromUnixTime,The following statement contains a magic number: var time = new DateTime(1970' 1' 1);
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToUnixTime,The following statement contains a magic number: var timeSpan = (dateTime - new DateTime(1970' 1' 1));
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,PercentEncode,The following statement contains a magic number: (b > 7 && b < 11) || b == 13
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,PercentEncode,The following statement contains a magic number: (b > 7 && b < 11) || b == 13
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,PercentEncode,The following statement contains a magic number: (b > 7 && b < 11) || b == 13
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: hexValue.Length < 6
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: byte a = 255;
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: byte r = 255;
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: byte g = 255;
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: byte b = 255;
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: a = byte.Parse(hexValue.Substring(0' 2)' NumberStyles.HexNumber);
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: startPosition = 2;
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: hexValue.Length == 8
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: r = byte.Parse(hexValue.Substring(startPosition' 2)' NumberStyles.HexNumber);
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: g = byte.Parse(hexValue.Substring(startPosition + 2' 2)' NumberStyles.HexNumber);
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: g = byte.Parse(hexValue.Substring(startPosition + 2' 2)' NumberStyles.HexNumber);
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: b = byte.Parse(hexValue.Substring(startPosition + 4' 2)' NumberStyles.HexNumber);
Magic Number,Callisto,Extensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\Extensions.cs,ToColor,The following statement contains a magic number: b = byte.Parse(hexValue.Substring(startPosition + 4' 2)' NumberStyles.HexNumber);
Magic Number,Callisto,NumericExtensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\NumericExtensions.cs,AreClose,The following statement contains a magic number: double a = (Math.Abs(left) + Math.Abs(right) + 10.0) * 2.2204460492503131E-16;
Magic Number,Callisto,NumericExtensions,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Extensions\NumericExtensions.cs,AreClose,The following statement contains a magic number: double a = (Math.Abs(left) + Math.Abs(right) + 10.0) * 2.2204460492503131E-16;
Magic Number,Callisto.OAuth,OAuthTools,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\OAuth\OAuthHelper.cs,GetNonce,The following statement contains a magic number: var nonce = new char[16];
Magic Number,Callisto.OAuth,OAuthTools,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\OAuth\OAuthHelper.cs,ConstructRequestUrl,The following statement contains a magic number: var basic = url.Scheme == "http" && url.Port == 80;
Magic Number,Callisto.OAuth,OAuthTools,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\OAuth\OAuthHelper.cs,ConstructRequestUrl,The following statement contains a magic number: var secure = url.Scheme == "https" && url.Port == 443;
Magic Number,Callisto.Controls.SettingsManagement,SettingsCommandInfo<T>,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\SettingsManagement\SettingsCommandInfo.cs,SettingsCommandInfo,The following statement contains a magic number: LiteralWidth = 346;
Missing Default,Callisto.Controls.Common,InteractionHelper,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Common\InteractionHelper.cs,GetLogicalKey,The following switch statement is missing a default case: switch (originalKey)                  {                      case VirtualKey.Left:                          result = VirtualKey.Right;                          break;                      case VirtualKey.Right:                          result = VirtualKey.Left;                          break;                  }
Missing Default,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,The following switch statement is missing a default case: switch (placement)              {                  case PlacementMode.Bottom:                  case PlacementMode.Left:                  case PlacementMode.Right:                  case PlacementMode.Top:                      Point[] target = GetTransformedPoints(element' isRTL' element);                      Point[] menu = GetTransformedPoints((FrameworkElement)_hostPopup.Child' isRTL' element);                      if (menu[0].X > menu[1].X)                      {                          return;                      }                      Point p2 = PlacePopup(_windowBounds' target' menu' placement);                      x = p2.X;                      if (isRTL)                      {                          // TODO: Handle RTL - PerformPlacement                          //x = _windowBounds.Width - x;                          //this._hostPopup.VerticalOffset = y;                          //this._hostPopup.HorizontalOffset = x;                          //return;                      }                      y = p2.Y;                      break;                  case PlacementMode.Mouse:                      throw new NotImplementedException("Mouse PlacementMode is not implemented.");              }
Missing Default,Callisto.Controls,Flyout,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Flyout\Flyout.cs,PerformPlacement,The following switch statement is missing a default case: switch (this.Placement)              {                  case PlacementMode.Bottom:                      popin.FromVerticalOffset = -10;                      popin.FromHorizontalOffset = 0;                      break;                  case PlacementMode.Left:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = 10;                      break;                  case PlacementMode.Right:                      popin.FromVerticalOffset = 0;                      popin.FromHorizontalOffset = -10;                      break;                  case PlacementMode.Top:                      popin.FromVerticalOffset = 10;                      popin.FromHorizontalOffset = 0;                      break;              }
Missing Default,Callisto.Controls,NumericUpDown,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\NumericUpDown\NumericUpDown.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.Key)              {                  case Windows.System.VirtualKey.Up:                      DoIncrement();                      e.Handled = true;                      break;                  case Windows.System.VirtualKey.Down:                      DoDecrement();                      e.Handled = true;                      break;              }
Missing Default,Callisto.Controls,Rating,D:\research\architectureSmells\repos1\timheuer_callisto\src\Callisto\Controls\Rating\Rating.cs,OnKeyDown,The following switch statement is missing a default case: switch (invariantKey)              {                  case VirtualKey.Left:                      {                          RatingItem ratingItem = FocusManager.GetFocusedElement() as RatingItem;                            if (ratingItem != null)                          {                              ratingItem = GetRatingItemAtOffsetFrom(ratingItem' -1);                          }                          else                          {                              ratingItem = GetRatingItems().FirstOrDefault();                          }                          if (ratingItem != null)                          {                              if (ratingItem.Focus(FocusState.Keyboard))                              {                                  e.Handled = true;                              }                          }                      }                      break;                  case VirtualKey.Right:                      {                          RatingItem ratingItem = FocusManager.GetFocusedElement() as RatingItem;                            if (ratingItem != null)                          {                              ratingItem = GetRatingItemAtOffsetFrom(ratingItem' 1);                          }                          else                          {                              ratingItem = GetRatingItems().FirstOrDefault();                          }                          if (ratingItem != null)                          {                              if (ratingItem.Focus(FocusState.Keyboard))                              {                                  e.Handled = true;                              }                          }                      }                      break;                  case VirtualKey.Add:                      {                          if (this.IsEnabled)                          {                              RatingItem ratingItem = GetSelectedRatingItem();                              if (ratingItem != null)                              {                                  ratingItem = GetRatingItemAtOffsetFrom(ratingItem' 1);                              }                              else                              {                                  ratingItem = GetRatingItems().FirstOrDefault();                              }                              if (ratingItem != null)                              {                                  ratingItem.SelectValue();                                  e.Handled = true;                              }                          }                      }                      break;                  case VirtualKey.Subtract:                      {                          if (this.IsEnabled)                          {                              RatingItem ratingItem = GetSelectedRatingItem();                              if (ratingItem != null)                              {                                  ratingItem = GetRatingItemAtOffsetFrom(ratingItem' -1);                              }                              if (ratingItem != null)                              {                                  ratingItem.SelectValue();                                  e.Handled = true;                              }                          }                      }                      break;              }
