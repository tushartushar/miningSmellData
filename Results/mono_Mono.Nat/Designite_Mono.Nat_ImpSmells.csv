Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,PmpSearcher,Cyclomatic complexity of the method is 13
Long Parameter List,Mono.Nat,Mapping,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Mapping.cs,Mapping,The method has 5 parameters. Parameters: protocol' privatePort' publicPort' lifetime' description
Long Parameter List,Mono.Nat,NatDeviceExtensions,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\NatDeviceExtensions.cs,BeginGetSpecificMapping,The method has 5 parameters. Parameters: device' protocol' externalPort' callback' asyncState
Long Statement,Mono.Nat,Mapping,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Mapping.cs,ToString,The length of the statement  "			return string.Format ("Protocol: {0}' Public Port: {1}' Private Port: {2}' Description: {3}' Expiration: {4}' Lifetime: {5}"' " is 125.
Long Statement,Mono.Nat.Pmp,PortMappingMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Requests\PortMappingMessage.cs,Encode,The length of the statement  "				package.AddRange (BitConverter.GetBytes (IPAddress.HostToNetworkOrder (Mapping.Lifetime == 0 ? 7200 : Mapping.Lifetime))); " is 122.
Long Statement,Mono.Nat.Upnp,CreatePortMappingMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\Messages\Requests\CreatePortMappingMessage.cs,Encode,The length of the statement  "			WriteFullElement (writer' "NewPortMappingDescription"' string.IsNullOrEmpty (Mapping.Description) ? "Mono.Nat" : Mapping.Description); " is 134.
Long Statement,Mono.Nat.Upnp,UpnpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\Searchers\UpnpSearcher.cs,SearchAsync,The length of the statement  "			var buffer = gatewayAddress == null ? DiscoverDeviceMessage.EncodeSSDP () : DiscoverDeviceMessage.EncodeUnicast (gatewayAddress); " is 129.
Long Statement,Mono.Nat.Upnp,UpnpNatDevice,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\UpnpNatDevice.cs,GetAllMappingsAsync,The length of the statement  "					mappings.Add (new Mapping (response.Protocol' response.InternalPort' response.ExternalPort' response.LeaseDuration' response.PortMappingDescription)); " is 150.
Long Statement,Mono.Nat.Upnp,UpnpNatDevice,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\UpnpNatDevice.cs,ToString,The length of the statement  "			return $"UpnpNatDevice - EndPoint: {DeviceEndpoint}' External IP: Manually Check' Control Url: {DeviceControlUri}' Service Type: {ServiceType}' Last Seen: {LastSeen}"; " is 167.
Empty Catch Block,Mono.Nat,AsyncExtensions,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\AsyncExtensions.cs,CatchExceptions,The method has an empty catch block.
Empty Catch Block,Mono.Nat,AsyncExtensions,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\AsyncExtensions.cs,FireAndForget,The method has an empty catch block.
Empty Catch Block,Mono.Nat,AsyncExtensions,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\AsyncExtensions.cs,WaitAndForget,The method has an empty catch block.
Empty Catch Block,Mono.Nat,SocketGroup,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\SocketGroup.cs,ReceiveAsync,The method has an empty catch block.
Empty Catch Block,Mono.Nat,SocketGroup,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\SocketGroup.cs,SendAsync,The method has an empty catch block.
Empty Catch Block,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,PmpSearcher,The method has an empty catch block.
Magic Number,Mono.Nat,SocketGroup,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\SocketGroup.cs,ReceiveAsync,The following statement contains a magic number: await Task.Delay (10' token);
Magic Number,Mono.Nat.Pmp,PortMappingMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Requests\PortMappingMessage.cs,Encode,The following statement contains a magic number: package.AddRange (BitConverter.GetBytes (IPAddress.HostToNetworkOrder (Mapping.Lifetime == 0 ? 7200 : Mapping.Lifetime)));
Magic Number,Mono.Nat.Pmp,ResponseMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Responses\ResponseMessage.cs,Decode,The following statement contains a magic number: data.Length < 16
Magic Number,Mono.Nat.Pmp,ResponseMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Responses\ResponseMessage.cs,Decode,The following statement contains a magic number: byte opCode = (byte) (data [1] & (byte) 127);
Magic Number,Mono.Nat.Pmp,ResponseMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Responses\ResponseMessage.cs,Decode,The following statement contains a magic number: var resultCode = (ErrorCode) IPAddress.NetworkToHostOrder (BitConverter.ToInt16 (data' 2));
Magic Number,Mono.Nat.Pmp,ResponseMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Responses\ResponseMessage.cs,Decode,The following statement contains a magic number: uint epoch = (uint) IPAddress.NetworkToHostOrder (BitConverter.ToInt32 (data' 4));
Magic Number,Mono.Nat.Pmp,ResponseMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Responses\ResponseMessage.cs,Decode,The following statement contains a magic number: int privatePort = IPAddress.NetworkToHostOrder (BitConverter.ToInt16 (data' 8));
Magic Number,Mono.Nat.Pmp,ResponseMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Responses\ResponseMessage.cs,Decode,The following statement contains a magic number: int publicPort = IPAddress.NetworkToHostOrder (BitConverter.ToInt16 (data' 10));
Magic Number,Mono.Nat.Pmp,ResponseMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Messages\Responses\ResponseMessage.cs,Decode,The following statement contains a magic number: uint lifetime = (uint) IPAddress.NetworkToHostOrder (BitConverter.ToInt32 (data' 12));
Magic Number,Mono.Nat.Pmp,PmpNatDevice,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\PmpNatDevice.cs,SendMessageAsync,The following statement contains a magic number: delay = TimeSpan.FromTicks (delay.Ticks * 2);
Magic Number,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,PmpSearcher,The following statement contains a magic number: bytes [3] = 1;
Magic Number,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,SearchOnce,The following statement contains a magic number: delay = TimeSpan.FromTicks (delay.Ticks * 2);
Magic Number,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,HandleMessageReceived,The following statement contains a magic number: response.Length != 12
Magic Number,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,HandleMessageReceived,The following statement contains a magic number: int errorcode = IPAddress.NetworkToHostOrder (BitConverter.ToInt16 (response' 2));
Magic Number,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,HandleMessageReceived,The following statement contains a magic number: var publicIp = new IPAddress (new byte [] { response [8]' response [9]' response [10]' response [11] });
Magic Number,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,HandleMessageReceived,The following statement contains a magic number: var publicIp = new IPAddress (new byte [] { response [8]' response [9]' response [10]' response [11] });
Magic Number,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,HandleMessageReceived,The following statement contains a magic number: var publicIp = new IPAddress (new byte [] { response [8]' response [9]' response [10]' response [11] });
Magic Number,Mono.Nat.Pmp,PmpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Pmp\Searchers\PmpSearcher.cs,HandleMessageReceived,The following statement contains a magic number: var publicIp = new IPAddress (new byte [] { response [8]' response [9]' response [10]' response [11] });
Magic Number,Mono.Nat.Upnp,RequestMessage,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\Messages\Requests\RequestMessage.cs,Encode,The following statement contains a magic number: var builder = new StringBuilder (256);
Magic Number,Mono.Nat.Upnp,UpnpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\Searchers\UpnpSearcher.cs,UpnpSearcher,The following statement contains a magic number: Instance = new UpnpSearcher (new SocketGroup (clients' 1900));
Magic Number,Mono.Nat.Upnp,UpnpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\Searchers\UpnpSearcher.cs,HandleMessageReceived,The following statement contains a magic number: var deviceLocation = location.Split (new [] { ':' }' 2).Skip (1).FirstOrDefault ();
Magic Number,Mono.Nat.Upnp,UpnpSearcher,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\Searchers\UpnpSearcher.cs,ServicesReceived,The following statement contains a magic number: byte [] buffer = new byte [10240];
Magic Number,Mono.Nat.Upnp,UpnpNatDevice,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\UpnpNatDevice.cs,GetAllMappingsAsync,The following statement contains a magic number: i < 1000
Magic Number,Mono.Nat.Upnp,UpnpNatDevice,C:\research\architectureSmells\repos\mono_Mono.Nat\Mono.Nat\Upnp\UpnpNatDevice.cs,DecodeMessageFromResponse,The following statement contains a magic number: byte [] buffer = new byte [10240];
