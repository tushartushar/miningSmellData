Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetSampleRegion,The length of the statement  "	gfxScreenshot.CopyFromScreen (mouseX - sampleSize / 2' mouseY - sampleSize / 2' 0' 0' new Size (sampleSize' sampleSize)); " is 121.
Long Statement,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,OnPaint,The length of the statement  "		gfx.DrawRectangle (pen' previewX + blockSize * (sampleSize / 2)' previewY + blockSize * (sampleSize / 2)' blockSize' blockSize); " is 128.
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,MainForm,The following statement contains a magic number: getColor = new Timer {  	Interval = 10  };  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetSampleRegion,The following statement contains a magic number: gfxScreenshot.CopyFromScreen (mouseX - sampleSize / 2' mouseY - sampleSize / 2' 0' 0' new Size (sampleSize' sampleSize));  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetSampleRegion,The following statement contains a magic number: gfxScreenshot.CopyFromScreen (mouseX - sampleSize / 2' mouseY - sampleSize / 2' 0' 0' new Size (sampleSize' sampleSize));  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: if (yiq >= 131.5)  	return Color.FromArgb (255' 33' 33' 33);  else  	return Color.White;  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: if (yiq >= 131.5)  	return Color.FromArgb (255' 33' 33' 33);  else  	return Color.White;  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: if (yiq >= 131.5)  	return Color.FromArgb (255' 33' 33' 33);  else  	return Color.White;  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: if (yiq >= 131.5)  	return Color.FromArgb (255' 33' 33' 33);  else  	return Color.White;  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: if (yiq >= 131.5)  	return Color.FromArgb (255' 33' 33' 33);  else  	return Color.White;  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: return Color.FromArgb (255' 33' 33' 33);  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: return Color.FromArgb (255' 33' 33' 33);  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: return Color.FromArgb (255' 33' 33' 33);  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetContrastColor,The following statement contains a magic number: return Color.FromArgb (255' 33' 33' 33);  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,OnPaint,The following statement contains a magic number: if (hasSampled) {  	gfx.DrawRectangle (pen' previewX + blockSize * (sampleSize / 2)' previewY + blockSize * (sampleSize / 2)' blockSize' blockSize);  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,OnPaint,The following statement contains a magic number: if (hasSampled) {  	gfx.DrawRectangle (pen' previewX + blockSize * (sampleSize / 2)' previewY + blockSize * (sampleSize / 2)' blockSize' blockSize);  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,OnPaint,The following statement contains a magic number: gfx.DrawRectangle (pen' previewX + blockSize * (sampleSize / 2)' previewY + blockSize * (sampleSize / 2)' blockSize' blockSize);  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,OnPaint,The following statement contains a magic number: gfx.DrawRectangle (pen' previewX + blockSize * (sampleSize / 2)' previewY + blockSize * (sampleSize / 2)' blockSize' blockSize);  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetColorTick,The following statement contains a magic number: try {  	// Get color sample from screen  	int mouseX = MousePosition.X;  	int mouseY = MousePosition.Y;  	screen = Screen.FromRectangle (new Rectangle (MousePosition.X' MousePosition.Y' 1' 1));  	sampleBitmap = GetSampleRegion (screen' mouseX' mouseY);  	Color newColor = sampleBitmap.GetPixel (sampleSize / 2' sampleSize / 2);  	// Set color sample and update form  	sampleColor = newColor;  	TranslateColor ();  	if (this.BackColor == newColor)  		this.Invalidate (new Rectangle (previewX' previewY' previewSize' previewSize));  }  finally {  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,GetColorTick,The following statement contains a magic number: try {  	// Get color sample from screen  	int mouseX = MousePosition.X;  	int mouseY = MousePosition.Y;  	screen = Screen.FromRectangle (new Rectangle (MousePosition.X' MousePosition.Y' 1' 1));  	sampleBitmap = GetSampleRegion (screen' mouseX' mouseY);  	Color newColor = sampleBitmap.GetPixel (sampleSize / 2' sampleSize / 2);  	// Set color sample and update form  	sampleColor = newColor;  	TranslateColor ();  	if (this.BackColor == newColor)  		this.Invalidate (new Rectangle (previewX' previewY' previewSize' previewSize));  }  finally {  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,txtHexFull_TextChanged,The following statement contains a magic number: if (txtHexFull.Text.Length == 7 && txtHexFull.Text.StartsWith ("#")) {  	sampleColor = ColorTranslator.FromHtml (txtHexFull.Text);  	TranslateColor ();  }  else if (txtHexFull.Text.Length == 4 && txtHexFull.Text.StartsWith ("#")) {  	sampleColor = ColorTranslator.FromHtml (txtHexFull.Text);  	txtHexFullBlocked = true;  	TranslateColor ();  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,txtHexFull_TextChanged,The following statement contains a magic number: if (txtHexFull.Text.Length == 7 && txtHexFull.Text.StartsWith ("#")) {  	sampleColor = ColorTranslator.FromHtml (txtHexFull.Text);  	TranslateColor ();  }  else if (txtHexFull.Text.Length == 4 && txtHexFull.Text.StartsWith ("#")) {  	sampleColor = ColorTranslator.FromHtml (txtHexFull.Text);  	txtHexFullBlocked = true;  	TranslateColor ();  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,txtHexFull_TextChanged,The following statement contains a magic number: if (txtHexFull.Text.Length == 4 && txtHexFull.Text.StartsWith ("#")) {  	sampleColor = ColorTranslator.FromHtml (txtHexFull.Text);  	txtHexFullBlocked = true;  	TranslateColor ();  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,txtHexShort_TextChanged,The following statement contains a magic number: try {  	if (txtHexShort.Text.Length == 6) {  		sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  		TranslateColor ();  	}  	else if (txtHexShort.Text.Length == 3) {  		sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  		txtHexShortBlocked = true;  		TranslateColor ();  	}  }  catch (FormatException fex) {  	sampleColor = Color.Black;  	TranslateColor ();  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,txtHexShort_TextChanged,The following statement contains a magic number: try {  	if (txtHexShort.Text.Length == 6) {  		sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  		TranslateColor ();  	}  	else if (txtHexShort.Text.Length == 3) {  		sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  		txtHexShortBlocked = true;  		TranslateColor ();  	}  }  catch (FormatException fex) {  	sampleColor = Color.Black;  	TranslateColor ();  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,txtHexShort_TextChanged,The following statement contains a magic number: if (txtHexShort.Text.Length == 6) {  	sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  	TranslateColor ();  }  else if (txtHexShort.Text.Length == 3) {  	sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  	txtHexShortBlocked = true;  	TranslateColor ();  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,txtHexShort_TextChanged,The following statement contains a magic number: if (txtHexShort.Text.Length == 6) {  	sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  	TranslateColor ();  }  else if (txtHexShort.Text.Length == 3) {  	sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  	txtHexShortBlocked = true;  	TranslateColor ();  }  
Magic Number,ColorPicker,MainForm,C:\repos\charliecm_ColorPicker\ColorPicker\MainForm.cs,txtHexShort_TextChanged,The following statement contains a magic number: if (txtHexShort.Text.Length == 3) {  	sampleColor = ColorTranslator.FromHtml ("#" + txtHexShort.Text);  	txtHexShortBlocked = true;  	TranslateColor ();  }  
