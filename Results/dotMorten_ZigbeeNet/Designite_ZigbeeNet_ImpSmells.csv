Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,Cyclomatic complexity of the method is 83
Complex Method,ZigbeeNet,ZigbeeCommand,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\ZigbeeCommand.cs,ObjectToString,Cyclomatic complexity of the method is 11
Complex Method,ZigbeeNet.Clusters,RelativeHumidityMeasurement,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Clusters\RelativeHumidityMeasurement.cs,RelativeHumidityMeasurement,Cyclomatic complexity of the method is 9
Complex Method,ZigbeeNet.Clusters,TemperatureMeasurement,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\TemperatureMeasurement.cs,TemperatureMeasurement,Cyclomatic complexity of the method is 9
Complex Method,ZigbeeNet.Smartenit,CidClient,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidClient.cs,LoadResponseTypes,Cyclomatic complexity of the method is 8
Long Parameter List,ZigbeeNet.Smartenit,CidClient,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidClient.cs,SendPacketAndReceiveAsync,The method has 5 parameters.
Long Parameter List,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The method has 10 parameters.
Long Parameter List,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,BindRequest,The method has 6 parameters.
Long Statement,ZigbeeNet,ZigbeeCommand,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\ZigbeeCommand.cs,ToString,The length of the statement  "	StringBuilder sb = new StringBuilder (string.Format ("PAYL={0}"' string.Join ("'"' Payload.Select (b => b.ToString ("X2"))))); " is 126.
Long Statement,ZigbeeNet.Smartenit,CidClient,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidClient.cs,ProcessBuffer,The length of the statement  "		System.Diagnostics.Debug.WriteLine ("Received: 0x{0:X2}\tPAYLOAD: [{1}]"' cmd' item.Payload == null ? "<EMPTY>" : string.Join ("'"' (from c in item.Payload " is 155.
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: DataType = (ZigbeeDataType)data [start + 2 + offset];  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length = 3 + offset;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: switch (DataType) {  case ZigbeeDataType.UInt8:  case ZigbeeDataType.GeneralData8Bit:  case ZigbeeDataType.Enumeration8:  	Data = data [start + length++];  	break;  case ZigbeeDataType.GeneralData16Bit:  	Data = data.Skip (start + length).Take (2).ToArray ();  	length += 2;  	break;  case ZigbeeDataType.GeneralData24Bit:  	Data = data.Skip (start + length).Take (3).ToArray ();  	length += 3;  	break;  case ZigbeeDataType.GeneralData32Bit:  	Data = data.Skip (start + length).Take (4).ToArray ();  	length += 4;  	break;  case ZigbeeDataType.GeneralData40Bit:  	Data = data.Skip (start + length).Take (5).ToArray ();  	length += 5;  	break;  case ZigbeeDataType.GeneralData48Bit:  	Data = data.Skip (start + length).Take (6).ToArray ();  	length += 6;  	break;  case ZigbeeDataType.GeneralData56Bit:  	Data = data.Skip (start + length).Take (7).ToArray ();  	length += 7;  	break;  case ZigbeeDataType.GeneralData64Bit:  	Data = data.Skip (start + length).Take (8).ToArray ();  	length += 8;  	break;  case ZigbeeDataType.Boolean:  	Data = data [start + length++] == 0x01;  	//TODO: 0xff means invalid  	break;  case ZigbeeDataType.Array:  	ushort len = BitHelpers.ToUInt16 (data' 0);  	length += 2;  	Data = data.Skip (start + length).Take (len).ToArray ();  	break;  case ZigbeeDataType.UInt16:  case ZigbeeDataType.Enumeration16:  case ZigbeeDataType.ClusterID:  case ZigbeeDataType.AttributeID:  	Data = BitHelpers.ToUInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.UInt32:  	Data = BitHelpers.ToUInt32 (data' start + length);  	length += 4;  	break;  case ZigbeeDataType.UInt48:  	Data = BitHelpers.ToUInt64 ((new byte[] {  		0x00'  		0x00  	}).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  	System.Diagnostics.Debug.WriteLine ("UInt48 not supported");  	length += 6;  	break;  case ZigbeeDataType.UInt64:  	Data = BitHelpers.ToUInt64 (data' start + length);  	length += 8;  	break;  case ZigbeeDataType.Int16:  	Data = BitHelpers.ToInt16 (data' start + length);  	length += 2;  	break;  case ZigbeeDataType.TimeOfDay:  	Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  	length += 4;  	break;  case ZigbeeDataType.Date:  	Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  	length += 4;  	break;  case ZigbeeDataType.UtcTime:  	Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  	length += 4;  	break;  case ZigbeeDataType.Null:  	break;  default:  	//TODO  	System.Diagnostics.Debug.WriteLine ("Unknown data type: " + DataType.ToString ());  	break;  }  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = data.Skip (start + length).Take (2).ToArray ();  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 2;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = data.Skip (start + length).Take (3).ToArray ();  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 3;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = data.Skip (start + length).Take (4).ToArray ();  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 4;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = data.Skip (start + length).Take (5).ToArray ();  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 5;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = data.Skip (start + length).Take (6).ToArray ();  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 6;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = data.Skip (start + length).Take (7).ToArray ();  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 7;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = data.Skip (start + length).Take (8).ToArray ();  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 8;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 2;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 2;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 4;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = BitHelpers.ToUInt64 ((new byte[] {  	0x00'  	0x00  }).Concat (data.Skip (start + length).Take (6)).ToArray ()' 0);  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 6;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 8;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 2;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = new TimeSpan (data [start + length]' data [start + length + 1]' data [start + length + 2]' data [start + length + 3] + 10);  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 4;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = new DateTime (data [start + length] + 1900' data [start + length + 1]' data [start + length + 2]);  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 4;  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: Data = new DateTime (2000' 1' 1' 0' 0' 0' DateTimeKind.Utc).AddMilliseconds (BitHelpers.ToUInt32 (data' start + length));  
Magic Number,ZigbeeNet,AttributeRecord,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\AttributeRecord.cs,AttributeRecord,The following statement contains a magic number: length += 4;  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,ToUInt32,The following statement contains a magic number: return BitConverter.ToUInt32 (new byte[] {  	data [pos + 3]'  	data [pos + 2]'  	data [pos + 1]'  	data [pos]  }' 0);  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,ToUInt32,The following statement contains a magic number: return BitConverter.ToUInt32 (new byte[] {  	data [pos + 3]'  	data [pos + 2]'  	data [pos + 1]'  	data [pos]  }' 0);  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,ToUInt64,The following statement contains a magic number: return BitConverter.ToUInt64 (new byte[] {  	data [pos + 7]'  	data [pos + 6]'  	data [pos + 5]'  	data [pos + 4]'  	data [pos + 3]'  	data [pos + 2]'  	data [pos + 1]'  	data [pos]  }' 0);  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,ToUInt64,The following statement contains a magic number: return BitConverter.ToUInt64 (new byte[] {  	data [pos + 7]'  	data [pos + 6]'  	data [pos + 5]'  	data [pos + 4]'  	data [pos + 3]'  	data [pos + 2]'  	data [pos + 1]'  	data [pos]  }' 0);  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,ToUInt64,The following statement contains a magic number: return BitConverter.ToUInt64 (new byte[] {  	data [pos + 7]'  	data [pos + 6]'  	data [pos + 5]'  	data [pos + 4]'  	data [pos + 3]'  	data [pos + 2]'  	data [pos + 1]'  	data [pos]  }' 0);  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,ToUInt64,The following statement contains a magic number: return BitConverter.ToUInt64 (new byte[] {  	data [pos + 7]'  	data [pos + 6]'  	data [pos + 5]'  	data [pos + 4]'  	data [pos + 3]'  	data [pos + 2]'  	data [pos + 1]'  	data [pos]  }' 0);  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,ToUInt64,The following statement contains a magic number: return BitConverter.ToUInt64 (new byte[] {  	data [pos + 7]'  	data [pos + 6]'  	data [pos + 5]'  	data [pos + 4]'  	data [pos + 3]'  	data [pos + 2]'  	data [pos + 1]'  	data [pos]  }' 0);  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,ToUInt64,The following statement contains a magic number: return BitConverter.ToUInt64 (new byte[] {  	data [pos + 7]'  	data [pos + 6]'  	data [pos + 5]'  	data [pos + 4]'  	data [pos + 3]'  	data [pos + 2]'  	data [pos + 1]'  	data [pos]  }' 0);  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,GetBytes,The following statement contains a magic number: return new byte[] {  	bytes [7]'  	bytes [6]'  	bytes [5]'  	bytes [4]'  	bytes [3]'  	bytes [2]'  	bytes [1]'  	bytes [0]  };  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,GetBytes,The following statement contains a magic number: return new byte[] {  	bytes [7]'  	bytes [6]'  	bytes [5]'  	bytes [4]'  	bytes [3]'  	bytes [2]'  	bytes [1]'  	bytes [0]  };  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,GetBytes,The following statement contains a magic number: return new byte[] {  	bytes [7]'  	bytes [6]'  	bytes [5]'  	bytes [4]'  	bytes [3]'  	bytes [2]'  	bytes [1]'  	bytes [0]  };  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,GetBytes,The following statement contains a magic number: return new byte[] {  	bytes [7]'  	bytes [6]'  	bytes [5]'  	bytes [4]'  	bytes [3]'  	bytes [2]'  	bytes [1]'  	bytes [0]  };  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,GetBytes,The following statement contains a magic number: return new byte[] {  	bytes [7]'  	bytes [6]'  	bytes [5]'  	bytes [4]'  	bytes [3]'  	bytes [2]'  	bytes [1]'  	bytes [0]  };  
Magic Number,ZigbeeNet,BitHelpers,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\BitHelpers.cs,GetBytes,The following statement contains a magic number: return new byte[] {  	bytes [7]'  	bytes [6]'  	bytes [5]'  	bytes [4]'  	bytes [3]'  	bytes [2]'  	bytes [1]'  	bytes [0]  };  
Magic Number,ZigbeeNet.Smartenit,CidClient,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidClient.cs,Parse,The following statement contains a magic number: if (buffer.Length < 4)  	return null;  
Magic Number,ZigbeeNet.Smartenit,CidClient,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidClient.cs,Parse,The following statement contains a magic number: if (buffer.Length < 5 + LEN)  	return null;  
Magic Number,ZigbeeNet.Smartenit,CidClient,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidClient.cs,SwapUInt16,The following statement contains a magic number: return (ushort)(((v & 0xff) << 8) | ((v >> 8) & 0xff));  
Magic Number,ZigbeeNet.Smartenit,CidClient,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidClient.cs,SwapUInt16,The following statement contains a magic number: return (ushort)(((v & 0xff) << 8) | ((v >> 8) & 0xff));  
Magic Number,ZigbeeNet.Smartenit,CidClient,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidClient.cs,SendPacketAndReceiveAsync,The following statement contains a magic number: Task.Delay (timeout * 1000).ContinueWith (_ =>  {  	if (!tcs.Task.IsCompleted && !tcs.Task.IsCanceled) {  		ResponseReceived -= handler;  		tcs.SetException (new TimeoutException ());  	}  	;  });  
Magic Number,ZigbeeNet.Smartenit,CidPacket,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPacket.cs,CidPacket,The following statement contains a magic number: if (cmd == null || cmd.Length != 2)  	throw new ArgumentException ("cmd");  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SystemSetTime,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x03  }' new byte[] {  	secs [3]'  	secs [2]'  	secs [1]'  	secs [0]  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SystemSetTime,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x03  }' new byte[] {  	secs [3]'  	secs [2]'  	secs [1]'  	secs [0]  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ModifyPermitJoinRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x10  }' new byte[] {  	0x01'  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	duration  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ModifyPermitJoinRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x10  }' new byte[] {  	0x01'  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	duration  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ModifyPermitJoinRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x10  }' new byte[] {  	0x01'  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	duration  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ModifyPermitJoinRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x10  }' new byte[] {  	0x01'  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	duration  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ModifyPermitJoinRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x10  }' new byte[] {  	0x01'  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	duration  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ModifyPermitJoinRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x10  }' new byte[] {  	0x01'  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	duration  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ShortNetworkAddressRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x0A  }' new byte[] {  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	(byte)(singleDeviceResponse ? 0x00 : 0x01)'  	startIndex  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ShortNetworkAddressRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x0A  }' new byte[] {  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	(byte)(singleDeviceResponse ? 0x00 : 0x01)'  	startIndex  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ShortNetworkAddressRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x0A  }' new byte[] {  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	(byte)(singleDeviceResponse ? 0x00 : 0x01)'  	startIndex  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ShortNetworkAddressRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x0A  }' new byte[] {  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	(byte)(singleDeviceResponse ? 0x00 : 0x01)'  	startIndex  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ShortNetworkAddressRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x0A  }' new byte[] {  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	(byte)(singleDeviceResponse ? 0x00 : 0x01)'  	startIndex  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ShortNetworkAddressRequest,The following statement contains a magic number: return new CidPacket (new byte[] {  	0x00'  	0x0A  }' new byte[] {  	pid [7]'  	pid [6]'  	pid [5]'  	pid [4]'  	pid [3]'  	pid [2]'  	pid [1]'  	pid [0]'  	(byte)(singleDeviceResponse ? 0x00 : 0x01)'  	startIndex  });  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ReadAttributes,The following statement contains a magic number: for (int i = 0; i < attrList.Length; i++) {  	byte[] pid = BitConverter.GetBytes (attrList [i]);  	payload [1 + i * 2] = pid [1];  	payload [1 + i * 2 + 1] = pid [0];  }  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ReadAttributes,The following statement contains a magic number: for (int i = 0; i < attrList.Length; i++) {  	byte[] pid = BitConverter.GetBytes (attrList [i]);  	payload [1 + i * 2] = pid [1];  	payload [1 + i * 2 + 1] = pid [0];  }  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ReadAttributes,The following statement contains a magic number: payload [1 + i * 2] = pid [1];  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ReadAttributes,The following statement contains a magic number: payload [1 + i * 2 + 1] = pid [0];  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: if (forceApsSecurity)  	u8Mode = (byte)(u8Mode | 8);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: u8Mode = (byte)(u8Mode | 8);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: if (disableDefaultResponse)  	u8Mode = (byte)(u8Mode | 16);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: u8Mode = (byte)(u8Mode | 16);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: if (directionIsServerToClient)  	u8Mode = (byte)(u8Mode | 32);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: u8Mode = (byte)(u8Mode | 32);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: if (manufacturerCode > 0)  	u8Mode = (byte)(u8Mode | 64);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: u8Mode = (byte)(u8Mode | 64);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: if (isCrossProfile)  	u8Mode = (byte)(u8Mode | 128);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,SendCommand,The following statement contains a magic number: u8Mode = (byte)(u8Mode | 128);  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,RegisterNode,The following statement contains a magic number: if (nodeLinkKey == null || nodeLinkKey.Length != 16)  	throw new ArgumentException ("nodeLinkKey");  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ReadAttributesRequest,The following statement contains a magic number: for (int i = 0; i < resp.AttributeCount; i++) {  	byte[] id = new byte[] {  		0x00'  		0x00  	};  	// BitHelpers.GetBytes(resp.ClusterID);  	attrList [i * 2] = id [0];  	attrList [i * 2 + 1] = id [1];  }  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ReadAttributesRequest,The following statement contains a magic number: for (int i = 0; i < resp.AttributeCount; i++) {  	byte[] id = new byte[] {  		0x00'  		0x00  	};  	// BitHelpers.GetBytes(resp.ClusterID);  	attrList [i * 2] = id [0];  	attrList [i * 2 + 1] = id [1];  }  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ReadAttributesRequest,The following statement contains a magic number: attrList [i * 2] = id [0];  
Magic Number,ZigbeeNet.Smartenit,CidPackets,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidPackets.cs,ReadAttributesRequest,The following statement contains a magic number: attrList [i * 2 + 1] = id [1];  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: if (payload.Length != 15)  	throw new ArgumentException ();  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIsMainsPowered = GetBit (u8MacFlags' 2);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: ReceiverIsEnabledDuringIdlePeriods = GetBit (u8MacFlags' 3);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: CapableOfHighSecurity = GetBit (u8MacFlags' 6);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NetworkAddressShouldBeAllocatedToNode = GetBit (u8MacFlags' 7);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: PrimaryBindingTableCache = GetBit (u8Services' 2);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: BackupBindingTableCache = GetBit (u8Services' 3);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: PrimaryDiscoveryCache = GetBit (u8Services' 4);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: BackupDiscoveryCache = GetBit (u8Services' 5);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NetworkManager = GetBit (u8Services' 6);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIsInRunningState = GetBit (u8Services' 7);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeFirmwareVersion = payload [2];  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: ZigbeeProfile = BitConverter.ToUInt16 (new byte[] {  	payload [4]'  	payload [3]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: ZigbeeProfile = BitConverter.ToUInt16 (new byte[] {  	payload [4]'  	payload [3]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeNetworkAddress = BitConverter.ToUInt16 (new byte[] {  	payload [6]'  	payload [5]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeNetworkAddress = BitConverter.ToUInt16 (new byte[] {  	payload [6]'  	payload [5]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIEEEAddress = BitConverter.ToUInt64 (new byte[] {  	payload [14]'  	payload [13]'  	payload [12]'  	payload [11]'  	payload [10]'  	payload [9]'  	payload [8]'  	payload [7]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIEEEAddress = BitConverter.ToUInt64 (new byte[] {  	payload [14]'  	payload [13]'  	payload [12]'  	payload [11]'  	payload [10]'  	payload [9]'  	payload [8]'  	payload [7]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIEEEAddress = BitConverter.ToUInt64 (new byte[] {  	payload [14]'  	payload [13]'  	payload [12]'  	payload [11]'  	payload [10]'  	payload [9]'  	payload [8]'  	payload [7]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIEEEAddress = BitConverter.ToUInt64 (new byte[] {  	payload [14]'  	payload [13]'  	payload [12]'  	payload [11]'  	payload [10]'  	payload [9]'  	payload [8]'  	payload [7]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIEEEAddress = BitConverter.ToUInt64 (new byte[] {  	payload [14]'  	payload [13]'  	payload [12]'  	payload [11]'  	payload [10]'  	payload [9]'  	payload [8]'  	payload [7]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIEEEAddress = BitConverter.ToUInt64 (new byte[] {  	payload [14]'  	payload [13]'  	payload [12]'  	payload [11]'  	payload [10]'  	payload [9]'  	payload [8]'  	payload [7]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIEEEAddress = BitConverter.ToUInt64 (new byte[] {  	payload [14]'  	payload [13]'  	payload [12]'  	payload [11]'  	payload [10]'  	payload [9]'  	payload [8]'  	payload [7]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,PingResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,PingResponse,The following statement contains a magic number: NodeIEEEAddress = BitConverter.ToUInt64 (new byte[] {  	payload [14]'  	payload [13]'  	payload [12]'  	payload [11]'  	payload [10]'  	payload [9]'  	payload [8]'  	payload [7]  }' 0);  
Magic Number,ZigbeeNet.Smartenit,GetSystemTimeResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,GetSystemTimeResponse,The following statement contains a magic number: Time = Epoch.AddSeconds (BitConverter.ToUInt32 (new byte[] {  	payload [3]'  	payload [2]'  	payload [1]'  	payload [0]  }' 0));  
Magic Number,ZigbeeNet.Smartenit,GetSystemTimeResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,GetSystemTimeResponse,The following statement contains a magic number: Time = Epoch.AddSeconds (BitConverter.ToUInt32 (new byte[] {  	payload [3]'  	payload [2]'  	payload [1]'  	payload [0]  }' 0));  
Magic Number,ZigbeeNet.Smartenit,SystemStartNetworkResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,SystemStartNetworkResponse,The following statement contains a magic number: if (payload.Length != 11)  	throw new ArgumentOutOfRangeException ();  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [7] = (b & 1) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [6] = (b & 2) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [6] = (b & 2) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [5] = (b & 4) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [5] = (b & 4) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [4] = (b & 8) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [4] = (b & 8) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [3] = (b & 16) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [3] = (b & 16) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [2] = (b & 32) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [2] = (b & 32) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [1] = (b & 64) > 0 ? '1' : '0';  
Magic Number,ZigbeeNet.Smartenit,ActiveNetworkTableResponse,C:\repos\dotMorten_ZigbeeNet\src\ZigbeeClient\Smartenit\CidResponseItems.cs,ToBinaryString,The following statement contains a magic number: str [0] = (b & 128) > 0 ? '1' : '0';  
