Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MyExpenses.Portable.DataLayer,ExpenseDatabase,C:\repos\jamesmontemagno_MyExpenses\MyExpenses.Portable\DataLayer\ExpenseDatabase.cs,GetVisibleItems,The length of the statement  "        var items = database.Table<Expense>().ToList().Where(x => x.IsVisible && x.UserId == cloudService.UserId).OrderBy(x => x.Due); " is 126.
Long Statement,MyExpenses.Portable.ViewModels,ExpensesViewModel,C:\repos\jamesmontemagno_MyExpenses\MyExpenses.Portable\ViewModels\ExpensesViewModel.cs,ExecuteLoadAlert,The length of the statement  "        var response = await client.GetStringAsync("https://gist.github.com/jamesmontemagno/a54af53e027308362415/raw/a828b194254b241281aad79cd362c33295fdb183/gistfile1.txt"); " is 166.
Empty Catch Block,MyExpenses.Portable.ViewModels,ExpensesViewModel,C:\repos\jamesmontemagno_MyExpenses\MyExpenses.Portable\ViewModels\ExpensesViewModel.cs,ExecuteSyncExpensesCommand,The method has an empty catch block.
Empty Catch Block,MyExpenses.Portable.ViewModels,ExpenseViewModel,C:\repos\jamesmontemagno_MyExpenses\MyExpenses.Portable\ViewModels\ExpenseViewModel.cs,ExecuteSaveExpenseCommand,The method has an empty catch block.
Magic Number,MyExpenses.Portable.ViewModels,ExpensesViewModel,C:\repos\jamesmontemagno_MyExpenses\MyExpenses.Portable\ViewModels\ExpensesViewModel.cs,ExecuteLoadAlert,The following statement contains a magic number: try        {          var client = new HttpClient();          client.Timeout = new TimeSpan(0'0'0'5);            var response = await client.GetStringAsync("https://gist.github.com/jamesmontemagno/a54af53e027308362415/raw/a828b194254b241281aad79cd362c33295fdb183/gistfile1.txt");          var alert = await ExpenseService.DeserializeObjectAsync<Alert>(response);            messageDialog.SendMessage(alert.Details' alert.AlertDateDisplay);          return alert;        }        catch (Exception exception)        {          Debug.WriteLine("Unable to query and gather expenses");        }        finally        {        }
