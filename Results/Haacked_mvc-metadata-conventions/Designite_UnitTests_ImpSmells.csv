Implementation smell,Namespace,Class,File,Method,Description
Long Statement,UnitTests,ConventionalModelMetadataProviderTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\ConventionalModelMetadataProviderTests.cs,CreateMetadata_WithEmailAddressAttributeMatchingResourceKey_SetsErrorMessageResourceName,The length of the statement  "            var metadata = provider.GetMetadataForProperty(() => model' model.GetType()' nameof(TestModel.PropertyWithEmailAddressAttributeMatchingResourceKey)); " is 149.
Long Statement,UnitTests,ConventionalModelMetadataProviderTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\ConventionalModelMetadataProviderTests.cs,CreateMetadata_WithEmailAddressAttributeMatchingResourceKey_SetsErrorMessageResourceName,The length of the statement  "            var customTypeDescriptor = new AssociatedMetadataTypeTypeDescriptionProvider(metadata.ContainerType).GetTypeDescriptor(metadata.ContainerType); " is 143.
Long Statement,UnitTests,ConventionalModelMetadataProviderTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\ConventionalModelMetadataProviderTests.cs,CreateMetadata_WithEmailAddressAttributeMatchingResourceKey_SetsErrorMessageResourceName,The length of the statement  "            Assert.Equal("TestModel_PropertyWithEmailAddressAttributeMatchingResourceKey_EmailAddress"' emailAddressAttribute.ErrorMessageResourceName); " is 140.
Magic Number,UnitTests,EnumerableExtensionsTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\EnumerableExtensionsTests.cs,Replace_WithEnumeration_ReturnsNewEnumerationWithItemReplaced,The following statement contains a magic number: var testModel = new TestModel {Id = 2};
Magic Number,UnitTests,EnumerableExtensionsTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\EnumerableExtensionsTests.cs,Replace_WithEnumeration_ReturnsNewEnumerationWithItemReplaced,The following statement contains a magic number: var replacement = new TestModel {Id = 5};
Magic Number,UnitTests,EnumerableExtensionsTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\EnumerableExtensionsTests.cs,Replace_WithEnumeration_ReturnsNewEnumerationWithItemReplaced,The following statement contains a magic number: var items = new[]              {                  new TestModel {Id = 1}'                  testModel'                  new TestModel {Id = 3}'                  new TestModel {Id = 4}              };
Magic Number,UnitTests,EnumerableExtensionsTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\EnumerableExtensionsTests.cs,Replace_WithEnumeration_ReturnsNewEnumerationWithItemReplaced,The following statement contains a magic number: var items = new[]              {                  new TestModel {Id = 1}'                  testModel'                  new TestModel {Id = 3}'                  new TestModel {Id = 4}              };
Magic Number,UnitTests,EnumerableExtensionsTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\EnumerableExtensionsTests.cs,Replace_WithEnumerationAndNullSource_ReturnsNewEnumerationWithItemReplaced,The following statement contains a magic number: var replacement = new TestModel {Id = 5};
Magic Number,UnitTests,EnumerableExtensionsTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\EnumerableExtensionsTests.cs,Replace_WithEnumerationAndNullSource_ReturnsNewEnumerationWithItemReplaced,The following statement contains a magic number: var items = new[]              {                  new TestModel {Id = 1}'                  new TestModel {Id = 3}'                  new TestModel {Id = 4}              };
Magic Number,UnitTests,EnumerableExtensionsTests,D:\research\architectureSmells\repos\Haacked_mvc-metadata-conventions\UnitTests\EnumerableExtensionsTests.cs,Replace_WithEnumerationAndNullSource_ReturnsNewEnumerationWithItemReplaced,The following statement contains a magic number: var items = new[]              {                  new TestModel {Id = 1}'                  new TestModel {Id = 3}'                  new TestModel {Id = 4}              };
