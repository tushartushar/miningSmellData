Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,XF.Labs.Sample,App,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\App.cs,Init,The method has 14 parameters.
Long Parameter List,XF.Labs.Sample,ExtendedDeviceInfoPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\ExtendedDeviceInfoPage.cs,ExtendedDeviceInfoPage,The method has 5 parameters.
Long Statement,XF.Labs.Sample,App,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\App.cs,GetMainPage,The length of the statement  "	mainTab.CurrentPageChanged += () => Debug.WriteLine ("ExtendedTabbedPage CurrentPageChanged {0}"' mainTab.CurrentPage.Title); " is 125.
Long Statement,XF.Labs.Sample,GeolocatorViewModel,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\ViewModel\GeolocatorViewModel.cs,GetPosition,The length of the statement  "	await this.geolocator.GetPositionAsync (timeout: 10000' cancelToken: this.cancelSource.Token' includeHeading: true).ContinueWith (t =>  { " is 137.
Empty Catch Block,XF.Labs.Sample,CacheServiceViewModel,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\ViewModel\CacheServiceViewModel.cs,CacheServiceViewModel,The method has an empty catch block.
Empty Catch Block,XF.Labs.Sample,CameraViewModel,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\ViewModel\CameraViewModel.cs,SelectPicture,The method has an empty catch block.
Magic Number,XF.Labs.Sample,ExtendedLabelPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Controls\ExtendedLabelPage.xaml.cs,ExtendedLabelPage,The following statement contains a magic number: label.FontSize = 22;  
Magic Number,XF.Labs.Sample,AbsoluteLayoutWithDisplayInfoPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add (new Frame () {  	BackgroundColor = Color.Navy'  }' new Rectangle (originX - inchX / 2' originY - inchY / 2' inchX' inchY));  
Magic Number,XF.Labs.Sample,AbsoluteLayoutWithDisplayInfoPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add (new Frame () {  	BackgroundColor = Color.Navy'  }' new Rectangle (originX - inchX / 2' originY - inchY / 2' inchX' inchY));  
Magic Number,XF.Labs.Sample,AbsoluteLayoutWithDisplayInfoPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add (new Frame () {  	BackgroundColor = Color.White  }' new Rectangle (originX - inchX / 16' originY - inchY / 16' inchX / 8' inchY / 8));  
Magic Number,XF.Labs.Sample,AbsoluteLayoutWithDisplayInfoPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add (new Frame () {  	BackgroundColor = Color.White  }' new Rectangle (originX - inchX / 16' originY - inchY / 16' inchX / 8' inchY / 8));  
Magic Number,XF.Labs.Sample,AbsoluteLayoutWithDisplayInfoPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add (new Frame () {  	BackgroundColor = Color.White  }' new Rectangle (originX - inchX / 16' originY - inchY / 16' inchX / 8' inchY / 8));  
Magic Number,XF.Labs.Sample,AbsoluteLayoutWithDisplayInfoPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add (new Frame () {  	BackgroundColor = Color.White  }' new Rectangle (originX - inchX / 16' originY - inchY / 16' inchX / 8' inchY / 8));  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.xsensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.xsensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.xsensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.xsensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.ysensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.ysensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.ysensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.ysensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.zsensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.zsensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.zsensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,AcceleratorSensorPage,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: this.zsensor = new SensorBarView () {  	HeightRequest = 75'  	WidthRequest = 250'  	MinimumHeightRequest = 10'  	MinimumWidthRequest = 50'  	BackgroundColor = this.BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill  };  
Magic Number,XF.Labs.Sample,CameraViewModel,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\ViewModel\CameraViewModel.cs,TakePicture,The following statement contains a magic number: await this._mediaPicker.TakePhotoAsync (new CameraMediaStorageOptions {  	DefaultCamera = CameraDevice.Front'  	MaxPixelDimension = 400  }).ContinueWith (t =>  {  	if (t.IsFaulted) {  		var s = t.Exception.InnerException.ToString ();  	}  	else if (t.IsCanceled) {  		var canceled = true;  	}  	else {  		var mediaFile = t.Result;  		ImageSource = ImageSource.FromStream (() => mediaFile.Source);  		return mediaFile;  	}  	return null;  }' _scheduler);  
Magic Number,XF.Labs.Sample,CameraViewModel,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\ViewModel\CameraViewModel.cs,SelectPicture,The following statement contains a magic number: try {  	var mediaFile = await this._mediaPicker.SelectPhotoAsync (new CameraMediaStorageOptions {  		DefaultCamera = CameraDevice.Front'  		MaxPixelDimension = 400  	});  	ImageSource = ImageSource.FromStream (() => mediaFile.Source);  }  catch (System.Exception ex) {  }  
Magic Number,XF.Labs.Sample,GeolocatorViewModel,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\ViewModel\GeolocatorViewModel.cs,GetPosition,The following statement contains a magic number: await this.geolocator.GetPositionAsync (timeout: 10000' cancelToken: this.cancelSource.Token' includeHeading: true).ContinueWith (t =>  {  	IsBusy = false;  	if (t.IsFaulted)  		PositionStatus = ((GeolocationException)t.Exception.InnerException).Error.ToString ();  	else if (t.IsCanceled)  		PositionStatus = "Canceled";  	else {  		PositionStatus = t.Result.Timestamp.ToString ("G");  		PositionLatitude = "La: " + t.Result.Latitude.ToString ("N4");  		PositionLongitude = "Lo: " + t.Result.Longitude.ToString ("N4");  	}  }' scheduler);  
Magic Number,XF.Labs.Sample,MainViewModel,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\ViewModel\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Items.Add (string.Format ("item {0}"' i));  }  
Magic Number,XF.Labs.Sample,MainViewModel,C:\repos\XLabs_Xamarin-Forms-Labs-Samples\XF.Labs.Sample\XF.Labs.Sample\XF.Labs.Sample\ViewModel\MainViewModel.cs,StartTimer,The following statement contains a magic number: Device.StartTimer (new TimeSpan (6000)' () =>  {  	DeviceTimerInfo = "This text was updated using the Device Timer";  	return true;  });  
