Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AspNet.Identity.MySQL,UserLoginsTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserLoginsTable.cs,Delete,The length of the statement  "	string commandText = "Delete from UserLogins where UserId = @userId and LoginProvider = @loginProvider and ProviderKey = @providerKey"; " is 135.
Long Statement,AspNet.Identity.MySQL,UserLoginsTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserLoginsTable.cs,Insert,The length of the statement  "	string commandText = "Insert into UserLogins (LoginProvider' ProviderKey' UserId) values (@loginProvider' @providerKey' @userId)"; " is 130.
Long Statement,AspNet.Identity.MySQL,UserLoginsTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserLoginsTable.cs,FindUserIdByLogin,The length of the statement  "	string commandText = "Select UserId from UserLogins where LoginProvider = @loginProvider and ProviderKey = @providerKey"; " is 121.
Long Statement,AspNet.Identity.MySQL,UserStore,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserStore.cs,GetLockoutEndDateAsync,The length of the statement  "	return Task.FromResult (user.LockoutEndDateUtc.HasValue ? new DateTimeOffset (DateTime.SpecifyKind (user.LockoutEndDateUtc.Value' DateTimeKind.Utc)) : new DateTimeOffset ()); " is 174.
Long Statement,AspNet.Identity.MySQL,UserRolesTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserRoleTable.cs,FindByUserId,The length of the statement  "	string commandText = "Select Roles.Name from UserRoles' Roles where UserRoles.UserId = @userId and UserRoles.RoleId = Roles.Id"; " is 128.
Long Statement,AspNet.Identity.MySQL,UserTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserTable.cs,GetUserById,The length of the statement  "		user.LockoutEndDateUtc = string.IsNullOrEmpty (row ["LockoutEndDateUtc"]) ? DateTime.Now : DateTime.Parse (row ["LockoutEndDateUtc"]); " is 134.
Long Statement,AspNet.Identity.MySQL,UserTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserTable.cs,GetUserByName,The length of the statement  "		user.LockoutEndDateUtc = string.IsNullOrEmpty (row ["LockoutEndDateUtc"]) ? DateTime.Now : DateTime.Parse (row ["LockoutEndDateUtc"]); " is 134.
Long Statement,AspNet.Identity.MySQL,UserTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserTable.cs,Insert,The length of the statement  "	string commandText = @"Insert into Users (UserName' Id' PasswordHash' SecurityStamp'Email'EmailConfirmed'PhoneNumber'PhoneNumberConfirmed' AccessFailedCount'LockoutEnabled'LockoutEndDateUtc'TwoFactorEnabled)" is 207.
Long Statement,AspNet.Identity.MySQL,UserTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserTable.cs,Insert,The length of the statement  "                values (@name' @id' @pwdHash' @SecStamp'@email'@emailconfirmed'@phonenumber'@phonenumberconfirmed'@accesscount'@lockoutenabled'@lockoutenddate'@twofactorenabled)"; " is 163.
Long Statement,AspNet.Identity.MySQL,UserTable,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\UserTable.cs,Update,The length of the statement  "                AccessFailedCount=@accesscount' LockoutEnabled=@lockoutenabled' LockoutEndDateUtc=@lockoutenddate' TwoFactorEnabled=@twofactorenabled  " is 133.
Magic Number,AspNet.Identity.MySQL,MySQLDatabase,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\MySQLDatabase.cs,EnsureConnectionOpen,The following statement contains a magic number: if (_connection.State == ConnectionState.Open) {  	return;  }  else {  	while (retries >= 0 && _connection.State != ConnectionState.Open) {  		_connection.Open ();  		retries--;  		Thread.Sleep (30);  	}  }  
Magic Number,AspNet.Identity.MySQL,MySQLDatabase,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\MySQLDatabase.cs,EnsureConnectionOpen,The following statement contains a magic number: while (retries >= 0 && _connection.State != ConnectionState.Open) {  	_connection.Open ();  	retries--;  	Thread.Sleep (30);  }  
Magic Number,AspNet.Identity.MySQL,MySQLDatabase,C:\repos\klkkkl_dd\Tower\AspNet.Identity.MySQL\MySQLDatabase.cs,EnsureConnectionOpen,The following statement contains a magic number: Thread.Sleep (30);  
