Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,RunSingleTest,The method has 6 parameters. Parameters: files' filesize' set_zip64' forward_only' write_chunk_size' filename
Long Parameter List,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,CreateZipArchive,The method has 6 parameters. Parameters: filename' files' filesize' chunksize' set_zip64' forward_only
Long Statement,SharpCompress.Test,ReaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\ReaderTests.cs,ReadImpl,The length of the statement  "                        var message = $"{nameof(options.LeaveStreamOpen)} is set to '{options.LeaveStreamOpen}'' so {nameof(testStream.IsDisposed)} should be set to '{!testStream.IsDisposed}'' but is set to {testStream.IsDisposed}"; " is 208.
Long Statement,SharpCompress.Test,TestBase,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\TestBase.cs,CompareArchivesByPath,The length of the statement  "            //don't compare the order.  OS X reads files from the file system in a different order therefore makes the archive ordering different " is 133.
Long Statement,SharpCompress.Test.GZip,GZipWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\GZip\GZipWriterTests.cs,GZip_Writer_Generic,The length of the statement  "            using (Stream stream = File.Open(Path.Combine(SCRATCH_FILES_PATH' "Tar.tar.gz")' FileMode.OpenOrCreate' FileAccess.Write)) " is 122.
Long Statement,SharpCompress.Test.GZip,GZipWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\GZip\GZipWriterTests.cs,GZip_Writer,The length of the statement  "            using (Stream stream = File.Open(Path.Combine(SCRATCH_FILES_PATH' "Tar.tar.gz")' FileMode.OpenOrCreate' FileAccess.Write)) " is 122.
Long Statement,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_FileName_Exactly_100_Characters,The length of the statement  "            string filename = "filename_with_exactly_100_characters_______________________________________________________________X"; " is 121.
Long Statement,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_NonUstarArchiveWithLongNameDoesNotSkipEntriesAfterTheLongOne,The length of the statement  "                Assert.Contains("very long filename/very long filename very long filename very long filename very long filename very long filename very long filename very long filename very long filename very long filename very long filename.jpg"' archive.Entries.Select(entry => entry.Key)); " is 276.
Long Statement,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_UstarArchivePathReadLongName,The length of the statement  "                Assert.Contains("Directory/Some file with veeeeeeeeeery loooooooooong name"' archive.Entries.Select(entry => entry.Key)); " is 121.
Long Statement,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_UstarArchivePathReadLongName,The length of the statement  "                Assert.Contains("Directory/Directory with veeeeeeeeeery loooooooooong name/"' archive.Entries.Select(entry => entry.Key)); " is 122.
Long Statement,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_UstarArchivePathReadLongName,The length of the statement  "                Assert.Contains("Directory/Directory with veeeeeeeeeery loooooooooong name/Some file with veeeeeeeeeery loooooooooong name"' archive.Entries.Select(entry => entry.Key)); " is 169.
Long Statement,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_UstarArchivePathReadLongName,The length of the statement  "                Assert.Contains("Directory/Directory with veeeeeeeeeery loooooooooong name/Directory with veeeeeeeeeery loooooooooong name/"' archive.Entries.Select(entry => entry.Key)); " is 170.
Long Statement,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_UstarArchivePathReadLongName,The length of the statement  "                Assert.Contains("Directory/Directory with veeeeeeeeeery loooooooooong name/Directory with veeeeeeeeeery loooooooooong name/Some file with veeeeeeeeeery loooooooooong name"' archive.Entries.Select(entry => entry.Key)); " is 217.
Long Statement,SharpCompress.Test.Tar,TarReaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarReaderTests.cs,Tar_LongNamesWithLongNameExtension,The length of the statement  "            Assert.Contains("wp-content/plugins/gravityformsextend/lib/Aws/Symfony/Component/ClassLoader/Tests/Fixtures/Apc/beta/Apc/ApcPrefixCollision/A/B/Bar.php"' filePaths); " is 165.
Long Statement,SharpCompress.Test.Tar,TarReaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarReaderTests.cs,Tar_LongNamesWithLongNameExtension,The length of the statement  "            Assert.Contains("wp-content/plugins/gravityformsextend/lib/Aws/Symfony/Component/ClassLoader/Tests/Fixtures/Apc/beta/Apc/ApcPrefixCollision/A/B/Foo.php"' filePaths); " is 165.
Long Statement,SharpCompress.Test.Tar,TarWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarWriterTests.cs,Tar_Rar_Write,The length of the statement  "            Assert.Throws<InvalidFormatException>(() => Write(CompressionType.Rar' "Zip.ppmd.noEmptyDirs.zip"' "Zip.ppmd.noEmptyDirs.zip")); " is 128.
Long Statement,SharpCompress.Test.Tar,TarWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarWriterTests.cs,Tar_Finalize_Archive,The length of the statement  "                using (TarWriter writer = new TarWriter(stream' new TarWriterOptions(CompressionType.None' finalizeArchive)))             { " is 123.
Long Statement,SharpCompress.Test.Xz,XZIndexTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZIndexTests.cs,SkipsPadding,The length of the statement  "            using (Stream badStream = new MemoryStream(new byte[] { 0x00' 0x01' 0x10' 0x80' 0x01' 0x00' 0x00' 0x00' 0xB1' 0x01' 0xD9' 0xC9' 0xFF })) " is 136.
Long Statement,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_Read_Volume_Comment,The length of the statement  "                string expectedComment = "Encoding:utf-8 || Compression:Deflate levelDefault || Encrypt:None || ZIP64:Always\r\nCreated at 2017-Jan-23 14:10:43 || DotNetZip Tool v1.9.1.8\r\nTest zip64 archive"; " is 194.
Long Statement,SharpCompress.Test.Zip,ZipWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipWriterTests.cs,Zip_Rar_Write,The length of the statement  "            Assert.Throws<InvalidFormatException>(() => Write(CompressionType.Rar' "Zip.ppmd.noEmptyDirs.zip"' "Zip.ppmd.noEmptyDirs.zip")); " is 128.
Virtual Method Call from Constructor,SharpCompress.Test.Xz,XZTestsBase,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZTestsBase.cs,XZTestsBase,The constructor "XZTestsBase" calls a virtual method "RewindEmpty".
Virtual Method Call from Constructor,SharpCompress.Test.Xz,XZTestsBase,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZTestsBase.cs,XZTestsBase,The constructor "XZTestsBase" calls a virtual method "Rewind".
Virtual Method Call from Constructor,SharpCompress.Test.Xz,XZTestsBase,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZTestsBase.cs,XZTestsBase,The constructor "XZTestsBase" calls a virtual method "RewindIndexed".
Empty Catch Block,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Single_Large_File_Fail,The method has an empty catch block.
Empty Catch Block,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Single_Large_File_Zip64_Streaming_Fail,The method has an empty catch block.
Empty Catch Block,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Single_Large_File_Streaming_Fail,The method has an empty catch block.
Magic Number,SharpCompress.Test,ADCTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\ADCTest.cs,TestADCStreamWholeChunk,The following statement contains a magic number: byte[] test = new byte[262144];
Magic Number,SharpCompress.Test,ADCTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\ADCTest.cs,TestADCStream,The following statement contains a magic number: byte[] test = new byte[512];
Magic Number,SharpCompress.Test,TestBase,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\TestBase.cs,CompareArchivesByPath,The following statement contains a magic number: readerOptions.ArchiveEncoding.Default = Encoding.GetEncoding(866);
Magic Number,SharpCompress.Test,WriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\WriterTests.cs,Write,The following statement contains a magic number: writerOptions.ArchiveEncoding.Default = Encoding.GetEncoding(866);
Magic Number,SharpCompress.Test,WriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\WriterTests.cs,Write,The following statement contains a magic number: readerOptions.ArchiveEncoding.Default = Encoding.GetEncoding(866);
Magic Number,SharpCompress.Test.Streams,LzmaStreamTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\LzmaStreamTests.cs,TestLzma2Decompress1Byte,The following statement contains a magic number: LzmaStream decompressor = new LzmaStream(properties' lzma2Stream' 5' 1);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: bw.Write(2);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: bw.Write(3);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: bw.Write(4);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: bw.Write(5);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: bw.Write(6);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: bw.Write(7);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(2' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(3' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(4' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(2' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(3' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(4' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(5' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(6' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(7' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(2' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(3' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestRewind,The following statement contains a magic number: Assert.Equal(4' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: bw.Write(2);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: bw.Write(3);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: bw.Write(4);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: bw.Write(5);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: bw.Write(6);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: bw.Write(7);
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(2' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(3' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(4' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(2' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(3' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(4' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(5' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(3' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(4' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(5' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(6' br.ReadInt32());
Magic Number,SharpCompress.Test.Streams,RewindableStreamTest,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Streams\RewindableStreamTest.cs,TestIncompleteRewind,The following statement contains a magic number: Assert.Equal(7' br.ReadInt32());
Magic Number,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_NonUstarArchiveWithLongNameDoesNotSkipEntriesAfterTheLongOne,The following statement contains a magic number: Assert.Equal(5' archive.Entries.Count);
Magic Number,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_VeryLongFilepathReadback,The following statement contains a magic number: i < 600
Magic Number,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_UstarArchivePathReadLongName,The following statement contains a magic number: Assert.Equal(6' archive.Entries.Count);
Magic Number,SharpCompress.Test.Tar,TarArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarArchiveTests.cs,Tar_Create_New,The following statement contains a magic number: twopt.ArchiveEncoding = new ArchiveEncoding()                  {                      Default = Encoding.GetEncoding(866)                  };
Magic Number,SharpCompress.Test.Tar,TarReaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarReaderTests.cs,Tar_LongNamesWithLongNameExtension,The following statement contains a magic number: Assert.Equal(3' filePaths.Count);
Magic Number,SharpCompress.Test.Tar,TarReaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarReaderTests.cs,Tar_BZip2_Skip_Entry_Stream,The following statement contains a magic number: Assert.Equal(3' names.Count);
Magic Number,SharpCompress.Test.Tar,TarWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarWriterTests.cs,Tar_Finalize_Archive,The following statement contains a magic number: var paddedContentWithHeader = content.Length / 512 * 512 + 512 + 512;
Magic Number,SharpCompress.Test.Tar,TarWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarWriterTests.cs,Tar_Finalize_Archive,The following statement contains a magic number: var paddedContentWithHeader = content.Length / 512 * 512 + 512 + 512;
Magic Number,SharpCompress.Test.Tar,TarWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarWriterTests.cs,Tar_Finalize_Archive,The following statement contains a magic number: var paddedContentWithHeader = content.Length / 512 * 512 + 512 + 512;
Magic Number,SharpCompress.Test.Tar,TarWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarWriterTests.cs,Tar_Finalize_Archive,The following statement contains a magic number: var paddedContentWithHeader = content.Length / 512 * 512 + 512 + 512;
Magic Number,SharpCompress.Test.Tar,TarWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarWriterTests.cs,Tar_Finalize_Archive,The following statement contains a magic number: var expectedStreamLength = finalizeArchive ? paddedContentWithHeader + 512 * 2 : paddedContentWithHeader;
Magic Number,SharpCompress.Test.Tar,TarWriterTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Tar\TarWriterTests.cs,Tar_Finalize_Archive,The following statement contains a magic number: var expectedStreamLength = finalizeArchive ? paddedContentWithHeader + 512 * 2 : paddedContentWithHeader;
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,Rewind,The following statement contains a magic number: stream.Position = 12;
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,RewindIndexed,The following statement contains a magic number: stream.Position = 12;
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,OnFindIndexBlockThrow,The following statement contains a magic number: var XZBlock = new XZBlock(indexBlockStream' CheckType.CRC64' 8);
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,CrcIncorrectThrows,The following statement contains a magic number: bytes[20]++;
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,CrcIncorrectThrows,The following statement contains a magic number: var XZBlock = new XZBlock(badCrcStream' CheckType.CRC64' 8);
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,CanReadM,The following statement contains a magic number: var XZBlock = new XZBlock(CompressedStream' CheckType.CRC64' 8);
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,CanReadMary,The following statement contains a magic number: var XZBlock = new XZBlock(CompressedStream' CheckType.CRC64' 8);
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,CanReadMary,The following statement contains a magic number: Assert.Equal(Encoding.ASCII.GetBytes("ry")' ReadBytes(XZBlock' 2));
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,CanReadPoemWithStreamReader,The following statement contains a magic number: var XZBlock = new XZBlock(CompressedStream' CheckType.CRC64' 8);
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,NoopWhenNoPadding,The following statement contains a magic number: var XZBlock = new XZBlock(CompressedStream' CheckType.CRC64' 8);
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,NoopWhenNoPadding,The following statement contains a magic number: Assert.Equal(0L' CompressedStream.Position % 4L);
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,SkipsPaddingWhenPresent,The following statement contains a magic number: var XZBlock = new XZBlock(CompressedIndexedStream' CheckType.CRC64' 8);
Magic Number,SharpCompress.Test.Xz,XZBlockTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZBlockTests.cs,SkipsPaddingWhenPresent,The following statement contains a magic number: Assert.Equal(0L' CompressedIndexedStream.Position % 4L);
Magic Number,SharpCompress.Test.Xz,XZHeaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZHeaderTests.cs,ChecksMagicNumber,The following statement contains a magic number: bytes[3]++;
Magic Number,SharpCompress.Test.Xz,XZHeaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZHeaderTests.cs,CorruptHeaderThrows,The following statement contains a magic number: bytes[8]++;
Magic Number,SharpCompress.Test.Xz,XZHeaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZHeaderTests.cs,BadVersionIfCrcOkButStreamFlagUnknown,The following statement contains a magic number: streamFlags.CopyTo(bytes' 6);
Magic Number,SharpCompress.Test.Xz,XZHeaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZHeaderTests.cs,BadVersionIfCrcOkButStreamFlagUnknown,The following statement contains a magic number: crc.CopyTo(bytes' 8);
Magic Number,SharpCompress.Test.Xz,XZHeaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZHeaderTests.cs,CanCalculateBlockCheckSize,The following statement contains a magic number: Assert.Equal(8' header.BlockCheckSize);
Magic Number,SharpCompress.Test.Xz,XZIndexTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZIndexTests.cs,RewindEmpty,The following statement contains a magic number: stream.Position = 12;
Magic Number,SharpCompress.Test.Xz,XZIndexTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZIndexTests.cs,Rewind,The following statement contains a magic number: stream.Position = 356;
Magic Number,SharpCompress.Test.Xz,XZIndexTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZIndexTests.cs,RewindIndexed,The following statement contains a magic number: stream.Position = 612;
Magic Number,SharpCompress.Test.Xz,XZIndexTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZIndexTests.cs,ReadsMultipleRecords,The following statement contains a magic number: Assert.Equal((ulong)2' index.NumberOfRecords);
Magic Number,SharpCompress.Test.Xz,XZIndexTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\XZIndexTests.cs,SkipsPadding,The following statement contains a magic number: Assert.Equal(0L' badStream.Position % 4L);
Magic Number,SharpCompress.Test.Xz.Filters,Lzma2Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Xz\Filters\Lzma2Tests.cs,CalculatesDictionarySizeError,The following statement contains a magic number: filter.Init(new byte[] { 41 });
Magic Number,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Two_Large_Files,The following statement contains a magic number: RunSingleTest(2' FOUR_GB_LIMIT' set_zip64: true' forward_only: false);
Magic Number,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Two_Small_files,The following statement contains a magic number: RunSingleTest(2' FOUR_GB_LIMIT / 2' set_zip64: false' forward_only: false);
Magic Number,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Two_Small_files,The following statement contains a magic number: RunSingleTest(2' FOUR_GB_LIMIT / 2' set_zip64: false' forward_only: false);
Magic Number,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Two_Small_files_stream,The following statement contains a magic number: RunSingleTest(2' FOUR_GB_LIMIT / 2' set_zip64: false' forward_only: true);
Magic Number,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Two_Small_files_stream,The following statement contains a magic number: RunSingleTest(2' FOUR_GB_LIMIT / 2' set_zip64: false' forward_only: true);
Magic Number,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Two_Small_Files_Zip64,The following statement contains a magic number: RunSingleTest(2' FOUR_GB_LIMIT / 2' set_zip64: true' forward_only: false);
Magic Number,SharpCompress.Test.Zip,Zip64Tests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\Zip64Tests.cs,Zip64_Two_Small_Files_Zip64,The following statement contains a magic number: RunSingleTest(2' FOUR_GB_LIMIT / 2' set_zip64: true' forward_only: false);
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_Random_Write_Remove,The following statement contains a magic number: writerOptions.ArchiveEncoding.Default = Encoding.GetEncoding(866);
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_Random_Write_Add,The following statement contains a magic number: writerOptions.ArchiveEncoding.Default = Encoding.GetEncoding(866);
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_Create_New,The following statement contains a magic number: writerOptions.ArchiveEncoding.Default = Encoding.GetEncoding(866);
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_Random_Entry_Access,The following statement contains a magic number: Assert.Equal(3' count);
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_Random_Entry_Access,The following statement contains a magic number: Assert.Equal(3' count3);
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_Deflate_PKWear_Multipy_Entry_Access,The following statement contains a magic number: i < 100
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,TestSharpCompressWithEmptyStream,The following statement contains a magic number: zipWriter.Write("foo2.txt"' new MemoryStream(new byte[10]));
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_BadLocalExtra_Read,The following statement contains a magic number: var ex = Record.Exception(() =>                  {                      var firstEntry = za.Entries.First(x => x.Key == "first.txt");                      var buffer = new byte[4096];                        using (var memoryStream = new MemoryStream())                      using (var firstStream = firstEntry.OpenEntryStream())                      {                          firstStream.CopyTo(memoryStream);                          Assert.Equal(199' memoryStream.Length);                      }                  });
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_BadLocalExtra_Read,The following statement contains a magic number: var ex = Record.Exception(() =>                  {                      var firstEntry = za.Entries.First(x => x.Key == "first.txt");                      var buffer = new byte[4096];                        using (var memoryStream = new MemoryStream())                      using (var firstStream = firstEntry.OpenEntryStream())                      {                          firstStream.CopyTo(memoryStream);                          Assert.Equal(199' memoryStream.Length);                      }                  });
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_NoCompression_DataDescriptors_Read,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,SharpCompress.Test.Zip,ZipArchiveTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipArchiveTests.cs,Zip_NoCompression_DataDescriptors_Read,The following statement contains a magic number: Assert.Equal(199' memoryStream.Length);
Magic Number,SharpCompress.Test.Zip,ZipReaderTests,D:\research\architectureSmells\repos\adamhathcock_sharpcompress\tests\SharpCompress.Test\Zip\ZipReaderTests.cs,TestSharpCompressWithEmptyStream,The following statement contains a magic number: var expected = new Tuple<string' byte[]>[]              {                  new Tuple<string' byte[]>("foo.txt"' new byte[0])'                  new Tuple<string' byte[]>("foo2.txt"' new byte[10])              };
