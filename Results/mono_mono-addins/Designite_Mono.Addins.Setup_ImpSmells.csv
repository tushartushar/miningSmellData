Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Install,The method has 152 lines of code.
Long Method,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,ResolveDependencies,The method has 102 lines of code.
Long Method,Mono.Addins.Setup,AddinSystemConfigurationReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,ReadObject_AddinSystemConfiguration,The method has 136 lines of code.
Long Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AddinInfo,The method has 203 lines of code.
Long Method,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,CreateCommands,The method has 155 lines of code.
Complex Method,Mono.Addins.Setup,AddinPackage,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinPackage.cs,PrepareUninstall,Cyclomatic complexity of the method is 8
Complex Method,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Install,Cyclomatic complexity of the method is 18
Complex Method,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Uninstall,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,ResolveDependencies,Cyclomatic complexity of the method is 21
Complex Method,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,ResolveDependency,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,AddinSystemConfigurationReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,ReadObject_AddinSystemConfiguration,Cyclomatic complexity of the method is 12
Complex Method,Mono.Addins.Setup,AddinSystemConfigurationReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,ReadObject_RepositoryRecord,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,AddinSystemConfigurationWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,WriteObject_AddinSystemConfiguration,Cyclomatic complexity of the method is 13
Complex Method,Mono.Addins.Setup,AddinSystemConfigurationWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,WriteObject_RepositoryRecord,Cyclomatic complexity of the method is 8
Complex Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_Repository,Cyclomatic complexity of the method is 11
Complex Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_PackageRepositoryEntry,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_ReferenceRepositoryEntry,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AddinInfo,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AssemblyDependency,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_NativeReference,Cyclomatic complexity of the method is 9
Complex Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AddinReference,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AddinProperty,Cyclomatic complexity of the method is 9
Complex Method,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_Repository,Cyclomatic complexity of the method is 11
Complex Method,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinInfo,Cyclomatic complexity of the method is 15
Complex Method,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,Install,Cyclomatic complexity of the method is 9
Complex Method,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,Uninstall,Cyclomatic complexity of the method is 8
Complex Method,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,PrintAddinInfo,Cyclomatic complexity of the method is 20
Complex Method,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,PrintAddinXml,Cyclomatic complexity of the method is 18
Complex Method,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,PrintAddin,Cyclomatic complexity of the method is 11
Complex Method,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,PrintExtensionPoint,Cyclomatic complexity of the method is 9
Complex Method,Mono.Addins.Setup,RepositoryRegistry,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryRegistry.cs,GetAvailableAddin,Cyclomatic complexity of the method is 10
Complex Method,Mono.Addins.Setup,SetupService,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupService.cs,BuildPackageInternal,Cyclomatic complexity of the method is 12
Complex Method,Mono.Addins.Setup,SetupService,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupService.cs,BuildRepository,Cyclomatic complexity of the method is 14
Complex Method,Mono.Addins.Setup,TextFormatter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\TextFormatter.cs,Append,Cyclomatic complexity of the method is 9
Complex Method,Mono.Addins.Setup.ProgressMonitoring,ConsoleProgressMonitor,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup.ProgressMonitoring\ConsoleProgressMonitor.cs,WriteText,Cyclomatic complexity of the method is 11
Long Parameter List,Mono.Addins.Setup,AddinPackage,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinPackage.cs,Resolve,The method has 6 parameters. Parameters: monitor' service' toInstall' toUninstall' installedRequired' unresolved
Long Parameter List,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,ResolveDependencies,The method has 5 parameters. Parameters: statusMonitor' addins' resolved' toUninstall' unresolved
Long Parameter List,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,ResolveDependency,The method has 7 parameters. Parameters: monitor' dep' parentPackage' toInstall' toUninstall' installedRequired' unresolved
Long Parameter List,Mono.Addins.Setup,AddinSystemConfigurationWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,WriteObject_AddinSystemConfiguration,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,AddinSystemConfigurationWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,WriteObject_RepositoryRecord,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,Package,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\Package.cs,Resolve,The method has 6 parameters. Parameters: monitor' service' toInstall' toUninstall' required' unresolved
Long Parameter List,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_Repository,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_ReferenceRepositoryEntry,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_PackageRepositoryEntry,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinInfo,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AssemblyDependency,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_NativeReference,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinReference,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinProperty,The method has 6 parameters. Parameters: ob' element' namesp' isNullable' needType' writeWrappingElem
Long Parameter List,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,PrintExtensionNodeSetXml,The method has 5 parameters. Parameters: tw' desc' nset' list' visited
Long Parameter List,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,AddCommand,The method has 7 parameters. Parameters: category' command' shortName' arguments' description' longDescription' handler
Long Parameter List,Mono.Addins.Setup,RepositoryRegistry,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryRegistry.cs,GetAvailableAddin,The method has 5 parameters. Parameters: repositoryUrl' id' version' updates' flags
Long Parameter List,Mono.Addins.Setup,SetupService,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupService.cs,ResolveDependencies,The method has 5 parameters. Parameters: statusMonitor' addins' resolved' toUninstall' unresolved
Long Parameter List,Mono.Addins.Setup,SetupService,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupService.cs,BuildRepository,The method has 5 parameters. Parameters: monitor' rootrep' rootPath' relFilePath' allAddins
Long Statement,Mono.Addins.Setup,AddinPackage,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinPackage.cs,PrepareInstall,The length of the statement  "				throw new InstallException ("The addin " + info.Name + " v" + info.Version + " is scheduled for uninstallation. Please restart the application before trying to install it again."); " is 180.
Long Statement,Mono.Addins.Setup,AddinPackage,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinPackage.cs,PrepareUninstall,The length of the statement  "				monitor.ReportWarning (string.Format ("The add-in '{0}' is scheduled for uninstalling' but the add-in file could not be found."' info.Name)); " is 141.
Long Statement,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,ResolveDependencies,The length of the statement  "					monitor.ReportError ("The addin " + ap.Addin.Name + " v" + ap.Addin.Version + " is scheduled for uninstallation. Please restart the application before trying to re-install it."' null); " is 184.
Long Statement,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,GetUninstallErrorNoRoot,The length of the statement  "			return string.Format ("The add-in '{0} v{1}' can't be uninstalled with the current user permissions."' ainfo.Name' ainfo.Version); " is 130.
Long Statement,Mono.Addins.Setup,AddinSystemConfigurationReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,ReadObject_AddinSystemConfiguration,The length of the statement  "			ob = (Mono.Addins.Setup.AddinSystemConfiguration) Activator.CreateInstance(typeof(Mono.Addins.Setup.AddinSystemConfiguration)' true); " is 133.
Long Statement,Mono.Addins.Setup,AddinSystemConfigurationWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,WriteObject_AddinSystemConfiguration,The length of the statement  "					WriteObject_RepositoryRecord (((Mono.Addins.Setup.RepositoryRecord) ob.@Repositories[n22])' "Repository"' ""' false' false' true); " is 130.
Long Statement,Mono.Addins.Setup,AddinSystemConfigurationWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinSystemConfigurationReaderWriter.cs,WriteObject_RepositoryRecord,The length of the statement  "			WriteElementString ("LastModified"' ""' XmlConvert.ToString (ob.@LastModified' XmlDateTimeSerializationMode.RoundtripKind)); " is 124.
Long Statement,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_PackageRepositoryEntry,The length of the statement  "			ob = (Mono.Addins.Setup.PackageRepositoryEntry) Activator.CreateInstance(typeof(Mono.Addins.Setup.PackageRepositoryEntry)' true); " is 129.
Long Statement,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_ReferenceRepositoryEntry,The length of the statement  "			ob = (Mono.Addins.Setup.ReferenceRepositoryEntry) Activator.CreateInstance(typeof(Mono.Addins.Setup.ReferenceRepositoryEntry)' true); " is 133.
Long Statement,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AddinInfo,The length of the statement  "			bool b17=false' b18=false' b19=false' b20=false' b21=false' b22=false' b23=false' b24=false' b25=false' b26=false' b27=false' b28=false' b29=false; " is 147.
Long Statement,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AssemblyDependency,The length of the statement  "			ob = (Mono.Addins.Description.AssemblyDependency) Activator.CreateInstance(typeof(Mono.Addins.Description.AssemblyDependency)' true); " is 133.
Long Statement,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_NativeReference,The length of the statement  "			ob = (Mono.Addins.Description.NativeDependency) Activator.CreateInstance(typeof(Mono.Addins.Description.NativeDependency)' true); " is 129.
Long Statement,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AddinReference,The length of the statement  "			ob = (Mono.Addins.Description.AddinDependency) Activator.CreateInstance(typeof(Mono.Addins.Description.AddinDependency)' true); " is 127.
Long Statement,Mono.Addins.Setup,RepositoryReader,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,ReadObject_AddinProperty,The length of the statement  "			ob = (Mono.Addins.Description.AddinProperty) Activator.CreateInstance(typeof(Mono.Addins.Description.AddinProperty)' true); " is 123.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_Repository,The length of the statement  "					WriteObject_ReferenceRepositoryEntry (((Mono.Addins.Setup.ReferenceRepositoryEntry) ob.@Repositories[n51])' "Repository"' ""' false' false' true); " is 146.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_Repository,The length of the statement  "					WriteObject_PackageRepositoryEntry (((Mono.Addins.Setup.PackageRepositoryEntry) ob.@Addins[n52])' "Addin"' ""' false' false' true); " is 131.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_ReferenceRepositoryEntry,The length of the statement  "			WriteElementString ("LastModified"' ""' XmlConvert.ToString (ob.@LastModified' XmlDateTimeSerializationMode.RoundtripKind)); " is 124.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinInfo,The length of the statement  "						WriteObject_AssemblyDependency (((Mono.Addins.Description.AssemblyDependency) ob.@Dependencies[n53])' "AssemblyDependency"' ""' false' false' true); " is 148.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinInfo,The length of the statement  "						WriteObject_NativeReference (((Mono.Addins.Description.NativeDependency) ob.@Dependencies[n53])' "NativeDependency"' ""' false' false' true); " is 141.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinInfo,The length of the statement  "						WriteObject_AddinReference (((Mono.Addins.Description.AddinDependency) ob.@Dependencies[n53])' "AddinDependency"' ""' false' false' true); " is 138.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinInfo,The length of the statement  "						WriteObject_AssemblyDependency (((Mono.Addins.Description.AssemblyDependency) ob.@OptionalDependencies[n54])' "AssemblyDependency"' ""' false' false' true); " is 156.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinInfo,The length of the statement  "						WriteObject_NativeReference (((Mono.Addins.Description.NativeDependency) ob.@OptionalDependencies[n54])' "NativeDependency"' ""' false' false' true); " is 149.
Long Statement,Mono.Addins.Setup,RepositoryWriter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryReaderWriter.cs,WriteObject_AddinInfo,The length of the statement  "						WriteObject_AddinReference (((Mono.Addins.Description.AddinDependency) ob.@OptionalDependencies[n54])' "AddinDependency"' ""' false' false' true); " is 146.
Long Statement,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,IsHidden,The length of the statement  "			return service.ApplicationNamespace != null && !(ainfo.Namespace + ".").StartsWith (service.ApplicationNamespace + ".") || ainfo.Description.IsHidden; " is 150.
Long Statement,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,IsHidden,The length of the statement  "			return service.ApplicationNamespace != null && !(ainfo.Namespace + ".").StartsWith (service.ApplicationNamespace + "."); " is 120.
Long Statement,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,BuildPackage,The length of the statement  "			service.BuildPackage (new ConsoleProgressStatus (verbose)' bool.Parse (GetOption ("debugSymbols"' "false"))' GetOption ("d"' ".")' GetArguments ()); " is 148.
Long Statement,Mono.Addins.Setup,SetupService,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupService.cs,GenerateIndexPage,The length of the statement  "				sw.WriteLine ("<tr><td>" + entry.Addin.Name + "</td><td>" + entry.Addin.Version + "</td><td>" + entry.Addin.Description + "</td></tr>"); " is 136.
Long Statement,Mono.Addins.Setup,ConsoleAddinInstaller,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\ConsoleAddinInstaller.cs,InstallAddins,The length of the statement  "			setup.Install (new ConsoleProgressStatus (logLevel)' (AddinRepositoryEntry[]) entries.ToArray (typeof(AddinRepositoryEntry))); " is 126.
Long Statement,Mono.PkgConfig,PcFileCache<TP>,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\PcFileCache.cs,WritePackage,The length of the statement  "			tw.WriteAttributeString ("lastWriteTime"' XmlConvert.ToString (pinfo.LastWriteTime' XmlDateTimeSerializationMode.Local)); " is 121.
Long Statement,Mono.PkgConfig,PcFileCache<TP>,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\PcFileCache.cs,ReadPackage,The length of the statement  "					case "lastWriteTime": pinfo.LastWriteTime = XmlConvert.ToDateTime (tr.Value' XmlDateTimeSerializationMode.Local); break; " is 120.
Complex Conditional,Mono.Addins.Setup,RepositoryRegistry,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryRegistry.cs,UpdateRepository,The conditional expression  "((url == null && rr.Enabled) || rr.Url == url) && !rr.IsReference"  is complex.
Complex Conditional,Mono.Addins.Setup,RepositoryRegistry,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryRegistry.cs,GetAvailableAddin,The conditional expression  "(id == null || Addin.GetIdName (addin.Addin.Id) == id) && (version == null || addin.Addin.Version == version)"  is complex.
Empty Catch Block,Mono.Addins.Setup,SetupService,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupService.cs,BuildPackageInternal,The method has an empty catch block.
Magic Number,Mono.Addins.Setup,AddinPackage,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinPackage.cs,PrepareInstall,The following statement contains a magic number: using (FileStream fs = new FileStream (packFile' FileMode.Open' FileAccess.Read)) {  				ZipFile zip = new ZipFile (fs);  				try {  					foreach (ZipEntry entry in zip) {  						string name;  						if (Path.PathSeparator == '\\')  							name = entry.Name.Replace ('/'' '\\');  						else  							name = entry.Name.Replace ('\\'' '/');  						string path = Path.Combine (tempFolder' name);  						string dir = Path.GetDirectoryName (path);  						if (!Directory.Exists (dir))  							Directory.CreateDirectory (dir);    						byte [] buffer = new byte [8192];  						int n = 0;  						Stream inStream = zip.GetInputStream (entry);  						Stream outStream = null;  						try {  							outStream = File.Create (path);  							while ((n = inStream.Read (buffer' 0' buffer.Length)) > 0)  								outStream.Write (buffer' 0' n);  						} finally {  							inStream.Close ();  							if (outStream != null)  								outStream.Close ();  						}  					}  				} finally {  					zip.Close ();  				}   			}
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Install,The following statement contains a magic number: monitor.BeginTask ("Installing add-ins..."' 100);
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Install,The following statement contains a magic number: monitor.BeginStepTask ("Initializing installation"' toUninstall.Count + packs.Count + 1' 75);
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Install,The following statement contains a magic number: monitor.BeginStepTask ("Installing"' toUninstall.Count + packs.Count + 1' 20);
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Install,The following statement contains a magic number: if (rollback) {  				monitor.BeginStepTask ("Finishing installation"' (prepared.Count + uninstallPrepared.Count)*2 + 1' 5);  			  				foreach (Package mpack in prepared) {  					try {  						mpack.RollbackInstall (monitor' this);  						monitor.Step (1);  					} catch (Exception ex) {  						ReportException (monitor' ex);  					}  				}  			  				foreach (Package mpack in uninstallPrepared) {  					try {  						mpack.RollbackUninstall (monitor' this);  						monitor.Step (1);  					} catch (Exception ex) {  						ReportException (monitor' ex);  					}  				}  			} else  				monitor.BeginStepTask ("Finishing installation"' prepared.Count + uninstallPrepared.Count + 1' 5);
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Install,The following statement contains a magic number: if (rollback) {  				monitor.BeginStepTask ("Finishing installation"' (prepared.Count + uninstallPrepared.Count)*2 + 1' 5);  			  				foreach (Package mpack in prepared) {  					try {  						mpack.RollbackInstall (monitor' this);  						monitor.Step (1);  					} catch (Exception ex) {  						ReportException (monitor' ex);  					}  				}  			  				foreach (Package mpack in uninstallPrepared) {  					try {  						mpack.RollbackUninstall (monitor' this);  						monitor.Step (1);  					} catch (Exception ex) {  						ReportException (monitor' ex);  					}  				}  			} else  				monitor.BeginStepTask ("Finishing installation"' prepared.Count + uninstallPrepared.Count + 1' 5);
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Install,The following statement contains a magic number: if (rollback) {  				monitor.BeginStepTask ("Finishing installation"' (prepared.Count + uninstallPrepared.Count)*2 + 1' 5);  			  				foreach (Package mpack in prepared) {  					try {  						mpack.RollbackInstall (monitor' this);  						monitor.Step (1);  					} catch (Exception ex) {  						ReportException (monitor' ex);  					}  				}  			  				foreach (Package mpack in uninstallPrepared) {  					try {  						mpack.RollbackUninstall (monitor' this);  						monitor.Step (1);  					} catch (Exception ex) {  						ReportException (monitor' ex);  					}  				}  			} else  				monitor.BeginStepTask ("Finishing installation"' prepared.Count + uninstallPrepared.Count + 1' 5);
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,Uninstall,The following statement contains a magic number: foreach (string id in ids) {  				bool rollback = false;  				ArrayList toUninstall = new ArrayList ();  				ArrayList uninstallPrepared = new ArrayList ();  				  				Addin ia = service.Registry.GetAddin (id);  				if (ia == null)  					throw new InstallException ("The add-in '" + id + "' is not installed.");  	  				toUninstall.Add (AddinPackage.FromInstalledAddin (ia));  	  				Addin[] deps = GetDependentAddins (id' true);  				foreach (Addin dep in deps)  					toUninstall.Add (AddinPackage.FromInstalledAddin (dep));  				  				monitor.BeginTask ("Deleting files"' toUninstall.Count*2 + uninstallPrepared.Count + 1);  				  				// Prepare install  				  				foreach (Package mpack in toUninstall) {  					try {  						mpack.PrepareUninstall (monitor' this);  						monitor.Step (1);  						uninstallPrepared.Add (mpack);  					} catch (Exception ex) {  						ReportException (monitor' ex);  						rollback = true;  						break;  					}  				}  				  				// Commit install  				  				if (!rollback) {  					foreach (Package mpack in toUninstall) {  						try {  							mpack.CommitUninstall (monitor' this);  							monitor.Step (1);  						} catch (Exception ex) {  							ReportException (monitor' ex);  							rollback = true;  							break;  						}  					}  				}  				  				// Rollback if failed  				  				if (rollback) {  					monitor.BeginTask ("Rolling back uninstall"' uninstallPrepared.Count);  					foreach (Package mpack in uninstallPrepared) {  						try {  							mpack.RollbackUninstall (monitor' this);  						} catch (Exception ex) {  							ReportException (monitor' ex);  						}  					}  					monitor.EndTask ();  				}  				monitor.Step (1);  	  				// Cleanup  				  				foreach (Package mpack in uninstallPrepared) {  					try {  						mpack.EndUninstall (monitor' this);  						monitor.Step (1);  					} catch (Exception ex) {  						monitor.Log.WriteLine (ex);  					}  				}  				  				monitor.EndTask ();  				monitor.Step (1);  			}
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,DownloadFile,The following statement contains a magic number: try {  				monitor.BeginTask ("Requesting " + url' 2);  				var resp = WebRequestHelper.GetResponse (  					() => (HttpWebRequest)WebRequest.Create (url)'  					r => r.Headers ["Pragma"] = "no-cache"  				);  				monitor.Step (1);  				monitor.BeginTask ("Downloading " + url' (int) resp.ContentLength);    				file = Path.GetTempFileName ();  				fs = new FileStream (file' FileMode.Create' FileAccess.Write);  					s = resp.GetResponseStream ();  				byte[] buffer = new byte [4096];  				  				int n;  				while ((n = s.Read (buffer' 0' buffer.Length)) != 0) {  					monitor.Step (n);  					fs.Write (buffer' 0' n);  					if (monitor.IsCancelRequested)  						throw new InstallException ("Installation cancelled.");  				}  				fs.Close ();  				s.Close ();  				return file;  			} catch {  				if (fs != null)  					fs.Close ();  				if (s != null)  					s.Close ();  				if (file != null)  					File.Delete (file);  				throw;  			} finally {  				monitor.EndTask ();  				monitor.EndTask ();  			}
Magic Number,Mono.Addins.Setup,AddinStore,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\AddinStore.cs,DownloadFile,The following statement contains a magic number: try {  				monitor.BeginTask ("Requesting " + url' 2);  				var resp = WebRequestHelper.GetResponse (  					() => (HttpWebRequest)WebRequest.Create (url)'  					r => r.Headers ["Pragma"] = "no-cache"  				);  				monitor.Step (1);  				monitor.BeginTask ("Downloading " + url' (int) resp.ContentLength);    				file = Path.GetTempFileName ();  				fs = new FileStream (file' FileMode.Create' FileAccess.Write);  					s = resp.GetResponseStream ();  				byte[] buffer = new byte [4096];  				  				int n;  				while ((n = s.Read (buffer' 0' buffer.Length)) != 0) {  					monitor.Step (n);  					fs.Write (buffer' 0' n);  					if (monitor.IsCancelRequested)  						throw new InstallException ("Installation cancelled.");  				}  				fs.Close ();  				s.Close ();  				return file;  			} catch {  				if (fs != null)  					fs.Close ();  				if (s != null)  					s.Close ();  				if (file != null)  					File.Delete (file);  				throw;  			} finally {  				monitor.EndTask ();  				monitor.EndTask ();  			}
Magic Number,Mono.Addins.Setup,Repository,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\Repository.cs,BeginDownloadSupportFile,The following statement contains a magic number: WebRequestHelper.GetResponseAsync (() => (HttpWebRequest)WebRequest.Create (u)).ContinueWith (t => {  				try {  					var resp = t.Result;  					string dir = Path.GetDirectoryName (res.FilePath);  					lock (this) {  						if (!Directory.Exists (dir))  							Directory.CreateDirectory (dir);  					}  					byte[] buffer = new byte [8092];  					using (var s = resp.GetResponseStream ()) {  						using (var f = File.OpenWrite (res.FilePath)) {  							int nr = 0;  							while ((nr = s.Read (buffer' 0' buffer.Length)) > 0)  								f.Write (buffer' 0' nr);  						}  					}  				} catch (Exception ex) {  					res.Error = ex;  				}  			});
Magic Number,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,ListRepositories,The following statement contains a magic number: foreach (RepositoryRecord rep in reps) {  				string num = n.ToString ();  				Console.Write (num + ") ");  				if (!rep.Enabled)  					Console.Write ("(Disabled) ");  				Console.WriteLine (rep.Title);  				if (rep.Title != rep.Url)  					Console.WriteLine (new string (' '' num.Length + 2) + rep.Url);  				n++;  			}
Magic Number,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,PrintHelp,The following statement contains a magic number: if (parms.Length == 0) {  				string lastCat = null;  				foreach (SetupCommand cmd in commands) {  					if (cmd.Command == "help")  						continue;  					if (lastCat != cmd.Category) {  						Console.WriteLine ();  						Console.WriteLine (cmd.Category + ":");  						lastCat = cmd.Category;  					}  					string cc = cmd.CommandDesc;  					if (cc.Length < 16)  						cc += new string (' '' 16 - cc.Length);  					Console.WriteLine ("  " + cc + " " + cmd.Description);  				}  				Console.WriteLine ();  				Console.WriteLine ("Run '" + setupAppName + "help <command>' to get help about a specific command.");  				Console.WriteLine ();  				return;  			}  			else {  				Console.WriteLine ();  				SetupCommand cmd = FindCommand (parms [0]);  				if (cmd != null) {  					Console.WriteLine ("{0}: {1}"' cmd.CommandDesc' cmd.Description);  					Console.WriteLine ();  					Console.WriteLine ("Usage: {0}{1}"' setupAppName' cmd.Usage);  					Console.WriteLine ();  					  					TextFormatter fm = new TextFormatter ();  					fm.Wrap = WrappingType.Word;  					fm.Append (cmd.LongDescription);  					Console.WriteLine (fm.ToString ());  				}  				else  					Console.WriteLine ("Unknown command: " + parms [0]);  				Console.WriteLine ();  			}
Magic Number,Mono.Addins.Setup,SetupTool,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupTool.cs,PrintHelp,The following statement contains a magic number: if (parms.Length == 0) {  				string lastCat = null;  				foreach (SetupCommand cmd in commands) {  					if (cmd.Command == "help")  						continue;  					if (lastCat != cmd.Category) {  						Console.WriteLine ();  						Console.WriteLine (cmd.Category + ":");  						lastCat = cmd.Category;  					}  					string cc = cmd.CommandDesc;  					if (cc.Length < 16)  						cc += new string (' '' 16 - cc.Length);  					Console.WriteLine ("  " + cc + " " + cmd.Description);  				}  				Console.WriteLine ();  				Console.WriteLine ("Run '" + setupAppName + "help <command>' to get help about a specific command.");  				Console.WriteLine ();  				return;  			}  			else {  				Console.WriteLine ();  				SetupCommand cmd = FindCommand (parms [0]);  				if (cmd != null) {  					Console.WriteLine ("{0}: {1}"' cmd.CommandDesc' cmd.Description);  					Console.WriteLine ();  					Console.WriteLine ("Usage: {0}{1}"' setupAppName' cmd.Usage);  					Console.WriteLine ();  					  					TextFormatter fm = new TextFormatter ();  					fm.Wrap = WrappingType.Word;  					fm.Append (cmd.LongDescription);  					Console.WriteLine (fm.ToString ());  				}  				else  					Console.WriteLine ("Unknown command: " + parms [0]);  				Console.WriteLine ();  			}
Magic Number,Mono.Addins.Setup,RepositoryRegistry,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\RepositoryRegistry.cs,UpdateRepository,The following statement contains a magic number: monitor.BeginTask ("Updating from " + absUri.ToString ()' 2);
Magic Number,Mono.Addins.Setup,SetupService,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupService.cs,BuildPackageInternal,The following statement contains a magic number: s.SetLevel(5);
Magic Number,Mono.Addins.Setup,SetupService,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\SetupService.cs,ExtractSupportFiles,The following statement contains a magic number: try {  				foreach (var prop in ainfo.Properties) {  					ZipEntry ze = zfile.GetEntry (prop.Value);  					if (ze != null) {  						string fname;  						do {  							fname = Path.Combine (targetDir' r.Next ().ToString ("x") + Path.GetExtension (prop.Value));  						} while (File.Exists (fname));    						if (!Directory.Exists (targetDir))  							Directory.CreateDirectory (targetDir);    						using (var f = File.OpenWrite (fname)) {  							using (Stream s = zfile.GetInputStream (ze)) {  								byte [] buffer = new byte [8092];  								int nr = 0;  								while ((nr = s.Read (buffer' 0' buffer.Length)) > 0)  									f.Write (buffer' 0' nr);  							}  						}  						prop.Value = Path.Combine (addinFilesDir' Path.GetFileName (fname));  					}  				}  			} finally {  				zfile.Close ();  			}
Magic Number,Mono.Addins.Setup,TextFormatter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\TextFormatter.cs,TextFormatter,The following statement contains a magic number: MaxColumns = 80;
Magic Number,Mono.Addins.Setup,TextFormatter,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\TextFormatter.cs,TextFormatter,The following statement contains a magic number: TabWidth = 4;
Magic Number,Mono.PkgConfig,PcFileCache<TP>,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\PcFileCache.cs,OpenFile,The following statement contains a magic number: int retries = 6;
Magic Number,Mono.PkgConfig,PcFileCache<TP>,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\PcFileCache.cs,OpenFile,The following statement contains a magic number: while (retries > 0) {  				try {  					return new FileStream (cacheFile' mode' access' FileShare.None);  				} catch (Exception ex) {  					// the file may be locked by another app. Wait a bit and try again  					lastException = ex;  					System.Threading.Thread.Sleep (200);  					retries--;  				}  			}
Magic Number,Mono.PkgConfig,PcFileCache<TP>,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\PcFileCache.cs,GetPkgconfigPaths,The following statement contains a magic number: if (prefix == null)  				prefix = PathUp (typeof (int).Assembly.Location' 4);
Magic Number,Mono.PkgConfig,PcFile,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\PcFileCache.cs,Evaluate,The following statement contains a magic number: while (i != -1 && i < value.Length) {  				sb.Append (value' last' i - last);  				if (i == 0 || value [i - 1] != '$') {  					// Evaluate if var is not escaped  					i += 2;  					int n = value.IndexOf ('}'' i);  					if (n == -1 || n == i) {  						// Closing bracket not found or empty name  						HasErrors = true;  						return value;  					}  					string rname = value.Substring (i' n - i);  					string rval;  					if (variables.TryGetValue (rname' out rval))  						sb.Append (rval);  					else {  						HasErrors = true;  						return value;  					}  					i = n + 1;  					last = i;  				} else  					last = i++;  				  				if (i < value.Length - 1)  					i = value.IndexOf ("${"' i);  			}
Missing Default,Mono.PkgConfig,PcFile,C:\repos\mono_mono-addins\Mono.Addins.Setup\Mono.Addins.Setup\PcFileCache.cs,Load,The following switch statement is missing a default case: switch (var) {  							case "Name": Name = value; break;  							case "Description": Description = value; break;  							case "Version": Version = value; break;  							case "Libs": Libs = value; break;  						}
