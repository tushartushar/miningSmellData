Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoDevelop.ConnectedServices,CodeDependency,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\CodeDependency.cs,UpdateMethodWithCodeDependency,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceDetailsWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceDetailsWidget.cs,LoadService,Cyclomatic complexity of the method is 8
Long Identifier,MonoDevelop.ConnectedServices,ConnectedServices,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\ConnectedServices.cs,,The length of the parameter ServiceProvidersExtensionPoint is 30.
Long Identifier,MonoDevelop.ConnectedServices,ConnectedServices,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\ConnectedServices.cs,,The length of the parameter GettingStartedSectionDisplayName is 32.
Long Statement,MonoDevelop.ConnectedServices,Extensions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Extensions.cs,PackageAdded,The length of the statement  "			return PackageManagementServices.ProjectOperations.GetInstalledPackages (project).Any (p => p.Id == dependency.PackageId);" is 122.
Long Statement,MonoDevelop.ConnectedServices,ConnectedService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\ConnectedService.cs,RemoveFromProject,The length of the statement  "					// TODO: notify the user about the dependencies that failed' we might already have this from the package console and that might be enough for now" is 145.
Long Statement,MonoDevelop.ConnectedServices.Gui.SolutionPad,ConnectedServicesFolderNodeHiderExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.SolutionPad\ConnectedServicesFolderNodeHiderExtension.cs,GetNodeAttributes,The length of the statement  "			if (parentNode != null && parentNode.DataItem is DotNetProject && folder.Path.FileName == ConnectedServices.ProjectStateFolderName)" is 131.
Long Statement,MonoDevelop.ConnectedServices.Gui.SolutionPad,ConnectedServiceNodeBuilder,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.SolutionPad\ConnectedServiceNodeBuilder.cs,GetServiceStateFolder,The length of the statement  "				var serviceFolder = Path.GetDirectoryName (JsonFileConnectedService.GetConnectedServiceJsonFilePath (serviceNode.Project' serviceNode.Id' false));" is 146.
Long Statement,MonoDevelop.ConnectedServices.Gui.SolutionPad,ConnectedServiceFolderNode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.SolutionPad\ConnectedServiceFolderNode.cs,CreateChildNodes,The length of the statement  "			foreach (var service in Project.GetConnectedServicesBinding ()?.SupportedServices.Where (x => x.Status == Status.Added))" is 120.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,DependencyWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\DependenciesSectionWidget.cs,HandleDependencyAddingFailed,The length of the statement  "				statusLabel.Markup = GettextCatalog.GetString ("Adding failed") + " (<a>" + GettextCatalog.GetString ("Retry") + "</a>)";" is 121.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,HandleAddButtonClicked,The length of the statement  "				foreach (DotNetProject project in service.Project.ParentSolution.GetAllProjects ().Where (p => p is DotNetProject && p != service.Project)) {" is 141.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,HandleAddButtonClicked,The length of the statement  "					var question = new Xwt.QuestionMessage (GettextCatalog.GetString ("Add {0} to {1}"' this.Service.DisplayName' this.Service.Project.Name));" is 138.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,HandleAddButtonClicked,The length of the statement  "					question.SecondaryText = GettextCatalog.GetString ("Also add '{0}' to other projects in the solution?"' this.Service.DisplayName);" is 130.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,HandleAddButtonClicked,The length of the statement  "										servicesToAdd.Add (project.Value.GetConnectedServicesBinding ()?.SupportedServices.FirstOrDefault (s => s.Id == service.Id));" is 125.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateServiceStatus,The length of the statement  "					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject" is 129.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateServiceStatus,The length of the statement  "					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject" is 129.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateDescription,The length of the statement  "				description.Markup = "<span foreground='" + Styles.SecondaryTextColor.ToHexString (false) + "'>" + (service.DetailsDescription ?? service.Description) + "</span>";" is 163.
Long Statement,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateDescription,The length of the statement  "				description.Markup = "<span foreground='" + Styles.SecondaryTextColor.ToHexString (false) + "'>" + service.Description + "</span>";" is 131.
Complex Conditional,MonoDevelop.ConnectedServices,PackageDependency,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\PackageDependency.cs,OnStatusChange,The conditional expression  "(newStatus == Status.Added && oldStatus == Status.Adding) || 			    (newStatus == Status.NotAdded && oldStatus == Status.Removing)"  is complex.
Virtual Method Call from Constructor,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The constructor "ConfigurationSectionWidget" calls a virtual method "GetSectionWidget".
Empty Catch Block,MonoDevelop.ConnectedServices,Extensions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Extensions.cs,RemovePackageDependency,The method has an empty catch block.
Empty Catch Block,MonoDevelop.ConnectedServices,Extensions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Extensions.cs,RemovePackageDependencies,The method has an empty catch block.
Magic Number,MonoDevelop.ConnectedServices,CodeDependency,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\CodeDependency.cs,OnAddToProject,The following statement contains a magic number: keepTrying = tryCount <= 3;
Magic Number,MonoDevelop.ConnectedServices,CodeDependency,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\CodeDependency.cs,OnRemoveFromProject,The following statement contains a magic number: keepTrying = tryCount <= 3;
Magic Number,MonoDevelop.ConnectedServices.Gui.SolutionPad,ConnectedServicesFolderNodeBuilder,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.SolutionPad\ConnectedServicesFolderNodeBuilder.cs,GetSortIndex,The following statement contains a magic number: return -1500;
Magic Number,MonoDevelop.ConnectedServices.DebugService,TestDebugConfigurationSection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\DebugService\TestDebugService.cs,OnAddToProject,The following statement contains a magic number: await Task.Delay (1000).ConfigureAwait (false);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServicesGalleryWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServicesGalleryWidget.cs,ServicesGalleryWidget,The following statement contains a magic number: enabledLabel = new Label (GettextCatalog.GetString ("Added")) { Font = Font.WithSize (14) };
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServicesGalleryWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServicesGalleryWidget.cs,ServicesGalleryWidget,The following statement contains a magic number: availableLabel = new Label (GettextCatalog.GetString ("Available")) { Font = Font.WithSize (14) };
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServicesGalleryWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServicesGalleryWidget.cs,ServicesGalleryWidget,The following statement contains a magic number: enabledLabel.MarginLeft = availableLabel.MarginLeft = 15;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServicesGalleryWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServicesGalleryWidget.cs,ServicesGalleryWidget,The following statement contains a magic number: enabledLabel.MarginTop = availableLabel.MarginTop = 5;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServicesGalleryWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServicesGalleryWidget.cs,ServicesGalleryWidget,The following statement contains a magic number: enabledLabel.MarginBottom = availableLabel.MarginBottom = 5;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServicesGalleryWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServicesGalleryWidget.cs,ServicesGalleryWidget,The following statement contains a magic number: container.Margin = 30;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServicesGalleryWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServicesGalleryWidget.cs,LoadServices,The following statement contains a magic number: serviceWidget.MarginTop = 5;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceDetailsWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceDetailsWidget.cs,ServiceDetailsWidget,The following statement contains a magic number: Margin = 30;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceDetailsWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceDetailsWidget.cs,ServiceDetailsWidget,The following statement contains a magic number: details.CornerRadius = new Components.RoundedFrameBox.BorderCornerRadius (6' 6' 0' 0);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceDetailsWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceDetailsWidget.cs,ServiceDetailsWidget,The following statement contains a magic number: details.CornerRadius = new Components.RoundedFrameBox.BorderCornerRadius (6' 6' 0' 0);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceDetailsWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceDetailsWidget.cs,LoadService,The following statement contains a magic number: lastSection.CornerRadius = new Components.RoundedFrameBox.BorderCornerRadius (0' 0' 6' 6);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceDetailsWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceDetailsWidget.cs,LoadService,The following statement contains a magic number: lastSection.CornerRadius = new Components.RoundedFrameBox.BorderCornerRadius (0' 0' 6' 6);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: Padding = new WidgetSpacing (15' 4' 15' 5);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: Padding = new WidgetSpacing (15' 4' 15' 5);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: Padding = new WidgetSpacing (15' 4' 15' 5);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: Padding = new WidgetSpacing (15' 4' 15' 5);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: header.Spacing = 7;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: header.MarginRight = 15;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: header.MinHeight = 36;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: statusBox.MarginLeft = 10;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: statusBox.Spacing = 3;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: headerTitle.Spacing = 7;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: addBtn.MinWidth = 128;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: addBtn.MinHeight = 34;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: sectionWidget.MarginLeft = sectionWidget.MarginRight = 15;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ConfigurationSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ConfigurationSectionWidget.cs,ConfigurationSectionWidget,The following statement contains a magic number: sectionWidget.MarginBottom = 20;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,DependenciesSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\DependenciesSectionWidget.cs,DependenciesSectionWidget,The following statement contains a magic number: categoryBox.MarginTop += 5;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,DependenciesSectionWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\DependenciesSectionWidget.cs,DependenciesSectionWidget,The following statement contains a magic number: var dependenciesGroup = new VBox () { 					MarginLeft = category.Icon.Size.Width / 2 				};
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,DependencyWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\DependenciesSectionWidget.cs,HandleDependencyAdding,The following statement contains a magic number: Runtime.RunInMainThread (delegate { 				nameLabel.TextColor = Styles.SecondaryTextColor; 				iconView.Image = Dependency.Icon.WithSize (Xwt.IconSize.Small).WithAlpha (0.4);  				SetStatusIcon ("md-spinner-16"); 				statusLabel.Markup = GettextCatalog.GetString ("Adding\u2026"); 				statusLabel.Visible = true; 			});
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,DependencyWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\DependenciesSectionWidget.cs,HandleDependencyAddingFailed,The following statement contains a magic number: Runtime.RunInMainThread (delegate { 				nameLabel.TextColor = Styles.SecondaryTextColor; 				iconView.Image = Dependency.Icon.WithSize (Xwt.IconSize.Small).WithAlpha (0.4); 				SetStatusIcon ("md-error"); 				statusLabel.Markup = GettextCatalog.GetString ("Adding failed") + " (<a>" + GettextCatalog.GetString ("Retry") + "</a>)"; 				statusLabel.Visible = true; 			});
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: CornerRadius = new BorderCornerRadius (6' 6' 6' 6);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: CornerRadius = new BorderCornerRadius (6' 6' 6' 6);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: CornerRadius = new BorderCornerRadius (6' 6' 6' 6);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: CornerRadius = new BorderCornerRadius (6' 6' 6' 6);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: Padding = 30;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: image.MarginBottom = 2;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: title.Font = Xwt.Drawing.Font.SystemFont.WithSize (16);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: statusWidget.Spacing = 3;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: statusText = new Label () { 				Font = Font.WithSize (12)' 				TextColor = Styles.SecondaryTextColor' 			};
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: statusWidget.MarginLeft = 5;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: addButton.MinWidth = 128;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: addButton.MinHeight = 34;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: header.Spacing = 5;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: vbox.Spacing = 6;
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: description = new MarkupView { 				Selectable = false' 				LineSpacing = 6' 				MinWidth = 640' 				BackgroundColor = Styles.BaseBackgroundColor' 			};
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: description = new MarkupView { 				Selectable = false' 				LineSpacing = 6' 				MinWidth = 640' 				BackgroundColor = Styles.BaseBackgroundColor' 			};
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,ServiceWidget,The following statement contains a magic number: platformWidget.PackStart (new Label { Text = GettextCatalog.GetString ("Platforms:")' TextColor = Styles.SecondaryTextColor }' marginRight: 20);
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateServiceStatus,The following statement contains a magic number: Runtime.RunInMainThread (delegate {  				StopIconAnimations (); 				statusWidget.Visible = !showDetails && Service.Status != Status.NotAdded; 				addButton.Sensitive = Service.Status == Status.NotAdded;  				switch (Service.Status) { 				case Status.NotAdded: 					addButton.Label = GettextCatalog.GetString ("Add"); 					addButton.Image = statusIcon.Image = null;  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Added: 					addButton.Label = statusText.Text = GettextCatalog.GetString ("Added"); 					addButton.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small).WithAlpha (0.4); 					statusIcon.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small);  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Adding: 				case Status.Removing: 					addButton.Label = statusText.Text = 						Service.Status == Status.Adding 						? GettextCatalog.GetString ("Adding\u2026") 						: GettextCatalog.GetString ("Removing\u2026"); 					if (statusIconAnimation == null) { 						if (animatedStatusIcon != null) { 							statusIcon.Image = animatedStatusIcon.FirstFrame; 							addButton.Image = animatedStatusIcon.FirstFrame.WithAlpha (0.4); 							statusIconAnimation = animatedStatusIcon.StartAnimation (p => { 								statusIcon.Image = p; 								addButton.Image = p.WithAlpha (0.4); 							}); 						} else { 							statusIcon.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small); 							addButton.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small).WithAlpha (0.4); 						} 					} 					break; 				} 			});
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateServiceStatus,The following statement contains a magic number: Runtime.RunInMainThread (delegate {  				StopIconAnimations (); 				statusWidget.Visible = !showDetails && Service.Status != Status.NotAdded; 				addButton.Sensitive = Service.Status == Status.NotAdded;  				switch (Service.Status) { 				case Status.NotAdded: 					addButton.Label = GettextCatalog.GetString ("Add"); 					addButton.Image = statusIcon.Image = null;  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Added: 					addButton.Label = statusText.Text = GettextCatalog.GetString ("Added"); 					addButton.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small).WithAlpha (0.4); 					statusIcon.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small);  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Adding: 				case Status.Removing: 					addButton.Label = statusText.Text = 						Service.Status == Status.Adding 						? GettextCatalog.GetString ("Adding\u2026") 						: GettextCatalog.GetString ("Removing\u2026"); 					if (statusIconAnimation == null) { 						if (animatedStatusIcon != null) { 							statusIcon.Image = animatedStatusIcon.FirstFrame; 							addButton.Image = animatedStatusIcon.FirstFrame.WithAlpha (0.4); 							statusIconAnimation = animatedStatusIcon.StartAnimation (p => { 								statusIcon.Image = p; 								addButton.Image = p.WithAlpha (0.4); 							}); 						} else { 							statusIcon.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small); 							addButton.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small).WithAlpha (0.4); 						} 					} 					break; 				} 			});
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateServiceStatus,The following statement contains a magic number: Runtime.RunInMainThread (delegate {  				StopIconAnimations (); 				statusWidget.Visible = !showDetails && Service.Status != Status.NotAdded; 				addButton.Sensitive = Service.Status == Status.NotAdded;  				switch (Service.Status) { 				case Status.NotAdded: 					addButton.Label = GettextCatalog.GetString ("Add"); 					addButton.Image = statusIcon.Image = null;  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Added: 					addButton.Label = statusText.Text = GettextCatalog.GetString ("Added"); 					addButton.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small).WithAlpha (0.4); 					statusIcon.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small);  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Adding: 				case Status.Removing: 					addButton.Label = statusText.Text = 						Service.Status == Status.Adding 						? GettextCatalog.GetString ("Adding\u2026") 						: GettextCatalog.GetString ("Removing\u2026"); 					if (statusIconAnimation == null) { 						if (animatedStatusIcon != null) { 							statusIcon.Image = animatedStatusIcon.FirstFrame; 							addButton.Image = animatedStatusIcon.FirstFrame.WithAlpha (0.4); 							statusIconAnimation = animatedStatusIcon.StartAnimation (p => { 								statusIcon.Image = p; 								addButton.Image = p.WithAlpha (0.4); 							}); 						} else { 							statusIcon.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small); 							addButton.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small).WithAlpha (0.4); 						} 					} 					break; 				} 			});
Magic Number,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateServiceStatus,The following statement contains a magic number: Runtime.RunInMainThread (delegate {  				StopIconAnimations (); 				statusWidget.Visible = !showDetails && Service.Status != Status.NotAdded; 				addButton.Sensitive = Service.Status == Status.NotAdded;  				switch (Service.Status) { 				case Status.NotAdded: 					addButton.Label = GettextCatalog.GetString ("Add"); 					addButton.Image = statusIcon.Image = null;  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Added: 					addButton.Label = statusText.Text = GettextCatalog.GetString ("Added"); 					addButton.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small).WithAlpha (0.4); 					statusIcon.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small);  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Adding: 				case Status.Removing: 					addButton.Label = statusText.Text = 						Service.Status == Status.Adding 						? GettextCatalog.GetString ("Adding\u2026") 						: GettextCatalog.GetString ("Removing\u2026"); 					if (statusIconAnimation == null) { 						if (animatedStatusIcon != null) { 							statusIcon.Image = animatedStatusIcon.FirstFrame; 							addButton.Image = animatedStatusIcon.FirstFrame.WithAlpha (0.4); 							statusIconAnimation = animatedStatusIcon.StartAnimation (p => { 								statusIcon.Image = p; 								addButton.Image = p.WithAlpha (0.4); 							}); 						} else { 							statusIcon.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small); 							addButton.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small).WithAlpha (0.4); 						} 					} 					break; 				} 			});
Missing Default,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServicesGalleryWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServicesGalleryWidget.cs,HandleServiceStatusChanged,The following switch statement is missing a default case: switch (e.NewStatus) { 			case Status.Added: 			case Status.NotAdded: 				this.HandleServiceAddedRemoved ((IConnectedService)sender);  				break; 			}
Missing Default,MonoDevelop.ConnectedServices.Gui.ServicesTab,ServiceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.ConnectedServices\Gui.ServicesTab\ServiceWidget.cs,UpdateServiceStatus,The following switch statement is missing a default case: switch (Service.Status) { 				case Status.NotAdded: 					addButton.Label = GettextCatalog.GetString ("Add"); 					addButton.Image = statusIcon.Image = null;  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Added: 					addButton.Label = statusText.Text = GettextCatalog.GetString ("Added"); 					addButton.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small).WithAlpha (0.4); 					statusIcon.Image = ImageService.GetIcon ("md-checkmark").WithSize (IconSize.Small);  					// if the service has just been added/removed then the document view won't know this and does not have the correct DocumentObject 					// tell it to update 					ConnectedServices.LocateServiceView (this.Service.Project)?.UpdateCurrentNode (); 					break; 				case Status.Adding: 				case Status.Removing: 					addButton.Label = statusText.Text = 						Service.Status == Status.Adding 						? GettextCatalog.GetString ("Adding\u2026") 						: GettextCatalog.GetString ("Removing\u2026"); 					if (statusIconAnimation == null) { 						if (animatedStatusIcon != null) { 							statusIcon.Image = animatedStatusIcon.FirstFrame; 							addButton.Image = animatedStatusIcon.FirstFrame.WithAlpha (0.4); 							statusIconAnimation = animatedStatusIcon.StartAnimation (p => { 								statusIcon.Image = p; 								addButton.Image = p.WithAlpha (0.4); 							}); 						} else { 							statusIcon.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small); 							addButton.Image = ImageService.GetIcon ("md-spinner-16").WithSize (Xwt.IconSize.Small).WithAlpha (0.4); 						} 					} 					break; 				}
