Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoDevelop.AspNetCore,LaunchProfileData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileData.cs,DeserializeProfiles,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.AspNetCore,LaunchProfileData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileData.cs,ToSerializableForm,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.AspNetCore,LaunchProfileProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileProvider.cs,SyncRunConfigurations,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.AspNetCore.Scaffolding,ScaffolderTemplateConfigurePage,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderTemplateConfigurePage.cs,GetMainControl,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.WebTools.Scaffolding.Core.Config,ScaffoldingConfig,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Configuration\ScaffoldingConfig.cs,TryGetPackagesForSupportPolicyVersion,Cyclomatic complexity of the method is 8
Long Parameter List,MonoDevelop.AspNetCore,AspNetCoreProjectExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreProjectExtension.cs,OnExecute,The method has 5 parameters. Parameters: monitor' context' configuration' framework' runConfiguration
Long Parameter List,MonoDevelop.AspNetCore,AspNetCoreProjectExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreProjectExtension.cs,CheckCertificateThenExecute,The method has 5 parameters. Parameters: monitor' context' configuration' framework' runConfiguration
Long Parameter List,MonoDevelop.AspNetCore.Scaffolding,BoolField,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Fields\BoolField.cs,BoolField,The method has 5 parameters. Parameters: commandLineName' displayName' isChecked' enabled' isInverted
Long Parameter List,MonoDevelop.AspNetCore.Scaffolding,ComboField,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Fields\ComboField.cs,ComboField,The method has 5 parameters. Parameters: commandLineName' displayName' options' isEditable' placeholderText
Long Statement,MonoDevelop.AspNetCore.Templating,AspNetCoreFileTemplateCondition,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Templating\AspNetCoreFileTemplateCondition.cs,ShouldEnableFor,The length of the statement  "					LoggingService.LogWarning ($"Failed to parse framework version({dpn.TargetFramework.Id.Version}) of \"{proj.Name}\" project.");" is 127.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreProjectExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreProjectExtension.cs,CreateAspNetCoreExecutionCommand,The length of the statement  "				string.IsNullOrWhiteSpace (aspnetCoreRunConfiguration.StartWorkingDirectory) ? Project.BaseDirectory : aspnetCoreRunConfiguration.StartWorkingDirectory'" is 152.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreProjectExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreProjectExtension.cs,OnGetExecutionTargets,The length of the statement  "			var result = new ExecutionTargetGroup (GettextCatalog.GetString ("Browser")' "MonoDevelop.AspNetCore.BrowserExecutionTargets");" is 127.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreProjectExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreProjectExtension.cs,OnGetExecutionTargets,The length of the statement  "			foreach (var browser in IdeServices.DesktopService.GetApplications ("https://localhost"' Ide.Desktop.DesktopApplicationRole.Viewer)) {" is 134.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreRunConfiguration,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfiguration.cs,Write,The length of the statement  "			if (EnvironmentVariables.Count == 1 && EnvironmentVariables.ContainsKey ("ASPNETCORE_ENVIRONMENT") && EnvironmentVariables ["ASPNETCORE_ENVIRONMENT"] == "Development")" is 167.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreRunConfiguration,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfiguration.cs,Write,The length of the statement  "			pset.SetValue (nameof (LaunchUrl)' string.IsNullOrWhiteSpace (CurrentProfile.LaunchUrl) ? null : CurrentProfile.LaunchUrl' null);" is 129.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreRunConfigurationEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfigurationEditor.cs,LoadCore,The length of the statement  "			applicationUrlWarningTooltip = new XwtBoxTooltip (new Xwt.ImageView (ImageService.GetIcon (Ide.Gui.Stock.Warning' Gtk.IconSize.Menu))) {" is 136.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreRunConfigurationEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfigurationEditor.cs,LoadCore,The length of the statement  "			appUrlTable.Add (new Label (GettextCatalog.GetString ("Where your app should listen for connections")) { Sensitive = false }' 1' 1' hexpand: true);" is 147.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreRunConfigurationEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfigurationEditor.cs,LoadCore,The length of the statement  "			mainBox.PackStart (launchBrowser = new CheckBox (GettextCatalog.GetString ("Open URL in web browser when app starts:"))' marginTop: 16);" is 136.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreRunConfigurationEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfigurationEditor.cs,LoadCore,The length of the statement  "			browserTable.Add (new Label (GettextCatalog.GetString ("Absolute or relative to App URL")) { Sensitive = false }' 1' offset + 1);" is 129.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreExecutionHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreExecutionHandler.cs,Execute,The length of the statement  "				LaunchBrowserAsync (dotNetCoreCommand.ApplicationURL' dotNetCoreCommand.LaunchURL' dotNetCoreCommand.Target' process.Task).Ignore ();" is 133.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreExecutionHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreExecutionHandler.cs,LaunchBrowserAsync,The length of the statement  "						using (var response = await httpClient.GetAsync (launchUri.AbsoluteUri' System.Net.Http.HttpCompletionOption.ResponseHeadersRead)) {" is 132.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreCertificateManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreCertificateManager.cs,CreateConfirmMessage,The length of the statement  "					SecondaryText = GettextCatalog.GetString ("The HTTPS development certificate will be trusted by running 'dotnet dev-certs https --trust'. Running this command may prompt you for your password to install the certificate on the system keychain.\n\nDo you want to trust this certificate?")'" is 287.
Long Statement,MonoDevelop.AspNetCore,AspNetCoreCertificateManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreCertificateManager.cs,CreateConfirmMessage,The length of the statement  "				SecondaryText = GettextCatalog.GetString ("The HTTPS development certificate will be installed and trusted by running 'dotnet dev-certs https --trust'. Running this command may prompt you for your password to install the certificate on the system keychain.\n\nDo you want to install and trust this certificate?")'" is 313.
Long Statement,MonoDevelop.AspNetCore,ProjectExtensions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\ProjectExtensions.cs,CreatePublishProfileFile,The length of the statement  "			var profileFileName = project.BaseDirectory.Combine ("Properties"' "PublishProfiles"' project.GetNextPubXmlFileName ()); " is 120.
Long Statement,MonoDevelop.AspNetCore,LaunchProfileData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileData.cs,DeserializeProfiles,The length of the statement  "									Dictionary<string' string> value = JsonConvert.DeserializeObject<Dictionary<string' string>> (dataProperty.Value.ToString ());" is 126.
Long Statement,MonoDevelop.AspNetCore,LaunchProfileProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileProvider.cs,TryAllocatePort,The length of the statement  "				var endPoint = new IPEndPoint (testSocket.AddressFamily == AddressFamily.InterNetworkV6 ? IPAddress.IPv6Any : IPAddress.Any' testPort);" is 135.
Long Statement,MonoDevelop.AspNetCore,LaunchProfileProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileProvider.cs,LoadLaunchSettings,The length of the statement  "			Profiles = new ConcurrentDictionary<string' LaunchProfileData> (LaunchProfileData.DeserializeProfiles (ProfilesObject));" is 120.
Long Statement,MonoDevelop.AspNetCore,LaunchProfileProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileProvider.cs,SaveLaunchSettings,The length of the statement  "				string message = GettextCatalog.GetString ("Failed to write {0}. Unable to access file or access is denied"' LaunchSettingsJsonPath);" is 133.
Long Statement,MonoDevelop.AspNetCore.Commands,ProjectPublishProfile,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Commands\ProjectPublishProfile.cs,ReadModel,The length of the statement  "				var serializer = new XmlSerializer (typeof (ProjectPublishProfile)' "http://schemas.microsoft.com/developer/msbuild/2003");" is 123.
Long Statement,MonoDevelop.AspNetCore.Commands,PublishToFolderProfilesCommandHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Commands\PublishToFolderProfilesCommandHandler.cs,Update,The length of the statement  "					info.Add (GettextCatalog.GetString ("Publish to {0} - {1}"' profile.Name' profile.WebPublishMethod)' new PublishCommandItem (project' profile));" is 144.
Long Statement,MonoDevelop.AspNetCore.Commands,PublishToFolderBaseCommandHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Commands\PublishToFolderBaseCommandHandler.cs,Publish,The length of the statement  "								LoggingService.LogError ($"Unknown exit code returned from 'dotnet publish --output {item.Profile.PublishUrl}': {process.ExitCode}");" is 133.
Long Statement,MonoDevelop.AspNetCore.Commands,ScaffoldCommandHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Commands\ScaffoldCommandHandler.cs,IsAspNetCoreProject,The length of the statement  "				&& (project.MSBuildProject.GetReferencedSDKs ().FirstOrDefault (x => x.IndexOf ("Microsoft.NET.Sdk.Web"' StringComparison.OrdinalIgnoreCase) != -1) != null); " is 157.
Long Statement,MonoDevelop.AspNetCore.Dialogs,PublishToFolderDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Dialogs\PublishToFolderDialog.cs,browseButton_Clicked,The length of the statement  "			var fileDialog = new Components.SelectFolderDialog (GettextCatalog.GetString ("Publish to Folder")' Components.FileChooserAction.CreateFolder) {" is 144.
Long Statement,MonoDevelop.AspNetCore.Scaffolding,ModelVisitor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ModelVisitor.cs,IsSignedWithFilteredPublicKey,The length of the statement  "				string publicKeyToken = BitConverter.ToString (assembly.Identity.PublicKeyToken.ToArray ()).Replace ("-"' string.Empty);" is 120.
Long Statement,MonoDevelop.AspNetCore.Scaffolding,ScaffolderWizard,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderWizard.cs,InstallNuGetPackagesAsync,The length of the statement  "			progressMonitor.Console.Debug (0' ""' GettextCatalog.GetString ("Checking if needed NuGet packages are already installed...\n"));" is 129.
Long Statement,MonoDevelop.AspNetCore.Scaffolding,ScaffolderWizard,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderWizard.cs,InstallNuGetPackagesAsync,The length of the statement  "				await progressMonitor.Console.Log.WriteLineAsync ($"Adding needed NuGet packages ({string.Join ("' "' refsToAdd.Select (x => x.Id))})");" is 136.
Long Statement,MonoDevelop.AspNetCore.Scaffolding,ScaffolderWizard,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderWizard.cs,GetPackagesToInstallAsync,The length of the statement  "				if (scaffoldingConfig.TryGetPackagesForSupportPolicyVersion (policyVersion' out PackageDescription [] packageDescriptions)) {" is 125.
Long Statement,MonoDevelop.AspNetCore.Scaffolding,ScaffolderBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Scaffolders\ScaffolderBase.cs,GetDbContextField,The length of the statement  "			return new ComboField ("--dataContext"' GettextCatalog.GetString("DbContext class to use:")' GetDbContextClassesAsync(args.Project' args.CancellationToken)' isEditable: true' placeholderText: "Select or type DbContext class name");" is 231.
Long Statement,MonoDevelop.AspNetCore.Scaffolding,ScaffolderBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Scaffolders\ScaffolderBase.cs,GetModelField,The length of the statement  "			return new ComboField ("--model"' GettextCatalog.GetString("Model class to use:")' GetModelClassesAsync(args.Project' args.CancellationToken)' isEditable: true);" is 161.
Long Statement,MonoDevelop.AspNetCore.Scaffolding,ScaffolderBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Scaffolders\ScaffolderBase.cs,GetDbContextClassesAsync,The length of the statement  "					var result = await SymbolFinder.FindDerivedClassesAsync (dbContext' IdeApp.TypeSystemService.Workspace.CurrentSolution);" is 120.
Long Statement,MonoDevelop.AspNetCore.Scaffolding,ScaffolderBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Scaffolders\ScaffolderBase.cs,GetDbContextClassesAsync,The length of the statement  "					return result.Where (ModelVisitor.IncludeTypeInAddViewModelClassDropdown).Select (c => c.MetadataName).Distinct().OrderBy (x => x);" is 131.
Long Statement,Microsoft.WebTools.Scaffolding.Core.Config,ScaffoldingConfig,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Configuration\ScaffoldingConfig.cs,TryGetPackagesForSupportPolicyVersion,The length of the statement  "			if (DynamicVersionedPackages != null && DynamicVersionedPackages.TryGetValue (supportPolicyVersion.Version.ToString ()' out packageDescriptions)) {" is 147.
Empty Catch Block,MonoDevelop.AspNetCore,AspNetCoreExecutionHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreExecutionHandler.cs,LaunchBrowserAsync,The method has an empty catch block.
Empty Catch Block,MonoDevelop.AspNetCore,LaunchProfileData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileData.cs,DeserializeProfiles,The method has an empty catch block.
Magic Number,MonoDevelop.AspNetCore,AspNetCoreRunConfigurationEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfigurationEditor.cs,LoadCore,The following statement contains a magic number: mainBox.Margin = 24;
Magic Number,MonoDevelop.AspNetCore,AspNetCoreRunConfigurationEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfigurationEditor.cs,LoadCore,The following statement contains a magic number: mainBox.PackStart (launchBrowser = new CheckBox (GettextCatalog.GetString ("Open URL in web browser when app starts:"))' marginTop: 16);
Magic Number,MonoDevelop.AspNetCore,AspNetCoreRunConfigurationEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreRunConfigurationEditor.cs,LoadCore,The following statement contains a magic number: browserTable.MarginLeft = 16;
Magic Number,MonoDevelop.AspNetCore,AspNetCoreExecutionHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreExecutionHandler.cs,LaunchBrowserAsync,The following statement contains a magic number: await Task.Delay (50).ConfigureAwait (false);
Magic Number,MonoDevelop.AspNetCore,AspNetCoreExecutionHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\AspNetCoreExecutionHandler.cs,LaunchBrowserAsync,The following statement contains a magic number: await Task.Delay (1000).ConfigureAwait (false);
Magic Number,MonoDevelop.AspNetCore,LaunchProfileProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileProvider.cs,GetNextFreePort,The following statement contains a magic number: var validPortRange = Enumerable.Range (5000' 100);
Magic Number,MonoDevelop.AspNetCore,LaunchProfileProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore\LaunchProfileProvider.cs,GetNextFreePort,The following statement contains a magic number: var validPortRange = Enumerable.Range (5000' 100);
Magic Number,MonoDevelop.AspNetCore.Dialogs,PublishToFolderDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Dialogs\PublishToFolderDialog.cs,Initialize,The following statement contains a magic number: mainVBox = new VBox { 				Name = "mainVBox"' 				Spacing = 6 			};
Magic Number,MonoDevelop.AspNetCore.Dialogs,PublishToFolderDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Dialogs\PublishToFolderDialog.cs,Initialize,The following statement contains a magic number: browseVBox = new VBox { 				Name = "browseVBox"' 				Spacing = 6 			};
Magic Number,MonoDevelop.AspNetCore.Dialogs,PublishToFolderDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Dialogs\PublishToFolderDialog.cs,Initialize,The following statement contains a magic number: browseVBox.MarginTop = 20;
Magic Number,MonoDevelop.AspNetCore.Dialogs,PublishToFolderDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Dialogs\PublishToFolderDialog.cs,Initialize,The following statement contains a magic number: browseEntryHBox = new HBox { 				Name = "browseEntryHBox"' 				Spacing = 4 			};
Magic Number,MonoDevelop.AspNetCore.Dialogs,PublishToFolderDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Dialogs\PublishToFolderDialog.cs,Initialize,The following statement contains a magic number: Width = 400;
Magic Number,MonoDevelop.AspNetCore.Dialogs,PublishToFolderDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Dialogs\PublishToFolderDialog.cs,Initialize,The following statement contains a magic number: Height = 120;
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderWizard,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderWizard.cs,ScaffolderWizard,The following statement contains a magic number: this.DefaultPageSize = new Size (500' 400);
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderWizard,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderWizard.cs,ScaffolderWizard,The following statement contains a magic number: this.DefaultPageSize = new Size (500' 400);
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderTemplateSelectPage,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderTemplateSelectPage.cs,GetMainControl,The following statement contains a magic number: listBox.HeightRequest = 300;
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderTemplateSelectPage,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderTemplateSelectPage.cs,GetMainControl,The following statement contains a magic number: listBox.WidthRequest = 300;
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderTemplateConfigurePage,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderTemplateConfigurePage.cs,GetMainControl,The following statement contains a magic number: switch (field) { 				case StringField s: 					var input = new TextEntry (); 					label.Text = s.DisplayName; 					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End); 					table.Add (input' 1' rowIndex); 					input.Changed += (sender' args) => s.SelectedValue = input.Text; 					input.MinWidth = 300; 					input.SetFocus (); 					break; 				case ComboField comboField: 					ComboBox comboBox; 					if (comboField.IsEditable) { 						var comboBoxEntry = new ComboBoxEntry (); 						comboBoxEntry.TextEntry.Changed += (sender' args) => { 							if(!string.IsNullOrWhiteSpace(comboBoxEntry.TextEntry.Text)) 								comboField.SelectedValue = comboBoxEntry.TextEntry.Text; 						}; 						if(comboField.PlaceholderText != null) 							comboBoxEntry.TextEntry.PlaceholderText = comboField.PlaceholderText; 						comboBox = comboBoxEntry; 					} else { 						comboBox = new ComboBox (); 					}  					comboBox.MinWidth = 300; 					Task.Run (async () => { 						var options = await comboField.Options; 						await Runtime.RunInMainThread (() => { 							if (Args.CancellationToken.IsCancellationRequested) { 								return; 							} 							Xwt.Toolkit.NativeEngine.Invoke (() => { 								foreach (var option in options) { 									comboBox.Items.Add (option); 								} 							});  						}); 					}' Args.CancellationToken);  					label.Text = comboField.DisplayName;  					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End); 					table.Add (comboBox' 1' rowIndex); 					comboBox.TextInput += (sender' args) => comboField.SelectedValue = comboBox.SelectedText;  					comboBox.SelectionChanged += (sender' args) => comboField.SelectedValue = comboBox.SelectedText;  					break; 				case BoolFieldList boolFieldList: 					label.Text = boolFieldList.DisplayName; 					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End' vpos: WidgetPlacement.Start); 					var vbox = new VBox (); 					for (int i = 0; i < boolFieldList.Options.Count; i++) { 						var boolField = boolFieldList.Options [i]; 						var checkbox = new CheckBox (boolField.DisplayName) { 							Active = boolField.Selected' 							Sensitive = boolField.Enabled 						}; 						checkbox.Toggled += (sender' args) => boolField.Selected = checkbox.Active; 						vbox.PackStart (checkbox); 					} 					table.Add (vbox' 1' rowIndex); 					break; 				case FileField fileField: 					var fileSelector = new FileSelector (); 					if (!string.IsNullOrEmpty (fileField.FilterWildcard)) { 						// This doesn't work with native toolkit! 						var filter = new FileDialogFilter (fileField.FilterWildcard' fileField.FilterWildcard); 						fileSelector.Filters.Add (filter); 					} 					table.Add (fileSelector' 1' rowIndex); 					label.Text = fileField.DisplayName; 					table.Add (label' 1' rowIndex + 1); 					rowAdditionCount++; 					fileSelector.HeightRequest = 20; 					fileSelector.FileChanged += (sender' args) => fileField.SelectedValue = fileSelector.FileName; 					break; 				}
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderTemplateConfigurePage,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderTemplateConfigurePage.cs,GetMainControl,The following statement contains a magic number: switch (field) { 				case StringField s: 					var input = new TextEntry (); 					label.Text = s.DisplayName; 					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End); 					table.Add (input' 1' rowIndex); 					input.Changed += (sender' args) => s.SelectedValue = input.Text; 					input.MinWidth = 300; 					input.SetFocus (); 					break; 				case ComboField comboField: 					ComboBox comboBox; 					if (comboField.IsEditable) { 						var comboBoxEntry = new ComboBoxEntry (); 						comboBoxEntry.TextEntry.Changed += (sender' args) => { 							if(!string.IsNullOrWhiteSpace(comboBoxEntry.TextEntry.Text)) 								comboField.SelectedValue = comboBoxEntry.TextEntry.Text; 						}; 						if(comboField.PlaceholderText != null) 							comboBoxEntry.TextEntry.PlaceholderText = comboField.PlaceholderText; 						comboBox = comboBoxEntry; 					} else { 						comboBox = new ComboBox (); 					}  					comboBox.MinWidth = 300; 					Task.Run (async () => { 						var options = await comboField.Options; 						await Runtime.RunInMainThread (() => { 							if (Args.CancellationToken.IsCancellationRequested) { 								return; 							} 							Xwt.Toolkit.NativeEngine.Invoke (() => { 								foreach (var option in options) { 									comboBox.Items.Add (option); 								} 							});  						}); 					}' Args.CancellationToken);  					label.Text = comboField.DisplayName;  					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End); 					table.Add (comboBox' 1' rowIndex); 					comboBox.TextInput += (sender' args) => comboField.SelectedValue = comboBox.SelectedText;  					comboBox.SelectionChanged += (sender' args) => comboField.SelectedValue = comboBox.SelectedText;  					break; 				case BoolFieldList boolFieldList: 					label.Text = boolFieldList.DisplayName; 					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End' vpos: WidgetPlacement.Start); 					var vbox = new VBox (); 					for (int i = 0; i < boolFieldList.Options.Count; i++) { 						var boolField = boolFieldList.Options [i]; 						var checkbox = new CheckBox (boolField.DisplayName) { 							Active = boolField.Selected' 							Sensitive = boolField.Enabled 						}; 						checkbox.Toggled += (sender' args) => boolField.Selected = checkbox.Active; 						vbox.PackStart (checkbox); 					} 					table.Add (vbox' 1' rowIndex); 					break; 				case FileField fileField: 					var fileSelector = new FileSelector (); 					if (!string.IsNullOrEmpty (fileField.FilterWildcard)) { 						// This doesn't work with native toolkit! 						var filter = new FileDialogFilter (fileField.FilterWildcard' fileField.FilterWildcard); 						fileSelector.Filters.Add (filter); 					} 					table.Add (fileSelector' 1' rowIndex); 					label.Text = fileField.DisplayName; 					table.Add (label' 1' rowIndex + 1); 					rowAdditionCount++; 					fileSelector.HeightRequest = 20; 					fileSelector.FileChanged += (sender' args) => fileField.SelectedValue = fileSelector.FileName; 					break; 				}
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderTemplateConfigurePage,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderTemplateConfigurePage.cs,GetMainControl,The following statement contains a magic number: switch (field) { 				case StringField s: 					var input = new TextEntry (); 					label.Text = s.DisplayName; 					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End); 					table.Add (input' 1' rowIndex); 					input.Changed += (sender' args) => s.SelectedValue = input.Text; 					input.MinWidth = 300; 					input.SetFocus (); 					break; 				case ComboField comboField: 					ComboBox comboBox; 					if (comboField.IsEditable) { 						var comboBoxEntry = new ComboBoxEntry (); 						comboBoxEntry.TextEntry.Changed += (sender' args) => { 							if(!string.IsNullOrWhiteSpace(comboBoxEntry.TextEntry.Text)) 								comboField.SelectedValue = comboBoxEntry.TextEntry.Text; 						}; 						if(comboField.PlaceholderText != null) 							comboBoxEntry.TextEntry.PlaceholderText = comboField.PlaceholderText; 						comboBox = comboBoxEntry; 					} else { 						comboBox = new ComboBox (); 					}  					comboBox.MinWidth = 300; 					Task.Run (async () => { 						var options = await comboField.Options; 						await Runtime.RunInMainThread (() => { 							if (Args.CancellationToken.IsCancellationRequested) { 								return; 							} 							Xwt.Toolkit.NativeEngine.Invoke (() => { 								foreach (var option in options) { 									comboBox.Items.Add (option); 								} 							});  						}); 					}' Args.CancellationToken);  					label.Text = comboField.DisplayName;  					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End); 					table.Add (comboBox' 1' rowIndex); 					comboBox.TextInput += (sender' args) => comboField.SelectedValue = comboBox.SelectedText;  					comboBox.SelectionChanged += (sender' args) => comboField.SelectedValue = comboBox.SelectedText;  					break; 				case BoolFieldList boolFieldList: 					label.Text = boolFieldList.DisplayName; 					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End' vpos: WidgetPlacement.Start); 					var vbox = new VBox (); 					for (int i = 0; i < boolFieldList.Options.Count; i++) { 						var boolField = boolFieldList.Options [i]; 						var checkbox = new CheckBox (boolField.DisplayName) { 							Active = boolField.Selected' 							Sensitive = boolField.Enabled 						}; 						checkbox.Toggled += (sender' args) => boolField.Selected = checkbox.Active; 						vbox.PackStart (checkbox); 					} 					table.Add (vbox' 1' rowIndex); 					break; 				case FileField fileField: 					var fileSelector = new FileSelector (); 					if (!string.IsNullOrEmpty (fileField.FilterWildcard)) { 						// This doesn't work with native toolkit! 						var filter = new FileDialogFilter (fileField.FilterWildcard' fileField.FilterWildcard); 						fileSelector.Filters.Add (filter); 					} 					table.Add (fileSelector' 1' rowIndex); 					label.Text = fileField.DisplayName; 					table.Add (label' 1' rowIndex + 1); 					rowAdditionCount++; 					fileSelector.HeightRequest = 20; 					fileSelector.FileChanged += (sender' args) => fileField.SelectedValue = fileSelector.FileName; 					break; 				}
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderTemplateConfigurePage,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderTemplateConfigurePage.cs,GetHashCode,The following statement contains a magic number: return unchecked( 				base.GetHashCode () + 37 * Args.Scaffolder.Name.GetHashCode () 			);
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderWizardPageBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderWizardPageBase.cs,CreateControl,The following statement contains a magic number: label.Font = label.Font.WithSize (18);
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderWizardPageBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderWizardPageBase.cs,CreateControl,The following statement contains a magic number: mainBox.PackStart (label' margin: 16);
Magic Number,MonoDevelop.AspNetCore.Scaffolding,ScaffolderWizardPageBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderWizardPageBase.cs,CreateControl,The following statement contains a magic number: mainBox.PackStart (GetMainControl ()' margin: 16);
Magic Number,Microsoft.WebTools.Scaffolding.Core.Config,ScaffoldingConfig,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\Configuration\ScaffoldingConfig.cs,LoadFromJsonAsync,The following statement contains a magic number: httpClient.Timeout = TimeSpan.FromSeconds (2);
Missing Default,MonoDevelop.AspNetCore.Scaffolding,ScaffolderDialogController,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderDialogController.cs,OnGoNext,The following switch statement is missing a default case: switch (CurrentPage) { 			case ScaffolderTemplateSelectPage _: 				IWizardDialogPage configPage = GetConfigurePage (args' token); 				return Task.FromResult (configPage); 			}
Missing Default,MonoDevelop.AspNetCore.Scaffolding,ScaffolderTemplateConfigurePage,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.AspNetCore\MonoDevelop.AspNetCore.Scaffolding\ScaffolderTemplateConfigurePage.cs,GetMainControl,The following switch statement is missing a default case: switch (field) { 				case StringField s: 					var input = new TextEntry (); 					label.Text = s.DisplayName; 					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End); 					table.Add (input' 1' rowIndex); 					input.Changed += (sender' args) => s.SelectedValue = input.Text; 					input.MinWidth = 300; 					input.SetFocus (); 					break; 				case ComboField comboField: 					ComboBox comboBox; 					if (comboField.IsEditable) { 						var comboBoxEntry = new ComboBoxEntry (); 						comboBoxEntry.TextEntry.Changed += (sender' args) => { 							if(!string.IsNullOrWhiteSpace(comboBoxEntry.TextEntry.Text)) 								comboField.SelectedValue = comboBoxEntry.TextEntry.Text; 						}; 						if(comboField.PlaceholderText != null) 							comboBoxEntry.TextEntry.PlaceholderText = comboField.PlaceholderText; 						comboBox = comboBoxEntry; 					} else { 						comboBox = new ComboBox (); 					}  					comboBox.MinWidth = 300; 					Task.Run (async () => { 						var options = await comboField.Options; 						await Runtime.RunInMainThread (() => { 							if (Args.CancellationToken.IsCancellationRequested) { 								return; 							} 							Xwt.Toolkit.NativeEngine.Invoke (() => { 								foreach (var option in options) { 									comboBox.Items.Add (option); 								} 							});  						}); 					}' Args.CancellationToken);  					label.Text = comboField.DisplayName;  					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End); 					table.Add (comboBox' 1' rowIndex); 					comboBox.TextInput += (sender' args) => comboField.SelectedValue = comboBox.SelectedText;  					comboBox.SelectionChanged += (sender' args) => comboField.SelectedValue = comboBox.SelectedText;  					break; 				case BoolFieldList boolFieldList: 					label.Text = boolFieldList.DisplayName; 					table.Add (label' 0' rowIndex' hpos: WidgetPlacement.End' vpos: WidgetPlacement.Start); 					var vbox = new VBox (); 					for (int i = 0; i < boolFieldList.Options.Count; i++) { 						var boolField = boolFieldList.Options [i]; 						var checkbox = new CheckBox (boolField.DisplayName) { 							Active = boolField.Selected' 							Sensitive = boolField.Enabled 						}; 						checkbox.Toggled += (sender' args) => boolField.Selected = checkbox.Active; 						vbox.PackStart (checkbox); 					} 					table.Add (vbox' 1' rowIndex); 					break; 				case FileField fileField: 					var fileSelector = new FileSelector (); 					if (!string.IsNullOrEmpty (fileField.FilterWildcard)) { 						// This doesn't work with native toolkit! 						var filter = new FileDialogFilter (fileField.FilterWildcard' fileField.FilterWildcard); 						fileSelector.Filters.Add (filter); 					} 					table.Add (fileSelector' 1' rowIndex); 					label.Text = fileField.DisplayName; 					table.Add (label' 1' rowIndex + 1); 					rowAdditionCount++; 					fileSelector.HeightRequest = 20; 					fileSelector.FileChanged += (sender' args) => fileField.SelectedValue = fileSelector.FileName; 					break; 				}
