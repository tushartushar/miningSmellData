Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,CheckPosition,Cyclomatic complexity of the method is 12
Long Parameter List,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,GetLineAndColumn,The method has 6 parameters. Parameters: breakpointMarker' offset' statement' line' col' file
Long Parameter List,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,CheckPosition,The method has 5 parameters. Parameters: guid' offset' statement' silent' file
Long Statement,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,CreateSession,The length of the statement  "			Console.WriteLine ("Target Runtime: " + runtime.DisplayRuntimeName + " " + runtime.Version + " " + (IntPtr.Size == 8 ? "64bit" : "32bit"));" is 139.
Long Statement,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,CheckPosition,The length of the statement  "						Assert.Fail ("CheckPosition failure: Wrong line Expected:" + (line + offset) + " Actual:" + lastStoppedPosition.Line + " in file:" + file.Name);" is 144.
Magic Number,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,CreateSession,The following statement contains a magic number: Console.WriteLine ("Target Runtime: " + runtime.DisplayRuntimeName + " " + runtime.Version + " " + (IntPtr.Size == 8 ? "64bit" : "32bit"));
Magic Number,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,Start,The following statement contains a magic number: ops.EvaluationOptions.EvaluationTimeout = 100000;
Magic Number,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,Start,The following statement contains a magic number: switch (WaitHandle.WaitAny (new WaitHandle[]{ done' targetExited }' 30000)) { 			case 0: 				//Breakpoint is hit good... run tests now 				break; 			case 1: 				throw new Exception ("Test application exited before hitting breakpoint"); 			default: 				throw new Exception ("Timeout while waiting for initial breakpoint"); 			}
Magic Number,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,CheckPosition,The following statement contains a magic number: !targetStoppedEvent.WaitOne (6000)
Magic Number,Mono.Debugging.PerfTests,PerfTestBase,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,StartTest,The following statement contains a magic number: !targetStoppedEvent.WaitOne (3000)
Magic Number,Mono.Debugging.PerfTests,EvalHelper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.Debugger\MonoDevelop.Debugger.PerfTests\PerfTestBase.cs,Sync,The following statement contains a magic number: !Monitor.Wait (locker' 8000)
