Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoDevelop.Xml.Parser,XmlDocTypeState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlDocTypeState.cs,PushChar,The method has 128 lines of code.
Long Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteNode,The method has 112 lines of code.
Long Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartElement,The method has 103 lines of code.
Long Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartAttribute,The method has 105 lines of code.
Long Method,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,HandleCodeCompletion,The method has 148 lines of code.
Complex Method,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,Push,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Xml.Parser,XmlAttributeState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlAttributeState.cs,PushChar,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Xml.Parser,XmlClosingTagState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlClosingTagState.cs,PushChar,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Xml.Parser,XmlNameState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlNameState.cs,PushChar,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Parser,XmlTagState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlTagState.cs,PushChar,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Xml.Parser,XmlDocTypeState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlDocTypeState.cs,PushChar,Cyclomatic complexity of the method is 36
Complex Method,MonoDevelop.Xml.Parser,XmlRootState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlRootState.cs,PushChar,Cyclomatic complexity of the method is 20
Complex Method,MonoDevelop.Xml.MSBuild,MSBuildResolveContext,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\MSBuild\MSBuildResolveContext.cs,Merge,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Xml.MSBuild,MSBuildResolveContext,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\MSBuild\MSBuildResolveContext.cs,Populate,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Xml.Completion,XmlSchemaCompletionData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Completion\XmlSchemaCompletionData.cs,GetChildElementCompletionData,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Xml.Completion,XmlSchemaCompletionData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Completion\XmlSchemaCompletionData.cs,FindChildElement,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Completion,XmlSchemaCompletionData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Completion\XmlSchemaCompletionData.cs,FindElement,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Xml.Completion,XmlElementPath,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Completion\XmlElementPath.cs,Resolve,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteNode,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteDocType,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartElement,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,CloseStartElementCore,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteEndElementCore,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartAttribute,Cyclomatic complexity of the method is 22
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteEndAttribute,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteQualifiedName,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteBinHex,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,ShiftStateTopLevel,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,ShiftStateContent,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteEscapedBuffer,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,AddNamespace,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,GetNamespacesInScopeImpl,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,LookupPrefixCore,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Formatting,CStringsConverter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicy.cs,EscapeString,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Xml.Formatting,CStringsConverter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicy.cs,UnescapeString,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Xml.Editor,XmlTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlTextEditorExtension.cs,GetElementCompletions,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Editor,XmlTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlTextEditorExtension.cs,GetSchemaObjectSelected,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,UpdateOwnerProjects,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,KeyPress,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,HandleCodeCompletion,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,AddCloseTag,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Editor,XmlExpandSelectionAnnotation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,GetCurrent,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Xml.Editor,XmlExpandSelectionAnnotation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,GrowStateInternal,Cyclomatic complexity of the method is 21
Complex Method,MonoDevelop.Xml.Editor,XmlExpandSelectionAnnotation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,GetNodePath,Cyclomatic complexity of the method is 12
Long Parameter List,MonoDevelop.Xml.Parser,XmlRootState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlRootState.cs,XmlRootState,The method has 6 parameters. Parameters: tagState' closingTagState' commentState' cDataState' docTypeState' processingInstructionState
Long Parameter List,MonoDevelop.Xml.MSBuild,MSBuildElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\MSBuild\MSBuildElement.cs,MSBuildElement,The method has 5 parameters. Parameters: name' isSpecial' children' attributes' childType
Long Parameter List,MonoDevelop.Xml.Formatting,XmlFormatter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatter.cs,FormatImplementation,The method has 5 parameters. Parameters: policyParent' mimeType' input' startOffset' length
Long Parameter List,MonoDevelop.Xml.Formatting,XmlFormatter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatter.cs,FormatText,The method has 5 parameters. Parameters: policyParent' mimeTypeInheritanceChain' input' fromOffest' toOffset
Long Identifier,MonoDevelop.Xml.Editor,XmlEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlEditorOptions.cs,,The length of the parameter ShowSchemaAnnotationPropertyName is 32.
Long Identifier,MonoDevelop.Xml.Editor,XmlEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlEditorOptions.cs,,The length of the parameter AutoCompleteElementsPropertyName is 32.
Long Identifier,MonoDevelop.Xml.Editor,XmlEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlEditorOptions.cs,,The length of the parameter AutoInsertFragmentsPropertyName is 31.
Long Identifier,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,,The length of the parameter defaultAssociationsRemoveButton is 31.
Long Statement,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,Push,The length of the statement  "				throw new InvalidOperationException ("Too many state changes for char '" + c + "'. Current state is " + currentState.ToString () + ".");" is 136.
Long Statement,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsPubidChar,The length of the statement  "			return (IsWhitespace(ch) && ch != '\t') | ('a' <= ch && ch <= 'z') | ('A' <= ch && ch <= 'Z') | ('0' <= ch && ch <= '9') | "-'()+'./:=?;!*#@$_%".IndexOf((char)ch) >= 0;" is 168.
Long Statement,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteEndAttribute,The length of the statement  "							throw new XmlException (String.Format ("Cannot redefine the namespace for prefix '{0}' used at current element"' preserved_name));" is 130.
Long Statement,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteCharacterEntity,The length of the statement  "				throw ArgumentError (String.Format ("Invalid surrogate pair was found. Low: &#x{0:X}; High: &#x{1:X};"' (int) ch' (int) high));" is 127.
Long Statement,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteIndentAttribute,The length of the statement  "					writer.Write (new string ('\t'' writer.AttributesIndent / TextPolicy.TabWidth) + new string (' '' writer.AttributesIndent % TextPolicy.TabWidth));" is 146.
Long Statement,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteIndentCore,The length of the statement  "			writer.Write (TextPolicy.TabsToSpaces ? new string (' '' (open_count + nestFix) * TextPolicy.TabWidth) : new string ('\t'' open_count + nestFix));" is 146.
Long Statement,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,IsValidDeclaration,The length of the statement  "				message = String.Format ("Prefix \"xml\" can only be bound to the fixed namespace URI \"{0}\". \"{1}\" is invalid."' XmlnsXml' uri);" is 132.
Long Statement,MonoDevelop.Xml.Editor,XmlTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlTextEditorExtension.cs,Initialize,The length of the statement  "			if (string.IsNullOrEmpty (Editor.MimeType) || Editor.MimeType == "text/plain" || Editor.MimeType == "application/octet-stream") {" is 129.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,UpdateOwnerProjects,The length of the statement  "			var projects = new HashSet<DotNetProject> (IdeApp.Workspace.GetAllItems<DotNetProject> ().Where (p => p.IsFileInProject (DocumentContext.Name)));" is 145.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,UpdateOwnerProjects,The length of the statement  "					var pp = DocumentContext.Project != null ? ownerProjects.FirstOrDefault (p => p.ParentSolution == DocumentContext.Project.ParentSolution) : null;" is 145.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,KeyPress,The length of the statement  "			if (descriptor.KeyChar == '>' && XmlEditorOptions.AutoCompleteElements && tracker.Engine.CurrentState is XmlRootState) {" is 120.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,GetLineIndent,The length of the statement  "				return new string ('\t'' attributeDepth / Editor.Options.TabSize) + new string (' '' attributeDepth % Editor.Options.TabSize);" is 126.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,GetAttributeIndentDepth,The length of the statement  "				var textFromBegining = Editor.GetTextBetween (firstAttribute.Region.BeginLine' 0' firstAttribute.Region.BeginLine' firstAttribute.Region.BeginColumn);" is 150.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,UpdatePath,The length of the statement  "				path.Add (new PathEntry (ImageService.GetIcon (DocumentContext.Project.StockIcon' Gtk.IconSize.Menu)' GLib.Markup.EscapeText (DocumentContext.Project.Name)) { Tag = DocumentContext.Project });" is 192.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,ToggleCodeCommentCommandInternal,The length of the statement  "				var endOffset = Editor.LocationToOffset (commentNode.Region.End) - 3 - 4;//-3 because End is after "-->"' -4 because removed "<!--" just before" is 143.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,ToggleCodeCommentCommandInternal,The length of the statement  "							new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan(Editor.SelectionRange.Offset' 0)' "<!--")'" is 127.
Long Statement,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,ToggleCodeCommentCommandInternal,The length of the statement  "							new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan(Editor.SelectionRange.EndOffset' 0)' "-->")" is 128.
Long Statement,MonoDevelop.Xml.Editor,XmlSchemaManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemaManager.cs,AddUserSchema,The length of the statement  "				LoggingService.LogWarning ("XmlSchemaManager cannot register two schemas with the same namespace '{0}'."' schemaData.NamespaceUri); " is 131.
Long Statement,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,Build,The length of the statement  "			PackStart (new Label { Markup = GettextCatalog.GetString ("<b>Default File Associations</b>")' Xalign = 0 }' false' false' 0);" is 126.
Long Statement,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,SortSchemas,The length of the statement  "			return string.Compare (GetSchema (listStore' a).NamespaceUri' GetSchema (listStore' b).NamespaceUri' StringComparison.Ordinal);" is 127.
Long Statement,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,removeRegisteredSchema,The length of the statement  "				throw new InvalidOperationException ("Should not be able to activate removeRegisteredSchema button while no row is selected.");" is 127.
Long Statement,MonoDevelop.Xml.Editor,XmlExtensions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,TryGetNameRegion,The length of the statement  "				return new DocumentRegion (r.BeginLine' r.BeginColumn + 1' r.BeginLine' r.BeginColumn + 1 + element.Name.FullName.Length);" is 122.
Long Statement,MonoDevelop.Xml.Editor,XmlExtensions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,TryGetNameRegion,The length of the statement  "				return new DocumentRegion (r.BeginLine' r.BeginColumn + 2' r.BeginLine' r.BeginColumn + 2 + closingTag.Name.FullName.Length);" is 125.
Complex Conditional,MonoDevelop.Xml.Parser,XmlAttributeValueState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlAttributeValueState.cs,PushChar,The conditional expression  "(c == '"' && maskedTag == DOUBLEQUOTE) || c == '\'' && maskedTag == SINGLEQUOTE"  is complex.
Complex Conditional,MonoDevelop.Xml.Parser,XmlNameState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlNameState.cs,PushChar,The conditional expression  "XmlChar.IsWhitespace (c) || c == '<' || c == '>' || c == '/' || c == '='"  is complex.
Complex Conditional,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsFirstNameChar,The conditional expression  "(ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')"  is complex.
Complex Conditional,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IndexOfInvalid,The conditional expression  "!allowSurrogate || 					    i + 1 == s.Length || 					    s [i] < '\uD800' || 					    s [i] >= '\uDC00' || 					    s [i + 1] < '\uDC00' || 					    s [i + 1] >= '\uE000'"  is complex.
Complex Conditional,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IndexOfInvalid,The conditional expression  "!allowSurrogate || 					    i + 1 == end || 					    s [i] < '\uD800' || 					    s [i] >= '\uDC00' || 					    s [i + 1] < '\uDC00' || 					    s [i + 1] >= '\uE000'"  is complex.
Complex Conditional,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsNameChar,The conditional expression  "(ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')"  is complex.
Complex Conditional,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsValidIANAEncoding,The conditional expression  "(c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')"  is complex.
Complex Conditional,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsValidIANAEncoding,The conditional expression  "(c < 'A' || c > 'Z') && (c < 'a' || c > 'z') && 								(c < '0' || c > '9') && c != '.' && c != '_' && 								c != '-'"  is complex.
Complex Conditional,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartElement,The conditional expression  "namespaces && 			    prefix != null && prefix.Length == 3 && 			    namespaceUri != XmlNamespace && 			    (prefix [0] == 'x' || prefix [0] == 'X') && 			    (prefix [1] == 'm' || prefix [1] == 'M') && 			    (prefix [2] == 'l' || prefix [2] == 'L')"  is complex.
Complex Conditional,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteCharacterEntity,The conditional expression  "surrogate && 			    ('\uD800' > high || high > '\uDC00' || 			     '\uDC00' > ch || ch > '\uDFFF')"  is complex.
Complex Conditional,MonoDevelop.Xml.Editor,XmlTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlTextEditorExtension.cs,QueueInference,The conditional expression  "defaultSchemaCompletionData != null || doc == null || doc.XDocument == null || inferenceQueued"  is complex.
Complex Conditional,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,KeyPress,The conditional expression  "el != null && el.Region.End >= buf.CaretLocation && !el.IsClosed && el.IsNamed"  is complex.
Complex Conditional,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,HandleCodeCompletion,The conditional expression  "(forced && Tracker.Engine.Nodes.Peek () is XAttribute && !tracker.Engine.Nodes.Peek ().IsEnded) 			     || ((Tracker.Engine.CurrentState is XmlNameState 			    && Tracker.Engine.CurrentState.Parent is XmlAttributeState) || 			    Tracker.Engine.CurrentState is XmlTagState)"  is complex.
Complex Conditional,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,HandleCodeCompletion,The conditional expression  "currentState is XmlAttributeState || 						currentState is XmlAttributeValueState || 						currentState is XmlTagState || 						(currentState is XmlNameState && currentState.Parent is XmlAttributeState)"  is complex.
Complex Conditional,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,ClosingTagCompletion,The conditional expression  "el != null && el.Region.End >= currentLocation && !el.IsClosed && el.IsNamed"  is complex.
Complex Conditional,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,GetCompletionCommandOffset,The conditional expression  "!char.IsLetterOrDigit (c) && c != '_' && c != ':' && c != '.'"  is complex.
Complex Conditional,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,GetCompletionCommandOffset,The conditional expression  "!char.IsLetterOrDigit (c) && c != '_' && c != ':' && c != '.'"  is complex.
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,Push,The following statement contains a magic number: keywordBuilder.Length < 50
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,Push,The following statement contains a magic number: loopLimit < 10
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,ToString,The following statement contains a magic number: builder.Append (' '' 2);
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,ToString,The following statement contains a magic number: builder.Append (' '' 4);
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,ToString,The following statement contains a magic number: builder.Append (' '' 2);
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,ToString,The following statement contains a magic number: builder.Append (' '' 4);
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,ToString,The following statement contains a magic number: builder.Append (' '' 2);
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,ToString,The following statement contains a magic number: rootOb.BuildTreeString (builder' 3);
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,ToString,The following statement contains a magic number: builder.Append (' '' 2);
Magic Number,MonoDevelop.Xml.Parser,XmlParser,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlParser.cs,ToString,The following statement contains a magic number: builder.Append (' '' 4);
Magic Number,MonoDevelop.Xml.Parser,XmlClosingTagState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlClosingTagState.cs,PushChar,The following statement contains a magic number: ct = new XClosingTag (context.LocationMinus (3));
Magic Number,MonoDevelop.Xml.Parser,XmlTagState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlTagState.cs,PushChar,The following statement contains a magic number: element = new XElement (context.LocationMinus (2));
Magic Number,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsInvalid,The following statement contains a magic number: switch (ch) { 			case 9: 			case 10: 			case 13: 				return false; 			}
Magic Number,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsInvalid,The following statement contains a magic number: switch (ch) { 			case 9: 			case 10: 			case 13: 				return false; 			}
Magic Number,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsInvalid,The following statement contains a magic number: switch (ch) { 			case 9: 			case 10: 			case 13: 				return false; 			}
Magic Number,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsInvalid,The following statement contains a magic number: ch < 32
Magic Number,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsNCNameChar,The following statement contains a magic number: result = (nameBitmap[(namePages[ch >> 8] << 3) + ((ch & 0xFF) >> 5)] & (1 << (ch & 0x1F))) != 0;
Magic Number,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsNCNameChar,The following statement contains a magic number: result = (nameBitmap[(namePages[ch >> 8] << 3) + ((ch & 0xFF) >> 5)] & (1 << (ch & 0x1F))) != 0;
Magic Number,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsNCNameChar,The following statement contains a magic number: result = (nameBitmap[(namePages[ch >> 8] << 3) + ((ch & 0xFF) >> 5)] & (1 << (ch & 0x1F))) != 0;
Magic Number,MonoDevelop.Xml.Parser,XmlRootState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlRootState.cs,LengthFromOpenBracket,The following statement contains a magic number: switch (context.StateTag) { 			case BRACKET: 				return 1; 			case BRACKET_EXCLAM: 				return 2; 			case COMMENT: 				return 3; 			case CDATA: 			case DOCTYPE: 				return 3 + context.KeywordBuilder.Length; 			default: 				return 1; 			}
Magic Number,MonoDevelop.Xml.Parser,XmlRootState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlRootState.cs,LengthFromOpenBracket,The following statement contains a magic number: switch (context.StateTag) { 			case BRACKET: 				return 1; 			case BRACKET_EXCLAM: 				return 2; 			case COMMENT: 				return 3; 			case CDATA: 			case DOCTYPE: 				return 3 + context.KeywordBuilder.Length; 			default: 				return 1; 			}
Magic Number,MonoDevelop.Xml.Parser,XmlRootState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlRootState.cs,LengthFromOpenBracket,The following statement contains a magic number: switch (context.StateTag) { 			case BRACKET: 				return 1; 			case BRACKET_EXCLAM: 				return 2; 			case COMMENT: 				return 3; 			case CDATA: 			case DOCTYPE: 				return 3 + context.KeywordBuilder.Length; 			default: 				return 1; 			}
Magic Number,MonoDevelop.Xml.Dom,XObject,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Dom\XObject.cs,BuildTreeString,The following statement contains a magic number: builder.Append (' '' indentLevel * 2);
Magic Number,MonoDevelop.Xml.Dom,XElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Dom\XElement.cs,BuildTreeString,The following statement contains a magic number: builder.Append (' '' indentLevel * 2);
Magic Number,MonoDevelop.Xml.Dom,XElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Dom\XElement.cs,BuildTreeString,The following statement contains a magic number: builder.Append (' '' indentLevel * 2);
Magic Number,MonoDevelop.Xml.Dom,XElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Dom\XElement.cs,BuildTreeString,The following statement contains a magic number: builder.Append (' '' indentLevel * 2);
Magic Number,MonoDevelop.Xml.MSBuild,MSBuildTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\MSBuild\MSBuildTextEditorExtension.cs,QueueInference,The following statement contains a magic number: (doc.LastWriteTimeUtc - inferredCompletionData.TimeStampUtc).TotalSeconds < 5
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartElement,The following statement contains a magic number: namespaces && 			    prefix != null && prefix.Length == 3 && 			    namespaceUri != XmlNamespace && 			    (prefix [0] == 'x' || prefix [0] == 'X') && 			    (prefix [1] == 'm' || prefix [1] == 'M') && 			    (prefix [2] == 'l' || prefix [2] == 'L')
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartElement,The following statement contains a magic number: namespaces && 			    prefix != null && prefix.Length == 3 && 			    namespaceUri != XmlNamespace && 			    (prefix [0] == 'x' || prefix [0] == 'X') && 			    (prefix [1] == 'm' || prefix [1] == 'M') && 			    (prefix [2] == 'l' || prefix [2] == 'L')
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartElement,The following statement contains a magic number: namespaces && 			    prefix != null && prefix.Length == 3 && 			    namespaceUri != XmlNamespace && 			    (prefix [0] == 'x' || prefix [0] == 'X') && 			    (prefix [1] == 'm' || prefix [1] == 'M') && 			    (prefix [2] == 'l' || prefix [2] == 'L')
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteBinHex,The following statement contains a magic number: int high = val >> 4;
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteBinHex,The following statement contains a magic number: int low = val & 15;
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteBinHex,The following statement contains a magic number: w.Write ((char) (high + 55));
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteBinHex,The following statement contains a magic number: high > 9
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteBinHex,The following statement contains a magic number: w.Write ((char) (low + 55));
Magic Number,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteBinHex,The following statement contains a magic number: low > 9
Magic Number,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,InitData,The following statement contains a magic number: decls = new NsDecl [10];
Magic Number,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,InitData,The following statement contains a magic number: scopes = new NsScope [40];
Magic Number,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,GrowDecls,The following statement contains a magic number: decls = new NsDecl [declPos * 2 + 1];
Magic Number,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,GrowScopes,The following statement contains a magic number: scopes = new NsScope [scopePos * 2 + 1];
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingSettings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicy.cs,XmlFormattingSettings,The following statement contains a magic number: MaxAttributesPerLine = 10;
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: Spacing = 6;
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: tableScopes = new Table (3' 3' false) { 				RowSpacing = 6' 				ColumnSpacing = 6 			};
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: tableScopes = new Table (3' 3' false) { 				RowSpacing = 6' 				ColumnSpacing = 6 			};
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: tableScopes = new Table (3' 3' false) { 				RowSpacing = 6' 				ColumnSpacing = 6 			};
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: tableScopes = new Table (3' 3' false) { 				RowSpacing = 6' 				ColumnSpacing = 6 			};
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: var buttonBox = new HBox (false' 6);
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: boxScopes = new VBox (false' 6);
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: var rightVBox = new VBox (false' 6);
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: var mainBox = new HBox (false' 6);
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,Build,The following statement contains a magic number: var abbBox = new HBox (false' 6);
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,UpdateScopes,The following statement contains a magic number: tableScopes.Attach (en' 1' 2' n' n + 1' AttachOptions.Expand | AttachOptions.Fill' AttachOptions.Shrink' 0' 0);
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,UpdateScopes,The following statement contains a magic number: uint c = 2;
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,UpdateScopes,The following statement contains a magic number: tableScopes.Attach (butRem' 2' 3' n' n + 1' AttachOptions.Shrink' AttachOptions.Shrink' 0' 0);
Magic Number,MonoDevelop.Xml.Formatting,XmlFormattingPolicyPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormattingPolicyPanelWidget.cs,UpdateScopes,The following statement contains a magic number: tableScopes.Attach (butRem' 2' 3' n' n + 1' AttachOptions.Shrink' AttachOptions.Shrink' 0' 0);
Magic Number,MonoDevelop.Xml.Editor,XmlTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlTextEditorExtension.cs,QueueInference,The following statement contains a magic number: inferredCompletionData == null 			    || (doc.LastWriteTimeUtc - inferredCompletionData.TimeStampUtc).TotalSeconds >= 5 					&& doc.GetErrorsAsync().Result.Count <= inferredCompletionData.ErrorCount
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,HandleCodeCompletion,The following statement contains a magic number: char previousChar = completionContext.TriggerOffset < 2? ' ' : buf.GetCharAt (completionContext.TriggerOffset - 2);
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,HandleCodeCompletion,The following statement contains a magic number: char previousChar = completionContext.TriggerOffset < 2? ' ' : buf.GetCharAt (completionContext.TriggerOffset - 2);
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,HandleCaretPositionChanged,The following statement contains a magic number: GLib.Timeout.Add (500' delegate { 				pathUpdateQueued = false; 				UpdatePath (); 				return false; 			});
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,SelectPath,The following statement contains a magic number: XObject ob = path [path.Count - (depth + 2)];
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,CreatePathWidget,The following statement contains a magic number: window.FixedRowHeight = 22;
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,CreatePathWidget,The following statement contains a magic number: window.MaxVisibleRows = 14;
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,GetCompleteName,The following statement contains a magic number: int limit = Math.Min (Editor.Length' end + 35);
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,RefreshOutline,The following statement contains a magic number: GLib.Timeout.Add (3000' refillOutlineStoreIdleHandler);
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,IsInComment,The following statement contains a magic number: i < Editor.Length && j < 3
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,ToggleCodeCommentCommandInternal,The following statement contains a magic number: var endOffset = Editor.LocationToOffset (commentNode.Region.End) - 3 - 4;
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,ToggleCodeCommentCommandInternal,The following statement contains a magic number: var endOffset = Editor.LocationToOffset (commentNode.Region.End) - 3 - 4;
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,ToggleCodeCommentCommandInternal,The following statement contains a magic number: Editor.RemoveText (startOffset' 4);
Magic Number,MonoDevelop.Xml.Editor,BaseXmlEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\BaseXmlEditorExtension.cs,ToggleCodeCommentCommandInternal,The following statement contains a magic number: Editor.RemoveText (endOffset' 3);
Magic Number,MonoDevelop.Xml.Editor,XmlEditorOptionsPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlEditorOptionsPanelWidget.cs,XmlEditorOptionsPanelWidget,The following statement contains a magic number: Spacing = 6;
Magic Number,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,Build,The following statement contains a magic number: Spacing = 6;
Magic Number,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,Build,The following statement contains a magic number: var schemasBox = new HBox (false' 6);
Magic Number,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,Build,The following statement contains a magic number: var schemasButtonBox = new VBox (false' 6);
Magic Number,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,Build,The following statement contains a magic number: var assocBox = new HBox (false' 6);
Magic Number,MonoDevelop.Xml.Editor,XmlSchemasPanelWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlSchemasPanelWidget.cs,Build,The following statement contains a magic number: var assocButtonBox = new VBox (false' 6);
Magic Number,MonoDevelop.Xml.Editor,XmlExpandSelectionAnnotation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,AdvanceUntilClosed,The following statement contains a magic number: const int chunk = 200;
Magic Number,MonoDevelop.Xml.Editor,XmlExtensions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,TryGetNameRegion,The following statement contains a magic number: return new DocumentRegion (r.BeginLine' r.BeginColumn + 2' r.BeginLine' r.BeginColumn + 2 + closingTag.Name.FullName.Length);
Magic Number,MonoDevelop.Xml.Editor,XmlExtensions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,TryGetNameRegion,The following statement contains a magic number: return new DocumentRegion (r.BeginLine' r.BeginColumn + 2' r.BeginLine' r.BeginColumn + 2 + closingTag.Name.FullName.Length);
Missing Default,MonoDevelop.Xml.Parser,XmlChar,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlChar.cs,IsInvalid,The following switch statement is missing a default case: switch (ch) { 			case 9: 			case 10: 			case 13: 				return false; 			}
Missing Default,MonoDevelop.Xml.Parser,XmlRootState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Parser\XmlRootState.cs,PushChar,The following switch statement is missing a default case: switch (context.StateTag) { 			case FREE: 				//FIXME: handle entities? 				return null; 				 			case BRACKET: 				if (c == '?') { 					rollback = string.Empty; 					return this.ProcessingInstructionState; 				} else if (c == '!') { 					context.StateTag = BRACKET_EXCLAM; 					return null; 				} else if (c == '/') { 					return this.ClosingTagState; 				} else if (char.IsLetter (c) || c == '_' || char.IsWhiteSpace (c)) { 					rollback = string.Empty; 					return TagState; 				} 				break; 				 			case BRACKET_EXCLAM: 				if (c == '[') { 					context.StateTag = CDATA; 					return null; 				} else if (c == '-') { 					context.StateTag = COMMENT; 					return null; 				} else if (c == 'D') { 					context.StateTag = DOCTYPE; 					return null; 				} 				break; 			 			case COMMENT: 				if (c == '-') 					return CommentState; 				break; 				 			case CDATA: 				string cdataStr = "CDATA["; 				if (c == cdataStr [context.KeywordBuilder.Length]) { 					context.KeywordBuilder.Append (c); 					if (context.KeywordBuilder.Length < cdataStr.Length) 						return null; 					return CDataState; 				} 				context.KeywordBuilder.Length = 0; 				break; 				 			case DOCTYPE: 				string docTypeStr = "OCTYPE"; 				if (c == docTypeStr [context.KeywordBuilder.Length]) { 					context.KeywordBuilder.Append (c); 					if (context.KeywordBuilder.Length < docTypeStr.Length) 						return null; 					return DocTypeState; 				} else { 					context.KeywordBuilder.Length = 0; 				} 				break; 			}
Missing Default,MonoDevelop.Xml.MSBuild,MSBuildResolveContext,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\MSBuild\MSBuildResolveContext.cs,Populate,The following switch statement is missing a default case: switch (parent.ChildType) { 			case "Item": 				HashSet<string> item; 				if (!items.TryGetValue (name' out item))  					items [name] = item = new HashSet<string> (); 				foreach (var metadata in el.Nodes.OfType<XElement> ())  					if (!metadata.Name.HasPrefix)  						item.Add (metadata.Name.Name); 				break; 			case "Property": 				properties.Add (name); 				break; 			case "Import": 				var import = el.Attributes [xnProject]; 				if (import != null && string.IsNullOrEmpty (import.Value))  					imports.Add (import.Value); 				break; 			case "Task": 				HashSet<string> task; 				if (!tasks.TryGetValue (name' out task))  					tasks [name] = task = new HashSet<string> (); 				foreach (var att in el.Attributes)  					if (!att.Name.HasPrefix)  						task.Add (att.Name.Name); 				break; 			case "Parameter": 				//TODO: Parameters 				break; 			}
Missing Default,MonoDevelop.Xml.MSBuild,MSBuildTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\MSBuild\MSBuildTextEditorExtension.cs,GetInferredChildren,The following switch statement is missing a default case: switch (rr.ChildType) { 				case "Item": 					return inferredCompletionData.GetItems (); 				case "Task": 					return inferredCompletionData.GetTasks (); 				case "Property": 					return inferredCompletionData.GetProperties (); 				}
Missing Default,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteNode,The following switch statement is missing a default case: switch (node.NodeType) { 				case XmlNodeType.Document: { 					if (!defaultFormatSettings.OmitXmlDeclaration) 						WriteDeclarationIfMissing ((XmlDocument)node); 					WriteContent (node); 					break; 				} 				case XmlNodeType.Attribute: { 					XmlAttribute at = (XmlAttribute) node; 					if (at.Specified) { 						WriteStartAttribute (at.NamespaceURI.Length > 0 ? at.Prefix : String.Empty' at.LocalName' at.NamespaceURI); 						WriteContent (node); 						WriteEndAttribute (); 					} 					break; 				} 				case XmlNodeType.CDATA: { 					WriteCData (((XmlCDataSection)node).Data); 					break; 				} 				case XmlNodeType.Comment: { 					WriteComment (((XmlComment)node).Data); 					break; 				} 				case XmlNodeType.DocumentFragment: { 					for (int i = 0; i < node.ChildNodes.Count; i++) 						WriteNode (node.ChildNodes [i]); 					break; 				} 				case XmlNodeType.DocumentType: { 					XmlDocumentType dt = (XmlDocumentType) node; 					WriteDocType (dt.Name' dt.PublicId' dt.SystemId' dt.InternalSubset); 					break; 				} 				case XmlNodeType.Element: { 					XmlElement elem = (XmlElement) node; 					writer.AttributesIndent = -1; 					WriteStartElement ( 						elem.NamespaceURI == null || elem.NamespaceURI.Length == 0 ? String.Empty : elem.Prefix' 						elem.LocalName' 						elem.NamespaceURI); 		 					if (elem.HasAttributes) { 						int oldBeforeSp = formatSettings.SpacesBeforeAssignment; 						int maxLen = 0; 						if (formatSettings.AlignAttributeValues) { 							foreach (XmlAttribute at in elem.Attributes) { 								string name = GetAttributeName (at); 								if (name.Length > maxLen) 									maxLen = name.Length; 							} 						} 						foreach (XmlAttribute at in elem.Attributes) { 							if (formatSettings.AlignAttributeValues) { 								string name = GetAttributeName (at); 								formatSettings.SpacesBeforeAssignment = (maxLen - name.Length) + oldBeforeSp; 							} 							WriteNode (at); 						} 						formatSettings.SpacesBeforeAssignment = oldBeforeSp; 					} 					 					if (!elem.IsEmpty) { 						CloseStartElement (); 						WriteContent (elem); 						WriteFullEndElement (); 					} 					else 						WriteEndElement (); 					break; 				} 				case XmlNodeType.EntityReference: { 					XmlEntityReference eref = (XmlEntityReference) node; 					WriteRaw ("&"); 					WriteName (eref.Name); 					WriteRaw (";"); 					break; 				} 				case XmlNodeType.ProcessingInstruction: { 					XmlProcessingInstruction pi = (XmlProcessingInstruction) node; 					WriteProcessingInstruction (pi.Target' pi.Data); 					break; 				} 				case XmlNodeType.SignificantWhitespace: { 					XmlSignificantWhitespace wn = (XmlSignificantWhitespace) node; 					WriteWhitespace (wn.Data); 					break; 				} 				case XmlNodeType.Text: { 					XmlText t = (XmlText) node; 					WriteString (t.Data); 					break; 				} 				case XmlNodeType.Whitespace: { 					XmlWhitespace wn = (XmlWhitespace) node; 					WriteWhitespace (wn.Data); 					break; 				} 				case XmlNodeType.XmlDeclaration: { 					if (!defaultFormatSettings.OmitXmlDeclaration) { 						XmlDeclaration dec = (XmlDeclaration) node; 						WriteRaw (String.Format ("<?xml {0}?>"' dec.Value)); 					} 					break; 				} 			}
Missing Default,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteStartDocumentCore,The following switch statement is missing a default case: switch (xmldecl_state) { 			case XmlDeclState.Ignore: 				return; 			case XmlDeclState.Prohibit: 				throw InvalidOperation ("WriteStartDocument cannot be called when ConformanceLevel is Fragment."); 			}
Missing Default,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteEndDocument,The following switch statement is missing a default case: switch (state) { 			case WriteState.Error: 			case WriteState.Closed: 			case WriteState.Start: 				throw StateError ("EndDocument"); 			}
Missing Default,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,ShiftStateTopLevel,The following switch statement is missing a default case: switch (state) { 			case WriteState.Error: 			case WriteState.Closed: 				throw StateError (occurred); 			case WriteState.Start: 				if (isCharacter) 					CheckMixedContentState (); 				if (xmldecl_state == XmlDeclState.Auto && !dontCheckXmlDecl) 					OutputAutoStartDocument (); 				state = WriteState.Prolog; 				break; 			case WriteState.Attribute: 				if (allowAttribute) 					break; 				goto case WriteState.Closed; 			case WriteState.Element: 				if (isCharacter) 					CheckMixedContentState (); 				CloseStartElement (); 				break; 			case WriteState.Content: 				if (isCharacter) 					CheckMixedContentState (); 				break; 			}
Missing Default,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,ShiftStateContent,The following switch statement is missing a default case: switch (state) { 			case WriteState.Error: 			case WriteState.Closed: 					throw StateError (occurred); 			case WriteState.Prolog: 			case WriteState.Start: 				if (!allow_doc_fragment || is_document_entity) 					goto case WriteState.Closed; 				if (xmldecl_state == XmlDeclState.Auto) 					OutputAutoStartDocument (); 				CheckMixedContentState (); 				state = WriteState.Content; 				break; 			case WriteState.Attribute: 				if (allowAttribute) 					break; 				goto case WriteState.Closed; 			case WriteState.Element: 				CloseStartElement (); 				CheckMixedContentState (); 				break; 			case WriteState.Content: 				CheckMixedContentState (); 				break; 			}
Missing Default,MonoDevelop.Xml.Formatting,XmlFormatterWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,WriteEscapedBuffer,The following switch statement is missing a default case: switch (text [i]) { 					case '&': writer.Write ("amp;"); break; 					case '<': writer.Write ("lt;"); break; 					case '>': writer.Write ("gt;"); break; 					case '\'': writer.Write ("apos;"); break; 					case '"': writer.Write ("quot;"); break; 					}
Missing Default,MonoDevelop.Xml.Formatting,XmlNamespaceManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Formatting\XmlFormatterWriter.cs,LookupNamespace,The following switch statement is missing a default case: switch (prefix) { 			case PrefixXmlns: 				return nameTable.Get (XmlnsXmlns); 			case PrefixXml: 				return nameTable.Get (XmlnsXml); 			case "": 				return DefaultNamespace; 			case null: 				return null; 			}
Missing Default,MonoDevelop.Xml.Editor,XmlTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlTextEditorExtension.cs,FindSchemaObjectReference,The following switch statement is missing a default case: switch (elementName) {  				case "element":  					return schemaCompletionData.FindElement(qualifiedName);  				case "attribute":  					return schemaCompletionData.FindAttribute(qualifiedName.Name);  				case "group":  					return schemaCompletionData.FindGroup(qualifiedName.Name);  				case "attributeGroup":  					return schemaCompletionData.FindAttributeGroup(qualifiedName.Name);  			}
Missing Default,MonoDevelop.Xml.Editor,XmlTextEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlTextEditorExtension.cs,FindSchemaObjectType,The following switch statement is missing a default case: switch (elementName) {  				case "element":  					return schemaCompletionData.FindComplexType(qualifiedName);  				case "attribute":  					return schemaCompletionData.FindSimpleType(qualifiedName.Name);  			}
Missing Default,MonoDevelop.Xml.Editor,XmlExpandSelectionAnnotation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,GetCurrent,The following switch statement is missing a default case: switch (Level) { 				case SelectionLevel.Self: 					return current.Region; 				case SelectionLevel.WithClosing: 					var element = (XElement)current; 					return new DocumentRegion (element.Region.Begin' element.ClosingTag.Region.End); 				case SelectionLevel.Name: 					return current.TryGetNameRegion ().Value; 				case SelectionLevel.Content: 					if (current is XElement el) { 						return new DocumentRegion (el.Region.End' el.ClosingTag.Region.Begin); 					} 					return ((XAttribute)current).GetAttributeValueRegion (document); 				case SelectionLevel.Document: 					return new DocumentRegion (new DocumentLocation (1' 1)' document.OffsetToLocation (document.Length)); 				case SelectionLevel.Attributes: 					return ((XElement)current).GetAttributesRegion (); 				}
Missing Default,MonoDevelop.Xml.Editor,XmlExpandSelectionAnnotation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,GrowStateInternal,The following switch statement is missing a default case: switch (Level) { 						case SelectionLevel.Self: 							if (!element.IsSelfClosing) { 								Level = SelectionLevel.WithClosing; 								return true; 							} 							break; 						case SelectionLevel.Content: 							Level = SelectionLevel.WithClosing; 							return true; 						case SelectionLevel.Name: 							Level = SelectionLevel.Self; 							return true; 						case SelectionLevel.Attributes: 							Level = SelectionLevel.Self; 							return true; 						}
Missing Default,MonoDevelop.Xml.Editor,XmlExpandSelectionAnnotation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\Xml\Editor\XmlExpandSelectionHandler.cs,GrowStateInternal,The following switch statement is missing a default case: switch (Level) { 						case SelectionLevel.Name: 						case SelectionLevel.Content: 							Level = SelectionLevel.Self; 							return true; 						}
