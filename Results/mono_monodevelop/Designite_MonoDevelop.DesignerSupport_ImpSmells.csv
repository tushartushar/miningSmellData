Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The method has 151 lines of code.
Long Method,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The method has 115 lines of code.
Complex Method,MonoDevelop.DesignerSupport.Toolbox,ToolboxItemToolboxLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxItemToolboxLoader.cs,Load,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Initialize,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnKeyPressEvent,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,IterateItems,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,Iterate,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.DesignerSupport.Toolbox,CecilToolboxItemLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\CecilToolboxItemLoader.cs,Load,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.DesignerSupport,DesignerSupportService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\DesignerSupportService.cs,SetPad,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.DesignerSupport,ToolboxService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\ToolboxService.cs,GetToolboxItems,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.DesignerSupport,ToolboxService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\ToolboxService.cs,FilterPermitted,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.DesignerSupport,ToolboxService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\ToolboxService.cs,GetComponentIndex,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.DesignerSupport,BindingService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\BindingService.cs,ApplyMDDomModifiersToCodeDom,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.DesignerSupport,CodeBehind,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\CodeBehind.cs,GuessDependencies,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.DesignerSupport,PropertyPadVisitor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\PropertyPadVisitor.cs,Visit,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.DesignerSupport,CustomToolStringsConverter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Projects\ProjectFileDescriptor.CustomToolStringsConverter.cs,GetStandardStrings,Cyclomatic complexity of the method is 13
Long Parameter List,MonoDevelop.DesignerSupport.Toolbox,ToolboxItemToolboxLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxItemToolboxLoader.cs,GetNode,The method has 5 parameters. Parameters: type' attribute' attributeCategory' assemblyPath' referencedRuntime
Long Parameter List,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,ProcessExpandAnimation,The method has 6 parameters. Parameters: cr' lastCategory' lastCategoryYpos' backColor' area' ypos
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ItemToolboxNode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ItemToolboxNode.cs,Equals,The length of the statement  "			return (node != null) && (node.Name == this.Name) && (node.Category == this.Category) && (node.Description == this.Description) && (node.Source == this.Source);" is 160.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,LoaderContext,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\IToolboxLoader.cs,CreateExternalLoader,The length of the statement  "				eloader = (ExternalLoader) Runtime.ProcessService.CreateExternalProcessObject (typeof(ExternalLoader)' runtime.GetExecutionHandler ());" is 135.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,AddItem,The length of the statement  "					it = store.AppendValues (false' co.Category' string.Empty' string.Empty' string.Empty' null' null' false' (int)Pango.Weight.Bold);" is 130.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,AddItem,The length of the statement  "				store.AppendValues (it' currentItems.ContainsKey (co)' co.Name' string.Empty' ifile.Name' ifile.Location' img' co' true' (int)Pango.Weight.Normal);" is 147.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,AddItem,The length of the statement  "				store.AppendValues (currentItems.ContainsKey (co)' co.Name' string.Empty' ifile.Name' ifile.Location' img' co' true' (int)Pango.Weight.Normal);" is 143.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,Convert,The length of the statement  "			return new Cairo.Color (color.Red / (double)ushort.MaxValue' color.Green / (double)ushort.MaxValue' color.Blue / (double)ushort.MaxValue);" is 138.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The length of the statement  "					messageLayout.SetText (MonoDevelop.Core.GettextCatalog.GetString ("There are no tools available for the current document."));" is 125.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The length of the statement  "				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));" is 139.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The length of the statement  "					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small;" is 122.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The length of the statement  "					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale);" is 134.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The length of the statement  "					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2));" is 143.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The length of the statement  "					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2));" is 148.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,CecilToolboxItemLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\CecilToolboxItemLoader.cs,Load,The length of the statement  "			using (MC.AssemblyDefinition assem = MC.AssemblyDefinition.ReadAssembly (filename' new MC.ReaderParameters { AssemblyResolver = resolver })) { " is 142.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,Toolbox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\Toolbox.cs,ShowPopup,The length of the statement  "			CommandEntrySet eset = IdeApp.CommandService.CreateCommandEntrySet ("/MonoDevelop/DesignerSupport/ToolboxItemContextMenu");" is 123.
Long Statement,MonoDevelop.DesignerSupport.Toolbox,Toolbox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\Toolbox.cs,OnDeleteItem,The length of the statement  "			if (MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to remove the selected Item?")' AlertButton.Delete))" is 129.
Long Statement,MonoDevelop.DesignerSupport,DesignerSupportService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\DesignerSupportService.cs,SetPad,The length of the statement  "							LoggingService.LogInternalError ($"There was an error trying to GetCustomPropertyWidget from '{lastCustomProvider.GetType ()}' provider"' ex);" is 142.
Long Statement,MonoDevelop.DesignerSupport,DesignerSupportService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\DesignerSupportService.cs,SetPadContent,The length of the statement  "						LoggingService.LogInternalError ($"There was an error trying to GetCustomPropertyWidget from '{lastCustomProvider.GetType ()}' provider"' ex);" is 142.
Long Statement,MonoDevelop.DesignerSupport,DesignerSupportService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\DesignerSupportService.cs,GetProvidersForObject,The length of the statement  "				providers = (IPropertyProvider[]) AddinManager.GetExtensionObjects ("/MonoDevelop/DesignerSupport/PropertyProviders"' typeof(IPropertyProvider)' true);" is 151.
Long Statement,MonoDevelop.DesignerSupport,ComponentIndexFile,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\ToolboxService.cs,Update,The length of the statement  "				location = Runtime.SystemAssemblyService.DefaultAssemblyContext.GetAssemblyFullName (fileName' TargetFramework.Default);" is 120.
Long Statement,MonoDevelop.DesignerSupport,BindingService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\BindingService.cs,GetCompatibleMethodsInClass,The length of the statement  "				if (method.DeclaredAccessibility == Accessibility.Private || method.Parameters.Length != pars.Length || !method.ReturnType.Equals (matchMethType) " is 145.
Long Statement,MonoDevelop.DesignerSupport,ErrorInFileException,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\ErrorInFileException.cs,ToString,The length of the statement  "			return MonoDevelop.Core.GettextCatalog.GetString ("Error in file '{0}' at line {1}' column {2}."' fileName' line' column);" is 122.
Complex Conditional,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnMotionNotifyEvent,The conditional expression  "xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height"  is complex.
Complex Conditional,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnMotionNotifyEvent,The conditional expression  "xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height"  is complex.
Complex Conditional,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,GetItemBelow,The conditional expression  "ypos > rect.Y && xpos == rect.X && result == item && curCategory == itemCategory"  is complex.
Complex Conditional,MonoDevelop.DesignerSupport,BindingService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\BindingService.cs,GetCompatibleMethodsInClass,The conditional expression  "method.DeclaredAccessibility == Accessibility.Private || method.Parameters.Length != pars.Length || !method.ReturnType.Equals (matchMethType)  					|| method.DeclaredAccessibility == Accessibility.Internal"  is complex.
Virtual Method Call from Constructor,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,ComponentSelectorDialog,The constructor "ComponentSelectorDialog" calls a virtual method "Build".
Empty Catch Block,MonoDevelop.DesignerSupport.Toolbox,LoaderContext,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\IToolboxLoader.cs,Dispose,The method has an empty catch block.
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxItemToolboxLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxItemToolboxLoader.cs,Load,The following statement contains a magic number: an.Version == new Version (4' 0' 0' 0)
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxItemToolboxLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxItemToolboxLoader.cs,Load,The following statement contains a magic number: an.Version == new Version (2' 0' 0' 0)
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxItemToolboxLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxItemToolboxLoader.cs,Load,The following statement contains a magic number: an.Version == new Version (1' 0' 5000' 0)
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,ComponentSelectorDialog,The following statement contains a magic number: col.Spacing = 3;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,ComponentSelectorDialog,The following statement contains a magic number: crx.Width = 150;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,AddItem,The following statement contains a magic number: Xwt.Drawing.Image img = co.Icon != null ? co.Icon.WithSize (16' 16) : null;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,AddItem,The following statement contains a magic number: Xwt.Drawing.Image img = co.Icon != null ? co.Icon.WithSize (16' 16) : null;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: this.vbox2.BorderWidth = ((uint)(6));
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: w4.Position = 2;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 2;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: w8.Position = 3;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: w12.Position = 2;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: w14.Spacing = 10;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: w14.BorderWidth = ((uint)(5));
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: w14.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget (this.buttonCancel' -6);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: this.DefaultWidth = 642;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ComponentSelectorDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ComponentSelectorDialog.cs,Build,The following statement contains a magic number: this.DefaultHeight = 433;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,ClearCategories,The following statement contains a magic number: iconSize = new Gdk.Size (24' 24);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,ClearCategories,The following statement contains a magic number: iconSize = new Gdk.Size (24' 24);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: messageLayout.Width = (int)(Allocation.Width * 2 / 3 * Pango.Scale.PangoScale);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: messageLayout.Width = (int)(Allocation.Width * 2 / 3 * Pango.Scale.PangoScale);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: cr.MoveTo (Allocation.Width * 1 / 6' 12);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: cr.MoveTo (Allocation.Width * 1 / 6' 12);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				ProcessExpandAnimation (cr' lastCategory' lastCategoryYpos' backColor' area' ref ypos);  				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true; 				cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 				cr.SetSourceColor (Ide.Gui.Styles.PadCategoryBackgroundColor.ToCairoColor ()); 				cr.Fill ();  				if (lastCategory == null || lastCategory.IsExpanded || lastCategory.AnimatingExpand) { 					cr.MoveTo (xpos' ypos + 0.5); 					cr.LineTo (itemDimension.Width' ypos + 0.5); 				} 				cr.MoveTo (0' ypos + itemDimension.Height - 0.5); 				cr.LineTo (xpos + Allocation.Width' ypos + itemDimension.Height - 0.5); 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryBorderColor.ToCairoColor ()); 				cr.Stroke ();  				headerLayout.SetMarkup (category.Text); 				int width' height; 				cr.SetSourceColor (MonoDevelop.Ide.Gui.Styles.PadCategoryLabelColor.ToCairoColor ()); 				headerLayout.GetPixelSize (out width' out height); 				cr.MoveTo (xpos + CategoryLeftPadding' ypos + (double)(Math.Round ((double)(itemDimension.Height - height) / 2))); 				Pango.CairoHelper.ShowLayout (cr' headerLayout);  				var img = category.IsExpanded ? discloseUp : discloseDown; 				cr.DrawImage (this' img' Allocation.Width - img.Width - CategoryRightPadding' ypos + Math.Round ((itemDimension.Height - img.Height) / 2));  				lastCategory = category; 				lastCategoryYpos = ypos + itemDimension.Height;  				return true; 			}' (curCategory' item' itemDimension) => { 				if (!area.IntersectsWith (new Gdk.Rectangle (new Gdk.Point (xpos' ypos)' itemDimension))) 					return true;  				var icon = item.Icon; 				if (!icon.HasFixedSize) { 					var maxIconSize = Math.Min (itemDimension.Width' itemDimension.Height); 					var fittingIconSize = maxIconSize > 32 ? Xwt.IconSize.Large : maxIconSize > 16 ? Xwt.IconSize.Medium : Xwt.IconSize.Small; 					icon = item.Icon.WithSize (fittingIconSize); 				} 				if (item == SelectedItem) { 					icon = icon.WithStyles ("sel"); 					cr.SetSourceColor (Style.Base (StateType.Selected).ToCairoColor ()); 					cr.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					cr.Fill (); 				} 				if (listMode || !curCategory.CanIconizeItems) { 					cr.DrawImage (this' icon' xpos + ItemLeftPadding' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 					layout.SetMarkup (item.Text); 					layout.Width = (int)((itemDimension.Width - ItemIconTextItemSpacing - iconSize.Width - ItemLeftPadding * 2) * Pango.Scale.PangoScale); 					layout.GetPixelSize (out var width' out var height); 					cr.SetSourceColor (Style.Text (item != SelectedItem ? StateType.Normal : StateType.Selected).ToCairoColor ()); 					cr.MoveTo (xpos + ItemLeftPadding + iconSize.Width + ItemIconTextItemSpacing' ypos + Math.Round ((double)(itemDimension.Height - height) / 2)); 					Pango.CairoHelper.ShowLayout (cr' layout); 				} else { 					cr.DrawImage (this' icon' xpos + Math.Round ((itemDimension.Width - icon.Width) / 2)' ypos + Math.Round ((itemDimension.Height - icon.Height) / 2)); 				}  				if (item == mouseOverItem) { 					cr.SetSourceColor (Style.Dark (StateType.Prelight).ToCairoColor ()); 					cr.Rectangle (xpos + 0.5' ypos + 0.5' itemDimension.Width - 1' itemDimension.Height - 1); 					cr.Stroke (); 				}  				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnExposeEvent,The following statement contains a magic number: cr.MoveTo (area.X' ypos + 0.5);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,StartExpandAnimation,The following statement contains a magic number: tweener = new Xwt.Motion.Tweener (animationDurationMs' 10) { Easing = Xwt.Motion.Easing.SinOut };
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnMotionNotifyEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				if (xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height) { 					mouseOverItem = category; 					GdkWindow.Cursor = handCursor; 					if (!e.State.HasFlag (ModifierType.Button1Mask)) 						ShowTooltip (mouseOverItem' TipTimer' (int)e.X + 2' (int)e.Y + 16); 					newItemExtents = new Gdk.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					return false; 				} 				return true; 			}' (curCategory' item' itemDimension) => { 				if (xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height) { 					mouseOverItem = item; 					GdkWindow.Cursor = null; 					if (!e.State.HasFlag (ModifierType.Button1Mask)) 						ShowTooltip (mouseOverItem' TipTimer' (int)e.X + 2' (int)e.Y + 16); 					newItemExtents = new Gdk.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					return false; 				} 				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnMotionNotifyEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				if (xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height) { 					mouseOverItem = category; 					GdkWindow.Cursor = handCursor; 					if (!e.State.HasFlag (ModifierType.Button1Mask)) 						ShowTooltip (mouseOverItem' TipTimer' (int)e.X + 2' (int)e.Y + 16); 					newItemExtents = new Gdk.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					return false; 				} 				return true; 			}' (curCategory' item' itemDimension) => { 				if (xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height) { 					mouseOverItem = item; 					GdkWindow.Cursor = null; 					if (!e.State.HasFlag (ModifierType.Button1Mask)) 						ShowTooltip (mouseOverItem' TipTimer' (int)e.X + 2' (int)e.Y + 16); 					newItemExtents = new Gdk.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					return false; 				} 				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnMotionNotifyEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				if (xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height) { 					mouseOverItem = category; 					GdkWindow.Cursor = handCursor; 					if (!e.State.HasFlag (ModifierType.Button1Mask)) 						ShowTooltip (mouseOverItem' TipTimer' (int)e.X + 2' (int)e.Y + 16); 					newItemExtents = new Gdk.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					return false; 				} 				return true; 			}' (curCategory' item' itemDimension) => { 				if (xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height) { 					mouseOverItem = item; 					GdkWindow.Cursor = null; 					if (!e.State.HasFlag (ModifierType.Button1Mask)) 						ShowTooltip (mouseOverItem' TipTimer' (int)e.X + 2' (int)e.Y + 16); 					newItemExtents = new Gdk.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					return false; 				} 				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnMotionNotifyEvent,The following statement contains a magic number: Iterate (ref xpos' ref ypos' (category' itemDimension) => { 				if (xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height) { 					mouseOverItem = category; 					GdkWindow.Cursor = handCursor; 					if (!e.State.HasFlag (ModifierType.Button1Mask)) 						ShowTooltip (mouseOverItem' TipTimer' (int)e.X + 2' (int)e.Y + 16); 					newItemExtents = new Gdk.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					return false; 				} 				return true; 			}' (curCategory' item' itemDimension) => { 				if (xpos <= mouseX && mouseX <= xpos + itemDimension.Width && 					ypos <= mouseY && mouseY <= ypos + itemDimension.Height) { 					mouseOverItem = item; 					GdkWindow.Cursor = null; 					if (!e.State.HasFlag (ModifierType.Button1Mask)) 						ShowTooltip (mouseOverItem' TipTimer' (int)e.X + 2' (int)e.Y + 16); 					newItemExtents = new Gdk.Rectangle (xpos' ypos' itemDimension.Width' itemDimension.Height); 					return false; 				} 				return true; 			});
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,IterateItems,The following statement contains a magic number: y += ItemTopBottomPadding * 2;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,Iterate,The following statement contains a magic number: y += CategoryTopBottomPadding * 2;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = 50;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = 50;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnSizeRequested,The following statement contains a magic number: this.vAdjustement.SetBounds (0' 											 ypos' 											 20' 											 Allocation.Height' 											 Allocation.Height);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,ShowTooltip,The following statement contains a magic number: y = y - h - 20;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,CustomTooltipWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,CustomTooltipWindow,The following statement contains a magic number: label.Xpad = 3;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,CustomTooltipWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,CustomTooltipWindow,The following statement contains a magic number: label.Ypad = 3;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,CecilToolboxItemLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\CecilToolboxItemLoader.cs,Load,The following statement contains a magic number: switch (assem.MainModule.Runtime) {  				case MC.TargetRuntime.Net_1_0:  				case MC.TargetRuntime.Net_1_1:  					runtimeVersion = new Version (1' 0' 5000' 0); break;  				case MC.TargetRuntime.Net_2_0:  					runtimeVersion = new Version (2' 0' 0' 0); break;  				default:  					throw new NotSupportedException ("Runtime '" + assem.MainModule.Runtime + "' is not supported.");  				}
Magic Number,MonoDevelop.DesignerSupport.Toolbox,CecilToolboxItemLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\CecilToolboxItemLoader.cs,Load,The following statement contains a magic number: switch (assem.MainModule.Runtime) {  				case MC.TargetRuntime.Net_1_0:  				case MC.TargetRuntime.Net_1_1:  					runtimeVersion = new Version (1' 0' 5000' 0); break;  				case MC.TargetRuntime.Net_2_0:  					runtimeVersion = new Version (2' 0' 0' 0); break;  				default:  					throw new NotSupportedException ("Runtime '" + assem.MainModule.Runtime + "' is not supported.");  				}
Magic Number,MonoDevelop.DesignerSupport.Toolbox,CecilToolboxItemLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\CecilToolboxItemLoader.cs,TypeReferenceFromString,The following statement contains a magic number: System.Diagnostics.Debug.Assert (split.Length >= 2);
Magic Number,MonoDevelop.DesignerSupport.Toolbox,CecilToolboxItemLoader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\CecilToolboxItemLoader.cs,TypeReferenceFromString,The following statement contains a magic number: version = new Version (val.Substring (8));
Magic Number,MonoDevelop.DesignerSupport.Toolbox,Toolbox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\Toolbox.cs,Toolbox,The following statement contains a magic number: filterEntry.WidthRequest = 150;
Magic Number,MonoDevelop.DesignerSupport.Toolbox,Toolbox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\Toolbox.cs,Toolbox,The following statement contains a magic number: scrolledWindow.WidthRequest = 150;
Magic Number,MonoDevelop.DesignerSupport,ToolboxService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\ToolboxService.cs,onProjectConfigChanged,The following statement contains a magic number: GLib.Timeout.Add (500' delegate { 				configChanged = false; 				OnToolboxContentsChanged (); 				return false; 			});
Magic Number,MonoDevelop.DesignerSupport,RemoteDesignerProcess,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\RemoteDesignerProcess.cs,GuiThread,The following statement contains a magic number: System.Threading.Thread.Sleep (500);
Magic Number,MonoDevelop.DesignerSupport,RemoteDesignerProcess,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\RemoteDesignerProcess.cs,ShowText,The following statement contains a magic number: padFrame.BorderWidth = 10;
Magic Number,MonoDevelop.DesignerSupport,WrappedCentreLabel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\DocumentOutlinePad.cs,OnExposeEvent,The following statement contains a magic number: layout.Width = (int)(Allocation.Width * 2 / 3 * Pango.Scale.PangoScale);
Magic Number,MonoDevelop.DesignerSupport,WrappedCentreLabel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\DocumentOutlinePad.cs,OnExposeEvent,The following statement contains a magic number: layout.Width = (int)(Allocation.Width * 2 / 3 * Pango.Scale.PangoScale);
Magic Number,MonoDevelop.DesignerSupport,WrappedCentreLabel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\DocumentOutlinePad.cs,OnExposeEvent,The following statement contains a magic number: Gtk.Style.PaintLayout (Style' GdkWindow' State' false' evnt.Area' 				    this' null' Allocation.Width * 1 / 6 + Allocation.X ' 12 + Allocation.Y' layout);
Magic Number,MonoDevelop.DesignerSupport,WrappedCentreLabel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\DocumentOutlinePad.cs,OnExposeEvent,The following statement contains a magic number: Gtk.Style.PaintLayout (Style' GdkWindow' State' false' evnt.Area' 				    this' null' Allocation.Width * 1 / 6 + Allocation.X ' 12 + Allocation.Y' layout);
Magic Number,MonoDevelop.DesignerSupport,CodeBehind,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\CodeBehind.cs,GuessDependencies,The following statement contains a magic number: parentName = parentName.Substring (0' parentName.Length - 9);
Missing Default,MonoDevelop.DesignerSupport.Toolbox,ToolboxWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport.Toolbox\ToolboxWidget.cs,OnKeyPressEvent,The following switch statement is missing a default case: switch (evnt.Key) { 			case Gdk.Key.KP_Enter: 			case Gdk.Key.Return: 				if (this.SelectedItem != null) 					this.OnActivateSelectedItem (EventArgs.Empty); 				return true; 			case Gdk.Key.KP_Up: 			case Gdk.Key.Up: 				if (this.listMode || this.SelectedItem is ToolboxWidgetCategory) { 					this.SelectedItem = GetPrevItem (this.SelectedItem); 				} else { 					nextItem = GetItemAbove (this.SelectedItem); 					this.SelectedItem = nextItem != this.SelectedItem ? nextItem : GetCategory (this.SelectedItem); 				} 				this.QueueDraw (); 				return true; 			case Gdk.Key.KP_Down: 			case Gdk.Key.Down: 				if (this.listMode || this.SelectedItem is ToolboxWidgetCategory) { 					this.SelectedItem = GetNextItem (this.SelectedItem); 				} else { 					nextItem = GetItemBelow (this.SelectedItem); 					if (nextItem == this.SelectedItem) { 						ToolboxWidgetCategory category = GetCategory (this.SelectedItem); 						nextItem = GetNextCategory (category); 						if (nextItem == category) 							nextItem = this.SelectedItem; 					} 					this.SelectedItem = nextItem; 				} 				this.QueueDraw (); 				return true;  			case Gdk.Key.KP_Left: 			case Gdk.Key.Left: 				if (this.SelectedItem is ToolboxWidgetCategory) { 					SetCategoryExpanded ((ToolboxWidgetCategory)this.SelectedItem' false); 				} else { 					if (this.listMode) { 						this.SelectedItem = GetCategory (this.SelectedItem); 					} else { 						this.SelectedItem = GetItemLeft (this.SelectedItem); 					} 				} 				this.QueueDraw (); 				return true;  			case Gdk.Key.KP_Right: 			case Gdk.Key.Right: 				if (this.SelectedItem is ToolboxWidgetCategory selectedCategory) { 					if (selectedCategory.IsExpanded) { 						if (selectedCategory.ItemCount > 0) 							this.SelectedItem = selectedCategory.Items [0]; 					} else { 						SetCategoryExpanded (selectedCategory' true); 					} 				} else { 					if (this.listMode) { 						// nothing 					} else { 						this.SelectedItem = GetItemRight (this.SelectedItem); 					} 				} 				this.QueueDraw (); 				return true;  			}
Missing Default,MonoDevelop.DesignerSupport,ToolboxService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\ToolboxService.cs,FilterPermitted,The following switch statement is missing a default case: switch (desFa.FilterType) { 				case ToolboxItemFilterType.Allow: 					//this is really for matching some other filter string against 					return true; 				 				case ToolboxItemFilterType.Custom: 					return consumer.CustomFilterSupports (node); 					 				case ToolboxItemFilterType.Prevent: 					//if host and toolboxitem have same filterstring' then not permitted 					foreach (ToolboxItemFilterAttribute itemFa in filterAgainst) 						if (desFa.Match (itemFa)) 							return false; 					return true; 				 				case ToolboxItemFilterType.Require: 					//if host and toolboxitem have same filterstring' then permitted' unless one is prevented 					foreach (ToolboxItemFilterAttribute itemFa in filterAgainst) 						if (desFa.Match (itemFa) && (desFa.FilterType != ToolboxItemFilterType.Prevent)) 							return true; 					return false; 			}
Missing Default,MonoDevelop.DesignerSupport,BindingService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.DesignerSupport\MonoDevelop.DesignerSupport\BindingService.cs,ApplyMDDomModifiersToCodeDom,The following switch statement is missing a default case: switch (entity.DeclaredAccessibility) { 			case Accessibility.ProtectedOrInternal: 				initialState = (initialState & ~MemberAttributes.AccessMask) | MemberAttributes.FamilyOrAssembly; 				break; 			case Accessibility.ProtectedAndInternal: 				initialState = (initialState & ~MemberAttributes.AccessMask) | MemberAttributes.FamilyAndAssembly; 				break; 			case Accessibility.Protected: 				initialState = (initialState & ~MemberAttributes.AccessMask) | MemberAttributes.Family; 				break; 			case Accessibility.Internal: 				initialState = (initialState & ~MemberAttributes.AccessMask) | MemberAttributes.Assembly; 				break; 			case Accessibility.Public: 				initialState = (initialState & ~MemberAttributes.AccessMask) | MemberAttributes.Public; 				break; 			case Accessibility.Private: 				initialState = (initialState & ~MemberAttributes.AccessMask) | MemberAttributes.Private; 				break; 			}
