Implementation smell,Namespace,Class,File,Method,Description
Long Method,MDBuildTasks,FilterLocalCopyReferences,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\FilterLocalCopyReferences.cs,Execute,The method has 117 lines of code.
Complex Method,MDBuildTasks,DownloadFiles,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\DownloadFiles.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,MDBuildTasks,FilterLocalCopyReferences,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\FilterLocalCopyReferences.cs,Execute,Cyclomatic complexity of the method is 29
Complex Method,MDBuildTasks,GenerateExtensionContentManifest,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\GenerateExtensionContentManifest.cs,Execute,Cyclomatic complexity of the method is 8
Long Parameter List,MDBuildTasks,DownloadFiles,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\DownloadFiles.cs,DownloadFile,The method has 7 parameters. Parameters: cacheDir' url' sha' useSha2' outputDir' outputName' unpack
Long Statement,MDBuildTasks,DownloadFiles,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\DownloadFiles.cs,Execute,The length of the statement  "				if (!DownloadFile (cacheDirectory' url' sha' useSha256' outDir' outputName' string.Equals (taskItem.GetMetadata ("Unpack")' "true"' StringComparison.OrdinalIgnoreCase))) {" is 171.
Long Statement,MDBuildTasks,FilterLocalCopyReferences,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\FilterLocalCopyReferences.cs,Execute,The length of the statement  "							var projectLocalCopyConeFile = GetLocalCopyConeFile (Path.GetDirectoryName (projectRef.GetMetadata ("FullPath"))' projectRef.GetMetadata ("Configuration")' projectRef.GetMetadata ("Platform")); " is 193.
Long Statement,MDBuildTasks,FilterLocalCopyReferences,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\FilterLocalCopyReferences.cs,Execute,The length of the statement  "					// Only make this change if the user hasn't explicitly put a *.resources.dll file in the include list (e.g. AndroidDeviceManager.Resources.dll should be treated like a normal DLL) " is 179.
Long Statement,MDBuildTasks,FilterLocalCopyReferences,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\FilterLocalCopyReferences.cs,Execute,The length of the statement  "					if (!includeKeyHash.Contains(includeKey) && includeKey.EndsWith (".resources.dll"' StringComparison.OrdinalIgnoreCase)) { " is 121.
Long Statement,MDBuildTasks,FilterLocalCopyReferences,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\FilterLocalCopyReferences.cs,GetLocalCopyConeFile,The length of the statement  "			if (!string.IsNullOrEmpty (platform) && !(string.Equals (platform' "anycpu"' StringComparison.OrdinalIgnoreCase) || string.Equals (platform' "any cpu"' StringComparison.OrdinalIgnoreCase))) { " is 191.
Magic Number,MDBuildTasks,DownloadFiles,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\DownloadFiles.cs,DownloadFile,The following statement contains a magic number: string cacheFile = Path.Combine (cacheDir' string.Format("{0}-{1}"' sha.Substring(0' 8)' outputName));
Missing Default,MDBuildTasks,FilterLocalCopyReferences,C:\research\architectureSmells\repos\mono_monodevelop\main\msbuild\MDBuildTasks\FilterLocalCopyReferences.cs,Execute,The following switch statement is missing a default case: switch (Path.GetExtension (includeKey).ToLowerInvariant ()) {  				case ".dll":  					// Only make this change if the user hasn't explicitly put a *.resources.dll file in the include list (e.g. AndroidDeviceManager.Resources.dll should be treated like a normal DLL)  					if (!includeKeyHash.Contains(includeKey) && includeKey.EndsWith (".resources.dll"' StringComparison.OrdinalIgnoreCase)) {  						includeKey = includeKey.Substring (0' includeKey.Length - ".resources.dll".Length) + ".dll";  					}  					break;  				case ".config":  					includeKey = Path.GetFileNameWithoutExtension (includeKey);  					break;  				case ".pdb":  				case ".xml":  					includeKey = Path.ChangeExtension (includeKey' ".dll");  					break;  				}
