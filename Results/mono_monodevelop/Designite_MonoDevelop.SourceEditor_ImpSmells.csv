Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The method has 135 lines of code.
Long Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Initialize,The method has 125 lines of code.
Long Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The method has 247 lines of code.
Long Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The method has 282 lines of code.
Long Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MousePressed,The method has 145 lines of code.
Long Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseHover,The method has 143 lines of code.
Long Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The method has 238 lines of code.
Long Method,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The method has 102 lines of code.
Long Method,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitCommonBindings,The method has 116 lines of code.
Long Method,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitDefaultBindings,The method has 103 lines of code.
Long Method,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitMacBindings,The method has 132 lines of code.
Long Method,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Save,The method has 120 lines of code.
Long Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The method has 186 lines of code.
Long Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,OnNavigateKeyPressEvent,The method has 123 lines of code.
Long Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The method has 165 lines of code.
Long Method,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The method has 118 lines of code.
Long Method,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The method has 204 lines of code.
Long Method,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The method has 259 lines of code.
Long Method,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The method has 186 lines of code.
Long Method,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The method has 101 lines of code.
Long Method,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The method has 221 lines of code.
Long Method,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The method has 132 lines of code.
Long Method,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The method has 207 lines of code.
Long Method,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetStyleNameFromClassificationName,The method has 118 lines of code.
Long Method,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,SMS,The method has 109 lines of code.
Complex Method,Mono.TextEditor,MdTextViewLineCollection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,MdTextViewLineCollection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,OnVisualBufferChanged,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,MdTextViewLineCollection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetTextViewLineContainingBufferPosition,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetTextElementSpan,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,RaiseHoverEvents,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,HandleMouseMove,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,RemoveCore,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,Cyclomatic complexity of the method is 14
Complex Method,Mono.TextEditor,FoldMarkerMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,HandleEditorCaretPositionChanged,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor,FoldMarkerMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,MouseHover,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,Draw,Cyclomatic complexity of the method is 14
Complex Method,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,HandleItemCommand,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Initialize,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,TextEditorDataSelectionChanged,Cyclomatic complexity of the method is 16
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,GetNextMargin,Cyclomatic complexity of the method is 12
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnDestroyed,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,HandleTextKey,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,ScrollTo,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnScrollEvent,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,SetHAdjustment,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,RenderMargins,Cyclomatic complexity of the method is 14
Complex Method,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,TooltipTimer,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor,CenterToWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Run,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,Cyclomatic complexity of the method is 22
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InternalHandleSelection,Cyclomatic complexity of the method is 14
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,TranslateToUTF8Index,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InnerDecorateTabsAndSpaces,Cyclomatic complexity of the method is 14
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawIndent,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,Cyclomatic complexity of the method is 37
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MousePressed,Cyclomatic complexity of the method is 30
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseReleased,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseHover,Cyclomatic complexity of the method is 29
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,RoundedRectangle,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,Cyclomatic complexity of the method is 34
Complex Method,Mono.TextEditor,VisualLocationTranslator,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,PointToLocation,Cyclomatic complexity of the method is 14
Complex Method,Mono.TextEditor,LineStateFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,Cyclomatic complexity of the method is 15
Complex Method,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,QuickFixMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\QuickFixMargin.cs,Draw,Cyclomatic complexity of the method is 13
Complex Method,Mono.TextEditor,QuickFixMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\QuickFixMargin.cs,HandleItemCommand,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,DiffTracker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\DiffTracker.cs,TrackDocument_TextChanged,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,EmacsWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\EmacsWordFindStrategy.cs,FindNextWordOffset,Cyclomatic complexity of the method is 12
Complex Method,Mono.TextEditor,EmacsWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\EmacsWordFindStrategy.cs,FindPrevWordOffset,Cyclomatic complexity of the method is 12
Complex Method,Mono.TextEditor,SegmentTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SegmentTree.cs,UpdateOnTextReplace,Cyclomatic complexity of the method is 12
Complex Method,Mono.TextEditor,SegmentTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SegmentTree.cs,GetSegmentsOverlapping,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,TreeSegment,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SegmentTree.cs,UpdateAugmentedData,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor,SharpDevelopWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SharpDevelopWordFindStrategy.cs,FindNextWordOffset,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor,SharpDevelopWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SharpDevelopWordFindStrategy.cs,FindPrevWordOffset,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,OptimizeTypedUndo,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,UpdateFoldSegmentWorker,Cyclomatic complexity of the method is 12
Complex Method,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,RemoveMarker,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,DocumentLineFromTextSnapshotLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,LineCode,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextVersionToTextSourceVersion,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,GetChangesTo,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,Left,Cyclomatic complexity of the method is 12
Complex Method,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,Right,Cyclomatic complexity of the method is 13
Complex Method,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,InternalCaretMoveHome,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,LineEnd,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,CopyOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,SetData,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,Cyclomatic complexity of the method is 16
Complex Method,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Delete,Cyclomatic complexity of the method is 16
Complex Method,Mono.TextEditor,MiscActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\MiscActions.cs,RemoveIndentSelection,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor,MiscActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\MiscActions.cs,InsertTab,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,MiscActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\MiscActions.cs,InsertNewLine,Cyclomatic complexity of the method is 12
Complex Method,Mono.TextEditor,MiscActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\MiscActions.cs,TransposeCharacters,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor,EditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\EditMode.cs,InsertCharacter,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor,HeightTree,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HeightTree.cs,LineNumberToY,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,BasicSearchEngine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\ISearchEngine.cs,GetMatchAt,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,BasicSearchEngine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\ISearchEngine.cs,ReplaceAll,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,UpdateLinksOnTextReplace,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,HandleKeypress,Cyclomatic complexity of the method is 16
Complex Method,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,Cyclomatic complexity of the method is 12
Complex Method,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,DrawUnderline,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,ConvertToPangoMarkup,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,GetMarkupAsync,Cyclomatic complexity of the method is 16
Complex Method,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,FormatString,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,OnIMProcessedKeyPressEvent,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Save,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnTextReplaced,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,UpdateBreakpoints,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,AddBreakpoint,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SetCompletionText,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.SourceEditor,MarkerOperationsHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MarkerOperationsHandler.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,OnNavigateKeyPressEvent,Cyclomatic complexity of the method is 33
Complex Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,UpdateResultInformLabel,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor,DebugValueTooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueTooltipProvider.cs,GetItem,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,OnDrawPage,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.SourceEditor,GrayOutMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\GrayOutMarker.cs,TransformChunks,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor,UnitTestMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UnitTestMarker.cs,InformMouseHover,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor,DefaultAutoInsertBracketHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DefaultAutoInsertBracketHandler.cs,Handle,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.SourceEditor,DefaultAutoInsertBracketHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DefaultAutoInsertBracketHandler.cs,GetTextWithoutCommentsAndStrings,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PopupAgent,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,ShowStyles,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,GetIndicatorStrings,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,GetQuickTasks,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,FocusNextTaskOrUsage,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,FocusNextArea,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnFocused,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,RunHandler,Cyclomatic complexity of the method is 21
Complex Method,Mono.TextEditor.PopupWindow,ListWidget<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWidget.cs,DrawList,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor.PopupWindow,ListWindow<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWindow.cs,ProcessKey,Cyclomatic complexity of the method is 15
Complex Method,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,RecalculateSpacings,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,RemoveCore,Cyclomatic complexity of the method is 11
Complex Method,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.VisualStudio.Text.Editor.Implementation,ConnectionManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\ConnectionManager.cs,ConnectionManager,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.VisualStudio.Text.Editor.Implementation,ConnectionManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\ConnectionManager.cs,OnGraphBuffersChanged,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetStyleNameFromClassificationName,Cyclomatic complexity of the method is 35
Complex Method,Microsoft.VisualStudio.Language.Intellisense.Implementation,MDUtils,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\MDUtils.cs,ClassificationsToMarkup,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.VisualStudio.Language.Intellisense.Implementation,MDUtils,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\MDUtils.cs,GetThemeColor,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.VisualStudio.Language.Intellisense.Implementation,Helpers,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Helpers.cs,GetMatchingPresenterStyles,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSession.cs,Recalculate,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSession.cs,OnCaretPositionChanged,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,MouseTrackingWpfToolTipPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\MouseTrackingWpfToolTipPresenter.cs,GetViewSpanRect,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor.Braces,BraceCompletionAggregator,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionAggregator.cs,Init,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.SourceEditor.Braces,ProviderHelper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionAggregator.cs,TryCreate,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor.Braces,BraceCompletionEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionEditorExtension.cs,KeyPress,Cyclomatic complexity of the method is 15
Complex Method,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,ToggleCase,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor.Highlighting,XmlReadHelper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Highlighting\XmlReadHelper.cs,ReadList,Cyclomatic complexity of the method is 8
Complex Method,Mono.TextEditor.Utils,CompressingTreeList<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\CompressingTreeList.cs,InsertRange,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor.Utils,CompressingTreeList<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\CompressingTreeList.cs,RemoveRange,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,SMS,Cyclomatic complexity of the method is 14
Complex Method,Mono.TextEditor.Utils,HtmlWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\HtmlWriter.cs,GenerateHtml,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor.Utils,HtmlWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\HtmlWriter.cs,AppendHtmlText,Cyclomatic complexity of the method is 9
Complex Method,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,Cyclomatic complexity of the method is 16
Complex Method,Mono.TextEditor.Utils,RtfWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RtfWriter.cs,AppendRtfText,Cyclomatic complexity of the method is 10
Complex Method,Mono.TextEditor.Utils,TextBreaker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\TextBreaker.cs,BreakLinesIntoWords,Cyclomatic complexity of the method is 11
Long Parameter List,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,MdTextViewLine,The method has 5 parameters. Parameters: collection' textEditor' line' lineNumber' layoutWrapper
Long Parameter List,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,Initialize,The method has 5 parameters. Parameters: textViewModel' roles' parentOptions' factoryService' initialize
Long Parameter List,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,DisplayTextLineContainingBufferPosition,The method has 5 parameters. Parameters: bufferPosition' verticalDistance' relativeTo' viewportWidthOverride' viewportHeightOverride
Long Parameter List,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,RemoveCore,The method has 6 parameters. Parameters: widget' duration' easing' blocking' use_easing' use_blocking
Long Parameter List,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,AddAnimatedWidget,The method has 6 parameters. Parameters: widget' duration' easing' blocking' x' y
Long Parameter List,Mono.TextEditor,ActionMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\ActionMargin.cs,DrawMarginBackground,The method has 5 parameters. Parameters: cr' line' x' y' lineHeight
Long Parameter List,Mono.TextEditor,ActionMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\ActionMargin.cs,Draw,The method has 7 parameters. Parameters: cr' area' lineSegment' line' x' y' lineHeight
Long Parameter List,Mono.TextEditor,DashedLineMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\DashedLineMargin.cs,Draw,The method has 7 parameters. Parameters: cr' area' lineSegment' line' x' y' lineHeight
Long Parameter List,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,DrawRoundRectangle,The method has 8 parameters. Parameters: cr' upperRound' lowerRound' x' y' r' w' h
Long Parameter List,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,DrawRoundRectangle,The method has 10 parameters. Parameters: cr' topLeftRound' topRightRound' bottomLeftRound' bottomRightRound' x' y' r' w' h
Long Parameter List,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,ClampRect,The method has 6 parameters. Parameters: x' y' r' w' h' area
Long Parameter List,Mono.TextEditor,FoldMarkerMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNumber' x' y' lineHeight
Long Parameter List,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,DrawGutterBackground,The method has 5 parameters. Parameters: cr' line' x' y' lineHeight
Long Parameter List,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,Draw,The method has 7 parameters. Parameters: cr' area' lineSegment' line' x' y' lineHeight
Long Parameter List,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,DrawForeground,The method has 6 parameters. Parameters: cr' line' x' y' lineHeight' isSpaceAbove
Long Parameter List,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNumber' x' y' lineHeight
Long Parameter List,Mono.TextEditor,BookmarkMarginDrawEventArgs,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,BookmarkMarginDrawEventArgs,The method has 6 parameters. Parameters: editor' context' line' lineNumber' xPos' yPos
Long Parameter List,Mono.TextEditor,Margin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\Margin.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNumber' x' y' lineHeight
Long Parameter List,Mono.TextEditor,MarginMouseEventArgs,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\Margin.cs,MarginMouseEventArgs,The method has 6 parameters. Parameters: editor' raw' button' x' y' modifierState
Long Parameter List,Mono.TextEditor,MarginMouseEventArgs,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\Margin.cs,MarginMouseEventArgs,The method has 6 parameters. Parameters: editor' type' button' x' y' modifierState
Long Parameter List,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnDragDataReceived,The method has 6 parameters. Parameters: context' x' y' selection_data' info' time_
Long Parameter List,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,ShowTooltip,The method has 5 parameters. Parameters: modifierState' offset' xloc' yloc' timeOut
Long Parameter List,Mono.TextEditor,SetCaret,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,SetCaret,The method has 5 parameters. Parameters: view' line' column' highlightCaretLine' centerCaret
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetFontMetrics,The method has 5 parameters. Parameters: font' lineHeight' charWidth' underlinePosition' underLineThickness
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The method has 6 parameters. Parameters: line' logicalRulerColumn' offset' length' selectionStart' selectionEnd
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InternalHandleSelection,The method has 6 parameters. Parameters: selectionStart' selectionEnd' startOffset' endOffset' handleNotSelected' handleSelected
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,HandleSelection,The method has 8 parameters. Parameters: lineOffset' logicalRulerColumn' selectionStart' selectionEnd' startOffset' endOffset' handleNotSelected' handleSelected
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The method has 5 parameters. Parameters: line' offset' length' selectionStart' selectionEnd
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InnerDecorateTabsAndSpaces,The method has 8 parameters. Parameters: ctx' layout' offset' x' y' selectionStart' selectionEnd' spaceOrTab
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DecorateTabsAndSpaces,The method has 7 parameters. Parameters: ctx' layout' offset' x' y' selectionStart' selectionEnd
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaretLineMarker,The method has 5 parameters. Parameters: cr' xPos' y' width' lineHeight
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawIndent,The method has 5 parameters. Parameters: cr' layout' line' xPos' y
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The method has 11 parameters. Parameters: cr' line' lineNumber' logicalRulerColumn' offset' length' position' isSelectionDrawn' y' maxX' _lineHeight
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawEolMarker,The method has 5 parameters. Parameters: cr' line' selected' x' y
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawRectangleWithRuler,The method has 5 parameters. Parameters: cr' x' area' color' drawDefaultBackground
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,RoundedRectangle,The method has 8 parameters. Parameters: cr' x' y' w' h' r' corners' topBottomFallsThrough
Long Parameter List,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNr' x' y' _lineHeight
Long Parameter List,Mono.TextEditor,LayoutDescriptor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,LayoutDescriptor,The method has 7 parameters. Parameters: doc' line' offset' length' layout' selectionStart' selectionEnd
Long Parameter List,Mono.TextEditor,LayoutDescriptor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Equals,The method has 6 parameters. Parameters: line' lineText' length' cachedLine' selectionStart' selectionEnd
Long Parameter List,Mono.TextEditor,ChunkDescriptor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,ChunkDescriptor,The method has 5 parameters. Parameters: doc' line' offset' length' chunk
Long Parameter List,Mono.TextEditor,TooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TooltipProvider.cs,ShowTooltipWindow,The method has 7 parameters. Parameters: editor' tipWindow' offset' modifierState' mouseX' mouseY' item
Long Parameter List,Mono.TextEditor,TooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TooltipProvider.cs,ShowAndPositionTooltip,The method has 6 parameters. Parameters: editor' tipWindow' mouseX' mouseY' width' xalign
Long Parameter List,Mono.TextEditor,FoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNumber' x' y' lineHeight
Long Parameter List,Mono.TextEditor,LineStateFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNumber' x' y' lineHeight
Long Parameter List,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The method has 5 parameters. Parameters: ctx' x' y' isOpen' isSelected
Long Parameter List,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNumber' x' y' lineHeight
Long Parameter List,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNumber' x' y' lineHeight
Long Parameter List,Mono.TextEditor,QuickFixMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\QuickFixMargin.cs,Draw,The method has 7 parameters. Parameters: cr' area' line' lineNumber' x' y' lineHeight
Long Parameter List,Mono.TextEditor,LineSegment,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\LazyLineSplitter.cs,LineSegment,The method has 5 parameters. Parameters: splitter' lineNumber' offset' length' newLine
Long Parameter List,Mono.TextEditor,PrimitiveLineSegment,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\PrimitiveLineSplitter.cs,PrimitiveLineSegment,The method has 5 parameters. Parameters: splitter' lineNumber' offset' length' newLine
Long Parameter List,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The method has 5 parameters. Parameters: clipboard' data' preserveSelection' insertionOffset' preserveState
Long Parameter List,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PastePlainText,The method has 5 parameters. Parameters: data' offset' text' preserveSelection' copyData
Long Parameter List,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The method has 6 parameters. Parameters: cr' x' y' r' w' h
Long Parameter List,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,InternalMoveTo,The method has 5 parameters. Parameters: bufferPosition' caretAffinity' captureHorizontalPosition' captureVerticalPosition' raiseEvent
Long Parameter List,Mono.TextEditor,EditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\EditMode.cs,InternalHandleKeypress,The method has 5 parameters. Parameters: editor' data' key' unicodeChar' modifier
Long Parameter List,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,DrawLine,The method has 6 parameters. Parameters: cr' color' x1' y1' x2' y2
Long Parameter List,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,Line,The method has 5 parameters. Parameters: cr' x1' y1' x2' y2
Long Parameter List,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,SharpLineX,The method has 5 parameters. Parameters: cr' x1' y1' x2' y2
Long Parameter List,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,SharpLineY,The method has 5 parameters. Parameters: cr' x1' y1' x2' y2
Long Parameter List,Mono.TextEditor,MarginDrawMetrics,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\MarginMarker.cs,MarginDrawMetrics,The method has 7 parameters. Parameters: margin' area' lineSegment' lineNumber' x' y' height
Long Parameter List,Mono.TextEditor,TextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,Draw,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,Mono.TextEditor,TextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,DrawBackground,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,Draw,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The method has 11 parameters. Parameters: markerStart' markerEnd' editor' cr' metrics' selected' startOffset' endOffset' y' startXPos' endXPos
Long Parameter List,Mono.TextEditor,UnderlineMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UnderlineMarker.cs,InternalDraw,The method has 11 parameters. Parameters: markerStart' markerEnd' editor' cr' layout' selected' startOffset' endOffset' y' startXPos' endXPos
Long Parameter List,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,UrlMarker,The method has 6 parameters. Parameters: doc' url' urlType' style' startColumn' endColumn
Long Parameter List,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,CalculateXPositions,The method has 8 parameters. Parameters: startOffset' endOffset' startXPos' endXPos' layoutWrapper' layout' markerStart' markerEnd
Long Parameter List,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,DrawUnderline,The method has 7 parameters. Parameters: editor' cr' y' layoutWrapper' markerStart' x1' x2
Long Parameter List,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,GetMarkup,The method has 6 parameters. Parameters: offset' length' removeIndent' useColors' replaceTabs' fitIdeStyle
Long Parameter List,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,GetMarkupAsync,The method has 7 parameters. Parameters: offset' length' removeIndent' useColors' replaceTabs' fitIdeStyle' cancellationToken
Long Parameter List,MonoDevelop.SourceEditor,LanguageItemWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\LanguageItemWindow.cs,LanguageItemWindow,The method has 5 parameters. Parameters: ed' modifierState' result' errorInformations' unit
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SetCompletionText,The method has 5 parameters. Parameters: data' ctx' partialWord' completeWord' wordOffset
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CreateUrlTextMarker,The method has 6 parameters. Parameters: editor' value' url' syntax' startCol' endCol
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CreateGenericTextSegmentMarker,The method has 5 parameters. Parameters: editor' effect' color' offset' length
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,ReplaceAllMatches,The method has 5 parameters. Parameters: searchText' replaceText' matchCase' matchWholeWord' useRegularExpressions
Long Parameter List,MonoDevelop.SourceEditor,BracketMatcherTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,DrawBackground,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor,CompileErrorTooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\CompileErrorTooltipProvider.cs,CreateTooltipWindow,The method has 5 parameters. Parameters: editor' ctx' item' offset' modifierState
Long Parameter List,MonoDevelop.SourceEditor,DebugValueTooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueTooltipProvider.cs,CreateTooltipWindow,The method has 5 parameters. Parameters: editor' ctx' item' offset' modifierState
Long Parameter List,MonoDevelop.SourceEditor,DebugValueTooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueTooltipProvider.cs,ShowTooltipWindow,The method has 6 parameters. Parameters: editor' tipWindow' item' modifierState' mouseX' mouseY
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The method has 5 parameters. Parameters: cr' context' page' xPos' yPos
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The method has 5 parameters. Parameters: cr' context' page' xPos' yPos
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawRectangle,The method has 5 parameters. Parameters: g' x' y' width' height
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawMarginBackground,The method has 9 parameters. Parameters: e' margin' cr' area' documentLine' line' x' y' lineHeight
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleCache,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The method has 5 parameters. Parameters: marker' bubbleX' bubbleY' bubbleWidth' isReduced
Long Parameter List,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The method has 5 parameters. Parameters: context' center' hovered' opacity' animationProgress
Long Parameter List,MonoDevelop.SourceEditor,UsageSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UsageSegmentMarker.cs,DrawBackground,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor,DebugTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawBackground,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor,GrayOutMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\GrayOutMarker.cs,Draw,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor,SmartTagMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarker.cs,Draw,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor,UrlTextLineMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UrlTextLineMarker.cs,UrlTextLineMarker,The method has 6 parameters. Parameters: doc' url' urlType' style' startColumn' endColumn
Long Parameter List,MonoDevelop.SourceEditor,LinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\LinkMarker.cs,Draw,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor,ErrorMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\ErrorMarker.cs,Draw,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor,SearchInSelectionMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchInSelectionMarker.cs,DrawBackground,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PopupAgent,The method has 5 parameters. Parameters: textView' manager' visualSpan' style' content
Long Parameter List,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,GetLocation,The method has 5 parameters. Parameters: style' desiredSize' spanRectInScreenCoordinates' reservedRect' screenRect
Long Parameter List,MonoDevelop.SourceEditor,BackgroundTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\BackgroundTextMarker.cs,DrawBackground,The method has 5 parameters. Parameters: editor' cr' metrics' startOffset' endOffset
Long Parameter List,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,ReverseAlpha,The method has 5 parameters. Parameters: c0' a0' cb' ab' aa
Long Parameter List,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,CachedDraw,The method has 7 parameters. Parameters: self' surface' region' parameters' opacity' draw' forceScale
Long Parameter List,MonoDevelop.SourceEditor.Wrappers,TooltipProviderWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Wrappers\TooltipProviderWrapper.cs,ShowTooltipWindow,The method has 7 parameters. Parameters: editor' tipWindow' offset' modifierState' mouseX' mouseY' item
Long Parameter List,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,RenderTriangleDown,The method has 5 parameters. Parameters: cr' x' y' w' h
Long Parameter List,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,RenderTriangleUp,The method has 5 parameters. Parameters: cr' x' y' w' h
Long Parameter List,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,Pack,The method has 5 parameters. Parameters: widget' duration' easing' blocking' end
Long Parameter List,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,RemoveCore,The method has 6 parameters. Parameters: widget' duration' easing' blocking' use_easing' use_blocking
Long Parameter List,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,RemoveCore,The method has 6 parameters. Parameters: widget' duration' easing' blocking' use_easing' use_blocking
Long Parameter List,Mono.TextEditor.Theatrics,AnimatedWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedWidget.cs,AnimatedWidget,The method has 5 parameters. Parameters: widget' duration' easing' blocking' horizontal
Long Parameter List,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,BaseWpfToolTipPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\BaseWpfToolTipPresenter.cs,BaseWpfToolTipPresenter,The method has 5 parameters. Parameters: viewElementFactoryService' obscuringTipManager' textView' parameters' presenterStyle
Long Parameter List,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,MouseTrackingWpfToolTipPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\MouseTrackingWpfToolTipPresenter.cs,MouseTrackingWpfToolTipPresenter,The method has 5 parameters. Parameters: viewElementFactoryService' obscuringTipManager' textView' parameters' presenterStyle
Long Parameter List,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,SpanTrackingWpfToolTipPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\SpanTrackingWpfToolTipPresenter.cs,SpanTrackingWpfToolTipPresenter,The method has 5 parameters. Parameters: viewElementFactoryService' obscuringTipManager' textView' parameters' presenterStyle
Long Parameter List,MonoDevelop.SourceEditor.Braces,ProviderHelper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionAggregator.cs,TryCreate,The method has 5 parameters. Parameters: factory' textView' openingPoint' openingBrace' session
Long Parameter List,MonoDevelop.SourceEditor.Braces,BraceCompletionAggregatorFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionAggregatorFactory.cs,BraceCompletionAggregatorFactory,The method has 7 parameters. Parameters: sessionProviders' contextProviders' defaultProviders' contentTypeRegistryService' undoManager' editorOperationsFactoryService' guardedOperations
Long Parameter List,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,BraceCompletionDefaultSession,The method has 7 parameters. Parameters: textView' subjectBuffer' openingPoint' openingBrace' closingBrace' undoManager' editorOperationsFactoryService
Long Parameter List,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,BraceCompletionDefaultSession,The method has 8 parameters. Parameters: textView' subjectBuffer' openingPoint' openingBrace' closingBrace' undoManager' editorOperationsFactoryService' context
Long Parameter List,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,ParseForChar,The method has 6 parameters. Parameters: data' fromOffset' toOffset' oppositeToken' findToken' forward
Long Parameter List,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,SMS,The method has 8 parameters. Parameters: dataA' lowerA' upperA' dataB' lowerB' upperB' downVector' upVector
Long Parameter List,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,LCS,The method has 8 parameters. Parameters: dataA' lowerA' upperA' dataB' lowerB' upperB' downVector' upVector
Long Parameter List,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,GetDiffString,The method has 5 parameters. Parameters: diff' baseDocument' changedDocument' baseFileName' changedFileName
Long Identifier,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,,The length of the parameter queuedSpaceReservationStackRefresh is 34.
Long Identifier,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,,The length of the parameter allowedTextViewCreationListeners is 32.
Long Identifier,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,,The length of the parameter currentAtomicUndoOperationType is 30.
Long Identifier,Mono.TextEditor,UndoOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,,The length of the parameter textBufferChangeUndoPrimitiveType is 33.
Long Identifier,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,EnsureCorrectEolMarker,The length of the parameter hasMultipleIncorrectEolMarkers is 30.
Long Identifier,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the parameter spanRectWithBufferInScreenCoordinates is 37.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,,The length of the parameter smartSemicolonPlaceCheckbutton is 30.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,,The length of the parameter checkbuttonAutoSetSearchPatternCasing is 37.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,,The length of the parameter checkbuttonGenerateFormattingUndoStep is 37.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,,The length of the parameter checkbuttonEnableSelectionSurrounding is 37.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,,The length of the parameter highlightMatchingBracketCheckbutton is 35.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,,The length of the parameter highlightCurrentLineCheckbutton is 31.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,,The length of the parameter enableHighlightUsagesCheckbutton is 32.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,,The length of the parameter showProcedureLineSeparatorsCheckbutton is 38.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,,The length of the parameter automaticCompletionModeCheckbutton is 34.
Long Identifier,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,,The length of the parameter includeCodeSnippetsCheckbutton is 30.
Long Identifier,Microsoft.VisualStudio.Text.Editor.Implementation,TextEditorInitializationService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TextEditorInitializationService.cs,,The length of the parameter _spaceReservationManagerDefinitions is 35.
Long Identifier,Microsoft.VisualStudio.Text.Editor.Implementation,TextEditorInitializationService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TextEditorInitializationService.cs,,The length of the parameter OrderedSpaceReservationManagerDefinitions is 41.
Long Identifier,Microsoft.VisualStudio.Text.Editor.Implementation,ConnectionManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\ConnectionManager.cs,,The length of the parameter allowedTextViewConnectionListeners is 34.
Long Identifier,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,,The length of the parameter classificationTypeToScopeCache is 30.
Long Identifier,Microsoft.VisualStudio.Language.Intellisense.Implementation,ClassificationTypeNames,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\MDUtils.cs,,The length of the parameter XmlDocCommentProcessingInstruction is 34.
Long Identifier,Microsoft.VisualStudio.Language.Intellisense.Implementation,ClassificationTypeNames,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\MDUtils.cs,,The length of the parameter XmlLiteralProcessingInstruction is 31.
Long Identifier,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterProvider.cs,,The length of the parameter sigHelpDocumentationContentType is 31.
Long Identifier,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterProvider.cs,,The length of the parameter currentParamClassificationType is 30.
Long Identifier,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpBroker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpBroker.cs,,The length of the parameter _orderedIntellisensePresenterProviderExports is 44.
Long Identifier,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpBroker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpBroker.cs,,The length of the parameter _orderedSignatureHelpSourceProviderExports is 42.
Long Identifier,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,,The length of the parameter _signatureDocumentationVisibility is 33.
Long Identifier,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,,The length of the parameter _currentParameterDocumentation is 30.
Long Identifier,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,WpfClassifiedTextElementViewElementFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\ViewElementFactories\WpfClassifiedTextElementViewElementFactory.cs,WpfClassifiedTextElementViewElementFactory,The length of the parameter classificationTypeRegistryService is 33.
Long Identifier,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,WpfClassifiedTextElementViewElementFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\ViewElementFactories\WpfClassifiedTextElementViewElementFactory.cs,,The length of the parameter classificationTypeRegistryService is 33.
Long Identifier,MonoDevelop.SourceEditor.Braces,BraceCompletionAggregatorFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionAggregatorFactory.cs,BraceCompletionAggregatorFactory,The length of the parameter editorOperationsFactoryService is 30.
Long Identifier,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,BraceCompletionDefaultSession,The length of the parameter editorOperationsFactoryService is 30.
Long Identifier,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,BraceCompletionDefaultSession,The length of the parameter editorOperationsFactoryService is 30.
Long Statement,Mono.TextEditor,MdTextViewLineCollection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,OnVisualBufferChanged,The length of the statement  "				var newLine = new MdTextViewLine (this' textEditor' documentLine' lineNumber' textEditor.TextViewMargin.GetLayout (documentLine));" is 130.
Long Statement,Mono.TextEditor,MdTextViewLineCollection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetTextViewLineContainingBufferPosition,The length of the statement  "				throw new ArgumentOutOfRangeException ($"Requested snapshot version {bufferPosition.Snapshot.Version.VersionNumber} but the TextViewLineCollection currently contains snapshot version {textSnapshot.Version.VersionNumber}");" is 222.
Long Statement,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetCharacterBounds,The length of the statement  "				return new TextBounds(point.X' point.Y' textEditor.TextViewMargin.CharWidth' textEditor.LineHeight' TextTop' textEditor.LineHeight);" is 132.
Long Statement,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetExtendedCharacterBounds,The length of the statement  "				return new TextBounds(textEditor.LocationToPoint(textEditor.OffsetToLocation(bufferPosition.Position)).X' Top' Width' TextHeight' TextTop' TextHeight);" is 151.
Long Statement,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetNormalizedTextBounds,The length of the statement  "					var endLoc = textEditor.OffsetToLocation(line.Contains(bufferSpan.End) ? bufferSpan.End : line.EndOffsetIncludingDelimiter);" is 124.
Long Statement,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetNormalizedTextBounds,The length of the statement  "					return new Collection<TextBounds>(new List<TextBounds>() { new TextBounds(leading' Top' endPos - leading' TextHeight' TextTop' TextHeight) });" is 142.
Long Statement,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetTextElementSpan,The length of the statement  "				var highlightedLine = this.textEditor.Document.SyntaxMode.GetHighlightedLineAsync (line' default (CancellationToken)).WaitAndGetResult ();" is 138.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,EnsureSpanVisible,The length of the statement  "				if ((options & ~(EnsureSpanVisibleOptions.ShowStart | EnsureSpanVisibleOptions.MinimumScroll | EnsureSpanVisibleOptions.AlwaysCenter)) != 0x00) " is 143.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,EnsureSpanVisible,The length of the statement  "				//It is possible that this call is a result of an action that was defered until the view was loaded (& if so' it is possible that the " is 133.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,Initialize,The length of the statement  "            _spaceReservationStack = new MDSpaceReservationStack(this.factoryService.OrderedSpaceReservationManagerDefinitions' this); " is 122.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,TextAreaLayoutChanged,The length of the statement  "			LayoutChanged?.Invoke (this' new TextViewLayoutChangedEventArgs (new ViewState (this)' new ViewState (this)' emptyTextViewLineList' emptyTextViewLineList)); " is 156.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,Initialize,The length of the statement  "			// https://github.com/KirillOsenkov/vs-editor-api/blob/d06adf1581eb8e16242c8b6eabc7ba13ceaf0d54/src/Text/Impl/EditorOperations/EditorOperations.cs#L108 " is 151.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,Initialize,The length of the statement  "			// https://github.com/dotnet/roslyn/blob/a107b43dcad83cf79addd47a9919590c7366d130/src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_Commit.cs#L66 " is 169.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,Initialize,The length of the statement  "			connectionManager = new ConnectionManager (this' factoryService.TextViewConnectionListeners' factoryService.GuardedOperations); " is 127.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,Close,The length of the statement  "				//Silently lose aggregate focus (to preserve Dev11 compatibility which did not raise a focus changed event when the view was closed). " is 133.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,BindContentTypeSpecificAssets,The length of the statement  "			var extensions = UIExtensionSelector.SelectMatchingExtensions (factoryService.TextViewCreationListeners' afterContentType' beforeContentType' roles); " is 149.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,BindContentTypeSpecificAssets,The length of the statement  "								deferredTextViewListeners = new List<Lazy<ITextViewCreationListener' IDeferrableContentTypeAndTextViewRoleMetadata>> (); " is 120.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,OnClassificationChanged,The length of the statement  "					//IsLineInvalid will invalidate a line if it intersects the end. The result is that any call to InvalidateSpan() implicitly " is 123.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,OnClassificationChanged,The length of the statement  "					//invalidates any line that starts at the end of the invalidated span' which we do not want here. Reduce the length of the classification " is 137.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,OnClassificationChanged,The length of the statement  "					//change span one so -- if someone invalidated an entire line including the line break -- the next line will not be invalidated. " is 128.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,QueueAggregateFocusCheck,The length of the statement  "				bool newHasAggregateFocus = ((IdeServices.DocumentManager.ActiveDocument?.Editor?.Implementation as MonoDevelop.SourceEditor.SourceEditorView)?.TextEditor == this); " is 164.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,RaiseHoverEvents,The length of the statement  "																   bufferGraph.CreateMappingPoint (new SnapshotPoint (Document.TextBuffer.CurrentSnapshot' _lastHoverPosition.Value)' PointTrackingMode.Positive)); " is 144.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,MoveToTop,The length of the statement  "			List<EditorContainerChild> newChilds = new List<EditorContainerChild> (containerChildren.Where (child => child != editorContainerChild));" is 137.
Long Statement,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,ResizeChild,The length of the statement  "			var childRectangle = new Gdk.Rectangle (Allocation.X + child.X' Allocation.Y + child.Y' System.Math.Max (1' req.Width)' System.Math.Max (1' req.Height));" is 153.
Long Statement,Mono.TextEditor,ActionMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\ActionMargin.cs,Draw,The length of the statement  "			var marker = lineSegment != null ? (MarginMarker)editor.Document.GetMarkers (lineSegment).FirstOrDefault (m => m is MarginMarker && ((MarginMarker)m).CanDraw (this)) : null;" is 173.
Long Statement,Mono.TextEditor,ActionMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\ActionMargin.cs,Draw,The length of the statement  "				drawBackground = !marker.DrawBackground (editor' cr' new MarginDrawMetrics (this' area' lineSegment' line' x' y' lineHeight));" is 126.
Long Statement,Mono.TextEditor,CodeSegmentPreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodeSegmentPreviewWindow.cs,SetSegment,The length of the statement  "				segment = new TextSegment (segment.Offset' editor.Document.GetLine (startLine + MaximumLineCount).Offset - segment.Offset);" is 123.
Long Statement,Mono.TextEditor,CodeSegmentPreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodeSegmentPreviewWindow.cs,SetSegment,The length of the statement  "			Markup = editor.GetTextEditorData ().GetMarkup (segment.Offset' segment.Length' removeIndent) + (pushedLineLimit ? Environment.NewLine + "..." : "");" is 149.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "			double brightness = HslColor.Brightness (SyntaxHighlightingService.GetColor (editor.EditorTheme' EditorThemeColors.Background));" is 128.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "				for (var curLine = segmentStartLine; curLine != null && curLine != endLine && y < editor.VAdjustment.Value + editor.Allocation.Height; curLine = curLine.NextLine) {" is 164.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "				lineLayout = textViewMargin.CreateLinePartLayout (segmentStartLine' segmentStartLine.Offset' segmentStartLine.Length' -1' -1);" is 126.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "				xPos = System.Math.Max (textViewMargin.XOffset' (textViewMargin.XOffset + textViewMargin.TextStartPosition + rectangleStart.X / Pango.Scale.PangoScale) - xPadding);" is 164.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "				lineLayout = textViewMargin.CreateLinePartLayout (segmentEndLine' segmentEndLine.Offset' segmentEndLine.Length' -1' -1);" is 120.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "				xPos = System.Math.Min (xPos' System.Math.Max (textViewMargin.XOffset' (textViewMargin.XOffset + textViewMargin.TextStartPosition + rectangleEnd.X / Pango.Scale.PangoScale) - xPadding));" is 186.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "					rectangleWidth = System.Math.Max ((rectangles [i + 1].X + rectangles[i + 1].Width + rightMarginPadding) - xPos' rectangleWidth);" is 128.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "				var yEnd = editor.LineToY (segment.GetEndLine  (editor.Document).LineNumber + 1) + (segment.GetEndLine (editor.Document).LineNumber == editor.LineCount ? editor.LineHeight : 0);" is 177.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "					clampedRect = ClampRect (rect.X - editor.HAdjustment.Value - curPadSize ' rect.Y - editor.VAdjustment.Value - curPadSize' editor.LineHeight / 2' rect.Width + curPadSize * 2' rect.Height + curPadSize * 2' area);" is 210.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "					DrawRoundRectangle (cr' true' true' clampedRect.X' clampedRect.Y' editor.LineHeight / 2' clampedRect.Width' clampedRect.Height);" is 128.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "						clampedRect = ClampRect (rect.X - editor.HAdjustment.Value - curPadSize' rect.Y - editor.VAdjustment.Value - curPadSize' editor.LineHeight / 2' rect.Width + curPadSize * 2' rect.Height + curPadSize * 2' area);" is 209.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "						DrawRoundRectangle (cr' true' true' clampedRect.X' clampedRect.Y' editor.LineHeight / 2' clampedRect.Width' clampedRect.Height);" is 128.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "				clampedRect = ClampRect (rect.X - editor.HAdjustment.Value' rect.Y - editor.VAdjustment.Value' editor.LineHeight / 2' rect.Width' rect.Height' area);" is 149.
Long Statement,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The length of the statement  "				DrawRoundRectangle (cr' true' true'  clampedRect.X' clampedRect.Y' editor.LineHeight / 2' clampedRect.Width' clampedRect.Height);" is 129.
Long Statement,Mono.TextEditor,FoldingAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,UpdateAccessibility,The length of the statement  "			Accessible.FrameInParent = new Gdk.Rectangle (0' (int)(minY - editor.LineHeight)' (int)margin.Width' (int)((maxY - minY) + editor.LineHeight));" is 143.
Long Statement,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,MousePressed,The length of the statement  "						editor.MainSelection = new MonoDevelop.Ide.Editor.Selection (loc' GetLineEndLocation (editor.GetTextEditorData ()' lineNumber));" is 128.
Long Statement,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,Draw,The length of the statement  "			var extendingMarker = lineSegment != null ? (IExtendingTextLineMarker)editor.Document.GetMarkers (lineSegment).FirstOrDefault (l => l is IExtendingTextLineMarker) : null;" is 170.
Long Statement,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,Draw,The length of the statement  "			var gutterMarker = lineSegment != null ? (MarginMarker)editor.Document.GetMarkers (lineSegment).FirstOrDefault (marker => marker is MarginMarker && ((MarginMarker)marker).CanDraw (this)) : null;" is 194.
Long Statement,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,Draw,The length of the statement  "				bool hasDrawn = gutterMarker.DrawBackground (editor' cr' new MarginDrawMetrics (this' area' lineSegment' line' x' y' lineHeight));" is 130.
Long Statement,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,DrawForeground,The length of the statement  "				cr.Translate (x + (int)Width + (editor.Options.ShowFoldMargin ? 0 : -2)' y + (isSpaceAbove ? lineHeight - editor.LineHeight : 0));" is 130.
Long Statement,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,Draw,The length of the statement  "							backgroundIsDrawn = marginMarker.DrawBackground (editor' cr' new MarginDrawMetrics (this' area' line' lineNumber' x' y' lineHeight));" is 133.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,HAdjustmentValueChanged,The length of the statement  "			QueueDrawArea ((int)this.textViewMargin.XOffset' 0' this.Allocation.Width - (int)this.textViewMargin.XOffset' this.Allocation.Height);" is 134.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Initialize,The length of the statement  "				quickFixMargin.Accessible.Help = GettextCatalog.GetString ("Quick fix margin contains the context menu popup for code actions and fixes");" is 138.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnRealized,The length of the statement  "			WindowAttributesType mask = WindowAttributesType.X | WindowAttributesType.Y | WindowAttributesType.Colormap | WindowAttributesType.Visual;" is 138.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,SetWidgetBgFromStyle,The length of the statement  "					parent.ModifyBg (StateType.Normal' SyntaxHighlightingService.GetColor (textEditorData.ColorStyle' EditorThemeColors.Background));" is 129.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,SetWidgetBgFromStyle,The length of the statement  "				this.Parent.ModifyBg (StateType.Normal' SyntaxHighlightingService.GetColor (textEditorData.ColorStyle' EditorThemeColors.Background));" is 134.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,SetWidgetBgFromStyle,The length of the statement  "				this.ModifyBg (StateType.Normal' SyntaxHighlightingService.GetColor (textEditorData.ColorStyle' EditorThemeColors.Background));" is 127.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,HandleTextKey,The length of the statement  "			if ((key == Gdk.Key.space || key == Gdk.Key.parenleft || key == Gdk.Key.parenright) && (mod & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask)" is 152.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnDragDataReceived,The length of the statement  "						var start = Document.OffsetToLocation (selection.GetSelectionRange (textEditorData).Offset + selection_data.Text.Length);" is 121.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnDragDataReceived,The length of the statement  "						var end = Document.OffsetToLocation (selection.GetSelectionRange (textEditorData).Offset + selection_data.Text.Length + selection.GetSelectionRange (textEditorData).Length);" is 173.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnDragMotion,The length of the statement  "			if (!selection.IsEmpty && offset >= this.selection.GetSelectionRange (textEditorData).Offset && offset < this.selection.GetSelectionRange (textEditorData).EndOffset) {" is 167.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnDragMotion,The length of the statement  "				Gdk.Drag.Status (context' (context.Actions & DragAction.Move) == DragAction.Move ? DragAction.Move : DragAction.Copy' time);" is 124.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnMotionNotifyEvent,The length of the statement  "				if (textViewMargin.inDrag && margin == this.textViewMargin && Gtk.Drag.CheckThreshold (this' (int)pressPositionX' (int)pressPositionY' (int)x' (int)y)) {" is 153.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnMotionNotifyEvent,The length of the statement  "					DragContext context = Gtk.Drag.Begin (this' ClipboardActions.CopyOperation.TargetList' DragAction.Move | DragAction.Copy' 1' e);" is 128.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,ScrollTo,The length of the statement  "					} else if (this.textEditorData.VAdjustment.Value + this.textEditorData.VAdjustment.PageSize - this.LineHeight < caretPosition) {" is 128.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnScrollEvent,The length of the statement  "						HAdjustment.Value = System.Math.Min (HAdjustment.Upper - HAdjustment.PageSize' HAdjustment.Value + HAdjustment.StepIncrement * 3);" is 130.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,RenderMargins,The length of the statement  "			this.TextViewMargin.rulerX = Options.RulerColumn * this.TextViewMargin.CharWidth - this.textEditorData.HAdjustment.Value;" is 121.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,RenderMargins,The length of the statement  "						margin.Draw (margin == textViewMargin ? textViewCr : cr' cairoRectangle' line' logicalLineNumber' margin.XOffset' curY' lineHeight);" is 132.
Long Statement,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,TooltipTimer,The length of the statement  "						provider.ShowTooltipWindow (editor' tw' nextTipOffset' nextTipModifierState' tipX + (int) TextViewMargin.XOffset' tipY' item);" is 126.
Long Statement,Mono.TextEditor,CenterToWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Run,The length of the statement  "				// The adjustment does this check' but does it after assigning the value' so the value may be out of bounds for a while." is 120.
Long Statement,Mono.TextEditor,CenterToWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Run,The length of the statement  "				if (caretPosition + editor.TextArea.textEditorData.VAdjustment.PageSize > editor.TextArea.textEditorData.VAdjustment.Upper)" is 123.
Long Statement,Mono.TextEditor,CenterToWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Run,The length of the statement  "						editor.TextArea.textEditorData.HAdjustment.Value = System.Math.Max (0' caretX - editor.TextArea.textEditorData.HAdjustment.Upper / 2);" is 134.
Long Statement,Mono.TextEditor,CenterToWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Run,The length of the statement  "					} else if (editor.TextArea.textEditorData.HAdjustment.Value + textWith < caretX + editor.TextArea.TextViewMargin.CharWidth) {" is 125.
Long Statement,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The length of the statement  "				cr.Rectangle (editor.TextViewMargin.XOffset' 0' editor.Allocation.Width - editor.TextViewMargin.XOffset' editor.Allocation.Height);" is 131.
Long Statement,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The length of the statement  "				cr.Rectangle (editor.TextViewMargin.XOffset' 0' editor.Allocation.Width - editor.TextViewMargin.XOffset' editor.Allocation.Height);" is 131.
Long Statement,Mono.TextEditor,SearchHighlightPopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,CalculateInitialBounds,The length of the statement  "				var lineLayout = Editor.TextViewMargin.CreateLinePartLayout (line' logicalRulerColumn' line.Offset' line.Length' -1' -1);" is 121.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,HandleTextReplaced,The length of the statement  "				// It's required to remove the cached line here' otherwise the layout cache could chose to wrongly dipslay an older version of the line." is 136.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,OptionsChanged,The length of the statement  "			GetFontMetrics (textEditor.Options.GutterFont' out double gutterFontLineHeight' out double fontCharWidth' out underlinePosition' out underLineThickness);" is 153.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,OptionsChanged,The length of the statement  "			GetFontMetrics (textEditor.Options.Font' out double fontLineHeight' out fontCharWidth' out underlinePosition' out underLineThickness);" is 134.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,ResetCaretBlink,The length of the statement  "			blinkTimeout = GLib.Timeout.Add ((uint)(Gtk.Settings.Default.CursorBlinkTime * cursorOnMultiplier / cursorDivider)' UpdateCaret);" is 129.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The length of the statement  "			if (!this.textEditor.IsInDrag && !(this.caretX >= 0 && (!this.textEditor.IsSomethingSelected || this.textEditor.SelectionRange.Length == 0)))" is 141.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetSelectionOffsets,The length of the statement  "						selectionStart = lineOffset + line.GetLogicalColumn (this.textEditor.GetTextEditorData ()' System.Math.Min (visStart.Column' visEnd.Column)) - 1;" is 145.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetSelectionOffsets,The length of the statement  "						selectionEnd = lineOffset + line.GetLogicalColumn (this.textEditor.GetTextEditorData ()' System.Math.Max (visStart.Column' visEnd.Column)) - 1;" is 143.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "				if (descriptor.Equals (line' lineText' length' cachedChunks.Item3' selectionStart' selectionEnd) && descriptor.Layout?.Layout != null) {" is 136.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "			var chunks = new List<ColoredSegment> (cachedChunks.Item1.Select (c => new ColoredSegment (c.Offset + lineOffset' c.Length' c.ScopeStack)));;" is 141.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "			var markers = TextDocument.OrderTextSegmentMarkersByInsertion (Document.GetVisibleTextSegmentMarkersAt (line)).ToList ();" is 121.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "						HandleSelection (lineOffset' logicalRulerColumn' selectionStart' selectionEnd' chunk.Offset' chunk.EndOffset' delegate (int start' int end) {" is 141.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "							var si = TranslateToUTF8Index (lineText' (uint)Math.Min (startIndex + start - chunk.Offset' lineText.Length)' ref curIndex' ref byteIndex);" is 139.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "							var ei = TranslateToUTF8Index (lineText' (uint)Math.Min (startIndex + end - chunk.Offset' lineText.Length)' ref curIndex' ref byteIndex);" is 137.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "							if (!chunkStyle.TransparentBackground && GetPixel (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)) != GetPixel (chunkStyle.Background)) {" is 180.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "									if (spanStyle != null && !spanStyle.TransparentBackground && GetPixel (ColorStyle.PlainText.Background) != GetPixel (spanStyle.Background)) {" is 141.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "							var si = TranslateToUTF8Index (lineText' (uint)Math.Min (startIndex + start - chunk.Offset' lineText.Length)' ref curIndex' ref byteIndex);" is 139.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "							var ei = TranslateToUTF8Index (lineText' (uint)Math.Min (startIndex + end - chunk.Offset' lineText.Length)' ref curIndex' ref byteIndex);" is 137.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "						var translatedStartIndex = TranslateToUTF8Index (lineText' (uint)Math.Min (startIndex' lineText.Length)' ref curChunkIndex' ref byteChunkIndex);" is 144.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "						var translatedEndIndex = TranslateToUTF8Index (lineText' (uint)Math.Min (endIndex' lineText.Length)' ref curChunkIndex' ref byteChunkIndex);" is 140.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "					var si = TranslateToUTF8Index (lineText' (uint)Math.Min (textEditor.preeditOffset - offset' lineText.Length)' ref curIndex' ref byteIndex);" is 139.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "					var ei = TranslateToUTF8Index (lineText' (uint)Math.Min (textEditor.preeditOffset - offset + byteLength' lineText.Length)' ref curIndex' ref byteIndex);" is 152.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "					atts.AddForegroundAttribute (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Foreground)' si' ei);" is 128.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "						atts.AddBackgroundAttribute (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)' si' ei);" is 128.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The length of the statement  "				//			textEditor.GetTextEditorData ().HeightTree.SetLineHeight (line.LineNumber' System.Math.Max (LineHeight' wrapper.Height));" is 126.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetCachedChunks,The length of the statement  "			return Tuple.Create (new List<ColoredSegment> (new [] { new ColoredSegment (0' line.Length' ScopeStack.Empty) })' false' (HighlightedLine)null);" is 144.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,HandleSelection,The length of the statement  "			if (textEditor.GetTextEditorData ().ShowRuler && selectionStartColumn < logicalRulerColumn && logicalRulerColumn < selectionEndColumn && startOffset < rulerOffset && rulerOffset < endOffset) {" is 192.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InnerDecorateTabsAndSpaces,The length of the statement  "					layout.IndexToLineX ((int)TranslateToUTF8Index (text' (uint)i' ref curIndex' ref byteIndex)' false' out line' out posX);" is 120.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InnerDecorateTabsAndSpaces,The length of the statement  "				layout.IndexToLineX ((int)TranslateToUTF8Index (text' (uint)i + 1' ref curIndex' ref byteIndex)' false' out line' out posX);" is 124.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The length of the statement  "			LayoutWrapper layout = CreateLinePartLayout (line' logicalRulerColumn' offset' length' selectionStartOffset' selectionEndOffset);" is 129.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The length of the statement  "			var textSegmentMarkers = TextDocument.OrderTextSegmentMarkersByInsertion (Document.GetVisibleTextSegmentMarkersAt (line)).ToList ();" is 132.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The length of the statement  "					HandleSelection (lineOffset' logicalRulerColumn' selectionStartOffset' selectionEndOffset' System.Math.Max (lineOffset' firstSearch.Offset)' System.Math.Min (lineOffset + line.Length' firstSearch.EndOffset)' delegate(int start' int end) {" is 238.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The length of the statement  "							// var color = MainSearchResult.IsInvalid () || MainSearchResult.Offset != firstSearch.Offset ? EditorTheme.SearchResult.Color : EditorTheme.SearchResultMain.Color;" is 164.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The length of the statement  "			if (textEditor.Options.ShowWhitespaces != ShowWhitespaces.Never && !(BackgroundRenderer != null && textEditor.Options.ShowWhitespaces == ShowWhitespaces.Selection))" is 164.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The length of the statement  "						DrawRectangleWithRuler (cr' xPos + textEditor.HAdjustment.Value - TextStartPosition' new Cairo.Rectangle (startX' y' endX - startX' _lineHeight)' SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Selection)' true);" is 242.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The length of the statement  "							if ((!textEditor.IsSomethingSelected || (selectionStartOffset >= offset && selectionStartOffset != selectionEndOffset)) && (HighlightCaretLine || textEditor.Options.HighlightCaretLine) && Caret.Line == lineNumber) {" is 215.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The length of the statement  "								DecorateLineBg (cr' wrapper' offset' length' xPos' y' selectionStartOffset + virtualSpaceMod' selectionEndOffset + wrapper.Text.Length);" is 136.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawEolMarker,The length of the statement  "					var span = textEditor.Document.SyntaxMode.GetScopeStackAsync (line.NextLine.Offset' CancellationToken.None).WaitAndGetResult (CancellationToken.None);" is 150.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CalculateClickLocation,The length of the statement  "			if (line != null && clickLocation.Column >= line.Length + 1 && GetWidth (Document.GetTextAt (line.SegmentIncludingDelimiter) + "-") < x) {" is 138.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CalculateClickLocation,The length of the statement  "				if (textEditor.GetTextEditorData ().HasIndentationTracker && textEditor.Options.IndentStyle == IndentStyle.Virtual && clickLocation.Column == 1) {" is 146.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MousePressed,The length of the statement  "					textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (textEditor.Document.OffsetToLocation (mouseWordStart)' textEditor.Document.OffsetToLocation (mouseWordEnd));" is 173.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MousePressed,The length of the statement  "				if (textEditor.IsSomethingSelected && IsInsideSelection (clickLocation) && clickLocation != textEditor.Caret.Location) {" is 120.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MousePressed,The length of the statement  "					textEditor.SelectionRange = new TextSegment (oldVersion.MoveOffsetTo (Document.Version' selectionRange.Offset)' selectionRange.Length);" is 135.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,ShowCodeSegmentPreviewTooltip,The length of the statement  "				var geometry = this.textEditor.Screen.GetUsableMonitorGeometry (this.textEditor.Screen.GetMonitorAtPoint (ox + x' oy + y));" is 123.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,ScanWord,The length of the statement  "				return forwardDirection ? System.Math.Min (line.Offset + line.Length' offset + 1) : System.Math.Max (line.Offset' offset);" is 122.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseHover,The length of the statement  "							textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (Document.OffsetToLocation (mouseWordEnd)' Caret.Location' textEditor.MainSelection.SelectionMode);" is 163.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseHover,The length of the statement  "							textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (Document.OffsetToLocation (mouseWordStart)' Caret.Location' textEditor.MainSelection.SelectionMode);" is 165.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseHover,The length of the statement  "						textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (textEditor.OffsetToLocation (mouseWordStart)' Caret.Location' textEditor.MainSelection.SelectionMode);" is 167.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseHover,The length of the statement  "						textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (textEditor.OffsetToLocation (mouseWordEnd)' Caret.Location' textEditor.MainSelection.SelectionMode);" is 165.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetFoldRectangles,The length of the statement  "						var txt = Document.GetTextAt (offset' System.Math.Max (0' System.Math.Min (foldOffset - offset' Document.Length - offset)));" is 124.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "			var extendingMarker = line != null ? (IExtendingTextLineMarker)textEditor.Document.GetMarkers (line).FirstOrDefault (l => l is IExtendingTextLineMarker) : null;" is 160.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "					DrawLinePart (cr' line' lineNr' logicalRulerColumn' offset' foldOffset - offset' ref position' ref isSelectionDrawn' y' area.X + area.Width' lineArea.Height);" is 158.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "					bool isFoldingSelected = !this.HideSelection && textEditor.IsSomethingSelected && textEditor.SelectionRange.Contains (folding.Segment);" is 135.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "					var boundingRectangleY = System.Math.Floor (foldingRectangle.Y + (foldingRectangle.Height - boundingRectangleHeight) / 2);" is 122.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "						DrawRectangleWithRuler (cr' x' lineArea' SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Selection)' false);" is 138.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "				} else if (!(HighlightCaretLine || textEditor.GetTextEditorData ().HighlightCaretLine) || Caret.Line != lineNr && Caret.Line != startLineNr) {" is 142.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "					//		if (!spanStyle.TransparentBackground && GetPixel (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)) != GetPixel (spanStyle.Background)) {" is 182.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "				DrawLinePart (cr' line' lineNr' logicalRulerColumn' offset' line.Offset + line.Length - offset' ref position' ref isSelectionDrawn' y' area.X + area.Width' lineArea.Height);" is 173.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The length of the statement  "					    !(lineNr == Caret.Line && Caret.Column > 1 && textEditor.MainSelection.Anchor.Line < textEditor.MainSelection.Lead.Line) &&" is 123.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,LocationToPoint,The length of the statement  "			return useAbsoluteCoordinates ? new Cairo.Point (x' y) : new Cairo.Point (x - (int)this.textEditor.HAdjustment.Value' y - (int)this.textEditor.VAdjustment.Value);" is 162.
Long Statement,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,ColumnToX,The length of the statement  "				index = (int)TranslateToUTF8Index (wrapper.Text' (uint)System.Math.Min (System.Math.Max (0' column)' wrapper.Text.Length)' ref curIndex' ref byteIndex);" is 152.
Long Statement,Mono.TextEditor,TextViewMarginAccessibilityProxy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetFrameForRange,The length of the statement  "				//ISyntaxHighlighting mode = Margin.Document.SyntaxMode != null && Margin.textEditor.Options.EnableSyntaxHighlighting ? Margin.Document.SyntaxMode : new SyntaxHighlighting(Margin.Document);" is 189.
Long Statement,Mono.TextEditor,TextViewMarginAccessibilityProxy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetFrameForRange,The length of the statement  "				var yEnd = Margin.textEditor.LineToY (finishLine.LineNumber + 1) + (finishLine.LineNumber == Margin.textEditor.LineCount ? Margin.textEditor.LineHeight : 0);" is 157.
Long Statement,Mono.TextEditor,TextViewMarginAccessibilityProxy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetFrameForRange,The length of the statement  "				return new Rectangle ((int)((xPos / Pango.Scale.PangoScale) + Margin.XOffset)' (int)y' (int)rectangleWidth' (int)rectangleHeight);" is 130.
Long Statement,Mono.TextEditor,LayoutDescriptor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Equals,The length of the statement  "				if (selStart != this.SelectionStart || selEnd != this.SelectionEnd || Length != length || MarkerLength != doc.GetMarkers (line).Count ())" is 137.
Long Statement,Mono.TextEditor,LayoutDescriptor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Equals,The length of the statement  "				return MarkerLength == other.MarkerLength && Offset == other.Offset && Length == other.Length && SelectionStart == other.SelectionStart && SelectionEnd == other.SelectionEnd;" is 174.
Long Statement,Mono.TextEditor,VisualLocationTranslator,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,PointToLocation,The length of the statement  "					int logicalRulerColumn = line.GetLogicalColumn (margin.textEditor.GetTextEditorData ()' margin.textEditor.Options.RulerColumn);" is 127.
Long Statement,Mono.TextEditor,VisualLocationTranslator,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,PointToLocation,The length of the statement  "						LayoutWrapper layoutWrapper = margin.CreateLinePartLayout (line' logicalRulerColumn' offset' line.Offset + line.Length - offset' -1' -1);" is 137.
Long Statement,Mono.TextEditor,LineStateFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,The length of the statement  "					hasDrawn = marker.DrawBackground (Editor' cr' new MarginDrawMetrics (Margin' area' line' lineNumber' x' y' lineHeight));" is 120.
Long Statement,Mono.TextEditor,LineStateFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,The length of the statement  "					var prevState = line?.PreviousLine != null ? Editor.Document.GetLineState (line.PreviousLine) : TextDocument.LineState.Unchanged;" is 129.
Long Statement,Mono.TextEditor,LineStateFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,The length of the statement  "					var nextState = line?.NextLine != null ? Editor.Document.GetLineState (line.NextLine) : TextDocument.LineState.Unchanged;" is 121.
Long Statement,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,OptionsChanged,The length of the statement  "				foldToggleMarkerBackground = SyntaxHighlightingService.GetColor (Editor.EditorTheme' EditorThemeColors.FoldCrossBackground);" is 124.
Long Statement,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The length of the statement  "							moreLinedOpenFold = foldSegment.GetEndLine (Editor.Document).Offset > foldSegment.GetStartLine (Editor.Document).Offset;" is 120.
Long Statement,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The length of the statement  "						if (foldSegment.GetEndLine (Editor.Document).Offset > foldSegment.GetStartLine (Editor.Document).Offset && !foldSegment.IsCollapsed)" is 132.
Long Statement,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The length of the statement  "						cr.DrawLine (isEndSelected || (isStartSelected && isVisible) || isContainingSelected ? foldLineHighlightedGC : foldLineGC' xPos' foldSegmentYPos + foldSegmentSize + 2' xPos' drawArea.Y + drawArea.Height);" is 204.
Long Statement,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The length of the statement  "							cr.DrawLine (isContainingSelected ? foldLineHighlightedGC : foldLineGC' xPos' yMid' xPos' drawArea.Y + drawArea.Height);" is 120.
Long Statement,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The length of the statement  "						cr.DrawLine (isContainingSelected ? foldLineHighlightedGC : foldLineGC' xPos' drawArea.Y' xPos' drawArea.Y + drawArea.Height);" is 126.
Long Statement,Mono.TextEditor,QuickFixMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\QuickFixMargin.cs,Draw,The length of the statement  "							backgroundIsDrawn = marginMarker.DrawBackground (editor' cr' new MarginDrawMetrics (this' area' line' lineNumber' x' y' lineHeight));" is 133.
Long Statement,Mono.TextEditor,DocumentLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\DocumentLine.cs,ToString,The length of the statement  "			return String.Format ("[DocumentLine: Offset={0}' Length={1}' DelimiterLength={2}]"' Offset' LengthIncludingDelimiter' DelimiterLength);" is 136.
Long Statement,Mono.TextEditor,EmacsWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\EmacsWordFindStrategy.cs,FindNextWordOffset,The length of the statement  "					if (current == CC.Digit && (previous != CC.Digit || (result-1 == offset && !Char.IsDigit (doc.GetCharAt (result-1))))) { " is 120.
Long Statement,Mono.TextEditor,FoldSegment,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\FoldSegment.cs,ToString,The length of the statement  "			return string.Format("[FoldSegment: IsFolded={0}' Description={1}' Offset={2}' Length={3}' FoldingType={4}]"' IsCollapsed' CollapsedText' Offset' Length' FoldingType);" is 167.
Long Statement,Mono.TextEditor,LineSplitter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\LineSplitter.cs,GetNode,The length of the statement  "				Debug.Assert (false' "index must be >=0 but was " + index + "." + Environment.NewLine + "Stack trace:" + Environment.StackTrace);" is 129.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,AttachTextBuffer,The length of the statement  "			//(this.TextBuffer as Microsoft.VisualStudio.Text.Implementation.BaseBuffer).ChangedImmediate += OnTextBufferChangedImmediate; " is 126.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,AttachTextBuffer,The length of the statement  "			var changedImmediateEventInfo = TextBuffer.GetType ().GetEvent ("ChangedImmediate"' System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance); " is 168.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,AttachTextBuffer,The length of the statement  "			changedImmediateEventInfo.AddMethod.Invoke (TextBuffer' new object[] { (EventHandler<Microsoft.VisualStudio.Text.TextContentChangedEventArgs>)OnTextBufferChangedImmediate }); " is 174.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,DetachTextBuffer,The length of the statement  "				//(this.TextBuffer as Microsoft.VisualStudio.Text.Implementation.BaseBuffer).ChangedImmediate -= OnTextBufferChangedImmediate;" is 126.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,DetachTextBuffer,The length of the statement  "				var changedImmediateEventInfo = TextBuffer.GetType ().GetEvent ("ChangedImmediate"' System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance); " is 168.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,DetachTextBuffer,The length of the statement  "				changedImmediateEventInfo.RemoveMethod.Invoke (TextBuffer' new object[] { (EventHandler<Microsoft.VisualStudio.Text.TextContentChangedEventArgs>)OnTextBufferChangedImmediate });" is 177.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,Dispose,The length of the statement  "			// Dispose ITextDocument this after SyntaxMode is set' otherwise we'll query the VsTextDocument when setting SyntaxMode." is 120.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,OnTextBufferContentTypeChanged,The length of the statement  "			this.currentSnapshot = this.TextBuffer.CurrentSnapshot; // Changing the content type changes the snapshot even though there are no text changes. " is 144.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,LocationToOffset,The length of the statement  "			return System.Math.Min(Length' documentLine.Offset + System.Math.Max(0' System.Math.Min(documentLine.Length' column - 1)));" is 123.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,OptimizeTypedUndo,The length of the statement  "						if (kchange.OldPosition + 1 != change.OldPosition || change.NewLength == 0 || !char.IsLetterOrDigit (change.NewText [0])) {" is 123.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,GetStartFoldings,The length of the statement  "			return GetFoldingContaining (offset' length).Where (fold => offset <= fold.GetStartLine (this).Offset && fold.GetStartLine (this).Offset < offset + length);" is 156.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,GetEndFoldings,The length of the statement  "			return GetFoldingContaining (offset' length).Where (fold => offset <= fold.GetEndLine (this).Offset && fold.GetEndLine (this).Offset < offset + length);" is 152.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,EnsureOffsetIsUnfolded,The length of the statement  "			foreach (FoldSegment fold in GetFoldingsFromOffset (offset).Where (f => f.IsCollapsed && f.Offset < offset && offset < f.EndOffset)) {" is 134.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,GetMarkersOrderedByInsertion,The length of the statement  "			return OrderTextSegmentMarkersByInsertion(GetTextSegmentMarkersAt (line)).OfType<DocumentLineTextSegmentMarker> ().Select (m => m.Marker);" is 138.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,CreateSnapshot,The length of the statement  "			return new SnapshotSpanToTextSource(this.Encoding' new Microsoft.VisualStudio.Text.SnapshotSpan(snapshot' 0' snapshot.Length));" is 127.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,CreateSnapshot,The length of the statement  "			return new SnapshotSpanToTextSource(this.Encoding' new Microsoft.VisualStudio.Text.SnapshotSpan(snapshot' offset' length));" is 123.
Long Statement,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,Get,The length of the statement  "			return cachedLineFromLineNumber = new DocumentLineFromTextSnapshotLine(snapshot.GetLineFromLineNumber(snapshotLineNumber));" is 123.
Long Statement,Mono.TextEditor,UndoOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,Undo,The length of the statement  "					using (var edit = doc.TextBuffer.CreateEdit(Microsoft.VisualStudio.Text.EditOptions.None' null' textBufferChangeUndoPrimitiveType)) { " is 133.
Long Statement,Mono.TextEditor,UndoOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,Redo,The length of the statement  "					using (var edit = doc.TextBuffer.CreateEdit(Microsoft.VisualStudio.Text.EditOptions.None' null' textBufferChangeUndoPrimitiveType)) { " is 133.
Long Statement,Mono.TextEditor,DocumentLineFromTextSnapshotLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,Equals,The length of the statement  "				return (otherLine != null) && (otherLine.Line.Snapshot == this.Line.Snapshot) && (otherLine.Line.LineNumber == this.Line.LineNumber); " is 133.
Long Statement,Mono.TextEditor,SnapshotToReadonlyTextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,LocationToOffset,The length of the statement  "				return System.Math.Min (Length' documentLine.Offset + System.Math.Max (0' System.Math.Min (documentLine.Length' column - 1)));" is 126.
Long Statement,Mono.TextEditor,SnapshotSpanToTextSource,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,CreateReader,The length of the statement  "{ return new Microsoft.VisualStudio.Platform.NewTextSnapshotToTextReader(this.Span.Snapshot' this.Span.Start' this.Span.Length); }" is 130.
Long Statement,Mono.TextEditor,SnapshotSpanToTextSource,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,CreateReader,The length of the statement  "				return new Microsoft.VisualStudio.Platform.NewTextSnapshotToTextReader(this.Span.Snapshot' this.Span.Start + offset' length); " is 125.
Long Statement,Mono.TextEditor,SnapshotSpanToTextSource,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,CreateSnapshot,The length of the statement  "				return new SnapshotSpanToTextSource(this.Encoding' new Microsoft.VisualStudio.Text.SnapshotSpan(this.Span.Snapshot' this.Span.Start.Position + offset' length)); " is 160.
Long Statement,Mono.TextEditor,SnapshotSpanToTextReader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,ReadLine,The length of the statement  "				//Handle the case where the current position is between a \r\n without crashing (but returning an empty string instead). " is 120.
Long Statement,Mono.TextEditor,SnapshotSpanToTextReader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,ReadLine,The length of the statement  "				currentPosition = System.Math.Min(line.EndIncludingLineBreak.Position' this.span.End.Position) - this.span.Start.Position; " is 122.
Long Statement,Mono.TextEditor,SnapshotSpanToTextReader,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,ReadToEnd,The length of the statement  "				string text = this.span.Snapshot.GetText(this.span.Start.Position + currentPosition' this.span.Length - currentPosition); " is 121.
Long Statement,Mono.TextEditor,TextVersionToTextSourceVersion,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,MoveOffsetTo,The length of the statement  "					result = Microsoft.VisualStudio.Text.Tracking.TrackPositionBackwardInTime (Microsoft.VisualStudio.Text.PointTrackingMode.Positive'" is 130.
Long Statement,Mono.TextEditor,TextVersionToTextSourceVersion,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,MoveOffsetTo,The length of the statement  "					result = Microsoft.VisualStudio.Text.Tracking.TrackPositionForwardInTime(Microsoft.VisualStudio.Text.PointTrackingMode.Positive' " is 128.
Long Statement,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,Left,The length of the statement  "					if (data.HasIndentationTracker && data.Options.IndentStyle == IndentStyle.Virtual && nextLocation.Column == DocumentLocation.MinColumn)" is 135.
Long Statement,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,Right,The length of the statement  "					if (data.HasIndentationTracker && data.Options.IndentStyle == IndentStyle.Virtual && data.Caret.Column == DocumentLocation.MinColumn) {" is 135.
Long Statement,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,Up,The length of the statement  "					int col = data.MainSelection.Anchor > data.MainSelection.Lead ? data.MainSelection.Lead.Column : data.MainSelection.Anchor.Column;" is 130.
Long Statement,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,Up,The length of the statement  "					data.Caret.Location = (line >= DocumentLocation.MinLine) ? new DocumentLocation (line' col) : new DocumentLocation (DocumentLocation.MinLine' DocumentLocation.MinColumn);" is 170.
Long Statement,Mono.TextEditor,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\CaretMoveActions.cs,Down,The length of the statement  "					int col = data.MainSelection.Anchor > data.MainSelection.Lead ? data.MainSelection.Lead.Column : data.MainSelection.Anchor.Column;" is 130.
Long Statement,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The length of the statement  "				clipboard.RequestContents (CopyOperation.MD_ATOM' (ClipboardReceivedFunc)delegate (Clipboard clp' SelectionData selectionData) {" is 128.
Long Statement,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The length of the statement  "									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block);" is 134.
Long Statement,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The length of the statement  "									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block);" is 134.
Long Statement,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PastePlainText,The length of the statement  "					data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block);" is 134.
Long Statement,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PastePlainText,The length of the statement  "							textToInsert = new string ('\t'' (charsToInsert - spaceCount) / data.Options.TabSize) + new string (' '' spaceCount) + text;" is 124.
Long Statement,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PastePlainText,The length of the statement  "						changes.Add (new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan (lineSegment.Offset + insertOffset' 0)' textToInsert));" is 153.
Long Statement,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteWithResult,The length of the statement  "			return PasteFrom (Clipboard.Get (CopyOperation.CLIPBOARD_ATOM)' data' false' data.IsSomethingSelected ? data.SelectionRange.Offset : data.Caret.Offset) > 0;" is 156.
Long Statement,Mono.TextEditor,CopyOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,CopyData,The length of the statement  "								copiedColoredChunks.Add ((await ClipboardColoredText.GetChunks (data' new TextSegment (curLine.Offset + col1' col2 - col1))).First ());" is 135.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The length of the statement  "					if (data.MainSelection.SelectionMode == SelectionMode.Block && visualAnchorLocation.Column == visualLeadLocation.Column) {" is 122.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The length of the statement  "							changes.Add (new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan (lineSegment.Offset + insertOffset' 1)' ""));" is 143.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The length of the statement  "							new DocumentLocation (data.MainSelection.Anchor.Line' data.GetLine (data.MainSelection.Anchor.Line).GetLogicalColumn (data' visualColumn))'" is 139.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The length of the statement  "							new DocumentLocation (data.MainSelection.Lead.Line' data.GetLine (data.MainSelection.Lead.Line).GetLogicalColumn (data' visualColumn))'" is 135.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The length of the statement  "				if (data.HasIndentationTracker && (data.IndentationTracker.SupportedFeatures & IndentationTrackerFeatures.SmartBackspace) != 0 && (data.Options.IndentStyle == IndentStyle.Smart || data.Options.IndentStyle == IndentStyle.Virtual) && data.Options.SmartBackspace) {" is 262.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The length of the statement  "						data.Caret.Location = new DocumentLocation (data.Caret.Line - 1' data.GetVirtualIndentationColumn (data.Caret.Line - 1' 1));" is 124.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The length of the statement  "						data.Replace (lineAbove.EndOffsetIncludingDelimiter - lineAbove.DelimiterLength' lineAbove.DelimiterLength' data.GetIndentationString (data.Caret.Line - 1' 1));" is 160.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The length of the statement  "				if (data.HasIndentationTracker && (data.IndentationTracker.SupportedFeatures & IndentationTrackerFeatures.SmartBackspace) != 0)" is 127.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Delete,The length of the statement  "					if (data.MainSelection.SelectionMode == SelectionMode.Block && data.MainSelection.Anchor.Column == data.MainSelection.Lead.Column) {" is 132.
Long Statement,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Delete,The length of the statement  "								changes.Add (new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan (lineSegment.Offset + col' 1)' ""));" is 134.
Long Statement,Mono.TextEditor,MiscActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\MiscActions.cs,MoveBlockUp,The length of the statement  "					foreach (TextLineMarker marker in (i != lineEnd ? data.Document.GetMarkers (data.Document.GetLine (i + 1)) : prevLineMarkers)) {" is 128.
Long Statement,Mono.TextEditor,MiscActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\MiscActions.cs,MoveBlockDown,The length of the statement  "					foreach (TextLineMarker marker in (i != lineStart ? data.Document.GetMarkers (data.Document.GetLine (i - 1)) : prevLineMarkers)) {" is 130.
Long Statement,Mono.TextEditor,ScrollActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ScrollActions.cs,Down,The length of the statement  "			var newValue = System.Math.Min (data.VAdjustment.Upper - data.VAdjustment.PageSize' data.VAdjustment.Value + data.VAdjustment.StepIncrement); " is 141.
Long Statement,Mono.TextEditor,ScrollActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ScrollActions.cs,PageDown,The length of the statement  "			var newValue = System.Math.Min (data.VAdjustment.Upper - data.VAdjustment.PageSize' data.VAdjustment.Value + data.VAdjustment.PageSize); " is 136.
Long Statement,Mono.TextEditor,SelectionActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\SelectionActions.cs,StartLineSelection,The length of the statement  "				data.MainSelection = new MonoDevelop.Ide.Editor.Selection (new DocumentLocation (data.Caret.Line' DocumentLocation.MinColumn)' new DocumentLocation (data.Caret.Line' DocumentLocation.MinColumn));" is 195.
Long Statement,Mono.TextEditor,SelectionActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\SelectionActions.cs,SelectAll,The length of the statement  "			data.MainSelection = new MonoDevelop.Ide.Editor.Selection (new DocumentLocation (DocumentLocation.MinLine' DocumentLocation.MinColumn)' data.OffsetToLocation (data.Length));" is 173.
Long Statement,Mono.TextEditor,DefaultSelectionSurroundingProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\ISelectionSurroundingProvider.cs,HandleSpecialSelectionKey,The length of the statement  "					new DocumentLocation (selection.Anchor.Line' endCol == selection.Anchor.Column ? endCol + start.Length : startCol + 1 + start.Length)'" is 134.
Long Statement,Mono.TextEditor,DefaultSelectionSurroundingProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\ISelectionSurroundingProvider.cs,HandleSpecialSelectionKey,The length of the statement  "					new DocumentLocation (selection.Lead.Line' endCol == selection.Anchor.Column ? startCol + 1 + start.Length : endCol + start.Length)'" is 132.
Long Statement,Mono.TextEditor,DefaultSelectionSurroundingProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\ISelectionSurroundingProvider.cs,HandleSpecialSelectionKey,The length of the statement  "				textEditorData.Document.CommitMultipleLineUpdate (textEditorData.MainSelection.MinLine' textEditorData.MainSelection.MaxLine);" is 126.
Long Statement,Mono.TextEditor,SearchResult,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SearchResult.cs,ToString,The length of the statement  "			return string.Format ("[SearchResult: Offset={0}' Length={1}' SearchWrapped={2}]"' this.Offset' this.Length' this.SearchWrapped);" is 129.
Long Statement,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,CheckColumn,The length of the statement  "			if (TextEditorData.HasIndentationTracker && TextEditorData.Options.IndentStyle == IndentStyle.Virtual && curLine.Length == 0) {" is 127.
Long Statement,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,SetToOffsetWithDesiredColumn,The length of the statement  "			OnPositionChanged (new CaretLocationEventArgs (old' currentBuffer ?? TextEditorData.Document.TextBuffer.CurrentSnapshot' CaretChangeReason.Movement));" is 150.
Long Statement,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,SetColumn,The length of the statement  "			if (TextEditorData.HasIndentationTracker && TextEditorData.Options.IndentStyle == IndentStyle.Virtual && curLine.GetVisualColumn (TextEditorData' column) < DesiredColumn) {" is 172.
Long Statement,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,SetToDesiredColumn,The length of the statement  "			OnPositionChanged (new CaretLocationEventArgs (old' currentBuffer ?? TextEditorData.Document.TextBuffer.CurrentSnapshot' CaretChangeReason.Movement));" is 150.
Long Statement,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,UpdateCaretPosition,The length of the statement  "			if (TextEditorData.HasIndentationTracker && TextEditorData.Options.IndentStyle == IndentStyle.Virtual && curLine.Length == 0) {" is 127.
Long Statement,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,UpdateCaretPosition,The length of the statement  "			OnPositionChanged (new CaretLocationEventArgs (old' currentBuffer ?? TextEditorData.Document.TextBuffer.CurrentSnapshot' CaretChangeReason.BufferChange));" is 154.
Long Statement,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,PositionChanged_ITextCaret,The length of the statement  "			// MD doesn't fire textEditor.CaretPositionChanged until after the command has gone completely through the command chain. " is 121.
Long Statement,Mono.TextEditor,CaretImpl,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\CaretImpl.cs,PositionChanged_ITextCaret,The length of the statement  "			// (no selection / single caret' no selection / multiple carets' simple selection' block selection' multiple selections)." is 121.
Long Statement,Mono.TextEditor,EditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\EditMode.cs,InsertCharacter,The length of the statement  "			if (textEditorData.IsSomethingSelected && textEditorData.Options.EnableSelectionWrappingKeys && IsSpecialKeyForSelection (unicodeKey)) {" is 136.
Long Statement,Mono.TextEditor,EditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\EditMode.cs,InsertCharacter,The length of the statement  "								changes.Add (new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan (lineSegment.Offset + insertOffset' 0)' textToInsert));" is 153.
Long Statement,Mono.TextEditor,EditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\EditMode.cs,InsertCharacter,The length of the statement  "								new DocumentLocation (selection.Anchor.Line' textEditorData.GetLine (selection.Anchor.Line).GetLogicalColumn (textEditorData' visualColumn))'" is 141.
Long Statement,Mono.TextEditor,EditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\EditMode.cs,InsertCharacter,The length of the statement  "								new DocumentLocation (selection.Lead.Line' textEditorData.GetLine (selection.Lead.Line).GetLogicalColumn (textEditorData' visualColumn))'" is 137.
Long Statement,Mono.TextEditor,HeightTree,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HeightTree.cs,YToLineNumber,The length of the statement  "					return y < 0 ? DocumentLocation.MinLine + (int)(y / editor.LineHeight) : tree.Root.totalCount + (int)((y - tree.Root.totalHeight) / editor.LineHeight);" is 151.
Long Statement,Mono.TextEditor,HeightNode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HeightTree.cs,ToString,The length of the statement  "				return string.Format (GetLineNumber () + "[HeightNode: totalHeight={0}' height={1}' totalVisibleCount = {5}' totalCount={2}' count={3}' foldLevel={4}]"' totalHeight' height' totalCount' count' foldLevel' totalVisibleCount);" is 223.
Long Statement,Mono.TextEditor,InsertionPoint,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,ToString,The length of the statement  "			return string.Format ("[InsertionPoint: Location={0}' LineBefore={1}' LineAfter={2}]"' Location' LineBefore' LineAfter);" is 120.
Long Statement,Mono.TextEditor,CursorDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,Draw,The length of the statement  "				double x2 = editor.Allocation.Width - mode.HelpWindow.Allocation.Width - InsertionCursorEditMode.HelpWindowMargin * 2 + 4;" is 122.
Long Statement,Mono.TextEditor,BasicSearchEngine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\ISearchEngine.cs,GetMatchAt,The length of the statement  "			if ((!string.IsNullOrEmpty (SearchRequest.SearchPattern)) && offset + searchRequest.SearchPattern.Length <= doc.Length && compiledPattern.Length > 0) {" is 151.
Long Statement,Mono.TextEditor,LineBackgroundMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\LineBackgroundMarker.cs,DrawBackground,The length of the statement  "			cr.Rectangle (metrics.TextRenderStartPosition' metrics.LineYRenderStartPosition' metrics.TextRenderEndPosition - metrics.TextRenderStartPosition' editor.LineHeight);" is 165.
Long Statement,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitCommonBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Gdk.Key.Return' Gdk.ModifierType.ControlMask)' MiscActions.InsertNewLinePreserveCaretPosition);" is 124.
Long Statement,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitDefaultBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Gdk.Key.D' Gdk.ModifierType.ShiftMask | Gdk.ModifierType.ControlMask)' DeleteActions.CaretLineToEnd);" is 130.
Long Statement,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitMacBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Gdk.Key.a' Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)' SelectionActions.MoveLineHome);" is 131.
Long Statement,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitMacBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Gdk.Key.e' Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)' SelectionActions.MoveLineEnd);" is 130.
Long Statement,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitMacBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Key.BackSpace' ModifierType.Mod1Mask | ModifierType.ShiftMask)' DeleteActions.PreviousSubword);" is 124.
Long Statement,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitMacBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Gdk.Key.p' Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)' SelectionActions.MoveUp);" is 125.
Long Statement,Mono.TextEditor,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\SimpleEditMode.cs,InitMacBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Gdk.Key.n' Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)' SelectionActions.MoveDown);" is 127.
Long Statement,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,HandlePositionChanged,The length of the statement  "			TextLink link = links.Find (l => !l.PrimaryLink.IsInvalid () && l.PrimaryLink.Offset <= caretOffset && caretOffset <= l.PrimaryLink.EndOffset);" is 143.
Long Statement,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,Setlink,The length of the statement  "			Editor.MainSelection = new MonoDevelop.Ide.Editor.Selection (Editor.Document.OffsetToLocation (baseOffset + link.PrimaryLink.Offset)'" is 133.
Long Statement,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,UpdateLinksOnTextReplace,The length of the statement  "					var newStart = Microsoft.VisualStudio.Text.Tracking.TrackPositionForwardInTime(Microsoft.VisualStudio.Text.PointTrackingMode.Negative' " is 134.
Long Statement,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,UpdateLinksOnTextReplace,The length of the statement  "					var newEnd = Microsoft.VisualStudio.Text.Tracking.TrackPositionForwardInTime(Microsoft.VisualStudio.Text.PointTrackingMode.Positive' " is 132.
Long Statement,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,UpdateLinksOnTextReplace,The length of the statement  "			// If this is the final edit of a compund edit (e.g. no one has modified the buffer in an event handler before this one). " is 121.
Long Statement,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,GotoNextLink,The length of the statement  "			TextLink nextLink = links.Find (l => l.IsEditable && l.PrimaryLink.Offset > (link != null ? link.PrimaryLink.EndOffset : caretOffset));" is 135.
Long Statement,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,GotoPreviousLink,The length of the statement  "			var prevLink = links.FindLast (l => l.IsEditable && l.PrimaryLink.Offset < (link != null ? link.PrimaryLink.Offset : caretOffset));" is 131.
Long Statement,Mono.TextEditor,TextLinkEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,UpdateTextLinks,The length of the statement  "			using (var edit = Editor.Document.TextBuffer.CreateEdit(Microsoft.VisualStudio.Text.EditOptions.None' null' _linkEditTag)) { " is 124.
Long Statement,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The length of the statement  "					if ((BaseOffset + segment.Offset <= metrics.TextStartOffset && metrics.TextStartOffset < BaseOffset + segment.EndOffset) || (metrics.TextStartOffset <= BaseOffset + segment.Offset && BaseOffset + segment.Offset < metrics.TextEndOffset)) {" is 238.
Long Statement,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The length of the statement  "							fillGc = SyntaxHighlightingService.GetColor (editor.EditorTheme' isPrimaryHighlighted ? EditorThemeColors.PrimaryTemplateHighlighted2 : EditorThemeColors.PrimaryTemplate2);" is 172.
Long Statement,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The length of the statement  "							rectangleGc = SyntaxHighlightingService.GetColor (editor.EditorTheme' isPrimaryHighlighted ? EditorThemeColors.PrimaryTemplateHighlighted2 : EditorThemeColors.PrimaryTemplate2);" is 177.
Long Statement,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The length of the statement  "							fillGc = SyntaxHighlightingService.GetColor (editor.EditorTheme' isPrimaryHighlighted ? EditorThemeColors.SecondaryTemplateHighlighted2 : EditorThemeColors.SecondaryTemplate2);" is 176.
Long Statement,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The length of the statement  "							rectangleGc = SyntaxHighlightingService.GetColor (editor.EditorTheme' isPrimaryHighlighted ? EditorThemeColors.SecondaryTemplateHighlighted : EditorThemeColors.SecondaryTemplate);" is 179.
Long Statement,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The length of the statement  "			cr.SetSourceColor (editor.Caret.Line == metrics.LineNumber ? SyntaxHighlightingService.GetColor (editor.EditorTheme' EditorThemeColors.LineHighlight) : lineNumberGC);" is 166.
Long Statement,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The length of the statement  "				Pango.CairoHelper.ShowErrorUnderline (cr' metrics.TextRenderStartPosition' y + editor.LineHeight - height' editor.Allocation.Width' height); " is 140.
Long Statement,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The length of the statement  "				throw new InvalidOperationException ("Invalid text segment marker effect " + Effect + " not supported by this marker."); " is 120.
Long Statement,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,Draw,The length of the statement  "			var (x1' x2) = CalculateXPositions (startOffset' endOffset' startXPos' endXPos' layoutWrapper' layout' markerStart' markerEnd);" is 127.
Long Statement,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,CalculateXPositions,The length of the statement  "				int x_pos = layout.IndexToPos ((int)layoutWrapper.TranslateToUTF8Index ((uint)(start - startOffset)' ref curIndex' ref byteIndex)).X;" is 133.
Long Statement,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,CalculateXPositions,The length of the statement  "				x_pos = layout.IndexToPos ((int)layoutWrapper.TranslateToUTF8Index ((uint)(end - startOffset)' ref curIndex' ref byteIndex)).X;" is 127.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,HandleTextReplaced,The length of the statement  "						newChanges.Add (new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan (change.NewOffset' change.InsertionLength)' replaceText)); " is 159.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,GetMarkup,The length of the statement  "			return GetMarkupAsync (offset' length' removeIndent' useColors' replaceTabs' fitIdeStyle).WaitAndGetResult (default (CancellationToken));" is 137.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,GetMarkupAsync,The length of the statement  "					bool setColor = styleStack.Count == 0 || TextViewMargin.GetPixel (styleStack.Peek ().Foreground) != TextViewMargin.GetPixel (chunkStyle.Foreground);" is 148.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,GetMarkupAsync,The length of the statement  "					result.Append (ConvertToPangoMarkup (doc.GetTextBetween (chunk.Offset' System.Math.Min (chunk.EndOffset' doc.Length))' replaceTabs));" is 133.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,GetChunks,The length of the statement  "						LoggingService.LogInternalError (new InvalidOperationException ("Segment== null insede highlighed line " + highlightedLine));" is 125.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,InsertAtCaret,The length of the statement  "				DeleteSelectedText (IsSomethingSelected ? MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block : true);" is 124.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,FixVirtualIndentation,The length of the statement  "			if (!HasIndentationTracker || Options.IndentStyle != IndentStyle.Virtual || LockFixIndentation || (IndentationTracker.SupportedFeatures & IndentationTrackerFeatures.SkipFixVirtualIndentation) != 0)" is 197.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,SetSelection,The length of the statement  "			MainSelection = anchor == lead ? MonoDevelop.Ide.Editor.Selection.Empty : new MonoDevelop.Ide.Editor.Selection (anchor' lead);" is 126.
Long Statement,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,DeleteSelection,The length of the statement  "					changes.Add (new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan (curLine.Offset + col1' col2 - col1)' ""));" is 141.
Long Statement,MonoDevelop.SourceEditor,EditActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\EditActions.cs,RemoveCharBeforCaret,The length of the statement  "			if (!data.IsSomethingSelected && MonoDevelop.Ide.Editor.DefaultSourceEditorOptions.Instance.AutoInsertMatchingBracket) {" is 120.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,UpdateSemanticHighlighting,The length of the statement  "					Document.SyntaxMode = new SemanticHighlightingSyntaxMode (this' def != null ? (ISyntaxHighlighting)new SyntaxHighlighting (def' Document) : DefaultSyntaxHighlighting.Instance' semanticHighlighting);" is 198.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,GetIdeColorStyleName,The length of the statement  "				scheme = Ide.Editor.Highlighting.SyntaxHighlightingService.GetDefaultColorStyle (IdeApp.Preferences.UserInterfaceTheme);" is 120.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,OnIMProcessedKeyPressEvent,The length of the statement  "				bool b = EditorExtension != null ? ExtensionKeyPress (key' ch' state) : base.OnIMProcessedKeyPressEvent (key' ch' state);" is 121.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,IsTemplateKnown,The length of the statement  "			foreach (CodeTemplate template in CodeTemplateService.GetCodeTemplatesAsync (EditorExtension.Editor).WaitAndGetResult (CancellationToken.None)) {" is 145.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,DoInsertTemplate,The length of the statement  "				LoggingService.LogInternalError ($"Error while trying to insert template: Editor={doc.Editor}' Ctx={doc.DocumentContext}."' e);" is 127.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,DoInsertTemplate,The length of the statement  "			foreach (CodeTemplate template in CodeTemplateService.GetCodeTemplatesAsync (editor).WaitAndGetResult (CancellationToken.None)) {" is 129.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,InsertTemplate,The length of the statement  "					GetStringFunc = l.GetStringFunc != null ? (Func<Func<string' string>' Mono.TextEditor.PopupWindow.IListDataProvider<string>>)(arg => new ListDataProviderWrapper (l.GetStringFunc (arg))) : null" is 192.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,HandleTextReplaced,The length of the statement  "					if (line == null || line.Contains (change.Offset) || line.Contains (change.Offset + change.InsertionLength) || change.Offset < line.Offset && line.Offset < change.Offset + change.InsertionLength) {" is 197.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,UpdateTasks,The length of the statement  "						var errorTextMarker = new MessageBubbleTextMarker (messageBubbleCache' task' task.Severity == TaskSeverity.Error' task.Description);" is 132.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Save,The length of the statement  "						GettextCatalog.GetString ("Some unicode characters in this file could not be saved with the current encoding.\nDo you want to resave this file as Unicode ?\nYou can choose another encoding in the 'save as' dialog.")'" is 216.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,LoadSettings,The length of the statement  "			if (widget == null || string.IsNullOrEmpty (ContentName) || !MonoDevelop.Ide.Editor.FileSettingsStore.TryGetValue (ContentName' out settings))" is 142.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,AddBreakpoint,The length of the statement  "				//TODO: 1. When not in debug mode use Microsoft.CodeAnalysis.CSharp.EditAndContinue.BreakpointSpans.TryGetBreakpointSpan" is 120.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,AddBreakpoint,The length of the statement  "				//TODO: 2. When in debug mode extend Breakpoint class to have endLine and endColumn set if .mdb/.pdb has endLine/endColumn" is 122.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnIconMarginMouseMoved,The length of the statement  "			if (hoverDebugLineMarker == null && e.LineSegment != null && e.Editor.Document.GetMarkers (e.LineSegment).FirstOrDefault (m => m is DebugIconMarker) == null) {" is 159.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Undo,The length of the statement  "							var question = GettextCatalog.GetString ("You are about to undo past the last point this file was saved. Do you want to do this?");" is 131.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CorrectIndenting,The length of the statement  "					editorData.SetSelection (version.MoveOffsetTo (editorData.Document.Version' anchor)' version.MoveOffsetTo (editorData.Document.Version' lead));" is 143.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,StartInsertionMode,The length of the statement  "			var mode = new InsertionCursorEditMode (TextEditor' insertionModeOptions.InsertionPoints.Select (ip => new Mono.TextEditor.InsertionPoint (" is 139.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,StartInsertionMode,The length of the statement  "																													new MonoDevelop.Ide.Editor.DocumentLocation (iCArgs.InsertionPoint.Location.Line' iCArgs.InsertionPoint.Location.Column)'" is 121.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,AddMarker,The length of the statement  "				throw new InvalidOperationException ("Tried to add an incompatible text marker. Use the MarkerHost to create compatible ones.");" is 128.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetTextSegmentMarkersAt,The length of the statement  "			return TextEditor.Document.GetTextSegmentMarkersAt (new TextSegment (segment.Offset' segment.Length)).OfType<ITextSegmentMarker> ();" is 132.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,AddMarker,The length of the statement  "				throw new InvalidOperationException ("Tried to add an incompatible text marker. Use the MarkerHost to create compatible ones.");" is 128.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetMarkupAsync,The length of the statement  "				return await data.GetMarkupAsync (offset' length' false' replaceTabs: false' fitIdeStyle: options.FitIdeStyle' cancellationToken: cancellationToken);" is 149.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetMarkupAsync,The length of the statement  "				return HtmlWriter.GenerateHtml (await ClipboardColoredText.GetChunks (data' new TextSegment (offset' length)' cancellationToken)' data.ColorStyle' data.Options);" is 161.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetMarkupAsync,The length of the statement  "				return RtfWriter.GenerateRtf (await ClipboardColoredText.GetChunks (data' new TextSegment (offset' length)' cancellationToken)' data.ColorStyle' data.Options);" is 159.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,ShowTooltipWindow,The length of the statement  "			Mono.TextEditor.TooltipProvider.ShowAndPositionTooltip (TextEditor' tooltipWindow' p.X' p.Y' (int)tooltipWindow.Width' 0.5);" is 124.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,ToggleBlockSelectionMode,The length of the statement  "			TextEditor.SelectionMode = TextEditor.SelectionMode == MonoDevelop.Ide.Editor.SelectionMode.Normal ? MonoDevelop.Ide.Editor.SelectionMode.Block : MonoDevelop.Ide.Editor.SelectionMode.Normal;" is 190.
Long Statement,MonoDevelop.SourceEditor,BracketMatcherTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,DrawBackground,The length of the statement  "						var bracketMatch = new Cairo.Rectangle (fromX + 0.5' metrics.LineYRenderStartPosition + 0.5' toX - fromX - 1' editor.LineHeight - 2);" is 133.
Long Statement,MonoDevelop.SourceEditor,BracketMatcherTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,DrawBackground,The length of the statement  "					LoggingService.LogError ($"Error while drawing bracket matcher ({this}) startOffset={startOffset} lineCharLength={metrics.Layout.Text.Length}"' e);" is 147.
Long Statement,MonoDevelop.SourceEditor,BracketMatcherTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetLineDrawingPosition,The length of the statement  "				TextViewMargin.TranslateToUTF8Index (metrics.Layout.Text' (uint)Math.Min (start - startOffset' metrics.Layout.Text.Length)' ref curIndex' ref byteIndex);" is 153.
Long Statement,MonoDevelop.SourceEditor,BracketMatcherTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetLineDrawingPosition,The length of the statement  "				TextViewMargin.TranslateToUTF8Index (metrics.Layout.Text' (uint)Math.Min (end - startOffset' metrics.Layout.Text.Length)' ref curIndex' ref byteIndex);" is 151.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,AddMarker,The length of the statement  "			if (document == null || region.BeginLine <= 0 || region.EndLine <= 0 || region.BeginLine > document.LineCount || region.EndLine > document.LineCount)" is 149.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The length of the statement  "			var label = new Label (GettextCatalog.GetString ("This file has line endings ({0}) which differ from the policy settings ({1})."' GetEolString (DetectedEolMarker)' GetEolString (textEditor.Options.DefaultEolMarker)));" is 217.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CaretPositionChanged,The length of the statement  "			if (curLine != null && TextEditor.Document.GetMarkers (curLine).Any (m => m is MonoDevelop.SourceEditor.MessageBubbleTextMarker)) {" is 131.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CaretPositionChanged,The length of the statement  "				marker = (MonoDevelop.SourceEditor.MessageBubbleTextMarker)TextEditor.Document.GetMarkers (curLine).First (m => m is MonoDevelop.SourceEditor.MessageBubbleTextMarker);" is 167.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The length of the statement  "				//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));" is 160.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The length of the statement  "				searchAndReplaceWidgetFrame.SetFillColor (CairoExtensions.GdkColorToCairoColor (vbox.Style.Background (StateType.Normal)));" is 123.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The length of the statement  "				searchAndReplaceWidgetFrame.Child = searchAndReplaceWidget = new SearchAndReplaceWidget (TextEditor' searchAndReplaceWidgetFrame);" is 130.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The length of the statement  "				this.TextEditor.AddAnimatedWidget (searchAndReplaceWidgetFrame' ANIMATION_DURATION' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' TextEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);" is 233.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "				//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));" is 160.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "				gotoLineNumberWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (vbox.Style.Background (StateType.Normal)));" is 144.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "				gotoLineNumberWidgetFrame.Child = gotoLineNumberWidget = new GotoLineNumberWidget (textEditor' gotoLineNumberWidgetFrame);" is 122.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "				TextEditor.AddAnimatedWidget (gotoLineNumberWidgetFrame' ANIMATION_DURATION' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Mono.TextEditor.Theatrics.Blocking.Downstage' this.TextEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);" is 255.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,FormatPatternToSelectionOption,The length of the statement  "			return MonoDevelop.Ide.FindInFiles.FindInFilesDialog.FormatPatternToSelectionOption (pattern' SearchAndReplaceWidget.SearchEngine == SearchAndReplaceWidget.RegexSearchEngine);" is 175.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,OnUpdateToggleErrorTextMarker,The length of the statement  "			var marker = (MessageBubbleTextMarker)TextEditor.Document.GetMarkers (line).FirstOrDefault (m => m is MessageBubbleTextMarker);" is 127.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,OnToggleErrorTextMarker,The length of the statement  "			var marker = (MessageBubbleTextMarker)TextEditor.Document.GetMarkers (line).FirstOrDefault (m => m is MessageBubbleTextMarker);" is 127.
Long Statement,MonoDevelop.SourceEditor,DecoratedScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,OptionsChanged,The length of the statement  "				scrolledBackground.ModifyBg (StateType.Normal' SyntaxHighlightingService.GetColor (editor.EditorTheme' EditorThemeColors.Background));" is 134.
Long Statement,MonoDevelop.SourceEditor,MarkerOperationsHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MarkerOperationsHandler.cs,Update,The length of the statement  "								ainfo.Add (urlMarker.UrlType == UrlType.Email ? GettextCatalog.GetString ("_Write an e-mail to...") : GettextCatalog.GetString ("_Open URL...")' urlMarker);" is 156.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,StoreHistory,The length of the statement  "			PropertyService.Set (propertyKey' history != null ? String.Join (historySeparator.ToString ()' history.ToArray ()) : null);" is 123.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,UpdateResultInformLabel,The length of the statement  "					//resultInformLabel.Markup = "<span foreground=\"#000000\" background=\"" + MonoDevelop.Components.PangoCairoHelper.GetColorString (GotoLineNumberWidget.errorColor) + "\">" + GettextCatalog.GetString ("Not found") + "</span>";" is 226.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,UpdateResultInformLabel,The length of the statement  "						resultInformLabel.Text = String.Format (GettextCatalog.GetString ("{0} of {1}")' foundIndex' textEditor.TextViewMargin.SearchResultMatchCount);" is 143.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,UpdateResultInformLabel,The length of the statement  "						resultInformLabel.Text = String.Format (GettextCatalog.GetPluralString ("{0} match"' "{0} matches"' textEditor.TextViewMargin.SearchResultMatchCount)' textEditor.TextViewMargin.SearchResultMatchCount);" is 201.
Long Statement,MonoDevelop.SourceEditor,DebugValueTooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueTooltipProvider.cs,CreateTooltipWindow,The length of the statement  "			var window = new DebugValueWindow ((Gtk.Window)(editor.GetNativeWidget<Gtk.Widget> ()).Toplevel' location' DebuggingService.CurrentFrame' (ObjectValue)item.Item' null);" is 168.
Long Statement,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,OnDrawPage,The length of the statement  "						atts.Insert (new Pango.AttrForeground ((ushort)(foreground.R * ushort.MaxValue)' (ushort)(foreground.G * ushort.MaxValue)' (ushort)(foreground.B * ushort.MaxValue)));" is 166.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,BlendSelection,The length of the statement  "			var selectionColor = (Cairo.Color)Ide.Editor.Highlighting.SyntaxHighlightingService.GetColor (editor.EditorTheme' EditorThemeColors.Selection);" is 143.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,Highlight,The length of the statement  "			var selectionColor = (Cairo.Color)Ide.Editor.Highlighting.SyntaxHighlightingService.GetColor (editor.EditorTheme' EditorThemeColors.Background);" is 144.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The length of the statement  "				using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {" is 125.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The length of the statement  "			cr.DrawImage (editor' errors.Any (e => e.IsError) ? MessageBubbleCache.errorPixbuf : MessageBubbleCache.warningPixbuf' 0' 0);" is 125.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The length of the statement  "				return DrawMarginBackground (editor' metrics.Margin' cr' metrics.Area' LineSegment' metrics.LineNumber' metrics.X' metrics.Y' metrics.Height);" is 142.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The length of the statement  "			var min = right - LayoutWidth - border - (ShowIconsInBubble ? MessageBubbleCache.errorPixbuf.Width : 0) - errorCounterWidth;" is 124.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The length of the statement  "			bool isEolSelected = editor.IsSomethingSelected && editor.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block ? editor.SelectionRange.Contains (LineSegment.Offset + LineSegment.Length) : false;" is 201.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleCache,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The length of the statement  "				popoverWindow.ShowPopup (editor' new Gdk.Rectangle ((int)(bubbleX + editor.TextViewMargin.XOffset)' (int)bubbleY' (int)bubbleWidth' (int)editor.LineHeight)' PopupPosition.Top);" is 176.
Long Statement,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,AdjustPositionInEditor,The length of the statement  "			textEditor.MoveTopLevelWidget (this' (textEditor.Allocation.Width - alloc.Width) / 2' textEditor.Allocation.Height - alloc.Height - 8);" is 135.
Long Statement,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,OnExposeEvent,The length of the statement  "				cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.NotificationTextBackground));" is 126.
Long Statement,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,OnExposeEvent,The length of the statement  "				cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.NotificationTextBackground));" is 126.
Long Statement,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnExposeEvent,The length of the statement  "				DrawCloseButton (cr' new Gdk.Point (Allocation.X + Allocation.Width / 2' Allocation.Y + Allocation.Height / 2)' hovered' 1.0' 0);" is 129.
Long Statement,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The length of the statement  "				var extendingMarker = lineSegment != null ? (IExtendingTextLineMarker)editor.Document.GetMarkers (lineSegment).FirstOrDefault (l => l is IExtendingTextLineMarker) : null;" is 170.
Long Statement,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The length of the statement  "				editor.TextArea.GutterMargin.DrawForeground (cr' (int)metrics.LineNumber' metrics.X' metrics.Y' metrics.Height' isSpaceAbove);" is 126.
Long Statement,MonoDevelop.SourceEditor,DebugTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawBackground,The length of the statement  "				cr.RoundedRectangle (@from + 2.5' y + 0.5' to - @from' editor.LineHeight - 1' 2); // 2.5 to make space for the column guideline" is 127.
Long Statement,MonoDevelop.SourceEditor,DebugTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,TransformChunks,The length of the statement  "			//		var newChunk = new Ide.Editor.Highlighting.ColoredSegment (chunk.Offset' markerStart - chunk.Offset' chunk.ScopeStack);" is 123.
Long Statement,MonoDevelop.SourceEditor,DebugTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,TransformChunks,The length of the statement  "			//		chunks [i] = new Ide.Editor.Highlighting.ColoredSegment (chunk.Offset + newChunk.Length' chunk.Length - newChunk.Length' chunk.ScopeStack);" is 143.
Long Statement,MonoDevelop.SourceEditor,SmartTagMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarker.cs,Draw,The length of the statement  "			var x = editor.ColumnToX (line' loc.Column) - editor.HAdjustment.Value + editor.TextViewMargin.XOffset + editor.TextViewMargin.TextStartPosition;" is 145.
Long Statement,MonoDevelop.SourceEditor,SmartTagMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarker.cs,Draw,The length of the statement  "			cr.Rectangle (Math.Floor (x)' Math.Floor (metrics.LineYRenderStartPosition) + editor.LineHeight - tagMarkerHeight * editor.Options.Zoom' tagMarkerWidth * editor.Options.Zoom' tagMarkerHeight * editor.Options.Zoom);" is 214.
Long Statement,MonoDevelop.SourceEditor,SmartTagMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarker.cs,Draw,The length of the statement  "			cr.SetSourceColor ((HslColor.Brightness (SyntaxHighlightingService.GetColor (editor.EditorTheme' EditorThemeColors.Background)) < 0.5 ? Ide.Gui.Styles.Editor.SmartTagMarkerColorDark : Ide.Gui.Styles.Editor.SmartTagMarkerColorLight).ToCairoColor ());" is 249.
Long Statement,MonoDevelop.SourceEditor,LinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\LinkMarker.cs,MouseHover,The length of the statement  "				editor.TextViewMargin.HoveredLineChanged += new UpdateOldLine (editor' args.LineSegment).TextViewMargin_HoveredLineChanged;" is 123.
Long Statement,MonoDevelop.SourceEditor,UnitTestMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UnitTestMarker.cs,DrawForeground,The length of the statement  "				cr.DrawImage (editor' statusIcon' Math.Truncate (metrics.X + metrics.Width / 2 - statusIcon.Width / 2)' Math.Truncate (metrics.Y + metrics.Height / 2 - statusIcon.Height / 2));" is 176.
Long Statement,MonoDevelop.SourceEditor,ErrorMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\ErrorMarker.cs,Draw,The length of the statement  "			Color = SyntaxHighlightingService.GetColor (editor.EditorTheme' info.ErrorType == ErrorType.Warning ? EditorThemeColors.UnderlineWarning : EditorThemeColors.UnderlineError);" is 173.
Long Statement,MonoDevelop.SourceEditor,DefaultAutoInsertBracketHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DefaultAutoInsertBracketHandler.cs,Handle,The length of the statement  "			var stack = editor.SyntaxHighlighting.GetScopeStackAsync (Math.Max (0' editor.CaretOffset - 2)' CancellationToken.None).WaitAndGetResult (CancellationToken.None);" is 162.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "            //This method does not support virtual whitespace positioning.  An attempt to support it by using caret position was introduced' but" is 132.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "            //regressed the behavior that popup should stay in place as the caret moves.  If in the future we need to support virtual whitespace'" is 133.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "                    if ((startPointBounds.Left < right) && (startPointBounds.Left >= _textView.ViewportLeft) && (startPointBounds.Left < _textView.ViewportRight))" is 142.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "                //visualSpan is zero length so the default MarkerGeometry will be null. Create a custom marker geometry based on the location." is 126.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "                Rect viewRect = new Rect(_textView.ViewportLeft' _textView.ViewportTop' _textView.ViewportWidth' _textView.ViewportHeight);" is 123.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "                    Rect spanRectWithBuffer = new Rect(spanRect.Left' spanRect.Top' spanRect.Right - spanRect.Left' spanRect.Bottom - spanRect.Top + BelowTheLineBufferHint);" is 153.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "                    Rect spanRectWithBufferInScreenCoordinates = new Rect(this.GetScreenPointFromTextXY(spanRectWithBuffer.Left' spanRectWithBuffer.Top)'" is 133.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "                    Rect screenRect = Xwt.Desktop.GetScreenAtLocation(spanRectInScreenCoordinates.TopLeft).Bounds;//TODO: Check if we should use VisualBounds" is 137.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,PositionAndDisplay,The length of the statement  "                    //TODO desiredSize = new Size (desiredSize.Width / WpfHelper.DeviceScaleX' desiredSize.Height / WpfHelper.DeviceScaleY);" is 120.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,ShouldClearToolTipOnMouseMove,The length of the statement  "            var bottomRight = _textView.VisualElement.GetScreenCoordinates(new Gdk.Point(_textView.VisualElement.WidthRequest' _textView.VisualElement.HeightRequest));" is 155.
Long Statement,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,GetScreenPointFromTextXY,The length of the statement  "            return _textView.VisualElement.GetScreenCoordinates(new Gdk.Point((int)(x - _textView.ViewportLeft)' (int)(y - _textView.ViewportTop))).ToXwtPoint();" is 149.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The length of the statement  "			this.checkbuttonAutoSetSearchPatternCasing.Label = global::Mono.Unix.Catalog.GetString("_Automatically set search pattern case sensitivity");" is 141.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The length of the statement  "			this.checkbuttonGenerateFormattingUndoStep.Label = global::Mono.Unix.Catalog.GetString("_Generate additional undo steps for formatting");" is 137.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The length of the statement  "			this.checkbuttonEnableSelectionSurrounding.Label = global::Mono.Unix.Catalog.GetString("Enable _selection surrounding keys");" is 125.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The length of the statement  "			this.tabAsReindentCheckbutton.Label = global::Mono.Unix.Catalog.GetString("Interpret tab _keystroke as reindent command");" is 122.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,SetupAccessibility,The length of the statement  "			wordWrapVisualGlyphsCheckBox.SetCommonAccessibilityAttributes ("SourceEditorGeneral.newEditor.wordWrap.enableVisualGlyphs"' ""'" is 127.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,LoadStyle,The length of the statement  "				return new EditorTheme (styleName' new System.Collections.Generic.List<ThemeSetting> (SyntaxHighlightingService.DefaultColorStyle.Settings));" is 141.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,LoadStyle,The length of the statement  "				return new EditorTheme (styleName' new System.Collections.Generic.List<ThemeSetting> (SyntaxHighlightingService.DefaultColorStyle.Settings));" is 141.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,AddColorScheme,The length of the statement  "			var dialog = new SelectFileDialog (GettextCatalog.GetString ("Import Color Theme")' MonoDevelop.Components.FileChooserAction.Open) {" is 132.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,AddColorScheme,The length of the statement  "			dialog.AddFilter (GettextCatalog.GetString ("Color themes (Visual Studio' Xamarin Studio' TextMate) ")' "*.json"' "*.vssettings"' "*.tmTheme");" is 143.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The length of the statement  "			this.textview1.Buffer.Text = global::Mono.Unix.Catalog.GetString ("The following color theme formats are supported: Visual Studio (.vssettings)' Xamarin Studio (.json)' TextMate (.tmTheme). Changes in the theme folder require a restart.");" is 239.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "			this.highlightMatchingBracketCheckbutton.Active = highlightMatchingBracket = DefaultSourceEditorOptions.Instance.HighlightMatchingBracket;" is 138.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "			this.highlightCurrentLineCheckbutton.Active = highlightCurrentLine = DefaultSourceEditorOptions.Instance.HighlightCaretLine;" is 124.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "			this.enableHighlightUsagesCheckbutton.Active = enableHighlightUsages = DefaultSourceEditorOptions.Instance.EnableHighlightUsages;" is 129.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "			this.drawIndentMarkersCheckbutton.Active = drawIndentMarkers = DefaultSourceEditorOptions.Instance.DrawIndentationMarkers;" is 122.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "			this.checkbuttonSpaces.Active = DefaultSourceEditorOptions.Instance.IncludeWhitespaces.HasFlag (IncludeWhitespaces.Space);" is 122.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "			this.checkbuttonLineEndings.Active = DefaultSourceEditorOptions.Instance.IncludeWhitespaces.HasFlag (IncludeWhitespaces.LineEndings);" is 133.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "			this.showProcedureLineSeparatorsCheckbutton.Active = showProcedureLineSeparators = DefaultSourceEditorOptions.Instance.ShowProcedureLineSeparators;" is 147.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The length of the statement  "			this.showProcedureLineSeparatorsCheckbutton.Label = global::Mono.Unix.Catalog.GetString("_Show procedure line separators");" is 123.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,AutomaticCompletionToggled,The length of the statement  "			includeKeywordsCheckbutton.Sensitive = includeCodeSnippetsCheckbutton.Sensitive = !autoCodeCompletionCheckbutton.Active;" is 120.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The length of the statement  "			this.autoCodeCompletionCheckbutton.TooltipMarkup = global::Mono.Unix.Catalog.GetString ("Automatic Completion with Enter or Tab keys");" is 135.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The length of the statement  "			this.autoCodeCompletionCheckbutton.Label = global::Mono.Unix.Catalog.GetString ("_Show completion list after a character is typed");" is 132.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The length of the statement  "			this.automaticCompletionModeCheckbutton.TooltipMarkup = global::Mono.Unix.Catalog.GetString ("Enables automatic completion with the Space key or Punctuation");" is 159.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The length of the statement  "			this.automaticCompletionModeCheckbutton.Label = global::Mono.Unix.Catalog.GetString ("Complete with Space or Punctuation");" is 123.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The length of the statement  "			this.includeCodeSnippetsCheckbutton.Label = global::Mono.Unix.Catalog.GetString ("Include _code snippets in completion list");" is 126.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The length of the statement  "			this.insertParenthesesCheckbutton.Label = global::Mono.Unix.Catalog.GetString ("A_utomatically insert parentheses after completion:");" is 134.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionAppearancePanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionAppearancePanel.cs,Build,The length of the statement  "			this.filterByBrowsableCheckbutton.Label = global::Mono.Unix.Catalog.GetString("_Show EditorBrowsable.Advanced members");" is 120.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,ShowMenu,The length of the statement  "			IdeApp.CommandService.ShowContextMenu (this' x' y' IdeApp.CommandService.CreateCommandEntrySet ("/MonoDevelop/SourceEditor2/ContextMenu/Scrollbar")' this);" is 155.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,OnButtonPressEvent,The length of the statement  "				IdeApp.CommandService.ShowContextMenu (this' evnt' IdeApp.CommandService.CreateCommandEntrySet ("/MonoDevelop/SourceEditor2/ContextMenu/Scrollbar")' this);" is 155.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,Minimpap,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskMiniMapMode.cs,DrawBar,The length of the statement  "				Cairo.Color color = (TextEditor.ColorStyle != null) ? TextEditor.ColorStyle.Default.CairoColor : new Cairo.Color (0' 0' 0);" is 123.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,Minimpap,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskMiniMapMode.cs,OnExposeEvent,The length of the statement  "						e.Window.DrawDrawable (Style.BlackGC' backgroundPixbuf' 0' GetBufferYOffset ()' 0' 0' Allocation.Width' Allocation.Height);" is 123.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,MovePosition,The length of the statement  "			double position = ((y - IndicatorHeight) / (Allocation.Height - IndicatorHeight)) * vadjustment.Upper - vadjustment.PageSize / 2;" is 129.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,YToLine,The length of the statement  "			var line = 0.5 + (y - IndicatorHeight) / (Allocation.Height - IndicatorHeight) * (double)(TextEditor.GetTextEditorData ().VisibleLineCount);" is 140.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,GetQuickTasks,The length of the statement  "				} else if ((usage.UsageType & MonoDevelop.Ide.FindInFiles.ReferenceUsageType.Read) != 0 || (usage.UsageType & MonoDevelop.Ide.FindInFiles.ReferenceUsageType.Keyword) != 0) {" is 173.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The length of the statement  "				var brightness = HslColor.Brightness (SyntaxHighlightingService.GetColor (TextEditor.EditorTheme' EditorThemeColors.Background));" is 129.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The length of the statement  "				c = new Cairo.Color (1 - brightness' 1 - brightness' 1 - brightness' barColorValue * (barAlphaMax - barAlphaMin) + barAlphaMin);" is 128.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The length of the statement  "			var color = SyntaxHighlightingService.GetColor (TextEditor.EditorTheme' isSelected ? EditorThemeColors.Selection : EditorThemeColors.FindHighlight);" is 148.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The length of the statement  "			if (Math.Abs (HslColor.Brightness (color) - HslColor.Brightness (SyntaxHighlightingService.GetColor (TextEditor.EditorTheme' EditorThemeColors.Background))) < 0.1)" is 163.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,CachedDraw,The length of the statement  "			} else if ((surface.Data == null && parameters != null) || (surface.Data != null && !surface.Data.Equals (parameters))) {" is 121.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IndicatorDrawingState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IndicatorDrawingCache.cs,Equals,The length of the statement  "					if (UsageRectangles [i].Item1 != other.UsageRectangles [i].Item1 || UsageRectangles [i].Item2 != other.UsageRectangles [i].Item2)" is 129.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IndicatorDrawingState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IndicatorDrawingCache.cs,Equals,The length of the statement  "					if (TaskRectangles [i].Item1 != other.TaskRectangles [i].Item1 || TaskRectangles [i].Item2 != other.TaskRectangles [i].Item2)" is 125.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "						surface = new SurfaceWrapper (similiar' (int)(allocation.Width * displayScale)' (int)(allocation.Height * displayScale));" is 121.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "				state.ColorCache [IndicatorDrawingState.UsageColor] = SyntaxHighlightingService.GetColor (mode.TextEditor.EditorTheme' EditorThemeColors.Foreground);" is 149.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "				state.ColorCache [IndicatorDrawingState.ChangingUsagesColor] = SyntaxHighlightingService.GetColor (mode.TextEditor.EditorTheme' EditorThemeColors.ChangingUsagesRectangle);" is 171.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "					state.ColorCache [IndicatorDrawingState.ChangingUsagesColor] = SyntaxHighlightingService.GetColor (mode.TextEditor.EditorTheme' EditorThemeColors.UsagesRectangle);" is 163.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "				state.ColorCache [IndicatorDrawingState.UsagesRectangleColor] = SyntaxHighlightingService.GetColor (mode.TextEditor.EditorTheme' EditorThemeColors.UsagesRectangle);" is 164.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "				state.ColorCache [IndicatorDrawingState.UnderlineErrorColor] = SyntaxHighlightingService.GetColor (mode.TextEditor.EditorTheme' EditorThemeColors.UnderlineError);" is 162.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "				state.ColorCache [IndicatorDrawingState.UnderlineWarningColor] = SyntaxHighlightingService.GetColor (mode.TextEditor.EditorTheme' EditorThemeColors.UnderlineWarning);" is 166.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "				state.ColorCache [IndicatorDrawingState.UnderlineSuggestionColor] = SyntaxHighlightingService.GetColor (mode.TextEditor.EditorTheme' EditorThemeColors.UnderlineSuggestion);" is 172.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The length of the statement  "				state.ColorCache [IndicatorDrawingState.BackgroundColor] = SyntaxHighlightingService.GetColor (mode.TextEditor.EditorTheme' EditorThemeColors.Background);" is 154.
Long Statement,MonoDevelop.SourceEditor.Wrappers,TooltipProviderWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Wrappers\TooltipProviderWrapper.cs,GetItem,The length of the statement  "				LoggingService.LogWarning ("Tooltip provider " + provider + " gave back null on GetItem (should always return a non null task).");" is 130.
Long Statement,MonoDevelop.SourceEditor.Wrappers,TooltipProviderWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Wrappers\TooltipProviderWrapper.cs,CreateTooltipWindow,The length of the statement  "			var control = provider.CreateTooltipWindow (wrappedEditor' IdeApp.Workbench.ActiveDocument.DocumentContext' item' offset' modifierState.ToXwtValue ());" is 151.
Long Statement,MonoDevelop.SourceEditor.Wrappers,SemanticHighlightingSyntaxMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Wrappers\SemanticHighlightingSyntaxMode.cs,GetScopeStackAsync,The length of the statement  "			foreach (var seg in (await ((ISyntaxHighlighting)this).GetHighlightedLineAsync (line' cancellationToken).ConfigureAwait (false)).Segments) {" is 140.
Long Statement,Mono.TextEditor.PopupWindow,ListWindow<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWindow.cs,ProcessKey,The length of the statement  "					return (list.SelectionDisabled? ListWindowKeyAction.Process : (ListWindowKeyAction.Complete | ListWindowKeyAction.Ignore))" is 122.
Long Statement,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The length of the statement  "				FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' false' 0.5' 0.5' height + yBorder * 2 + 1.5' width' height + yBorder * 2);" is 135.
Long Statement,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The length of the statement  "				FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' 0.5' height * 2 + yBorder * 2 + 0.5' height' Allocation.Width - 1' Allocation.Height - height * 2 - yBorder * 2 - 1);" is 185.
Long Statement,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The length of the statement  "						FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' false' false' 0' y + 0.5' height + 1.5' Allocation.Width' height);" is 134.
Long Statement,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The length of the statement  "					gc.RgbFgColor = (HslColor)(i == 0 ? Styles.TableLayoutModeBackgroundColor : Styles.TableLayoutModeTextColor).ToCairoColor ();" is 125.
Long Statement,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The length of the statement  "				FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true' x - inner_padding - 0.5f' y - 0.5f' 8' w + inner_padding * 2 + 1' h + 1);" is 141.
Long Statement,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The length of the statement  "					FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' true' tw + 0.5' 0.5' 12' Allocation.Width - 1 - tw' Allocation.Height);" is 132.
Long Statement,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,RecalculateSpacings,The length of the statement  "						if (widget.AnimationState == AnimationState.Coming || widget.AnimationState == AnimationState.Idle || widget.Node.Next == null) {" is 129.
Long Statement,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,RecalculateSpacings,The length of the statement  "						if (widget.AnimationState == AnimationState.Coming || widget.AnimationState == AnimationState.Idle || widget.Node.Previous == null) {" is 133.
Long Statement,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,RemoveCore,The length of the statement  "				throw new ArgumentException ("Cannot remove the specified widget because it has not been added to this container or it has already been removed."' "widget");" is 157.
Long Statement,Mono.TextEditor.Theatrics,AnimatedWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedWidget.cs,OnWidgetDestroyed,The length of the statement  "				canvas.DrawDrawable (Style.BackgroundGC (State)' GdkWindow' widget_alloc.X' widget_alloc.Y' 0' 0' widget_alloc.Width' widget_alloc.Height);" is 139.
Long Statement,Mono.TextEditor.Theatrics,AnimatedWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedWidget.cs,OnExposeEvent,The length of the statement  "				GdkWindow.DrawDrawable (Style.BackgroundGC (State)' canvas' 0' 0' widget_alloc.X' widget_alloc.Y' widget_alloc.Width' widget_alloc.Height);" is 139.
Long Statement,Mono.TextEditor.Theatrics,SmartScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\SmartScrolledWindow.cs,OnSizeAllocated,The length of the statement  "			var childRectangle = new Rectangle (allocation.X + margin' allocation.Y + margin' allocation.Width - vwidth - margin*2' allocation.Height - hheight - margin*2);" is 160.
Long Statement,Mono.TextEditor.Theatrics,SmartScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\SmartScrolledWindow.cs,OnSizeAllocated,The length of the statement  "					child.Child.SizeAllocate (new Rectangle (childRectangle.RightInside ()' childRectangle.Y + vChildTopHeight' allocation.Width - vwidth' child.Child.Requisition.Height));" is 168.
Long Statement,Mono.TextEditor.Theatrics,SmartScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\SmartScrolledWindow.cs,OnSizeAllocated,The length of the statement  "				vScrollBar.SizeAllocate (new Rectangle (childRectangle.X + childRectangle.Width + margin' childRectangle.Y + vChildTopHeight' vwidth' Allocation.Height - v - vChildTopHeight - margin));" is 185.
Long Statement,Mono.TextEditor.Theatrics,SmartScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\SmartScrolledWindow.cs,OnSizeAllocated,The length of the statement  "				vAdjustment.Value = System.Math.Max (System.Math.Min (vAdjustment.Upper - vAdjustment.PageSize' vAdjustment.Value)' vAdjustment.Lower);" is 135.
Long Statement,Mono.TextEditor.Theatrics,SmartScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\SmartScrolledWindow.cs,OnSizeAllocated,The length of the statement  "				hScrollBar.SizeAllocate (new Rectangle (allocation.X' childRectangle.Y + childRectangle.Height + margin' allocation.Width - v' hheight));" is 137.
Long Statement,Mono.TextEditor.Theatrics,SmartScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\SmartScrolledWindow.cs,OnSizeAllocated,The length of the statement  "				hScrollBar.Value = System.Math.Max (System.Math.Min (hAdjustment.Upper - hAdjustment.PageSize' hScrollBar.Value)' hAdjustment.Lower);" is 133.
Long Statement,Microsoft.VisualStudio.Text.Editor.Implementation,TextEditorInitializationService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TextEditorInitializationService.cs,CreateTextView,The length of the statement  "            ITextBuffer textBuffer = textEditor.GetContent<Mono.TextEditor.ITextEditorDataProvider>().GetTextEditorData().Document.TextBuffer; " is 130.
Long Statement,Microsoft.VisualStudio.Text.Editor.Implementation,TextEditorInitializationService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TextEditorInitializationService.cs,CreateTextView,The length of the statement  "            FeatureServiceFactory.GetOrCreate(view).Disable(PredefinedEditorFeatureNames.AsyncCompletion' EmptyFeatureController.Instance); " is 127.
Long Statement,Microsoft.VisualStudio.Text.Editor.Implementation,TextEditorInitializationService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TextEditorInitializationService.cs,OnImportsSatisfied,The length of the statement  "            IList<Lazy<MDSpaceReservationManagerDefinition' IOrderable>> orderedManagers = Orderer.Order(_spaceReservationManagerDefinitions); " is 130.
Long Statement,Microsoft.VisualStudio.Text.Editor.Implementation,TextSelection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TextSelection.cs,EnsureVirtualSelectedSpans,The length of the statement  "						while ((current.Position <= end.Position.Position) ||                               //Continue while the virtual space version of current " is 137.
Long Statement,Microsoft.VisualStudio.Text.Editor.Implementation,TextSelection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TextSelection.cs,EnsureVirtualSelectedSpans,The length of the statement  "							   (end.IsInVirtualSpace && (current.Position == end.Position.Position)));      //is less than the virtual space position of the end of selection. " is 143.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetHighlightedLineAsync,The length of the statement  " 						var whitespaceSegment = new ColoredSegment (lastClassifiedOffsetEnd - start' curSpan.Span.Start - lastClassifiedOffsetEnd' scopeStack); " is 135.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetHighlightedLineAsync,The length of the statement  " 					var whitespaceSegment = new ColoredSegment (lastClassifiedOffsetEnd - start' end - lastClassifiedOffsetEnd' scopeStack); " is 120.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,ScanAndAddComment,The length of the statement  "					var highlightSegment = new ColoredSegment (lastClassifiedOffset - startOffset' commentTag.Length' commentScopeStack.Push ("markup.other")); " is 139.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetScopeStackFromClassificationType,The length of the statement  "				//https://github.com/dotnet/roslyn/blob/88d1bd1/src/EditorFeatures/Core.Wpf/Classification/ClassificationTypeFormatDefinitions.cs " is 129.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetScopeStackFromClassificationType,The length of the statement  "				//This is needed so Semantical classification for Interface or Class is greater then Identifier from Syntactical classifeer " is 123.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetScopeStackFromClassificationType,The length of the statement  "				if (scope != null && (classification.Classification == PredefinedClassificationTypeNames.Identifier || classification.Classification == PredefinedClassificationTypeNames.Keyword)) " is 179.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "                ["identifier - keyword - (TRANSIENT)"] = MakeScope(baseScopeStack' "keyword." + scope)' // required for highlighting of some context specific keywords like 'nameof' " is 164.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "				[ClassificationTypeNames.XmlDocCommentAttributeName] = MakeScope (baseScopeStack' "comment.line.documentation." + scope)' " is 121.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "				[ClassificationTypeNames.XmlDocCommentAttributeQuotes] = MakeScope (baseScopeStack' "comment.line.documentation." + scope)' " is 123.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "				[ClassificationTypeNames.XmlDocCommentAttributeValue] = MakeScope (baseScopeStack' "comment.line.documentation." + scope)' " is 122.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "				[ClassificationTypeNames.XmlDocCommentCDataSection] = MakeScope (baseScopeStack' "comment.line.documentation." + scope)' " is 120.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "                [ClassificationTypeNames.XmlDocCommentDelimiter] = MakeScope (baseScopeStack' "comment.line.documentation.delimiter." + scope)' " is 127.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "				[ClassificationTypeNames.XmlDocCommentEntityReference] = MakeScope (baseScopeStack' "comment.line.documentation." + scope)' " is 123.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "				[ClassificationTypeNames.XmlDocCommentProcessingInstruction] = MakeScope (baseScopeStack' "comment.line.documentation." + scope)' " is 129.
Long Statement,Microsoft.VisualStudio.Platform,TagBasedSyntaxHighlighting,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\TagBasedSyntaxHighlighting.cs,GetClassificationMap,The length of the statement  "				[ClassificationTypeNames.XmlLiteralAttributeQuotes] = MakeScope (baseScopeStack' "punctuation.definition.string." + scope)' " is 123.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,IntellisenseSessionStack,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\IntellisenseSessionStack.cs,RemoveSession,The length of the statement  "            // come off the stack in many ways' however.  It can be popped' or the session can be dismissed' etc.  We'll assume that" is 120.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,IntellisenseSessionStack,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\IntellisenseSessionStack.cs,RemoveSession,The length of the statement  "            // the session passed-in has already been removed from the stack.  We're just interested in removing it from our indices" is 120.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenter.cs,ComputePresentationSpan,The length of the statement  "                    _presentationSpan = IntellisenseUtilities.GetEncapsulatingSpan(_session.TextView' _presentationSpan' signature.ApplicableToSpan);" is 129.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterSurfaceElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterSurfaceElement.cs,UpdateStyle,The length of the statement  "                DataContext.SignatureWpfViewVisualElement.FontDescription = IdeServices.FontService.GetFontDescription("Editor").CopyModified(Styles.FontScale11); " is 146.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterSurfaceElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterSurfaceElement.cs,ShowTooltipInfo,The length of the statement  "                descriptionBox.PackStart(CreateCategory(TooltipInformationWindow.GetHeaderMarkup(GettextCatalog.GetString("Summary"))' dataContext.Session.SelectedSignature.Documentation)' true' true' 4); " is 188.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterSurfaceElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterSurfaceElement.cs,CreateCategory,The length of the statement  "            return TooltipInformationWindow.CreateCategory(categoryName' categoryContentMarkup' foreColor' Theme.Font.ToPangoFont()); " is 121.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpParameterBoldingClassfier,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpParameterBoldingClassfier.cs,GetClassificationSpans,The length of the statement  "            if (!_textBuffer.Properties.TryGetProperty<bool>(SignatureHelpParameterBoldingClassfier.UsePrettyPrintedContentKey' out usePrettyPrintedContent))" is 145.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSession.cs,Recalculate,The length of the statement  "                base.presenter = FindPresenter(this' _componentContext.OrderedIntellisensePresenterProviderExports' _componentContext.GuardedOperations);" is 137.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,DisplayContent,The length of the statement  "            var classifierSpans = PlatformCatalog.Instance.ClassifierAggregatorService.GetClassifier(_signatureTextBuffer)?.GetClassificationSpans(new SnapshotSpan(_signatureTextBuffer.CurrentSnapshot' 0' _signatureTextBuffer.CurrentSnapshot.Length));" is 239.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,DisplayContent,The length of the statement  "                _signatureWpfTextView.Markup = MDUtils.ClassificationsToMarkup(_signatureTextBuffer.CurrentSnapshot' classifierSpans' sigToRender.CurrentParameter);" is 148.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,DisplayContent,The length of the statement  "                _signatureWpfTextView.Markup = MonoDevelop.Ide.TypeSystem.Ambience.EscapeText(_signatureTextBuffer.CurrentSnapshot.GetText());" is 126.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,DisplayPrettyPrintedContent,The length of the statement  "            _signatureTextBuffer.Replace(new Span(0' _signatureTextBuffer.CurrentSnapshot.Length)' sigToRender.PrettyPrintedContent);" is 121.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,DisplayPrettyPrintedContent,The length of the statement  "            var classifierSpans = PlatformCatalog.Instance.ClassifierAggregatorService.GetClassifier(_signatureTextBuffer)?.GetClassificationSpans(new SnapshotSpan(_signatureTextBuffer.CurrentSnapshot' 0' _signatureTextBuffer.CurrentSnapshot.Length));" is 239.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,DisplayPrettyPrintedContent,The length of the statement  "                _signatureWpfTextView.Markup = MDUtils.ClassificationsToMarkup(_signatureTextBuffer.CurrentSnapshot' classifierSpans' sigToRender.CurrentParameter);" is 148.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,DisplayPrettyPrintedContent,The length of the statement  "                _signatureWpfTextView.Markup = MonoDevelop.Ide.TypeSystem.Ambience.EscapeText(_signatureTextBuffer.CurrentSnapshot.GetText());" is 126.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,GetSignatureHelpContentType,The length of the statement  "            string newContentTypeName = string.Format(CultureInfo.InvariantCulture' "{0} Signature Help"' baseContentType.TypeName);" is 120.
Long Statement,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,AutoSizeSignatureTextView,The length of the statement  "            //Helpers.AutoSizeTextView(_signatureWpfTextView' this.ContainerMaxWidth - this.PagerWidth - 4 /* 4px of Margin */' this.ContainerMaxHeight);" is 141.
Long Statement,Microsoft.VisualStudio.Language.Utilities,IntellisenseSourceCache,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Util\LanguageUtil\IntellisenseSourceCache.cs,GetSources,The length of the statement  "            var viewCache = textView.Properties.GetOrCreateSingletonProperty(() => new ViewSourceCache<TSource>(textView' sourceCreator));" is 126.
Long Statement,Microsoft.VisualStudio.Language.Utilities,IntellisenseSourceCache,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Util\LanguageUtil\IntellisenseSourceCache.cs,GetSources,The length of the statement  "            var viewCache = textView.Properties.GetOrCreateSingletonProperty(() => new ViewSourceCache<TSource>(textView' sourceCreator));" is 126.
Long Statement,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,ViewElementFactoryService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\ToolTipAdornment\ViewElementFactoryService.cs,FindExactMatchingFactory,The length of the statement  "            var candidate = this.FindMatchingFactory<TView>(modelType' (item) => item.Metadata.FromFullName == modelType.AssemblyQualifiedName);" is 132.
Long Statement,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,ViewElementFactoryService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\ToolTipAdornment\ViewElementFactoryService.cs,FindInheritanceMatchingFactory,The length of the statement  "                var candidate = this.FindMatchingFactory<TView>(modelType' (item) => item.Metadata.FromFullName == iface.AssemblyQualifiedName);" is 128.
Long Statement,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,ViewElementFactoryService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\ToolTipAdornment\ViewElementFactoryService.cs,FindInheritanceMatchingFactory,The length of the statement  "                var candidate = this.FindMatchingFactory<TView>(modelType' (item) => item.Metadata.FromFullName == t.AssemblyQualifiedName);" is 124.
Long Statement,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,BaseWpfToolTipPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\BaseWpfToolTipPresenter.cs,GetScreenPointFromTextXY,The length of the statement  "            return view.VisualElement.GetScreenCoordinates(new Gdk.Point((int)(x - view.ViewportLeft)' (int)(y - view.ViewportTop))).ToXwtPoint();" is 134.
Long Statement,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,SpanTrackingWpfToolTipPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\SpanTrackingWpfToolTipPresenter.cs,UpdatePopupPosition,The length of the statement  "					this.popup.Location = ((IMdTextView)textView).VisualElement.GetScreenCoordinates (new Gdk.Point ((int)(startLine.GetCharacterBounds (startPoint).Leading - this.textView.ViewportLeft)' (int)verticalOffset)).ToXwtPoint ();" is 220.
Long Statement,Microsoft.VisualStudio.Text.Utilities,MappingHelper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Util\TextDataUtil\MappingHelper.cs,MapDownToBufferNoTrack,The length of the statement  "            MapDownToFirstMatchNoTrack(sourceSpan' (ITextBuffer b) => { return b == targetBuffer; }' mappedSpans' mapByContentType);" is 120.
Long Statement,MonoDevelop.SourceEditor.Braces,BraceCompletionAdornmentService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionAdornmentService.cs,OnTextBufferChanged,The length of the statement  "				_marker = TextMarkerFactory.CreateGenericTextSegmentMarker (TextEditor' TextSegmentMarkerEffect.Underline' _marker.Color' newPosition' 1);" is 138.
Long Statement,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,Start,The length of the statement  "				_closingPoint = SubjectBuffer.CurrentSnapshot.CreateTrackingPoint (_closingPoint.GetPoint (snapshot)' PointTrackingMode.Negative);" is 130.
Long Statement,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,Start,The length of the statement  "				Debug.Assert (_closingPoint.GetPoint (snapshot).Position > 0 && (new SnapshotSpan (_closingPoint.GetPoint (snapshot).Subtract (1)' 1))" is 134.
Long Statement,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,PreBackspace,The length of the statement  "			if (caretPos.HasValue && caretPos.Value.Position > 0 && (caretPos.Value.Position - 1) == _openingPoint.GetPoint (snapshot).Position" is 131.
Long Statement,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,PreOverType,The length of the statement  "				if (caretPos.HasValue && caretPos.Value.Position < closingSnapshotPoint.Position && closingSnapshotPoint.Position > 0) {" is 120.
Long Statement,MonoDevelop.SourceEditor.Braces,BraceCompletionManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionManager.cs,PreTypeChar,The length of the statement  "				SnapshotPoint? openingPoint = _textView.Caret.Position.Point.GetInsertionPoint ((b => _sessionAggregator.IsSupportedContentType (b.ContentType' character)));" is 157.
Long Statement,MonoDevelop.SourceEditor.Braces,BraceCompletionManagerFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionManagerFactory.cs,TextViewCreated,The length of the statement  "					new BraceCompletionStack (textView' _adornmentServiceFactory' _guardedOperations)' _aggregatorFactory' _guardedOperations));" is 124.
Long Statement,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,VisualSelectionFromMoveAction,The length of the statement  "				//Console.WriteLine ("oc{0}:{1} oa{2}:{3} ol{4}:{5}"' oldCaret.Line' oldCaret.Column' oldAnchor.Line' oldAnchor.Column' oldLead.Line' oldLead.Column);" is 150.
Long Statement,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,VisualSelectionFromMoveAction,The length of the statement  "				//Console.WriteLine ("nc{0}:{1} na{2}:{3} nl{4}:{5}"' newCaret.Line' newCaret.Line' newAnchor.Line' newAnchor.Column' newLead.Line' newLead.Column);" is 148.
Long Statement,Mono.TextEditor.Highlighting,XmlReadHelper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Highlighting\XmlReadHelper.cs,ReadList,The length of the statement  "					LoggingService.LogWarning ("Unknown end node: " + reader.LocalName + " valid end nodes are: " + ConcatString (endNodes));" is 121.
Long Statement,Mono.TextEditor.Utils,CompressingTreeList<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\CompressingTreeList.cs,CopyTo,The length of the statement  "				throw new ArgumentOutOfRangeException ("arrayIndex"' arrayIndex' "Value must be between 0 and " + (array.Length - Count));" is 122.
Long Statement,Mono.TextEditor.Utils,Hunk,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,ToString,The length of the statement  "			return string.Format ("[Hunk: InsertStart={0}' RemoveStart={1}' Removed={2}' Inserted={3}]"' InsertStart' RemoveStart' Removed' Inserted);" is 138.
Long Statement,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,GetDiffString,The length of the statement  "			return GetDiffString (baseDocument.Diff (changedDocument)' baseDocument' changedDocument' baseDocument.FileName' changedDocument.FileName);" is 139.
Long Statement,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,GetDiffString,The length of the statement  "					sb.Append ("@@ -").Append (remStart).Append ("'").Append (remEnd - remStart).Append (" +").Append (insStart).Append ("'").Append (insEnd - insStart).AppendLine (" @@");" is 168.
Long Statement,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,GetDiffString,The length of the statement  "				sb.Append ("@@ -").Append (remStart).Append ("'").Append (remEnd - remStart).Append (" +").Append (insStart).Append ("'").Append (insEnd - insStart).AppendLine (" @@");" is 168.
Long Statement,Mono.TextEditor.Utils,HtmlWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\HtmlWriter.cs,GenerateHtml,The length of the statement  "			return GenerateHtml (ClipboardColoredText.GetChunks (data' new TextSegment (0' data.Length)).WaitAndGetResult (default (System.Threading.CancellationToken))' data.EditorTheme' data.Options);" is 190.
Long Statement,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,The length of the statement  "			if (parent.Color == RedBlackColor.Black && sibling.Color == RedBlackColor.Black && GetColorSafe (sibling.Left) == RedBlackColor.Black && GetColorSafe (sibling.Right) == RedBlackColor.Black) {" is 191.
Long Statement,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,The length of the statement  "			if (parent.Color == RedBlackColor.Red && sibling.Color == RedBlackColor.Black && GetColorSafe (sibling.Left) == RedBlackColor.Black && GetColorSafe (sibling.Right) == RedBlackColor.Black) {" is 189.
Long Statement,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,The length of the statement  "			if (node == parent.Left && sibling.Color == RedBlackColor.Black && GetColorSafe (sibling.Left) == RedBlackColor.Red && GetColorSafe (sibling.Right) == RedBlackColor.Black) {" is 173.
Long Statement,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,The length of the statement  "			} else if (node == parent.Right && sibling.Color == RedBlackColor.Black && GetColorSafe (sibling.Right) == RedBlackColor.Red && GetColorSafe (sibling.Left) == RedBlackColor.Black) {" is 181.
Long Statement,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,AppendNode,The length of the statement  "			builder.Append (GetIndent (indent)).Append ("Node (").Append ((node.Color == RedBlackColor.Red ? "r" : "b")).Append ("):").AppendLine (node.ToString ());" is 153.
Long Statement,Mono.TextEditor.Utils,Settings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\FileSettingsStore.cs,ToString,The length of the statement  "				return string.Format ("[Settings: CaretOffset={0}' vAdjustment={1}' hAdjustment={2}]"' CaretOffset' vAdjustment' hAdjustment);" is 126.
Long Statement,Mono.TextEditor.Utils,ImmutableText,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\ImmutableText.cs,Concat,The length of the statement  "			return that.Length == 0 ? this : Length == 0 ? that : new ImmutableText (ConcatNodes (EnsureChunked ().root' that.EnsureChunked ().root)' encoding);" is 148.
Long Statement,Mono.TextEditor.Utils,ImmutableText,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\ImmutableText.cs,VerifyRange,The length of the statement  "				throw new ArgumentOutOfRangeException (nameof (startIndex)' startIndex' "0 <= startIndex <= " + Length.ToString (CultureInfo.InvariantCulture));" is 144.
Long Statement,Mono.TextEditor.Utils,ImmutableText,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\ImmutableText.cs,VerifyRange,The length of the statement  "				throw new ArgumentOutOfRangeException (nameof (length)' length' "0 <= length' startIndex(" + startIndex + ")+length(" + length + ") <= " + Length.ToString (CultureInfo.InvariantCulture));" is 187.
Long Statement,Mono.TextEditor.Utils,ImmutableText,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\ImmutableText.cs,VerifyArrayWithRange,The length of the statement  "				throw new ArgumentOutOfRangeException (nameof (arrayIndex)' arrayIndex' "0 <= arrayIndex <= " + array.Length.ToString (CultureInfo.InvariantCulture));" is 150.
Long Statement,Mono.TextEditor.Utils,ImmutableText,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\ImmutableText.cs,VerifyArrayWithRange,The length of the statement  "				throw new ArgumentOutOfRangeException (nameof (count)' count' "0 <= length' arrayIndex(" + arrayIndex + ")+count <= " + array.Length.ToString (CultureInfo.InvariantCulture));" is 174.
Long Statement,Mono.TextEditor.Utils,RtfWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RtfWriter.cs,GenerateRtf,The length of the statement  "			return GenerateRtf (ClipboardColoredText.GetChunks (data' new TextSegment (0' data.Length)).WaitAndGetResult (default (System.Threading.CancellationToken))' data.ColorStyle' data.Options);" is 188.
Long Statement,Mono.TextEditor.Utils,RtfWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RtfWriter.cs,GenerateRtf,The length of the statement  "				double fontSize = Double.Parse (fontName.Substring (fontName.LastIndexOf (' ')  + 1)' System.Globalization.CultureInfo.InvariantCulture) * 2;" is 141.
Long Statement,Mono.TextEditor.Utils,TextBreaker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\TextBreaker.cs,BreakLinesIntoWords,The length of the statement  "				throw new ArgumentOutOfRangeException (nameof (startLine)' "startLine + lineCount <= " + (document.LineCount + 1) + "' was " + startLine);" is 138.
Complex Conditional,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,HandleMouseMove,The conditional expression  "(pt.X >= 0.0) && (pt.X < this.ViewportWidth) &&  						(pt.Y >= 0.0) && (pt.Y < this.ViewportHeight)"  is complex.
Complex Conditional,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,HandleTextKey,The conditional expression  "(key == Gdk.Key.space || key == Gdk.Key.parenleft || key == Gdk.Key.parenright) && (mod & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask"  is complex.
Complex Conditional,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,ScrollTo,The conditional expression  "isDisposed || p.Line < 0 || p.Line > Document.LineCount || inCaretScroll"  is complex.
Complex Conditional,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,RangeToRectangle,The conditional expression  "start.Column < 0 || start.Line < 0 || end.Column < 0 || end.Line < 0"  is complex.
Complex Conditional,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,RangeToRectangle,The conditional expression  "startPt.Y != endPt.Y || startPt.X < 0 || startPt.Y < 0 || width < 0"  is complex.
Complex Conditional,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,ShowTooltip,The conditional expression  "xloc >= wx && xloc < tipX + ww && yloc >= tipY && yloc < tipY + 20 + wh"  is complex.
Complex Conditional,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,RegionPulseAnimation,The conditional expression  "region.X < 0 || region.Y < 0 || region.Width < 0 || region.Height < 0"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,SetVisibleCaretPosition,The conditional expression  "x == caretX && y == caretY && this.nonPreeditX == nonPreeditX && this.nonPreeditY == nonPreeditY"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The conditional expression  "!this.textEditor.IsInDrag && !(this.caretX >= 0 && (!this.textEditor.IsSomethingSelected || this.textEditor.SelectionRange.Length == 0))"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The conditional expression  "win == null || Settings.Default.CursorBlink && !Caret.IsVisible || !caretBlink"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,HandleSelection,The conditional expression  "textEditor.GetTextEditorData ().ShowRuler && selectionStartColumn < logicalRulerColumn && logicalRulerColumn < selectionEndColumn && startOffset < rulerOffset && rulerOffset < endOffset"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The conditional expression  "!isSelectionDrawn && (layout.StartSet || selectionStartOffset == offset + length) && BackgroundRenderer == null"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The conditional expression  "lineNumber == Caret.Line && 						    textEditor.Options.ShowWhitespaces == ShowWhitespaces.Selection && 						    textEditor.IsSomethingSelected && 						    (selectionStartOffset < offset || selectionStartOffset == selectionEndOffset) && 						    BackgroundRenderer == null"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The conditional expression  "(!textEditor.IsSomethingSelected || (selectionStartOffset >= offset && selectionStartOffset != selectionEndOffset)) && (HighlightCaretLine || textEditor.Options.HighlightCaretLine) && Caret.Line == lineNumber"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,ScanWord,The conditional expression  "char.IsWhiteSpace (first) && !char.IsWhiteSpace (ch) 				    || WordFindStrategy.IsNoIdentifierPart (first) && !WordFindStrategy.IsNoIdentifierPart (ch) 				    || (char.IsLetterOrDigit (first) || first == '_') && !(char.IsLetterOrDigit (ch) || ch == '_')"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The conditional expression  "!(HighlightCaretLine || textEditor.GetTextEditorData ().HighlightCaretLine) || Caret.Line != lineNr && Caret.Line != startLineNr"  is complex.
Complex Conditional,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The conditional expression  "textEditor.MainSelection.Contains (lineNr' 2 + line.Length) && 					    !(lineNr == Caret.Line && Caret.Column > 1 && textEditor.MainSelection.Anchor.Line < textEditor.MainSelection.Lead.Line) && 					    textEditor.MainSelection.Anchor.Line != textEditor.MainSelection.Lead.Line"  is complex.
Complex Conditional,Mono.TextEditor,LayoutDescriptor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Equals,The conditional expression  "selStart != this.SelectionStart || selEnd != this.SelectionEnd || Length != length || MarkerLength != doc.GetMarkers (line).Count ()"  is complex.
Complex Conditional,Mono.TextEditor,LineStateFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,The conditional expression  "(prevState == TextDocument.LineState.Unchanged && prevState != state || 						 nextState == TextDocument.LineState.Unchanged && nextState != state)"  is complex.
Complex Conditional,Mono.TextEditor,EmacsWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\EmacsWordFindStrategy.cs,FindNextWordOffset,The conditional expression  "current == CC.Digit && (previous != CC.Digit || (result-1 == offset && !Char.IsDigit (doc.GetCharAt (result-1))))"  is complex.
Complex Conditional,Mono.TextEditor,EmacsWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\EmacsWordFindStrategy.cs,FindNextWordOffset,The conditional expression  "current == CC.LowercaseLetter && previous == CC.UppercaseLetter && result - 2 > 0  					           && SW.GetCharacterClass (doc.GetCharAt (result - 2)' subword' includeUnderscore) != CC.LowercaseLetter"  is complex.
Complex Conditional,Mono.TextEditor,EmacsWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\EmacsWordFindStrategy.cs,FindPrevWordOffset,The conditional expression  "current == CC.LowercaseLetter && previous == CC.UppercaseLetter && result + 2 < doc.Length  					           && SW.GetCharacterClass (doc.GetCharAt (result + 2)' subword' includeUnderscore) != CC.LowercaseLetter"  is complex.
Complex Conditional,Mono.TextEditor,WordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\IWordFindStrategy.cs,ScanWord,The conditional expression  "char.IsWhiteSpace (first) && !char.IsWhiteSpace (ch) 				    || IsNoIdentifierPart (first) && !IsNoIdentifierPart (ch) 				    || (char.IsLetterOrDigit (first) || first == '_') && !(char.IsLetterOrDigit (ch) || ch == '_')"  is complex.
Complex Conditional,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,Backspace,The conditional expression  "data.HasIndentationTracker && (data.IndentationTracker.SupportedFeatures & IndentationTrackerFeatures.SmartBackspace) != 0 && (data.Options.IndentStyle == IndentStyle.Smart || data.Options.IndentStyle == IndentStyle.Virtual) && data.Options.SmartBackspace"  is complex.
Complex Conditional,Mono.TextEditor,FoldActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\FoldActions.cs,GetOutermostClosedFold,The conditional expression  "fold.IsCollapsed && data.LogicalToVisualLine (data.OffsetToLineNumber (fold.Offset)) == lineNumber &&  					    fold.Offset <= startOffset && fold.EndOffset >= endOffset"  is complex.
Complex Conditional,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The conditional expression  "(BaseOffset + segment.Offset <= metrics.TextStartOffset && metrics.TextStartOffset < BaseOffset + segment.EndOffset) || (metrics.TextStartOffset <= BaseOffset + segment.Offset && BaseOffset + segment.Offset < metrics.TextEndOffset)"  is complex.
Complex Conditional,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,GetMarkupAsync,The conditional expression  "setColor || setBold || setItalic || setUnderline"  is complex.
Complex Conditional,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,FixVirtualIndentation,The conditional expression  "!HasIndentationTracker || Options.IndentStyle != IndentStyle.Virtual || LockFixIndentation || (IndentationTracker.SupportedFeatures & IndentationTrackerFeatures.SkipFixVirtualIndentation) != 0"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,HandleTextReplaced,The conditional expression  "line == null || line.Contains (change.Offset) || line.Contains (change.Offset + change.InsertionLength) || change.Offset < line.Offset && line.Offset < change.Offset + change.InsertionLength"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,HandleTaskServiceJumpedToTask,The conditional expression  "task == null || doc == null || task.FileName != doc.FileName || TextEditor == null"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,UpdateExecutionLocation,The conditional expression  "location.Line > 0 && location.Column > 0 && location.EndLine > 0 && location.EndColumn > 0"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CheckLocationIsInFile,The conditional expression  "!string.IsNullOrEmpty (ContentName) && location != null && !string.IsNullOrEmpty (location.FileName) 				&& ((FilePath)location.FileName).FullPath == ((FilePath)ContentName).FullPath"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetText,The conditional expression  "startPosition < 0 || endPosition < 0 || startPosition > endPosition || startPosition >= doc.Length"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,AddMarker,The conditional expression  "document == null || region.BeginLine <= 0 || region.EndLine <= 0 || region.BeginLine > document.LineCount || region.EndLine > document.LineCount"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,LinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\LinkMarker.cs,MouseReleased,The conditional expression  "(Platform.IsMac && (args.ModifierState & Gdk.ModifierType.Mod2Mask) == Gdk.ModifierType.Mod2Mask) || 			    (!Platform.IsMac && (args.ModifierState & Gdk.ModifierType.ControlMask) == Gdk.ModifierType.ControlMask)"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,DefaultAutoInsertBracketHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DefaultAutoInsertBracketHandler.cs,GetTextWithoutCommentsAndStrings,The conditional expression  "!(isInString || isInChar || isInLineComment || isInBlockComment)"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,InnerShouldClearToolTipOnMouseMove,The conditional expression  "(mousePt.X >= 0.0) && (mousePt.X < _textView.ViewportWidth) &&                 (mousePt.Y >= 0.0) && (mousePt.Y < _textView.ViewportHeight)"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,SearchNextTask,The conditional expression  "mode == HoverMode.NextMessage || 					mode == HoverMode.NextWarning && task.Severity == DiagnosticSeverity.Warning || 					mode == HoverMode.NextError && task.Severity == DiagnosticSeverity.Error"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,SearchPrevTask,The conditional expression  "mode == HoverMode.NextMessage || 					mode == HoverMode.NextWarning && task.Severity == DiagnosticSeverity.Warning || 					mode == HoverMode.NextError && task.Severity == DiagnosticSeverity.Error"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,CachedDraw,The conditional expression  "(surface.Data == null && parameters != null) || (surface.Data != null && !surface.Data.Equals (parameters))"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.QuickTasks,IndicatorDrawingState,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IndicatorDrawingCache.cs,Equals,The conditional expression  "Height != other.Height || Width != other.Width || 				    Severity != other.Severity || 				    MainSelection != other.MainSelection || 				    SearchResultIndicators.Count != other.SearchResultIndicators.Count || 				    UsageRectangles.Count != other.UsageRectangles.Count || 				    TaskRectangles.Count != other.TaskRectangles.Count"  is complex.
Complex Conditional,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,MouseTrackingWpfToolTipPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\MouseTrackingWpfToolTipPresenter.cs,SubscribeToContainerUnderMouse,The conditional expression  "!this.isDismissed  				&& (this.mouseContainer == null)  				&& (((IMdTextView)textView).VisualElement.IsMouseOver () || (popup.IsMouseOver () && popup.Content != null))"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.Braces,BraceCompletionDefaultSession,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionDefaultSession.cs,PreBackspace,The conditional expression  "caretPos.HasValue && caretPos.Value.Position > 0 && (caretPos.Value.Position - 1) == _openingPoint.GetPoint (snapshot).Position 				&& !HasForwardTyping"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.Braces,BraceCompletionManager,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionManager.cs,PreTypeChar,The conditional expression  "_postSession == null && !handled && Enabled && !hasSelection 			    && _sessionAggregator.OpeningBraces.IndexOf (character) > -1 && !HasForwardTypingOnLine"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.Braces,BraceCompletionStack,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionStack.cs,Contains,The conditional expression  "session.OpeningPoint != null && session.ClosingPoint != null 					&& session.OpeningPoint.TextBuffer == session.ClosingPoint.TextBuffer 					&& point.Snapshot.TextBuffer == session.OpeningPoint.TextBuffer"  is complex.
Complex Conditional,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,ParseForQuote,The conditional expression  "text[i] == charToFind && 					(i < 1 || text[i-1] != '\\') && 					(i < 2 || text[i-2] != '\\')"  is complex.
Complex Conditional,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,VisualSelectionFromMoveAction,The conditional expression  "oldAnchor < oldLead && newAnchor > newLead && ( 							(newLead.Line == newAnchor.Line && oldLead.Line == oldAnchor.Line + 1) || 						    (newLead.Line == newAnchor.Line - 1 && oldLead.Line == oldAnchor.Line))"  is complex.
Complex Conditional,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,VisualSelectionFromMoveAction,The conditional expression  "oldAnchor > oldLead && newAnchor < newLead && ( 							(newLead.Line == newAnchor.Line && oldLead.Line == oldAnchor.Line - 1) || 							(newLead.Line == newAnchor.Line + 1 && oldLead.Line == oldAnchor.Line))"  is complex.
Complex Conditional,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,CreateDiffs,The conditional expression  "lineA < baseData.Length && !baseData.Modified[lineA] && lineB < changedData 		.Length && !changedData 		.Modified[lineB]"  is complex.
Complex Conditional,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,The conditional expression  "parent.Color == RedBlackColor.Black && sibling.Color == RedBlackColor.Black && GetColorSafe (sibling.Left) == RedBlackColor.Black && GetColorSafe (sibling.Right) == RedBlackColor.Black"  is complex.
Complex Conditional,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,The conditional expression  "parent.Color == RedBlackColor.Red && sibling.Color == RedBlackColor.Black && GetColorSafe (sibling.Left) == RedBlackColor.Black && GetColorSafe (sibling.Right) == RedBlackColor.Black"  is complex.
Complex Conditional,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,The conditional expression  "node == parent.Left && sibling.Color == RedBlackColor.Black && GetColorSafe (sibling.Left) == RedBlackColor.Red && GetColorSafe (sibling.Right) == RedBlackColor.Black"  is complex.
Complex Conditional,Mono.TextEditor.Utils,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RedBlackTree.cs,DeleteOneChild,The conditional expression  "node == parent.Right && sibling.Color == RedBlackColor.Black && GetColorSafe (sibling.Right) == RedBlackColor.Red && GetColorSafe (sibling.Left) == RedBlackColor.Black"  is complex.
Virtual Method Call from Constructor,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,MonoTextEditor,The constructor "MonoTextEditor" calls a virtual method "OptionsChanged".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The constructor "SearchAndReplaceWidget" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The constructor "GotoLineNumberWidget" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor,PrintSettingsWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\PrintSettingsWidget.cs,PrintSettingsWidget,The constructor "PrintSettingsWidget" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,BehaviorPanel,The constructor "BehaviorPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,GeneralOptionsPanel,The constructor "GeneralOptionsPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,HighlightingPanel,The constructor "HighlightingPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,MarkerPanel,The constructor "MarkerPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,NewColorShemeDialog,The constructor "NewColorShemeDialog" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,CompletionOptionsPanel,The constructor "CompletionOptionsPanel" calls a virtual method "Build".
Virtual Method Call from Constructor,MonoDevelop.SourceEditor.OptionPanels,CompletionAppearancePanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionAppearancePanel.cs,CompletionAppearancePanel,The constructor "CompletionAppearancePanel" calls a virtual method "Build".
Empty Catch Block,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,TooltipTimer,The method has an empty catch block.
Empty Catch Block,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetCachedChunks,The method has an empty catch block.
Empty Catch Block,Mono.TextEditor,DiffTracker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\DiffTracker.cs,GetLineState,The method has an empty catch block.
Empty Catch Block,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,GotoResult,The method has an empty catch block.
Empty Catch Block,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLine,The method has an empty catch block.
Empty Catch Block,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,ShowStyles,The method has an empty catch block.
Empty Catch Block,Mono.TextEditor.Utils,RtfWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RtfWriter.cs,GenerateRtf,The method has an empty catch block.
Magic Number,Mono.TextEditor,MdTextViewLineCollection,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetTextViewLineContainingBufferPosition,The following statement contains a magic number: int middle = (low + high) / 2;
Magic Number,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetTextElementSpan,The following statement contains a magic number: return new SnapshotSpan (bufferPosition.Snapshot' bufferPosition.Position' 2);
Magic Number,Mono.TextEditor,MdTextViewLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MdTextViewLineCollection.MdTextViewLine.cs,GetTextElementSpan,The following statement contains a magic number: return new SnapshotSpan (bufferPosition.Snapshot' bufferPosition.Position - 1' 2);
Magic Number,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,HandleMouseMove,The following statement contains a magic number: _mouseHoverTimer.Interval = Math.Max (50' delay);
Magic Number,Mono.TextEditor,MouseHoverEventData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.ITextView.MouseHover.cs,GetMouseHoverAttribute,The following statement contains a magic number: return new MouseHoverAttribute (150);
Magic Number,Mono.TextEditor,ActionMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\ActionMargin.cs,ActionMargin,The following statement contains a magic number: marginWidth = 20;
Magic Number,Mono.TextEditor,CodeSegmentEditorWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodeSegmentEditorWindow.cs,CodeSegmentEditorWindow,The following statement contains a magic number: options.Zoom = 0.8;
Magic Number,Mono.TextEditor,DashedLineMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\DashedLineMargin.cs,Draw,The following statement contains a magic number: cr.MoveTo (x + 0.5' y);
Magic Number,Mono.TextEditor,DashedLineMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\DashedLineMargin.cs,Draw,The following statement contains a magic number: cr.LineTo (x + 0.5' y + lineHeight);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,FoldingScreenbackgroundRenderer,The following statement contains a magic number: timeout = GLib.Timeout.Add (30' delegate { 				editor.QueueDraw (); 				var cont = (DateTime.Now - startTime).TotalMilliseconds < animationLength; 				if (!cont) 					timeout = 0; 				return cont; 			});
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,GetColor,The following statement contains a magic number: hslColor.L = hslColor.L * 0.81 + hslColor.L * 0.25 * (colorCount - colorPosition) / colorCount;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,GetColor,The following statement contains a magic number: hslColor.L = hslColor.L * 0.81 + hslColor.L * 0.25 * (colorCount - colorPosition) / colorCount;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,GetColor,The following statement contains a magic number: brightness < 0.5
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: int colorCount = foldSegments.Count + 2;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: const int xPadding = 4;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: const int yPadding = 2;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: const int rightMarginPadding = 16;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: rectangleWidth = textViewMargin.XOffset + textViewMargin.TextStartPosition + curWidth - xPos + xPadding * 2;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: rectangles[i] = new Cairo.Rectangle (xPos' y - yPadding' rectangleWidth' rectangleHeight + yPadding * 2);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: var alpha = 0.1;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: curPadSize = (int)(3 + System.Math.Sin (System.Math.PI * animationState) * 3);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: curPadSize = (int)(3 + System.Math.Sin (System.Math.PI * animationState) * 3);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: alpha = 0.1 + (1.0 - animationState) / 5;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: alpha = 0.1 + (1.0 - animationState) / 5;
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: clampedRect = ClampRect (rect.X - editor.HAdjustment.Value - curPadSize ' rect.Y - editor.VAdjustment.Value - curPadSize' editor.LineHeight / 2' rect.Width + curPadSize * 2' rect.Height + curPadSize * 2' area);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: clampedRect = ClampRect (rect.X - editor.HAdjustment.Value - curPadSize ' rect.Y - editor.VAdjustment.Value - curPadSize' editor.LineHeight / 2' rect.Width + curPadSize * 2' rect.Height + curPadSize * 2' area);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: clampedRect = ClampRect (rect.X - editor.HAdjustment.Value - curPadSize ' rect.Y - editor.VAdjustment.Value - curPadSize' editor.LineHeight / 2' rect.Width + curPadSize * 2' rect.Height + curPadSize * 2' area);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: DrawRoundRectangle (cr' true' true' clampedRect.X' clampedRect.Y' editor.LineHeight / 2' clampedRect.Width' clampedRect.Height);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: curPadSize = (int)(2 + System.Math.Sin (System.Math.PI * animationState) * 2);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: curPadSize = (int)(2 + System.Math.Sin (System.Math.PI * animationState) * 2);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: clampedRect = ClampRect (rect.X - editor.HAdjustment.Value - curPadSize' rect.Y - editor.VAdjustment.Value - curPadSize' editor.LineHeight / 2' rect.Width + curPadSize * 2' rect.Height + curPadSize * 2' area);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: clampedRect = ClampRect (rect.X - editor.HAdjustment.Value - curPadSize' rect.Y - editor.VAdjustment.Value - curPadSize' editor.LineHeight / 2' rect.Width + curPadSize * 2' rect.Height + curPadSize * 2' area);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: clampedRect = ClampRect (rect.X - editor.HAdjustment.Value - curPadSize' rect.Y - editor.VAdjustment.Value - curPadSize' editor.LineHeight / 2' rect.Width + curPadSize * 2' rect.Height + curPadSize * 2' area);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: DrawRoundRectangle (cr' true' true' clampedRect.X' clampedRect.Y' editor.LineHeight / 2' clampedRect.Width' clampedRect.Height);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: clampedRect = ClampRect (rect.X - editor.HAdjustment.Value' rect.Y - editor.VAdjustment.Value' editor.LineHeight / 2' rect.Width' rect.Height' area);
Magic Number,Mono.TextEditor,FoldingScreenbackgroundRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldingScreenbackgroundRenderer.cs,Draw,The following statement contains a magic number: DrawRoundRectangle (cr' true' true'  clampedRect.X' clampedRect.Y' editor.LineHeight / 2' clampedRect.Width' clampedRect.Height);
Magic Number,Mono.TextEditor,FoldMarkerMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,UpdateAccessibility,The following statement contains a magic number: updateAccessibilityId = GLib.Timeout.Add (5000' UpdateAccessibilityTimer);
Magic Number,Mono.TextEditor,FoldMarkerMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,MouseHover,The following statement contains a magic number: timerId = GLib.Timeout.Add (150' SetBackgroundRenderer);
Magic Number,Mono.TextEditor,FoldMarkerMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,OptionsChanged,The following statement contains a magic number: marginWidth = editor.LineHeight  * 3 / 4;
Magic Number,Mono.TextEditor,FoldMarkerMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,OptionsChanged,The following statement contains a magic number: marginWidth = editor.LineHeight  * 3 / 4;
Magic Number,Mono.TextEditor,FoldingAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,UpdateAccessibility,The following statement contains a magic number: var halfParentHeight = margin.RectInParent.Height / 2;
Magic Number,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,CalculateWidth,The following statement contains a magic number: this.width += 4;
Magic Number,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,CalculateWidth,The following statement contains a magic number: this.width += 2;
Magic Number,Mono.TextEditor,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\GutterMargin.cs,DrawForeground,The following statement contains a magic number: cr.Translate (x + (int)Width + (editor.Options.ShowFoldMargin ? 0 : -2)' y + (isSpaceAbove ? lineHeight - editor.LineHeight : 0));
Magic Number,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,OptionsChanged,The following statement contains a magic number: focusedBackgroundColor = backgroundColor.AddLight (-0.02);
Magic Number,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,OptionsChanged,The following statement contains a magic number: focusedMarkerColor = backgroundColor.AddLight (-0.3);
Magic Number,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,Draw,The following statement contains a magic number: cr.MoveTo (x + Width - 0.5' y);
Magic Number,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,Draw,The following statement contains a magic number: cr.LineTo (x + Width - 0.5' y + lineHeight);
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,CreateInputMethodMenuItem,The following statement contains a magic number: GtkWorkarounds.GtkMinorVersion >= 16
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,VAdjustmentValueChanged,The following statement contains a magic number: System.Math.Abs (delta) >= Allocation.Height - this.LineHeight * 2 || this.TextViewMargin.InSelectionDrag
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnDragDataReceived,The following statement contains a magic number: selection_data.Length > 0 && selection_data.Format == 8
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,UpdateScrollWindowTimer,The following statement contains a magic number: scrollWindowTimer = GLib.Timeout.Add (50' delegate { 					if (HasFocus) { 						FireMotionEvent (scrollWindowTimer_x' scrollWindowTimer_y' scrollWindowTimer_mod); 					} 					return true; 				});
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnScrollEvent,The following statement contains a magic number: hasZoomModifier && lastScrollTime != 0 && (evnt.Time - lastScrollTime) < 100
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnScrollEvent,The following statement contains a magic number: HAdjustment.Value = System.Math.Min (HAdjustment.Upper - HAdjustment.PageSize' HAdjustment.Value + HAdjustment.StepIncrement * 3);
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,SetAdjustments,The following statement contains a magic number: maxY += allocation.Height / 2 - LineHeight;
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,ExposeEventInternal,The following statement contains a magic number: textViewMargin.ResetCaretBlink (200);
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,ShowTooltip,The following statement contains a magic number: wx = tipX - ww/2;
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,ShowTooltip,The following statement contains a magic number: xloc >= wx && xloc < tipX + ww && yloc >= tipY && yloc < tipY + 20 + wh
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,TooltipTimer,The following statement contains a magic number: remainingMs > 50
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,DelayedHideTooltip,The following statement contains a magic number: tipHideTimeoutId = GLib.Timeout.Add (300' delegate { 				HideTooltip (reason); 				tipHideTimeoutId = 0; 				return false; 			});
Magic Number,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,StartAnimation,The following statement contains a magic number: return StartAnimation (drawer' 300);
Magic Number,Mono.TextEditor,CenterToWrapper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Run,The following statement contains a magic number: caretPosition -= editor.TextArea.textEditorData.VAdjustment.PageSize / 3;
Magic Number,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: x -= editor.TextViewMargin.charWidth / 2;
Magic Number,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: double extend = Percent * 5;
Magic Number,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: double width = editor.TextViewMargin.charWidth + 2 * extend * editor.Options.Zoom / 2;
Magic Number,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: double width = editor.TextViewMargin.charWidth + 2 * extend * editor.Options.Zoom / 2;
Magic Number,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true'  				                                                    x - extend * editor.Options.Zoom / 2'  				                                                    y - extend * editor.Options.Zoom'  				                                                    System.Math.Min (editor.TextViewMargin.charWidth / 2' width)'  				                                                    width' 				                                                    editor.LineHeight + 2 * extend * editor.Options.Zoom);
Magic Number,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true'  				                                                    x - extend * editor.Options.Zoom / 2'  				                                                    y - extend * editor.Options.Zoom'  				                                                    System.Math.Min (editor.TextViewMargin.charWidth / 2' width)'  				                                                    width' 				                                                    editor.LineHeight + 2 * extend * editor.Options.Zoom);
Magic Number,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true'  				                                                    x - extend * editor.Options.Zoom / 2'  				                                                    y - extend * editor.Options.Zoom'  				                                                    System.Math.Min (editor.TextViewMargin.charWidth / 2' width)'  				                                                    width' 				                                                    editor.LineHeight + 2 * extend * editor.Options.Zoom);
Magic Number,Mono.TextEditor,CaretPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: color.A = 0.8;
Magic Number,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: int animationPosition = (int)(Percent * 100);
Magic Number,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: int width = (int)(region.Width + 2 * animationPosition * editor.Options.Zoom / 2);
Magic Number,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: int width = (int)(region.Width + 2 * animationPosition * editor.Options.Zoom / 2);
Magic Number,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true'  				                                                    (int)(x - animationPosition * editor.Options.Zoom / 2)'  				                                                    (int)(y - animationPosition * editor.Options.Zoom)'  				                                                    System.Math.Min (editor.TextViewMargin.charWidth / 2' width)'  				                                                    width' 				                                                    (int)(region.Height + 2 * animationPosition * editor.Options.Zoom));
Magic Number,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true'  				                                                    (int)(x - animationPosition * editor.Options.Zoom / 2)'  				                                                    (int)(y - animationPosition * editor.Options.Zoom)'  				                                                    System.Math.Min (editor.TextViewMargin.charWidth / 2' width)'  				                                                    width' 				                                                    (int)(region.Height + 2 * animationPosition * editor.Options.Zoom));
Magic Number,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true'  				                                                    (int)(x - animationPosition * editor.Options.Zoom / 2)'  				                                                    (int)(y - animationPosition * editor.Options.Zoom)'  				                                                    System.Math.Min (editor.TextViewMargin.charWidth / 2' width)'  				                                                    width' 				                                                    (int)(region.Height + 2 * animationPosition * editor.Options.Zoom));
Magic Number,Mono.TextEditor,RegionPulseAnimation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: color.A = 0.8;
Magic Number,Mono.TextEditor,SearchHighlightPopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Popup,The following statement contains a magic number: ExpandHeight = (uint)Editor.LineHeight / 2;
Magic Number,Mono.TextEditor,SearchHighlightPopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Popup,The following statement contains a magic number: Duration = 150;
Magic Number,Mono.TextEditor,SearchHighlightPopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: double corner = System.Math.Min (4' width) * Editor.Options.Zoom;
Magic Number,Mono.TextEditor,SearchHighlightPopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: var color = TextViewMargin.DimColor (searchResultMainColor' 0.3);
Magic Number,Mono.TextEditor,SearchHighlightPopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: color.A = 0.5 * opacity * opacity;
Magic Number,Mono.TextEditor,SearchHighlightPopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: color = ColorLerp ( 						TextViewMargin.DimColor (searchResultMainColor' 1.1)' 						searchResultMainColor' 						1 - opacity);
Magic Number,Mono.TextEditor,SearchHighlightPopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,Draw,The following statement contains a magic number: color = ColorLerp ( 						TextViewMargin.DimColor (searchResultMainColor' 0.9)' 						searchResultMainColor' 						1 - opacity);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,HandleVAdjustmentValueChanged,The following statement contains a magic number: int startLine = YToLine (textEditor.GetTextEditorData ().VAdjustment.Value) - 5;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,HandleVAdjustmentValueChanged,The following statement contains a magic number: int endLine = (int)(startLine + textEditor.GetTextEditorData ().VAdjustment.PageSize / LineHeight) + 10;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InvertCursorPixbuf,The following statement contains a magic number: r + g + b < 750
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetEolMarkerIndex,The following statement contains a magic number: switch (ch) { 			case UnicodeNewline.Unknown: 				return 0; 			case UnicodeNewline.LF: 				return 1; 			case UnicodeNewline.CRLF: 				return 2; 			case UnicodeNewline.CR: 				return 3; 			case UnicodeNewline.NEL: 				return 4; 			//case UnicodeNewline.VT: 			//	return 5; 			//case UnicodeNewline.FF: 			//	return 6; 			case UnicodeNewline.LS: 				return 5; 			case UnicodeNewline.PS: 				return 6; 			}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetEolMarkerIndex,The following statement contains a magic number: switch (ch) { 			case UnicodeNewline.Unknown: 				return 0; 			case UnicodeNewline.LF: 				return 1; 			case UnicodeNewline.CRLF: 				return 2; 			case UnicodeNewline.CR: 				return 3; 			case UnicodeNewline.NEL: 				return 4; 			//case UnicodeNewline.VT: 			//	return 5; 			//case UnicodeNewline.FF: 			//	return 6; 			case UnicodeNewline.LS: 				return 5; 			case UnicodeNewline.PS: 				return 6; 			}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetEolMarkerIndex,The following statement contains a magic number: switch (ch) { 			case UnicodeNewline.Unknown: 				return 0; 			case UnicodeNewline.LF: 				return 1; 			case UnicodeNewline.CRLF: 				return 2; 			case UnicodeNewline.CR: 				return 3; 			case UnicodeNewline.NEL: 				return 4; 			//case UnicodeNewline.VT: 			//	return 5; 			//case UnicodeNewline.FF: 			//	return 6; 			case UnicodeNewline.LS: 				return 5; 			case UnicodeNewline.PS: 				return 6; 			}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetEolMarkerIndex,The following statement contains a magic number: switch (ch) { 			case UnicodeNewline.Unknown: 				return 0; 			case UnicodeNewline.LF: 				return 1; 			case UnicodeNewline.CRLF: 				return 2; 			case UnicodeNewline.CR: 				return 3; 			case UnicodeNewline.NEL: 				return 4; 			//case UnicodeNewline.VT: 			//	return 5; 			//case UnicodeNewline.FF: 			//	return 6; 			case UnicodeNewline.LS: 				return 5; 			case UnicodeNewline.PS: 				return 6; 			}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetEolMarkerIndex,The following statement contains a magic number: switch (ch) { 			case UnicodeNewline.Unknown: 				return 0; 			case UnicodeNewline.LF: 				return 1; 			case UnicodeNewline.CRLF: 				return 2; 			case UnicodeNewline.CR: 				return 3; 			case UnicodeNewline.NEL: 				return 4; 			//case UnicodeNewline.VT: 			//	return 5; 			//case UnicodeNewline.FF: 			//	return 6; 			case UnicodeNewline.LS: 				return 5; 			case UnicodeNewline.PS: 				return 6; 			}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,OptionsChanged,The following statement contains a magic number: markerLayoutFont.Size = markerLayoutFont.Size * 8 / 10;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,OptionsChanged,The following statement contains a magic number: markerLayoutFont.Size = markerLayoutFont.Size * 8 / 10;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,OptionsChanged,The following statement contains a magic number: font.Size = font.Size * 3 / 4;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,OptionsChanged,The following statement contains a magic number: font.Size = font.Size * 3 / 4;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,UpdateCaret,The following statement contains a magic number: textEditor.TextArea.QueueDrawArea (caretRectangle.X - (int)textEditor.Options.Zoom' 			                          (int)(caretRectangle.Y + (textEditor.VAdjustment.Value - caretVAdjustmentValue))' 			                          caretRectangle.Width + 2 * (int)textEditor.Options.Zoom' 			                          caretRectangle.Height);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following statement contains a magic number: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following statement contains a magic number: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following statement contains a magic number: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following statement contains a magic number: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following statement contains a magic number: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following statement contains a magic number: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following statement contains a magic number: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following statement contains a magic number: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,CreateLinePartLayout,The following statement contains a magic number: var tabSize = textEditor.Options != null ? textEditor.Options.TabSize : 4;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InnerDecorateTabsAndSpaces,The following statement contains a magic number: var dotThickness = textEditor.Options.Zoom * 2;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InnerDecorateTabsAndSpaces,The following statement contains a magic number: ypos = System.Math.Floor (y + (LineHeight - dotThickness) / 2);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,InnerDecorateTabsAndSpaces,The following statement contains a magic number: ctx.Rectangle (xpos + (xpos2 - xpos - dotThickness) / 2' ypos' dotThickness' dotThickness);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawIndent,The following statement contains a magic number: cr.MoveTo (x + 0.5' top);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawIndent,The following statement contains a magic number: cr.LineTo (x + 0.5' bottom);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The following statement contains a magic number: endX = startX + 2;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawLinePart,The following statement contains a magic number: HandleSelection (lineOffset' logicalRulerColumn' selectionStartOffset' selectionEndOffset' System.Math.Max (lineOffset' firstSearch.Offset)' System.Math.Min (lineOffset + line.Length' firstSearch.EndOffset)' delegate(int start' int end) { 						uint startIndex = (uint)(start - offset); 						uint endIndex = (uint)(end - offset); 						if (startIndex < endIndex && endIndex <= layout.Text.Length) { 							uint startTranslated = TranslateToUTF8Index (layout.Text' startIndex' ref curIndex' ref byteIndex); 							uint endTranslated = TranslateToUTF8Index (layout.Text' endIndex' ref curIndex' ref byteIndex);  							int l' x1' x2; 							layout.IndexToLineX ((int)startTranslated' false' out l' out x1); 							layout.IndexToLineX ((int)endTranslated' false' out l' out x2); 							int w = (int)System.Math.Ceiling ((x2 - x1) / Pango.Scale.PangoScale); 							int s = (int)System.Math.Floor (x1 / Pango.Scale.PangoScale + x); 							double corner = System.Math.Min (4' width) * textEditor.Options.Zoom;  							// TODO : EditorTheme 							// var color = MainSearchResult.IsInvalid () || MainSearchResult.Offset != firstSearch.Offset ? EditorTheme.SearchResult.Color : EditorTheme.SearchResultMain.Color; 							var color = SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.FindHighlight); 							cr.SetSourceColor (color); 							FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true' s' y' corner' w + 1' LineHeight); 							cr.Fill (); 						} 					}' null);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetFirstSearchResult,The following statement contains a magic number: int mid = (min + max) / 2;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawEolMarker,The following statement contains a magic number: cr.SetSourceRGBA (col.R' col.G' col.B' whitespaceMarkerAlpha * 1.4);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetPixel,The following statement contains a magic number: return (((ulong)color.Red) << 32) | (((ulong)color.Green) << 16) | ((ulong)color.Blue);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetPixel,The following statement contains a magic number: return (((ulong)color.Red) << 32) | (((ulong)color.Green) << 16) | ((ulong)color.Blue);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MousePressed,The following statement contains a magic number: args.Button == 2 && !selection.IsEmpty && selection.Contains (Document.OffsetToLocation (offset))
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MousePressed,The following statement contains a magic number: !Platform.IsWindows && args.Button == 2 && this.textEditor.CanEdit (docLocation.Line)
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseReleased,The following statement contains a magic number: args.Button != 2 && !InSelectionDrag
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetDefaultTextCursor,The following statement contains a magic number: return  HslColor.Brightness(baseColor) < 0.5 ? xtermCursorInverted.Value : xtermCursor.Value;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetNextTabstop,The following statement contains a magic number: int tabSize = textEditor != null && textEditor.Options != null ? textEditor.Options.TabSize : 4;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DimColor,The following statement contains a magic number: return DimColor (color' 0.95);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawRectangleWithRuler,The following statement contains a magic number: cr.DrawLine ( 							SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Ruler)' 							divider + 0.5' area.Y' 							divider + 0.5' area.Y + area.Height);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawRectangleWithRuler,The following statement contains a magic number: cr.DrawLine ( 							SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Ruler)' 							divider + 0.5' area.Y' 							divider + 0.5' area.Y + area.Height);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetFoldRectangles,The following statement contains a magic number: var pixelWidth = width / Pango.Scale.PangoScale + foldXMargin * 2;
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc(x + r' y + r' r' System.Math.PI' System.Math.PI * 1.5);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: bgColor = bgColor.AddLight (0.1);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: HslColor.Brightness (bgColor) < 0.5
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: double pixelX = 0.5 + System.Math.Floor (position);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: double pixelWidth = System.Math.Floor (position + width - pixelX + foldXMargin * 2);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: var boundingRectangleY = System.Math.Floor (foldingRectangle.Y + (foldingRectangle.Height - boundingRectangleHeight) / 2);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: RoundedRectangle (cr' 					                 System.Math.Floor (foldingRectangle.X) + 0.5' 					                 boundingRectangleY + 0.5' 					                 System.Math.Floor (foldingRectangle.Width - cr.LineWidth)' 					                 System.Math.Floor (boundingRectangleHeight - cr.LineWidth)' 					                 LineHeight / 8' CairoCorners.All' false);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: RoundedRectangle (cr' 					                 System.Math.Floor (foldingRectangle.X) + 0.5' 					                 boundingRectangleY + 0.5' 					                 System.Math.Floor (foldingRectangle.Width - cr.LineWidth)' 					                 System.Math.Floor (boundingRectangleHeight - cr.LineWidth)' 					                 LineHeight / 8' CairoCorners.All' false);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: RoundedRectangle (cr' 					                 System.Math.Floor (foldingRectangle.X) + 0.5' 					                 boundingRectangleY + 0.5' 					                 System.Math.Floor (foldingRectangle.Width - cr.LineWidth)' 					                 System.Math.Floor (boundingRectangleHeight - cr.LineWidth)' 					                 LineHeight / 8' CairoCorners.All' false);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: cr.Translate ( 						position + foldXMargin' 						System.Math.Floor (boundingRectangleY + System.Math.Max (0' boundingRectangleHeight - height) / 2));
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following statement contains a magic number: switch (textEditor.Options.ShowWhitespaces) { 				case ShowWhitespaces.Selection: 					if (!isEolFolded && isEolSelected) 					if (!(BackgroundRenderer != null && textEditor.Options.ShowWhitespaces == ShowWhitespaces.Selection)) 					if (textEditor.MainSelection.Contains (lineNr' 2 + line.Length) && 					    !(lineNr == Caret.Line && Caret.Column > 1 && textEditor.MainSelection.Anchor.Line < textEditor.MainSelection.Lead.Line) && 					    textEditor.MainSelection.Anchor.Line != textEditor.MainSelection.Lead.Line) 						goto case ShowWhitespaces.Always; 					break; 				case ShowWhitespaces.Always: 					if (wrapper == null) 						wrapper = GetLayout (line); 					DrawEolMarker (cr' line' isEolSelected' position' y + System.Math.Max (0' wrapper.Height - LineHeight)); 					break; 				}
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawScrollShadow,The following statement contains a magic number: cr.MoveTo (x + i * cr.LineWidth + 0.5' y);
Magic Number,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawScrollShadow,The following statement contains a magic number: cr.LineTo (x + i * cr.LineWidth + 0.5' y + 1 + _lineHeight);
Magic Number,Mono.TextEditor,VisualLocationTranslator,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,PointToLocation,The following statement contains a magic number: xPos - delta / 2 >= xp
Magic Number,Mono.TextEditor,TooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TooltipProvider.cs,GetRequiredPosition,The following statement contains a magic number: xalign = 0.5;
Magic Number,Mono.TextEditor,TooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TooltipProvider.cs,ShowAndPositionTooltip,The following statement contains a magic number: width += 10;
Magic Number,Mono.TextEditor,TooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TooltipProvider.cs,ShowAndPositionTooltip,The following statement contains a magic number: y += 10;
Magic Number,Mono.TextEditor,LineStateFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle ( 							cr' 							prevState == TextDocument.LineState.Unchanged' 							nextState == TextDocument.LineState.Unchanged' 							x + 1' 							y' 							lineHeight / 4' 							Margin.Width / 4' 							lineHeight 						);
Magic Number,Mono.TextEditor,LineStateFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.FoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle ( 							cr' 							prevState == TextDocument.LineState.Unchanged' 							nextState == TextDocument.LineState.Unchanged' 							x + 1' 							y' 							lineHeight / 4' 							Margin.Width / 4' 							lineHeight 						);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,OptionsChanged,The following statement contains a magic number: hslColor.L = hslColor.L * 0.85 + hslColor.L * 0.25;
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,OptionsChanged,The following statement contains a magic number: hslColor.L = hslColor.L * 0.85 + hslColor.L * 0.25;
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,OptionsChanged,The following statement contains a magic number: brightness < 0.5
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: var drawArea = new Cairo.Rectangle (System.Math.Floor (x + (Margin.Width - foldSegmentSize) / 2) + 0.5' 													System.Math.Floor (y + (Editor.LineHeight - foldSegmentSize) / 2) + 0.5' foldSegmentSize' foldSegmentSize);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: var drawArea = new Cairo.Rectangle (System.Math.Floor (x + (Margin.Width - foldSegmentSize) / 2) + 0.5' 													System.Math.Floor (y + (Editor.LineHeight - foldSegmentSize) / 2) + 0.5' foldSegmentSize' foldSegmentSize);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: var drawArea = new Cairo.Rectangle (System.Math.Floor (x + (Margin.Width - foldSegmentSize) / 2) + 0.5' 													System.Math.Floor (y + (Editor.LineHeight - foldSegmentSize) / 2) + 0.5' foldSegmentSize' foldSegmentSize);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: var drawArea = new Cairo.Rectangle (System.Math.Floor (x + (Margin.Width - foldSegmentSize) / 2) + 0.5' 													System.Math.Floor (y + (Editor.LineHeight - foldSegmentSize) / 2) + 0.5' foldSegmentSize' foldSegmentSize);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (isSelected ? foldLineHighlightedGC : foldToggleMarkerGC' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: foldSegmentSize = Margin.Width * 4 / 6;
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: foldSegmentSize = Margin.Width * 4 / 6;
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: foldSegmentSize -= (foldSegmentSize) % 2;
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: double foldSegmentYPos = y + System.Math.Floor (Editor.LineHeight - foldSegmentSize) / 2;
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: double xPos = x + System.Math.Floor (Margin.Width / 2) + 0.5;
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: double xPos = x + System.Math.Floor (Margin.Width / 2) + 0.5;
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: cr.DrawLine (isContainingSelected ? foldLineHighlightedGC : foldLineGC' xPos' drawArea.Y' xPos' foldSegmentYPos - 2);
Magic Number,Mono.TextEditor,VSNetFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSNetFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: cr.DrawLine (isEndSelected || (isStartSelected && isVisible) || isContainingSelected ? foldLineHighlightedGC : foldLineGC' xPos' foldSegmentYPos + foldSegmentSize + 2' xPos' drawArea.Y + drawArea.Height);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: foldSegmentSize = Margin.Width * 4 / 6;
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: foldSegmentSize = Margin.Width * 4 / 6;
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,Draw,The following statement contains a magic number: foldSegmentSize -= (foldSegmentSize) % 2;
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: var drawArea = new Cairo.Rectangle (System.Math.Floor (x + (Margin.Width - foldSegmentSize) / 2) + 0.5' 													System.Math.Floor (y + (Editor.LineHeight - foldSegmentSize) / 2) + 0.5' foldSegmentSize' foldSegmentSize);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: var drawArea = new Cairo.Rectangle (System.Math.Floor (x + (Margin.Width - foldSegmentSize) / 2) + 0.5' 													System.Math.Floor (y + (Editor.LineHeight - foldSegmentSize) / 2) + 0.5' foldSegmentSize' foldSegmentSize);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: var drawArea = new Cairo.Rectangle (System.Math.Floor (x + (Margin.Width - foldSegmentSize) / 2) + 0.5' 													System.Math.Floor (y + (Editor.LineHeight - foldSegmentSize) / 2) + 0.5' foldSegmentSize' foldSegmentSize);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: var drawArea = new Cairo.Rectangle (System.Math.Floor (x + (Margin.Width - foldSegmentSize) / 2) + 0.5' 													System.Math.Floor (y + (Editor.LineHeight - foldSegmentSize) / 2) + 0.5' foldSegmentSize' foldSegmentSize);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 							  drawArea.X + drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2' 							  drawArea.X + drawArea.Width - drawArea.Width * 2 / 10' 							  drawArea.Y + drawArea.Height / 2);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,VSCodeFoldMarkerMarginDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.VSCodeFoldMarkerMarginDrawer.cs,DrawFoldSegment,The following statement contains a magic number: ctx.DrawLine (drawColor' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height * 2 / 10' 								  drawArea.X + drawArea.Width / 2' 								  drawArea.Y + drawArea.Height - drawArea.Height * 2 / 10);
Magic Number,Mono.TextEditor,TextEditorKeyPressTimings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextEditorKeyPressTimings.cs,GetTypingTimingMetadata,The following statement contains a magic number: var metadata = new TypingTimingMetadata { 				Average = average' 				First = firstTime.Value.TotalMilliseconds' 				Maximum = maxTime.TotalMilliseconds' 				Dropped = droppedEvents' 				PercentAnimation = totalTimeAnimationDrawing.TotalMilliseconds / totalMillis * 100' 				PercentDrawCaret = totalTimeCaretDrawing.TotalMilliseconds / totalMillis * 100' 				PercentDrawMargin = totalTimeMarginDrawing.TotalMilliseconds / totalMillis * 100' 				PercentExtensionKeypress = totalTimeExtensionKeyPress.TotalMilliseconds / totalMillis * 100' 				SessionKeypressCount = count' 				SessionLength = GetCurrentTime ().TotalMilliseconds - openTime.TotalMilliseconds' 				LengthAtStart = lengthAtStart' 				LengthDelta = lengthAtEnd - lengthAtStart' 				LineCountAtStart = lineCountAtStart' 				LineCountDelta = lineCountAtEnd - lineCountAtStart' 			};
Magic Number,Mono.TextEditor,TextEditorKeyPressTimings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextEditorKeyPressTimings.cs,GetTypingTimingMetadata,The following statement contains a magic number: var metadata = new TypingTimingMetadata { 				Average = average' 				First = firstTime.Value.TotalMilliseconds' 				Maximum = maxTime.TotalMilliseconds' 				Dropped = droppedEvents' 				PercentAnimation = totalTimeAnimationDrawing.TotalMilliseconds / totalMillis * 100' 				PercentDrawCaret = totalTimeCaretDrawing.TotalMilliseconds / totalMillis * 100' 				PercentDrawMargin = totalTimeMarginDrawing.TotalMilliseconds / totalMillis * 100' 				PercentExtensionKeypress = totalTimeExtensionKeyPress.TotalMilliseconds / totalMillis * 100' 				SessionKeypressCount = count' 				SessionLength = GetCurrentTime ().TotalMilliseconds - openTime.TotalMilliseconds' 				LengthAtStart = lengthAtStart' 				LengthDelta = lengthAtEnd - lengthAtStart' 				LineCountAtStart = lineCountAtStart' 				LineCountDelta = lineCountAtEnd - lineCountAtStart' 			};
Magic Number,Mono.TextEditor,TextEditorKeyPressTimings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextEditorKeyPressTimings.cs,GetTypingTimingMetadata,The following statement contains a magic number: var metadata = new TypingTimingMetadata { 				Average = average' 				First = firstTime.Value.TotalMilliseconds' 				Maximum = maxTime.TotalMilliseconds' 				Dropped = droppedEvents' 				PercentAnimation = totalTimeAnimationDrawing.TotalMilliseconds / totalMillis * 100' 				PercentDrawCaret = totalTimeCaretDrawing.TotalMilliseconds / totalMillis * 100' 				PercentDrawMargin = totalTimeMarginDrawing.TotalMilliseconds / totalMillis * 100' 				PercentExtensionKeypress = totalTimeExtensionKeyPress.TotalMilliseconds / totalMillis * 100' 				SessionKeypressCount = count' 				SessionLength = GetCurrentTime ().TotalMilliseconds - openTime.TotalMilliseconds' 				LengthAtStart = lengthAtStart' 				LengthDelta = lengthAtEnd - lengthAtStart' 				LineCountAtStart = lineCountAtStart' 				LineCountDelta = lineCountAtEnd - lineCountAtStart' 			};
Magic Number,Mono.TextEditor,TextEditorKeyPressTimings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextEditorKeyPressTimings.cs,GetTypingTimingMetadata,The following statement contains a magic number: var metadata = new TypingTimingMetadata { 				Average = average' 				First = firstTime.Value.TotalMilliseconds' 				Maximum = maxTime.TotalMilliseconds' 				Dropped = droppedEvents' 				PercentAnimation = totalTimeAnimationDrawing.TotalMilliseconds / totalMillis * 100' 				PercentDrawCaret = totalTimeCaretDrawing.TotalMilliseconds / totalMillis * 100' 				PercentDrawMargin = totalTimeMarginDrawing.TotalMilliseconds / totalMillis * 100' 				PercentExtensionKeypress = totalTimeExtensionKeyPress.TotalMilliseconds / totalMillis * 100' 				SessionKeypressCount = count' 				SessionLength = GetCurrentTime ().TotalMilliseconds - openTime.TotalMilliseconds' 				LengthAtStart = lengthAtStart' 				LengthDelta = lengthAtEnd - lengthAtStart' 				LineCountAtStart = lineCountAtStart' 				LineCountDelta = lineCountAtEnd - lineCountAtStart' 			};
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,CodePreviewWindow,The following statement contains a magic number: maxWidth = geometry.Width * 2 / 5;
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,CodePreviewWindow,The following statement contains a magic number: maxWidth = geometry.Width * 2 / 5;
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,CodePreviewWindow,The following statement contains a magic number: maxHeight = geometry.Height * 2 / 5;
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,CodePreviewWindow,The following statement contains a magic number: maxHeight = geometry.Height * 2 / 5;
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,UpdateSize,The following statement contains a magic number: SetSizeRequest ( 				Math.Max (1' Math.Min (w + 3' maxWidth) + 5)' 				Math.Max (1' Math.Min (h + 3' maxHeight)) + 5);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,UpdateSize,The following statement contains a magic number: SetSizeRequest ( 				Math.Max (1' Math.Min (w + 3' maxWidth) + 5)' 				Math.Max (1' Math.Min (h + 3' maxHeight)) + 5);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,UpdateSize,The following statement contains a magic number: SetSizeRequest ( 				Math.Max (1' Math.Min (w + 3' maxWidth) + 5)' 				Math.Max (1' Math.Min (h + 3' maxHeight)) + 5);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,UpdateSize,The following statement contains a magic number: SetSizeRequest ( 				Math.Max (1' Math.Min (w + 3' maxWidth) + 5)' 				Math.Max (1' Math.Min (h + 3' maxHeight)) + 5);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Translate (5' 4);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Translate (5' 4);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Rectangle (1.5' 1.5' allocation.Width - 3' allocation.Height - 3);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Rectangle (1.5' 1.5' allocation.Width - 3' allocation.Height - 3);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Rectangle (1.5' 1.5' allocation.Width - 3' allocation.Height - 3);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Rectangle (1.5' 1.5' allocation.Width - 3' allocation.Height - 3);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Rectangle (0.5' 0.5' allocation.Width - 1' allocation.Height - 1);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Rectangle (0.5' 0.5' allocation.Width - 1' allocation.Height - 1);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Rectangle (allocation.Width - w - 3' allocation.Height - h' w + 2' h - 1);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Rectangle (allocation.Width - w - 3' allocation.Height - h' w + 2' h - 1);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Translate (allocation.Width - w - 4' allocation.Height - h - 3);
Magic Number,Mono.TextEditor,CodePreviewWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\CodePreviewWindow.cs,Draw,The following statement contains a magic number: cr.Translate (allocation.Width - w - 4' allocation.Height - h - 3);
Magic Number,Mono.TextEditor,DocumentLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\DocumentLine.cs,GetLogicalColumn,The following statement contains a magic number: int tabSize = editor.Options != null ? editor.Options.TabSize : 4;
Magic Number,Mono.TextEditor,LazyLineSplitter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\LazyLineSplitter.cs,OffsetToLineNumber,The following statement contains a magic number: int mid = (min + max) / 2;
Magic Number,Mono.TextEditor,LineSplitter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\LineSplitter.cs,BuildTree,The following statement contains a magic number: int middle = (start + end) / 2;
Magic Number,Mono.TextEditor,LineSplitter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\LineSplitter.cs,GetTreeHeight,The following statement contains a magic number: return size == 0 ? 0 : GetTreeHeight (size / 2) + 1;
Magic Number,Mono.TextEditor,SharpDevelopWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SharpDevelopWordFindStrategy.cs,FindNextWordOffset,The following statement contains a magic number: CharacterClass previous = GetCharacterClass (doc.GetCharAt (result-2)' subword' false);
Magic Number,Mono.TextEditor,SharpDevelopWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SharpDevelopWordFindStrategy.cs,FindNextWordOffset,The following statement contains a magic number: previous == CharacterClass.UppercaseLetter && result-2 > offset
Magic Number,Mono.TextEditor,SharpDevelopWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SharpDevelopWordFindStrategy.cs,FindNextWordOffset,The following statement contains a magic number: result-2 > line.Offset
Magic Number,Mono.TextEditor,SharpDevelopWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SharpDevelopWordFindStrategy.cs,FindPrevWordOffset,The following statement contains a magic number: current = GetCharacterClass (doc.GetCharAt (result - 2)' subword' false);
Magic Number,Mono.TextEditor,SharpDevelopWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SharpDevelopWordFindStrategy.cs,FindPrevWordOffset,The following statement contains a magic number: CharacterClass back2 = GetCharacterClass (doc.GetCharAt (result-2)' subword' false);
Magic Number,Mono.TextEditor,SharpDevelopWordFindStrategy,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\SharpDevelopWordFindStrategy.cs,FindPrevWordOffset,The following statement contains a magic number: result-2 > line.Offset
Magic Number,Mono.TextEditor,TextDocument,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,IndexOf,The following statement contains a magic number: const int bufferSize = 4095;
Magic Number,Mono.TextEditor,DocumentLineFromTextSnapshotLine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\TextDocument.cs,LineCode,The following statement contains a magic number: line.LineBreakLength == 2
Magic Number,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The following statement contains a magic number: clipboard.RequestContents (CopyOperation.MD_ATOM' (ClipboardReceivedFunc)delegate (Clipboard clp' SelectionData selectionData) { 					if (selectionData.Length > 0) { 						byte[] selBytes = selectionData.Data; 						var upperBound = System.Math.Max (0' System.Math.Min (selBytes [1]' selBytes.Length - 2)); 						byte[] copyData = new byte[upperBound]; 						Array.Copy (selBytes' 2' copyData' 0' copyData.Length); 						var rawTextOffset = 1 + 1 + copyData.Length; 						string text = Encoding.UTF8.GetString (selBytes' rawTextOffset' selBytes.Length - rawTextOffset); 						bool pasteBlock = (selBytes [0] & 1) == 1; 						bool pasteLine = (selBytes [0] & 2) == 2; 						if (pasteBlock) { 							using (var undo = data.OpenUndoGroup ()) { 								var version = data.Document.Version; 								if (!preserveSelection) 									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block); 								int startLine = data.Caret.Line; 								data.EnsureCaretIsNotVirtual (); 								insertionOffset = version.MoveOffsetTo (data.Document.Version' insertionOffset);  								data.Caret.PreserveSelection = true; 								var lines = new List<string> (); 								int offset = 0; 								while (true) { 									var delimiter = LineSplitter.NextDelimiter (text' offset); 									if (delimiter.IsInvalid) 										break;  									int delimiterEndOffset = delimiter.EndOffset; 									lines.Add (text.Substring (offset' delimiter.Offset - offset)); 									offset = delimiterEndOffset; 								} 								if (offset < text.Length) 									lines.Add (text.Substring (offset' text.Length - offset));  								int lineNr = data.Document.OffsetToLineNumber (insertionOffset); 								int col = insertionOffset - data.Document.GetLine (lineNr).Offset; 								int visCol = data.Document.GetLine (lineNr).GetVisualColumn (data' col); 								DocumentLine curLine; 								int lineCol = col; 								result = 0; 								for (int i = 0; i < lines.Count; i++) { 									while (data.Document.LineCount <= lineNr + i) { 										data.Insert ((int)data.Document.Length' Environment.NewLine); 										result += Environment.NewLine.Length; 									} 									curLine = data.Document.GetLine (lineNr + i); 									if (lines [i].Length > 0) { 										lineCol = curLine.GetLogicalColumn (data' visCol); 										if (curLine.Length + 1 < lineCol) { 											result += lineCol - curLine.Length; 											data.Insert (curLine.Offset + curLine.Length' new string (' '' lineCol - curLine.Length)); 										} 										data.Insert (curLine.Offset + lineCol' lines [i]); 										result += lines [i].Length; 									} 									if (!preserveState) 										data.Caret.Offset = curLine.Offset + lineCol + lines [i].Length; 								} 								if (!preserveState) 									data.ClearSelection (); 								data.FixVirtualIndentation (startLine);  								data.Caret.PreserveSelection = false; 							} 						} else if (pasteLine) { 							using (var undo = data.OpenUndoGroup ()) { 								if (!preserveSelection) 									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block); 								data.EnsureCaretIsNotVirtual ();  								data.Caret.PreserveSelection = true; 								result = text.Length; 								DocumentLine curLine = data.Document.GetLine (data.Caret.Line); 								result = PastePlainText (data' curLine.Offset' text + data.EolMarker' preserveSelection' copyData); 								if (!preserveState) 									data.ClearSelection (); 								data.Caret.PreserveSelection = false; 								data.FixVirtualIndentation (curLine.LineNumber);  							} 						} else { 							result = PastePlainText (data' insertionOffset' text' preserveSelection' copyData); 						} 					} 				});
Magic Number,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The following statement contains a magic number: clipboard.RequestContents (CopyOperation.MD_ATOM' (ClipboardReceivedFunc)delegate (Clipboard clp' SelectionData selectionData) { 					if (selectionData.Length > 0) { 						byte[] selBytes = selectionData.Data; 						var upperBound = System.Math.Max (0' System.Math.Min (selBytes [1]' selBytes.Length - 2)); 						byte[] copyData = new byte[upperBound]; 						Array.Copy (selBytes' 2' copyData' 0' copyData.Length); 						var rawTextOffset = 1 + 1 + copyData.Length; 						string text = Encoding.UTF8.GetString (selBytes' rawTextOffset' selBytes.Length - rawTextOffset); 						bool pasteBlock = (selBytes [0] & 1) == 1; 						bool pasteLine = (selBytes [0] & 2) == 2; 						if (pasteBlock) { 							using (var undo = data.OpenUndoGroup ()) { 								var version = data.Document.Version; 								if (!preserveSelection) 									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block); 								int startLine = data.Caret.Line; 								data.EnsureCaretIsNotVirtual (); 								insertionOffset = version.MoveOffsetTo (data.Document.Version' insertionOffset);  								data.Caret.PreserveSelection = true; 								var lines = new List<string> (); 								int offset = 0; 								while (true) { 									var delimiter = LineSplitter.NextDelimiter (text' offset); 									if (delimiter.IsInvalid) 										break;  									int delimiterEndOffset = delimiter.EndOffset; 									lines.Add (text.Substring (offset' delimiter.Offset - offset)); 									offset = delimiterEndOffset; 								} 								if (offset < text.Length) 									lines.Add (text.Substring (offset' text.Length - offset));  								int lineNr = data.Document.OffsetToLineNumber (insertionOffset); 								int col = insertionOffset - data.Document.GetLine (lineNr).Offset; 								int visCol = data.Document.GetLine (lineNr).GetVisualColumn (data' col); 								DocumentLine curLine; 								int lineCol = col; 								result = 0; 								for (int i = 0; i < lines.Count; i++) { 									while (data.Document.LineCount <= lineNr + i) { 										data.Insert ((int)data.Document.Length' Environment.NewLine); 										result += Environment.NewLine.Length; 									} 									curLine = data.Document.GetLine (lineNr + i); 									if (lines [i].Length > 0) { 										lineCol = curLine.GetLogicalColumn (data' visCol); 										if (curLine.Length + 1 < lineCol) { 											result += lineCol - curLine.Length; 											data.Insert (curLine.Offset + curLine.Length' new string (' '' lineCol - curLine.Length)); 										} 										data.Insert (curLine.Offset + lineCol' lines [i]); 										result += lines [i].Length; 									} 									if (!preserveState) 										data.Caret.Offset = curLine.Offset + lineCol + lines [i].Length; 								} 								if (!preserveState) 									data.ClearSelection (); 								data.FixVirtualIndentation (startLine);  								data.Caret.PreserveSelection = false; 							} 						} else if (pasteLine) { 							using (var undo = data.OpenUndoGroup ()) { 								if (!preserveSelection) 									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block); 								data.EnsureCaretIsNotVirtual ();  								data.Caret.PreserveSelection = true; 								result = text.Length; 								DocumentLine curLine = data.Document.GetLine (data.Caret.Line); 								result = PastePlainText (data' curLine.Offset' text + data.EolMarker' preserveSelection' copyData); 								if (!preserveState) 									data.ClearSelection (); 								data.Caret.PreserveSelection = false; 								data.FixVirtualIndentation (curLine.LineNumber);  							} 						} else { 							result = PastePlainText (data' insertionOffset' text' preserveSelection' copyData); 						} 					} 				});
Magic Number,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The following statement contains a magic number: clipboard.RequestContents (CopyOperation.MD_ATOM' (ClipboardReceivedFunc)delegate (Clipboard clp' SelectionData selectionData) { 					if (selectionData.Length > 0) { 						byte[] selBytes = selectionData.Data; 						var upperBound = System.Math.Max (0' System.Math.Min (selBytes [1]' selBytes.Length - 2)); 						byte[] copyData = new byte[upperBound]; 						Array.Copy (selBytes' 2' copyData' 0' copyData.Length); 						var rawTextOffset = 1 + 1 + copyData.Length; 						string text = Encoding.UTF8.GetString (selBytes' rawTextOffset' selBytes.Length - rawTextOffset); 						bool pasteBlock = (selBytes [0] & 1) == 1; 						bool pasteLine = (selBytes [0] & 2) == 2; 						if (pasteBlock) { 							using (var undo = data.OpenUndoGroup ()) { 								var version = data.Document.Version; 								if (!preserveSelection) 									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block); 								int startLine = data.Caret.Line; 								data.EnsureCaretIsNotVirtual (); 								insertionOffset = version.MoveOffsetTo (data.Document.Version' insertionOffset);  								data.Caret.PreserveSelection = true; 								var lines = new List<string> (); 								int offset = 0; 								while (true) { 									var delimiter = LineSplitter.NextDelimiter (text' offset); 									if (delimiter.IsInvalid) 										break;  									int delimiterEndOffset = delimiter.EndOffset; 									lines.Add (text.Substring (offset' delimiter.Offset - offset)); 									offset = delimiterEndOffset; 								} 								if (offset < text.Length) 									lines.Add (text.Substring (offset' text.Length - offset));  								int lineNr = data.Document.OffsetToLineNumber (insertionOffset); 								int col = insertionOffset - data.Document.GetLine (lineNr).Offset; 								int visCol = data.Document.GetLine (lineNr).GetVisualColumn (data' col); 								DocumentLine curLine; 								int lineCol = col; 								result = 0; 								for (int i = 0; i < lines.Count; i++) { 									while (data.Document.LineCount <= lineNr + i) { 										data.Insert ((int)data.Document.Length' Environment.NewLine); 										result += Environment.NewLine.Length; 									} 									curLine = data.Document.GetLine (lineNr + i); 									if (lines [i].Length > 0) { 										lineCol = curLine.GetLogicalColumn (data' visCol); 										if (curLine.Length + 1 < lineCol) { 											result += lineCol - curLine.Length; 											data.Insert (curLine.Offset + curLine.Length' new string (' '' lineCol - curLine.Length)); 										} 										data.Insert (curLine.Offset + lineCol' lines [i]); 										result += lines [i].Length; 									} 									if (!preserveState) 										data.Caret.Offset = curLine.Offset + lineCol + lines [i].Length; 								} 								if (!preserveState) 									data.ClearSelection (); 								data.FixVirtualIndentation (startLine);  								data.Caret.PreserveSelection = false; 							} 						} else if (pasteLine) { 							using (var undo = data.OpenUndoGroup ()) { 								if (!preserveSelection) 									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block); 								data.EnsureCaretIsNotVirtual ();  								data.Caret.PreserveSelection = true; 								result = text.Length; 								DocumentLine curLine = data.Document.GetLine (data.Caret.Line); 								result = PastePlainText (data' curLine.Offset' text + data.EolMarker' preserveSelection' copyData); 								if (!preserveState) 									data.ClearSelection (); 								data.Caret.PreserveSelection = false; 								data.FixVirtualIndentation (curLine.LineNumber);  							} 						} else { 							result = PastePlainText (data' insertionOffset' text' preserveSelection' copyData); 						} 					} 				});
Magic Number,Mono.TextEditor,ClipboardActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,PasteFrom,The following statement contains a magic number: clipboard.RequestContents (CopyOperation.MD_ATOM' (ClipboardReceivedFunc)delegate (Clipboard clp' SelectionData selectionData) { 					if (selectionData.Length > 0) { 						byte[] selBytes = selectionData.Data; 						var upperBound = System.Math.Max (0' System.Math.Min (selBytes [1]' selBytes.Length - 2)); 						byte[] copyData = new byte[upperBound]; 						Array.Copy (selBytes' 2' copyData' 0' copyData.Length); 						var rawTextOffset = 1 + 1 + copyData.Length; 						string text = Encoding.UTF8.GetString (selBytes' rawTextOffset' selBytes.Length - rawTextOffset); 						bool pasteBlock = (selBytes [0] & 1) == 1; 						bool pasteLine = (selBytes [0] & 2) == 2; 						if (pasteBlock) { 							using (var undo = data.OpenUndoGroup ()) { 								var version = data.Document.Version; 								if (!preserveSelection) 									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block); 								int startLine = data.Caret.Line; 								data.EnsureCaretIsNotVirtual (); 								insertionOffset = version.MoveOffsetTo (data.Document.Version' insertionOffset);  								data.Caret.PreserveSelection = true; 								var lines = new List<string> (); 								int offset = 0; 								while (true) { 									var delimiter = LineSplitter.NextDelimiter (text' offset); 									if (delimiter.IsInvalid) 										break;  									int delimiterEndOffset = delimiter.EndOffset; 									lines.Add (text.Substring (offset' delimiter.Offset - offset)); 									offset = delimiterEndOffset; 								} 								if (offset < text.Length) 									lines.Add (text.Substring (offset' text.Length - offset));  								int lineNr = data.Document.OffsetToLineNumber (insertionOffset); 								int col = insertionOffset - data.Document.GetLine (lineNr).Offset; 								int visCol = data.Document.GetLine (lineNr).GetVisualColumn (data' col); 								DocumentLine curLine; 								int lineCol = col; 								result = 0; 								for (int i = 0; i < lines.Count; i++) { 									while (data.Document.LineCount <= lineNr + i) { 										data.Insert ((int)data.Document.Length' Environment.NewLine); 										result += Environment.NewLine.Length; 									} 									curLine = data.Document.GetLine (lineNr + i); 									if (lines [i].Length > 0) { 										lineCol = curLine.GetLogicalColumn (data' visCol); 										if (curLine.Length + 1 < lineCol) { 											result += lineCol - curLine.Length; 											data.Insert (curLine.Offset + curLine.Length' new string (' '' lineCol - curLine.Length)); 										} 										data.Insert (curLine.Offset + lineCol' lines [i]); 										result += lines [i].Length; 									} 									if (!preserveState) 										data.Caret.Offset = curLine.Offset + lineCol + lines [i].Length; 								} 								if (!preserveState) 									data.ClearSelection (); 								data.FixVirtualIndentation (startLine);  								data.Caret.PreserveSelection = false; 							} 						} else if (pasteLine) { 							using (var undo = data.OpenUndoGroup ()) { 								if (!preserveSelection) 									data.DeleteSelectedText (!data.IsSomethingSelected || data.MainSelection.SelectionMode != MonoDevelop.Ide.Editor.SelectionMode.Block); 								data.EnsureCaretIsNotVirtual ();  								data.Caret.PreserveSelection = true; 								result = text.Length; 								DocumentLine curLine = data.Document.GetLine (data.Caret.Line); 								result = PastePlainText (data' curLine.Offset' text + data.EolMarker' preserveSelection' copyData); 								if (!preserveState) 									data.ClearSelection (); 								data.Caret.PreserveSelection = false; 								data.FixVirtualIndentation (curLine.LineNumber);  							} 						} else { 							result = PastePlainText (data' insertionOffset' text' preserveSelection' copyData); 						} 					} 				});
Magic Number,Mono.TextEditor,CopyOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,SetData,The following statement contains a magic number: switch (info) { 				case TextType: 					selection_data.Text = GetCopiedPlainText (); 					break; 				case RichTextType: 					var rtf = RtfWriter.GenerateRtf (copiedColoredChunks' docStyle' options); 					selection_data.Set (RTF_ATOM' UTF8_FORMAT' Encoding.UTF8.GetBytes (rtf)); 					break; 				case HTMLTextType: 					var html = HtmlWriter.GenerateHtml (copiedColoredChunks' docStyle' options); //					Console.WriteLine ("html:" + html); 					selection_data.Set (HTML_ATOM' UTF8_FORMAT' Encoding.UTF8.GetBytes (html)); 					break; 				case MonoTextType: 					byte[] rawText = Encoding.UTF8.GetBytes (GetCopiedPlainText ()); 					var copyDataLength = (byte)(copyData != null ? copyData.Length : 0); 					var dataOffset = 1 + 1 + copyDataLength; 					byte[] data = new byte [rawText.Length + dataOffset]; 					data [1] = copyDataLength; 					if (copyDataLength > 0) 						copyData.CopyTo (data' 2); 					rawText.CopyTo (data' dataOffset); 					data [0] = 0; 					if (isBlockMode) 						data [0] |= 1; 					if (isLineSelectionMode) 						data [0] |= 2; 					selection_data.Set (MD_ATOM' UTF8_FORMAT' data); 					break; 				}
Magic Number,Mono.TextEditor,CopyOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,SetData,The following statement contains a magic number: switch (info) { 				case TextType: 					selection_data.Text = GetCopiedPlainText (); 					break; 				case RichTextType: 					var rtf = RtfWriter.GenerateRtf (copiedColoredChunks' docStyle' options); 					selection_data.Set (RTF_ATOM' UTF8_FORMAT' Encoding.UTF8.GetBytes (rtf)); 					break; 				case HTMLTextType: 					var html = HtmlWriter.GenerateHtml (copiedColoredChunks' docStyle' options); //					Console.WriteLine ("html:" + html); 					selection_data.Set (HTML_ATOM' UTF8_FORMAT' Encoding.UTF8.GetBytes (html)); 					break; 				case MonoTextType: 					byte[] rawText = Encoding.UTF8.GetBytes (GetCopiedPlainText ()); 					var copyDataLength = (byte)(copyData != null ? copyData.Length : 0); 					var dataOffset = 1 + 1 + copyDataLength; 					byte[] data = new byte [rawText.Length + dataOffset]; 					data [1] = copyDataLength; 					if (copyDataLength > 0) 						copyData.CopyTo (data' 2); 					rawText.CopyTo (data' dataOffset); 					data [0] = 0; 					if (isBlockMode) 						data [0] |= 1; 					if (isLineSelectionMode) 						data [0] |= 2; 					selection_data.Set (MD_ATOM' UTF8_FORMAT' data); 					break; 				}
Magic Number,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,RemoveCharBeforeCaret,The following statement contains a magic number: data.Remove (offset - 2' 2);
Magic Number,Mono.TextEditor,DeleteActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\DeleteActions.cs,RemoveCharBeforeCaret,The following statement contains a magic number: data.Remove (offset - 2' 2);
Magic Number,Mono.TextEditor,SelectionActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\SelectionActions.cs,EndLineSelection,The following statement contains a magic number: (fromLine - data.MainSelection.Lead.Line) != 2
Magic Number,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The following statement contains a magic number: const double ARC_TO_BEZIER = 0.55228475;
Magic Number,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The following statement contains a magic number: double radius_y = r / 4;
Magic Number,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The following statement contains a magic number: radius_x = w / 2;
Magic Number,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The following statement contains a magic number: radius_y = h / 2;
Magic Number,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (w - 2 * radius_x' 0.0);
Magic Number,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (0' h - 2 * radius_y);
Magic Number,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (-w + 2 * radius_x' 0);
Magic Number,Mono.TextEditor,BookmarkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\BookmarkMarker.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (0' -h + 2 * radius_y);
Magic Number,Mono.TextEditor,EditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\EditMode.cs,GetKeyCode,The following statement contains a magic number: return GetKeyCode (key) | (int)(m << 16);
Magic Number,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);
Magic Number,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);
Magic Number,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);
Magic Number,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,SharpLineX,The following statement contains a magic number: cr.MoveTo (x1 + 0.5' y1);
Magic Number,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,SharpLineX,The following statement contains a magic number: cr.LineTo (x2 + 0.5' y2);
Magic Number,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,SharpLineY,The following statement contains a magic number: cr.MoveTo (x1' y1 + 0.5);
Magic Number,Mono.TextEditor,HelperMethods,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\HelperMethods.cs,SharpLineY,The following statement contains a magic number: cr.LineTo (x2' y2 + 0.5);
Magic Number,Mono.TextEditor,HelpWindowEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,PositionHelpWindow,The following statement contains a magic number: editor.TextArea.MoveTopLevelWidget (HelpWindow' x' y - req.Height / 2);
Magic Number,Mono.TextEditor,CursorDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,DrawArrow,The following statement contains a magic number: double phi = 1.618;
Magic Number,Mono.TextEditor,CursorDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,DrawArrow,The following statement contains a magic number: g.SetSourceRGBA (1.0' 0' 0' 0.1);
Magic Number,Mono.TextEditor,CursorDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,Draw,The following statement contains a magic number: double x = GetLineIndentationStart () - 3;
Magic Number,Mono.TextEditor,CursorDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,Draw,The following statement contains a magic number: double x2 = editor.Allocation.Width - mode.HelpWindow.Allocation.Width - InsertionCursorEditMode.HelpWindowMargin * 2 + 4;
Magic Number,Mono.TextEditor,CursorDrawer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,Draw,The following statement contains a magic number: double x2 = editor.Allocation.Width - mode.HelpWindow.Allocation.Width - InsertionCursorEditMode.HelpWindowMargin * 2 + 4;
Magic Number,Mono.TextEditor,BasicSearchEngine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\ISearchEngine.cs,SearchBackward,The following statement contains a magic number: int offset = (fromOffset + args.Text.Length * 2 - 1 - i) % args.Text.Length;
Magic Number,Mono.TextEditor,BasicSearchEngine,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\ISearchEngine.cs,ReplaceAll,The following statement contains a magic number: searchResults.Count < 100
Magic Number,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The following statement contains a magic number: double x2 = metrics.TextRenderStartPosition + x_pos2 - 1 + 0.5;
Magic Number,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The following statement contains a magic number: cr.Rectangle (x1 + 0.5' metrics.LineYRenderStartPosition + 0.5' x2 - x1' editor.LineHeight - 1);
Magic Number,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawBackground,The following statement contains a magic number: cr.Rectangle (x1 + 0.5' metrics.LineYRenderStartPosition + 0.5' x2 - x1' editor.LineHeight - 1);
Magic Number,Mono.TextEditor,TextLinkMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextLinkEditMode.cs,DrawForeground,The following statement contains a magic number: cr.Translate (metrics.X + (int)width + (editor.Options.ShowFoldMargin ? 0 : -2)' metrics.Y);
Magic Number,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The following statement contains a magic number: double height = editor.LineHeight / 5;
Magic Number,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The following statement contains a magic number: switch (Effect) {  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.WavedLine:  				cr.Rectangle (@from' 0' to - @from' editor.Allocation.Height);  				cr.Clip ();  				Pango.CairoHelper.ShowErrorUnderline (cr' metrics.TextRenderStartPosition' y + editor.LineHeight - height' editor.Allocation.Width' height);  				cr.ResetClip ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.DottedLine: 				cr.Save (); 				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.SetDash (new double [] { 2 * editor.Options.Zoom' 2 * editor.Options.Zoom }' 0);  				cr.Stroke ();  				cr.Restore ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.Underline:  				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.Stroke ();  				break;  			default:  				throw new InvalidOperationException ("Invalid text segment marker effect " + Effect + " not supported by this marker.");  			}
Magic Number,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The following statement contains a magic number: switch (Effect) {  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.WavedLine:  				cr.Rectangle (@from' 0' to - @from' editor.Allocation.Height);  				cr.Clip ();  				Pango.CairoHelper.ShowErrorUnderline (cr' metrics.TextRenderStartPosition' y + editor.LineHeight - height' editor.Allocation.Width' height);  				cr.ResetClip ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.DottedLine: 				cr.Save (); 				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.SetDash (new double [] { 2 * editor.Options.Zoom' 2 * editor.Options.Zoom }' 0);  				cr.Stroke ();  				cr.Restore ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.Underline:  				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.Stroke ();  				break;  			default:  				throw new InvalidOperationException ("Invalid text segment marker effect " + Effect + " not supported by this marker.");  			}
Magic Number,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The following statement contains a magic number: switch (Effect) {  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.WavedLine:  				cr.Rectangle (@from' 0' to - @from' editor.Allocation.Height);  				cr.Clip ();  				Pango.CairoHelper.ShowErrorUnderline (cr' metrics.TextRenderStartPosition' y + editor.LineHeight - height' editor.Allocation.Width' height);  				cr.ResetClip ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.DottedLine: 				cr.Save (); 				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.SetDash (new double [] { 2 * editor.Options.Zoom' 2 * editor.Options.Zoom }' 0);  				cr.Stroke ();  				cr.Restore ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.Underline:  				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.Stroke ();  				break;  			default:  				throw new InvalidOperationException ("Invalid text segment marker effect " + Effect + " not supported by this marker.");  			}
Magic Number,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The following statement contains a magic number: switch (Effect) {  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.WavedLine:  				cr.Rectangle (@from' 0' to - @from' editor.Allocation.Height);  				cr.Clip ();  				Pango.CairoHelper.ShowErrorUnderline (cr' metrics.TextRenderStartPosition' y + editor.LineHeight - height' editor.Allocation.Width' height);  				cr.ResetClip ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.DottedLine: 				cr.Save (); 				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.SetDash (new double [] { 2 * editor.Options.Zoom' 2 * editor.Options.Zoom }' 0);  				cr.Stroke ();  				cr.Restore ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.Underline:  				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.Stroke ();  				break;  			default:  				throw new InvalidOperationException ("Invalid text segment marker effect " + Effect + " not supported by this marker.");  			}
Magic Number,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The following statement contains a magic number: switch (Effect) {  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.WavedLine:  				cr.Rectangle (@from' 0' to - @from' editor.Allocation.Height);  				cr.Clip ();  				Pango.CairoHelper.ShowErrorUnderline (cr' metrics.TextRenderStartPosition' y + editor.LineHeight - height' editor.Allocation.Width' height);  				cr.ResetClip ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.DottedLine: 				cr.Save (); 				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.SetDash (new double [] { 2 * editor.Options.Zoom' 2 * editor.Options.Zoom }' 0);  				cr.Stroke ();  				cr.Restore ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.Underline:  				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.Stroke ();  				break;  			default:  				throw new InvalidOperationException ("Invalid text segment marker effect " + Effect + " not supported by this marker.");  			}
Magic Number,Mono.TextEditor,UnderlineTextSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextSegmentMarker.cs,InternalDraw,The following statement contains a magic number: switch (Effect) {  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.WavedLine:  				cr.Rectangle (@from' 0' to - @from' editor.Allocation.Height);  				cr.Clip ();  				Pango.CairoHelper.ShowErrorUnderline (cr' metrics.TextRenderStartPosition' y + editor.LineHeight - height' editor.Allocation.Width' height);  				cr.ResetClip ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.DottedLine: 				cr.Save (); 				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.SetDash (new double [] { 2 * editor.Options.Zoom' 2 * editor.Options.Zoom }' 0);  				cr.Stroke ();  				cr.Restore ();  				break;  			case MonoDevelop.Ide.Editor.TextSegmentMarkerEffect.Underline:  				cr.MoveTo (@from' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.LineTo (to' y + editor.LineHeight - editor.Options.Zoom - 0.5);  				cr.Stroke ();  				break;  			default:  				throw new InvalidOperationException ("Invalid text segment marker effect " + Effect + " not supported by this marker.");  			}
Magic Number,Mono.TextEditor,UnderlineMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UnderlineMarker.cs,InternalDraw,The following statement contains a magic number: double height = editor.LineHeight / 5;
Magic Number,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,DrawUnderline,The following statement contains a magic number: cr.DrawLine (color.Value' x1 + 0.5' y + editor.LineHeight - 1.5' x2 + 0.5' y + editor.LineHeight - 1.5);
Magic Number,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,DrawUnderline,The following statement contains a magic number: cr.DrawLine (color.Value' x1 + 0.5' y + editor.LineHeight - 1.5' x2 + 0.5' y + editor.LineHeight - 1.5);
Magic Number,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,DrawUnderline,The following statement contains a magic number: cr.DrawLine (color.Value' x1 + 0.5' y + editor.LineHeight - 1.5' x2 + 0.5' y + editor.LineHeight - 1.5);
Magic Number,Mono.TextEditor,UrlMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\UrlMarker.cs,DrawUnderline,The following statement contains a magic number: cr.DrawLine (color.Value' x1 + 0.5' y + editor.LineHeight - 1.5' x2 + 0.5' y + editor.LineHeight - 1.5);
Magic Number,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,TextEditorData,The following statement contains a magic number: LineHeight = 16;
Magic Number,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,ExtensibleTextEditor,The following statement contains a magic number: BookmarkMarker.DrawBookmarkFunc = delegate(Mono.TextEditor.MonoTextEditor editor' Cairo.Context cr' DocumentLine lineSegment' double x' double y' double width' double height) { 				if (!editor.Document.IsBookmarked (lineSegment)) 					return; 				cr.DrawImage ( 					editor'  					icon'  					Math.Floor (x + (width - icon.Width) / 2)'  					Math.Floor (y + (height - icon.Height) / 2) 				); 			};
Magic Number,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,ExtensibleTextEditor,The following statement contains a magic number: BookmarkMarker.DrawBookmarkFunc = delegate(Mono.TextEditor.MonoTextEditor editor' Cairo.Context cr' DocumentLine lineSegment' double x' double y' double width' double height) { 				if (!editor.Document.IsBookmarked (lineSegment)) 					return; 				cr.DrawImage ( 					editor'  					icon'  					Math.Floor (x + (width - icon.Width) / 2)'  					Math.Floor (y + (height - icon.Height) / 2) 				); 			};
Magic Number,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,HandleMenuHidden,The following statement contains a magic number: GLib.Timeout.Add (10' delegate { 				menu.Destroy (); 				return false; 			});
Magic Number,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,InsertTemplate,The following statement contains a magic number: GLib.Timeout.Add (10' delegate { 						if (!IsDestroyed) 							tle.UpdateTextLinks (); 						return false; 					});
Magic Number,MonoDevelop.SourceEditor,LanguageItemWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\LanguageItemWindow.cs,LanguageItemWindow,The following statement contains a magic number: var label = new MonoDevelop.Components.FixedWidthWrapLabel () { 				Wrap = Pango.WrapMode.WordChar' 				Indent = -20' 				BreakOnCamelCasing = true' 				BreakOnPunctuation = true' 				Markup = tooltip' 			};
Magic Number,MonoDevelop.SourceEditor,LanguageItemWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\LanguageItemWindow.cs,LanguageItemWindow,The following statement contains a magic number: this.BorderWidth = 3;
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,ResetRemoveMarker,The following statement contains a magic number: removeMarkerTimeout = GLib.Timeout.Add (2000' delegate { 				while (markersToRemove.Count > 0) { 					var _m = markersToRemove.Dequeue (); 					currentErrorMarkers.Remove (_m); 					if (_m.LineSegment != null) 						widget.TextEditor.Document.RemoveMarker (_m); 				} 				removeMarkerTimeout = 0; 				return false; 			});
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: x = (int)widget.TextEditor.TextViewMargin.XOffset + lw + 4;
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: switch (widgetExtension.HorizontalAlignment) { 			case HorizontalAlignment.LineLeft: 				x = (int)widget.TextEditor.TextViewMargin.XOffset; 				break; 			case HorizontalAlignment.LineRight: 				x = lineStart + lw + 4; 				break; 			case HorizontalAlignment.LineCenter: 				x = lineStart + (lw - size.Width) / 2; 				if (x < lineStart) 					x = lineStart; 				break; 			case HorizontalAlignment.Left: 				x = 0; 				break; 			case HorizontalAlignment.Right: 				break; 			case HorizontalAlignment.Center: 				break; 			case HorizontalAlignment.ViewLeft: 				break; 			case HorizontalAlignment.ViewRight: 				break; 			case HorizontalAlignment.ViewCenter: 				break; 			}
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: switch (widgetExtension.HorizontalAlignment) { 			case HorizontalAlignment.LineLeft: 				x = (int)widget.TextEditor.TextViewMargin.XOffset; 				break; 			case HorizontalAlignment.LineRight: 				x = lineStart + lw + 4; 				break; 			case HorizontalAlignment.LineCenter: 				x = lineStart + (lw - size.Width) / 2; 				if (x < lineStart) 					x = lineStart; 				break; 			case HorizontalAlignment.Left: 				x = 0; 				break; 			case HorizontalAlignment.Right: 				break; 			case HorizontalAlignment.Center: 				break; 			case HorizontalAlignment.ViewLeft: 				break; 			case HorizontalAlignment.ViewRight: 				break; 			case HorizontalAlignment.ViewCenter: 				break; 			}
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: switch (widgetExtension.VerticalAlignment) { 			case VerticalAlignment.LineTop: 				break; // the default 			case VerticalAlignment.LineBottom: 				y += lh - size.Height; 				break; 			case VerticalAlignment.LineCenter: 				y = y + (lh - size.Height) / 2; 				break; 			case VerticalAlignment.AboveLine: 				y -= size.Height; 				break; 			case VerticalAlignment.BelowLine: 				y += lh; 				break; 			}
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,AddWatch,The following statement contains a magic number: w.OffsetX = (int)widget.TextEditor.TextViewMargin.XOffset + lw + 4;
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnBreakpointAdded,The following statement contains a magic number: GLib.Timeout.Add (10' delegate { 				// Make sure this runs in the UI thread. 				if (!isDisposed) 					UpdateBreakpoints (); 				return false; 			});
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnBreakpointRemoved,The following statement contains a magic number: GLib.Timeout.Add (10' delegate { 				// Make sure this runs in the UI thread. 				if (!isDisposed) 					UpdateBreakpoints (); 				return false; 			});
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnBreakpointStatusChanged,The following statement contains a magic number: GLib.Timeout.Add (10' delegate { 				// Make sure this runs in the UI thread. 				if (!isDisposed) 					UpdateBreakpoints (true); 				return false; 			});
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,ShowTooltipWindow,The following statement contains a magic number: Mono.TextEditor.TooltipProvider.ShowAndPositionTooltip (TextEditor' tooltipWindow' p.X' p.Y' (int)tooltipWindow.Width' 0.5);
Magic Number,MonoDevelop.SourceEditor,MyExtendingLineMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Draw,The following statement contains a magic number: g.Translate (lineArea.X' lineArea.Y - editor.LineHeight * 2);
Magic Number,MonoDevelop.SourceEditor,MyExtendingLineMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetLineHeight,The following statement contains a magic number: return editor.LineHeight * 3;
Magic Number,MonoDevelop.SourceEditor,BracketMatcherTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,DrawBackground,The following statement contains a magic number: var bracketMatch = new Cairo.Rectangle (fromX + 0.5' metrics.LineYRenderStartPosition + 0.5' toX - fromX - 1' editor.LineHeight - 2);
Magic Number,MonoDevelop.SourceEditor,BracketMatcherTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,DrawBackground,The following statement contains a magic number: var bracketMatch = new Cairo.Rectangle (fromX + 0.5' metrics.LineYRenderStartPosition + 0.5' toX - fromX - 1' editor.LineHeight - 2);
Magic Number,MonoDevelop.SourceEditor,BracketMatcherTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,DrawBackground,The following statement contains a magic number: var bracketMatch = new Cairo.Rectangle (fromX + 0.5' metrics.LineYRenderStartPosition + 0.5' toX - fromX - 1' editor.LineHeight - 2);
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,SourceEditorWidget,The following statement contains a magic number: vbox.SetSizeRequest (32' 32);
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,SourceEditorWidget,The following statement contains a magic number: vbox.SetSizeRequest (32' 32);
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,Split,The following statement contains a magic number: splitContainer.Position = (vSplit ? vbox.Allocation.Height : vbox.Allocation.Width) / 2 - 1;
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,EllipsizeMiddle,The following statement contains a magic number: int leftOffset = (truncLen - delimiter.Length) / 2;
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowFileChangedWarning,The following statement contains a magic number: messageBar.SetMessageLabel (GettextCatalog.GetString ( 					"<b>The file \"{0}\" has been changed outside of {1}.</b>\n" + 					"Do you want to keep your changes' or reload the file from disk?"' 					EllipsizeMiddle (Document.FileName' 50)' BrandingService.ApplicationName));
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: hbox.Spacing = 8;
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: okButton.WidthRequest = 60;
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: const int verticalPadding = 2;
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: const int containerPadding = 8;
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: GLib.Timeout.Add (100' delegate { 				combo.QueueResize (); 				return false; 			});
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: AddOverlay (incorrectEolMessage' () => { 				return okButton.SizeRequest ().Width + 							   combo.SizeRequest ().Width + 							   image.SizeRequest ().Width + 							   w + 							   hbox.Spacing * 4 + 							   containerPadding * 2; 			});
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: AddOverlay (incorrectEolMessage' () => { 				return okButton.SizeRequest ().Width + 							   combo.SizeRequest ().Width + 							   image.SizeRequest ().Width + 							   w + 							   hbox.Spacing * 4 + 							   containerPadding * 2; 			});
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: okButton.Clicked += async delegate { 				switch (combo.Active) { 				case 0: 					ConvertLineEndings (); 					view.DocumentController.ShowNotification = false; 					await view.Save (fileName' view.SourceEncoding); 					break; 				case 1: 					FileRegistry.ConvertLineEndingsInAllFiles (); 					break; 				case 2: 					UseIncorrectMarkers = true; 					view.DocumentController.ShowNotification = false; 					break; 				case 3: 					FileRegistry.IgnoreLineEndingsInAllFiles (); 					break; 				} 				RemoveMessageBar (); 			};
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following statement contains a magic number: okButton.Clicked += async delegate { 				switch (combo.Active) { 				case 0: 					ConvertLineEndings (); 					view.DocumentController.ShowNotification = false; 					await view.Save (fileName' view.SourceEncoding); 					break; 				case 1: 					FileRegistry.ConvertLineEndingsInAllFiles (); 					break; 				case 2: 					UseIncorrectMarkers = true; 					view.DocumentController.ShowNotification = false; 					break; 				case 3: 					FileRegistry.IgnoreLineEndingsInAllFiles (); 					break; 				} 				RemoveMessageBar (); 			};
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The following statement contains a magic number: this.TextEditor.AddAnimatedWidget (searchAndReplaceWidgetFrame' ANIMATION_DURATION' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' TextEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: TextEditor.AddAnimatedWidget (gotoLineNumberWidgetFrame' ANIMATION_DURATION' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Mono.TextEditor.Theatrics.Blocking.Downstage' this.TextEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,HandleViewTextEditorhandleSizeAllocated,The following statement contains a magic number: int newX = textEditor.Allocation.Width - Allocation.Width - 8;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,HandleViewTextEditorhandleSizeAllocated,The following statement contains a magic number: searchEntry.WidthRequest = textEditor.Allocation.Width / 3;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: searchEntry.WidthRequest = textEditor.Allocation.Width / 3;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: resultInformLabelEventBox.BorderWidth = 2;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: resultInformLabel.Xpad = 2;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.table = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.table = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.table.BorderWidth = ((uint)(4));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w2.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.buttonSearchBackward.Relief = ((global::Gtk.ReliefStyle)(2));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.buttonSearchForward.Relief = ((global::Gtk.ReliefStyle)(2));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w7.Position = 2;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.closeButton.Relief = ((global::Gtk.ReliefStyle)(2));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w9.Position = 3;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w10.RightAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w10.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.buttonReplace.Relief = ((global::Gtk.ReliefStyle)(2));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.buttonReplaceAll.Relief = ((global::Gtk.ReliefStyle)(2));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: this.hbox3.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w17.Position = 2;
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w18.BottomAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w18.RightAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,Build,The following statement contains a magic number: w18.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,HandleViewTextEditorhandleSizeAllocated,The following statement contains a magic number: int newX = textEditor.Allocation.Width - this.Allocation.Width - 8;
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,HandleViewTextEditorhandleSizeAllocated,The following statement contains a magic number: this.entryLineNumber.WidthRequest = textEditor.Allocation.Width / 4;
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,Build,The following statement contains a magic number: this.buttonGoToLine.Relief = ((global::Gtk.ReliefStyle)(2));
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,Build,The following statement contains a magic number: this.closeButton.Relief = ((global::Gtk.ReliefStyle)(2));
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,Build,The following statement contains a magic number: w5.Position = 2;
Magic Number,MonoDevelop.SourceEditor,CompileErrorTooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\CompileErrorTooltipProvider.cs,GetRequiredPosition,The following statement contains a magic number: requiredWidth = win.SetMaxWidth (win.Screen.Width / 4);
Magic Number,MonoDevelop.SourceEditor,CompileErrorTooltipProvider,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\CompileErrorTooltipProvider.cs,GetRequiredPosition,The following statement contains a magic number: xalign = 0.5;
Magic Number,MonoDevelop.SourceEditor,PinnedWatchWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\PinnedWatchWidget.cs,OnTreeSizeChanged,The following statement contains a magic number: const int maxHeight = 240;
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,OnBeginPrint,The following statement contains a magic number: lineHeight = Math.Ceiling (0.5 + (metrics.Ascent + metrics.Descent) / Pango.Scale.PangoScale);
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.MoveTo ((pageWidth - w) / 2' yPos);
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,Subst,The following statement contains a magic number: sb.Replace ("%F"' SourceEditorWidget.EllipsizeMiddle (filename' 60));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.MoveTo ((pageWidth - w) / 2' yPos);
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintSettings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,SourceEditorPrintSettings,The following statement contains a magic number: Font.Size = (int)(Font.Size * 0.5);
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintSettings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,SourceEditorPrintSettings,The following statement contains a magic number: HeaderSeparatorWeight = FooterSeparatorWeight = 0.5;
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintSettings,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,SourceEditorPrintSettings,The following statement contains a magic number: HeaderPadding = FooterPadding = 6;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,BlendSelection,The following statement contains a magic number: const double bubbleAlpha = 0.1;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,Highlight,The following statement contains a magic number: const double bubbleAlpha = 0.7;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,GetErrorCountBounds,The following statement contains a magic number: return Tuple.Create (ew + 10' eh);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: double roundingRadius = editor.LineHeight / 2 - 1;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: var paintWidth = (width - errorCounterWidth - editor.LineHeight + 4);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: var minWidth = Math.Max (25' errorCounterWidth) * editor.Options.Zoom;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: bubbleDrawY = y + 2;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: var errorCounterHeight = bubbleHeight - 2;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: var errorCounterY = Math.Round (y + (bubbleHeight - errorCounterHeight) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.RoundedRectangle ( 					errorCounterX'  					errorCounterY'  					errorCounterWidth'  					errorCounterHeight'  					editor.LineHeight / 2 - 2 				);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.RoundedRectangle ( 					errorCounterX'  					errorCounterY'  					errorCounterWidth'  					errorCounterHeight'  					editor.LineHeight / 2 - 2 				);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: lg.AddColorStop (1' CounterColor.AddLight (-0.1));
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: var tx = Math.Round (errorCounterX + (2 + errorCounterWidth - ew) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: var tx = Math.Round (errorCounterX + (2 + errorCounterWidth - ew) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: var ty = Math.Round (errorCounterY + (-1 + errorCounterHeight - eh) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: double radius = 2 * editor.Options.Zoom;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += 1 * editor.Options.Zoom + Math.Ceiling((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += 1 * editor.Options.Zoom + Math.Ceiling((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += 1 * editor.Options.Zoom + Math.Ceiling((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += 1 * editor.Options.Zoom + Math.Ceiling((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Arc (sx' y + bubbleHeight / 2' radius' 0' Math.PI * 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Arc (sx' y + bubbleHeight / 2' radius' 0' Math.PI * 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += radius * 2 + spacing;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: i < 3
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawIconMarginBackground,The following statement contains a magic number: cr.MoveTo (metrics.Right - 0.5' metrics.Y);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawIconMarginBackground,The following statement contains a magic number: cr.LineTo (metrics.Right - 0.5' metrics.Bottom);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawIconMarginBackground,The following statement contains a magic number: cr.SetSourceRGBA (color.R' color.G' color.B' 0.5);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The following statement contains a magic number: var tx = Math.Round (metrics.X + (metrics.Width - MessageBubbleCache.errorPixbuf.Width) / 2) - 1;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The following statement contains a magic number: var ty = Math.Floor (metrics.Y + (metrics.Height - MessageBubbleCache.errorPixbuf.Height) / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: var max = Math.Round (editor.TextViewMargin.XOffset + editor.LineHeight / 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: endX = startX + 2;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: double y2 = y + 0.5;
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: g.MoveTo (new Cairo.PointD (divider + 0.5' y2));
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: g.LineTo (new Cairo.PointD (divider + 0.5' y2Bottom));
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: g.MoveTo ( 						metrics.TextRenderStartPosition + editor.TextViewMargin.TextStartPosition + pos.X / Pango.Scale.PangoScale' 						y + editor.LineHeight - 3 						);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: g.RelLineTo (3' 3);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: g.RelLineTo (3' 3);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: g.RelLineTo (-6' 0);
Magic Number,MonoDevelop.SourceEditor,MessageBubbleCache,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The following statement contains a magic number: hoverTimeout = GLib.Timeout.Add (200' delegate { 				CurrentSelectedTextMarker = marker; 				editor.QueueDraw ();  				DestroyPopoverWindow ();  				hoverTimeout = 0; 				if (marker.Layouts == null || marker.Layouts.Count < 2 && !isReduced) { 					return false; 				}  				popoverWindow = new MessageBubblePopoverWindow (this' marker); 				popoverWindow.ShowWindowShadow = false; 				popoverWindow.ShowPopup (editor' new Gdk.Rectangle ((int)(bubbleX + editor.TextViewMargin.XOffset)' (int)bubbleY' (int)bubbleWidth' (int)editor.LineHeight)' PopupPosition.Top);  				return false; 			});
Magic Number,MonoDevelop.SourceEditor,MessageBubbleCache,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The following statement contains a magic number: hoverTimeout = GLib.Timeout.Add (200' delegate { 				CurrentSelectedTextMarker = marker; 				editor.QueueDraw ();  				DestroyPopoverWindow ();  				hoverTimeout = 0; 				if (marker.Layouts == null || marker.Layouts.Count < 2 && !isReduced) { 					return false; 				}  				popoverWindow = new MessageBubblePopoverWindow (this' marker); 				popoverWindow.ShowWindowShadow = false; 				popoverWindow.ShowPopup (editor' new Gdk.Rectangle ((int)(bubbleX + editor.TextViewMargin.XOffset)' (int)bubbleY' (int)bubbleWidth' (int)editor.LineHeight)' PopupPosition.Top);  				return false; 			});
Magic Number,MonoDevelop.SourceEditor,MessageBubbleCache,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,HandleLeaveNotifyEvent,The following statement contains a magic number: leaveDestroyTimeout = GLib.Timeout.Add (100' delegate { 				DestroyPopoverWindow (); 				leaveDestroyTimeout = 0; 				return false; 			});
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,MessageBubblePopoverWindow,The following statement contains a magic number: Theme.ArrowLength = 7;
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,OnSizeRequested,The following statement contains a magic number: double y = verticalTextBorder * 2 - verticalTextSpace + (MonoDevelop.Core.Platform.IsWindows ? 10 : 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,OnSizeRequested,The following statement contains a magic number: double y = verticalTextBorder * 2 - verticalTextSpace + (MonoDevelop.Core.Platform.IsWindows ? 10 : 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,OnSizeRequested,The following statement contains a magic number: double y = verticalTextBorder * 2 - verticalTextSpace + (MonoDevelop.Core.Platform.IsWindows ? 10 : 2);
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = Math.Max (w + textBorder * 2' requisition.Width);
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,OnSizeRequested,The following statement contains a magic number: y += h + verticalTextSpace - 3;
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,OnDrawContent,The following statement contains a magic number: g.Translate (textBorder' y + verticalTextSpace / 2 + Math.Max (0' (h - icon.Height) / 2));
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,OnDrawContent,The following statement contains a magic number: g.Translate (textBorder' y + verticalTextSpace / 2 + Math.Max (0' (h - icon.Height) / 2));
Magic Number,MonoDevelop.SourceEditor,MessageBubblePopoverWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,OnDrawContent,The following statement contains a magic number: g.Translate (showBulletedList ? textBorder + iconTextSpacing + icon.Width: textBorder' y + verticalTextSpace / 2);
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = Math.Min (SizeFunc ()' textEditor.Allocation.Width - border * 2);
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,AdjustPositionInEditor,The following statement contains a magic number: textEditor.MoveTopLevelWidget (this' (textEditor.Allocation.Width - alloc.Width) / 2' textEditor.Allocation.Height - alloc.Height - 8);
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,AdjustPositionInEditor,The following statement contains a magic number: textEditor.MoveTopLevelWidget (this' (textEditor.Allocation.Width - alloc.Width) / 2' textEditor.Allocation.Height - alloc.Height - 8);
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,OnExposeEvent,The following statement contains a magic number: cr.RoundedRectangle (0' 0' Allocation.Width' Allocation.Height' 3);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = requisition.Height = 16;
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnExposeEvent,The following statement contains a magic number: DrawCloseButton (cr' new Gdk.Point (Allocation.X + Allocation.Width / 2' Allocation.Y + Allocation.Height / 2)' hovered' 1.0' 0);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnExposeEvent,The following statement contains a magic number: DrawCloseButton (cr' new Gdk.Point (Allocation.X + Allocation.Width / 2' Allocation.Y + Allocation.Height / 2)' hovered' 1.0' 0);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: double radius = 6;
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineWidth = 2;
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3);
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3);
Magic Number,MonoDevelop.SourceEditor,UsageSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UsageSegmentMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from - 0.5' y + 0.5' to - @from + 1' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,UsageSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UsageSegmentMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from - 0.5' y + 0.5' to - @from + 1' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,UsageSegmentMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UsageSegmentMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from - 0.5' y + 0.5' to - @from + 1' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The following statement contains a magic number: double x = Math.Floor (metrics.Margin.XOffset - borderLineWidth / 2);
Magic Number,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The following statement contains a magic number: double y = Math.Floor (metrics.Y + (metrics.Height - size) / 2);
Magic Number,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The following statement contains a magic number: var deltaX = size / 2 - DebugIcon.Width / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The following statement contains a magic number: var deltaX = size / 2 - DebugIcon.Width / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The following statement contains a magic number: var deltaX = size / 2 - DebugIcon.Width / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The following statement contains a magic number: var deltaY = size / 2 - DebugIcon.Height / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The following statement contains a magic number: var deltaY = size / 2 - DebugIcon.Height / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,DebugIconMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawForeground,The following statement contains a magic number: var deltaY = size / 2 - DebugIcon.Height / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,DebugTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from + 2.5' y + 0.5' to - @from' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,DebugTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from + 2.5' y + 0.5' to - @from' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,DebugTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\DebugTextMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from + 2.5' y + 0.5' to - @from' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,GrayOutMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\GrayOutMarker.cs,ChangeForeColor,The following statement contains a magic number: color = new Cairo.Color ( 				color.R' 				color.G' 				color.B' 				0.6 			);
Magic Number,MonoDevelop.SourceEditor,SmartTagMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarker.cs,Draw,The following statement contains a magic number: cr.SetSourceColor ((HslColor.Brightness (SyntaxHighlightingService.GetColor (editor.EditorTheme' EditorThemeColors.Background)) < 0.5 ? Ide.Gui.Styles.Editor.SmartTagMarkerColorDark : Ide.Gui.Styles.Editor.SmartTagMarkerColorLight).ToCairoColor ());
Magic Number,MonoDevelop.SourceEditor,SmartTagMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarker.cs,IsInsideSmartTag,The following statement contains a magic number: return x - x2 >= 0 * editor.Options.Zoom && 				x - x2 < tagMarkerWidth * editor.Options.Zoom && 				y - y2 < (editor.LineHeight / 2) * editor.Options.Zoom;
Magic Number,MonoDevelop.SourceEditor,AsmLineMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\AsmLineMarker.cs,GetStyle,The following statement contains a magic number: st.Foreground = new Cairo.Color (125' 125' 125);
Magic Number,MonoDevelop.SourceEditor,AsmLineMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\AsmLineMarker.cs,GetStyle,The following statement contains a magic number: st.Foreground = new Cairo.Color (125' 125' 125);
Magic Number,MonoDevelop.SourceEditor,AsmLineMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\AsmLineMarker.cs,GetStyle,The following statement contains a magic number: st.Foreground = new Cairo.Color (125' 125' 125);
Magic Number,MonoDevelop.SourceEditor,UnitTestMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UnitTestMarker.cs,DrawForeground,The following statement contains a magic number: cr.DrawImage (editor' statusIcon' Math.Truncate (metrics.X + metrics.Width / 2 - statusIcon.Width / 2)' Math.Truncate (metrics.Y + metrics.Height / 2 - statusIcon.Height / 2));
Magic Number,MonoDevelop.SourceEditor,UnitTestMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UnitTestMarker.cs,DrawForeground,The following statement contains a magic number: cr.DrawImage (editor' statusIcon' Math.Truncate (metrics.X + metrics.Width / 2 - statusIcon.Width / 2)' Math.Truncate (metrics.Y + metrics.Height / 2 - statusIcon.Height / 2));
Magic Number,MonoDevelop.SourceEditor,UnitTestMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UnitTestMarker.cs,DrawForeground,The following statement contains a magic number: cr.DrawImage (editor' statusIcon' Math.Truncate (metrics.X + metrics.Width / 2 - statusIcon.Width / 2)' Math.Truncate (metrics.Y + metrics.Height / 2 - statusIcon.Height / 2));
Magic Number,MonoDevelop.SourceEditor,UnitTestMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\UnitTestMarker.cs,DrawForeground,The following statement contains a magic number: cr.DrawImage (editor' statusIcon' Math.Truncate (metrics.X + metrics.Width / 2 - statusIcon.Width / 2)' Math.Truncate (metrics.Y + metrics.Height / 2 - statusIcon.Height / 2));
Magic Number,MonoDevelop.SourceEditor,SearchInSelectionMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchInSelectionMarker.cs,DrawBackground,The following statement contains a magic number: cr.SetSourceRGB ((c1.R + c2.R) / 2' (c1.G + c2.G) / 2' (c1.B + c2.B) / 2);
Magic Number,MonoDevelop.SourceEditor,SearchInSelectionMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchInSelectionMarker.cs,DrawBackground,The following statement contains a magic number: cr.SetSourceRGB ((c1.R + c2.R) / 2' (c1.G + c2.G) / 2' (c1.B + c2.B) / 2);
Magic Number,MonoDevelop.SourceEditor,SearchInSelectionMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchInSelectionMarker.cs,DrawBackground,The following statement contains a magic number: cr.SetSourceRGB ((c1.R + c2.R) / 2' (c1.G + c2.G) / 2' (c1.B + c2.B) / 2);
Magic Number,MonoDevelop.SourceEditor,DefaultAutoInsertBracketHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DefaultAutoInsertBracketHandler.cs,Handle,The following statement contains a magic number: var stack = editor.SyntaxHighlighting.GetScopeStackAsync (Math.Max (0' editor.CaretOffset - 2)' CancellationToken.None).WaitAndGetResult (CancellationToken.None);
Magic Number,MonoDevelop.SourceEditor,DefaultAutoInsertBracketHandler,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DefaultAutoInsertBracketHandler.cs,GetTextWithoutCommentsAndStrings,The following statement contains a magic number: switch (ch) { 				case '\r': 				case '\n': 					isInLineComment = false; 					break; 				case '/': 					if (isInBlockComment) { 						if (pos > 0 && doc.GetCharAt (pos - 1) == '*') 							isInBlockComment = false; 					} else if (!isInString && !isInChar && pos + 1 < doc.Length) { 						char nextChar = doc.GetCharAt (pos + 1); 						if (nextChar == '/') 							isInLineComment = true; 						if (!isInLineComment && nextChar == '*') 							isInBlockComment = true; 					} 					break; 				case '"': 					if (!(isInChar || isInLineComment || isInBlockComment)) 						if (!isInString || escaping != 1) 							isInString = !isInString; 					break; 				case '\'': 					if (!(isInString || isInLineComment || isInBlockComment)) 						if (!isInChar || escaping != 1) 							isInChar = !isInChar; 					break; 				case '\\': 					if (escaping != 1) 						escaping = 2; 					break; 				default: 					if (!(isInString || isInChar || isInLineComment || isInBlockComment)) 						yield return ch; 					break; 				}
Magic Number,MonoDevelop.SourceEditor,LineSeparatorMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\LineSeparatorMarker.cs,Draw,The following statement contains a magic number: cr.MoveTo (metrics.TextRenderStartPosition' y + metrics.LineHeight - 1.5);
Magic Number,MonoDevelop.SourceEditor,LineSeparatorMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\LineSeparatorMarker.cs,Draw,The following statement contains a magic number: cr.LineTo (editor.Allocation.Width' y + metrics.LineHeight - 1.5);
Magic Number,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,DisjointWithPadding,The following statement contains a magic number: double left = location.Left + 0.1;
Magic Number,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,DisjointWithPadding,The following statement contains a magic number: double top = location.Top + 0.1;
Magic Number,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,DisjointWithPadding,The following statement contains a magic number: double width = location.Right - 0.1 - left;
Magic Number,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,DisjointWithPadding,The following statement contains a magic number: double height = location.Bottom - 0.1 - top;
Magic Number,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,ContainsWithPadding,The following statement contains a magic number: return (outer.Left - 0.01 <= inner.Left) && (inner.Right <= outer.Right + 0.01) &&                    (outer.Top - 0.01 <= inner.Top) && (inner.Bottom <= outer.Bottom + 0.01);
Magic Number,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,ContainsWithPadding,The following statement contains a magic number: return (outer.Left - 0.01 <= inner.Left) && (inner.Right <= outer.Right + 0.01) &&                    (outer.Top - 0.01 <= inner.Top) && (inner.Bottom <= outer.Bottom + 0.01);
Magic Number,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,ContainsWithPadding,The following statement contains a magic number: return (outer.Left - 0.01 <= inner.Left) && (inner.Right <= outer.Right + 0.01) &&                    (outer.Top - 0.01 <= inner.Top) && (inner.Bottom <= outer.Bottom + 0.01);
Magic Number,MonoDevelop.SourceEditor,PopupAgent,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfView\PopupAgent.cs,ContainsWithPadding,The following statement contains a magic number: return (outer.Left - 0.01 <= inner.Left) && (inner.Right <= outer.Right + 0.01) &&                    (outer.Top - 0.01 <= inner.Top) && (inner.Bottom <= outer.Bottom + 0.01);
Magic Number,MonoDevelop.SourceEditor,BackgroundTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\BackgroundTextMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from - 0.5' y + 0.5' to - @from + 1' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,BackgroundTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\BackgroundTextMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from - 0.5' y + 0.5' to - @from + 1' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,BackgroundTextMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\BackgroundTextMarker.cs,DrawBackground,The following statement contains a magic number: cr.RoundedRectangle (@from - 0.5' y + 0.5' to - @from + 1' editor.LineHeight - 1' 2);
Magic Number,MonoDevelop.SourceEditor,ClipboardRingService,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ClipboardRingService.cs,AddToClipboardRing,The following statement contains a magic number: LoggingService.LogWarning ($"Item '{EscapeAndTruncateName(text' 20)}...' exceeeds clipboard ring size limit");
Magic Number,MonoDevelop.SourceEditor,ClipboardToolboxNode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ClipboardRingService.cs,CreateTooltipWindow,The following statement contains a magic number: txt = txt.Substring (0' 4096) + "...";
Magic Number,MonoDevelop.SourceEditor,ClipboardToolboxNode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ClipboardRingService.cs,CreateTooltipWindow,The following statement contains a magic number: txt.Length > 4096
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: double x = Math.Floor (metrics.Margin.XOffset - borderLineWidth / 2);
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: double y = Math.Floor (metrics.Y + (metrics.Height - size) / 2);
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: var deltaX = size / 2 - icon.Width / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: var deltaX = size / 2 - icon.Width / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: var deltaX = size / 2 - icon.Width / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: var deltaY = size / 2 - icon.Height / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: var deltaY = size / 2 - icon.Height / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: var deltaY = size / 2 - icon.Height / 2 + 0.5f;
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: const int triangleWidth = 8;
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: const int triangleHeight = 4;
Magic Number,MonoDevelop.SourceEditor,SmartTagMarginMarker,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\TextMarker\SmartTagMarginMarker.cs,DrawForeground,The following statement contains a magic number: cr.LineTo (metrics.X + metrics.Width - triangleWidth / 2' metrics.Y + metrics.Height);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,BehaviorPanel,The following statement contains a magic number: indentationCombobox.InsertText (2' GettextCatalog.GetString ("Smart"));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,CreatePanelWidget,The following statement contains a magic number: indentationCombobox.Active = Math.Min (2' (int)DefaultSourceEditorOptions.Instance.IndentStyle);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.alignment3 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.alignment3 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.alignment3.LeftPadding = ((uint)(12));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.vbox4.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w3.Padding = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w7.Position = 3;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w8.Position = 4;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w9.Position = 5;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w10.Position = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w13.Position = 2;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.GtkAlignment.LeftPadding = ((uint)(12));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w18.Position = 2;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w20.Position = 3;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w21.Position = 4;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.alignment4 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.alignment4 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.alignment4.LeftPadding = ((uint)(12));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.vbox5.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: this.hbox3.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,Build,The following statement contains a magic number: w26.Position = 5;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,GeneralOptionsPanel,The following statement contains a magic number: wordWrapVisualGlyphsCheckBox.MarginLeft = 18;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment2 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment2 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment2.LeftPadding = ((uint)(12));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.vbox4.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.hbox3.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: w2.Padding = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: w9.Position = 2;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment3 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment3 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment3.LeftPadding = ((uint)(12));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.vbox5.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: w12.Position = 2;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: w14.Position = 3;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: w15.Position = 4;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment4 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment4 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment4.LeftPadding = ((uint)(12));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: this.vbox6.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,GeneralOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\GeneralOptionsPanel.cs,Build,The following statement contains a magic number: w19.Position = 5;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,ImageDataFunc,The following statement contains a magic number: var isError = (bool)tree_model.GetValue (iter' 2);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,HandleStyleTreeviewSelectionChanged,The following statement contains a magic number: var isError = (bool)styleStore.GetValue (iter' 2);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The following statement contains a magic number: this.vbox5.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The following statement contains a magic number: this.textview1.WrapMode = ((global::Gtk.WrapMode)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The following statement contains a magic number: this.textview1.PixelsBelowLines = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The following statement contains a magic number: this.textview1.PixelsInsideWrap = 3;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,Build,The following statement contains a magic number: w8.Position = 2;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.alignment1 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.alignment1 = new global::Gtk.Alignment(0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.alignment1.LeftPadding = ((uint)(12));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.vbox3.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w4.Position = 2;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w5.Position = 3;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w6.Position = 4;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w7.Position = 5;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w8.Position = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w9.Position = 7;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w10.Position = 8;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table(((uint)(4))' ((uint)(4))' false);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table(((uint)(4))' ((uint)(4))' false);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w11.TopAttach = ((uint)(3));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w11.BottomAttach = ((uint)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w11.RightAttach = ((uint)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w11.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w11.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w12.BottomAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w12.RightAttach = ((uint)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w12.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w12.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w13.TopAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w13.BottomAttach = ((uint)(3));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w13.RightAttach = ((uint)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w13.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w13.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w14.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w14.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w15.RightAttach = ((uint)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w15.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w15.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,Build,The following statement contains a magic number: w16.Position = 9;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.BorderWidth = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table(((uint)(3))' ((uint)(2))' false);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table(((uint)(3))' ((uint)(2))' false);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w2.RightAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w3.TopAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w3.BottomAttach = ((uint)(3));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w3.RightAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w3.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w3.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w4.BottomAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w4.RightAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w4.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w5.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w5.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w6.BottomAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w6.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w6.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w7.TopAttach = ((uint)(2));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(3));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w7.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w9.Spacing = 10;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w9.BorderWidth = ((uint)(5));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: w9.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget(this.buttonCancel' -6);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.AddActionWidget(this.buttonOk' -5);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.DefaultWidth = 393;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,NewColorShemeDialog,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\NewColorShemeDialog.cs,Build,The following statement contains a magic number: this.DefaultHeight = 148;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment3 = new global::Gtk.Alignment (0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment3 = new global::Gtk.Alignment (0.5F' 0.5F' 1F' 1F);
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.alignment3.LeftPadding = ((uint)(12));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.vbox5.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.hbox6.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w2.Padding = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.hbox4.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w5.Padding = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w7.Position = 2;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.hbox5.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w8.Padding = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w10.Position = 3;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w11.Position = 4;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w12.Position = 5;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w13.Padding = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w15.Position = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: this.hbox3.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w16.Padding = ((uint)(6));
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,Build,The following statement contains a magic number: w18.Position = 7;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionAppearancePanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionAppearancePanel.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionCharactersPanel,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionCharactersPanel.cs,Initialize,The following statement contains a magic number: this.HeightRequest = 400;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,UpdateAccessibility,The following statement contains a magic number: updateAccessibilityId = GLib.Timeout.Add (5000' UpdateAccessibilityTimer);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,OnButtonPressEvent,The following statement contains a magic number: evnt.Button == 3
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,GotoBottom,The following statement contains a magic number: VAdjustment.Value = Math.Max (VAdjustment.Lower' VAdjustment.Upper - VAdjustment.PageSize / 2);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,Minimpap,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskMiniMapMode.cs,RequestRedraw,The following statement contains a magic number: redrawTimeout = GLib.Timeout.Add (450' delegate { 					if (curUpdate != null) { 						curUpdate.RemoveHandler (); 						curUpdate = null; 					} 					if (backgroundPixbuf != null) 						curUpdate = new BgBufferUpdate (this); 					redrawTimeout = 0; 					return false; 				});
Magic Number,MonoDevelop.SourceEditor.QuickTasks,Minimpap,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskMiniMapMode.cs,MovePosition,The following statement contains a magic number: double position = vadjustment.Upper * (Math.Min (GetBufferYOffset () + y' ph) / (double)ph) - vadjustment.PageSize / 2;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,Minimpap,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskMiniMapMode.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = 150;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,Minimpap,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskMiniMapMode.cs,OnExposeEvent,The following statement contains a magic number: c.A = 0.2;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,BgBufferUpdate,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskMiniMapMode.cs,BgBufferUpdater,The following statement contains a magic number: i < 25 && curLine < maxLine
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskOverviewMode,The following statement contains a magic number: fadeInStage.UpdateFrequency = fadeOutStage.UpdateFrequency = 10;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,ShowPreview,The following statement contains a magic number: line = Math.Max (1' line - 2);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,ShowPreview,The following statement contains a magic number: int lastLine = Math.Min (TextEditor.LineCount' line + 5);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,GetHoverTask,The following statement contains a magic number: Math.Abs (ty - y) < 3
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,PositionPreviewWindow,The following statement contains a magic number: int x = ox - 4 - alloc.Width;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,PositionPreviewWindow,The following statement contains a magic number: x = ox + parentStrip.Allocation.Width + 4;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,PositionPreviewWindow,The following statement contains a magic number: int y = oy + my - alloc.Height / 2;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnEnterNotifyEvent,The following statement contains a magic number: fadeTimeOutHandler = GLib.Timeout.Add (250' delegate { 					StartFadeInAnimation (); 					fadeTimeOutHandler = 0; 					return false; 				});
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,MovePosition,The following statement contains a magic number: double position = ((y - IndicatorHeight) / (Allocation.Height - IndicatorHeight)) * vadjustment.Upper - vadjustment.PageSize / 2;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,GetSliderCenter,The following statement contains a magic number: var fraction = (vadjustment.Value + vadjustment.PageSize / 2) / (vadjustment.Upper - vadjustment.Lower);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawIndicator,The following statement contains a magic number: cr.DrawImage (this' img' Math.Round ((Allocation.Width - img.Width) / 2)' -1);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = MonoDevelop.Core.Platform.IsWindows ? win81ScrollbarWidth : 15;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,YToLine,The following statement contains a magic number: var line = 0.5 + (y - IndicatorHeight) / (Allocation.Height - IndicatorHeight) * (double)(TextEditor.GetTextEditorData ().VisibleLineCount);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawCaret,The following statement contains a magic number: var w = Math.Floor (Allocation.Width * 0.618);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawCaret,The following statement contains a magic number: cr.Rectangle (Allocation.Width - w' drawnCaretY' w' 2);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBreakpoints,The following statement contains a magic number: int r = 4;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBreakpoints,The following statement contains a magic number: cr.Rectangle (0' y - r / 2' r' r);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: cr.MoveTo (0' y - 3);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: cr.LineTo (5' y);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: cr.LineTo (0' y + 3);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: cr.LineTo (0' y - 3);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: cr.Rectangle (1' y - 1' Allocation.Width - 1' 2);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawLeftBorder,The following statement contains a magic number: cr.MoveTo (0.5' 0);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawLeftBorder,The following statement contains a magic number: cr.LineTo (0.5' Allocation.Height);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawLeftBorder,The following statement contains a magic number: col.Light *= 0.95;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,GetBarDimensions,The following statement contains a magic number: w = MonoDevelop.Core.Platform.IsWindows ? alloc.Width : 8;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,GetBarDimensions,The following statement contains a magic number: const int minBarHeight = 16;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The following statement contains a magic number: c = AddAlpha (SyntaxHighlightingService.GetColor (TextEditor.EditorTheme' EditorThemeColors.Background)' c' 0.5d);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The following statement contains a magic number: Math.Abs (HslColor.Brightness (color) - HslColor.Brightness (SyntaxHighlightingService.GetColor (TextEditor.EditorTheme' EditorThemeColors.Background))) < 0.1
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The following statement contains a magic number: cr.Rectangle (barPadding' state.SearchResultIndicators[i]' Allocation.Width - barPadding * 2' 2);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The following statement contains a magic number: cr.Rectangle (barPadding' state.SearchResultIndicators[i]' Allocation.Width - barPadding * 2' 2);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: switch (currentFocus) { 					case FocusWidget.Indicator: 						cr.LineWidth = 1.0;  						cr.SetSourceColor (Styles.FocusColor.ToCairoColor ()); 						cr.Rectangle (1' 1' Allocation.Width - 2' Allocation.Width - 2); 						cr.SetDash (new double [] { 1' 1 }' 0.5); 						cr.Stroke (); 						break;  					case FocusWidget.Tasks: 						break;  					case FocusWidget.Usages: 						break; 					}
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: switch (currentFocus) { 					case FocusWidget.Indicator: 						cr.LineWidth = 1.0;  						cr.SetSourceColor (Styles.FocusColor.ToCairoColor ()); 						cr.Rectangle (1' 1' Allocation.Width - 2' Allocation.Width - 2); 						cr.SetDash (new double [] { 1' 1 }' 0.5); 						cr.Stroke (); 						break;  					case FocusWidget.Tasks: 						break;  					case FocusWidget.Usages: 						break; 					}
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: switch (currentFocus) { 					case FocusWidget.Indicator: 						cr.LineWidth = 1.0;  						cr.SetSourceColor (Styles.FocusColor.ToCairoColor ()); 						cr.Rectangle (1' 1' Allocation.Width - 2' Allocation.Width - 2); 						cr.SetDash (new double [] { 1' 1 }' 0.5); 						cr.Stroke (); 						break;  					case FocusWidget.Tasks: 						break;  					case FocusWidget.Usages: 						break; 					}
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskAccessible,The following statement contains a magic number: var frameInParent = new Gdk.Rectangle (0' (int)y' mode.Allocation.Width' 2);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskAccessible,The following statement contains a magic number: int halfParentHeight = strip.Allocation.Height / 2;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskAccessible,The following statement contains a magic number: Accessible.FrameInParent = new Gdk.Rectangle (0' (int)y' mode.Allocation.Width' 2);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskAccessible,The following statement contains a magic number: var y = mode.GetYPosition (line) - 3.0;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskAccessible,The following statement contains a magic number: var frameInParent = new Gdk.Rectangle (0' (int)y' 5' 6);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskAccessible,The following statement contains a magic number: var frameInParent = new Gdk.Rectangle (0' (int)y' 5' 6);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskAccessible,The following statement contains a magic number: int halfParentHeight = strip.Allocation.Height / 2;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskAccessible,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,QuickTaskAccessible,The following statement contains a magic number: Accessible.FrameInParent = new Gdk.Rectangle (0' (int)y' mode.Allocation.Width' 6);
Magic Number,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The following statement contains a magic number: state.ColorCache [IndicatorDrawingState.UsageColor].Alpha = 0.4;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The following statement contains a magic number: state.ColorCache [i].L = 0.4;
Magic Number,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,Start,The following statement contains a magic number: i < 4
Magic Number,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,RunHandler,The following statement contains a magic number: switch (drawingStep) { 				case 0: 					for (int i = 0; i < 10 && !nextStep; i++) { 						if (token.IsCancellationRequested) 							goto tokenExit; 						if (mode.TextEditor.HighlightSearchPattern) { 							mode.GetSearchResultIndicator (state' searchResults' ref nextStep); 						} else { 							if (!Debugger.DebuggingService.IsDebugging) { 								mode.GetQuickTasks (state' allUsages' allTasks' ref nextStep); 							} else { 								nextStep = true; 							} 						} 					} 					if (nextStep) { 						drawingStep++; 						nextStep = false; 						if (!ForceUpdate && state.Equals(mode.currentDrawingState)) { 							cr.Dispose (); 							// if the surface was newly created dispose it otherwise it'll leak. 							if (surface != mode.swapIndicatorSurface) 								surface.Dispose (); 							IndicatorDrawingState.Dispose (state); 							return false; 						} 					} 					return true; 				case 1: 					var displayScale = Core.Platform.IsMac ? GtkWorkarounds.GetScaleFactor (mode) : 1.0; 					mode.DrawBackground (cr' allocation); 					drawingStep++;  					state.taskIterator = 0; 					state.usageIterator = 0; 					curIndex = 0; 					return true; 				case 2: 					for (int i = 0; i < 10 && !nextStep; i++) { 						if (token.IsCancellationRequested) 							goto tokenExit; 						if (mode.TextEditor.HighlightSearchPattern) { 							if (curIndex < state.SearchResultIndicators.Count) { 								mode.DrawSearchResults (cr' state' curIndex++); 							} else { 								nextStep = true; 							} 						} else { 							if (!Debugger.DebuggingService.IsDebugging) { 								mode.DrawQuickTasks (cr' state' curIndex++' ref nextStep); 							} else { 								nextStep = true; 							} 						} 					} 					if (nextStep) { 						drawingStep++; 					} 					return true; 				case 3: 					if (mode.TextEditor.HighlightSearchPattern) { 						mode.DrawSearchIndicator (cr); 					} else { 						if (!Debugger.DebuggingService.IsDebugging) { 							mode.DrawIndicator (cr' state.Severity); 						} 					} 					drawingStep++; 					return true; 				default: 					if (cr.Handle != IntPtr.Zero) 						mode.DrawBreakpoints (cr); 					cr.Dispose (); 					var tmp = mode.indicatorSurface; 					mode.indicatorSurface = surface; 					mode.swapIndicatorSurface = tmp; 					IndicatorDrawingState.Dispose (mode.currentDrawingState); 					mode.currentDrawingState = state; 					mode.QueueDraw ();  					return false; 				}
Magic Number,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,RunHandler,The following statement contains a magic number: switch (drawingStep) { 				case 0: 					for (int i = 0; i < 10 && !nextStep; i++) { 						if (token.IsCancellationRequested) 							goto tokenExit; 						if (mode.TextEditor.HighlightSearchPattern) { 							mode.GetSearchResultIndicator (state' searchResults' ref nextStep); 						} else { 							if (!Debugger.DebuggingService.IsDebugging) { 								mode.GetQuickTasks (state' allUsages' allTasks' ref nextStep); 							} else { 								nextStep = true; 							} 						} 					} 					if (nextStep) { 						drawingStep++; 						nextStep = false; 						if (!ForceUpdate && state.Equals(mode.currentDrawingState)) { 							cr.Dispose (); 							// if the surface was newly created dispose it otherwise it'll leak. 							if (surface != mode.swapIndicatorSurface) 								surface.Dispose (); 							IndicatorDrawingState.Dispose (state); 							return false; 						} 					} 					return true; 				case 1: 					var displayScale = Core.Platform.IsMac ? GtkWorkarounds.GetScaleFactor (mode) : 1.0; 					mode.DrawBackground (cr' allocation); 					drawingStep++;  					state.taskIterator = 0; 					state.usageIterator = 0; 					curIndex = 0; 					return true; 				case 2: 					for (int i = 0; i < 10 && !nextStep; i++) { 						if (token.IsCancellationRequested) 							goto tokenExit; 						if (mode.TextEditor.HighlightSearchPattern) { 							if (curIndex < state.SearchResultIndicators.Count) { 								mode.DrawSearchResults (cr' state' curIndex++); 							} else { 								nextStep = true; 							} 						} else { 							if (!Debugger.DebuggingService.IsDebugging) { 								mode.DrawQuickTasks (cr' state' curIndex++' ref nextStep); 							} else { 								nextStep = true; 							} 						} 					} 					if (nextStep) { 						drawingStep++; 					} 					return true; 				case 3: 					if (mode.TextEditor.HighlightSearchPattern) { 						mode.DrawSearchIndicator (cr); 					} else { 						if (!Debugger.DebuggingService.IsDebugging) { 							mode.DrawIndicator (cr' state.Severity); 						} 					} 					drawingStep++; 					return true; 				default: 					if (cr.Handle != IntPtr.Zero) 						mode.DrawBreakpoints (cr); 					cr.Dispose (); 					var tmp = mode.indicatorSurface; 					mode.indicatorSurface = surface; 					mode.swapIndicatorSurface = tmp; 					IndicatorDrawingState.Dispose (mode.currentDrawingState); 					mode.currentDrawingState = state; 					mode.QueueDraw ();  					return false; 				}
Magic Number,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,RunHandler,The following statement contains a magic number: switch (drawingStep) { 				case 0: 					for (int i = 0; i < 10 && !nextStep; i++) { 						if (token.IsCancellationRequested) 							goto tokenExit; 						if (mode.TextEditor.HighlightSearchPattern) { 							mode.GetSearchResultIndicator (state' searchResults' ref nextStep); 						} else { 							if (!Debugger.DebuggingService.IsDebugging) { 								mode.GetQuickTasks (state' allUsages' allTasks' ref nextStep); 							} else { 								nextStep = true; 							} 						} 					} 					if (nextStep) { 						drawingStep++; 						nextStep = false; 						if (!ForceUpdate && state.Equals(mode.currentDrawingState)) { 							cr.Dispose (); 							// if the surface was newly created dispose it otherwise it'll leak. 							if (surface != mode.swapIndicatorSurface) 								surface.Dispose (); 							IndicatorDrawingState.Dispose (state); 							return false; 						} 					} 					return true; 				case 1: 					var displayScale = Core.Platform.IsMac ? GtkWorkarounds.GetScaleFactor (mode) : 1.0; 					mode.DrawBackground (cr' allocation); 					drawingStep++;  					state.taskIterator = 0; 					state.usageIterator = 0; 					curIndex = 0; 					return true; 				case 2: 					for (int i = 0; i < 10 && !nextStep; i++) { 						if (token.IsCancellationRequested) 							goto tokenExit; 						if (mode.TextEditor.HighlightSearchPattern) { 							if (curIndex < state.SearchResultIndicators.Count) { 								mode.DrawSearchResults (cr' state' curIndex++); 							} else { 								nextStep = true; 							} 						} else { 							if (!Debugger.DebuggingService.IsDebugging) { 								mode.DrawQuickTasks (cr' state' curIndex++' ref nextStep); 							} else { 								nextStep = true; 							} 						} 					} 					if (nextStep) { 						drawingStep++; 					} 					return true; 				case 3: 					if (mode.TextEditor.HighlightSearchPattern) { 						mode.DrawSearchIndicator (cr); 					} else { 						if (!Debugger.DebuggingService.IsDebugging) { 							mode.DrawIndicator (cr' state.Severity); 						} 					} 					drawingStep++; 					return true; 				default: 					if (cr.Handle != IntPtr.Zero) 						mode.DrawBreakpoints (cr); 					cr.Dispose (); 					var tmp = mode.indicatorSurface; 					mode.indicatorSurface = surface; 					mode.swapIndicatorSurface = tmp; 					IndicatorDrawingState.Dispose (mode.currentDrawingState); 					mode.currentDrawingState = state; 					mode.QueueDraw ();  					return false; 				}
Magic Number,MonoDevelop.SourceEditor.QuickTasks,IdleUpdater,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.IdleUpdater.cs,RunHandler,The following statement contains a magic number: switch (drawingStep) { 				case 0: 					for (int i = 0; i < 10 && !nextStep; i++) { 						if (token.IsCancellationRequested) 							goto tokenExit; 						if (mode.TextEditor.HighlightSearchPattern) { 							mode.GetSearchResultIndicator (state' searchResults' ref nextStep); 						} else { 							if (!Debugger.DebuggingService.IsDebugging) { 								mode.GetQuickTasks (state' allUsages' allTasks' ref nextStep); 							} else { 								nextStep = true; 							} 						} 					} 					if (nextStep) { 						drawingStep++; 						nextStep = false; 						if (!ForceUpdate && state.Equals(mode.currentDrawingState)) { 							cr.Dispose (); 							// if the surface was newly created dispose it otherwise it'll leak. 							if (surface != mode.swapIndicatorSurface) 								surface.Dispose (); 							IndicatorDrawingState.Dispose (state); 							return false; 						} 					} 					return true; 				case 1: 					var displayScale = Core.Platform.IsMac ? GtkWorkarounds.GetScaleFactor (mode) : 1.0; 					mode.DrawBackground (cr' allocation); 					drawingStep++;  					state.taskIterator = 0; 					state.usageIterator = 0; 					curIndex = 0; 					return true; 				case 2: 					for (int i = 0; i < 10 && !nextStep; i++) { 						if (token.IsCancellationRequested) 							goto tokenExit; 						if (mode.TextEditor.HighlightSearchPattern) { 							if (curIndex < state.SearchResultIndicators.Count) { 								mode.DrawSearchResults (cr' state' curIndex++); 							} else { 								nextStep = true; 							} 						} else { 							if (!Debugger.DebuggingService.IsDebugging) { 								mode.DrawQuickTasks (cr' state' curIndex++' ref nextStep); 							} else { 								nextStep = true; 							} 						} 					} 					if (nextStep) { 						drawingStep++; 					} 					return true; 				case 3: 					if (mode.TextEditor.HighlightSearchPattern) { 						mode.DrawSearchIndicator (cr); 					} else { 						if (!Debugger.DebuggingService.IsDebugging) { 							mode.DrawIndicator (cr' state.Severity); 						} 					} 					drawingStep++; 					return true; 				default: 					if (cr.Handle != IntPtr.Zero) 						mode.DrawBreakpoints (cr); 					cr.Dispose (); 					var tmp = mode.indicatorSurface; 					mode.indicatorSurface = surface; 					mode.swapIndicatorSurface = tmp; 					IndicatorDrawingState.Dispose (mode.currentDrawingState); 					mode.currentDrawingState = state; 					mode.QueueDraw ();  					return false; 				}
Magic Number,Mono.TextEditor.PopupWindow,ListWidget<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWidget.cs,DrawList,The following statement contains a magic number: int lineWidth = winWidth - margin*2;
Magic Number,Mono.TextEditor.PopupWindow,ListWidget<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWidget.cs,DrawList,The following statement contains a magic number: typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;
Magic Number,Mono.TextEditor.PopupWindow,ListWidget<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWidget.cs,DrawList,The following statement contains a magic number: iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;
Magic Number,Mono.TextEditor.PopupWindow,ListWidget<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWidget.cs,DrawList,The following statement contains a magic number: cr.DrawTextLayout (layout' xpos + iconWidth + 2' typos);
Magic Number,Mono.TextEditor.PopupWindow,ListWidget<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWidget.cs,CalcVisibleRows,The following statement contains a magic number: visibleRows = 7;
Magic Number,Mono.TextEditor.PopupWindow,ListWidget<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWidget.cs,CalcVisibleRows,The following statement contains a magic number: newHeight = (rowHeight * visibleRows) + margin * 2;
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnSizeRequested,The following statement contains a magic number: int totalHeight = yBorder * 2 + 1;
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnSizeRequested,The following statement contains a magic number: xSpacer += xBorder * 2 + 1;
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = descriptionWidth + xSpacer + xBorder * 2 + 1;
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: width += xBorder * 2;
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' false' 0.5' 0.5' height + yBorder * 2 + 1.5' width' height + yBorder * 2);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' false' 0.5' 0.5' height + yBorder * 2 + 1.5' width' height + yBorder * 2);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' false' 0.5' 0.5' height + yBorder * 2 + 1.5' width' height + yBorder * 2);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' false' 0.5' 0.5' height + yBorder * 2 + 1.5' width' height + yBorder * 2);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' false' 0.5' 0.5' height + yBorder * 2 + 1.5' width' height + yBorder * 2);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' 0.5' height * 2 + yBorder * 2 + 0.5' height' Allocation.Width - 1' Allocation.Height - height * 2 - yBorder * 2 - 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' 0.5' height * 2 + yBorder * 2 + 0.5' height' Allocation.Width - 1' Allocation.Height - height * 2 - yBorder * 2 - 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' 0.5' height * 2 + yBorder * 2 + 0.5' height' Allocation.Width - 1' Allocation.Height - height * 2 - yBorder * 2 - 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' 0.5' height * 2 + yBorder * 2 + 0.5' height' Allocation.Width - 1' Allocation.Height - height * 2 - yBorder * 2 - 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' 0.5' height * 2 + yBorder * 2 + 0.5' height' Allocation.Width - 1' Allocation.Height - height * 2 - yBorder * 2 - 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' 0.5' height * 2 + yBorder * 2 + 0.5' height' Allocation.Width - 1' Allocation.Height - height * 2 - yBorder * 2 - 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (xSpacer + 0.5' height * 2 + yBorder * 2);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (xSpacer + 0.5' height * 2 + yBorder * 2);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (xSpacer + 0.5' height * 2 + yBorder * 2);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (xSpacer + 0.5' Allocation.Height - 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: int y = height + yBorder * 2;
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' false' false' 0' y + 0.5' height + 1.5' Allocation.Width' height);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' false' true' false' false' 0' y + 0.5' height + 1.5' Allocation.Width' height);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (xSpacer + 0.5' height + yBorder * 2 + 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (xSpacer + 0.5' height + yBorder * 2 + 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (xSpacer + 0.5' height * 2 + yBorder * 2 + 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (xSpacer + 0.5' height * 2 + yBorder * 2 + 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (xSpacer + 0.5' height * 2 + yBorder * 2 + 1);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (1' y + 0.5);
Magic Number,Mono.TextEditor.PopupWindow,TableLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (Allocation.Width - 1' y + 0.5);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,TokenRenderer,The following statement contains a magic number: Spacing = 6;
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,TokenRenderer,The following statement contains a magic number: Width = 14;
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,TokenRenderer,The following statement contains a magic number: Height = 10;
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: w += outlinePadding * 2;
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: h += outlinePadding * 2;
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true' x - inner_padding - 0.5f' y - 0.5f' 8' w + inner_padding * 2 + 1' h + 1);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true' x - inner_padding - 0.5f' y - 0.5f' 8' w + inner_padding * 2 + 1' h + 1);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true' x - inner_padding - 0.5f' y - 0.5f' 8' w + inner_padding * 2 + 1' h + 1);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (cr' true' true' x - inner_padding - 0.5f' y - 0.5f' 8' w + inner_padding * 2 + 1' h + 1);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: RenderTriangleDown (cr' x + 4' y + 3' 8' 6);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: RenderTriangleDown (cr' x + 4' y + 3' 8' 6);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: RenderTriangleDown (cr' x + 4' y + 3' 8' 6);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,Render,The following statement contains a magic number: RenderTriangleDown (cr' x + 4' y + 3' 8' 6);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,RenderTriangleDown,The following statement contains a magic number: cr.MoveTo (x + w / 2.0' y + h);
Magic Number,Mono.TextEditor.PopupWindow,TokenRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,RenderTriangleUp,The following statement contains a magic number: cr.MoveTo (x + w / 2.0' y);
Magic Number,Mono.TextEditor.PopupWindow,LineRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,LineRenderer,The following statement contains a magic number: desc.AbsoluteSize = Pango.Units.FromPixels (14);
Magic Number,Mono.TextEditor.PopupWindow,LineRenderer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,LineRenderer,The following statement contains a magic number: line.Add (new TokenRenderer (ctx' token.Substring (1' token.Length - 2)' true));
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,InsertionCursorLayoutModeHelpWindow,The following statement contains a magic number: desc.AbsoluteSize = Pango.Units.FromPixels (12);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnSizeRequested,The following statement contains a magic number: int totalHeight = yTitleBorder * 2 + yDescriptionBorder * 2 + 1;
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnSizeRequested,The following statement contains a magic number: int totalHeight = yTitleBorder * 2 + yDescriptionBorder * 2 + 1;
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnSizeRequested,The following statement contains a magic number: int w2 = descTexts.Max (x => x.Width + x.Spacing * 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnSizeRequested,The following statement contains a magic number: totalHeight += h2 + 4;
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnSizeRequested,The following statement contains a magic number: xSpacer += xDescriptionBorder * 2 + 1;
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: width += xDescriptionBorder * 2;
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' true' tw + 0.5' 0.5' 12' Allocation.Width - 1 - tw' Allocation.Height);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' true' tw + 0.5' 0.5' 12' Allocation.Width - 1 - tw' Allocation.Height);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: FoldingScreenbackgroundRenderer.DrawRoundRectangle (g' true' true' tw + 0.5' 0.5' 12' Allocation.Width - 1 - tw' Allocation.Height);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (tw' Allocation.Height / 2 - th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (tw' Allocation.Height / 2 - th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (0' Allocation.Height / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw' Allocation.Height / 2 + th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw' Allocation.Height / 2 + th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw + 5' Allocation.Height / 2 + th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw + 5' Allocation.Height / 2 + th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw + 5' Allocation.Height / 2 + th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw + 5' Allocation.Height / 2 - th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw + 5' Allocation.Height / 2 - th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw + 5' Allocation.Height / 2 - th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (tw' Allocation.Height / 2 - th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.MoveTo (tw' Allocation.Height / 2 - th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (0' Allocation.Height / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw' Allocation.Height / 2 + th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: g.LineTo (tw' Allocation.Height / 2 + th / 2);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: desc.Render (g' x' y + 4);
Magic Number,Mono.TextEditor.PopupWindow,InsertionCursorLayoutModeHelpWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ModeHelpWindow.cs,OnExposeEvent,The following statement contains a magic number: y += desc.Height + 8;
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeTitleBackgroundColor = new Color (0.88' 0.88' 0.98);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeTitleBackgroundColor = new Color (0.88' 0.88' 0.98);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeTitleBackgroundColor = new Color (0.88' 0.88' 0.98);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeCategoryBackgroundColor = new Color (0.58' 0.58' 0.98);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeCategoryBackgroundColor = new Color (0.58' 0.58' 0.98);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeCategoryBackgroundColor = new Color (0.58' 0.58' 0.98);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeBorderColor = new Color (0.4' 0.4' 0.6);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeBorderColor = new Color (0.4' 0.4' 0.6);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeBorderColor = new Color (0.4' 0.4' 0.6);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeTextColor = new Color (0.3' 0.3' 1);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeTextColor = new Color (0.3' 0.3' 1);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeGridColor = new Color (0.8' 0.8' 0.8);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeGridColor = new Color (0.8' 0.8' 0.8);
Magic Number,Mono.TextEditor.PopupWindow,Styles,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Styles.cs,LoadStyles,The following statement contains a magic number: TableLayoutModeGridColor = new Color (0.8' 0.8' 0.8);
Magic Number,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,OnSizeAllocated,The following statement contains a magic number: allocation.Height -= (int)BorderWidth * 2;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,BounceFadePopupWindow,The following statement contains a magic number: Duration = 500;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,BounceFadePopupWindow,The following statement contains a magic number: ExpandWidth = 12;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,BounceFadePopupWindow,The following statement contains a magic number: ExpandHeight = 2;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,BounceFadePopupWindow,The following statement contains a magic number: stage.UpdateFrequency = 10;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,Popup,The following statement contains a magic number: x = x + bounds.X - (int)(ExpandWidth / 2);
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,Popup,The following statement contains a magic number: y = y + bounds.Y - (int)(ExpandHeight / 2);
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,OnAnimationActorStep,The following statement contains a magic number: scale = Choreographer.Compose (actor.Percent * 2' BounceEasing);
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,OnAnimationActorStep,The following statement contains a magic number: actor.Percent < 0.5
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,BounceFadePopupWidget,The following statement contains a magic number: Duration = 500;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,BounceFadePopupWidget,The following statement contains a magic number: ExpandWidth = 12;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,BounceFadePopupWidget,The following statement contains a magic number: ExpandHeight = 2;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,BounceFadePopupWidget,The following statement contains a magic number: stage.UpdateFrequency = 10;
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,Popup,The following statement contains a magic number: xExpandedOffset = (int) (System.Math.Floor (ExpandWidth / 2d));
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,Popup,The following statement contains a magic number: yExpandedOffset = (int) (System.Math.Floor (ExpandHeight / 2d));
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,OnAnimationActorStep,The following statement contains a magic number: scale = Choreographer.Compose (actor.Percent * 2' BounceEasing);
Magic Number,Mono.TextEditor.Theatrics,BounceFadePopupWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\BounceFadePopupWindow.cs,OnAnimationActorStep,The following statement contains a magic number: actor.Percent < 0.5
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,Choreographer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\Choreographer.cs,Compose,The following statement contains a magic number: switch (easing) {                 case Easing.QuadraticIn:                     return percent * percent;                  case Easing.QuadraticOut:                     return -1.0 * percent * (percent - 2.0);                  case Easing.QuadraticInOut:                     percent *= 2.0;                     return percent < 1.0                         ? percent * percent * 0.5                         : -0.5 * (--percent * (percent - 2.0) - 1.0);                  case Easing.ExponentialIn:                     return System.Math.Pow (2.0' 10.0 * (percent - 1.0));                  case Easing.ExponentialOut:                     return -System.Math.Pow (2.0' -10.0 * percent) + 1.0;                  case Easing.ExponentialInOut:                     percent *= 2.0;                     return percent < 1.0                         ? 0.5 * System.Math.Pow (2.0' 10.0 * (percent - 1.0))                         : 0.5 * (-System.Math.Pow (2.0' -10.0 * --percent) + 2.0);                  case Easing.Sine:                     return System.Math.Sin (percent * System.Math.PI);                  case Easing.Linear:                 default:                     return percent;             }
Magic Number,Mono.TextEditor.Theatrics,SmartScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\SmartScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: var childRectangle = new Rectangle (allocation.X + margin' allocation.Y + margin' allocation.Width - vwidth - margin*2' allocation.Height - hheight - margin*2);
Magic Number,Mono.TextEditor.Theatrics,SmartScrolledWindow,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\SmartScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: var childRectangle = new Rectangle (allocation.X + margin' allocation.Y + margin' allocation.Width - vwidth - margin*2' allocation.Height - hheight - margin*2);
Magic Number,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterSurfaceElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterSurfaceElement.cs,DefaultSignatureHelpPresenterSurfaceElement,The following statement contains a magic number: descriptionBox.Spacing = 4;
Magic Number,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterSurfaceElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterSurfaceElement.cs,DefaultSignatureHelpPresenterSurfaceElement,The following statement contains a magic number: vb2.Spacing = 4;
Magic Number,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterSurfaceElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterSurfaceElement.cs,ShowTooltipInfo,The following statement contains a magic number: DataContext.SignatureWpfViewVisualElement.WidthRequest = DataContext.SignatureWpfViewVisualElement.RealWidth + 70;
Magic Number,Microsoft.VisualStudio.Language.Intellisense.Implementation,DefaultSignatureHelpPresenterSurfaceElement,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\DefaultSignatureHelpPresenterSurfaceElement.cs,ShowTooltipInfo,The following statement contains a magic number: descriptionBox.PackStart(CreateCategory(TooltipInformationWindow.GetHeaderMarkup(GettextCatalog.GetString("Summary"))' dataContext.Session.SelectedSignature.Documentation)' true' true' 4);
Magic Number,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,CreateSignatureTextView,The following statement contains a magic number: _signatureWpfTextView.Indent = -20;
Magic Number,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,UpdateSignatureInfo,The following statement contains a magic number: _signatureWpfTextView.RealWidth > this.ContainerMaxWidth - this.PagerWidth - 4
Magic Number,Microsoft.VisualStudio.Language.Intellisense.Implementation,SignatureHelpSessionView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Language\Impl\Intellisense\SignatureHelp\SignatureHelpSessionView.cs,UpdateSignatureInfo,The following statement contains a magic number: _signatureWpfTextView.RealWidth > this.ContainerMaxWidth - this.PagerWidth - 4 &&                 sigToRender.PrettyPrintedContent != null
Magic Number,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,BaseWpfToolTipPresenter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\BaseWpfToolTipPresenter.cs,Update,The following statement contains a magic number: vbox.PackStart (view' margin: 4);
Magic Number,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,WpfClassifiedTextElementViewElementFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\ViewElementFactories\WpfClassifiedTextElementViewElementFactory.cs,CreateViewElement,The following statement contains a magic number: color = color.Substring (2);
Magic Number,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,WpfImageElementViewElementFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\ViewElementFactories\WpfImageElementViewElementFactory.cs,CreateViewElement,The following statement contains a magic number: imageElement.Margin = new Xwt.WidgetSpacing (4' 4' 4' 4);
Magic Number,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,WpfImageElementViewElementFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\ViewElementFactories\WpfImageElementViewElementFactory.cs,CreateViewElement,The following statement contains a magic number: imageElement.Margin = new Xwt.WidgetSpacing (4' 4' 4' 4);
Magic Number,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,WpfImageElementViewElementFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\ViewElementFactories\WpfImageElementViewElementFactory.cs,CreateViewElement,The following statement contains a magic number: imageElement.Margin = new Xwt.WidgetSpacing (4' 4' 4' 4);
Magic Number,Microsoft.VisualStudio.Text.AdornmentLibrary.ToolTip.Implementation,WpfImageElementViewElementFactory,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\VSEditor\Text\Impl\WpfToolTipAdornment\ViewElementFactories\WpfImageElementViewElementFactory.cs,CreateViewElement,The following statement contains a magic number: imageElement.Margin = new Xwt.WidgetSpacing (4' 4' 4' 4);
Magic Number,MonoDevelop.SourceEditor.Braces,BraceCompletionStack,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionStack.cs,IsSessionValid,The following statement contains a magic number: _guardedOperations.CallExtensionPoint (() => { 				if (session.ClosingPoint != null && session.OpeningPoint != null && session.SubjectBuffer != null) { 					ITextSnapshot snapshot = session.SubjectBuffer.CurrentSnapshot; 					SnapshotPoint closingSnapshotPoint = session.ClosingPoint.GetPoint (snapshot); 					SnapshotPoint openingSnapshotPoint = session.OpeningPoint.GetPoint (snapshot);  					// Verify that the closing and opening points still match the expected braces 					isValid = closingSnapshotPoint.Position > 1 						&& openingSnapshotPoint.Position <= (closingSnapshotPoint.Position - 2) 						&& openingSnapshotPoint.GetChar () == session.OpeningBrace 						&& closingSnapshotPoint.Subtract (1).GetChar () == session.ClosingBrace; 				} 			});
Magic Number,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,OuterQuote,The following statement contains a magic number: return data =>  			{ 				int beginOffset' length; 				if (TryFindInnerQuote (data' c' out beginOffset' out length)) 				{ 					beginOffset--; 					length += 2; 					data.SelectionRange = new TextSegment (beginOffset' length); 				} 			};
Magic Number,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,ParseForQuote,The following statement contains a magic number: text[i] == charToFind && 					(i < 1 || text[i-1] != '\\') && 					(i < 2 || text[i-2] != '\\')
Magic Number,Mono.TextEditor.Vi,ViActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Vi\ViActions.cs,ParseForQuote,The following statement contains a magic number: text[i] == charToFind && 					(i < 1 || text[i-1] != '\\') && 					(i < 2 || text[i-2] != '\\')
Magic Number,Mono.TextEditor.Utils,Hunk,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,Hunk,The following statement contains a magic number: this.Context = 3;
Magic Number,Mono.TextEditor.Utils,Hunk,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,Overlaps,The following statement contains a magic number: return DistanceTo (other) < this.Context * 2;
Magic Number,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,GetDiff,The following statement contains a magic number: int[] downVector = new int[2 * MAX + 2];
Magic Number,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,GetDiff,The following statement contains a magic number: int[] downVector = new int[2 * MAX + 2];
Magic Number,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,GetDiff,The following statement contains a magic number: int[] upVector = new int[2 * MAX + 2];
Magic Number,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,GetDiff,The following statement contains a magic number: int[] upVector = new int[2 * MAX + 2];
Magic Number,Mono.TextEditor.Utils,Diff,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,SMS,The following statement contains a magic number: int MaxD = ((upperA - lowerA + upperB - lowerB) / 2) + 1;
Magic Number,Mono.TextEditor.Utils,DiffData<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\Diff.cs,DiffData,The following statement contains a magic number: Modified = new bool[Length + 2];
Magic Number,Mono.TextEditor.Utils,ImmutableText,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\ImmutableText.cs,GetHashCode,The following statement contains a magic number: h = 31 * h + this [off];
Magic Number,Mono.TextEditor.Utils,Leaf8BitNode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\ImmutableText.cs,CopyTo,The following statement contains a magic number: var endPtr4 = endPtr - count % 4;
Magic Number,Mono.TextEditor.Utils,RtfWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RtfWriter.cs,CreateColorTable,The following statement contains a magic number: colorTable.Append ((int)(255  * color.R));
Magic Number,Mono.TextEditor.Utils,RtfWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RtfWriter.cs,CreateColorTable,The following statement contains a magic number: colorTable.Append ((int)(255  * color.G));
Magic Number,Mono.TextEditor.Utils,RtfWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RtfWriter.cs,CreateColorTable,The following statement contains a magic number: colorTable.Append ((int)(255  * color.B));
Magic Number,Mono.TextEditor.Utils,RtfWriter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Utils\RtfWriter.cs,GenerateRtf,The following statement contains a magic number: double fontSize = Double.Parse (fontName.Substring (fontName.LastIndexOf (' ')  + 1)' System.Globalization.CultureInfo.InvariantCulture) * 2;
Missing Default,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,ScrollViewportVerticallyByLines,The following switch statement is missing a default case: switch (direction) { 			case ScrollDirection.Up: 				VAdjustment.Value -= LineHeight * count; 				break; 			case ScrollDirection.Down: 				VAdjustment.Value += LineHeight * count; 				break; 			}
Missing Default,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,ScrollViewportVerticallyByPage,The following switch statement is missing a default case: switch (direction) { 			case ScrollDirection.Up: 				if (VAdjustment.Value == 0) 					return false; 				VAdjustment.Value -= VAdjustment.PageSize; 				return true; 			case ScrollDirection.Down: 				if (VAdjustment.Value + VAdjustment.PageSize > VAdjustment.Upper) 					return false; 				VAdjustment.Value += VAdjustment.PageSize; 				return true; 			}
Missing Default,Mono.TextEditor,MonoTextEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\MonoTextEditor.IViewScroller.cs,OnActorStep,The following switch statement is missing a default case: switch (actor.Target.AnimationState) { 			case AnimationState.Coming: 				actor.Target.QueueDraw (); 				actor.Target.Percent = actor.Percent; 				if (actor.Expired) { 					actor.Target.AnimationState = AnimationState.Idle; 					return false; 				} 				break; 			case AnimationState.IntendingToGo: 				actor.Target.AnimationState = AnimationState.Going; 				actor.Target.Bias = actor.Percent; 				actor.Reset ((uint)(actor.Target.Duration * actor.Percent)); 				break; 			case AnimationState.Going: 				if (actor.Expired) { 					this.Remove (actor.Target); 					return false; 				} 				actor.Target.Percent = 1.0 - actor.Percent; 				break; 			}
Missing Default,Mono.TextEditor,FoldMarkerMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\FoldMarkerMargin.cs,HandleItemCommand,The following switch statement is missing a default case: switch (command) { 			case ItemCommand.ActivateCurrentItem: 				ActivateFold (focusSegments[focusedIndex]); 				break;  			case ItemCommand.FocusNextItem: 				focusedIndex++; 				if (focusedIndex >= focusSegments.Length) { 					focusedIndex = focusSegments.Length - 1; 				}  				highlightFold = true; 				break;  			case ItemCommand.FocusPreviousItem: 				focusedIndex--; 				if (focusedIndex < 0) { 					focusedIndex = 0; 				}  				highlightFold = true; 				break; 			}
Missing Default,Mono.TextEditor,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\IconMargin.cs,HandleItemCommand,The following switch statement is missing a default case: switch (command) { 			case ItemCommand.ActivateCurrentItem: 				var lineNumber = marker.LineSegment.LineNumber; 				var y = editor.LineToY (lineNumber); 				MousePressed (new MarginMouseEventArgs (editor' EventType.ButtonPress' 1' 0' y' ModifierType.None));  				if (focusedIndex >= focusMarkers.Count) { 					focusedIndex = focusMarkers.Count - 1; 				}  				editor.RedrawMargin (this); 				break;  			case ItemCommand.FocusNextItem: 				focusedIndex++;  				SanitizeFocusedIndex ();  				marker = focusMarkers[focusedIndex] as MarginMarker; 				editor.CenterTo (marker.LineSegment.LineNumber' 1); 				break;  			case ItemCommand.FocusPreviousItem: 				focusedIndex--;  				SanitizeFocusedIndex ();  				marker = focusMarkers[focusedIndex] as MarginMarker; 				editor.CenterTo (marker.LineSegment.LineNumber' 1); 				break; 			}
Missing Default,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,GetNextMargin,The following switch statement is missing a default case: switch (direction) { 			case DirectionType.TabForward: 			case DirectionType.Right: 				switch (current) { 				case FocusMargin.None: 					return FocusMargin.Icon;  				case FocusMargin.Icon: 					return FocusMargin.Action;  				case FocusMargin.Action: 					return FocusMargin.Gutter;  				case FocusMargin.Gutter: 					return FocusMargin.FoldMarker;  				case FocusMargin.FoldMarker: 					return FocusMargin.TextView;  				case FocusMargin.TextView: 					return FocusMargin.None; 				}  				break;  			case DirectionType.TabBackward: 			case DirectionType.Left: 				switch (current) { 				case FocusMargin.None: 					return FocusMargin.TextView;  				case FocusMargin.Icon: 					return FocusMargin.None;  				case FocusMargin.Action: 					return FocusMargin.Icon;  				case FocusMargin.Gutter: 					return FocusMargin.Action;  				case FocusMargin.FoldMarker: 					return FocusMargin.Gutter;  				case FocusMargin.TextView: 					return FocusMargin.FoldMarker; 				}  				break; 			}
Missing Default,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,GetNextMargin,The following switch statement is missing a default case: switch (current) { 				case FocusMargin.None: 					return FocusMargin.Icon;  				case FocusMargin.Icon: 					return FocusMargin.Action;  				case FocusMargin.Action: 					return FocusMargin.Gutter;  				case FocusMargin.Gutter: 					return FocusMargin.FoldMarker;  				case FocusMargin.FoldMarker: 					return FocusMargin.TextView;  				case FocusMargin.TextView: 					return FocusMargin.None; 				}
Missing Default,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,GetNextMargin,The following switch statement is missing a default case: switch (current) { 				case FocusMargin.None: 					return FocusMargin.TextView;  				case FocusMargin.Icon: 					return FocusMargin.None;  				case FocusMargin.Action: 					return FocusMargin.Icon;  				case FocusMargin.Gutter: 					return FocusMargin.Action;  				case FocusMargin.FoldMarker: 					return FocusMargin.Gutter;  				case FocusMargin.TextView: 					return FocusMargin.FoldMarker; 				}
Missing Default,Mono.TextEditor,TextArea,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextArea.cs,OnAnimationActorStep,The following switch statement is missing a default case: switch (actor.Target.AnimationState) { 			case AnimationState.Coming: 				actor.Target.Drawer.Percent = actor.Percent; 				if (actor.Expired) { 					actor.Target.AnimationState = AnimationState.Going; 					actor.Reset (); 					return true; 				} 				break; 			case AnimationState.Going: 				if (actor.Expired) { 					RemoveAnimation (actor.Target); 					return false; 				} 				actor.Target.Drawer.Percent = 1.0 - actor.Percent; 				break; 			}
Missing Default,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetEolMarkerIndex,The following switch statement is missing a default case: switch (ch) { 			case UnicodeNewline.Unknown: 				return 0; 			case UnicodeNewline.LF: 				return 1; 			case UnicodeNewline.CRLF: 				return 2; 			case UnicodeNewline.CR: 				return 3; 			case UnicodeNewline.NEL: 				return 4; 			//case UnicodeNewline.VT: 			//	return 5; 			//case UnicodeNewline.FF: 			//	return 6; 			case UnicodeNewline.LS: 				return 5; 			case UnicodeNewline.PS: 				return 6; 			}
Missing Default,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetCaretChar,The following switch statement is missing a default case: switch (caretChar) { 			case ' ': 				break; 			case '\t': 				break; 			case '\n': 			case '\r': 				break; 			}
Missing Default,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,DrawCaret,The following switch statement is missing a default case: switch (Caret.Mode) { 				case CaretMode.Insert: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + 0.5' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height); 					break; 				case CaretMode.Block: 					cr.SetSourceColor (color); 					cr.Rectangle (caretRectangle.X + 0.5' caretRectangle.Y + 0.5' caretRectangle.Width' caretRectangle.Height); 					cr.Fill (); 					char caretChar = GetCaretChar (); 					if (!char.IsWhiteSpace (caretChar) && caretChar != '\0') { 						using (var layout = textEditor.LayoutCache.RequestLayout ()) { 							layout.FontDescription = textEditor.Options.Font; 							layout.SetText (caretChar.ToString ()); 							cr.MoveTo (caretRectangle.X' caretRectangle.Y); 							cr.SetSourceColor (SyntaxHighlightingService.GetColor (textEditor.EditorTheme' EditorThemeColors.Background)); 							cr.ShowLayout (layout); 						} 					} 					break; 				case CaretMode.Underscore: 					cr.DrawLine (color' 					             caretRectangle.X + 0.5' 					             caretRectangle.Y + caretRectangle.Height + 0.5' 					             caretRectangle.X + caretRectangle.Width' 					             caretRectangle.Y + caretRectangle.Height + 0.5); 					break; 				}
Missing Default,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,GetCachedChunks,The following switch statement is missing a default case: switch (task.Status) { 			case TaskStatus.Faulted: 				LoggingService.LogError ("Error while highlighting line " + lineNumber' task.Exception); 				break; 			case TaskStatus.RanToCompletion: 				if (task.Result != null) { 					return Tuple.Create (TrimChunks (task.Result.Segments' offset - line.Offset' length)' true' task.Result); 				} 				break; 			}
Missing Default,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,MouseHover,The following switch statement is missing a default case: switch (this.mouseSelectionMode) { 			case MouseSelectionMode.SingleChar: 				if (loc.Line != Caret.Line || !textEditor.GetTextEditorData ().IsCaretInVirtualLocation) { 					if (!InSelectionDrag) { 						textEditor.SetSelection (loc' loc); 					} else { 						textEditor.ExtendSelectionTo (loc); 					} 					Caret.Location = loc; 				} 				break; 			case MouseSelectionMode.Word: 				if (loc.Line != Caret.Line || !textEditor.GetTextEditorData ().IsCaretInVirtualLocation) { 					int offset = textEditor.Document.LocationToOffset (loc); 					int start; 					int end; //					var data = textEditor.GetTextEditorData (); 					if (offset < textEditor.SelectionAnchor) { 						start = ScanWord (Document' offset' false); 						end = ScanWord (Document'  textEditor.SelectionAnchor' true); 						Caret.Offset = start; 					} else { 						start = ScanWord (Document' textEditor.SelectionAnchor' false); 						end = ScanWord (Document' offset' true); 						Caret.Offset = end; 					} 					if (!textEditor.MainSelection.IsEmpty) { 						if (Caret.Offset < mouseWordStart) { 							textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (Document.OffsetToLocation (mouseWordEnd)' Caret.Location' textEditor.MainSelection.SelectionMode); 						} else { 							textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (Document.OffsetToLocation (mouseWordStart)' Caret.Location' textEditor.MainSelection.SelectionMode); 						} 					} 				} 				break; 			case MouseSelectionMode.WholeLine: 				//textEditor.SetSelectLines (loc.Line' textEditor.MainSelection.Anchor.Line); 				DocumentLine line1 = textEditor.Document.GetLine (loc.Line); 				DocumentLine line2 = textEditor.Document.GetLineByOffset (textEditor.SelectionAnchor); 				var o2 = line1.Offset < line2.Offset ? line1.Offset : line1.EndOffsetIncludingDelimiter; 				Caret.Offset = o2; 				if (!textEditor.MainSelection.IsEmpty) { 					if (mouseWordStart < o2) { 						textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (textEditor.OffsetToLocation (mouseWordStart)' Caret.Location' textEditor.MainSelection.SelectionMode); 					} else { 						textEditor.MainSelection = new MonoDevelop.Ide.Editor.Selection (textEditor.OffsetToLocation (mouseWordEnd)' Caret.Location' textEditor.MainSelection.SelectionMode); 					} 				}  				break; 			}
Missing Default,Mono.TextEditor,TextViewMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\TextViewMargin.cs,Draw,The following switch statement is missing a default case: switch (textEditor.Options.ShowWhitespaces) { 				case ShowWhitespaces.Selection: 					if (!isEolFolded && isEolSelected) 					if (!(BackgroundRenderer != null && textEditor.Options.ShowWhitespaces == ShowWhitespaces.Selection)) 					if (textEditor.MainSelection.Contains (lineNr' 2 + line.Length) && 					    !(lineNr == Caret.Line && Caret.Column > 1 && textEditor.MainSelection.Anchor.Line < textEditor.MainSelection.Lead.Line) && 					    textEditor.MainSelection.Anchor.Line != textEditor.MainSelection.Lead.Line) 						goto case ShowWhitespaces.Always; 					break; 				case ShowWhitespaces.Always: 					if (wrapper == null) 						wrapper = GetLayout (line); 					DrawEolMarker (cr' line' isEolSelected' position' y + System.Math.Max (0' wrapper.Height - LineHeight)); 					break; 				}
Missing Default,Mono.TextEditor,QuickFixMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor\Gui\QuickFixMargin.cs,HandleItemCommand,The following switch statement is missing a default case: switch (command) { 			case ItemCommand.ActivateCurrentItem: 				var lineNumber = marker.LineSegment.LineNumber; 				var y = editor.LineToY (lineNumber); 				MousePressed (new MarginMouseEventArgs (editor' EventType.ButtonPress' 1' 0' y' ModifierType.None));  				if (focusedIndex >= focusMarkers.Count) { 					focusedIndex = focusMarkers.Count - 1; 				}  				editor.RedrawMargin (this); 				break;  			case ItemCommand.FocusNextItem: 				focusedIndex++;  				SanitizeFocusedIndex ();  				marker = focusMarkers [focusedIndex] as MarginMarker; 				editor.CenterTo (marker.LineSegment.LineNumber' 1); 				break;  			case ItemCommand.FocusPreviousItem: 				focusedIndex--;  				SanitizeFocusedIndex ();  				marker = focusMarkers [focusedIndex] as MarginMarker; 				editor.CenterTo (marker.LineSegment.LineNumber' 1); 				break; 			}
Missing Default,Mono.TextEditor,LineSplitter,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Document\LineSplitter.cs,NextDelimiter,The following switch statement is missing a default case: switch (*p) { 					case NewLine.CR: 						char* nextp = p + 1; 						if (nextp < endPtr && *nextp == NewLine.LF) 							return new Delimiter ((int)(p - start)' UnicodeNewline.CRLF); 						return new Delimiter ((int)(p - start)' UnicodeNewline.CR); 					case NewLine.LF: 						return new Delimiter ((int)(p - start)' UnicodeNewline.LF); 					case NewLine.NEL: 						return new Delimiter ((int)(p - start)' UnicodeNewline.NEL); 					//case NewLine.VT: 					//	return new Delimiter ((int)(p - start)' UnicodeNewline.VT); 					//case NewLine.FF: 					//	return new Delimiter ((int)(p - start)' UnicodeNewline.FF); 					case NewLine.LS: 						return new Delimiter ((int)(p - start)' UnicodeNewline.LS); 					case NewLine.PS: 						return new Delimiter ((int)(p - start)' UnicodeNewline.PS); 					}
Missing Default,Mono.TextEditor,CopyOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,SetData,The following switch statement is missing a default case: switch (info) { 				case TextType: 					selection_data.Text = GetCopiedPlainText (); 					break; 				case RichTextType: 					var rtf = RtfWriter.GenerateRtf (copiedColoredChunks' docStyle' options); 					selection_data.Set (RTF_ATOM' UTF8_FORMAT' Encoding.UTF8.GetBytes (rtf)); 					break; 				case HTMLTextType: 					var html = HtmlWriter.GenerateHtml (copiedColoredChunks' docStyle' options); //					Console.WriteLine ("html:" + html); 					selection_data.Set (HTML_ATOM' UTF8_FORMAT' Encoding.UTF8.GetBytes (html)); 					break; 				case MonoTextType: 					byte[] rawText = Encoding.UTF8.GetBytes (GetCopiedPlainText ()); 					var copyDataLength = (byte)(copyData != null ? copyData.Length : 0); 					var dataOffset = 1 + 1 + copyDataLength; 					byte[] data = new byte [rawText.Length + dataOffset]; 					data [1] = copyDataLength; 					if (copyDataLength > 0) 						copyData.CopyTo (data' 2); 					rawText.CopyTo (data' dataOffset); 					data [0] = 0; 					if (isBlockMode) 						data [0] |= 1; 					if (isLineSelectionMode) 						data [0] |= 2; 					selection_data.Set (MD_ATOM' UTF8_FORMAT' data); 					break; 				}
Missing Default,Mono.TextEditor,CopyOperation,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\Actions\ClipboardActions.cs,CopyData,The following switch statement is missing a default case: switch (selection.SelectionMode) { 					case MonoDevelop.Ide.Editor.SelectionMode.Normal: 						isBlockMode = false; 						var segment = selection.GetSelectionRange (data); 						copiedColoredChunks = await ClipboardColoredText.GetChunks (data' segment); 						var pasteHandler = data.TextPasteHandler; 						if (pasteHandler != null) { 							try { 								copyData = pasteHandler.GetCopyData (segment.Offset' segment.Length); 							} catch (Exception e) { 								LoggingService.LogError ("Exception while getting copy data"' e); 							} 						} 						break; 					case MonoDevelop.Ide.Editor.SelectionMode.Block: 						isBlockMode = true; 						var visStart = data.LogicalToVisualLocation (selection.Anchor); 						var visEnd = data.LogicalToVisualLocation (selection.Lead); 						int startCol = System.Math.Min (visStart.Column' visEnd.Column); 						int endCol = System.Math.Max (visStart.Column' visEnd.Column); 						copiedColoredChunks = new List<List<ClipboardColoredText>> (); 						for (int lineNr = selection.MinLine; lineNr <= selection.MaxLine; lineNr++) { 							DocumentLine curLine = data.Document.GetLine (lineNr); 							int col1 = curLine.GetLogicalColumn (data' startCol) - 1; 							int col2 = System.Math.Min (curLine.GetLogicalColumn (data' endCol) - 1' curLine.Length); 							if (col1 < col2) { 								copiedColoredChunks.Add ((await ClipboardColoredText.GetChunks (data' new TextSegment (curLine.Offset + col1' col2 - col1))).First ()); 							} else { 								copiedColoredChunks.Add (new List<ClipboardColoredText> ()); 							} 						} 						break; 					}
Missing Default,Mono.TextEditor,InsertionCursorEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\InsertionCursorEditMode.cs,HandleKeypress,The following switch statement is missing a default case: switch (key) { 			case Gdk.Key.Up: 				if (CurIndex > 0) 					CurIndex--; 				DocumentLocation loc = insertionPoints[CurIndex].Location; 				editor.CenterTo (loc.Line - 1' DocumentLocation.MinColumn); 				editor.QueueDraw (); 				SetHelpWindowPosition (); 				break; 			case Gdk.Key.Down: 				if (CurIndex < insertionPoints.Count - 1) 					CurIndex++; 				loc = insertionPoints[CurIndex].Location; 				editor.CenterTo (loc.Line + 1' DocumentLocation.MinColumn); 				editor.QueueDraw (); 				SetHelpWindowPosition (); 				break; 				 			case Gdk.Key.KP_Enter: 			case Gdk.Key.Return: 				OnExited (new InsertionCursorEventArgs (true' insertionPoints[CurIndex])); 				break; 				 			case Gdk.Key.Escape: 				OnExited (new InsertionCursorEventArgs (false' null)); 				break; 			}
Missing Default,Mono.TextEditor,TextEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor\TextEditorData.cs,DeleteSelection,The following switch statement is missing a default case: switch (selection.SelectionMode) { 			case MonoDevelop.Ide.Editor.SelectionMode.Normal: 				var segment = selection.GetSelectionRange (this); 				int len = System.Math.Min (segment.Length' Document.Length - segment.Offset); 				var loc = selection.Anchor < selection.Lead ? selection.Anchor : selection.Lead; 				caret.Location = loc; 				EnsureCaretIsNotVirtual (); 				if (len > 0) 					Remove (segment.Offset' len); 				break; 			case MonoDevelop.Ide.Editor.SelectionMode.Block: 				DocumentLocation visStart = LogicalToVisualLocation (selection.Anchor); 				DocumentLocation visEnd = LogicalToVisualLocation (selection.Lead); 				int startCol = System.Math.Min (visStart.Column' visEnd.Column); 				int endCol = System.Math.Max (visStart.Column' visEnd.Column); 				bool preserve = Caret.PreserveSelection; 				Caret.PreserveSelection = true; 				var changes = new List<Microsoft.CodeAnalysis.Text.TextChange> ();  				for (int lineNr = selection.MinLine; lineNr <= selection.MaxLine; lineNr++) { 					DocumentLine curLine = Document.GetLine (lineNr); 					int col1 = curLine.GetLogicalColumn (this' startCol) - 1; 					int col2 = System.Math.Min (curLine.GetLogicalColumn (this' endCol) - 1' curLine.Length); 					if (col1 >= col2) 						continue; 					changes.Add (new Microsoft.CodeAnalysis.Text.TextChange (new Microsoft.CodeAnalysis.Text.TextSpan (curLine.Offset + col1' col2 - col1)' "")); 				} 				Document.ApplyTextChanges (changes); 				int column = System.Math.Min (selection.Anchor.Column' selection.Lead.Column); 				MainSelection = selection.WithRange ( 					new DocumentLocation (selection.Anchor.Line' column)' 					new DocumentLocation (selection.Lead.Line' column) 				); 				Caret.PreserveSelection = preserve; 				break; 			}
Missing Default,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following switch statement is missing a default case: switch (widgetExtension.HorizontalAlignment) { 			case HorizontalAlignment.LineLeft: 				x = (int)widget.TextEditor.TextViewMargin.XOffset; 				break; 			case HorizontalAlignment.LineRight: 				x = lineStart + lw + 4; 				break; 			case HorizontalAlignment.LineCenter: 				x = lineStart + (lw - size.Width) / 2; 				if (x < lineStart) 					x = lineStart; 				break; 			case HorizontalAlignment.Left: 				x = 0; 				break; 			case HorizontalAlignment.Right: 				break; 			case HorizontalAlignment.Center: 				break; 			case HorizontalAlignment.ViewLeft: 				break; 			case HorizontalAlignment.ViewRight: 				break; 			case HorizontalAlignment.ViewCenter: 				break; 			}
Missing Default,MonoDevelop.SourceEditor,SourceEditorView,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following switch statement is missing a default case: switch (widgetExtension.VerticalAlignment) { 			case VerticalAlignment.LineTop: 				break; // the default 			case VerticalAlignment.LineBottom: 				y += lh - size.Height; 				break; 			case VerticalAlignment.LineCenter: 				y = y + (lh - size.Height) / 2; 				break; 			case VerticalAlignment.AboveLine: 				y -= size.Height; 				break; 			case VerticalAlignment.BelowLine: 				y += lh; 				break; 			}
Missing Default,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,GetEolString,The following switch statement is missing a default case: switch (detectedEol) { 			case "\n": 				return "UNIX"; 			case "\r\n": 				return "Windows"; 			case "\r": 				return "Mac"; 			case "?": 				return "mixed"; 			}
Missing Default,MonoDevelop.SourceEditor,SourceEditorWidget,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorrectEolMarkers,The following switch statement is missing a default case: switch (combo.Active) { 				case 0: 					ConvertLineEndings (); 					view.DocumentController.ShowNotification = false; 					await view.Save (fileName' view.SourceEncoding); 					break; 				case 1: 					FileRegistry.ConvertLineEndingsInAllFiles (); 					break; 				case 2: 					UseIncorrectMarkers = true; 					view.DocumentController.ShowNotification = false; 					break; 				case 3: 					FileRegistry.IgnoreLineEndingsInAllFiles (); 					break; 				}
Missing Default,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,CountTasks,The following switch statement is missing a default case: switch (task.Severity) { 				case DiagnosticSeverity.Error: 					errors++; 					break; 				case DiagnosticSeverity.Warning: 					warnings++; 					break; 				case DiagnosticSeverity.Info: 					infos++; 					break; 				case DiagnosticSeverity.Hidden: 					hidden++; 					break; 				}
Missing Default,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following switch statement is missing a default case: switch (currentFocus) { 					case FocusWidget.Indicator: 						cr.LineWidth = 1.0;  						cr.SetSourceColor (Styles.FocusColor.ToCairoColor ()); 						cr.Rectangle (1' 1' Allocation.Width - 2' Allocation.Width - 2); 						cr.SetDash (new double [] { 1' 1 }' 0.5); 						cr.Stroke (); 						break;  					case FocusWidget.Tasks: 						break;  					case FocusWidget.Usages: 						break; 					}
Missing Default,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,FocusNextArea,The following switch statement is missing a default case: switch (currentFocus) { 			case FocusWidget.None: 				if (direction == DirectionType.TabForward) { 					currentFocus = FocusWidget.Indicator; 				} else if (direction == DirectionType.TabBackward) { 					if (hasUsages) { 						focusedUsageIndex = currentDrawingState.Usages.Count - 1; 						currentFocus = FocusWidget.Usages; 					} else if (hasTasks) { 						focusedTaskIndex = currentDrawingState.Tasks.Count - 1; 						currentFocus = FocusWidget.Tasks; 					} else { 						currentFocus = FocusWidget.Indicator; 					} 				} 				break;  			case FocusWidget.Indicator: 				if (direction == DirectionType.TabForward) { 					if (hasTasks) { 						focusedTaskIndex = 0; 						currentFocus = FocusWidget.Tasks; 					} else if (hasUsages) { 						focusedUsageIndex = 0; 						currentFocus = FocusWidget.Usages; 					} else { 						currentFocus = FocusWidget.None; 					} 				} else if (direction == DirectionType.TabBackward) { 					currentFocus = FocusWidget.None; 				} 				break;  			case FocusWidget.Tasks: 				if (direction == DirectionType.TabForward) { 					if (hasUsages) { 						focusedUsageIndex = 0; 						currentFocus = FocusWidget.Usages; 					} else { 						currentFocus = FocusWidget.None; 					} 				} else if (direction == DirectionType.TabBackward) { 					currentFocus = FocusWidget.Indicator; 				} 				break;  			case FocusWidget.Usages: 				if (direction == DirectionType.TabForward) { 					currentFocus = FocusWidget.None; 				} else if (direction == DirectionType.TabBackward) { 					if (hasTasks) { 						focusedTaskIndex = 0; 						currentFocus = FocusWidget.Tasks; 					} else { 						currentFocus = FocusWidget.Indicator; 					} 				}  				break; 			}
Missing Default,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnFocused,The following switch statement is missing a default case: switch (direction) { 			case DirectionType.TabForward: 			case DirectionType.TabBackward: 				ret = FocusNextArea (direction); 				break; 			case DirectionType.Left: 			case DirectionType.Right: 				ret = false; 				break;  			case DirectionType.Up: 			case DirectionType.Down: 				if (currentFocus == FocusWidget.None) { 					ret = false; 					break; 				} else if (currentFocus == FocusWidget.Indicator) { 					// Up from the indicator moves the focus out of the widget 					if (direction == DirectionType.Up) { 						ret = false; 						break; 					} else { 						// Focus either the tasks or usages if they are available 						ret = FocusNextArea (DirectionType.TabForward); 						break; 					} 				}  				ret = FocusNextTaskOrUsage (direction); 				break; 			}
Missing Default,Mono.TextEditor.PopupWindow,ListWindow<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.PopupWindow\ListWindow.cs,ProcessKey,The following switch statement is missing a default case: switch (key) 			{ 				case Gdk.Key.Up: 					if (list.SelectionDisabled) 						list.SelectionDisabled = false; 					else 						list.Selection --; 					return ListWindowKeyAction.Ignore; 					 				case Gdk.Key.Down: 					if (list.SelectionDisabled) 						list.SelectionDisabled = false; 					else 						list.Selection ++; 					return ListWindowKeyAction.Ignore; 					 				case Gdk.Key.Page_Up: 					list.Selection -= list.VisibleRows - 1; 					return ListWindowKeyAction.Ignore; 					 				case Gdk.Key.Page_Down: 					list.Selection += list.VisibleRows - 1; 					return ListWindowKeyAction.Ignore; 					 				case Gdk.Key.Left: 					//if (curPos == 0) return KeyAction.CloseWindow | KeyAction.Process; 					//curPos--; 					return ListWindowKeyAction.Process; 					 				case Gdk.Key.BackSpace: 					if (curPos == 0 || (modifier & Gdk.ModifierType.ControlMask) != 0) 						return ListWindowKeyAction.CloseWindow | ListWindowKeyAction.Process; 					curPos--; 					word.Remove (curPos' 1); 					UpdateWordSelection (); 					return ListWindowKeyAction.Process; 					 				case Gdk.Key.Right: 					//if (curPos == word.Length) return KeyAction.CloseWindow | KeyAction.Process; 					//curPos++; 					return ListWindowKeyAction.Process; 				 				case Gdk.Key.Caps_Lock: 				case Gdk.Key.Num_Lock: 				case Gdk.Key.Scroll_Lock: 					return ListWindowKeyAction.Ignore; 					 				case Gdk.Key.Return: 				case Gdk.Key.ISO_Enter: 				case Gdk.Key.Key_3270_Enter: 				case Gdk.Key.KP_Enter: 					return (list.SelectionDisabled? ListWindowKeyAction.Process : (ListWindowKeyAction.Complete | ListWindowKeyAction.Ignore)) 						| ListWindowKeyAction.CloseWindow; 				 				case Gdk.Key.Escape: 					return ListWindowKeyAction.CloseWindow | ListWindowKeyAction.Ignore; 				 				case Gdk.Key.Home: 				case Gdk.Key.End: 					return ListWindowKeyAction.CloseWindow | ListWindowKeyAction.Process; 					 				case Gdk.Key.Control_L: 				case Gdk.Key.Control_R: 				case Gdk.Key.Alt_L: 				case Gdk.Key.Alt_R: 				case Gdk.Key.Shift_L: 				case Gdk.Key.Shift_R: 				case Gdk.Key.ISO_Level3_Shift:	// AltGr 					return ListWindowKeyAction.Process; 			}
Missing Default,Mono.TextEditor.Theatrics,AnimatedBox,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\Mono.TextEditor.Theatrics\AnimatedBox.cs,OnActorStep,The following switch statement is missing a default case: switch (actor.Target.AnimationState) { 			case AnimationState.Coming: 				actor.Target.Percent = actor.Percent; 				if (actor.Expired) { 					actor.Target.AnimationState = AnimationState.Idle; 					return false; 				} 				break; 			case AnimationState.IntendingToGo: 				actor.Target.AnimationState = AnimationState.Going; 				actor.Target.Bias = actor.Percent; 				actor.Reset ((uint)(actor.Target.Duration * actor.Percent)); 				break; 			case AnimationState.Going: 				if (actor.Expired) { 					actor.Target.Unparent (); 					children.Remove (actor.Target.Node); 					return false; 				} else { 					actor.Target.Percent = 1.0 - actor.Percent; 				} 				break; 			}
Missing Default,MonoDevelop.SourceEditor.Braces,BraceCompletionEditorExtension,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.Braces\BraceCompletionEditorExtension.cs,KeyPress,The following switch statement is missing a default case: switch (descriptor.SpecialKey) { 				case SpecialKey.Return: 					if (!IsCompletionActive) { 						bool handledCommand = false;  						using (var undo = Editor.OpenUndoGroup ()) {  							Manager.PreReturn (out handledCommand);  							if (handledCommand) { 								return false; 							}  							bool result = base.KeyPress (descriptor); 							Manager.PostReturn ();  							Editor.FixVirtualIndentation ();  							return result;  						} 					} 					break; 				case SpecialKey.Tab: 					if (!IsCompletionActive) { 						bool handledCommand = false;  						Manager.PreTab (out handledCommand);  						if (handledCommand) { 							return false; 						}  						bool result = base.KeyPress (descriptor);  						Manager.PostTab ();  						return result; 					} 					break; 				case SpecialKey.BackSpace: { 						bool handledCommand = false;  						Manager.PreBackspace (out handledCommand);  						if (handledCommand) { 							return false; 						}  						bool result = base.KeyPress (descriptor);  						Manager.PostBackspace ();  						return result; 					} 				case SpecialKey.Delete: { 						bool handledCommand = false;  						Manager.PreDelete (out handledCommand);  						if (handledCommand) { 							return false; 						}  						bool result = base.KeyPress (descriptor);  						Manager.PostDelete ();  						return result; 					} 				}
Missing Default,Mono.TextEditor.Highlighting,XmlReadHelper,C:\research\architectureSmells\repos\mono_monodevelop\main\src\core\Mono.TextEditor.Shared\Mono.TextEditor.Highlighting\XmlReadHelper.cs,ReadList,The following switch statement is missing a default case: switch (reader.NodeType) { 				case XmlNodeType.EndElement: 					if (endNodes.Contains (reader.LocalName))  						return; 					LoggingService.LogWarning ("Unknown end node: " + reader.LocalName + " valid end nodes are: " + ConcatString (endNodes)); 					break; 				case XmlNodeType.Element: 					if (!didReadStartNode && endNodes.Contains (reader.LocalName)) { 						didReadStartNode = true; //						break; 					} 					bool validNode = callback (data); 					if (!validNode)  						LoggingService.LogWarning ("Unknown node: " + reader.LocalName); 					if (data.SkipNextRead)  						goto skip; 					break; 				}
