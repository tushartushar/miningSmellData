Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,Setup,The length of the statement  "			await ((GitRepository)Repo).RunOperationAsync (() => ((GitRepository)Repo).RootRepository.Config.Set ("core.ignorecase"' false));" is 129.
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestDiff,The length of the statement  "			Assert.AreEqual (difftext' (await Repo.GenerateDiffAsync (LocalPath + "testfile"' await Repo.GetVersionInfoAsync (LocalPath + "testfile"' VersionInfoQueryFlags.IgnoreCache))).Content);" is 184.
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestStashNoExtraCommit,The length of the statement  "			Assert.AreEqual (commitCount' (await repo2.GetHistoryAsync (repo2.RootPath' null)).Length' "stash1 added extra commit.");" is 121.
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestStashNoExtraCommit,The length of the statement  "			Assert.AreEqual (commitCount' (await repo2.GetHistoryAsync (repo2.RootPath' null)).Length' "stash2 added extra commit.");" is 121.
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestGitBranchCreation,The length of the statement  "				Assert.IsTrue (branches.Any (b => b.FriendlyName == "branch3") && branches.All (b => b.FriendlyName != "branch2")' "Failed to rename branch");" is 142.
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,DeleteWithStagedChanges,The length of the statement  "			Assert.AreEqual (VersionStatus.Versioned | VersionStatus.ScheduledDelete' (await Repo.GetVersionInfoAsync (added' VersionInfoQueryFlags.IgnoreCache)).Status);" is 158.
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,DeleteWithStagedChanges,The length of the statement  "			Assert.AreEqual (VersionStatus.Versioned | VersionStatus.ScheduledDelete' (await Repo.GetVersionInfoAsync (added' VersionInfoQueryFlags.IgnoreCache)).Status);" is 158.
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,CreateBranchWithRemoteSource,The length of the statement  "				Assert.True ((await repo2.GetBranchesAsync ()).Any (b => b.FriendlyName == "testBranch2" && b.TrackedBranch.FriendlyName == trackSource));" is 138.
Long Statement,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestGitRecursiveCloneFailsAndDoesntCrash,The length of the statement  "				Assert.That (exception' Is.InstanceOf<LibGit2Sharp.NotFoundException> ().Or.InstanceOf<LibGit2Sharp.NameConflictException> ().Or.Message.EqualTo ("reference 'refs/heads/master' not found"));" is 190.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,FileIsCommitted,The length of the statement  "			VersionInfo vi = await Repo.GetVersionInfoAsync (LocalPath + "testfile"' VersionInfoQueryFlags.IncludeRemoteStatus | VersionInfoQueryFlags.IgnoreCache);" is 152.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,LogSinceWorksAsync,The length of the statement  "				Assert.AreNotEqual (await history [historyId].GetPreviousAsync ()' rev' "The revision was found in slice' yet should not be in it.");" is 133.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,Reverts2,The length of the statement  "			Assert.AreEqual (VersionStatus.Unversioned' (await Repo.GetVersionInfoAsync (added' VersionInfoQueryFlags.IgnoreCache)).Status);" is 128.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,MoveAndMoveBack,The length of the statement  "			Assert.AreEqual (VersionStatus.Unversioned' (await Repo.GetVersionInfoAsync (dirFile' VersionInfoQueryFlags.IgnoreCache)).Status);" is 130.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,MoveAndMoveBack,The length of the statement  "			Assert.AreEqual (VersionStatus.Versioned' (await Repo.GetVersionInfoAsync (added' VersionInfoQueryFlags.IgnoreCache)).Status);" is 126.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,RevertingADeleteMakesTheFileVersioned,The length of the statement  "			Assert.AreEqual (VersionStatus.Versioned' (await Repo.GetVersionInfoAsync (added' VersionInfoQueryFlags.IgnoreCache)).Status);" is 126.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,MoveAndMoveBackCaseOnly,The length of the statement  "			Assert.AreEqual (VersionStatus.ScheduledAdd' (await Repo.GetVersionInfoAsync (dstFile' VersionInfoQueryFlags.IgnoreCache)).Status & VersionStatus.ScheduledAdd);" is 160.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,MoveAndMoveBackCaseOnly,The length of the statement  "			Assert.AreEqual (VersionStatus.ScheduledDelete' (await Repo.GetVersionInfoAsync (srcFile' VersionInfoQueryFlags.IgnoreCache)).Status & VersionStatus.ScheduledDelete);" is 166.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,MoveAndMoveBackCaseOnly,The length of the statement  "			Assert.AreEqual (VersionStatus.Unversioned' (await Repo.GetVersionInfoAsync (dstFile' VersionInfoQueryFlags.IgnoreCache)).Status);" is 130.
Long Statement,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,MoveAndMoveBackCaseOnly,The length of the statement  "			Assert.AreEqual (VersionStatus.Versioned' (await Repo.GetVersionInfoAsync (srcFile' VersionInfoQueryFlags.IgnoreCache)).Status);" is 128.
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,CheckLog,The following statement contains a magic number: int index = 2;
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,BlameExtraInternals,The following statement contains a magic number: i < 2
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,BlameExtraInternals,The following statement contains a magic number: Assert.IsFalse (annotations [2].HasDate);
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestPushChangeset,The following statement contains a magic number: Assert.AreEqual (2' diff.Items.Count ());
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestPushDiff,The following statement contains a magic number: Assert.AreEqual (2' diff.Length);
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestRemote,The following statement contains a magic number: Assert.AreEqual (2' (await repo2.GetBranchesAsync ()).Count ());
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,BlameDiffWithNotCommitedItem,The following statement contains a magic number: var contents = string.Join (Environment.NewLine' Enumerable.Repeat ("string"' 10));
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,BlameWithWorkingChanges,The following statement contains a magic number: var contents = string.Join ( 				Environment.NewLine' 				Enumerable.Repeat ("string1"' 3) 					.Concat (Enumerable.Repeat ("string2"' 3)) 					.Concat (Enumerable.Repeat ("string3"' 3)) 			);
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,BlameWithWorkingChanges,The following statement contains a magic number: var contents = string.Join ( 				Environment.NewLine' 				Enumerable.Repeat ("string1"' 3) 					.Concat (Enumerable.Repeat ("string2"' 3)) 					.Concat (Enumerable.Repeat ("string3"' 3)) 			);
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,BlameWithWorkingChanges,The following statement contains a magic number: var contents = string.Join ( 				Environment.NewLine' 				Enumerable.Repeat ("string1"' 3) 					.Concat (Enumerable.Repeat ("string2"' 3)) 					.Concat (Enumerable.Repeat ("string3"' 3)) 			);
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestGitRebaseCommitOrdering,The following statement contains a magic number: Assert.AreEqual (5' history.Length);
Magic Number,MonoDevelop.VersionControl.Git.Tests,BaseGitUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseGitRepositoryTests.cs,TestGitRebaseCommitOrdering,The following statement contains a magic number: i < 5
Magic Number,MonoDevelop.VersionControl.Git.Tests,GitIntegrityTests,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\GitIntegrityTests.cs,GetCommitChangesIgnoresUnchangedFiles,The following statement contains a magic number: Assert.AreEqual (3' changes.Length);
Magic Number,MonoDevelop.VersionControl.Git.Tests,GitIntegrityTests,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\GitIntegrityTests.cs,GetCommitChangesFromInitial,The following statement contains a magic number: Assert.AreEqual (4' changes.Length);
Magic Number,MonoDevelop.VersionControl.Git.Tests,GitIntegrityTests,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\GitIntegrityTests.cs,GetCommitChangesFullHistory,The following statement contains a magic number: Assert.AreEqual (4' changes.Length);
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,QueryThreadWorks,The following statement contains a magic number: Assert.AreEqual (2 + RepoItemsCount' vis.Length' "New DirectoryVersionInfo.");
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,QueryThreadWorks,The following statement contains a magic number: Assert.AreEqual (4 + RepoItemsCountRecursive' vis.Length' "Recursive DirectoryVersionInfo.");
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,BlameIsCorrect,The following statement contains a magic number: i < 2
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,BlameIsCorrect,The following statement contains a magic number: Assert.False (annotations [2].HasEmail);
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,BlameIsCorrect,The following statement contains a magic number: Assert.IsNotNull (annotations [2].Author);
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,BlameIsCorrect,The following statement contains a magic number: Assert.IsNull (annotations [2].Email);
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,BlameIsCorrect,The following statement contains a magic number: Assert.IsNull (annotations [2].Revision);
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,BlameIsCorrect,The following statement contains a magic number: Assert.AreEqual (annotations [2].Text' GettextCatalog.GetString ("working copy"));
Magic Number,MonoDevelop.VersionControl.Tests,BaseRepoUtilsTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\BaseRepositoryTests.cs,BlameIsCorrect,The following statement contains a magic number: Assert.AreEqual (annotations [2].Author' "<uncommitted>");
Magic Number,MonoDevelop.VersionControl.Views,EditorCompareWidgetBaseTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\EditorCompareWidgetBaseTest.cs,TestRemovalLineColorIsRed,The following statement contains a magic number: CheckCombinationsAreColor (new Hunk (0' 0' 2' 0)' AssertIsRed);
Magic Number,MonoDevelop.VersionControl.Views,EditorCompareWidgetBaseTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\EditorCompareWidgetBaseTest.cs,TestAdditionLineColorIsGreen,The following statement contains a magic number: CheckCombinationsAreColor (new Hunk (0' 0' 0' 2)' AssertIsGreen);
Magic Number,MonoDevelop.VersionControl.Views,EditorCompareWidgetBaseTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\EditorCompareWidgetBaseTest.cs,TestAdditionAndRemovalLineColorIsGreen,The following statement contains a magic number: CheckCombinationsAreColor (new Hunk (0' 0' 2' 2)' AssertIsBlue);
Magic Number,MonoDevelop.VersionControl.Views,EditorCompareWidgetBaseTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\EditorCompareWidgetBaseTest.cs,TestAdditionAndRemovalLineColorIsGreen,The following statement contains a magic number: CheckCombinationsAreColor (new Hunk (0' 0' 2' 2)' AssertIsBlue);
Magic Number,MonoDevelop.VersionControl.Views,EditorCompareWidgetBaseTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\EditorCompareWidgetBaseTest.cs,TestAdditionAndRemovalLineColorIsGreen,The following statement contains a magic number: CheckCombinationsAreColor (new Hunk (0' 0' 1' 2)' AssertIsBlue);
Magic Number,MonoDevelop.VersionControl.Views,EditorCompareWidgetBaseTest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\VersionControl\MonoDevelop.VersionControl.Git.Tests\EditorCompareWidgetBaseTest.cs,TestAdditionAndRemovalLineColorIsGreen,The following statement contains a magic number: CheckCombinationsAreColor (new Hunk (0' 0' 2' 1)' AssertIsBlue);
