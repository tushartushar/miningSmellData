Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.MHex.Data,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,Cyclomatic complexity of the method is 16
Complex Method,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,HexEditorDataSelectionChanged,Cyclomatic complexity of the method is 13
Complex Method,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,OnDraw,Cyclomatic complexity of the method is 9
Complex Method,Mono.MHex,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InsertCharacter,Cyclomatic complexity of the method is 8
Complex Method,Mono.MHex.Rendering,Margin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,HandleSelection,Cyclomatic complexity of the method is 14
Complex Method,Mono.MHex.Rendering,Margin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,HandleSelection,Cyclomatic complexity of the method is 14
Complex Method,Mono.MHex.Rendering,Margin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,TranslateToUTF8Index,Cyclomatic complexity of the method is 8
Complex Method,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,RenderLine,Cyclomatic complexity of the method is 8
Long Parameter List,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,RepaintMarginArea,The method has 5 parameters. Parameters: margin' x' y' width' height
Long Parameter List,Mono.MHex.Rendering,Margin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,HandleSelection,The method has 6 parameters. Parameters: selectionStart' selectionEnd' startOffset' endOffset' handleNotSelected' handleSelected
Long Parameter List,Mono.MHex.Rendering,Margin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,HandleSelection,The method has 8 parameters. Parameters: selectionStart' selectionEnd' startOffset' endOffset' margin' args' handleNotSelected' handleSelected
Long Parameter List,Mono.MHex.Rendering,Margin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,Draw,The method has 5 parameters. Parameters: ctx' area' line' x' y
Long Parameter List,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,Draw,The method has 5 parameters. Parameters: ctx' area' line' x' y
Long Parameter List,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,Draw,The method has 5 parameters. Parameters: ctx' area' line' x' y
Long Parameter List,Mono.MHex.Rendering,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\GutterMargin.cs,Draw,The method has 5 parameters. Parameters: ctx' area' line' x' y
Long Parameter List,Mono.MHex.Rendering,EmptySpaceMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\EmptySpaceMargin.cs,Draw,The method has 5 parameters. Parameters: drawable' area' line' x' y
Long Parameter List,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,Draw,The method has 5 parameters. Parameters: win' area' line' x' y
Long Parameter List,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The method has 6 parameters. Parameters: cr' x' y' r' w' h
Long Statement,Mono.MHex.Data,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,AppendNode,The length of the statement  "			builder.Append (GetIndent (indent)).Append ("Node (").Append ((node.color == red ? "r" : "b")).Append ("):").AppendLine (node.value.ToString ());" is 145.
Long Statement,Mono.MHex.Data,OriginalTreeNode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\PieceTable.cs,ToString,The length of the statement  "				return string.Format ("[OriginalTreeNode: Length={0}' bufferOffset={1}' TotalLength={2}]"' Length' BufferOffset' TotalLength);" is 126.
Long Statement,Mono.MHex.Data,DataTreeNode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\PieceTable.cs,ToString,The length of the statement  "				return string.Format ("[DataTreeNode: Length={0}' addBufferOffset={1}' TotalLength={2}]"' Length' AddBufferOffset' TotalLength);" is 128.
Long Statement,Mono.MHex.Data,LineUpdateRequest,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\UpdateRequest.cs,AddRedraw,The length of the statement  "			editor.RepaintArea (0' (int)(Line * editor.LineHeight - editor.HexEditorData.VAdjustment.Value)' editor.Bounds.Width' editor.LineHeight);" is 137.
Long Statement,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,HAdjustmentValueChanged,The length of the statement  "//			this.RepaintArea (this.textViewMargin.XOffset' 0' this.Bounds.Width - this.textViewMargin.XOffset' this.Bounds.Height);" is 124.
Long Statement,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,RepaintLines,The length of the statement  "			RepaintArea (0' (int)(start * LineHeight - HexEditorData.VAdjustment.Value)' Bounds.Width' (int)((end - start) * LineHeight));" is 126.
Long Statement,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,AnnounceCurrentSelection,The length of the statement  "				var message = GettextCatalog.GetString ("Selected '{0}' char:'{1}'"' data [HexEditorData.Caret.SubPosition]' (char)character);" is 126.
Long Statement,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,ScrollToCaret,The length of the statement  "			HexEditorData.VAdjustment.Value = System.Math.Max (caretY - HexEditorData.VAdjustment.PageSize + LineHeight' System.Math.Min (caretY' HexEditorData.VAdjustment.Value));" is 168.
Long Statement,Mono.MHex,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\CaretMoveActions.cs,LineEnd,The length of the statement  "			data.Caret.Offset = System.Math.Min (data.Length - 1' data.Caret.Offset + data.BytesInRow - 1 - data.Caret.Offset % data.BytesInRow);" is 133.
Long Statement,Mono.MHex,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\CaretMoveActions.cs,PageUp,The length of the statement  "			data.VAdjustment.Value = System.Math.Max (data.VAdjustment.LowerValue' data.VAdjustment.Value - data.VAdjustment.PageSize); " is 123.
Long Statement,Mono.MHex,CaretMoveActions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\CaretMoveActions.cs,PageDown,The length of the statement  "			data.VAdjustment.Value = System.Math.Min (data.VAdjustment.UpperValue - data.VAdjustment.PageSize' data.VAdjustment.Value + data.VAdjustment.PageSize); " is 151.
Long Statement,Mono.MHex,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InitDefaultBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Key.NumPadHome' ModifierKeys.Shift | ModifierKeys.Control)' SelectionActions.MoveToDocumentStart);" is 127.
Long Statement,Mono.MHex,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InitDefaultBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Key.Home' ModifierKeys.Shift | ModifierKeys.Control)' SelectionActions.MoveToDocumentStart);" is 121.
Long Statement,Mono.MHex,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InitDefaultBindings,The length of the statement  "			keyBindings.Add (GetKeyCode (Key.NumPadEnd' ModifierKeys.Shift | ModifierKeys.Control)' SelectionActions.MoveToDocumentEnd);" is 124.
Long Statement,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The length of the statement  "				HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' this' new LayoutOffsetPair(startOffset' result.Layout)' null' OnSelected);" is 154.
Long Statement,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,RenderLine,The length of the statement  "				HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' this' new LayoutOffsetPair (startOffset' result.Layout)' null' OnSelected);" is 155.
Complex Conditional,Mono.MHex.Data,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The conditional expression  "parent.color == black && 			    sibling.color == black && 			    GetColorSafe (sibling.left) == black && 			    GetColorSafe (sibling.right) == black"  is complex.
Complex Conditional,Mono.MHex.Data,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The conditional expression  "parent.color == red && 			    sibling.color == black && 			    GetColorSafe (sibling.left) == black && 			    GetColorSafe (sibling.right) == black"  is complex.
Complex Conditional,Mono.MHex.Data,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The conditional expression  "node == parent.left && 			    sibling.color == black && 			    GetColorSafe (sibling.left) == red && 			    GetColorSafe (sibling.right) == black"  is complex.
Complex Conditional,Mono.MHex.Data,RedBlackTree<T>,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The conditional expression  "node == parent.right && 			           sibling.color == black && 			           GetColorSafe (sibling.right) == red && 			           GetColorSafe (sibling.left) == black"  is complex.
Complex Conditional,Mono.MHex,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InsertCharacter,The conditional expression  "(char.IsLetterOrDigit (ch) || char.IsPunctuation (ch) || ch == ' ') && unicodeChar <= 255"  is complex.
Complex Conditional,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,RenderLine,The conditional expression  "char.IsLetterOrDigit (ch) || char.IsWhiteSpace (ch) || char.IsSymbol (ch) || char.IsPunctuation (ch)"  is complex.
Virtual Method Call from Constructor,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,HexEditor,The constructor "HexEditor" calls a virtual method "AddRedraw".
Empty Catch Block,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,UpdateCaret,The method has an empty catch block.
Empty Catch Block,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,AnnounceCurrentSelection,The method has an empty catch block.
Magic Number,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,ResetCaretBlink,The following statement contains a magic number: caretTimer = new Timer (800);
Magic Number,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,AnnounceCurrentSelection,The following statement contains a magic number: var data = Convert.ToString (character' 16);
Magic Number,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,DrawCaret,The following statement contains a magic number: ctx.Rectangle (caretX' (int)caretY' 2' LineHeight);
Magic Number,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: int start = Options.GroupBytes * 2;
Magic Number,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: i < 100
Magic Number,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: BytesInRow = 2;
Magic Number,Mono.MHex,HexEditor,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: Options.StringRepresentationType == StringRepresentationTypes.UTF16 && BytesInRow % 2 == 1
Magic Number,Mono.MHex,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InsertCharacter,The following statement contains a magic number: (char.IsLetterOrDigit (ch) || char.IsPunctuation (ch) || ch == ' ') && unicodeChar <= 255
Magic Number,Mono.MHex,SimpleEditMode,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,GetKeyCode,The following statement contains a magic number: return (int)key | (int)(m << 16);
Magic Number,Mono.MHex,HexEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomIn,The following statement contains a magic number: zoom *= 1.1;
Magic Number,Mono.MHex,HexEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomIn,The following statement contains a magic number: Zoom = System.Math.Min (8.0' System.Math.Max (0.7' zoom));
Magic Number,Mono.MHex,HexEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomIn,The following statement contains a magic number: Zoom = System.Math.Min (8.0' System.Math.Max (0.7' zoom));
Magic Number,Mono.MHex,HexEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomOut,The following statement contains a magic number: zoom *= 0.9;
Magic Number,Mono.MHex,HexEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomOut,The following statement contains a magic number: Zoom = System.Math.Min (8.0' System.Math.Max (0.7' zoom));
Magic Number,Mono.MHex,HexEditorOptions,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomOut,The following statement contains a magic number: Zoom = System.Math.Min (8.0' System.Math.Max (0.7' zoom));
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,OptionsChanged,The following statement contains a magic number: string groupString = new string ('0'' Editor.Options.GroupBytes * 2);
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,OnSelected,The following statement contains a magic number: arg.Layout.SetForeground (style.Selection' (int)(start - arg.StartOffset) * 3' (int)(end - start) * 3 - 1);
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,OnSelected,The following statement contains a magic number: arg.Layout.SetForeground (style.Selection' (int)(start - arg.StartOffset) * 3' (int)(end - start) * 3 - 1);
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,OnSelected,The following statement contains a magic number: arg.Layout.SetBackground (style.SelectionBg' (int)(start - arg.StartOffset) * 3' (int)(end - start) * 3 - 1);
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,OnSelected,The following statement contains a magic number: arg.Layout.SetBackground (style.SelectionBg' (int)(start - arg.StartOffset) * 3' (int)(end - start) * 3 - 1);
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,TranslateColumn,The following statement contains a magic number: return (uint)(column * 3);
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,CalculateCaretXPos,The following statement contains a magic number: int caretIndex = groupNumber * (Editor.Options.GroupBytes * 2 + 1) + groupByte * 2;
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,CalculateCaretXPos,The following statement contains a magic number: int caretIndex = groupNumber * (Editor.Options.GroupBytes * 2 + 1) + groupByte * 2;
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,MousePressed,The following statement contains a magic number: Caret.SubPosition = groupChar % 2;
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,GetOffset,The following statement contains a magic number: return line * BytesInRow + groupNumber * Editor.Options.GroupBytes + groupChar / 2;
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,CalculateWidth,The following statement contains a magic number: switch (Editor.Options.StringRepresentationType) { 			case StringRepresentationTypes.ASCII: 				return charWidth * bytesInRow; 			case StringRepresentationTypes.UTF16: 				return charWidth * bytesInRow / 2; 			default: 				throw new NotImplementedException (Editor.Options.StringRepresentationType.ToString ()); 			}
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,RenderLine,The following statement contains a magic number: switch (Editor.Options.StringRepresentationType) { 			case StringRepresentationTypes.ASCII: 				for (int i = 0; i < lineBytes.Length; i++) { 					byte b = lineBytes [i]; 					char ch = (char)b; 					if (!char.IsControl (ch)) { 						sb.Append (ch); 					} else { 						sb.Append ("."); 					} 				} 				break; 			case StringRepresentationTypes.UTF16: 				for (int i = 0; i < lineBytes.Length - 1; i += 2) {  					char ch = Encoding.Unicode.GetChars (lineBytes' i' 2) [0]; 					if (char.IsLetterOrDigit (ch) || char.IsWhiteSpace (ch) || char.IsSymbol (ch) || char.IsPunctuation (ch)) 						sb.Append (ch); 					else 						sb.Append ("."); 				} 				break; 			default: 				throw new NotImplementedException (Editor.Options.StringRepresentationType.ToString ()); 			}
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,RenderLine,The following statement contains a magic number: switch (Editor.Options.StringRepresentationType) { 			case StringRepresentationTypes.ASCII: 				for (int i = 0; i < lineBytes.Length; i++) { 					byte b = lineBytes [i]; 					char ch = (char)b; 					if (!char.IsControl (ch)) { 						sb.Append (ch); 					} else { 						sb.Append ("."); 					} 				} 				break; 			case StringRepresentationTypes.UTF16: 				for (int i = 0; i < lineBytes.Length - 1; i += 2) {  					char ch = Encoding.Unicode.GetChars (lineBytes' i' 2) [0]; 					if (char.IsLetterOrDigit (ch) || char.IsWhiteSpace (ch) || char.IsSymbol (ch) || char.IsPunctuation (ch)) 						sb.Append (ch); 					else 						sb.Append ("."); 				} 				break; 			default: 				throw new NotImplementedException (Editor.Options.StringRepresentationType.ToString ()); 			}
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,OnSelected,The following statement contains a magic number: arg.Layout.SetForeground (style.Selection' (int)(start - arg.StartOffset) / 2' (int)(end - start) / 2);
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,OnSelected,The following statement contains a magic number: arg.Layout.SetForeground (style.Selection' (int)(start - arg.StartOffset) / 2' (int)(end - start) / 2);
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,OnSelected,The following statement contains a magic number: arg.Layout.SetBackground (style.SelectionBg' (int)(start - arg.StartOffset) / 2' (int)(end - start) / 2);
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,OnSelected,The following statement contains a magic number: arg.Layout.SetBackground (style.SelectionBg' (int)(start - arg.StartOffset) / 2' (int)(end - start) / 2);
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,Draw,The following statement contains a magic number: column /= 2;
Magic Number,Mono.MHex.Rendering,GutterMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\GutterMargin.cs,Draw,The following statement contains a magic number: ctx.DrawTextLayout (layout.Layout' x + Width - sz.Width - 4' y);
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,OptionsChanged,The following statement contains a magic number: marginWidth *= 12;
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,OptionsChanged,The following statement contains a magic number: marginWidth /= 10;
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: DrawRoundRectangle (cr' x + 1' y + 1' 8' Width - 4' Editor.LineHeight - 4);
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: DrawRoundRectangle (cr' x + 1' y + 1' 8' Width - 4' Editor.LineHeight - 4);
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: DrawRoundRectangle (cr' x + 1' y + 1' 8' Width - 4' Editor.LineHeight - 4);
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: const double ARC_TO_BEZIER = 0.55228475;
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: double radius_y = r / 4;
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: radius_x = w / 2;
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: radius_y = h / 2;
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (w - 2 * radius_x' 0.0);
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (0' h - 2 * radius_y);
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (-w + 2 * radius_x' 0);
Magic Number,Mono.MHex.Rendering,IconMargin,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (0' -h + 2 * radius_y);
Magic Number,MonoDevelop.HexEditor,RawStringBuffer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,RawStringBuffer,The following statement contains a magic number: Bytes = new byte[raw.Length * 2];
Magic Number,MonoDevelop.HexEditor,RawStringBuffer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,RawStringBuffer,The following statement contains a magic number: Length = raw.Length * 2;
Magic Number,MonoDevelop.HexEditor,RawStringBuffer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,GetBytes,The following statement contains a magic number: var chunk = array.Substring ((int) offset / 2' (count - i) / 2);
Magic Number,MonoDevelop.HexEditor,RawStringBuffer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,GetBytes,The following statement contains a magic number: var chunk = array.Substring ((int) offset / 2' (count - i) / 2);
Magic Number,MonoDevelop.HexEditor,RawCharArrayBuffer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,AppendBytes,The following statement contains a magic number: int n = encoder.GetBytes (chars' 0' chars.Length' Bytes' (int) Offset' Offset + (chars.Length * 2) == Length);
Missing Default,Mono.MHex.Data,HexEditorData,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\HexEditorData.cs,DeleteSelection,The following switch statement is missing a default case: switch (MainSelection.SelectionMode) { 			case SelectionMode.Normal: 				ByteBuffer.Remove (MainSelection.Segment); 				break; 			case SelectionMode.Block: 				throw new NotImplementedException (); 			}
Missing Default,Mono.MHex,HexEditorDebugger,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorDebugger.cs,HexEditorDebugger,The following switch statement is missing a default case: switch (comboBox.SelectedIndex) { 				case 0: 					editor.Options.StringRepresentationType = StringRepresentationTypes.ASCII; 					break; 				case 1: 					editor.Options.StringRepresentationType = StringRepresentationTypes.UTF16; 					break; 				}
Missing Default,MonoDevelop.HexEditor,HexEditorVisualizer,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,GetVisualizerWidget,The following switch statement is missing a default case: switch (val.TypeName) { 				case "sbyte[]": 					buffer = new RawSByteArrayBuffer (rawArray); 					break; 				case "char[]": 					buffer = new RawCharArrayBuffer (rawArray); 					break; 				case "byte[]": 					buffer = new RawByteArrayBuffer (rawArray); 					break; 				}
