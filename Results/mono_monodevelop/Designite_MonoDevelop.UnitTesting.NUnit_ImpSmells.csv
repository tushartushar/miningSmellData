Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunWithConsoleRunner,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,ReportXmlResult,Cyclomatic complexity of the method is 18
Long Parameter List,MonoDevelop.UnitTesting.NUnit.External,ExternalTestRunner,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\ExternalTestRunner.cs,Run,The method has 8 parameters. Parameters: listener' nameFilter' path' suiteName' supportAssemblies' testRunnerType' testRunnerAssembly' crashLogFile
Long Parameter List,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunUnitTest,The method has 5 parameters. Parameters: test' suiteName' pathName' testName' testContext
Long Parameter List,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunWithConsoleRunner,The method has 6 parameters. Parameters: cmd' test' suiteName' pathName' testName' testContext
Long Statement,MonoDevelop.UnitTesting.NUnit.External,ExternalTestRunner,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\ExternalTestRunner.cs,Connect,The length of the statement  "			var exePath = Path.Combine (Path.GetDirectoryName (GetType ().Assembly.Location)' version.ToString ()' "NUnitRunner.exe");" is 122.
Long Statement,MonoDevelop.UnitTesting.NUnit.External,ExternalTestRunner,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\ExternalTestRunner.cs,Connect,The length of the statement  "			connection = new RemoteProcessConnection (exePath' assemblyDirectory' executionHandler' console' Runtime.MainSynchronizationContext);" is 133.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunUnitTest,The length of the statement  "					string msg = GettextCatalog.GetString ("Could not get a valid path to the assembly. There may be a conflict in the project configurations.");" is 141.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunUnitTest,The length of the statement  "				result = runner.Run (localMonitor' filter' AssemblyPath' ""' supportAssemblies' testRunnerType' testRunnerAssembly' crashLogFile).Result;" is 137.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunWithConsoleRunner,The length of the statement  "				bool automaticUpdates = cmd.Command != null && (cmd.Command.Contains ("GuiUnit") || (cmd.Command.Contains ("mdtool.exe") && cmd.Arguments.Contains ("run-md-tests"))); " is 166.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunWithConsoleRunner,The length of the statement  "						bool macunitStyle = doc.Root.Element ("environment") != null && doc.Root.Element ("environment").Attribute ("macunit-version") != null;" is 135.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetNUnitVersion,The length of the statement  "			if (p.Reference.IndexOf ("GuiUnit"' StringComparison.OrdinalIgnoreCase) != -1 || p.Reference.StartsWith ("nunitlite"' StringComparison.OrdinalIgnoreCase))" is 154.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetSourceCodeLocation,The length of the statement  "			var task = NUnitSourceCodeLocationFinder.TryGetSourceCodeLocationAsync (project' fixtureTypeNamespace' fixtureTypeName' testName);" is 130.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetCustomConsoleRunner,The length of the statement  "				var guiUnit = project.References.FirstOrDefault (pref => pref.ReferenceType == ReferenceType.Assembly && StringComparer.OrdinalIgnoreCase.Equals (Path.GetFileName (pref.Reference)' "GuiUnit.exe"));" is 197.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetCustomConsoleRunner,The length of the statement  "				var projectReference = project.References.FirstOrDefault (pref => pref.ReferenceType == ReferenceType.Project && pref.Reference.StartsWith ("GuiUnit"' StringComparison.OrdinalIgnoreCase));" is 188.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetSupportAssembliesAsync,The length of the statement  "				// Check to see if the project doesn't want to have support assemblies loaded (e.g. if it ensures every dependency is available in the output folder)" is 149.
Long Statement,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,IsSupportAssembly,The length of the statement  "			bool IsGacReference () => string.Equals (r.Metadata.GetValue ("ResolvedFrom")' "{GAC}"' StringComparison.OrdinalIgnoreCase);" is 124.
Complex Conditional,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,IsSupportAssembly,The conditional expression  "r.IsFrameworkFile || r.IsImplicit || r.IsFacade || IsGacReference ()"  is complex.
Empty Catch Block,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,Dispose,The method has an empty catch block.
Empty Catch Block,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,Refresh,The method has an empty catch block.
Empty Catch Block,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The method has an empty catch block.
Empty Catch Block,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The method has an empty catch block.
Magic Number,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,CountTestCases,The following statement contains a magic number: Monitor.Wait (locker' 10000);
Magic Number,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The following statement contains a magic number: !Monitor.Wait (loadQueue' 5000' true)
Magic Number,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetNUnitVersion,The following statement contains a magic number: aname.Version.Major == 2
Magic Number,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetNUnitVersion,The following statement contains a magic number: return p.IsAtLeastVersion (new Version (3' 0)) ? NUnitVersion.NUnit3 : NUnitVersion.NUnit2;
Magic Number,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetSourceCodeLocation,The following statement contains a magic number: !task.Wait (2000)
Missing Default,MonoDevelop.UnitTesting.NUnit.External,TcpTestListener,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\TcpTestListener.cs,TcpTestListener,The following switch statement is missing a default case: switch (action) { 							case "suite-started": 								UpdateTestSuiteStatus (testName' false); break; 							case "test-started": 								UpdateTestSuiteStatus (testName' true); 								listener.TestStarted (testName); break; 							case "test-finished": 								var res = CreateResult (element); 								AddTestResult (res); 								listener.TestFinished (testName' res); break; 							case "suite-finished": 								if (testName == rootTestName) { 									FinishSuites (0); 									listener.SuiteFinished ("<root>"' CreateResult (element)); 									rootSuiteStarted = false; 								} 								break; 							}
Missing Default,MonoDevelop.UnitTesting.NUnit,NUnitAssemblyTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitAssemblyTestSuite.cs,ReportXmlResult,The following switch statement is missing a default case: switch (result.Status) { 				case ResultStatus.Success: 					result.Passed++; 					break; 				case ResultStatus.Failure: 					result.Failures++; 					break; 				case ResultStatus.Ignored: 					result.Ignored++; 					break; 				case ResultStatus.Inconclusive: 					result.Inconclusive++; 					break; 				}
Missing Default,MonoDevelop.UnitTesting.NUnit,NUnitProjectTestSuite,C:\research\architectureSmells\repos\mono_monodevelop\main\src\addins\MonoDevelop.UnitTesting.NUnit\MonoDevelop.UnitTesting.NUnit\NUnitProjectTestSuite.cs,GetNUnitVersion,The following switch statement is missing a default case: switch (item) { 			case ProjectReference pr: 				return GetNUnitVersion (pr); 			case ProjectPackageReference ppr: 				return GetNUnitVersion (ppr); 			}
