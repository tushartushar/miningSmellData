Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,RPi.Pwm.Motors,StepperMotor,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\Motors\StepperMotor.cs,StepperMotor,The method has 5 parameters. Parameters: controller' controlChannel0' controlChannel1' controlChannel2' controlChannel3
Magic Number,RPi.Pwm,Pca9685DeviceFactory,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\Pca9685DeviceFactory.cs,GetRealDevice,The following statement contains a magic number: PwmFrequency = new Frequency(60);
Magic Number,RPi.Pwm,PwmDeviceStub,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\PwmDeviceStub.cs,PwmDeviceStub,The following statement contains a magic number: var oneToEleven = from n in Enumerable.Range(0' 11) select (PwmChannel) Enum.ToObject(typeof(PwmChannel)' n);
Magic Number,RPi.Pwm.Motors,DcMotor,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\Motors\DCMotor.cs,Go,The following statement contains a magic number: if (powerPercent == 100)              {                  Log.Debug(m => m("DC.{0}={2}.{1} (FULL)"' channelA' powerPercent' direction));                  Controller.SetFull(channelA' true);                  Controller.SetFull(channelB' false);              }              else if (powerPercent == 0)              {                  Log.Debug(m=>m("DC.{0}={2}.{1} (FULL OFF)"' channelA' powerPercent' direction));                  Controller.SetFull(channelA' false);                  Controller.SetFull(channelB' false);              }              else              {                  Log.Debug(m => m("DC.{0}={3}.{1} (pwm={2})"' channelA' powerPercent' speedInPwm' direction));                  Controller.SetPwm(channelA' 0' speedInPwm);                  Controller.SetFull(channelB' false);              }
Magic Number,RPi.Pwm.Motors,PwmComponentBase,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\Motors\PwmComponentBase.cs,GetCoercedPercent,The following statement contains a magic number: if (percent > 100)              {                  percent = 100;              }
Magic Number,RPi.Pwm.Motors,PwmComponentBase,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\Motors\PwmComponentBase.cs,GetCoercedPercent,The following statement contains a magic number: if (percent > 100)              {                  percent = 100;              }
Magic Number,RPi.Pwm.Motors,PwmComponentBase,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\Motors\PwmComponentBase.cs,GetPercentAsPwm,The following statement contains a magic number: var speedInPwm = (coercedPercent * PwmMaximum) / 100;
Magic Number,RPi.Pwm.Motors,ServoMotor,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\Motors\ServoMotor.cs,MoveTo,The following statement contains a magic number: CurrentPwm = (int) (MinimumPosition + (gap * percent / 100));
Magic Number,RPi.Pwm.Motors,StepperMotor,C:\repos\neutmute_RPi.Demo\src\RPi.Pwm\Motors\StepperMotor.cs,StepperMotor,The following statement contains a magic number: StepDelayMs = 100;
