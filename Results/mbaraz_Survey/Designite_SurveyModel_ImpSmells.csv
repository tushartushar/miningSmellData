Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkInequality,Cyclomatic complexity of the method is 18
Complex Method,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkSyndetic,Cyclomatic complexity of the method is 9
Long Parameter List,SurveyModel,SurveyQuestion,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\SurveyQuestion.cs,ValidateAnswer,The method has 11 parameters.
Long Parameter List,SurveyModel.Logic,TagCondition,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\TagCondition.cs,check,The method has 5 parameters.
Long Statement,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,ShouldSkip,The length of the statement  "		return ShouldSkip (question.ConditionOnTagId' question.ConditionOnTagValue) || (question.FilterAnswersTagId != null && !GetFilteredAnswers (question).Any () || DispStudentSkip (question)); " is 188.
Long Statement,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,ShouldSkip,The length of the statement  "	return ShouldSkip (question.ConditionString) || (question.FilterAnswersTagId != null && !GetFilteredAnswers (question).Any ()) || (question.IsCompositeQuestion && !GetFilteredSubitems (question).Any ()); " is 203.
Long Statement,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,GetFilteredAnswers,The length of the statement  "	return surveyQuestion.OrderedAnswerVariants.Where (variant => !ShouldSkip (surveyQuestion.FilterAnswersTagId' variant.AnswerCode)); " is 131.
Long Statement,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,GetFilteredAnswersFx,The length of the statement  "	return surveyQuestion.OrderedAnswerVariants.Where (variant => !ShouldSkip (surveyQuestion.FilterAnswersTagId' variant.AnswerCode)); " is 131.
Long Statement,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,GetFilteredSubitemsFx,The length of the statement  "	return surveyQuestion.IsOldFashioned ? GetFilteredSubitemsOld (surveyQuestion' startOrder) : GetFilteredSubitems (surveyQuestion' startOrder); " is 142.
Long Statement,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,GetFilteredSubitemsOld,The length of the statement  "		if (notSkipForTestFx (surveyQuestion.FilterAnswersTagOrder' startOrder) || !ShouldSkip (surveyQuestion.FilterAnswersTagId' i + 1)) " is 130.
Long Statement,SurveyModel,SurveyProject,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\SurveyProject.cs,InsertQuestion,The length of the statement  "		foreach (var surveyQuestion in Questions.Where (q => q.QuestionOrder >= question.QuestionOrder && q.SurveyQuestionId != question.SurveyQuestionId)) { " is 149.
Long Statement,SurveyModel,SurveyQuestion,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\SurveyQuestion.cs,ValidateAnswer,The length of the statement  "	// ' && QuestionName != "OptionalSelector"' - ���������� ������ ��� ������ ���������' ����� � ������ ��������� �� ������ ���� ����������� "������ ������ ������ "����"" " is 167.
Long Statement,SurveyModel,SurveyQuestion,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\SurveyQuestion.cs,ValidateAnswer,The length of the statement  "	CheckNoUncorrectAnswers<UnknownAnswerException> (interviewAnswer.Answers.Where (a => AnswerVariants.All (av => av.AnswerCode != a))); " is 133.
Long Statement,SurveyModel,SurveyQuestion,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\SurveyQuestion.cs,ValidateAnswer,The length of the statement  "	CheckNoUncorrectAnswers<OpenAnswerHasNoOpenPartException> (AnswerVariants.Where (av => av.IsOpenAnswer && interviewAnswer.Answers.Contains (av.AnswerCode) && !interviewAnswer.OpenAnswers.ContainsKey (av.AnswerCode)).Select (av => av.AnswerCode)); " is 246.
Long Statement,SurveyModel,SurveyQuestion,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\SurveyQuestion.cs,ValidateAnswer,The length of the statement  "		CheckNoUncorrectAnswers<RankAnswerNoRankPartException> (interview.GetFilteredAnswers (this).Where (av => !interviewAnswer.Rank.ContainsKey (av.AnswerCode))); " is 157.
Long Statement,SurveyModel,SurveyQuestion,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\SurveyQuestion.cs,ValidateAnswer,The length of the statement  "		CheckNoUncorrectAnswers<RankAnswerWrongException> (interviewAnswer.Rank.Where (r => r.Value > MaxRank).Select (r => r.Key)); " is 124.
Long Statement,SurveyModel,SurveyQuestion,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\SurveyQuestion.cs,ValidateAnswer,The length of the statement  "		CheckNoUncorrectAnswers<RankAnswerWrongException> (interviewAnswer.Rank.Where (r => r.Value < RANK_FAILED_TO_ANSWER).Select (r => r.Key)); " is 138.
Long Statement,SurveyModel.Logic,TagCondition,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\TagCondition.cs,check,The length of the statement  "		var responseArray = tagValues.Where (tv => tv.TagId == expression.TagId).OrderBy (tv => tv.Value).Select (tv => tv.Value.Value).ToArray (); " is 139.
Long Statement,SurveyModel.Univer,Facility,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Univer\Facility.cs,GetTrimedName,The length of the statement  "	return facilityName.Trim ().ToLower ().Replace (" факультет"' "").Replace ("факультет "' "").Replace ("международных отношений"' "международные отношения").Replace ("экономики"' "экономический"); " is 195.
Magic Number,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,DispStudentSkip,The following statement contains a magic number: if (lastQuestionNames.Length != 3 || currentQuestionNames.Length != 3 || lastQuestionNames [2] != "Attend")  	return false;  
Magic Number,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,DispStudentSkip,The following statement contains a magic number: if (lastQuestionNames.Length != 3 || currentQuestionNames.Length != 3 || lastQuestionNames [2] != "Attend")  	return false;  
Magic Number,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,DispStudentSkip,The following statement contains a magic number: if (lastQuestionNames.Length != 3 || currentQuestionNames.Length != 3 || lastQuestionNames [2] != "Attend")  	return false;  
Magic Number,SurveyModel,Interview,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Interview.cs,DispStudentSkip,The following statement contains a magic number: return lastQuestionNames [1] == currentQuestionNames [1] && lastAnswer.Answers.ElementAt (0) > 4;  
Magic Number,SurveyModel.Logic,LogicalExpression,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalExpression.cs,LogicalExpression,The following statement contains a magic number: sign = arr [2];  
Magic Number,SurveyModel.Logic,LogicalExpression,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalExpression.cs,LogicalExpression,The following statement contains a magic number: value = Convert.ToInt32 (arr [3]);  
Magic Number,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkInequality,The following statement contains a magic number: switch (signIndex) {  case 0:  	result = checkET (codesArray' value);  	break;  case 1:  	result = checkNET (codesArray' value);  	break;  case 2:  	result = checkGT (codesArray' value);  	break;  case 3:  	result = checkLT (codesArray' value);  	break;  case 4:  	result = checkNLT (codesArray' value);  	break;  case 5:  	result = checkNGT (codesArray' value);  	break;  }  
Magic Number,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkInequality,The following statement contains a magic number: switch (signIndex) {  case 0:  	result = checkET (codesArray' value);  	break;  case 1:  	result = checkNET (codesArray' value);  	break;  case 2:  	result = checkGT (codesArray' value);  	break;  case 3:  	result = checkLT (codesArray' value);  	break;  case 4:  	result = checkNLT (codesArray' value);  	break;  case 5:  	result = checkNGT (codesArray' value);  	break;  }  
Magic Number,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkInequality,The following statement contains a magic number: switch (signIndex) {  case 0:  	result = checkET (codesArray' value);  	break;  case 1:  	result = checkNET (codesArray' value);  	break;  case 2:  	result = checkGT (codesArray' value);  	break;  case 3:  	result = checkLT (codesArray' value);  	break;  case 4:  	result = checkNLT (codesArray' value);  	break;  case 5:  	result = checkNGT (codesArray' value);  	break;  }  
Magic Number,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkInequality,The following statement contains a magic number: switch (signIndex) {  case 0:  	result = checkET (codesArray' value);  	break;  case 1:  	result = checkNET (codesArray' value);  	break;  case 2:  	result = checkGT (codesArray' value);  	break;  case 3:  	result = checkLT (codesArray' value);  	break;  case 4:  	result = checkNLT (codesArray' value);  	break;  case 5:  	result = checkNGT (codesArray' value);  	break;  }  
Magic Number,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkSyndetic,The following statement contains a magic number: switch (syndeticIndex) {  case 0:  	result = value;  	break;  case 1:  	result = result && value;  	break;  case 2:  	result = result || value;  	break;  }  
Missing Default,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkInequality,The following switch statement is missing a default case: switch (signIndex) {  case 0:  	result = checkET (codesArray' value);  	break;  case 1:  	result = checkNET (codesArray' value);  	break;  case 2:  	result = checkGT (codesArray' value);  	break;  case 3:  	result = checkLT (codesArray' value);  	break;  case 4:  	result = checkNLT (codesArray' value);  	break;  case 5:  	result = checkNGT (codesArray' value);  	break;  }  
Missing Default,SurveyModel.Logic,LogicalUtil,C:\repos\mbaraz_Survey\DbFlexSurvey\SurveyModel\Logic\LogicalUtil.cs,checkSyndetic,The following switch statement is missing a default case: switch (syndeticIndex) {  case 0:  	result = value;  	break;  case 1:  	result = result && value;  	break;  case 2:  	result = result || value;  	break;  }  
