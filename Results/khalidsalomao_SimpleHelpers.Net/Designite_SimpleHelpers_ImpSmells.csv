Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SimpleHelpers,ObjectDiffPatch,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ObjectDiffPatch.cs,Diff,Cyclomatic complexity of the method is 8
Complex Method,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,prepareFindSqlQuery,Cyclomatic complexity of the method is 8
Complex Method,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,prepareFindSqlQuery,Cyclomatic complexity of the method is 8
Long Parameter List,SimpleHelpers,ParallelTasks<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ParallelTasks.cs,Process,The method has 5 parameters. Parameters: items' initialNumberOfThreads' maxNumberOfThreads' queueBoundedCapacity' action
Long Parameter List,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,insertInternal,The method has 6 parameters. Parameters: key' value' count' isDistinct' trans' db
Long Parameter List,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,prepareGetSqlQuery,The method has 5 parameters. Parameters: key' selectValueOnly' sortDescendingByDate' sqlQuery' parameters
Long Parameter List,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,prepareFindSqlQuery,The method has 5 parameters. Parameters: key' parameters' sortDescendingByDate' whereClause' queryParameter
Long Parameter List,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,setInternal,The method has 6 parameters. Parameters: key' value' count' isDistinct' trans' db
Long Parameter List,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,prepareGetSqlQuery,The method has 5 parameters. Parameters: key' selectValueOnly' sortDescendingByDate' sqlQuery' parameters
Long Parameter List,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,prepareFindSqlQuery,The method has 5 parameters. Parameters: key' parameters' sortDescendingByDate' whereClause' queryParameter
Long Statement,SimpleHelpers,ConfigManager,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ConfigManager.cs,GetConfig,The length of the statement  "                                LoadConfiguration = () => System.Configuration.ConfigurationManager.OpenExeConfiguration (System.Configuration.ConfigurationUserLevel.None); " is 140.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,CreateTable,The length of the statement  "            if (connection.Query<int> ("SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME=@table"' new { table = TableName }).FirstOrDefault () == 0) " is 151.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,Set,The length of the statement  "                insertInternal (key' Newtonsoft.Json.JsonConvert.SerializeObject (value)' DefaultOptions.MaximumItemsPerKeys' DefaultOptions.OverwriteSimilarItems' trans' db); " is 159.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,Set,The length of the statement  "                    insertInternal (i.Key' Newtonsoft.Json.JsonConvert.SerializeObject (i.Value)' DefaultOptions.MaximumItemsPerKeys' DefaultOptions.OverwriteSimilarItems' trans' db); " is 163.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,insertInternal,The length of the statement  "                db.Execute ("Delete from \"" + TableName + "\" Where [Id] in (Select [Id] FROM \"" + TableName + "\" Where [Key] = @Key Order by [Key]' [Date] DESC OFFSET @Count ROWS FETCH NEXT 10000 ROWS ONLY)"' " is 196.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,Remove,The length of the statement  "            Open ().Execute ("Delete FROM \"" + TableName + "\" Where [Key] = @Key AND [Date] <= @olderThan"' new { Key = key' olderThan = olderThan.ToUniversalTime () }); " is 159.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,Remove,The length of the statement  "            Open ().Execute ("DELETE FROM \"" + TableName + "\" Where [Date] <= @olderThan"' new { olderThan = olderThan.ToUniversalTime () }); " is 131.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,prepareFindSqlQuery,The length of the statement  "            System.Text.StringBuilder query = new System.Text.StringBuilder ("Select [Value] FROM \""' 120).Append (TableName).Append ("\" WHERE"); " is 135.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,prepareFindSqlQuery,The length of the statement  "                System.ComponentModel.PropertyDescriptorCollection properties = System.ComponentModel.TypeDescriptor.GetProperties (parameters); " is 128.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,prepareFindSqlQuery,The length of the statement  "                    values.Add (new KeyValuePair<string' object> (vName' "%\"" + property.Name + "\":" + Newtonsoft.Json.JsonConvert.SerializeObject (value) + "%")); " is 145.
Long Statement,SimpleHelpers.SQLCE,SqlCEStorageOptions,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,KeepUniqueItems,The length of the statement  "            return new SqlCEStorageOptions { AllowDuplicatedKeys = true' MaximumItemsPerKeys = maxItemsPerKeys' OverwriteSimilarItems = true }; " is 131.
Long Statement,SimpleHelpers.SQLite,ObjectExtensions,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ObjectExtensions.cs,ParseToDictionary,The length of the statement  "            System.ComponentModel.PropertyDescriptorCollection properties = System.ComponentModel.TypeDescriptor.GetProperties (obj); " is 121.
Long Statement,SimpleHelpers.SQLite,ObjectExtensions,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ObjectExtensions.cs,ParseToList,The length of the statement  "            System.ComponentModel.PropertyDescriptorCollection properties = System.ComponentModel.TypeDescriptor.GetProperties (obj); " is 121.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,CreateTable,The length of the statement  "                if (connection.Query<Int64> ("SELECT COUNT(*) FROM sqlite_master WHERE type='table' AND name=@table"' new { table = TableName }).FirstOrDefault () == 0) " is 152.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,Set,The length of the statement  "                    setInternal (key' Newtonsoft.Json.JsonConvert.SerializeObject (value)' Options.MaximumItemsPerKeys' Options.OverwriteSimilarItems' trans' db); " is 142.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,Set,The length of the statement  "                        setInternal (i.Key' Newtonsoft.Json.JsonConvert.SerializeObject (i.Value)' Options.MaximumItemsPerKeys' Options.OverwriteSimilarItems' trans' db); " is 146.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,setInternal,The length of the statement  "                db.Execute ("Delete from \"" + TableName + "\" Where [Id] in (Select [Id] FROM \"" + TableName + "\" Where [Key] = @Key Order by Key' Date DESC Limit 100000 Offset @Count)"' info' trans); " is 187.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,Remove,The length of the statement  "                db.Execute ("Delete FROM \"" + TableName + "\" Where [Key] = @Key AND [Date] <= @olderThan"' new { Key = key' olderThan = olderThan.ToUniversalTime () }); " is 154.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,Remove,The length of the statement  "                db.Execute ("DELETE FROM \"" + TableName + "\" Where [Date] <= @olderThan"' new { olderThan = olderThan.ToUniversalTime () }); " is 126.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,GetAndModify,The length of the statement  "                            setInternal (key' Newtonsoft.Json.JsonConvert.SerializeObject (item)' Options.MaximumItemsPerKeys' Options.OverwriteSimilarItems' trans' db); " is 141.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,GetAndModify,The length of the statement  "                            setInternal (i.Key' Newtonsoft.Json.JsonConvert.SerializeObject (i.Item)' Options.MaximumItemsPerKeys' Options.OverwriteSimilarItems' trans' db); " is 145.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,prepareFindSqlQuery,The length of the statement  "            System.Text.StringBuilder query = new System.Text.StringBuilder ("Select [Value] FROM \""' 120).Append (TableName).Append ("\" WHERE"); " is 135.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,prepareFindSqlQuery,The length of the statement  "                System.ComponentModel.PropertyDescriptorCollection properties = System.ComponentModel.TypeDescriptor.GetProperties (parameters); " is 128.
Long Statement,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,prepareFindSqlQuery,The length of the statement  "                    values.Add (new KeyValuePair<string' object> (vName' "%\"" + property.Name + "\":" + Newtonsoft.Json.JsonConvert.SerializeObject (value) + "%")); " is 145.
Long Statement,SimpleHelpers.SQLite,SQLiteStorageOptions,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,KeepItemsHistory,The length of the statement  "            return new SQLiteStorageOptions { AllowDuplicatedKeys = true' MaximumItemsPerKeys = -1' OverwriteSimilarItems = false }; " is 120.
Long Statement,SimpleHelpers.SQLite,SQLiteStorageOptions,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,KeepUniqueItems,The length of the statement  "            return new SQLiteStorageOptions { AllowDuplicatedKeys = true' MaximumItemsPerKeys = maxItemsPerKeys' OverwriteSimilarItems = true }; " is 132.
Complex Conditional,SimpleHelpers,ConfigManager,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ConfigManager.cs,GetConfig,The conditional expression  "name.Equals ("w3wp"' StringComparison.OrdinalIgnoreCase) ||                                  name.Equals ("aspnet_wp"' StringComparison.OrdinalIgnoreCase) ||                                  name.Equals ("iisexpress"' StringComparison.OrdinalIgnoreCase) ||                                  processName.IndexOf ("webdev.webserver"' StringComparison.OrdinalIgnoreCase) == 0"  is complex.
Empty Catch Block,SimpleHelpers,ConfigManager,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ConfigManager.cs,Converter,The method has an empty catch block.
Magic Number,SimpleHelpers,ParallelTasks<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ParallelTasks.cs,Initialize,The following statement contains a magic number: if (queueBoundedCapacity == 0)                  queueBoundedCapacity = (_maxNumberOfThreads * 2) + 1;
Magic Number,SimpleHelpers,ParallelTasks<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ParallelTasks.cs,StartMaintenance,The following statement contains a magic number: if (m_maintenanceTask == null)              {                  lock (m_lock)                  {                      if (m_maintenanceTask == null)                      {                          m_maintenanceTask = new System.Threading.Timer (ThreadCreationQueueEventHandler' null' 0' 100);                      }                  }              }
Magic Number,SimpleHelpers,ParallelTasks<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\ParallelTasks.cs,TryProcessThreadCreationQueue,The following statement contains a magic number: try              {                  // stop timed task we have a full thread pool                  if (m_threads.Count >= _maxNumberOfThreads)                  {                      StopMaintenance ();                  }                  else if (m_tasks.Count == 0)                  {                      // after 3 tries with empty queue' stop timer                      if (m_idleCounter++ > 2)                          StopMaintenance ();                  }                  else                  {                                          // create threads while there is tasks to be processed                      do                          CreateThreads (1' _action);                      while (m_threads.Count < _maxNumberOfThreads && m_tasks.Count > 0);                      // clear idle queue marker                      m_idleCounter = 0;                  }                 }              finally              {                  // release lock                  System.Threading.Interlocked.Exchange (ref m_executing' 0);              }
Magic Number,SimpleHelpers,TimedQueue<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\TimedQueue.cs,ExecuteMaintenance,The following statement contains a magic number: try              {                  // check for idle queue                  if (m_queue.Count == 0)                  {                      // after 3 loops with empty queue' stop timer                      if (m_idleCounter++ > 2)                                              StopMaintenance ();                  }                  else                  {                      // fire event                      if (OnExecution != null)                      {                          // clear idle queue marker                          m_idleCounter = 0;                            // execute event handler                          OnExecution (TakeQueuedItems ());                          }                                          else                      {                          // simply stop the queue if there is no event listening                          StopMaintenance ();                      }                  }              }              finally              {                  System.Threading.Interlocked.Exchange (ref m_executing' 0);              }
Magic Number,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,Set,The following statement contains a magic number: try              {                  foreach (var i in items)                  {                      insertInternal (i.Key' Newtonsoft.Json.JsonConvert.SerializeObject (i.Value)' DefaultOptions.MaximumItemsPerKeys' DefaultOptions.OverwriteSimilarItems' trans' db);                      if (++counter % 2500 == 0)                      {                          trans.Commit ();                          trans = db.BeginTransaction ();                      }                  }                  trans.Commit ();              }              finally              {                  trans.Dispose ();              }
Magic Number,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,prepareGetSqlQuery,The following statement contains a magic number: System.Text.StringBuilder query = new System.Text.StringBuilder ("Select "' 100);
Magic Number,SimpleHelpers.SQLCE,SqlCEStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SqlCEStorage.cs,prepareFindSqlQuery,The following statement contains a magic number: System.Text.StringBuilder query = new System.Text.StringBuilder ("Select [Value] FROM \""' 120).Append (TableName).Append ("\" WHERE");
Magic Number,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,Configure,The following statement contains a magic number: sb.PageSize = 32768;
Magic Number,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,CreateTable,The following statement contains a magic number: using (var connection = Open ())              {                  // additional configuration                  // https://wiki.mozilla.org/Performance/Avoid_SQLite_In_Your_Next_Firefox_Feature                  /* wal_autocheckpoint: number of 32KiB pages in the journal */                  /* journal_size_limit: size the sqlite will try to maintain the journal */                  // ensures we have a 2.5 sec retry/timeout in case of database heavy use                                  var pragmas = "PRAGMA wal_autocheckpoint=32; PRAGMA journal_size_limit = 4096; PRAGMA busy_timeout=2500;";                    // check if we should try to use memory mapper I/O                   if (m_options.UseMemoryMappedIO)                       pragmas += " PRAGMA mmap_size=" + 32 * 1024 * 1024  + ";";                                    connection.Execute (pragmas);                                    // check table if table exists                  if (connection.Query<Int64> ("SELECT COUNT(*) FROM sqlite_master WHERE type='table' AND name=@table"' new { table = TableName }).FirstOrDefault () == 0)                  {                      foreach (var sql in GetTableCreateSQL ())                      {                          connection.Execute (sql);                      }                  }              }
Magic Number,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,CreateTable,The following statement contains a magic number: using (var connection = Open ())              {                  // additional configuration                  // https://wiki.mozilla.org/Performance/Avoid_SQLite_In_Your_Next_Firefox_Feature                  /* wal_autocheckpoint: number of 32KiB pages in the journal */                  /* journal_size_limit: size the sqlite will try to maintain the journal */                  // ensures we have a 2.5 sec retry/timeout in case of database heavy use                                  var pragmas = "PRAGMA wal_autocheckpoint=32; PRAGMA journal_size_limit = 4096; PRAGMA busy_timeout=2500;";                    // check if we should try to use memory mapper I/O                   if (m_options.UseMemoryMappedIO)                       pragmas += " PRAGMA mmap_size=" + 32 * 1024 * 1024  + ";";                                    connection.Execute (pragmas);                                    // check table if table exists                  if (connection.Query<Int64> ("SELECT COUNT(*) FROM sqlite_master WHERE type='table' AND name=@table"' new { table = TableName }).FirstOrDefault () == 0)                  {                      foreach (var sql in GetTableCreateSQL ())                      {                          connection.Execute (sql);                      }                  }              }
Magic Number,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,CreateTable,The following statement contains a magic number: using (var connection = Open ())              {                  // additional configuration                  // https://wiki.mozilla.org/Performance/Avoid_SQLite_In_Your_Next_Firefox_Feature                  /* wal_autocheckpoint: number of 32KiB pages in the journal */                  /* journal_size_limit: size the sqlite will try to maintain the journal */                  // ensures we have a 2.5 sec retry/timeout in case of database heavy use                                  var pragmas = "PRAGMA wal_autocheckpoint=32; PRAGMA journal_size_limit = 4096; PRAGMA busy_timeout=2500;";                    // check if we should try to use memory mapper I/O                   if (m_options.UseMemoryMappedIO)                       pragmas += " PRAGMA mmap_size=" + 32 * 1024 * 1024  + ";";                                    connection.Execute (pragmas);                                    // check table if table exists                  if (connection.Query<Int64> ("SELECT COUNT(*) FROM sqlite_master WHERE type='table' AND name=@table"' new { table = TableName }).FirstOrDefault () == 0)                  {                      foreach (var sql in GetTableCreateSQL ())                      {                          connection.Execute (sql);                      }                  }              }
Magic Number,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,Set,The following statement contains a magic number: using (var db = Open ())              {                  var trans = db.BeginTransaction ();                  try                  {                                          foreach (var i in items)                      {                                                  // serialize &&                          // insert in database                          setInternal (i.Key' Newtonsoft.Json.JsonConvert.SerializeObject (i.Value)' Options.MaximumItemsPerKeys' Options.OverwriteSimilarItems' trans' db);                          // do a batch commit after a group of insertions                          if (++counter % 2000 == 0)                          {                              trans.Commit ();                              trans = db.BeginTransaction ();                          }                      }                      trans.Commit ();                  }                  finally                  {                      trans.Dispose ();                  }              }
Magic Number,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,prepareGetSqlQuery,The following statement contains a magic number: System.Text.StringBuilder query = new System.Text.StringBuilder ("Select "' 100);
Magic Number,SimpleHelpers.SQLite,SQLiteStorage<T>,C:\repos\khalidsalomao_SimpleHelpers.Net\SimpleHelpers\SQLiteStorage.cs,prepareFindSqlQuery,The following statement contains a magic number: System.Text.StringBuilder query = new System.Text.StringBuilder ("Select [Value] FROM \""' 120).Append (TableName).Append ("\" WHERE");
