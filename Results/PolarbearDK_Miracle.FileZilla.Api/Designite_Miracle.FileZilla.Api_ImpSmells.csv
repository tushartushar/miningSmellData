Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Miracle.FileZilla.Api,FileZillaServerProtocol,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\FileZillaServerProtocol.cs,HandleUnmatchedMessage,The length of the statement  "            LogData(string.Format("Unmatched message: {0}/{1} with length {2}"' message.MessageOrigin' message.MessageType' message.RawData.Length)' message.RawData); " is 154.
Long Statement,Miracle.FileZilla.Api,FileZillaServerProtocol,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\FileZillaServerProtocol.cs,Connect,The length of the statement  "                            "Unsupported FileZilla protocol version:{0} server version:{1} (API version: {2}). Please report issue at https://github.com/PolarbearDK/Miracle.FileZilla.Api."' " is 161.
Long Statement,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,WriteList16,The length of the statement  "                throw new ApiException(string.Format("Lists of more than {0} elements is not supported by this version of FileZilla protocol."' ushort.MaxValue)); " is 146.
Long Statement,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,ReadLength,The length of the statement  "                throw new ProtocolException(string.Format("Serialization error. Length expected {0} actual {1}"' reader.BaseStream.Position - pos' length)); " is 140.
Magic Number,Miracle.FileZilla.Api,Event,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\Event.cs,Deserialize,The following statement contains a magic number: var fileTime = ((ulong) fileTimeHigh) << 32 | fileTimeLow;
Magic Number,Miracle.FileZilla.Api,FileZillaServerProtocol,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\FileZillaServerProtocol.cs,SendCommand,The following statement contains a magic number: using (var stream = new MemoryStream())              {                  using (var writer = new BinaryWriter(stream))                  {                      var cmd = (byte) (((int) MessageOrigin.ClientRequest) | ((byte) messageType << 2));                      writer.Write(cmd);                      writer.WriteLength(dataAction);                  }                    if (Log != null)                      Log.WriteLine("Send: {0}"' messageType);                    Send(stream.ToArray());              }
Magic Number,Miracle.FileZilla.Api,FileZillaServerProtocol,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\FileZillaServerProtocol.cs,ReceiveMessages,The following statement contains a magic number: using (var memoryStream = new MemoryStream())              {                  memoryStream.Append(data);                  using (var reader = new BinaryReader(memoryStream))                  {                      while (reader.BaseStream.Position < reader.BaseStream.Length)                      {                          var b = reader.ReadByte();                          var count = reader.ReadInt32();                            while ((reader.BaseStream.Length - reader.BaseStream.Position) < count)                          {                              var buffer = Receive();                              memoryStream.Append(buffer);                          }                            byte[] payload = reader.ReadBytes(count);                          var message = new FileZillaMessage((MessageOrigin) (b & 0x3)' (MessageType) (b >> 2)' payload' ProtocolVersion);                          list.Add(message);                      }                  }              }
Magic Number,Miracle.FileZilla.Api,FileZillaServerProtocol,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\FileZillaServerProtocol.cs,FormatVersion,The following statement contains a magic number: return string.Format("{0:X}.{1:X}.{2:X}.{3:X}"'                  (serverVersion >> 24) & 0xFF'                  (serverVersion >> 16) & 0xFF'                  (serverVersion >> 8) & 0xFF'                  (serverVersion >> 0) & 0xFF);
Magic Number,Miracle.FileZilla.Api,FileZillaServerProtocol,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\FileZillaServerProtocol.cs,FormatVersion,The following statement contains a magic number: return string.Format("{0:X}.{1:X}.{2:X}.{3:X}"'                  (serverVersion >> 24) & 0xFF'                  (serverVersion >> 16) & 0xFF'                  (serverVersion >> 8) & 0xFF'                  (serverVersion >> 0) & 0xFF);
Magic Number,Miracle.FileZilla.Api,FileZillaServerProtocol,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\FileZillaServerProtocol.cs,FormatVersion,The following statement contains a magic number: return string.Format("{0:X}.{1:X}.{2:X}.{3:X}"'                  (serverVersion >> 24) & 0xFF'                  (serverVersion >> 16) & 0xFF'                  (serverVersion >> 8) & 0xFF'                  (serverVersion >> 0) & 0xFF);
Magic Number,Miracle.FileZilla.Api,SocketCommunication,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\SocketCommunication.cs,LogData,The following statement contains a magic number: if (Log != null)              {                  Log.WriteLine("{0}: {1}"' DateTime.Now.TimeOfDay' text);                  Hex.Dump(Log' bytes' 1024);              }
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,ReadBigEndianInt16,The following statement contains a magic number: return (ushort)(reader.ReadByte() << 8 | reader.ReadByte());
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,WriteBigEndianInt16,The following statement contains a magic number: writer.Write((byte)(value >> 8));
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,ReadBigEndianInt24,The following statement contains a magic number: return (int)(                  b1 << 16 |                  b2 << 8 |                  b3);
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,ReadBigEndianInt24,The following statement contains a magic number: return (int)(                  b1 << 16 |                  b2 << 8 |                  b3);
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,WriteBigEndianInt24,The following statement contains a magic number: writer.Write((byte)((value >> 16) & 0xFF));
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,WriteBigEndianInt24,The following statement contains a magic number: writer.Write((byte)((value >> 8) & 0xFF));
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,ReadBigEndianInt32,The following statement contains a magic number: return (uint)(                  b1 << 24 |                  b2 << 16 |                  b3 << 8 |                  b4);
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,ReadBigEndianInt32,The following statement contains a magic number: return (uint)(                  b1 << 24 |                  b2 << 16 |                  b3 << 8 |                  b4);
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,ReadBigEndianInt32,The following statement contains a magic number: return (uint)(                  b1 << 24 |                  b2 << 16 |                  b3 << 8 |                  b4);
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,WriteBigEndianInt32,The following statement contains a magic number: writer.Write((byte)(value >> 24));
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,WriteBigEndianInt32,The following statement contains a magic number: writer.Write((byte)((value >> 16) & 0xFF));
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,WriteBigEndianInt32,The following statement contains a magic number: writer.Write((byte)((value >> 8) & 0xFF));
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,WriteList24,The following statement contains a magic number: var max = ushort.MaxValue * 256;
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,Verify,The following statement contains a magic number: var expected = (byte)(((int)expectedMessageOrigin) | ((byte)expectedMessageType << 2));
Magic Number,Miracle.FileZilla.Api,BinaryExtensions,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\BinaryExtensions.cs,Verify,The following statement contains a magic number: if (actual != expected)              {                  var actualMessageOrigin = (MessageOrigin)(actual & 0x3);                  var actualMessageType = (MessageType)(actual >> 2);                  throw new ProtocolException(string.Format("Expected message type/id {0}/{1} actual {2}/{3} at offset {4:x}({4})"'                      expectedMessageOrigin' expectedMessageType'                      actualMessageOrigin' actualMessageType'                      reader.BaseStream.Position - 1));              }
Magic Number,Miracle.FileZilla.Api,Hex,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\Hex.cs,Dump,The following statement contains a magic number: const int rowSize = 16;
Magic Number,Miracle.FileZilla.Api,Hex,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\Hex.cs,Dump,The following statement contains a magic number: var hex = new StringBuilder(rowSize * 3);
Magic Number,Miracle.FileZilla.Api,Hex,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\Hex.cs,Dump,The following statement contains a magic number: if (ascii.Length != 0)              {                  while (hex.Length < (rowSize*3)) hex.Append(' ');                  while (ascii.Length < rowSize) ascii.Append(' ');                  writer.WriteLine("{0:X4} : {1}{2} {0}"' offset' hex' ascii);              }
Magic Number,Miracle.FileZilla.Api,Group,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\Group.cs,Deserialize,The following statement contains a magic number: Enabled = (TriState)((options >> 2) & 0x3);
Magic Number,Miracle.FileZilla.Api,Group,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\Group.cs,Serialize,The following statement contains a magic number: byte options = (byte)(((byte)BypassUserLimit & 0x3) | ((byte)Enabled << 2));
Magic Number,Miracle.FileZilla.Api,SpeedLimit,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\SpeedLimit.cs,SpeedLimit,The following statement contains a magic number: ConstantSpeedLimit = 10;
Magic Number,Miracle.FileZilla.Api,SpeedLimit,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\SpeedLimit.cs,Deserialize,The following statement contains a magic number: BypassServerSpeedLimit = (TriState)(options >> 2);
Magic Number,Miracle.FileZilla.Api,SpeedLimit,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\SpeedLimit.cs,Serialize,The following statement contains a magic number: var options = (byte)(((byte)SpeedLimitType & 0x3) | ((byte)BypassServerSpeedLimit << 2));
Magic Number,Miracle.FileZilla.Api,SpeedLimitRule,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\SpeedLimitRule.cs,SpeedLimitRule,The following statement contains a magic number: SpeedLimit = 8;
Magic Number,Miracle.FileZilla.Api,User,C:\repos\PolarbearDK_Miracle.FileZilla.Api\Source\Miracle.FileZilla.Api\User.cs,HashPasswordMd5,The following statement contains a magic number: var ret = new StringBuilder(32);
