Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,Opt61Form,Cyclomatic complexity of the method is 8
Complex Method,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,ToOpt61Queue,Cyclomatic complexity of the method is 8
Long Statement,Phoenix.Medicaid.Models.FormFields,MedicaidFormField,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\FormFields\MedicaidFormField.cs,Equals,The length of the statement  "	return string.Equals (FieldName' other.FieldName) && FieldNumber == other.FieldNumber && Length == other.Length && string.Equals (Data' other.Data); " is 148.
Long Statement,Phoenix.Medicaid.Models.OptForms,Opt66Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt66Form.cs,PopulateFromCsv,The length of the statement  "	foreach (var field in GetType ().GetProperties ().Where (prop => prop.PropertyType == typeof(MedicaidFormField)).Select (prop => (MedicaidFormField)prop.GetValue (this)).Where (field => field.StartIndex > 0)) { " is 210.
Magic Number,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,PopulateFromCsv,The following statement contains a magic number: foreach (var prop in GetType ().GetProperties ()) {  	if (prop.PropertyType == typeof(IEnumerable<MedicaidFormField>)) {  		var list = (List<MedicaidFormField>)prop.GetValue (this);  		while (true) {  			var field = new MedicaidFormField (Fields.FirstOrDefault (f => f.FieldName.ToLower () == prop.Name.ToLower ()));  			if (field.StartIndex <= 0 || record.Length <= field.StartIndex + (list.Count * 64) + field.Length)  				// || string.IsNullOrWhiteSpace(record.Substring(field.StartIndex + (list.Count*64)' field.Length)))  				break;  			field.Data = record.Substring (field.StartIndex + (list.Count * 64)' field.Length);  			list.Add (field);  		}  	}  	if (prop.PropertyType == typeof(MedicaidFormField)) {  		var field = (MedicaidFormField)prop.GetValue (this);  		if (field.StartIndex > 0) {  			field.Data = record.Substring (field.StartIndex' field.Length);  		}  	}  }  
Magic Number,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,PopulateFromCsv,The following statement contains a magic number: foreach (var prop in GetType ().GetProperties ()) {  	if (prop.PropertyType == typeof(IEnumerable<MedicaidFormField>)) {  		var list = (List<MedicaidFormField>)prop.GetValue (this);  		while (true) {  			var field = new MedicaidFormField (Fields.FirstOrDefault (f => f.FieldName.ToLower () == prop.Name.ToLower ()));  			if (field.StartIndex <= 0 || record.Length <= field.StartIndex + (list.Count * 64) + field.Length)  				// || string.IsNullOrWhiteSpace(record.Substring(field.StartIndex + (list.Count*64)' field.Length)))  				break;  			field.Data = record.Substring (field.StartIndex + (list.Count * 64)' field.Length);  			list.Add (field);  		}  	}  	if (prop.PropertyType == typeof(MedicaidFormField)) {  		var field = (MedicaidFormField)prop.GetValue (this);  		if (field.StartIndex > 0) {  			field.Data = record.Substring (field.StartIndex' field.Length);  		}  	}  }  
Magic Number,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,PopulateFromCsv,The following statement contains a magic number: if (prop.PropertyType == typeof(IEnumerable<MedicaidFormField>)) {  	var list = (List<MedicaidFormField>)prop.GetValue (this);  	while (true) {  		var field = new MedicaidFormField (Fields.FirstOrDefault (f => f.FieldName.ToLower () == prop.Name.ToLower ()));  		if (field.StartIndex <= 0 || record.Length <= field.StartIndex + (list.Count * 64) + field.Length)  			// || string.IsNullOrWhiteSpace(record.Substring(field.StartIndex + (list.Count*64)' field.Length)))  			break;  		field.Data = record.Substring (field.StartIndex + (list.Count * 64)' field.Length);  		list.Add (field);  	}  }  
Magic Number,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,PopulateFromCsv,The following statement contains a magic number: if (prop.PropertyType == typeof(IEnumerable<MedicaidFormField>)) {  	var list = (List<MedicaidFormField>)prop.GetValue (this);  	while (true) {  		var field = new MedicaidFormField (Fields.FirstOrDefault (f => f.FieldName.ToLower () == prop.Name.ToLower ()));  		if (field.StartIndex <= 0 || record.Length <= field.StartIndex + (list.Count * 64) + field.Length)  			// || string.IsNullOrWhiteSpace(record.Substring(field.StartIndex + (list.Count*64)' field.Length)))  			break;  		field.Data = record.Substring (field.StartIndex + (list.Count * 64)' field.Length);  		list.Add (field);  	}  }  
Magic Number,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,PopulateFromCsv,The following statement contains a magic number: while (true) {  	var field = new MedicaidFormField (Fields.FirstOrDefault (f => f.FieldName.ToLower () == prop.Name.ToLower ()));  	if (field.StartIndex <= 0 || record.Length <= field.StartIndex + (list.Count * 64) + field.Length)  		// || string.IsNullOrWhiteSpace(record.Substring(field.StartIndex + (list.Count*64)' field.Length)))  		break;  	field.Data = record.Substring (field.StartIndex + (list.Count * 64)' field.Length);  	list.Add (field);  }  
Magic Number,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,PopulateFromCsv,The following statement contains a magic number: while (true) {  	var field = new MedicaidFormField (Fields.FirstOrDefault (f => f.FieldName.ToLower () == prop.Name.ToLower ()));  	if (field.StartIndex <= 0 || record.Length <= field.StartIndex + (list.Count * 64) + field.Length)  		// || string.IsNullOrWhiteSpace(record.Substring(field.StartIndex + (list.Count*64)' field.Length)))  		break;  	field.Data = record.Substring (field.StartIndex + (list.Count * 64)' field.Length);  	list.Add (field);  }  
Magic Number,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,PopulateFromCsv,The following statement contains a magic number: if (field.StartIndex <= 0 || record.Length <= field.StartIndex + (list.Count * 64) + field.Length)  	// || string.IsNullOrWhiteSpace(record.Substring(field.StartIndex + (list.Count*64)' field.Length)))  	break;  
Magic Number,Phoenix.Medicaid.Models.OptForms,Opt61Form,C:\repos\msl2430_PCBSSPhoenix\Phoenix.Medicaid\Phoenix.Medicaid.Models\OptForms\Opt61Form.cs,PopulateFromCsv,The following statement contains a magic number: field.Data = record.Substring (field.StartIndex + (list.Count * 64)' field.Length);  
