Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,renameTableFunc,The length of the statement  "		zRet = sqlite3MPrintf (db' "%.*s\"%w\"%s"' zLoc' zSql.Substring (0' zLoc)' zTableName' zSql.Substring (zLoc + tname.n)); " is 120.
Long Statement,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,renameTriggerFunc,The length of the statement  "        */zRet = sqlite3MPrintf (db' "%.*s\"%w\"%s"' zLoc' zSql.Substring (0' zLoc)' zTableName' zSql.Substring (zLoc + tname.n)); " is 122.
Long Statement,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,reloadTableSchema,The length of the statement  "	/* Drop any table triggers from the internal schema. */for (pTrig = sqlite3TriggerList (pParse' pTab); pTrig != null; pTrig = pTrig.pNext) { " is 140.
Complex Conditional,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,renameTriggerFunc,The conditional expression  "dist != 2 || (token != TK_WHEN && token != TK_FOR && token != TK_BEGIN)"  is complex.
Magic Number,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,renameTriggerFunc,The following statement contains a magic number: if (zSql != null) {  	do {  		if (zCsr == zSql.Length) {  			/* Ran out of input before finding the table name. Return NULL. */return;  		}  		/* Store the token that zCsr points to in tname. */zLoc = zCsr;  		tname.z = zSql.Substring (zCsr' len);  		//(char*)zCsr;  		tname.n = len;  		/* Advance zCsr to the next token. Store that token type in 'token''           ** and its length in 'len' (to be used next iteration of this loop).           */do {  			zCsr += len;  			len = (zCsr == zSql.Length) ? 1 : sqlite3GetToken (zSql' zCsr' ref token);  		}  		while (token == TK_SPACE);  		Debug.Assert (len > 0);  		/* Variable 'dist' stores the number of tokens read since the most           ** recent TK_DOT or TK_ON. This means that when a WHEN' FOR or BEGIN           ** token is read and 'dist' equals 2' the condition stated above           ** to be met.           **           ** Note that ON cannot be a database' table or column name' so           ** there is no need to worry about syntax like           ** "CREATE TRIGGER ... ON ON.ON BEGIN ..." etc.           */dist++;  		if (token == TK_DOT || token == TK_ON) {  			dist = 0;  		}  	}  	while (dist != 2 || (token != TK_WHEN && token != TK_FOR && token != TK_BEGIN));  	/* Variable tname now contains the token that is the old table-name         ** in the CREATE TRIGGER statement.         */zRet = sqlite3MPrintf (db' "%.*s\"%w\"%s"' zLoc' zSql.Substring (0' zLoc)' zTableName' zSql.Substring (zLoc + tname.n));  	sqlite3_result_text (context' zRet' -1' SQLITE_DYNAMIC);  }  
Magic Number,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,renameTriggerFunc,The following statement contains a magic number: do {  	if (zCsr == zSql.Length) {  		/* Ran out of input before finding the table name. Return NULL. */return;  	}  	/* Store the token that zCsr points to in tname. */zLoc = zCsr;  	tname.z = zSql.Substring (zCsr' len);  	//(char*)zCsr;  	tname.n = len;  	/* Advance zCsr to the next token. Store that token type in 'token''           ** and its length in 'len' (to be used next iteration of this loop).           */do {  		zCsr += len;  		len = (zCsr == zSql.Length) ? 1 : sqlite3GetToken (zSql' zCsr' ref token);  	}  	while (token == TK_SPACE);  	Debug.Assert (len > 0);  	/* Variable 'dist' stores the number of tokens read since the most           ** recent TK_DOT or TK_ON. This means that when a WHEN' FOR or BEGIN           ** token is read and 'dist' equals 2' the condition stated above           ** to be met.           **           ** Note that ON cannot be a database' table or column name' so           ** there is no need to worry about syntax like           ** "CREATE TRIGGER ... ON ON.ON BEGIN ..." etc.           */dist++;  	if (token == TK_DOT || token == TK_ON) {  		dist = 0;  	}  }  while (dist != 2 || (token != TK_WHEN && token != TK_FOR && token != TK_BEGIN));  
Magic Number,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,sqlite3AlterFunctions,The following statement contains a magic number: aAlterTableFuncs = new FuncDef[] {  	FUNCTION ("sqlite_rename_table"' 2' 0' 0' renameTableFunc)'  	#if !SQLITE_OMIT_TRIGGER  	FUNCTION ("sqlite_rename_trigger"' 2' 0' 0' renameTriggerFunc)'  	#endif  	#if !SQLITE_OMIT_FOREIGN_KEY  	FUNCTION ("sqlite_rename_parent"' 3' 0' 0' renameParentFunc)'  #endif  };  
Magic Number,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,sqlite3AlterFunctions,The following statement contains a magic number: aAlterTableFuncs = new FuncDef[] {  	FUNCTION ("sqlite_rename_table"' 2' 0' 0' renameTableFunc)'  	#if !SQLITE_OMIT_TRIGGER  	FUNCTION ("sqlite_rename_trigger"' 2' 0' 0' renameTriggerFunc)'  	#endif  	#if !SQLITE_OMIT_FOREIGN_KEY  	FUNCTION ("sqlite_rename_parent"' 3' 0' 0' renameParentFunc)'  #endif  };  
Magic Number,Community.CsharpSqlite,Sqlite3,C:\repos\DrNorton_ScaryStories.Core\csharp-sqlite_3_7_7_1_64\Community.CsharpSqlite.shell\..\Community.CsharpSqlite\src\alter_c.cs,sqlite3AlterFunctions,The following statement contains a magic number: aAlterTableFuncs = new FuncDef[] {  	FUNCTION ("sqlite_rename_table"' 2' 0' 0' renameTableFunc)'  	#if !SQLITE_OMIT_TRIGGER  	FUNCTION ("sqlite_rename_trigger"' 2' 0' 0' renameTriggerFunc)'  	#endif  	#if !SQLITE_OMIT_FOREIGN_KEY  	FUNCTION ("sqlite_rename_parent"' 3' 0' 0' renameParentFunc)'  #endif  };  
