Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,when_reading_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,then_creates_model_with_expiration_date_and_version,The length of the statement  "                Assert.InRange(dto.ReservationExpirationDate.Value' orderPlaced.ReservationAutoExpiration.AddSeconds(-1)' orderPlaced.ReservationAutoExpiration.AddSeconds(1)); " is 159.
Long Statement,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,when_reading_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,then_order_placed_is_idempotent,The length of the statement  "                Assert.InRange(dto.ReservationExpirationDate.Value' orderPlaced.ReservationAutoExpiration.AddSeconds(-1)' orderPlaced.ReservationAutoExpiration.AddSeconds(1)); " is 159.
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_no_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_created_even_when_conference_created_was_not_handled_then_creates_seat,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_no_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_created_even_when_conference_created_was_not_handled_then_creates_seat,The following statement contains a magic number: Assert.Equal(200' dto.Price);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_updated_then_conference_dto_populated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_updated_then_conference_dto_populated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_updated_then_conference_dto_populated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_updated_then_conference_dto_populated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_updated_then_conference_dto_populated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_published_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_published_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_published_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_published_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_conference_published_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_published_conference_unpublished_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_published_conference_unpublished_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_published_conference_unpublished_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_published_conference_unpublished_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_published_conference_unpublished_then_conference_dto_updated,The following statement contains a magic number: var startDate = new DateTimeOffset(2012' 04' 20' 15' 0' 0' TimeSpan.FromHours(-8));
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_created_then_adds_seat,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_created_then_adds_seat,The following statement contains a magic number: Assert.Equal(200' dto.Price);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_created_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'                  Quantity = 100'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_created_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'                  Quantity = 100'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_created_then_add_seats_command_sent,The following statement contains a magic number: Assert.Equal(100' e.Quantity);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_updated_then_updates_seat_on_conference_dto,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_updated_then_updates_seat_on_conference_dto,The following statement contains a magic number: this.sut.Handle(new SeatUpdated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "newseat"'                  Description = "newdescription"'                  Price = 100'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_updated_then_updates_seat_on_conference_dto,The following statement contains a magic number: Assert.Equal(100' dto.Price);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_added_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'                  Quantity = 100'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_added_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'                  Quantity = 100'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_added_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatUpdated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "newseat"'                  Description = "newdescription"'                  Price = 100'                  Quantity = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_added_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatUpdated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "newseat"'                  Description = "newdescription"'                  Price = 100'                  Quantity = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_added_then_add_seats_command_sent,The following statement contains a magic number: Assert.Equal(100' e.Quantity);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_removed_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'                  Quantity = 100'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_removed_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'                  Quantity = 100'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_removed_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatUpdated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "newseat"'                  Description = "newdescription"'                  Price = 100'                  Quantity = 50'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_removed_then_add_seats_command_sent,The following statement contains a magic number: this.sut.Handle(new SeatUpdated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "newseat"'                  Description = "newdescription"'                  Price = 100'                  Quantity = 50'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_removed_then_add_seats_command_sent,The following statement contains a magic number: Assert.Equal(50' e.Quantity);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_available_seats_change_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_available_seats_change_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new AvailableSeatsChanged              {                  SourceId = conferenceId'                  Version = 1'                  Seats = new[] { new SeatQuantity { SeatType = seatId' Quantity = 200 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_available_seats_change_then_updates_remaining_quantity,The following statement contains a magic number: Assert.Equal(200' dto.Price);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_available_seats_change_then_updates_remaining_quantity,The following statement contains a magic number: Assert.Equal(200' dto.AvailableQuantity);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_reserved_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_reserved_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new AvailableSeatsChanged              {                  SourceId = conferenceId'                  Version = 1'                  Seats = new[] { new SeatQuantity { SeatType = seatId' Quantity = 200 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_reserved_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 2'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_reserved_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 2'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_reserved_then_updates_remaining_quantity,The following statement contains a magic number: Assert.Equal(200' dto.Price);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_reserved_then_updates_remaining_quantity,The following statement contains a magic number: Assert.Equal(150' dto.AvailableQuantity);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_reserved_then_updates_remaining_quantity,The following statement contains a magic number: Assert.Equal(2' dto.SeatsAvailabilityVersion);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new AvailableSeatsChanged              {                  SourceId = conferenceId'                  Version = 1'                  Seats = new[] { new SeatQuantity { SeatType = seatId' Quantity = 200 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 2'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 2'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatsReservationCancelled              {                  SourceId = conferenceId'                  Version = 3'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = 50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: this.sut.Handle(new SeatsReservationCancelled              {                  SourceId = conferenceId'                  Version = 3'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = 50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: Assert.Equal(200' dto.Price);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: Assert.Equal(200' dto.AvailableQuantity);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seats_are_released_then_updates_remaining_quantity,The following statement contains a magic number: Assert.Equal(3' dto.SeatsAvailabilityVersion);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new AvailableSeatsChanged              {                  SourceId = conferenceId'                  Version = 1'                  Seats = new[] { new SeatQuantity { SeatType = seatId' Quantity = 200 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 2'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 2'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 2'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 2'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: Assert.Equal(200' dto.Price);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: Assert.Equal(150' dto.AvailableQuantity);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_equal_to_last_update_then_event_is_ignored,The following statement contains a magic number: Assert.Equal(2' dto.SeatsAvailabilityVersion);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_lower_than_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new SeatCreated              {                  ConferenceId = conferenceId'                  SourceId = seatId'                  Name = "seat"'                  Description = "description"'                  Price = 200'              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_lower_than_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new AvailableSeatsChanged              {                  SourceId = conferenceId'                  Version = 0'                  Seats = new[] { new SeatQuantity { SeatType = seatId' Quantity = 200 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_lower_than_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new SeatsReserved              {                  SourceId = conferenceId'                  Version = 1'                  AvailableSeatsChanged = new[] { new SeatQuantity { SeatType = seatId' Quantity = -50 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_lower_than_last_update_then_event_is_ignored,The following statement contains a magic number: this.sut.Handle(new AvailableSeatsChanged              {                  SourceId = conferenceId'                  Version = 0'                  Seats = new[] { new SeatQuantity { SeatType = seatId' Quantity = 200 } }              });
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_lower_than_last_update_then_event_is_ignored,The following statement contains a magic number: Assert.Equal(200' dto.Price);
Magic Number,Registration.Tests.ConferenceViewModelGeneratorFixture,given_existing_conference,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\ConferenceViewModelGeneratorFixture.cs,when_seat_availability_update_event_has_version_lower_than_last_update_then_event_is_ignored,The following statement contains a magic number: Assert.Equal(150' dto.AvailableQuantity);
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,given_a_placed_order,The following statement contains a magic number: this.orderPlacedEvent = new OrderPlaced              {                  SourceId = Guid.NewGuid()'                  ConferenceId = Guid.NewGuid()'                  AccessCode = "asdf"'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 5) }'                  Version = 1              };
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_registrant_information_assigned_then_email_is_persisted,The following statement contains a magic number: sut.Handle(new OrderRegistrantAssigned              {                  Email = "a@b.com"'                  FirstName = "A"'                  LastName = "Z"'                  SourceId = orderPlacedEvent.SourceId'                  Version = 5              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_registrant_information_assigned_then_can_locate_order,The following statement contains a magic number: sut.Handle(new OrderRegistrantAssigned              {                  Email = "a@b.com"'                  FirstName = "A"'                  LastName = "Z"'                  SourceId = orderPlacedEvent.SourceId'                  Version = 5              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_removes_original_lines,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 2) }'                  Version = 2              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_removes_original_lines,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 2) }'                  Version = 2              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_adds_new_lines,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(newSeat' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_adds_new_lines,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(newSeat' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_adds_new_lines,The following statement contains a magic number: Assert.Equal(2' dto.Lines.First().RequestedSeats);
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_adds_new_lines,The following statement contains a magic number: Assert.Equal(4' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_updated_event_is_received_twice_then_no_ops,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(newSeat' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_updated_event_is_received_twice_then_no_ops,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(newSeat' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_updated_event_is_received_twice_then_no_ops,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(newSeat' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_updated_event_is_received_twice_then_no_ops,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(newSeat' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_state_is_pending_reservation,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_state_is_pending_reservation,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_removes_original_lines_from_originating_order,The following statement contains a magic number: sut.Handle(new OrderPlaced              {                  SourceId = secondOrder'                  ConferenceId = Guid.NewGuid()'                  AccessCode = "asdf"'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 5) }'                  Version = 1'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_removes_original_lines_from_originating_order,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_is_updated_then_removes_original_lines_from_originating_order,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_sets_order_expiration,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_sets_order_expiration,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_sets_order_expiration,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_updates_reserved_seats,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_updates_reserved_seats,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_updates_reserved_seats,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_updates_reserved_seats,The following statement contains a magic number: Assert.Equal(2' dto.Lines.First().ReservedSeats);
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_state_is_partially_reserved,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_state_is_partially_reserved,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_state_is_partially_reserved,The following statement contains a magic number: sut.Handle(new OrderPartiallyReserved              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  // We got two rather than the requested 5.                  Seats = new[] { new SeatQuantity(orderPlacedEvent.Seats.First().SeatType' 2) }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_partially_reserved_then_state_is_partially_reserved,The following statement contains a magic number: Assert.Equal(3' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_fully_reserved_then_sets_order_expiration,The following statement contains a magic number: sut.Handle(new OrderReservationCompleted              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  Seats = new[] { orderPlacedEvent.Seats.First() }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_fully_reserved_then_sets_order_expiration,The following statement contains a magic number: sut.Handle(new OrderReservationCompleted              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  Seats = new[] { orderPlacedEvent.Seats.First() }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_fully_reserved_then_updates_reserved_seats,The following statement contains a magic number: sut.Handle(new OrderReservationCompleted              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  Seats = new[] { orderPlacedEvent.Seats.First() }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_fully_reserved_then_updates_reserved_seats,The following statement contains a magic number: sut.Handle(new OrderReservationCompleted              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  Seats = new[] { orderPlacedEvent.Seats.First() }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_fully_reserved_then_state_is_reservation_completed,The following statement contains a magic number: sut.Handle(new OrderReservationCompleted              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  Seats = new[] { orderPlacedEvent.Seats.First() }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_fully_reserved_then_state_is_reservation_completed,The following statement contains a magic number: sut.Handle(new OrderReservationCompleted              {                  SourceId = orderPlacedEvent.SourceId'                  ReservationExpiration = DateTime.UtcNow.AddMinutes(15)'                  Seats = new[] { orderPlacedEvent.Seats.First() }'                  Version = 3'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_fully_reserved_then_state_is_reservation_completed,The following statement contains a magic number: Assert.Equal(3' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_confirmed_v1_then_order_state_is_confirmed,The following statement contains a magic number: sut.Handle(new OrderPaymentConfirmed              {                  SourceId = orderPlacedEvent.SourceId'                  Version = 7'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_confirmed_v1_then_order_state_is_confirmed,The following statement contains a magic number: Assert.Equal(7' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_confirmed_then_order_state_is_confirmed,The following statement contains a magic number: sut.Handle(new OrderConfirmed              {                  SourceId = orderPlacedEvent.SourceId'                  Version = 7'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_confirmed_then_updates_order_version,The following statement contains a magic number: sut.Handle(new OrderConfirmed              {                  SourceId = orderPlacedEvent.SourceId'                  Version = 7'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_confirmed_then_updates_order_version,The following statement contains a magic number: Assert.Equal(7' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_confirmed_for_older_version_then_no_ops,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_confirmed_for_older_version_then_no_ops,The following statement contains a magic number: sut.Handle(new OrderUpdated              {                  SourceId = orderPlacedEvent.SourceId'                  Seats = new[] { new SeatQuantity(Guid.NewGuid()' 2) }'                  Version = 4'              });
Magic Number,Registration.IntegrationTests.DraftOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\DraftOrderViewModelGeneratorFixture.cs,when_order_confirmed_for_older_version_then_no_ops,The following statement contains a magic number: Assert.Equal(4' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_placed_order,The following statement contains a magic number: this.orderPlaced = new OrderPlaced                  {                      SourceId = orderId'                      ReservationAutoExpiration = DateTime.UtcNow.AddMinutes(10)'                      Version = 2'                  };
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_placed_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_placed_order,The following statement contains a magic number: this.orderPlaced = new OrderPlaced                  {                      SourceId = orderId'                      ReservationAutoExpiration = DateTime.UtcNow.AddMinutes(10)'                      Version = 2'                  };
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                      }'                      Total = 50'                      IsFreeOfCharge = true'                      Version = 4'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                      }'                      Total = 50'                      IsFreeOfCharge = true'                      Version = 4'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                      }'                      Total = 50'                      IsFreeOfCharge = true'                      Version = 4'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                      }'                      Total = 50'                      IsFreeOfCharge = true'                      Version = 4'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                      }'                      Total = 50'                      IsFreeOfCharge = true'                      Version = 4'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,then_creates_model,The following statement contains a magic number: Assert.Equal(4' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,then_creates_order_lines,The following statement contains a magic number: Assert.Equal(50' dto.Lines[0].LineTotal);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,then_creates_order_lines,The following statement contains a magic number: Assert.Equal(10' dto.Lines[0].Quantity);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,then_creates_order_lines,The following statement contains a magic number: Assert.Equal(5' dto.Lines[0].UnitPrice);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,then_creates_order_lines,The following statement contains a magic number: Assert.Equal(50' dto.Total);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 20'                      Version = 8'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 20'                      Version = 8'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 20'                      Version = 8'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 20'                      Version = 8'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 20'                      Version = 8'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: Assert.Equal(20' dto.Lines[0].LineTotal);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: Assert.Equal(2' dto.Lines[0].Quantity);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: Assert.Equal(10' dto.Lines[0].UnitPrice);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: Assert.Equal(20' dto.Total);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated_then_replaces_line,The following statement contains a magic number: Assert.Equal(8' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,expiration_is_idempotent,The following statement contains a magic number: this.sut.Handle(new OrderExpired { SourceId = orderId' Version = 15 });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,expiration_is_idempotent,The following statement contains a magic number: this.sut.Handle(new OrderExpired { SourceId = orderId' Version = 15 });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_seat_assignments_created_then_updates_order_with_assignments_id,The following statement contains a magic number: Assert.Equal(4' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_confirmed_then_removes_expiration,The following statement contains a magic number: this.sut.Handle(new OrderConfirmed { SourceId = orderId' Version = 15 });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_confirmed_then_removes_expiration,The following statement contains a magic number: Assert.Equal(15' dto.OrderVersion);
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderPlaced                  {                      SourceId = orderId'                      ReservationAutoExpiration = DateTime.UtcNow.AddMinutes(10)'                      Version = 2'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderPlaced                  {                      SourceId = orderId'                      ReservationAutoExpiration = DateTime.UtcNow.AddMinutes(10)'                      Version = 2'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 1'                               UnitPrice = 10                           }'                      }'                      Total = 60'                      IsFreeOfCharge = true'                      Version = 9'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 1'                               UnitPrice = 10                           }'                      }'                      Total = 60'                      IsFreeOfCharge = true'                      Version = 9'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 1'                               UnitPrice = 10                           }'                      }'                      Total = 60'                      IsFreeOfCharge = true'                      Version = 9'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 1'                               UnitPrice = 10                           }'                      }'                      Total = 60'                      IsFreeOfCharge = true'                      Version = 9'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 1'                               UnitPrice = 10                           }'                      }'                      Total = 60'                      IsFreeOfCharge = true'                      Version = 9'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 1'                               UnitPrice = 10                           }'                      }'                      Total = 60'                      IsFreeOfCharge = true'                      Version = 9'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,given_a_new_calculated_order,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 50'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 10'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 1'                               UnitPrice = 10                           }'                      }'                      Total = 60'                      IsFreeOfCharge = true'                      Version = 9'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated__after_new_update_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 2'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 30'                      Version = 12'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated__after_new_update_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 2'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 30'                      Version = 12'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated__after_new_update_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 2'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 30'                      Version = 12'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated__after_new_update_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 2'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 30'                      Version = 12'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated__after_new_update_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 2'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 30'                      Version = 12'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated__after_new_update_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 2'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 30'                      Version = 12'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated__after_new_update_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 2'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 30'                      Version = 12'                  });
Magic Number,Registration.IntegrationTests.PricedOrderViewModelGeneratorFixture,given_a_new_calculated_order,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\PricedOrderViewModelGeneratorFixture.cs,when_recalculated__after_new_update_then_replaces_line,The following statement contains a magic number: this.sut.Handle(new OrderTotalsCalculated                  {                      SourceId = orderId'                      Lines = new[]                      {                          new SeatOrderLine                           {                               LineTotal = 10'                               SeatType = this.seatCreatedEvents[0].SourceId'                               Quantity = 2'                               UnitPrice = 5                           }'                          new SeatOrderLine                           {                               LineTotal = 20'                               SeatType = this.seatCreatedEvents[1].SourceId'                               Quantity = 2'                               UnitPrice = 10                           }'                      }'                      Total = 30'                      Version = 12'                  });
Magic Number,Registration.IntegrationTests.SeatAssignmentsViewModelGeneratorFixture,given_created_seat_assignments,C:\research\architectureSmells\repos\mspnp_cqrs-journey\source\Conference\Registration.IntegrationTests\SeatAssignmentsViewModelGeneratorFixture.cs,then_creates_model_with_seat_names,The following statement contains a magic number: Assert.Equal(dto.Seats.Count' 2);
