Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,MasterPublish,Cyclomatic complexity of the method is 15
Complex Method,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,PublishFromBlob,Cyclomatic complexity of the method is 11
Complex Method,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,Cyclomatic complexity of the method is 16
Complex Method,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,StateChanged,Cyclomatic complexity of the method is 15
Long Parameter List,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,CreateAssetFromBlob,The method has 6 parameters.
Long Parameter List,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,PublishFromBlob,The method has 6 parameters.
Long Parameter List,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The method has 7 parameters.
Long Parameter List,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,ExecuteMasterJob,The method has 8 parameters.
Long Parameter List,TED.Samples.WAMSBulter.BackEndService.Notifications,JobFinishInfo,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJobNotification.cs,JobFinishInfo,The method has 5 parameters.
Long Identifier,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The length of the parameter daysForWhichStreamingUrlIsActive is 32.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,GetReadyVideoProcess,The length of the statement  "	TableQuery<VideoRegister> query = new TableQuery<VideoRegister> ().Where (TableQuery.GenerateFilterCondition ("PartitionKey"' QueryComparisons.Equal' myAppId)); " is 160.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,CreateAssetFromBlob,The length of the statement  "	string assetName = string.Format ("{0}_{1}_Butler_{2}"' externalMediaBlobContainer.Name' ExternalBlobName' myProcessId); " is 120.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,CreateAssetFromBlob,The length of the statement  "	IAccessPolicy writePolicy = MediaContext.AccessPolicies.Create ("writePolicy_" + assetName' TimeSpan.FromMinutes (120)' AccessPermissions.Write); " is 145.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,GetMediaContentType,The length of the statement  "	TableQuery<OutPutFormat> query = new TableQuery<OutPutFormat> ().Where (TableQuery.GenerateFilterCondition ("PartitionKey"' QueryComparisons.Equal' AppId)); " is 156.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,MasterPublish,The length of the statement  "		currentLocator = currentWorkerEncoder.GetDynamicStreamingUrl (currentAsset.Id' LocatorType.OnDemandOrigin' MediaContentType.SmoothStreaming); " is 141.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,MasterPublish,The length of the statement  "		currentLocator = currentWorkerEncoder.GetDynamicStreamingUrl (currentAsset.Id' LocatorType.OnDemandOrigin' MediaContentType.HLS); " is 129.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,MasterPublish,The length of the statement  "		currentLocator = currentWorkerEncoder.GetDynamicStreamingUrl (currentAsset.Id' LocatorType.Sas' MediaContentType.H264Broadband720p); " is 132.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,MasterPublish,The length of the statement  "		currentLocator = currentWorkerEncoder.GetDynamicStreamingUrl (currentAsset.Id' LocatorType.OnDemandOrigin' MediaContentType.HDS); " is 129.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,MasterPublish,The length of the statement  "		currentLocator = currentWorkerEncoder.GetDynamicStreamingUrl (currentAsset.Id' LocatorType.Sas' MediaContentType.OtherSingleFile); " is 130.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,PublishFromBlob,The length of the statement  "	CloudBlobContainer externalMediaBlobContainer = externalCloudBlobClient.GetContainerReference (ExternalStorageContainer); " is 121.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,PublishFromBlob,The length of the statement  "	System.Collections.Generic.List<JobFinishInfo> NotificationList = new System.Collections.Generic.List<JobFinishInfo> (); " is 120.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,PublishFromBlob,The length of the statement  "		OriginalAsset = this.CreateAssetFromBlob (externalMediaBlobContainer' ExternalBlobName' AssetBlobStoragclient' AssestBlobName' myEncodeProcessId); " is 146.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,PublishFromBlob,The length of the statement  "	System.Collections.Generic.IEnumerable<OutPutFormat> formatList = GetMediaContentType (myWamsButlerConn' "wamsbutleroutputformat"' myAppId); " is 140.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,PublishFromBlob,The length of the statement  "		JobFinishInfo jobCompleteMessage = new JobFinishInfo (myEncodeProcessId' ExternalBlobName' currentJob' (MediaContentType)encodeX.OutTypesId' myWorkerEncoder.UrlForClientStreaming); " is 180.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,ProcessNewVideo,The length of the statement  "		PublishFromBlob (myExternalStorageConn' myExternalStorageContainer' myExternalBlobVideo.Name' myAssetStorageConn' myExternalBlobVideo.Name' myEncodeProcessId); " is 159.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,ProcessNewVideo,The length of the statement  "		NewVideoProcessed (myExternalBlobVideo.Name' myExternalBlobVideo.Uri.AbsoluteUri' myWamsButlerConn' "wamsbutlervideohistory"); " is 126.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,ProcessNewVideo,The length of the statement  "		string msgDetail = string.Format ("{2} Error in prosessing blob {0}' Error :{1}"' myExternalBlobVideo.Name' X.Message' myEncodeProcessId); " is 138.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,ProcessNewVideos,The length of the statement  "			if (IsNewVideo (ExternalBlobVideo.Name) && (System.IO.Path.GetExtension (ExternalBlobVideo.Name).ToLower () == ".mp4")) { " is 121.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,ProcessNewVideos,The length of the statement  "		myEncodeTaks [i] = Task.Factory.StartNew (() => ProcessNewVideo (ExternalBlobVideo' ExternalStorageConn' ExternalStorageContainer' AssetStorageConn)); " is 150.
Long Statement,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,DeleteOldWADLOGData,The length of the statement  "		TableQuery<WadLogEntity> query = new TableQuery<WadLogEntity> ().Where (TableQuery.GenerateFilterCondition ("PartitionKey"' QueryComparisons.LessThan' pkfileter)); " is 163.
Long Statement,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The length of the statement  "	var accessPolicy = myMediaServiceContext.AccessPolicies.Create (outputAsset.Name' TimeSpan.FromDays (daysForWhichStreamingUrlIsActive)' AccessPermissions.Read); " is 160.
Long Statement,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The length of the statement  "		locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.OnDemandOrigin' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5)); " is 144.
Long Statement,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The length of the statement  "			locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.Sas' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5)); " is 133.
Long Statement,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetLatestMediaProcessorByName,The length of the statement  "	var processor = myMediaServiceContext.MediaProcessors.Where (p => p.Name == mediaProcessorName).ToList ().OrderBy (p => new Version (p.Version)).LastOrDefault (); " is 162.
Long Statement,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,ExecuteJob,The length of the statement  "		jobX = ExecuteMasterJob (format.JobEncodeDescription' format.TaskEncodeDescription + "_" + myAsset.Name' myAsset' OutPutAssetName' format.EncodeDescription' (MediaContentType)format.OutTypesId' format.MediaProcessorByName); " is 223.
Long Statement,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,ExecuteMasterJob,The length of the statement  "		var ismAssetFiles = myAsset.AssetFiles.ToList ().Where (f => f.Name.EndsWith (".ism"' StringComparison.OrdinalIgnoreCase)).ToArray (); " is 134.
Long Statement,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,ExecuteMasterJob,The length of the statement  "	ITask task = job.Tasks.AddNew (TaskEncodeDescription' processor' ConfOrLabelEncode' TaskOptions.ProtectedConfiguration); " is 120.
Long Statement,TED.Samples.WAMSBulter.BackEndService.Config,ConfigHelper,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ConfigHelper.cs,RefreshConfig,The length of the statement  "	TableQuery<ConfigEntity> query = new TableQuery<ConfigEntity> ().Where (TableQuery.GenerateFilterCondition ("PartitionKey"' QueryComparisons.Equal' myPartitionKey)); " is 165.
Magic Number,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,ProcessNewVideos,The following statement contains a magic number: myEncodeTaks [myEncodeList.Count] = Task.Factory.StartNew (() => DeleteOldWADLOGData (this.myWamsButlerConn' 2));  
Magic Number,TED.Samples.WAMSBulter.BackEndService,ButlerEncoderPublish,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\ButlerEncoderPublish.cs,DeleteOldWADLOGData,The following statement contains a magic number: try {  	CloudTable table = tableClient.GetTableReference ("WADLogsTable");  	string pkfileter = "0" + DateTime.UtcNow.AddHours (-24 * DaysAgo).Ticks.ToString ();  	TableQuery<WadLogEntity> query = new TableQuery<WadLogEntity> ().Where (TableQuery.GenerateFilterCondition ("PartitionKey"' QueryComparisons.LessThan' pkfileter));  	System.Collections.Generic.IEnumerable<WadLogEntity> oldLogs = table.ExecuteQuery (query);  	foreach (WadLogEntity logE in oldLogs) {  		TableOperation deleteOperation = TableOperation.Delete (logE);  		table.Execute (deleteOperation);  	}  }  catch (Exception X) {  	Trace.TraceError ("[DeleteOldWADLOGData] " + X.Message);  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The following statement contains a magic number: switch (type) {  case LocatorType.None:  	break;  case LocatorType.OnDemandOrigin:  	assetFile = assetFiles.Where (f => f.Name.ToLower ().EndsWith (".ism")).FirstOrDefault ();  	locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.OnDemandOrigin' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5));  	switch (contentType) {  	case MediaContentType.SmoothStreaming:  		smoothUri = new Uri (locator.Path + assetFile.Name + "/manifest");  		break;  	case MediaContentType.HLS:  		smoothUri = new Uri (locator.Path + assetFile.Name + "/manifest(format=m3u8-aapl)");  		break;  	case MediaContentType.HDS:  		smoothUri = new Uri (locator.Path + assetFile.Name + "/manifest(format=f4m-f4f)");  		break;  	case MediaContentType.DASH:  		smoothUri = new Uri (locator.Path + assetFile.Name + "/manifest(format=mpd-time-csf)");  		break;  	default:  		throw new Exception ("GetDynamicStreamingUrl Error: you must chose HLS' Smooth or HDS");  		break;  	}  	this.UrlForClientStreaming = smoothUri.ToString ();  	break;  case LocatorType.Sas:  	var mp4Files = assetFiles.Where (f => f.Name.ToLower ().EndsWith (".mp4")).ToList ();  	assetFile = mp4Files.OrderBy (f => f.ContentFileSize).LastOrDefault ();  	//Get Largest File  	if (assetFile != null) {  		locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.Sas' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5));  		var mp4Uri = new UriBuilder (locator.Path);  		mp4Uri.Path += "/" + assetFile.Name;  		this.UrlForClientStreaming = mp4Uri.ToString ();  	}  	break;  default:  	break;  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The following statement contains a magic number: switch (type) {  case LocatorType.None:  	break;  case LocatorType.OnDemandOrigin:  	assetFile = assetFiles.Where (f => f.Name.ToLower ().EndsWith (".ism")).FirstOrDefault ();  	locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.OnDemandOrigin' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5));  	switch (contentType) {  	case MediaContentType.SmoothStreaming:  		smoothUri = new Uri (locator.Path + assetFile.Name + "/manifest");  		break;  	case MediaContentType.HLS:  		smoothUri = new Uri (locator.Path + assetFile.Name + "/manifest(format=m3u8-aapl)");  		break;  	case MediaContentType.HDS:  		smoothUri = new Uri (locator.Path + assetFile.Name + "/manifest(format=f4m-f4f)");  		break;  	case MediaContentType.DASH:  		smoothUri = new Uri (locator.Path + assetFile.Name + "/manifest(format=mpd-time-csf)");  		break;  	default:  		throw new Exception ("GetDynamicStreamingUrl Error: you must chose HLS' Smooth or HDS");  		break;  	}  	this.UrlForClientStreaming = smoothUri.ToString ();  	break;  case LocatorType.Sas:  	var mp4Files = assetFiles.Where (f => f.Name.ToLower ().EndsWith (".mp4")).ToList ();  	assetFile = mp4Files.OrderBy (f => f.ContentFileSize).LastOrDefault ();  	//Get Largest File  	if (assetFile != null) {  		locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.Sas' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5));  		var mp4Uri = new UriBuilder (locator.Path);  		mp4Uri.Path += "/" + assetFile.Name;  		this.UrlForClientStreaming = mp4Uri.ToString ();  	}  	break;  default:  	break;  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The following statement contains a magic number: locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.OnDemandOrigin' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5));  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The following statement contains a magic number: if (assetFile != null) {  	locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.Sas' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5));  	var mp4Uri = new UriBuilder (locator.Path);  	mp4Uri.Path += "/" + assetFile.Name;  	this.UrlForClientStreaming = mp4Uri.ToString ();  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,GetDynamicStreamingUrl,The following statement contains a magic number: locator = myMediaServiceContext.Locators.CreateLocator (LocatorType.Sas' outputAsset' accessPolicy' DateTime.UtcNow.AddMinutes (-5));  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: while ((myJob.State != JobState.Finished) && (myJob.State != JobState.Canceled) && (myJob.State != JobState.Error)) {  	if (myJob.State == JobState.Processing) {  		if (avance != (myJob.Tasks [0].Progress / 100)) {  			avance = myJob.Tasks [0].Progress / 100;  			Trace.TraceInformation ("job " + myJob.Id + " Percent complete:" + avance.ToString ("#0.##%"));  		}  	}  	Thread.Sleep (TimeSpan.FromSeconds (10));  	myJob.Refresh ();  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: while ((myJob.State != JobState.Finished) && (myJob.State != JobState.Canceled) && (myJob.State != JobState.Error)) {  	if (myJob.State == JobState.Processing) {  		if (avance != (myJob.Tasks [0].Progress / 100)) {  			avance = myJob.Tasks [0].Progress / 100;  			Trace.TraceInformation ("job " + myJob.Id + " Percent complete:" + avance.ToString ("#0.##%"));  		}  	}  	Thread.Sleep (TimeSpan.FromSeconds (10));  	myJob.Refresh ();  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: while ((myJob.State != JobState.Finished) && (myJob.State != JobState.Canceled) && (myJob.State != JobState.Error)) {  	if (myJob.State == JobState.Processing) {  		if (avance != (myJob.Tasks [0].Progress / 100)) {  			avance = myJob.Tasks [0].Progress / 100;  			Trace.TraceInformation ("job " + myJob.Id + " Percent complete:" + avance.ToString ("#0.##%"));  		}  	}  	Thread.Sleep (TimeSpan.FromSeconds (10));  	myJob.Refresh ();  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: if (myJob.State == JobState.Processing) {  	if (avance != (myJob.Tasks [0].Progress / 100)) {  		avance = myJob.Tasks [0].Progress / 100;  		Trace.TraceInformation ("job " + myJob.Id + " Percent complete:" + avance.ToString ("#0.##%"));  	}  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: if (myJob.State == JobState.Processing) {  	if (avance != (myJob.Tasks [0].Progress / 100)) {  		avance = myJob.Tasks [0].Progress / 100;  		Trace.TraceInformation ("job " + myJob.Id + " Percent complete:" + avance.ToString ("#0.##%"));  	}  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: if (avance != (myJob.Tasks [0].Progress / 100)) {  	avance = myJob.Tasks [0].Progress / 100;  	Trace.TraceInformation ("job " + myJob.Id + " Percent complete:" + avance.ToString ("#0.##%"));  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: if (avance != (myJob.Tasks [0].Progress / 100)) {  	avance = myJob.Tasks [0].Progress / 100;  	Trace.TraceInformation ("job " + myJob.Id + " Percent complete:" + avance.ToString ("#0.##%"));  }  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: avance = myJob.Tasks [0].Progress / 100;  
Magic Number,TED.Samples.WAMSBulter.BackEndService,EncodeJob,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\EncodeJob.cs,WaitJobFinish,The following statement contains a magic number: Thread.Sleep (TimeSpan.FromSeconds (10));  
Magic Number,TED.Samples.WAMSBulter.BackEndService,WorkerRole,C:\repos\liarjo_WAMSVODButler\wamsbulterbackend\WorkerRole.cs,OnStart,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 12;  
