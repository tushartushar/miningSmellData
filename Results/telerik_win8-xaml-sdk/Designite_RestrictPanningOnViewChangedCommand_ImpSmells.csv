Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CanExecute,The length of the statement  "	var selectionBehavior = (MapShapeSelectionBehavior)this.Owner.Behaviors.FirstOrDefault (x => x is MapShapeSelectionBehavior); " is 125.
Long Statement,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CanExecute,The length of the statement  "	if (selectionBehavior != null && selectionBehavior.SelectedShape != null && selectionBehavior.SelectedShape is IMap2DShape) { " is 125.
Long Statement,RestrictPanningOnViewChangedCommand,MainPage,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MainPage.xaml.cs,SetEuropeView,The length of the statement  "		var selectionBehavior = (MapShapeSelectionBehavior)this.radMap.Behaviors.FirstOrDefault (x => x is MapShapeSelectionBehavior); " is 126.
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Longitude < shapeBounds.East - (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.East - (screenBounds.East - screenBounds.West) / 2;  } else if (locationToCoerce.Longitude > shapeBounds.West + (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.West + (screenBounds.East - screenBounds.West) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Longitude < shapeBounds.East - (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.East - (screenBounds.East - screenBounds.West) / 2;  } else if (locationToCoerce.Longitude > shapeBounds.West + (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.West + (screenBounds.East - screenBounds.West) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Longitude < shapeBounds.East - (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.East - (screenBounds.East - screenBounds.West) / 2;  } else if (locationToCoerce.Longitude > shapeBounds.West + (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.West + (screenBounds.East - screenBounds.West) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Longitude < shapeBounds.East - (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.East - (screenBounds.East - screenBounds.West) / 2;  } else if (locationToCoerce.Longitude > shapeBounds.West + (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.West + (screenBounds.East - screenBounds.West) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: locationToCoerce.Longitude = shapeBounds.East - (screenBounds.East - screenBounds.West) / 2;  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Longitude > shapeBounds.West + (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.West + (screenBounds.East - screenBounds.West) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Longitude > shapeBounds.West + (screenBounds.East - screenBounds.West) / 2) {  	locationToCoerce.Longitude = shapeBounds.West + (screenBounds.East - screenBounds.West) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: locationToCoerce.Longitude = shapeBounds.West + (screenBounds.East - screenBounds.West) / 2;  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Latitude < shapeBounds.North - (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.North - (screenBounds.North - screenBounds.South) / 2;  } else if (locationToCoerce.Latitude > shapeBounds.South + (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.South + (screenBounds.North - screenBounds.South) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Latitude < shapeBounds.North - (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.North - (screenBounds.North - screenBounds.South) / 2;  } else if (locationToCoerce.Latitude > shapeBounds.South + (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.South + (screenBounds.North - screenBounds.South) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Latitude < shapeBounds.North - (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.North - (screenBounds.North - screenBounds.South) / 2;  } else if (locationToCoerce.Latitude > shapeBounds.South + (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.South + (screenBounds.North - screenBounds.South) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Latitude < shapeBounds.North - (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.North - (screenBounds.North - screenBounds.South) / 2;  } else if (locationToCoerce.Latitude > shapeBounds.South + (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.South + (screenBounds.North - screenBounds.South) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: locationToCoerce.Latitude = shapeBounds.North - (screenBounds.North - screenBounds.South) / 2;  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Latitude > shapeBounds.South + (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.South + (screenBounds.North - screenBounds.South) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: if (locationToCoerce.Latitude > shapeBounds.South + (screenBounds.North - screenBounds.South) / 2) {  	locationToCoerce.Latitude = shapeBounds.South + (screenBounds.North - screenBounds.South) / 2;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MapCoerceViewChangedCommand,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MapCoerceViewChangedCommand.cs,CoerceLocation,The following statement contains a magic number: locationToCoerce.Latitude = shapeBounds.South + (screenBounds.North - screenBounds.South) / 2;  
Magic Number,RestrictPanningOnViewChangedCommand,MainPage,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MainPage.xaml.cs,SelectCountry,The following statement contains a magic number: if (layer != null) {  	var shapes = (layer as MapShapeLayer).Source.Shapes;  	foreach (var shape in shapes) {  		if (country == shape.GetAttribute ("CNTRY_NAME").ToString ()) {  			var behavior = this.radMap.Behaviors.FirstOrDefault (x => x is MapShapeSelectionBehavior);  			if (behavior != null) {  				(behavior as MapShapeSelectionBehavior).SelectedShape = shape;  				var bounds = (shape as IMap2DShape).GetBounds ();  				this.radMap.SetView (bounds);  				this.radMap.ZoomLevel -= 0.5;  				break;  			}  		}  	}  }  
Magic Number,RestrictPanningOnViewChangedCommand,MainPage,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MainPage.xaml.cs,SelectCountry,The following statement contains a magic number: foreach (var shape in shapes) {  	if (country == shape.GetAttribute ("CNTRY_NAME").ToString ()) {  		var behavior = this.radMap.Behaviors.FirstOrDefault (x => x is MapShapeSelectionBehavior);  		if (behavior != null) {  			(behavior as MapShapeSelectionBehavior).SelectedShape = shape;  			var bounds = (shape as IMap2DShape).GetBounds ();  			this.radMap.SetView (bounds);  			this.radMap.ZoomLevel -= 0.5;  			break;  		}  	}  }  
Magic Number,RestrictPanningOnViewChangedCommand,MainPage,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MainPage.xaml.cs,SelectCountry,The following statement contains a magic number: if (country == shape.GetAttribute ("CNTRY_NAME").ToString ()) {  	var behavior = this.radMap.Behaviors.FirstOrDefault (x => x is MapShapeSelectionBehavior);  	if (behavior != null) {  		(behavior as MapShapeSelectionBehavior).SelectedShape = shape;  		var bounds = (shape as IMap2DShape).GetBounds ();  		this.radMap.SetView (bounds);  		this.radMap.ZoomLevel -= 0.5;  		break;  	}  }  
Magic Number,RestrictPanningOnViewChangedCommand,MainPage,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MainPage.xaml.cs,SelectCountry,The following statement contains a magic number: if (behavior != null) {  	(behavior as MapShapeSelectionBehavior).SelectedShape = shape;  	var bounds = (shape as IMap2DShape).GetBounds ();  	this.radMap.SetView (bounds);  	this.radMap.ZoomLevel -= 0.5;  	break;  }  
Magic Number,RestrictPanningOnViewChangedCommand,MainPage,D:\newReposJune17\telerik_win8-xaml-sdk\Map\RestrictPanningOnViewChangedCommand\MainPage.xaml.cs,SelectCountry,The following statement contains a magic number: this.radMap.ZoomLevel -= 0.5;  
