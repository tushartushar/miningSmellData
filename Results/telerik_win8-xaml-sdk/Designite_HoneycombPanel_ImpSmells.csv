Implementation smell,Namespace,Class,File,Method,Description
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,MeasureOverride,The following statement contains a magic number: foreach (UIElement child in Children) {  	var tile = child as FrameworkElement;  	tile.Height = this.ItemLenght;  	tile.Width = (COS_30_DEGREE * this.ItemLenght / 2) * 2;  	tile.Measure (availableSize);  }  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,MeasureOverride,The following statement contains a magic number: foreach (UIElement child in Children) {  	var tile = child as FrameworkElement;  	tile.Height = this.ItemLenght;  	tile.Width = (COS_30_DEGREE * this.ItemLenght / 2) * 2;  	tile.Measure (availableSize);  }  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,MeasureOverride,The following statement contains a magic number: tile.Width = (COS_30_DEGREE * this.ItemLenght / 2) * 2;  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,MeasureOverride,The following statement contains a magic number: tile.Width = (COS_30_DEGREE * this.ItemLenght / 2) * 2;  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,ArrangeOverride,The following statement contains a magic number: for (int i = 0; i < this.Children.Count; i++) {  	height = this.Children [i].DesiredSize.Height;  	width = COS_30_DEGREE * height;  	row = HoneycombPanel.GetRow (this.Children [i]);  	column = HoneycombPanel.GetColumn (this.Children [i]);  	x = row % 2 == 0 ? column * width : (0.5 * width + column * width);  	y = 0.75 * row * height;  	this.Children [i].Arrange (new Rect (new Point (x' y)' this.Children [i].DesiredSize));  }  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,ArrangeOverride,The following statement contains a magic number: for (int i = 0; i < this.Children.Count; i++) {  	height = this.Children [i].DesiredSize.Height;  	width = COS_30_DEGREE * height;  	row = HoneycombPanel.GetRow (this.Children [i]);  	column = HoneycombPanel.GetColumn (this.Children [i]);  	x = row % 2 == 0 ? column * width : (0.5 * width + column * width);  	y = 0.75 * row * height;  	this.Children [i].Arrange (new Rect (new Point (x' y)' this.Children [i].DesiredSize));  }  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,ArrangeOverride,The following statement contains a magic number: for (int i = 0; i < this.Children.Count; i++) {  	height = this.Children [i].DesiredSize.Height;  	width = COS_30_DEGREE * height;  	row = HoneycombPanel.GetRow (this.Children [i]);  	column = HoneycombPanel.GetColumn (this.Children [i]);  	x = row % 2 == 0 ? column * width : (0.5 * width + column * width);  	y = 0.75 * row * height;  	this.Children [i].Arrange (new Rect (new Point (x' y)' this.Children [i].DesiredSize));  }  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,ArrangeOverride,The following statement contains a magic number: x = row % 2 == 0 ? column * width : (0.5 * width + column * width);  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,ArrangeOverride,The following statement contains a magic number: x = row % 2 == 0 ? column * width : (0.5 * width + column * width);  
Magic Number,HoneycombPanel,HoneycombPanel,D:\newReposJune17\telerik_win8-xaml-sdk\Blogs\HoneyComb_HubTile\HoneycombPanel\HoneycombPanel.cs,ArrangeOverride,The following statement contains a magic number: y = 0.75 * row * height;  
