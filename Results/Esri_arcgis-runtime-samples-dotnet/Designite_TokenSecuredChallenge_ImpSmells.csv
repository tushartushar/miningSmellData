Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TokenSecuredChallenge,MainPage,C:\repos\Esri_arcgis-runtime-samples-dotnet\src\UWP\ArcGISRuntime.UWP.Samples\Samples\Security\TokenSecuredChallenge\TokenChallenge.xaml.cs,LoginButtonClick,The length of the statement  "            if (_loginTaskCompletionSource == null || _loginTaskCompletionSource.Task == null || _loginTaskCompletionSource.Task.AsyncState == null) " is 136.
Empty Catch Block,TokenSecuredChallenge,MainPage,C:\repos\Esri_arcgis-runtime-samples-dotnet\src\UWP\ArcGISRuntime.UWP.Samples\Samples\Security\TokenSecuredChallenge\TokenChallenge.xaml.cs,Challenge,The method has an empty catch block.
Magic Number,TokenSecuredChallenge,MainPage,C:\repos\Esri_arcgis-runtime-samples-dotnet\src\UWP\ArcGISRuntime.UWP.Samples\Samples\Security\TokenSecuredChallenge\TokenChallenge.xaml.cs,LoginButtonClick,The following statement contains a magic number: try              {                  // Create a token credential using the provided username and password                  TokenCredential userCredentials = await AuthenticationManager.Current.GenerateCredentialAsync                                              (new Uri(loginEntry.ServiceUrl)'                                               loginEntry.UserName'                                               loginEntry.Password'                                               loginEntry.RequestInfo.GenerateTokenOptions);                    // Set the result on the task completion source                  _loginTaskCompletionSource.TrySetResult(userCredentials);              }              catch (Exception ex)              {                  // Show exceptions on the login UI                  loginEntry.ErrorMessage = ex.Message;                    // Increment the login attempt count                  loginEntry.AttemptCount++;                    // Set an exception on the login task completion source after three login attempts                  if (loginEntry.AttemptCount >= 3)                  {                      // This causes the login attempt to fail                      _loginTaskCompletionSource.TrySetException(new Exception("Exceeded the number of allowed login attempts"));                  }              }
