Implementation smell,Namespace,Class,File,Method,Description
Long Method,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The method has 172 lines of code.
Complex Method,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,OnMouseDown,Cyclomatic complexity of the method is 8
Complex Method,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,OnMouseMove,Cyclomatic complexity of the method is 8
Complex Method,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,OnMouseUp,Cyclomatic complexity of the method is 12
Complex Method,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,Cyclomatic complexity of the method is 17
Complex Method,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,Cyclomatic complexity of the method is 24
Complex Method,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,EditSelectRect,Cyclomatic complexity of the method is 32
Complex Method,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SaveResultImg,Cyclomatic complexity of the method is 19
Complex Method,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,Cyclomatic complexity of the method is 12
Complex Method,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,OnPaint,Cyclomatic complexity of the method is 10
Complex Method,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,Cyclomatic complexity of the method is 15
Long Parameter List,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsEventIni,The method has 20 parameters.
Long Parameter List,NScreenCapture.Helpers,Win32,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\Win32.cs,CreateRoundRectRgn,The method has 6 parameters.
Long Identifier,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the parameter yoffset_ColorTable_ScreenBounds is 31.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawCustomeSelectRect,The length of the statement  "			g.DrawImage (m_UpdatedSelectImgList [m_UpdatedSelectImgList.Count - 1]' m_selectRect' new Rectangle (Point.Empty' m_selectRect.Size)' GraphicsUnit.Pixel); " is 154.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The length of the statement  "				g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH)); " is 201.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The length of the statement  "		Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT); " is 134.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The length of the statement  "		Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE); " is 242.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The length of the statement  "			g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2)); " is 141.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The length of the statement  "			g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2)); " is 142.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The length of the statement  "		Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT); " is 175.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The length of the statement  "		string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B); " is 131.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetMouseEditFlag,The length of the statement  "		Rectangle nodeRect = new Rectangle (rectNodes [i].X - DrawArgsManager.LINE_NODE_WIDTH' rectNodes [i].Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH); " is 212.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,MoveSelectRect,The length of the statement  "	if (m_selectRect != Rectangle.Empty && (m_captureState == CaptureState.FinishedRect || m_captureState == CaptureState.ResizingRect)) { " is 134.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,AddImgToUpdatedSelectImgList,The length of the statement  "			g.DrawImage (lastSelectImg' new Rectangle (Point.Empty' lastImg_Copy.Size)' new Rectangle (Point.Empty' lastSelectImg.Size)' GraphicsUnit.Pixel); " is 145.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,ShowCaptureToolBar,The length of the statement  "	bool isGetSelectRect = (m_captureState == CaptureState.FinishedRect || m_captureState == CaptureState.ResizingRect || m_captureState == CaptureState.DrawInRect); " is 161.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SetToolBarLocation,The length of the statement  "				location = new Point (m_selectRect.Right - captureToolBar.Width - yoffset_SelectRect_ToolBar' m_selectRect.Top + yoffset_SelectRect_ToolBar); " is 141.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SetToolBarLocation,The length of the statement  "				location = new Point (m_selectRect.Right - captureToolBar.Width' m_selectRect.Top - captureToolBar.Height - yoffset_SelectRect_ToolBar); " is 136.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "			captureToolBar.Location = new Point (m_selectRect.Right - captureToolBar.Width' m_selectRect.Bottom + yoffset_ToolBar_SelectRect); " is 130.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "			captureToolBar.Location = new Point (m_selectRect.Right - captureToolBar.Width' m_selectRect.Top - captureToolBar.Height - yoffset_ToolBar_SelectRect); " is 151.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "				colorTableWithWidth.Location = new Point (captureToolBar.Left' captureToolBar.Top - colorTableHeight - yoffset_ToolBar_ColorTable); " is 131.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "				captureToolBar.Location = new Point (m_selectRect.Right - captureToolBar.Width - yoffset_ToolBar_SelectRect' m_selectRect.Top + yoffset_ToolBar_SelectRect); " is 156.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "			captureToolBar.Location = new Point (m_selectRect.Right - captureToolBar.Width' m_selectRect.Top - captureToolBar.Height - yoffset_ToolBar_SelectRect); " is 151.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "			colorTableWithWidth.Location = new Point (captureToolBar.Left' captureToolBar.Top - colorTableHeight - yoffset_ToolBar_ColorTable); " is 131.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "			captureToolBar.Location = new Point (m_selectRect.Right - captureToolBar.Width - yoffset_ToolBar_SelectRect' m_selectRect.Top + yoffset_ToolBar_SelectRect); " is 156.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "		captureToolBar.Location = new Point (m_selectRect.Right - captureToolBar.Width - yoffset_ToolBar_SelectRect' m_selectRect.Top + yoffset_ToolBar_SelectRect); " is 156.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "				captureToolBar.Location = new Point (m_selectRect.X' m_selectRect.Top - captureToolBar.Height - yoffset_ToolBar_SelectRect); " is 124.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "				colorTableWithWidth.Location = new Point (captureToolBar.Left' captureToolBar.Top - yoffset_ToolBar_ColorTable - colorTableHeight); " is 131.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "				captureToolBar.Location = new Point (m_selectRect.X + yoffset_ToolBar_SelectRect' m_selectRect.Top + yoffset_ToolBar_SelectRect); " is 129.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "			captureToolBar.Location = new Point (m_selectRect.X' m_selectRect.Top - captureToolBar.Height - yoffset_ToolBar_SelectRect); " is 124.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "			colorTableWithWidth.Location = new Point (captureToolBar.Left' captureToolBar.Top - yoffset_ToolBar_ColorTable - colorTableHeight); " is 131.
Long Statement,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,UpdateToolBarLocation,The length of the statement  "			captureToolBar.Location = new Point (m_selectRect.X + yoffset_ToolBar_SelectRect' m_selectRect.Top + yoffset_ToolBar_SelectRect); " is 129.
Long Statement,NScreenCapture.CaptureForm,WindowsListManager,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\WindowsListManager.cs,IsNormalWindow,The length of the statement  "	result = !((captionStr == "Program Manager" && classNameStr == "Progman") || (captionStr == "" && classNameStr == "SHELLDLL_DefView") || (captionStr == "FolderView" && classNameStr == "SysListView32") && hwnd == m_desktopHandle); " is 229.
Long Statement,NScreenCapture.CaptureForm,WindowsListManager,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\WindowsListManager.cs,IsNormalWindow,The length of the statement  "	result = result && (hwnd != IntPtr.Zero) && Win32.IsWindowVisible (hwnd) && Win32.IsWindowEnabled (hwnd) && (!Win32.IsIconic (hwnd)) && (!Win32.IsRectEmpty (ref winRect)) && Win32.IntersectRect (out outRect' ref screenRect' ref winRect); " is 237.
Long Statement,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,OnPaint,The length of the statement  "		ImageHelper.DrawImageWithNineRect (pe.Graphics' m_glassHotImg' ClientRectangle' new Rectangle (0' 0' m_glassDownImg.Width' m_glassDownImg.Height)); " is 147.
Long Statement,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,OnPaint,The length of the statement  "		ImageHelper.DrawImageWithNineRect (pe.Graphics' m_glassDownImg' ClientRectangle' new Rectangle (0' 0' m_glassDownImg.Width' m_glassDownImg.Height)); " is 148.
Long Statement,NScreenCapture.Controls,Separator,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\Separator.cs,OnPaint,The length of the statement  "		ImageHelper.DrawImageWithNineRect (pe.Graphics' m_separatorImg' ClientRectangle' new Rectangle (Point.Empty' m_separatorImg.Size)); " is 131.
Long Statement,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The length of the statement  "	Rectangle dotimgRect = new Rectangle ((ClientSize.Width - m_widthDotImg.Width) / 2' (ClientSize.Height - m_widthDotImg.Height) / 2' 4' 4); " is 138.
Long Statement,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The length of the statement  "	ImageHelper.DrawImageWithNineRect (pe.Graphics' m_widthDotImg' dotimgRect' new Rectangle (0' 0' m_widthDotImg.Width' m_widthDotImg.Height)); " is 140.
Long Statement,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The length of the statement  "		ImageHelper.DrawImageWithNineRect (pe.Graphics' m_glassHotImg' ClientRectangle' new Rectangle (0' 0' m_glassDownImg.Width' m_glassDownImg.Height)); " is 147.
Long Statement,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The length of the statement  "		ImageHelper.DrawImageWithNineRect (pe.Graphics' m_glassDownImg' ClientRectangle' new Rectangle (0' 0' m_glassDownImg.Width' m_glassDownImg.Height)); " is 148.
Long Statement,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The length of the statement  "	BitmapData bmpSrcData = bmpSrc.LockBits (new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' ImageLockMode.ReadOnly' PixelFormat.Format32bppArgb); " is 145.
Long Statement,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The length of the statement  "	BitmapData bmpNewData = bmpNew.LockBits (new Rectangle (0' 0' bmpNew.Width' bmpNew.Height)' ImageLockMode.WriteOnly' PixelFormat.Format32bppArgb); " is 146.
Long Statement,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The length of the statement  "					byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1]; " is 126.
Long Statement,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The length of the statement  "					byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2]; " is 126.
Long Statement,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The length of the statement  "					byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3]; " is 126.
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The following statement contains a magic number: using (Pen redPen = new Pen (DrawArgsManager.LINE_COLOR_AUTO' DrawArgsManager.LINE_WIDTH_CUSTOM)) {  	g.DrawRectangle (redPen' m_selectRect);  	Point[] rectNodes = GetRectNodes (m_selectRect);  	using (SolidBrush redBrush = new SolidBrush (DrawArgsManager.LINE_COLOR_AUTO)) {  		foreach (Point node in rectNodes)  			g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The following statement contains a magic number: using (Pen redPen = new Pen (DrawArgsManager.LINE_COLOR_AUTO' DrawArgsManager.LINE_WIDTH_CUSTOM)) {  	g.DrawRectangle (redPen' m_selectRect);  	Point[] rectNodes = GetRectNodes (m_selectRect);  	using (SolidBrush redBrush = new SolidBrush (DrawArgsManager.LINE_COLOR_AUTO)) {  		foreach (Point node in rectNodes)  			g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The following statement contains a magic number: using (SolidBrush redBrush = new SolidBrush (DrawArgsManager.LINE_COLOR_AUTO)) {  	foreach (Point node in rectNodes)  		g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The following statement contains a magic number: using (SolidBrush redBrush = new SolidBrush (DrawArgsManager.LINE_COLOR_AUTO)) {  	foreach (Point node in rectNodes)  		g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The following statement contains a magic number: foreach (Point node in rectNodes)  	g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The following statement contains a magic number: foreach (Point node in rectNodes)  	g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The following statement contains a magic number: g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectBorder,The following statement contains a magic number: g.FillRectangle (redBrush' new Rectangle (node.X - DrawArgsManager.LINE_NODE_WIDTH' node.Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: if (m_selectRect != Rectangle.Empty) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_SELECTRECT_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_SELECTRECT_HEIGHT;  	int offset = 3;  	infoRect.X = m_selectRect.X + offset;  	//上边界检查  	if (m_selectRect.Y < DrawArgsManager.INFO_SELECTRECT_HEIGHT + DrawArgsManager.LINE_WIDTH_CUSTOM)  		infoRect.Y = m_selectRect.Y + offset;  	else  		infoRect.Y = m_selectRect.Y - DrawArgsManager.INFO_SELECTRECT_HEIGHT - offset;  	//绘制alpha 背景  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (DrawArgsManager.INFO_MOVING_ALPHA' 0' 0' 0))) {  		g.FillRectangle (sbrush' infoRect);  		sbrush.Color = Color.White;  		string infoStr = string.Format ("大小：{0} x {1} \n双击复制图像"' m_selectRect.Width' m_selectRect.Height);  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: if (m_selectRect != Rectangle.Empty) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_SELECTRECT_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_SELECTRECT_HEIGHT;  	int offset = 3;  	infoRect.X = m_selectRect.X + offset;  	//上边界检查  	if (m_selectRect.Y < DrawArgsManager.INFO_SELECTRECT_HEIGHT + DrawArgsManager.LINE_WIDTH_CUSTOM)  		infoRect.Y = m_selectRect.Y + offset;  	else  		infoRect.Y = m_selectRect.Y - DrawArgsManager.INFO_SELECTRECT_HEIGHT - offset;  	//绘制alpha 背景  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (DrawArgsManager.INFO_MOVING_ALPHA' 0' 0' 0))) {  		g.FillRectangle (sbrush' infoRect);  		sbrush.Color = Color.White;  		string infoStr = string.Format ("大小：{0} x {1} \n双击复制图像"' m_selectRect.Width' m_selectRect.Height);  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: if (m_selectRect != Rectangle.Empty) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_SELECTRECT_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_SELECTRECT_HEIGHT;  	int offset = 3;  	infoRect.X = m_selectRect.X + offset;  	//上边界检查  	if (m_selectRect.Y < DrawArgsManager.INFO_SELECTRECT_HEIGHT + DrawArgsManager.LINE_WIDTH_CUSTOM)  		infoRect.Y = m_selectRect.Y + offset;  	else  		infoRect.Y = m_selectRect.Y - DrawArgsManager.INFO_SELECTRECT_HEIGHT - offset;  	//绘制alpha 背景  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (DrawArgsManager.INFO_MOVING_ALPHA' 0' 0' 0))) {  		g.FillRectangle (sbrush' infoRect);  		sbrush.Color = Color.White;  		string infoStr = string.Format ("大小：{0} x {1} \n双击复制图像"' m_selectRect.Width' m_selectRect.Height);  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: if (m_selectRect != Rectangle.Empty) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_SELECTRECT_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_SELECTRECT_HEIGHT;  	int offset = 3;  	infoRect.X = m_selectRect.X + offset;  	//上边界检查  	if (m_selectRect.Y < DrawArgsManager.INFO_SELECTRECT_HEIGHT + DrawArgsManager.LINE_WIDTH_CUSTOM)  		infoRect.Y = m_selectRect.Y + offset;  	else  		infoRect.Y = m_selectRect.Y - DrawArgsManager.INFO_SELECTRECT_HEIGHT - offset;  	//绘制alpha 背景  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (DrawArgsManager.INFO_MOVING_ALPHA' 0' 0' 0))) {  		g.FillRectangle (sbrush' infoRect);  		sbrush.Color = Color.White;  		string infoStr = string.Format ("大小：{0} x {1} \n双击复制图像"' m_selectRect.Width' m_selectRect.Height);  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (DrawArgsManager.INFO_MOVING_ALPHA' 0' 0' 0))) {  	g.FillRectangle (sbrush' infoRect);  	sbrush.Color = Color.White;  	string infoStr = string.Format ("大小：{0} x {1} \n双击复制图像"' m_selectRect.Width' m_selectRect.Height);  	using (Font fontStr = new Font ("微软雅黑"' 9)) {  		g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (DrawArgsManager.INFO_MOVING_ALPHA' 0' 0' 0))) {  	g.FillRectangle (sbrush' infoRect);  	sbrush.Color = Color.White;  	string infoStr = string.Format ("大小：{0} x {1} \n双击复制图像"' m_selectRect.Width' m_selectRect.Height);  	using (Font fontStr = new Font ("微软雅黑"' 9)) {  		g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (DrawArgsManager.INFO_MOVING_ALPHA' 0' 0' 0))) {  	g.FillRectangle (sbrush' infoRect);  	sbrush.Color = Color.White;  	string infoStr = string.Format ("大小：{0} x {1} \n双击复制图像"' m_selectRect.Width' m_selectRect.Height);  	using (Font fontStr = new Font ("微软雅黑"' 9)) {  		g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: using (Font fontStr = new Font ("微软雅黑"' 9)) {  	g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: using (Font fontStr = new Font ("微软雅黑"' 9)) {  	g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: using (Font fontStr = new Font ("微软雅黑"' 9)) {  	g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawSelectRectInfo,The following statement contains a magic number: g.DrawString (infoStr' fontStr' sbrush' new Point (infoRect.X + 5' infoRect.Y + 5));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: if (m_captureState == CaptureState.None || m_captureState == CaptureState.CreatingRect) {  	Rectangle infoRect = new Rectangle ();  	infoRect.Width = DrawArgsManager.INFO_MOVING_WIDTH;  	infoRect.Height = DrawArgsManager.INFO_MOVING_PIC_HEIGHT + DrawArgsManager.INFO_MOVING_STR_HEIGHT;  	int xoffset = 10;  	int yoffset = 30;  	infoRect.X = Control.MousePosition.X + xoffset;  	infoRect.Y = Control.MousePosition.Y + yoffset;  	//边界检查限制  	if (Control.MousePosition.X > Width - infoRect.Width - xoffset)  		infoRect.X = Control.MousePosition.X - infoRect.Width - xoffset;  	if (Control.MousePosition.Y > Height - infoRect.Height - yoffset)  		infoRect.Y = Control.MousePosition.Y - infoRect.Height - yoffset;  	//放大图矩形  	Rectangle picRect = new Rectangle (infoRect.X' infoRect.Y' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_PIC_HEIGHT);  	//鼠标rang范围矩形  	Rectangle mouseRangeRect = new Rectangle (Control.MousePosition.X - DrawArgsManager.INFO_MOVING_RANGE' Control.MousePosition.Y - DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE);  	using (Pen picPen = new Pen (Color.Black' 1)) {  		//放大图  		using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  			//获取鼠标rang范围内的原图片  			using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  				g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  			}  			//绘制放大后的图  			using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  				g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  			}  		}  		//内外边框  		g.DrawRectangle (picPen' picRect);  		picPen.Color = Color.White;  		picRect.Inflate (-2' -2);  		picPen.Width = 2;  		g.DrawRectangle (picPen' picRect);  		//十字架  		picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  		picPen.Width = 4;  		g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  		g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  	}  	//字符串矩形  	Rectangle strRect = new Rectangle (infoRect.X' infoRect.Y + DrawArgsManager.INFO_MOVING_PIC_HEIGHT' DrawArgsManager.INFO_MOVING_WIDTH' DrawArgsManager.INFO_MOVING_STR_HEIGHT);  	int width = 0;  	int height = 0;  	if (m_autoRect != Rectangle.Empty) {  		width = m_autoRect.Width;  		height = m_autoRect.Height;  	}  	else {  		width = m_selectRect.Width;  		height = m_selectRect.Height;  	}  	Color currentColor = ImageHelper.GetColor (m_screenImg' Control.MousePosition.X' Control.MousePosition.Y);  	string infoStr = string.Format ("大小：{0} x {1} \nRGB：({2}'{3}'{4})"' width' height' currentColor.R' currentColor.G' currentColor.B);  	//绘制字符串  	using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  		g.FillRectangle (sbrush' strRect);  		sbrush.Color = Color.White;  		using (Font fontStr = new Font ("微软雅黑"' 9)) {  			g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Pen picPen = new Pen (Color.Black' 1)) {  	//放大图  	using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  		//获取鼠标rang范围内的原图片  		using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  			g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  		}  		//绘制放大后的图  		using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  			g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  		}  	}  	//内外边框  	g.DrawRectangle (picPen' picRect);  	picPen.Color = Color.White;  	picRect.Inflate (-2' -2);  	picPen.Width = 2;  	g.DrawRectangle (picPen' picRect);  	//十字架  	picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  	picPen.Width = 4;  	g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  	g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  	//获取鼠标rang范围内的原图片  	using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  		g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  	}  	//绘制放大后的图  	using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  		g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  	//获取鼠标rang范围内的原图片  	using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  		g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  	}  	//绘制放大后的图  	using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  		g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Bitmap bmpSrc = new Bitmap (2 * DrawArgsManager.INFO_MOVING_RANGE' 2 * DrawArgsManager.INFO_MOVING_RANGE)) {  	//获取鼠标rang范围内的原图片  	using (Graphics g_src = Graphics.FromImage (bmpSrc)) {  		g_src.DrawImage (m_screenImg' new Rectangle (0' 0' bmpSrc.Width' bmpSrc.Height)' mouseRangeRect' GraphicsUnit.Pixel);  	}  	//绘制放大后的图  	using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  		g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Bitmap bmpMagnified = ImageHelper.MagnifyImage (bmpSrc' 4)) {  	g.DrawImage (bmpMagnified' picRect' new Rectangle (0' 0' bmpMagnified.Width' bmpMagnified.Height)' GraphicsUnit.Pixel);  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: picRect.Inflate (-2' -2);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: picRect.Inflate (-2' -2);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: picPen.Width = 2;  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: picPen.Color = Color.FromArgb (200' DrawArgsManager.LINE_COLOR_AUTO);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: picPen.Width = 4;  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawLine (picPen' new Point (picRect.X + picRect.Width / 2' picRect.Y + 2)' new Point (picRect.X + picRect.Width / 2' picRect.Bottom - 2));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawLine (picPen' new Point (picRect.X + 2' picRect.Y + picRect.Height / 2)' new Point (picRect.Right - 2' picRect.Y + picRect.Height / 2));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  	g.FillRectangle (sbrush' strRect);  	sbrush.Color = Color.White;  	using (Font fontStr = new Font ("微软雅黑"' 9)) {  		g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  	g.FillRectangle (sbrush' strRect);  	sbrush.Color = Color.White;  	using (Font fontStr = new Font ("微软雅黑"' 9)) {  		g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  	g.FillRectangle (sbrush' strRect);  	sbrush.Color = Color.White;  	using (Font fontStr = new Font ("微软雅黑"' 9)) {  		g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (SolidBrush sbrush = new SolidBrush (Color.FromArgb (200' 0' 0' 0))) {  	g.FillRectangle (sbrush' strRect);  	sbrush.Color = Color.White;  	using (Font fontStr = new Font ("微软雅黑"' 9)) {  		g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Font fontStr = new Font ("微软雅黑"' 9)) {  	g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Font fontStr = new Font ("微软雅黑"' 9)) {  	g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: using (Font fontStr = new Font ("微软雅黑"' 9)) {  	g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawMouseMoveInfo,The following statement contains a magic number: g.DrawString (infoStr' fontStr' sbrush' new Point (strRect.X + 5' strRect.Y + 5));  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: using (Pen pen = new Pen (color' width)) {  	switch (m_drawStyle) {  	case DrawStyle.Rectangle:  		g.DrawRectangle (pen' rect);  		break;  	case DrawStyle.Ellipse:  		g.DrawEllipse (pen' rect);  		break;  	case DrawStyle.Arrow:  		using (Pen penArrow = new Pen (pen.Color' pen.Width)) {  			penArrow.EndCap = LineCap.Custom;  			penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  			Point startDrawPoint = m_startDrawPoint;  			Point endDrawPoint = m_endDrawPoint;  			if (isOffset) {  				startDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  				endDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  			}  			g.DrawLine (penArrow' startDrawPoint' endDrawPoint);  		}  		break;  	case DrawStyle.Brush:  		if (m_brushPointList.Count > 2) {  			Point[] brushPointArray = m_brushPointList.ToArray ();  			if (isOffset) {  				Point[] offsetPointArray = new Point[brushPointArray.Length];  				Point tempPoint;  				for (int i = 0; i < brushPointArray.Length; i++) {  					tempPoint = brushPointArray [i];  					tempPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  					offsetPointArray [i] = tempPoint;  				}  				brushPointArray = offsetPointArray;  			}  			g.DrawLines (pen' brushPointArray);  		}  		break;  	default:  		break;  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: using (Pen pen = new Pen (color' width)) {  	switch (m_drawStyle) {  	case DrawStyle.Rectangle:  		g.DrawRectangle (pen' rect);  		break;  	case DrawStyle.Ellipse:  		g.DrawEllipse (pen' rect);  		break;  	case DrawStyle.Arrow:  		using (Pen penArrow = new Pen (pen.Color' pen.Width)) {  			penArrow.EndCap = LineCap.Custom;  			penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  			Point startDrawPoint = m_startDrawPoint;  			Point endDrawPoint = m_endDrawPoint;  			if (isOffset) {  				startDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  				endDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  			}  			g.DrawLine (penArrow' startDrawPoint' endDrawPoint);  		}  		break;  	case DrawStyle.Brush:  		if (m_brushPointList.Count > 2) {  			Point[] brushPointArray = m_brushPointList.ToArray ();  			if (isOffset) {  				Point[] offsetPointArray = new Point[brushPointArray.Length];  				Point tempPoint;  				for (int i = 0; i < brushPointArray.Length; i++) {  					tempPoint = brushPointArray [i];  					tempPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  					offsetPointArray [i] = tempPoint;  				}  				brushPointArray = offsetPointArray;  			}  			g.DrawLines (pen' brushPointArray);  		}  		break;  	default:  		break;  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: using (Pen pen = new Pen (color' width)) {  	switch (m_drawStyle) {  	case DrawStyle.Rectangle:  		g.DrawRectangle (pen' rect);  		break;  	case DrawStyle.Ellipse:  		g.DrawEllipse (pen' rect);  		break;  	case DrawStyle.Arrow:  		using (Pen penArrow = new Pen (pen.Color' pen.Width)) {  			penArrow.EndCap = LineCap.Custom;  			penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  			Point startDrawPoint = m_startDrawPoint;  			Point endDrawPoint = m_endDrawPoint;  			if (isOffset) {  				startDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  				endDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  			}  			g.DrawLine (penArrow' startDrawPoint' endDrawPoint);  		}  		break;  	case DrawStyle.Brush:  		if (m_brushPointList.Count > 2) {  			Point[] brushPointArray = m_brushPointList.ToArray ();  			if (isOffset) {  				Point[] offsetPointArray = new Point[brushPointArray.Length];  				Point tempPoint;  				for (int i = 0; i < brushPointArray.Length; i++) {  					tempPoint = brushPointArray [i];  					tempPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  					offsetPointArray [i] = tempPoint;  				}  				brushPointArray = offsetPointArray;  			}  			g.DrawLines (pen' brushPointArray);  		}  		break;  	default:  		break;  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: switch (m_drawStyle) {  case DrawStyle.Rectangle:  	g.DrawRectangle (pen' rect);  	break;  case DrawStyle.Ellipse:  	g.DrawEllipse (pen' rect);  	break;  case DrawStyle.Arrow:  	using (Pen penArrow = new Pen (pen.Color' pen.Width)) {  		penArrow.EndCap = LineCap.Custom;  		penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  		Point startDrawPoint = m_startDrawPoint;  		Point endDrawPoint = m_endDrawPoint;  		if (isOffset) {  			startDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  			endDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  		}  		g.DrawLine (penArrow' startDrawPoint' endDrawPoint);  	}  	break;  case DrawStyle.Brush:  	if (m_brushPointList.Count > 2) {  		Point[] brushPointArray = m_brushPointList.ToArray ();  		if (isOffset) {  			Point[] offsetPointArray = new Point[brushPointArray.Length];  			Point tempPoint;  			for (int i = 0; i < brushPointArray.Length; i++) {  				tempPoint = brushPointArray [i];  				tempPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  				offsetPointArray [i] = tempPoint;  			}  			brushPointArray = offsetPointArray;  		}  		g.DrawLines (pen' brushPointArray);  	}  	break;  default:  	break;  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: switch (m_drawStyle) {  case DrawStyle.Rectangle:  	g.DrawRectangle (pen' rect);  	break;  case DrawStyle.Ellipse:  	g.DrawEllipse (pen' rect);  	break;  case DrawStyle.Arrow:  	using (Pen penArrow = new Pen (pen.Color' pen.Width)) {  		penArrow.EndCap = LineCap.Custom;  		penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  		Point startDrawPoint = m_startDrawPoint;  		Point endDrawPoint = m_endDrawPoint;  		if (isOffset) {  			startDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  			endDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  		}  		g.DrawLine (penArrow' startDrawPoint' endDrawPoint);  	}  	break;  case DrawStyle.Brush:  	if (m_brushPointList.Count > 2) {  		Point[] brushPointArray = m_brushPointList.ToArray ();  		if (isOffset) {  			Point[] offsetPointArray = new Point[brushPointArray.Length];  			Point tempPoint;  			for (int i = 0; i < brushPointArray.Length; i++) {  				tempPoint = brushPointArray [i];  				tempPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  				offsetPointArray [i] = tempPoint;  			}  			brushPointArray = offsetPointArray;  		}  		g.DrawLines (pen' brushPointArray);  	}  	break;  default:  	break;  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: switch (m_drawStyle) {  case DrawStyle.Rectangle:  	g.DrawRectangle (pen' rect);  	break;  case DrawStyle.Ellipse:  	g.DrawEllipse (pen' rect);  	break;  case DrawStyle.Arrow:  	using (Pen penArrow = new Pen (pen.Color' pen.Width)) {  		penArrow.EndCap = LineCap.Custom;  		penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  		Point startDrawPoint = m_startDrawPoint;  		Point endDrawPoint = m_endDrawPoint;  		if (isOffset) {  			startDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  			endDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  		}  		g.DrawLine (penArrow' startDrawPoint' endDrawPoint);  	}  	break;  case DrawStyle.Brush:  	if (m_brushPointList.Count > 2) {  		Point[] brushPointArray = m_brushPointList.ToArray ();  		if (isOffset) {  			Point[] offsetPointArray = new Point[brushPointArray.Length];  			Point tempPoint;  			for (int i = 0; i < brushPointArray.Length; i++) {  				tempPoint = brushPointArray [i];  				tempPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  				offsetPointArray [i] = tempPoint;  			}  			brushPointArray = offsetPointArray;  		}  		g.DrawLines (pen' brushPointArray);  	}  	break;  default:  	break;  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: using (Pen penArrow = new Pen (pen.Color' pen.Width)) {  	penArrow.EndCap = LineCap.Custom;  	penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  	Point startDrawPoint = m_startDrawPoint;  	Point endDrawPoint = m_endDrawPoint;  	if (isOffset) {  		startDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  		endDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  	}  	g.DrawLine (penArrow' startDrawPoint' endDrawPoint);  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: using (Pen penArrow = new Pen (pen.Color' pen.Width)) {  	penArrow.EndCap = LineCap.Custom;  	penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  	Point startDrawPoint = m_startDrawPoint;  	Point endDrawPoint = m_endDrawPoint;  	if (isOffset) {  		startDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  		endDrawPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  	}  	g.DrawLine (penArrow' startDrawPoint' endDrawPoint);  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: penArrow.CustomEndCap = new AdjustableArrowCap (4' 4' true);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,DrawOperateion,The following statement contains a magic number: if (m_brushPointList.Count > 2) {  	Point[] brushPointArray = m_brushPointList.ToArray ();  	if (isOffset) {  		Point[] offsetPointArray = new Point[brushPointArray.Length];  		Point tempPoint;  		for (int i = 0; i < brushPointArray.Length; i++) {  			tempPoint = brushPointArray [i];  			tempPoint.Offset (-m_selectRect.X' -m_selectRect.Y);  			offsetPointArray [i] = tempPoint;  		}  		brushPointArray = offsetPointArray;  	}  	g.DrawLines (pen' brushPointArray);  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [1] = new Point (rect.Left' rect.Top + (rect.Bottom - rect.Top) / 2);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [2] = new Point (rect.Left' rect.Bottom);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [3] = new Point (rect.Left + (rect.Right - rect.Left) / 2' rect.Bottom);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [3] = new Point (rect.Left + (rect.Right - rect.Left) / 2' rect.Bottom);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [4] = new Point (rect.Right' rect.Bottom);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [5] = new Point (rect.Right' rect.Top + (rect.Bottom - rect.Top) / 2);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [5] = new Point (rect.Right' rect.Top + (rect.Bottom - rect.Top) / 2);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [6] = new Point (rect.Right' rect.Top);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [7] = new Point (rect.Left + (rect.Right - rect.Left) / 2' rect.Top);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetRectNodes,The following statement contains a magic number: nodes [7] = new Point (rect.Left + (rect.Right - rect.Left) / 2' rect.Top);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetMouseEditFlag,The following statement contains a magic number: for (int i = 0; i < rectNodes.Length; i++) {  	Rectangle nodeRect = new Rectangle (rectNodes [i].X - DrawArgsManager.LINE_NODE_WIDTH' rectNodes [i].Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH);  	if (nodeRect.Contains (mousePt)) {  		flag = (MouseEditFlag)i;  		break;  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,GetMouseEditFlag,The following statement contains a magic number: for (int i = 0; i < rectNodes.Length; i++) {  	Rectangle nodeRect = new Rectangle (rectNodes [i].X - DrawArgsManager.LINE_NODE_WIDTH' rectNodes [i].Y - DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH' 2 * DrawArgsManager.LINE_NODE_WIDTH);  	if (nodeRect.Contains (mousePt)) {  		flag = (MouseEditFlag)i;  		break;  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SetCursor,The following statement contains a magic number: RectCursors [9] = new Cursor (Properties.Resources.cursor_default.Handle);  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SaveResultImg,The following statement contains a magic number: using (SaveFileDialog saveDialog = new SaveFileDialog ()) {  	saveDialog.InitialDirectory = m_resultImgDefaultSavePath;  	saveDialog.FileName = m_resultImgFileName;  	saveDialog.AddExtension = true;  	saveDialog.Filter = "BMP|*.bmp|PNG|*.png|GIF|*.gif|JPEG|*.jpg;*.jgeg";  	saveDialog.DefaultExt = "png";  	saveDialog.FilterIndex = 2;  	if (saveDialog.ShowDialog () == DialogResult.OK) {  		int length = saveDialog.FileName.Length;  		string extion = saveDialog.FileName.Substring (length - 3' 3).ToLower ();  		ImageFormat format;  		switch (extion) {  		case "bmp":  			format = ImageFormat.Bmp;  			break;  		case "png":  			format = ImageFormat.Png;  			break;  		case "gif":  			format = ImageFormat.Gif;  			break;  		case "jpg":  			format = ImageFormat.Jpeg;  			break;  		default:  			format = ImageFormat.Png;  			break;  		}  		Bitmap resultBmp = GetResultImg ();  		if (resultBmp != null) {  			resultBmp.Save (saveDialog.FileName' format);  			isSucceed = true;  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SaveResultImg,The following statement contains a magic number: using (SaveFileDialog saveDialog = new SaveFileDialog ()) {  	saveDialog.InitialDirectory = m_resultImgDefaultSavePath;  	saveDialog.FileName = m_resultImgFileName;  	saveDialog.AddExtension = true;  	saveDialog.Filter = "BMP|*.bmp|PNG|*.png|GIF|*.gif|JPEG|*.jpg;*.jgeg";  	saveDialog.DefaultExt = "png";  	saveDialog.FilterIndex = 2;  	if (saveDialog.ShowDialog () == DialogResult.OK) {  		int length = saveDialog.FileName.Length;  		string extion = saveDialog.FileName.Substring (length - 3' 3).ToLower ();  		ImageFormat format;  		switch (extion) {  		case "bmp":  			format = ImageFormat.Bmp;  			break;  		case "png":  			format = ImageFormat.Png;  			break;  		case "gif":  			format = ImageFormat.Gif;  			break;  		case "jpg":  			format = ImageFormat.Jpeg;  			break;  		default:  			format = ImageFormat.Png;  			break;  		}  		Bitmap resultBmp = GetResultImg ();  		if (resultBmp != null) {  			resultBmp.Save (saveDialog.FileName' format);  			isSucceed = true;  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SaveResultImg,The following statement contains a magic number: using (SaveFileDialog saveDialog = new SaveFileDialog ()) {  	saveDialog.InitialDirectory = m_resultImgDefaultSavePath;  	saveDialog.FileName = m_resultImgFileName;  	saveDialog.AddExtension = true;  	saveDialog.Filter = "BMP|*.bmp|PNG|*.png|GIF|*.gif|JPEG|*.jpg;*.jgeg";  	saveDialog.DefaultExt = "png";  	saveDialog.FilterIndex = 2;  	if (saveDialog.ShowDialog () == DialogResult.OK) {  		int length = saveDialog.FileName.Length;  		string extion = saveDialog.FileName.Substring (length - 3' 3).ToLower ();  		ImageFormat format;  		switch (extion) {  		case "bmp":  			format = ImageFormat.Bmp;  			break;  		case "png":  			format = ImageFormat.Png;  			break;  		case "gif":  			format = ImageFormat.Gif;  			break;  		case "jpg":  			format = ImageFormat.Jpeg;  			break;  		default:  			format = ImageFormat.Png;  			break;  		}  		Bitmap resultBmp = GetResultImg ();  		if (resultBmp != null) {  			resultBmp.Save (saveDialog.FileName' format);  			isSucceed = true;  		}  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SaveResultImg,The following statement contains a magic number: saveDialog.FilterIndex = 2;  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SaveResultImg,The following statement contains a magic number: if (saveDialog.ShowDialog () == DialogResult.OK) {  	int length = saveDialog.FileName.Length;  	string extion = saveDialog.FileName.Substring (length - 3' 3).ToLower ();  	ImageFormat format;  	switch (extion) {  	case "bmp":  		format = ImageFormat.Bmp;  		break;  	case "png":  		format = ImageFormat.Png;  		break;  	case "gif":  		format = ImageFormat.Gif;  		break;  	case "jpg":  		format = ImageFormat.Jpeg;  		break;  	default:  		format = ImageFormat.Png;  		break;  	}  	Bitmap resultBmp = GetResultImg ();  	if (resultBmp != null) {  		resultBmp.Save (saveDialog.FileName' format);  		isSucceed = true;  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,SaveResultImg,The following statement contains a magic number: if (saveDialog.ShowDialog () == DialogResult.OK) {  	int length = saveDialog.FileName.Length;  	string extion = saveDialog.FileName.Substring (length - 3' 3).ToLower ();  	ImageFormat format;  	switch (extion) {  	case "bmp":  		format = ImageFormat.Bmp;  		break;  	case "png":  		format = ImageFormat.Png;  		break;  	case "gif":  		format = ImageFormat.Gif;  		break;  	case "jpg":  		format = ImageFormat.Jpeg;  		break;  	default:  		format = ImageFormat.Png;  		break;  	}  	Bitmap resultBmp = GetResultImg ();  	if (resultBmp != null) {  		resultBmp.Save (saveDialog.FileName' format);  		isSucceed = true;  	}  }  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,textBoxString_TextChanged,The following statement contains a magic number: if (size.Width < 50)  	size.Width = 50;  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,textBoxString_TextChanged,The following statement contains a magic number: if (size.Width < 50)  	size.Width = 50;  
Magic Number,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,textBoxString_TextChanged,The following statement contains a magic number: size.Width = 50;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_finishCaptureTool.Location = new System.Drawing.Point (289' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_finishCaptureTool.Location = new System.Drawing.Point (289' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_finishCaptureTool.Size = new System.Drawing.Size (67' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_finishCaptureTool.Size = new System.Drawing.Size (67' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_finishCaptureTool.TabIndex = 9;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_exitCaptureTool.Location = new System.Drawing.Point (259' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_exitCaptureTool.Location = new System.Drawing.Point (259' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_exitCaptureTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_exitCaptureTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_exitCaptureTool.TabIndex = 8;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_separatorRight.Location = new System.Drawing.Point (252' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_separatorRight.Location = new System.Drawing.Point (252' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_separatorRight.Size = new System.Drawing.Size (1' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_separatorRight.TabIndex = 11;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_loadImgToMSpaintTool.Location = new System.Drawing.Point (222' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_loadImgToMSpaintTool.Location = new System.Drawing.Point (222' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_loadImgToMSpaintTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_loadImgToMSpaintTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_loadImgToMSpaintTool.TabIndex = 7;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_saveTool.Location = new System.Drawing.Point (192' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_saveTool.Location = new System.Drawing.Point (192' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_saveTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_saveTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_saveTool.TabIndex = 6;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_undoTool.Location = new System.Drawing.Point (162' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_undoTool.Location = new System.Drawing.Point (162' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_undoTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_undoTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_undoTool.TabIndex = 5;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_separatorLeft.Location = new System.Drawing.Point (155' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_separatorLeft.Location = new System.Drawing.Point (155' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_separatorLeft.Size = new System.Drawing.Size (1' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_separatorLeft.TabIndex = 10;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_textTool.Location = new System.Drawing.Point (125' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_textTool.Location = new System.Drawing.Point (125' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_textTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_textTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_textTool.TabIndex = 4;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_brushTool.Location = new System.Drawing.Point (95' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_brushTool.Location = new System.Drawing.Point (95' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_brushTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_brushTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_brushTool.TabIndex = 3;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_arrowTool.Location = new System.Drawing.Point (65' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_arrowTool.Location = new System.Drawing.Point (65' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_arrowTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_arrowTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_arrowTool.TabIndex = 2;  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_ellipseTool.Location = new System.Drawing.Point (35' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_ellipseTool.Location = new System.Drawing.Point (35' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_ellipseTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_ellipseTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_rectangleTool.Location = new System.Drawing.Point (5' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_rectangleTool.Location = new System.Drawing.Point (5' 3);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_rectangleTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.m_rectangleTool.Size = new System.Drawing.Size (24' 24);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (361' 30);  
Magic Number,NScreenCapture.Controls,CaptureToolBar,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\CaptureToolBar.cs,ToolsProperiyIni,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (361' 30);  
Magic Number,NScreenCapture.Controls,ColorButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorButton.cs,ColorButton,The following statement contains a magic number: this.Size = new Size (16' 16);  
Magic Number,NScreenCapture.Controls,ColorButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorButton.cs,ColorButton,The following statement contains a magic number: this.Size = new Size (16' 16);  
Magic Number,NScreenCapture.Controls,ColorButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorButton.cs,ColorButton,The following statement contains a magic number: this.Size = new Size (16' 16);  
Magic Number,NScreenCapture.Controls,ColorButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorButton.cs,ColorButton,The following statement contains a magic number: this.Size = new Size (16' 16);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,PanelIni,The following statement contains a magic number: this.Size = new Size (177' 37);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,PanelIni,The following statement contains a magic number: this.Size = new Size (177' 37);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_selectColorButton.Size = new Size (33' 33);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_selectColorButton.Size = new Size (33' 33);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_selectColorButton.Location = new Point (3' 2);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_selectColorButton.Location = new Point (3' 2);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: for (int i = 0; i < m_colorsButtons.Length; i++) {  	if (i == 0)  		m_colorsButtons [i].Location = new Point (m_selectColorButton.Right + 3' m_selectColorButton.Top);  	else if (i == 8)  		m_colorsButtons [i].Location = new Point (m_colorsButtons [0].Left' m_colorsButtons [0].Bottom + m_offset);  	else  		m_colorsButtons [i].Location = new Point (m_colorsButtons [i - 1].Right + m_offset' m_colorsButtons [i - 1].Top);  }  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: for (int i = 0; i < m_colorsButtons.Length; i++) {  	if (i == 0)  		m_colorsButtons [i].Location = new Point (m_selectColorButton.Right + 3' m_selectColorButton.Top);  	else if (i == 8)  		m_colorsButtons [i].Location = new Point (m_colorsButtons [0].Left' m_colorsButtons [0].Bottom + m_offset);  	else  		m_colorsButtons [i].Location = new Point (m_colorsButtons [i - 1].Right + m_offset' m_colorsButtons [i - 1].Top);  }  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: if (i == 0)  	m_colorsButtons [i].Location = new Point (m_selectColorButton.Right + 3' m_selectColorButton.Top);  else if (i == 8)  	m_colorsButtons [i].Location = new Point (m_colorsButtons [0].Left' m_colorsButtons [0].Bottom + m_offset);  else  	m_colorsButtons [i].Location = new Point (m_colorsButtons [i - 1].Right + m_offset' m_colorsButtons [i - 1].Top);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: if (i == 0)  	m_colorsButtons [i].Location = new Point (m_selectColorButton.Right + 3' m_selectColorButton.Top);  else if (i == 8)  	m_colorsButtons [i].Location = new Point (m_colorsButtons [0].Left' m_colorsButtons [0].Bottom + m_offset);  else  	m_colorsButtons [i].Location = new Point (m_colorsButtons [i - 1].Right + m_offset' m_colorsButtons [i - 1].Top);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [i].Location = new Point (m_selectColorButton.Right + 3' m_selectColorButton.Top);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: if (i == 8)  	m_colorsButtons [i].Location = new Point (m_colorsButtons [0].Left' m_colorsButtons [0].Bottom + m_offset);  else  	m_colorsButtons [i].Location = new Point (m_colorsButtons [i - 1].Right + m_offset' m_colorsButtons [i - 1].Top);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [2].Color = Color.FromArgb (128' 0' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [2].Color = Color.FromArgb (128' 0' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [3].Color = Color.FromArgb (128' 128' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [3].Color = Color.FromArgb (128' 128' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [3].Color = Color.FromArgb (128' 128' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [4].Color = Color.FromArgb (0' 128' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [4].Color = Color.FromArgb (0' 128' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [5].Color = Color.FromArgb (0' 0' 128);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [5].Color = Color.FromArgb (0' 0' 128);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [6].Color = Color.FromArgb (128' 0' 128);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [6].Color = Color.FromArgb (128' 0' 128);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [6].Color = Color.FromArgb (128' 0' 128);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [7].Color = Color.FromArgb (0' 128' 128);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [7].Color = Color.FromArgb (0' 128' 128);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [7].Color = Color.FromArgb (0' 128' 128);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [8].Color = Color.White;  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [9].Color = Color.FromArgb (192' 192' 192);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [9].Color = Color.FromArgb (192' 192' 192);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [9].Color = Color.FromArgb (192' 192' 192);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [9].Color = Color.FromArgb (192' 192' 192);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [10].Color = Color.Red;  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [11].Color = Color.Yellow;  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [12].Color = Color.FromArgb (0' 255' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [12].Color = Color.FromArgb (0' 255' 0);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [13].Color = Color.Blue;  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [14].Color = Color.FromArgb (255' 0' 255);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [14].Color = Color.FromArgb (255' 0' 255);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [14].Color = Color.FromArgb (255' 0' 255);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [15].Color = Color.FromArgb (0' 255' 255);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [15].Color = Color.FromArgb (0' 255' 255);  
Magic Number,NScreenCapture.Controls,ColorTable,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\ColorTable.cs,ColorButtonsIni,The following statement contains a magic number: m_colorsButtons [15].Color = Color.FromArgb (0' 255' 255);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,GlassButton,The following statement contains a magic number: m_defaultFont = new Font ("微软雅黑"' 9);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,GlassButton,The following statement contains a magic number: this.Size = new Size (75' 23);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,GlassButton,The following statement contains a magic number: this.Size = new Size (75' 23);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image == null && !string.IsNullOrEmpty (Text)) {  	textRect = new Rectangle (3' 0' Width - 6' Height);  }  else if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image == null && !string.IsNullOrEmpty (Text)) {  	textRect = new Rectangle (3' 0' Width - 6' Height);  }  else if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image == null && !string.IsNullOrEmpty (Text)) {  	textRect = new Rectangle (3' 0' Width - 6' Height);  }  else if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image == null && !string.IsNullOrEmpty (Text)) {  	textRect = new Rectangle (3' 0' Width - 6' Height);  }  else if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image == null && !string.IsNullOrEmpty (Text)) {  	textRect = new Rectangle (3' 0' Width - 6' Height);  }  else if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image == null && !string.IsNullOrEmpty (Text)) {  	textRect = new Rectangle (3' 0' Width - 6' Height);  }  else if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image == null && !string.IsNullOrEmpty (Text)) {  	textRect = new Rectangle (3' 0' Width - 6' Height);  }  else if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image == null && !string.IsNullOrEmpty (Text)) {  	textRect = new Rectangle (3' 0' Width - 6' Height);  }  else if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: textRect = new Rectangle (3' 0' Width - 6' Height);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: textRect = new Rectangle (3' 0' Width - 6' Height);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  }  else if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: imageRect = new Rectangle ((Width - Image.Width) / 2' (Height - Image.Height) / 2' Image.Width' Image.Height);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: if (Image != null && !string.IsNullOrEmpty (Text)) {  	imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  	textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  }  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: imageRect = new Rectangle (4' (Height - Image.Height) / 2' Image.Width' Image.Height);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  
Magic Number,NScreenCapture.Controls,GlassButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\GlassButton.cs,CalculateRect,The following statement contains a magic number: textRect = new Rectangle (imageRect.Right + 1' 0' Width - 4 * 2 - imageRect.Width - 1' Height);  
Magic Number,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following statement contains a magic number: switch (m_lineWidth) {  case DotWidth.Minimize:  	break;  case DotWidth.Medium:  	dotimgRect.Inflate (2' 2);  	break;  case DotWidth.Maximize:  	dotimgRect.Inflate (4' 4);  	break;  }  
Magic Number,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following statement contains a magic number: switch (m_lineWidth) {  case DotWidth.Minimize:  	break;  case DotWidth.Medium:  	dotimgRect.Inflate (2' 2);  	break;  case DotWidth.Maximize:  	dotimgRect.Inflate (4' 4);  	break;  }  
Magic Number,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following statement contains a magic number: switch (m_lineWidth) {  case DotWidth.Minimize:  	break;  case DotWidth.Medium:  	dotimgRect.Inflate (2' 2);  	break;  case DotWidth.Maximize:  	dotimgRect.Inflate (4' 4);  	break;  }  
Magic Number,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following statement contains a magic number: switch (m_lineWidth) {  case DotWidth.Minimize:  	break;  case DotWidth.Medium:  	dotimgRect.Inflate (2' 2);  	break;  case DotWidth.Maximize:  	dotimgRect.Inflate (4' 4);  	break;  }  
Magic Number,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following statement contains a magic number: dotimgRect.Inflate (2' 2);  
Magic Number,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following statement contains a magic number: dotimgRect.Inflate (2' 2);  
Magic Number,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following statement contains a magic number: dotimgRect.Inflate (4' 4);  
Magic Number,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following statement contains a magic number: dotimgRect.Inflate (4' 4);  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int y = 0' lenY = bmpSrc.Height; y < lenY; y++) {  	for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  		for (int cy = 0; cy < times; cy++) {  			for (int cx = 0; cx < times; cx++) {  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  				byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  			}  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int x = 0' lenX = bmpSrc.Width; x < lenX; x++) {  	for (int cy = 0; cy < times; cy++) {  		for (int cx = 0; cx < times; cx++) {  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  			byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  		}  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cy = 0; cy < times; cy++) {  	for (int cx = 0; cx < times; cx++) {  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  		byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  	}  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: for (int cx = 0; cx < times; cx++) {  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  	byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  }  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride)] = bySrcData [x * 4 + y * bmpSrcData.Stride];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 1] = bySrcData [x * 4 + y * bmpSrcData.Stride + 1];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 2] = bySrcData [x * 4 + y * bmpSrcData.Stride + 2];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  
Magic Number,NScreenCapture.Helpers,ImageHelper,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Helpers\ImageHelper.cs,MagnifyImage,The following statement contains a magic number: byNewData [(x * times + cx) * 4 + ((y * times + cy) * bmpNewData.Stride) + 3] = bySrcData [x * 4 + y * bmpSrcData.Stride + 3];  
Missing Default,NScreenCapture.CaptureForm,CaptureMainForm,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\CaptureForm\CaptureMainForm.cs,EditSelectRect,The following switch statement is missing a default case: switch (flag) {  case MouseEditFlag.WestNorth:  	m_selectRect = new RECT (offsetX' offsetY' rectEx.Right' rectEx.Bottom).ToRectangle ();  	break;  case MouseEditFlag.West:  	m_selectRect = new RECT (offsetX' rectEx.Top' rectEx.Right' rectEx.Bottom).ToRectangle ();  	break;  case MouseEditFlag.WestSouth:  	m_selectRect = new RECT (offsetX' rectEx.Top' rectEx.Right' offsetY).ToRectangle ();  	break;  case MouseEditFlag.South:  	m_selectRect = new RECT (rectEx.Left' rectEx.Top' rectEx.Right' offsetY).ToRectangle ();  	break;  case MouseEditFlag.EastSouth:  	m_selectRect = new RECT (rectEx.Left' rectEx.Top' offsetX' offsetY).ToRectangle ();  	break;  case MouseEditFlag.East:  	m_selectRect = new RECT (rectEx.Left' rectEx.Top' offsetX' rectEx.Bottom).ToRectangle ();  	break;  case MouseEditFlag.EastNorth:  	m_selectRect = new RECT (rectEx.Left' offsetY' offsetX' rectEx.Bottom).ToRectangle ();  	break;  case MouseEditFlag.North:  	m_selectRect = new RECT (rectEx.Left' offsetY' rectEx.Right' rectEx.Bottom).ToRectangle ();  	break;  case MouseEditFlag.SizeAll:  	MoveSelectRect (offsetX - m_startPoint.X' offsetY - m_startPoint.Y);  	m_startPoint.X = offsetX;  	m_startPoint.Y = offsetY;  	break;  case MouseEditFlag.Defalut:  	break;  }  
Missing Default,NScreenCapture.Controls,WidthDotButton,C:\repos\caojianagbocn_NScreenCapture\src\NScreenCapture\Controls\WidthDotButton.cs,OnPaint,The following switch statement is missing a default case: switch (m_lineWidth) {  case DotWidth.Minimize:  	break;  case DotWidth.Medium:  	dotimgRect.Inflate (2' 2);  	break;  case DotWidth.Maximize:  	dotimgRect.Inflate (4' 4);  	break;  }  
