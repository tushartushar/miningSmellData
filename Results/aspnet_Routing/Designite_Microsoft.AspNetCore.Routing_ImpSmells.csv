Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.AspNetCore.Routing.Tree,UrlMatchingTree,C:\repos\aspnet_Routing\shared\Microsoft.AspNetCore.Routing.UrlMatchingTree.Sources\UrlMatchingTree.cs,AddEntryToTree,The method has 138 lines of code.
Complex Method,Microsoft.AspNetCore.Routing,RouteConstraintMatcher,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\RouteConstraintMatcher.cs,Match,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.AspNetCore.Routing.Tree,TreeRouteBuilder,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Tree\TreeRouteBuilder.cs,MapInbound,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.AspNetCore.Routing.Tree,TreeRouteBuilder,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Tree\TreeRouteBuilder.cs,MapOutbound,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.AspNetCore.Routing.Tree,TreeRouter,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Tree\TreeRouter.cs,TreeRouter,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.AspNetCore.Routing.Tree,TreeRouter,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Tree\TreeRouter.cs,GenerateVirtualPath,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNetCore.Routing.Tree,TreeEnumerator,C:\repos\aspnet_Routing\shared\Microsoft.AspNetCore.Routing.UrlMatchingTree.Sources\TreeEnumerator.cs,MoveNext,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.AspNetCore.Routing.Tree,UrlMatchingTree,C:\repos\aspnet_Routing\shared\Microsoft.AspNetCore.Routing.UrlMatchingTree.Sources\UrlMatchingTree.cs,AddEntryToTree,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.AspNetCore.Routing.DecisionTree,DecisionTreeBuilder<TItem>,C:\repos\aspnet_Routing\shared\Microsoft.AspNetCore.Routing.DecisionTree.Sources\DecisionTreeBuilder.cs,GenerateNode,Cyclomatic complexity of the method is 13
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,BoolRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\BoolRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,CompositeRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\CompositeRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,DateTimeRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\DateTimeRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,DecimalRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\DecimalRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,DoubleRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\DoubleRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,FloatRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\FloatRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,GuidRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\GuidRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,HttpMethodRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\HttpMethodRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,IntRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\IntRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,LengthRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\LengthRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,LongRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\LongRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,MaxLengthRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\MaxLengthRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,MaxRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\MaxRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,MinLengthRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\MinLengthRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,MinRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\MinRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,OptionalRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\OptionalRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,RangeRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\RangeRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,RegexRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\RegexRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,RequiredRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\RequiredRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing.Constraints,StringRouteConstraint,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Constraints\StringRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,Microsoft.AspNetCore.Routing,Route,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Route.cs,Route,The method has 6 parameters. Parameters: target' routeTemplate' defaults' constraints' dataTokens' inlineConstraintResolver
Long Parameter List,Microsoft.AspNetCore.Routing,Route,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Route.cs,Route,The method has 7 parameters. Parameters: target' routeName' routeTemplate' defaults' constraints' dataTokens' inlineConstraintResolver
Long Parameter List,Microsoft.AspNetCore.Routing,RouteBase,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\RouteBase.cs,RouteBase,The method has 6 parameters. Parameters: template' name' constraintResolver' defaults' constraints' dataTokens
Long Parameter List,Microsoft.AspNetCore.Routing,RouteConstraintMatcher,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\RouteConstraintMatcher.cs,Match,The method has 6 parameters. Parameters: constraints' routeValues' httpContext' route' routeDirection' logger
Long Parameter List,Microsoft.AspNetCore.Builder,MapRouteRouteBuilderExtensions,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\MapRouteRouteBuilderExtensions.cs,MapRoute,The method has 5 parameters. Parameters: routeBuilder' name' template' defaults' constraints
Long Parameter List,Microsoft.AspNetCore.Builder,MapRouteRouteBuilderExtensions,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\MapRouteRouteBuilderExtensions.cs,MapRoute,The method has 6 parameters. Parameters: routeBuilder' name' template' defaults' constraints' dataTokens
Long Parameter List,Microsoft.AspNetCore.Routing.Template,TemplatePart,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\TemplatePart.cs,CreateParameter,The method has 5 parameters. Parameters: name' isCatchAll' isOptional' defaultValue' inlineConstraints
Long Parameter List,Microsoft.AspNetCore.Routing.Tree,TreeRouteBuilder,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Tree\TreeRouteBuilder.cs,MapOutbound,The method has 5 parameters. Parameters: handler' routeTemplate' requiredLinkValues' routeName' order
Long Parameter List,Microsoft.AspNetCore.Routing.Tree,TreeRouter,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Tree\TreeRouter.cs,TreeRouter,The method has 6 parameters. Parameters: trees' linkGenerationEntries' binderFactory' routeLogger' constraintLogger' version
Long Identifier,Microsoft.AspNetCore.Routing.Logging,RouteConstraintMatcherExtensions,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Logging\RouteConstraintMatcherExtensions.cs,,The length of the parameter _routeValueDoesNotMatchConstraint is 33.
Long Identifier,Microsoft.AspNetCore.Routing.Tree,UrlMatchingTree,C:\repos\aspnet_Routing\shared\Microsoft.AspNetCore.Routing.UrlMatchingTree.Sources\UrlMatchingTree.cs,RemainingSegmentsAreOptional,The length of the parameter isOptionalCatchAllOrHasDefaultValue is 35.
Long Statement,Microsoft.AspNetCore.Routing,InlineRouteParameterParser,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\InlineRouteParameterParser.cs,ParseRouteParameter,The length of the statement  "            var inner = AspNetCore.Dispatcher.Patterns.InlineRouteParameterParser.ParseRouteParameter(string.Empty' routeParameter); " is 120.
Long Statement,Microsoft.AspNetCore.Routing.Tree,UrlMatchingNode,C:\repos\aspnet_Routing\shared\Microsoft.AspNetCore.Routing.UrlMatchingTree.Sources\UrlMatchingNode.cs,DebuggerToString,The length of the statement  "            return $"Length: {Depth}' Matches: {string.Join(" | "' Matches?.Select(m => $"({m.TemplateMatcher.Template.TemplateText})"))}"; " is 127.
Magic Number,Microsoft.AspNetCore.Routing,DefaultInlineConstraintResolver,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\DefaultInlineConstraintResolver.cs,ResolveConstraint,The following statement contains a magic number: if (indexOfFirstOpenParens >= 0 && inlineConstraint.EndsWith(")"' StringComparison.Ordinal))              {                  constraintKey = inlineConstraint.Substring(0' indexOfFirstOpenParens);                  argumentString = inlineConstraint.Substring(indexOfFirstOpenParens + 1'                                                              inlineConstraint.Length - indexOfFirstOpenParens - 2);              }              else              {                  constraintKey = inlineConstraint;                  argumentString = null;              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeInbound,The following statement contains a magic number: for (var i = 0; i < template.Segments.Count; i++)              {                  var segment = template.Segments[i];                    var digit = ComputeInboundPrecedenceDigit(segment);                  Debug.Assert(digit >= 0 && digit < 10);                    precedence += decimal.Divide(digit' (decimal)Math.Pow(10' i));              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeInbound,The following statement contains a magic number: for (var i = 0; i < template.Segments.Count; i++)              {                  var segment = template.Segments[i];                    var digit = ComputeInboundPrecedenceDigit(segment);                  Debug.Assert(digit >= 0 && digit < 10);                    precedence += decimal.Divide(digit' (decimal)Math.Pow(10' i));              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeOutbound,The following statement contains a magic number: for (var i = 0; i < template.Segments.Count; i++)              {                  var segment = template.Segments[i];                    var digit = ComputeOutboundPrecedenceDigit(segment);                  Debug.Assert(digit >= 0 && digit < 10);                    precedence += decimal.Divide(digit' (decimal)Math.Pow(10' i));              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeOutbound,The following statement contains a magic number: for (var i = 0; i < template.Segments.Count; i++)              {                  var segment = template.Segments[i];                    var digit = ComputeOutboundPrecedenceDigit(segment);                  Debug.Assert(digit >= 0 && digit < 10);                    precedence += decimal.Divide(digit' (decimal)Math.Pow(10' i));              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeOutboundPrecedenceDigit,The following statement contains a magic number: if(segment.Parts.Count > 1)              {                  return 4;              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeOutboundPrecedenceDigit,The following statement contains a magic number: if(part.IsLiteral)              {                  return 5;              }              else              {                  Debug.Assert(part.IsParameter);                  var digit = part.IsCatchAll ? 1 :  3;                    if (part.InlineConstraints != null && part.InlineConstraints.Any())                  {                      digit++;                  }                    return digit;              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeOutboundPrecedenceDigit,The following statement contains a magic number: if(part.IsLiteral)              {                  return 5;              }              else              {                  Debug.Assert(part.IsParameter);                  var digit = part.IsCatchAll ? 1 :  3;                    if (part.InlineConstraints != null && part.InlineConstraints.Any())                  {                      digit++;                  }                    return digit;              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeInboundPrecedenceDigit,The following statement contains a magic number: if (segment.Parts.Count > 1)              {                  // Multi-part segments should appear after literal segments and along with parameter segments                  return 2;              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeInboundPrecedenceDigit,The following statement contains a magic number: if (part.IsLiteral)              {                  return 1;              }              else              {                  Debug.Assert(part.IsParameter);                  var digit = part.IsCatchAll ? 5 : 3;                    // If there is a route constraint for the parameter' reduce order by 1                  // Constrained parameters end up with order 2' Constrained catch alls end up with order 4                  if (part.InlineConstraints != null && part.InlineConstraints.Any())                  {                      digit--;                  }                    return digit;              }
Magic Number,Microsoft.AspNetCore.Routing.Template,RoutePrecedence,C:\repos\aspnet_Routing\src\Microsoft.AspNetCore.Routing\Template\RoutePrecedence.cs,ComputeInboundPrecedenceDigit,The following statement contains a magic number: if (part.IsLiteral)              {                  return 1;              }              else              {                  Debug.Assert(part.IsParameter);                  var digit = part.IsCatchAll ? 5 : 3;                    // If there is a route constraint for the parameter' reduce order by 1                  // Constrained parameters end up with order 2' Constrained catch alls end up with order 4                  if (part.InlineConstraints != null && part.InlineConstraints.Any())                  {                      digit--;                  }                    return digit;              }
