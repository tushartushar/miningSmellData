Implementation smell,Namespace,Class,File,Method,Description
Long Method,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_DecodeToDic,The method has 101 lines of code.
Long Method,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeToDic,The method has 119 lines of code.
Long Method,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeReal,The method has 287 lines of code.
Long Method,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_TryDummy,The method has 203 lines of code.
Long Method,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The method has 503 lines of code.
Long Method,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The method has 103 lines of code.
Long Method,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_CodeOneBlock,The method has 168 lines of code.
Long Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadArchive,The method has 155 lines of code.
Long Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadSectionDetails,The method has 108 lines of code.
Long Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadSection,The method has 120 lines of code.
Long Method,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The method has 140 lines of code.
Long Method,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_DecodeSymbol,The method has 107 lines of code.
Long Method,ManagedLzma.SevenZip.FileModel,ArchiveFileModelMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveFileModel.cs,ReadMetadata,The method has 100 lines of code.
Long Method,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The method has 122 lines of code.
Complex Method,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_ReadBlock,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,Cyclomatic complexity of the method is 12
Complex Method,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc_GetMatchesSpec,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,GetMatchesSpec1,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,SkipMatchesSpec,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_GetMatches,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.LZMA.Master,CMtSync,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MtSync_Create2,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,HashThreadFunc,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,BtGetMatches,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,Cyclomatic complexity of the method is 15
Complex Method,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_DecodeToDic,Cyclomatic complexity of the method is 22
Complex Method,ManagedLzma.LZMA.Master,CLzma2EncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncProps_Normalize,Cyclomatic complexity of the method is 13
Complex Method,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncInt_EncodeSubblock,Cyclomatic complexity of the method is 15
Complex Method,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2Enc_EncodeMt1,Cyclomatic complexity of the method is 11
Complex Method,ManagedLzma.LZMA.Master,CMtCallbackImp,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Code,Cyclomatic complexity of the method is 11
Complex Method,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeToDic,Cyclomatic complexity of the method is 22
Complex Method,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_TryDummy,Cyclomatic complexity of the method is 26
Complex Method,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,Cyclomatic complexity of the method is 18
Complex Method,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,Cyclomatic complexity of the method is 74
Complex Method,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,Cyclomatic complexity of the method is 22
Complex Method,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_CodeOneBlock,Cyclomatic complexity of the method is 26
Complex Method,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_Alloc,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_Init,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.LZMA.Master,CMtThread,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\MtCoder.cs,MtThread_Process,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.LZMA.Master,CMtCoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\MtCoder.cs,MtCoder_Code,Cyclomatic complexity of the method is 11
Complex Method,ManagedLzma.LZMA2,Decoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma2\Decoder.cs,Decode,Cyclomatic complexity of the method is 13
Complex Method,ManagedLzma.LZMA,Decoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\Decoder.cs,Decode,Cyclomatic complexity of the method is 13
Complex Method,ManagedLzma.SevenZip.Reader,ArchiveSectionDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveDecoder.cs,ArchiveSectionDecoder,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadArchive,Cyclomatic complexity of the method is 25
Complex Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadMetadata,Cyclomatic complexity of the method is 11
Complex Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadRawStreamList,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadSectionHeader,Cyclomatic complexity of the method is 11
Complex Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadSectionDetails,Cyclomatic complexity of the method is 25
Complex Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadSection,Cyclomatic complexity of the method is 29
Complex Method,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadDecoder,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.Reader,DecodedStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveReader.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.SevenZip.Reader,KeyDataStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Read,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,DecodeInto,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,Cyclomatic complexity of the method is 12
Complex Method,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CodeSpec,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,GlueFreeBlocks,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CreateSuccessors,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,Cyclomatic complexity of the method is 22
Complex Method,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_DecodeSymbol,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.FileModel,ArchiveFileModelMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveFileModel.cs,ReadMetadata,Cyclomatic complexity of the method is 18
Complex Method,ManagedLzma.SevenZip.Metadata,CompressionMethod,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\CompressionMethod.cs,Encode,Cyclomatic complexity of the method is 11
Complex Method,ManagedLzma.SevenZip.Metadata,CompressionMethod,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\CompressionMethod.cs,CheckInputOutputCount,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.SevenZip.Metadata,CompressionMethod,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\CompressionMethod.cs,CreateDecoder,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.Metadata,CompressionMethod,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\CompressionMethod.cs,ToString,Cyclomatic complexity of the method is 11
Complex Method,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,Cyclomatic complexity of the method is 17
Complex Method,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteDecoderSection,Cyclomatic complexity of the method is 19
Complex Method,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,TransferSectionAsync,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.SevenZip.Writer,ArchiveMetadataRecorder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,CheckName,Cyclomatic complexity of the method is 8
Complex Method,ManagedLzma.SevenZip.Writer,EncoderDefinition,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Definition.cs,Complete,Cyclomatic complexity of the method is 9
Complex Method,ManagedLzma.SevenZip.Writer,EncoderDefinition,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Definition.cs,CreateEncoderSession,Cyclomatic complexity of the method is 16
Complex Method,ManagedLzma.SevenZip.Writer,EncoderSession,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,ReadInternalAsync,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma.SevenZip.Writer,EncoderSession,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,Complete,Cyclomatic complexity of the method is 10
Complex Method,ManagedLzma,AsyncInputQueue,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\StreamHelper.cs,ReadAsync,Cyclomatic complexity of the method is 9
Long Parameter List,ManagedLzma.LZMA.Master,LZMA,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Core.cs,LzmaEncode,The method has 11 parameters. Parameters: dest' destLen' src' srcLen' props' propsEncoded' propsSize' writeEndMark' progress' alloc' allocBig
Long Parameter List,ManagedLzma.LZMA.Master,LZMA,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Core.cs,LzmaCompress,The method has 13 parameters. Parameters: dest' destLen' src' srcLen' outProps' outPropsSize' level' dictSize' lc' lp' pb' fb' numThreads
Long Parameter List,ManagedLzma.LZMA.Master,LZMA,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Core.cs,LzmaUncompress,The method has 6 parameters. Parameters: dest' destLen' src' srcLen' props' propsSize
Long Parameter List,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,The method has 5 parameters. Parameters: historySize' keepAddBufferBefore' matchMaxLen' keepAddBufferAfter' alloc
Long Parameter List,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc_GetMatchesSpec,The method has 10 parameters. Parameters: lenLimit' curMatch' pos' cur' son' _cyclicBufferPos' _cyclicBufferSize' cutValue' distances' maxLen
Long Parameter List,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,GetMatchesSpec1,The method has 10 parameters. Parameters: lenLimit' curMatch' pos' cur' son' _cyclicBufferPos' _cyclicBufferSize' cutValue' distances' maxLen
Long Parameter List,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,SkipMatchesSpec,The method has 8 parameters. Parameters: lenLimit' curMatch' pos' cur' son' _cyclicBufferPos' _cyclicBufferSize' cutValue
Long Parameter List,ManagedLzma.LZMA.Master,IMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The method has 6 parameters. Parameters: buffer' pos' hash' hashMask' heads' numHeads
Long Parameter List,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt_Create,The method has 5 parameters. Parameters: historySize' keepAddBufferBefore' matchMaxLen' keepAddBufferAfter' alloc
Long Parameter List,ManagedLzma.LZMA.Master,MatchFinderMtBase,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The method has 6 parameters. Parameters: buffer' pos' hash' hashMask' heads' numHeads
Long Parameter List,ManagedLzma.LZMA.Master,MatchFinderMt2,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The method has 6 parameters. Parameters: buffer' pos' hash' hashMask' heads' numHeads
Long Parameter List,ManagedLzma.LZMA.Master,MatchFinderMt3,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The method has 6 parameters. Parameters: buffer' pos' hash' hashMask' heads' numHeads
Long Parameter List,ManagedLzma.LZMA.Master,MatchFinderMt4a,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The method has 6 parameters. Parameters: buffer' pos' hash' hashMask' heads' numHeads
Long Parameter List,ManagedLzma.LZMA.Master,MatchFinderMt4b,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The method has 6 parameters. Parameters: buffer' pos' hash' hashMask' heads' numHeads
Long Parameter List,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_DecodeToDic,The method has 5 parameters. Parameters: dicLimit' src' srcLen' finishMode' status
Long Parameter List,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_DecodeToBuf,The method has 6 parameters. Parameters: dest' destLen' src' srcLen' finishMode' status
Long Parameter List,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Decode,The method has 8 parameters. Parameters: dest' destLen' src' srcLen' prop' finishMode' status' alloc
Long Parameter List,ManagedLzma.LZMA.Master,CMtCallbackImp,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Code,The method has 6 parameters. Parameters: index' dest' destSize' src' srcSize' finished
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeToDic,The method has 5 parameters. Parameters: dicLimit' src' srcLen' finishMode' status
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeToBuf,The method has 6 parameters. Parameters: dest' destLen' src' srcLen' finishMode' status
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDecode,The method has 9 parameters. Parameters: dest' destLen' src' srcLen' propData' propSize' finishMode' status' alloc
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_IF_BIT_0,The method has 6 parameters. Parameters: p' ttt' bound' range' code' buf
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_UPDATE_1,The method has 5 parameters. Parameters: p' ttt' bound' range' code
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_GET_BIT2,The method has 7 parameters. Parameters: p' i' ttt' bound' range' code' buf
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_GET_BIT,The method has 7 parameters. Parameters: p' i' ttt' bound' range' code' buf
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_TREE_GET_BIT,The method has 7 parameters. Parameters: probs' i' ttt' bound' range' code' buf
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_TREE_DECODE,The method has 8 parameters. Parameters: probs' limit' i' ttt' bound' range' code' buf
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_TREE_6_DECODE,The method has 7 parameters. Parameters: probs' i' ttt' bound' range' code' buf
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_IF_BIT_0_CHECK,The method has 8 parameters. Parameters: result' p' ttt' bound' range' code' buf' bufLimit
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_GET_BIT2_CHECK,The method has 10 parameters. Parameters: p' i' A0' A1' ttt' bound' range' code' buf' bufLimit
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_GET_BIT_CHECK,The method has 8 parameters. Parameters: p' i' ttt' bound' range' code' buf' bufLimit
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_TREE_DECODE_CHECK,The method has 9 parameters. Parameters: probs' limit' i' ttt' bound' range' code' buf' bufLimit
Long Parameter List,ManagedLzma.LZMA.Master,CLenPriceEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LenEnc_Encode2,The method has 5 parameters. Parameters: rc' symbol' posState' updatePrice' probPrices
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_Encode,The method has 5 parameters. Parameters: outStream' inStream' progress' alloc' allocBig
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_MemEncode,The method has 8 parameters. Parameters: dest' destLen' src' srcLen' writeEndMark' progress' alloc' allocBig
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_MemPrepare,The method has 5 parameters. Parameters: src' srcLen' keepWindowSize' alloc' allocBig
Long Parameter List,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_CodeOneMemBlock,The method has 5 parameters. Parameters: reInit' dest' destLen' desiredPackSize' unpackSize
Long Parameter List,ManagedLzma.LZMA2,Decoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma2\Decoder.cs,Decode,The method has 5 parameters. Parameters: buffer' offset' length' limit' eof
Long Parameter List,ManagedLzma.LZMA,Decoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\Decoder.cs,Decode,The method has 5 parameters. Parameters: buffer' offset' length' limit' eof
Long Parameter List,ManagedLzma.SevenZip.Reader,ArchiveSectionDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveDecoder.cs,SelectStream,The method has 7 parameters. Parameters: archiveMetadata' sectionMetadata' selector' streams' decoders' result' length
Long Parameter List,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadFileHeader,The method has 7 parameters. Parameters: stream' mStreamLength' mMajorVersion' mMinorVersion' mMetadataOffset' mMetadataLength' mMetadataChecksum
Long Parameter List,ManagedLzma.SevenZip.FileModel,ArchivedFile,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveFileModel.cs,ArchivedFile,The method has 10 parameters. Parameters: FullName' Name' Stream' Offset' Length' Checksum' Attributes' Creation' LastWrite' LastAccess
Long Parameter List,ManagedLzma.SevenZip.Metadata,ArchiveDecoderSection,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadata.cs,ArchiveDecoderSection,The method has 5 parameters. Parameters: decoders' decodedStream' length' checksum' sections
Long Parameter List,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteAlignedHeaderWithBitVector,The method has 5 parameters. Parameters: bits' vectorCount' itemCount' token' itemSize
Long Parameter List,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,TranscodeSectionAsync,The method has 5 parameters. Parameters: stream' metadata' section' selector' definition
Long Parameter List,ManagedLzma.SevenZip.Writer,ArchiveMetadataRecorder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,AppendFile,The method has 7 parameters. Parameters: name' length' checksum' attributes' creationDate' lastWriteDate' lastAccessDate
Long Parameter List,ManagedLzma.SevenZip.Writer,ArchiveMetadataRecorder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,AppendDirectory,The method has 5 parameters. Parameters: name' attributes' creationDate' lastWriteDate' lastAccessDate
Long Parameter List,ManagedLzma.SevenZip.Writer,EncoderSession,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,EncoderSession,The method has 7 parameters. Parameters: writer' section' definition' input' storage' connections' encoders
Long Identifier,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,,The length of the parameter LZMA2_CHUNK_SIZE_COMPRESSED_MAX is 31.
Long Identifier,ManagedLzma.SevenZip.Reader,MetadataAttributeReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataDataReader.cs,MetadataAttributeReader,The length of the parameter enablePosixFileAttributeExtension is 33.
Long Identifier,ManagedLzma.SevenZip.Reader,MetadataAttributeReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataDataReader.cs,,The length of the parameter mEnablePosixFileAttributeExtension is 34.
Long Identifier,ManagedLzma.SevenZip.Writer,EncoderConnection,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,,The length of the parameter mEncoderOutputToConnectionInput is 31.
Long Identifier,ManagedLzma.SevenZip.Writer,EncoderConnection,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,,The length of the parameter mConnectionOutputToEncoderInput is 31.
Long Statement,ManagedLzma.LZMA.Master,LZMA,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Core.cs,LzmaCompress,The length of the statement  "            return LzmaEncode(dest' ref destLen' src' srcLen' props' outProps' ref outPropsSize' false' null' ISzAlloc.SmallAlloc' ISzAlloc.BigAlloc); " is 138.
Long Statement,ManagedLzma.LZMA.Master,LZMA,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Core.cs,LzmaUncompress,The length of the statement  "            return CLzmaDec.LzmaDecode(dest' ref destLen' src' ref srcLen' props' (uint)propsSize' ELzmaFinishMode.LZMA_FINISH_ANY' out status' ISzAlloc.SmallAlloc); " is 153.
Long Statement,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt2_MatchFinder_GetMatches,The length of the statement  "                offset = (uint)(GetMatchesSpec1(lenLimit' curMatch' mPos' mBuffer' mSon' mCyclicBufferPos' mCyclicBufferSize' mCutValue' distances + offset' 1) - distances); " is 157.
Long Statement,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_GetMatches,The length of the statement  "                offset = (uint)(GetMatchesSpec1(lenLimit' curMatch' mPos' mBuffer' mSon' mCyclicBufferPos' mCyclicBufferSize' mCutValue' distances + offset' maxLen) - distances); " is 162.
Long Statement,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The length of the statement  "                offset = (uint)(GetMatchesSpec1(lenLimit' curMatch' mPos' mBuffer' mSon' mCyclicBufferPos' mCyclicBufferSize' mCutValue' distances + offset' maxLen) - distances); " is 162.
Long Statement,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The length of the statement  "                offset = (uint)(Hc_GetMatchesSpec(lenLimit' curMatch' mPos' mBuffer' mSon' mCyclicBufferPos' mCyclicBufferSize' mCutValue' distances + offset' maxLen) - distances); " is 164.
Long Statement,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,HashThreadFunc,The length of the statement  "                            mInterface.GetHeadsFunc(base.mBuffer' base.mPos' P.From(base.mHash' base.mFixedHashSize)' base.mHashMask' heads + 2' num); " is 122.
Long Statement,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncInt_EncodeSubblock,The length of the statement  "                SRes res = mEnc.LzmaEnc_CodeOneMemBlock(mNeedInitState' outBuf + lzHeaderSize' ref packSize' LZMA2_PACK_SIZE_MAX' ref unpackSize); " is 130.
Long Statement,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2Enc_EncodeMt1,The length of the statement  "                if ((res = mEnc.LzmaEnc_PrepareForLzma2(inStream' LZMA2_KEEP_WINDOW_SIZE' mainEncoder.mAlloc' mainEncoder.mAllocBig)) != SZ_OK) " is 127.
Long Statement,ManagedLzma.LZMA.Master,CMtCallbackImp,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Code,The length of the statement  "                    if ((res = p.mEnc.LzmaEnc_MemPrepare(src' srcSize' CLzma2EncInternal.LZMA2_KEEP_WINDOW_SIZE' mLzma2Enc.mAlloc' mLzma2Enc.mAllocBig)) != SZ_OK) " is 142.
Long Statement,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_TryDummy,The length of the statement  "                                if (!_GET_BIT2_CHECK(probLit' ref symbol' delegate { offs &= ~bit; }' delegate { offs &= bit; }' out ttt' ref bound' ref range' ref code' ref buf' bufLimit)) " is 157.
Long Statement,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_TryDummy,The length of the statement  "                            if (!_TREE_DECODE_CHECK(prob' 1 << kNumPosSlotBits' out posSlot' out ttt' ref bound' ref range' ref code' ref buf' bufLimit)) " is 125.
Long Statement,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_GET_BIT_CHECK,The length of the statement  "                return _GET_BIT2_CHECK(p' ref i' delegate { }' delegate { }' out ttt' ref bound' ref range' ref code' ref buf' bufLimit); " is 121.
Long Statement,ManagedLzma.LZMA.Master,CLenEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LenEnc_Encode,The length of the statement  "                        CLzmaEnc.RcTree_Encode(rc' P.From(mMid' posState << CLzmaEnc.kLenNumMidBits)' CLzmaEnc.kLenNumMidBits' symbol - CLzmaEnc.kLenNumLowSymbols); " is 140.
Long Statement,ManagedLzma.LZMA.Master,CLenEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LenEnc_Encode,The length of the statement  "                        CLzmaEnc.RcTree_Encode(rc' mHigh' CLzmaEnc.kLenNumHighBits' symbol - CLzmaEnc.kLenNumLowSymbols - CLzmaEnc.kLenNumMidSymbols); " is 126.
Long Statement,ManagedLzma.LZMA.Master,CLenEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LenEnc_SetPrices,The length of the statement  "                    prices[i] = a0 + CLzmaEnc.RcTree_GetPrice(P.From(mLow' posState << CLzmaEnc.kLenNumLowBits)' CLzmaEnc.kLenNumLowBits' i' probPrices); " is 133.
Long Statement,ManagedLzma.LZMA.Master,CLenEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LenEnc_SetPrices,The length of the statement  "                    prices[i] = b0 + CLzmaEnc.RcTree_GetPrice(P.From(mMid' posState << CLzmaEnc.kLenNumMidBits)' CLzmaEnc.kLenNumMidBits' i - CLzmaEnc.kLenNumLowSymbols' probPrices); " is 162.
Long Statement,ManagedLzma.LZMA.Master,CLenEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LenEnc_SetPrices,The length of the statement  "                    prices[i] = b1 + CLzmaEnc.RcTree_GetPrice(mHigh' CLzmaEnc.kLenNumHighBits' i - (CLzmaEnc.kLenNumLowSymbols + CLzmaEnc.kLenNumMidSymbols)' probPrices); " is 150.
Long Statement,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,FillDistancesPrices,The length of the statement  "                    tempPrices[i] = RcTree_ReverseGetPrice(P.From(mPosEncoders' @base - posSlot - 1)' (int)footerBits' i - @base' mProbPrices); " is 123.
Long Statement,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_Alloc,The length of the statement  "                    if ((res = mMatchFinderMt.MatchFinderMt_Create(mDictSize' beforeSize' mNumFastBytes' LZMA_MATCH_LEN_MAX' allocBig)) != SZ_OK) " is 125.
Long Statement,ManagedLzma.LZMA2,Decoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma2\Decoder.cs,ReadOutputData,The length of the statement  "            Buffer.BlockCopy(mDecoder.mDecoder.mDic.mBuffer' mDecoder.mDecoder.mDic.mOffset + mDecoderPosition' buffer' offset' length); " is 124.
Long Statement,ManagedLzma.LZMA,AsyncEncoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\Encoder.cs,EncodeAsync,The length of the statement  "                var res = mEncoder.LzmaEnc_Encode(new AsyncOutputProvider(output)' new AsyncInputProvider(input)' null' Master.LZMA.ISzAlloc.SmallAlloc' Master.LZMA.ISzAlloc.BigAlloc); " is 168.
Long Statement,ManagedLzma.SevenZip,ArchivedAttributesExtensions,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchivedAttributes.cs,CheckArchivedAttributesConsistency,The length of the statement  "            System.Diagnostics.Debug.Assert(InvalidAttributes == ~(VisibleAttributes | DirectoryAttribute | ToleratedAttributes | StrippedAttributes | ForbiddenAttributes)); " is 161.
Long Statement,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,CheckFileHeader,The length of the statement  "            return ReadFileHeader(stream' stream.CanSeek ? stream.Length : Int64.MaxValue' out major' out minor' out offset' out length' out checksum) == null; " is 147.
Long Statement,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadMetadataCore,The length of the statement  "                var exception = ReadFileHeader(mStream' mStreamLength' out mMajorVersion' out mMinorVersion' out mMetadataOffset' out mMetadataLength' out mMetadataChecksum); " is 158.
Long Statement,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadMetadataCore,The length of the statement  "                using (var metadataStream = new ConstrainedReadStream(mStream' ArchiveMetadataFormat.kHeaderLength + mMetadataOffset' mMetadataLength)) " is 135.
Long Statement,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadRequiredBitVector,The length of the statement  "            // TODO: this calculation could overflow for malformed data' should throw an InvalidDataException instead of ArgumentOutOfRangeException " is 136.
Long Statement,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Initialize,The length of the statement  "            // The 7z AES encoder/decoder classes do not perform padding' instead they require the input stream to provide a multiple of 16 bytes. " is 134.
Long Statement,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Initialize,The length of the statement  "            // If the exception below is thrown this means the 7z file is either corrupt or a newer 7z version has been published and we haven't updated yet. " is 145.
Long Statement,ManagedLzma.SevenZip.Reader,Lzma2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Lzma2Decoder.cs,EnsureOutputData,The length of the statement  "                var written = mDecoder.Decode(mBuffer' mOffset' mEnding - mOffset' (int)Math.Min(Int32.MaxValue' mLength - mPosition)' false); " is 126.
Long Statement,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The length of the statement  "                    c->SummFreq = (ushort)(c->SummFreq + (2 * ns1 < ns ? 1u : 0u) + 2 * ((4 * ns1 <= ns ? 1u : 0u) & (c->SummFreq <= 8 * ns1 ? 1u : 0u))); " is 134.
Long Statement,ManagedLzma.SevenZip.FileModel,ArchiveFileModelMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveFileModel.cs,ReadMetadata,The length of the statement  "                return new ArchiveFileModel(metadata' BuildFolder(mRootFolder)' mSectionMap.MoveToImmutable()' finalStreamMap.ToImmutable()); " is 125.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The length of the statement  "            // TODO: we'll probably also want to have a scratch buffer to assembly vectors with no allocation overhead and in a single iteration " is 132.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The length of the statement  "            //       (a scratch buffer allows to record the vector in a single iteration and if it was unnecessary it doesn't need to be forwarded to the actual stream) " is 156.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The length of the statement  "                WriteDateVector(Enumerable.Range(0' metadataCount).Select(x => metadata.GetCreationDate(x))' ArchiveMetadataToken.CTime); " is 121.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The length of the statement  "                WriteDateVector(Enumerable.Range(0' metadataCount).Select(x => metadata.GetLastAccessDate(x))' ArchiveMetadataToken.ATime); " is 123.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The length of the statement  "                WriteDateVector(Enumerable.Range(0' metadataCount).Select(x => metadata.GetLastWriteDate(x))' ArchiveMetadataToken.MTime); " is 122.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveMetadataRecorder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,CheckName,The length of the statement  "            Utilities.NeedsReview(); // TODO: we need to hardcode this so you can't write invalid filenames on non-windows platforms " is 120.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveMetadataRecorder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,CheckDate,The length of the statement  "                        throw new InvalidOperationException("You did not specify how to treat DateTime values which do not provide their own DateTimeKind."); " is 133.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveMetadataRecorder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,AppendFile,The length of the statement  "            // TODO: replicate the checks when the metadata is queried from the provider (in particular don't forget to check that timestamps are UTC) " is 138.
Long Statement,ManagedLzma.SevenZip.Writer,ArchiveMetadataRecorder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,AppendDirectory,The length of the statement  "            // TODO: check attributes and reject invalid ones (replicate the check when writing the attributes so other metadata providers get the check too) " is 145.
Long Statement,ManagedLzma.SevenZip.Writer,EncoderDefinition,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Definition.cs,CreateEncoderSession,The length of the statement  "                throw new ArgumentException("Number of provided storage streams does not match number of declared storage streams."' nameof(storage)); " is 134.
Long Statement,ManagedLzma.SevenZip.Writer,EncoderDefinition,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Definition.cs,CreateEncoderSession,The length of the statement  "            var contentStream = new EncoderInput(true); // TODO: make checksum calculation configurable? I think normal 7z archives skip this one' at least with copy-aes encoder graphs? " is 173.
Long Statement,ManagedLzma.SevenZip.Writer,EncoderConnection,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,TransferLoop,The length of the statement  "                    var fetched = await mEncoderOutputToConnectionInput.ReadAsync(buffer' ending' buffer.Length - ending' StreamMode.Partial).ConfigureAwait(false); " is 144.
Long Statement,ManagedLzma.SevenZip.Writer,EncoderConnection,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,TransferLoop,The length of the statement  "                    var written = await mConnectionOutputToEncoderInput.WriteAsync(buffer' offset' ending - offset' StreamMode.Partial).ConfigureAwait(false); " is 138.
Long Statement,ManagedLzma.SevenZip.Writer,EncoderSession,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,ReadInternalAsync,The length of the statement  "                mResultLength += fetched; // could be interlocked but doesn't need to be since we are currently 'owning' the stream (and also consider ourselves 'owning' this counter) " is 167.
Long Statement,ManagedLzma.SevenZip.Writer,EncoderSession,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,Complete,The length of the statement  "                decoders.Add(new DecoderMetadata(decoderType' settings.SerializeSettings()' decoderInputs.MoveToImmutable()' decoderOutputs.MoveToImmutable())); " is 144.
Long Statement,ManagedLzma.SevenZip.Writer,EncoderSession,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,AppendStream,The length of the statement  "            // TODO: validate relative filename (in particular the directory separator and checking for invalid components like drives' '..' and '.') " is 137.
Long Statement,ManagedLzma,PasswordStorage,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\Password.cs,GetPassword,The length of the statement  "                    // Must do a second check because if a dispose happened while the array was cloned it may have been partially zeroed out. " is 121.
Long Statement,ManagedLzma,PasswordStorage,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\Password.cs,GetPassword,The length of the statement  "                // If an exception happens before we can return the accessor to the caller we need to clear potential copies of the password. " is 125.
Long Statement,ManagedLzma,AsyncTaskCompletionSource,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\Utilities.cs,Create,The length of the statement  "            return new AsyncTaskCompletionSource<T>(new TaskCompletionSource<T>(TaskCreationOptions.RunContinuationsAsynchronously)); " is 121.
Complex Conditional,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_DecodeToDic,The conditional expression  "(!initDic && mNeedInitDic) || (!initState && mNeedInitState)"  is complex.
Complex Conditional,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SetProps,The conditional expression  "props.mLC > LZMA_LC_MAX                      || props.mLP > LZMA_LP_MAX                      || props.mPB > LZMA_PB_MAX                      || props.mDictSize > (1u << kDicLogSizeMaxCompress)                      || props.mDictSize > (1u << 30)"  is complex.
Complex Conditional,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The conditional expression  "repLen >= 2 && (                      (repLen + 1 >= mainLen) ||                      (repLen + 2 >= mainLen && mainDist >= (1 << 9)) ||                      (repLen + 3 >= mainLen && mainDist >= (1 << 15)))"  is complex.
Complex Conditional,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The conditional expression  "(mLongestMatchLength >= mainLen && newDistance < mainDist) ||                          (mLongestMatchLength == mainLen + 1 && !ChangePair(mainDist' newDistance)) ||                          (mLongestMatchLength > mainLen + 1) ||                          (mLongestMatchLength + 1 >= mainLen && mainLen >= 3 && ChangePair(newDistance' mainDist))"  is complex.
Virtual Method Call from Constructor,ManagedLzma.SevenZip.Reader,ArchiveSectionDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveDecoder.cs,ArchiveSectionDecoder,The constructor "ArchiveSectionDecoder" calls a virtual method "SetInputStream".
Empty Catch Block,ManagedLzma.SevenZip.Writer,Lzma2EncoderNode,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Lzma2Encoder.cs,Dispose,The method has an empty catch block.
Empty Catch Block,ManagedLzma.SevenZip.Writer,LzmaEncoderNode,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\LzmaEncoder.cs,Dispose,The method has an empty catch block.
Magic Number,ManagedLzma.LZMA.Master,CRCUtils,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\CRC.cs,CRCUtils,The following statement contains a magic number: mTable = new uint[256];
Magic Number,ManagedLzma.LZMA.Master,CRCUtils,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\CRC.cs,CRCUtils,The following statement contains a magic number: j < 8
Magic Number,ManagedLzma.LZMA.Master,CRCUtils,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\CRC.cs,CRCUtils,The following statement contains a magic number: i < 256
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,CMatchFinder,The following statement contains a magic number: mCutValue = 32;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,CMatchFinder,The following statement contains a magic number: mNumHashBytes = 4;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,The following statement contains a magic number: sizeReserv = historySize >> 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,The following statement contains a magic number: historySize > ((uint)2 << 30)
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,The following statement contains a magic number: historySize > ((uint)2 << 30)
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,The following statement contains a magic number: sizeReserv += (keepAddBufferBefore + matchMaxLen + keepAddBufferAfter) / 2 + (1 << 19);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,The following statement contains a magic number: sizeReserv += (keepAddBufferBefore + matchMaxLen + keepAddBufferAfter) / 2 + (1 << 19);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,The following statement contains a magic number: hs = (1 << 16) - 1;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,MatchFinder_Create,The following statement contains a magic number: mNumSons = (mBtMode ? newCyclicBufferSize * 2 : newCyclicBufferSize);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt2_MatchFinder_GetMatches,The following statement contains a magic number: lenLimit < 2
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt2_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = cur[0] | ((uint)cur[1] << 8);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_GetMatches,The following statement contains a magic number: lenLimit < 3
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_GetMatches,The following statement contains a magic number: uint maxLen = 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_GetMatches,The following statement contains a magic number: offset = 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: lenLimit < 4
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: distances[0] = maxLen = 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: offset = 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: maxLen = 3;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: offset += 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: distances[offset - 2] = maxLen;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: maxLen = 3;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_GetMatches,The following statement contains a magic number: maxLen < 3
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: lenLimit < 4
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: distances[0] = maxLen = 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: offset = 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: maxLen = 3;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: offset += 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: distances[offset - 2] = maxLen;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: maxLen = 3;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_GetMatches,The following statement contains a magic number: maxLen < 3
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt2_MatchFinder_Skip,The following statement contains a magic number: lenLimit < 2
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt2_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = cur[0] | ((uint)cur[1] << 8);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_Skip,The following statement contains a magic number: lenLimit < 3
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt3_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_Skip,The following statement contains a magic number: lenLimit < 4
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_Skip,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_Skip,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Bt4_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_Skip,The following statement contains a magic number: lenLimit < 4
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_Skip,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_Skip,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFind.cs,Hc4_MatchFinder_Skip,The following statement contains a magic number: uint hashValue = (temp ^ ((uint)cur[2] << 8) ^ (cur[3].CRC() << 5)) & mHashMask;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,HashThreadFunc,The following statement contains a magic number: heads[0] = 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,HashThreadFunc,The following statement contains a magic number: num = kMtHashBlockSize - 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,HashThreadFunc,The following statement contains a magic number: num > kMtHashBlockSize - 2
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,HashThreadFunc,The following statement contains a magic number: mInterface.GetHeadsFunc(base.mBuffer' base.mPos' P.From(base.mHash' base.mFixedHashSize)' base.mHashMask' heads + 2' num);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,BtGetMatches,The following statement contains a magic number: uint curPos = 2;
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,BtGetMatches,The following statement contains a magic number: uint limit = kMtBtBlockSize - (mLocalMatchMaxLen * 2);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,BtFillBlock,The following statement contains a magic number: CMatchFinder.MatchFinder_Normalize3(subValue' mLocalSon' mLocalCyclicBufferSize * 2);
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt_Create,The following statement contains a magic number: kMtBtBlockSize <= matchMaxLen * 4
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt_CreateVTable,The following statement contains a magic number: switch (base.mNumHashBytes)                  {                      case 2:                          vTable = mInterface = new MatchFinderMt2();                          break;                      case 3:                          vTable = mInterface = new MatchFinderMt3();                          break;                      default:  #if PROTOTYPE                      vTable = mInterface = new MatchFinderMt5();                      break;                  case 4:  #endif                          if (base.mBigHash)                              vTable = mInterface = new MatchFinderMt4b();                          else                              vTable = mInterface = new MatchFinderMt4a();                          break;                  }
Magic Number,ManagedLzma.LZMA.Master,CMatchFinderMt,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt_CreateVTable,The following statement contains a magic number: switch (base.mNumHashBytes)                  {                      case 2:                          vTable = mInterface = new MatchFinderMt2();                          break;                      case 3:                          vTable = mInterface = new MatchFinderMt3();                          break;                      default:  #if PROTOTYPE                      vTable = mInterface = new MatchFinderMt5();                      break;                  case 4:  #endif                          if (base.mBigHash)                              vTable = mInterface = new MatchFinderMt4b();                          else                              vTable = mInterface = new MatchFinderMt4a();                          break;                  }
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMtBase,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt_GetMatches,The following statement contains a magic number: p.mBtNumAvailBytes-- >= 4
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt2,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = buffer[0] | ((uint)buffer[1] << 8);
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt3,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt3,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt3,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches2,The following statement contains a magic number: distances[0] = 2;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt3,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt2_Skip,The following statement contains a magic number: p.mBtNumAvailBytes-- >= 2
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: distances[0] = 3;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: return distances + 2;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: cur[curMatch2 - lzPos + 2] == cur[2]
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: cur[curMatch2 - lzPos + 2] == cur[2]
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: distances[0] = 2;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: distances += 2;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MixMatches3,The following statement contains a magic number: distances[0] = 3;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt3_Skip,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt3_Skip,The following statement contains a magic number: uint hash3Value = (temp ^ ((uint)cur[2] << 8)) & (kHash3Size - 1);
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,MatchFinderMt3_Skip,The following statement contains a magic number: p.mBtNumAvailBytes-- >= 3
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4a,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8) ^ (buffer[3].CRC() << 5)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4a,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8) ^ (buffer[3].CRC() << 5)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4a,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8) ^ (buffer[3].CRC() << 5)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4a,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8) ^ (buffer[3].CRC() << 5)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4b,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8) ^ ((uint)buffer[3] << 16)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4b,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8) ^ ((uint)buffer[3] << 16)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4b,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8) ^ ((uint)buffer[3] << 16)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,MatchFinderMt4b,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzFindMt.cs,GetHeadsFunc,The following statement contains a magic number: uint value = (buffer[0].CRC() ^ buffer[1] ^ ((uint)buffer[2] << 8) ^ ((uint)buffer[3] << 16)) & hashMask;
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,GetLzmaMode,The following statement contains a magic number: return (mControl >> 5) & 3;
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,GetLzmaMode,The following statement contains a magic number: return (mControl >> 5) & 3;
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,IsThereProp,The following statement contains a magic number: return mode >= 2;
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,DicSizeFromProp,The following statement contains a magic number: return (2u | (p & 1u)) << ((p >> 1) + 11);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,DicSizeFromProp,The following statement contains a magic number: return (2u | (p & 1u)) << ((p >> 1) + 11);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_GetOldProps,The following statement contains a magic number: prop > 40
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_GetOldProps,The following statement contains a magic number: uint dicSize = (prop == 40) ? 0xFFFFFFFF : DicSizeFromProp(prop);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_GetOldProps,The following statement contains a magic number: props[2] = (byte)(dicSize >> 8);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_GetOldProps,The following statement contains a magic number: props[2] = (byte)(dicSize >> 8);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_GetOldProps,The following statement contains a magic number: props[3] = (byte)(dicSize >> 16);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_GetOldProps,The following statement contains a magic number: props[3] = (byte)(dicSize >> 16);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_GetOldProps,The following statement contains a magic number: props[4] = (byte)(dicSize >> 24);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_GetOldProps,The following statement contains a magic number: props[4] = (byte)(dicSize >> 24);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2Dec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Dec.cs,Lzma2Dec_UpdateState,The following statement contains a magic number: switch (mState)                  {                      case Lzma2State.Control:                          mControl = b;                          TR("Lzma2Dec_UpdateState:1"' checked((int)mDecoder.mDicPos));                          TR("Lzma2Dec_UpdateState:2"' b);                          DebugPrint("\n {0:X4} "' mDecoder.mDicPos);                          DebugPrint(" {0:X2}"' b);                            if (mControl == 0)                              return Lzma2State.Finished;                            if (IsUncompressedState())                          {                              if ((mControl & 0x7F) > 2)                                  return Lzma2State.Error;                                mUnpackSize = 0;                          }                          else                          {                              mUnpackSize = (uint)(mControl & 0x1F) << 16;                          }                            return Lzma2State.Unpack0;                        case Lzma2State.Unpack0:                          mUnpackSize |= (uint)b << 8;                          return Lzma2State.Unpack1;                        case Lzma2State.Unpack1:                          mUnpackSize |= (uint)b;                          mUnpackSize++;                            TR("Lzma2Dec_UpdateState:3"' mUnpackSize);                          DebugPrint(" {0:00000000}"' mUnpackSize);                            if (IsUncompressedState())                              return Lzma2State.Data;                          else                              return Lzma2State.Pack0;                        case Lzma2State.Pack0:                          mPackSize = (uint)b << 8;                          return Lzma2State.Pack1;                        case Lzma2State.Pack1:                          mPackSize |= (uint)b;                          mPackSize++;                            TR("Lzma2Dec_UpdateState:4"' mPackSize);                          DebugPrint(" {0:00000000}"' mPackSize);                            if (IsThereProp(GetLzmaMode()))                              return Lzma2State.Prop;                          else if (mNeedInitProp)                              return Lzma2State.Error;                          else                              return Lzma2State.Data;                        case Lzma2State.Prop:                          if (b >= (9 * 5 * 5))                              return Lzma2State.Error;                            int lc = b % 9;                          b /= 9;                          mDecoder.mProp.mPB = b / 5;                          int lp = b % 5;                            if (lc + lp > LZMA2_LCLP_MAX)                              return Lzma2State.Error;                            mDecoder.mProp.mLC = lc;                          mDecoder.mProp.mLP = lp;                          mNeedInitProp = false;                          return Lzma2State.Data;                        default:                          return Lzma2State.Error;                  }
Magic Number,ManagedLzma.LZMA.Master,CLzma2EncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncProps_Normalize,The following statement contains a magic number: long blockSize = (long)dictSize << 2;
Magic Number,ManagedLzma.LZMA.Master,CLzma2EncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncProps_Normalize,The following statement contains a magic number: const uint kMinSize = 1 << 20;
Magic Number,ManagedLzma.LZMA.Master,CLzma2EncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncProps_Normalize,The following statement contains a magic number: const uint kMaxSize = 1 << 28;
Magic Number,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncInt_EncodeSubblock,The following statement contains a magic number: uint lzHeaderSize = 5u + (mNeedInitProp ? 1u : 0u);
Magic Number,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncInt_EncodeSubblock,The following statement contains a magic number: useCopyBlock = (packSize + 2 >= unpackSize || packSize > (1 << 16));
Magic Number,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncInt_EncodeSubblock,The following statement contains a magic number: useCopyBlock = (packSize + 2 >= unpackSize || packSize > (1 << 16));
Magic Number,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncInt_EncodeSubblock,The following statement contains a magic number: packSizeLimit - destPos < u + 3
Magic Number,ManagedLzma.LZMA.Master,CLzma2EncInternal,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2EncInt_EncodeSubblock,The following statement contains a magic number: outBuf[destPos++] = (byte)((u - 1) >> 8);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Enc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,LZMA2_DIC_SIZE_FROM_PROP,The following statement contains a magic number: return (uint)(2 | (p & 1)) << (p / 2 + 11);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Enc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,LZMA2_DIC_SIZE_FROM_PROP,The following statement contains a magic number: return (uint)(2 | (p & 1)) << (p / 2 + 11);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Enc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,LZMA2_DIC_SIZE_FROM_PROP,The following statement contains a magic number: return (uint)(2 | (p & 1)) << (p / 2 + 11);
Magic Number,ManagedLzma.LZMA.Master,CLzma2Enc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2Enc_WriteProperties,The following statement contains a magic number: i < 40 && dicSize > LZMA2_DIC_SIZE_FROM_PROP(i)
Magic Number,ManagedLzma.LZMA.Master,CLzma2Enc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2Enc_Encode,The following statement contains a magic number: mMtCoder.mDestBlockSize = mProps.mBlockSize + (mProps.mBlockSize >> 10) + 16;
Magic Number,ManagedLzma.LZMA.Master,CLzma2Enc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\Lzma2Enc.cs,Lzma2Enc_Encode,The following statement contains a magic number: mMtCoder.mDestBlockSize = mProps.mBlockSize + (mProps.mBlockSize >> 10) + 16;
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: uint dicSize = data[1] | ((uint)data[2] << 8) | ((uint)data[3] << 16) | ((uint)data[4] << 24);
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: uint dicSize = data[1] | ((uint)data[2] << 8) | ((uint)data[3] << 16) | ((uint)data[4] << 24);
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: uint dicSize = data[1] | ((uint)data[2] << 8) | ((uint)data[3] << 16) | ((uint)data[4] << 24);
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: uint dicSize = data[1] | ((uint)data[2] << 8) | ((uint)data[3] << 16) | ((uint)data[4] << 24);
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: uint dicSize = data[1] | ((uint)data[2] << 8) | ((uint)data[3] << 16) | ((uint)data[4] << 24);
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: uint dicSize = data[1] | ((uint)data[2] << 8) | ((uint)data[3] << 16) | ((uint)data[4] << 24);
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: d >= (9 * 5 * 5)
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: d >= (9 * 5 * 5)
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: d >= (9 * 5 * 5)
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: mLC = d % 9;
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: d /= 9;
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: mPB = d / 5;
Magic Number,ManagedLzma.LZMA.Master,CLzmaProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaProps_Decode,The following statement contains a magic number: mLP = d % 5;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeReal,The following statement contains a magic number: uint rep2 = mReps[2];
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeReal,The following statement contains a magic number: uint rep3 = mReps[3];
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeReal,The following statement contains a magic number: prob += (LZMA_LIT_SIZE * (((processedPos & lpMask) << lc)                                  + (dic[(dicPos == 0 ? dicBufSize : dicPos) - 1] >> (8 - lc))));
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeReal,The following statement contains a magic number: state -= (state < 4) ? state : 3;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeReal,The following statement contains a magic number: state -= (state < 4) ? state : 3;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeReal,The following statement contains a magic number: mReps[2] = rep2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_DecodeReal,The following statement contains a magic number: mReps[3] = rep3;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_TryDummy,The following statement contains a magic number: prob += LZMA_LIT_SIZE *                                  (((mProcessedPos & ((1 << mProp.mLP) - 1)) << mProp.mLC) +                                  (mDic[(mDicPos == 0 ? mDicBufSize : mDicPos) - 1] >> (8 - mProp.mLC)));
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_InitRc,The following statement contains a magic number: mCode = ((uint)data[1] << 24) | ((uint)data[2] << 16) | ((uint)data[3] << 8) | ((uint)data[4]);
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_InitRc,The following statement contains a magic number: mCode = ((uint)data[1] << 24) | ((uint)data[2] << 16) | ((uint)data[3] << 8) | ((uint)data[4]);
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_InitRc,The following statement contains a magic number: mCode = ((uint)data[1] << 24) | ((uint)data[2] << 16) | ((uint)data[3] << 8) | ((uint)data[4]);
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_InitRc,The following statement contains a magic number: mCode = ((uint)data[1] << 24) | ((uint)data[2] << 16) | ((uint)data[3] << 8) | ((uint)data[4]);
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_InitRc,The following statement contains a magic number: mCode = ((uint)data[1] << 24) | ((uint)data[2] << 16) | ((uint)data[3] << 8) | ((uint)data[4]);
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_InitRc,The following statement contains a magic number: mCode = ((uint)data[1] << 24) | ((uint)data[2] << 16) | ((uint)data[3] << 8) | ((uint)data[4]);
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_InitStateReal,The following statement contains a magic number: mReps[2] = 1;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,LzmaDec_InitStateReal,The following statement contains a magic number: mReps[3] = 1;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_NORMALIZE,The following statement contains a magic number: range <<= 8;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_NORMALIZE,The following statement contains a magic number: code = (code << 8) | buf[0];
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_TREE_6_DECODE,The following statement contains a magic number: _TREE_DECODE(probs' 1 << 6' out i' out ttt' out bound' ref range' ref code' ref buf);
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_NORMALIZE_CHECK,The following statement contains a magic number: range <<= 8;
Magic Number,ManagedLzma.LZMA.Master,CLzmaDec,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaDec.cs,_NORMALIZE_CHECK,The following statement contains a magic number: code = (code << 8) | buf[0];
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,CLzmaEncProps,The following statement contains a magic number: this.mLevel = 5;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: level = 5;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mDictSize = (1u << (level * 2 + 14));
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mDictSize = (1u << (level * 2 + 14));
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: level <= 5
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mDictSize = (2u << i);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mReduceSize <= (2u << i)
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mDictSize = (3u << i);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mReduceSize <= (3u << i)
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: i <= 30
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mLC = 3;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mPB = 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mAlgo = (level < 5 ? 0 : 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mFB = (level < 7 ? 32 : 64);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mFB = (level < 7 ? 32 : 64);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mFB = (level < 7 ? 32 : 64);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mNumHashBytes = 4;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mMC = (16u + ((uint)mFB >> 1)) >> (mBtMode != 0 ? 0 : 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEncProps,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEncProps_Normalize,The following statement contains a magic number: mNumThreads =  #if !_7ZIP_ST                          ((mBtMode != 0 && mAlgo != 0) ? 2 : 1);
Magic Number,ManagedLzma.LZMA.Master,CRangeEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,RangeEnc_ShiftLow,The following statement contains a magic number: buf[0] = (byte)(temp + (byte)(mLow >> 32));
Magic Number,ManagedLzma.LZMA.Master,CRangeEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,RangeEnc_ShiftLow,The following statement contains a magic number: mCache = (byte)((uint)mLow >> 24);
Magic Number,ManagedLzma.LZMA.Master,CRangeEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,RangeEnc_ShiftLow,The following statement contains a magic number: (uint)mLow < (uint)0xFF000000 || (int)(mLow >> 32) != 0
Magic Number,ManagedLzma.LZMA.Master,CRangeEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,RangeEnc_ShiftLow,The following statement contains a magic number: mLow = (uint)mLow << 8;
Magic Number,ManagedLzma.LZMA.Master,CRangeEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,RangeEnc_FlushData,The following statement contains a magic number: i < 5
Magic Number,ManagedLzma.LZMA.Master,CRangeEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,RangeEnc_EncodeDirectBits,The following statement contains a magic number: mRange <<= 8;
Magic Number,ManagedLzma.LZMA.Master,CRangeEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,RangeEnc_EncodeBit,The following statement contains a magic number: mRange <<= 8;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_FastPosInit,The following statement contains a magic number: int i = 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_FastPosInit,The following statement contains a magic number: slotFast < kNumLogBits * 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,BSR2_RET,The following statement contains a magic number: uint i = 6 + ((kNumLogBits - 1) & (0 - ((((1 << (kNumLogBits + 6)) - 1) - pos) >> 31)));
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,BSR2_RET,The following statement contains a magic number: uint i = 6 + ((kNumLogBits - 1) & (0 - ((((1 << (kNumLogBits + 6)) - 1) - pos) >> 31)));
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,BSR2_RET,The following statement contains a magic number: uint i = 6 + ((kNumLogBits - 1) & (0 - ((((1 << (kNumLogBits + 6)) - 1) - pos) >> 31)));
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,BSR2_RET,The following statement contains a magic number: return mFastPos[pos >> (int)i] + (i * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,IsCharState,The following statement contains a magic number: return s < 7;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetLenToPosState,The following statement contains a magic number: return (((len) < kNumLenToPosStates + 1) ? (len) - 2 : kNumLenToPosStates - 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LitEnc_Encode,The following statement contains a magic number: p.RangeEnc_EncodeBit(probs + (symbol >> 8)' (symbol >> 7) & 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LitEnc_Encode,The following statement contains a magic number: p.RangeEnc_EncodeBit(probs + (symbol >> 8)' (symbol >> 7) & 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LitEnc_EncodeMatched,The following statement contains a magic number: p.RangeEnc_EncodeBit(probs + (offs + (matchByte & offs) + (symbol >> 8))' (symbol >> 7) & 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LitEnc_EncodeMatched,The following statement contains a magic number: p.RangeEnc_EncodeBit(probs + (offs + (matchByte & offs) + (symbol >> 8))' (symbol >> 7) & 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_InitPriceTables,The following statement contains a magic number: w >= ((uint)1 << 16)
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_InitPriceTables,The following statement contains a magic number: probPrices[i >> kNumMoveReducingBits] = ((kNumBitModelTotalBits << kCyclesBits) - 15 - bitCount);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LitEnc_GetPrice,The following statement contains a magic number: price += GET_PRICE(probPrices' probs[symbol >> 8]' (symbol >> 7) & 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LitEnc_GetPrice,The following statement contains a magic number: price += GET_PRICE(probPrices' probs[symbol >> 8]' (symbol >> 7) & 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LitEnc_GetPriceMatched,The following statement contains a magic number: price += GET_PRICE(probPrices' probs[offs + (matchByte & offs) + (symbol >> 8)]' (symbol >> 7) & 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LitEnc_GetPriceMatched,The following statement contains a magic number: price += GET_PRICE(probPrices' probs[offs + (matchByte & offs) + (symbol >> 8)]' (symbol >> 7) & 1);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LIT_PROBS,The following statement contains a magic number: return P.From(mLitProbs' (((pos & mLpMask) << mLC) + ((uint)prevByte >> (8 - mLC))) * 0x300);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,ChangePair,The following statement contains a magic number: return (bigDist >> 7) > smallDist;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SetProps,The following statement contains a magic number: props.mLC > LZMA_LC_MAX                      || props.mLP > LZMA_LP_MAX                      || props.mPB > LZMA_PB_MAX                      || props.mDictSize > (1u << kDicLogSizeMaxCompress)                      || props.mDictSize > (1u << 30)
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SetProps,The following statement contains a magic number: fb = 5;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SetProps,The following statement contains a magic number: fb < 5
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SetProps,The following statement contains a magic number: uint numHashBytes = 4;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SetProps,The following statement contains a magic number: numHashBytes = 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SetProps,The following statement contains a magic number: props.mNumHashBytes < 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: props[0] = (byte)((mPB * 5 + mLP) * 9 + mLC);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: props[0] = (byte)((mPB * 5 + mLP) * 9 + mLC);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: dictSize = (2u << i);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: dictSize <= (2u << i)
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: dictSize = (3u << i);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: dictSize <= (3u << i)
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: i <= 30
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: props[1 + i] = (byte)(dictSize >> (8 * i));
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: i < 4
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,memcpy,The following statement contains a magic number: dst.Length != src.Length || size != src.Length * 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,memcpy,The following statement contains a magic number: dst.Length != src.Length || size != src.Length * 4
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mIsMatch[i]' mIsMatch[i]' LZMA_NUM_PB_STATES_MAX * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mIsRep0Long[i]' mIsRep0Long[i]' LZMA_NUM_PB_STATES_MAX * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mPosSlotEncoder[i]' mPosSlotEncoder[i]' (1 << kNumPosSlotBits) * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mIsRep' mIsRep' kNumStates * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mIsRepG0' mIsRepG0' kNumStates * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mIsRepG1' mIsRepG1' kNumStates * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mIsRepG2' mIsRepG2' kNumStates * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mPosEncoders' mPosEncoders' (kNumFullDistances - kEndPosModelIndex) * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mPosAlignEncoder' mPosAlignEncoder' (1 << kNumAlignBits) * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_SaveState,The following statement contains a magic number: memcpy(mSaveState.mLitProbs' mLitProbs' (0x300 << mLcLp) * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mIsMatch[i]' mSaveState.mIsMatch[i]' LZMA_NUM_PB_STATES_MAX * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mIsRep0Long[i]' mSaveState.mIsRep0Long[i]' LZMA_NUM_PB_STATES_MAX * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mPosSlotEncoder[i]' mSaveState.mPosSlotEncoder[i]' (1 << kNumPosSlotBits) * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mIsRep' mSaveState.mIsRep' kNumStates * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mIsRepG0' mSaveState.mIsRepG0' kNumStates * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mIsRepG1' mSaveState.mIsRepG1' kNumStates * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mIsRepG2' mSaveState.mIsRepG2' kNumStates * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mPosEncoders' mSaveState.mPosEncoders' (kNumFullDistances - kEndPosModelIndex) * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mPosAlignEncoder' mSaveState.mPosAlignEncoder' (1 << kNumAlignBits) * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_RestoreState,The following statement contains a magic number: memcpy(mLitProbs' mSaveState.mLitProbs' (0x300 << mLcLp) * 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: uint lenTest = 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: do { mOpt[len--].mPrice = kInfinityPrice; }                      while (len >= 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: do                          {                              uint curAndLenPrice = price + mRepLenEnc.mPrices[posState][repLen - 2];                              COptimal opt = mOpt[repLen];                              if (curAndLenPrice < opt.mPrice)                              {                                  opt.mPrice = curAndLenPrice;                                  opt.mPosPrev = 0;                                  opt.mBackPrev = i;                                  opt.mPrev1IsChar = false;                              }                          }                          while (--repLen >= 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: do                          {                              uint curAndLenPrice = price + mRepLenEnc.mPrices[posState][repLen - 2];                              COptimal opt = mOpt[repLen];                              if (curAndLenPrice < opt.mPrice)                              {                                  opt.mPrice = curAndLenPrice;                                  opt.mPosPrev = 0;                                  opt.mBackPrev = i;                                  opt.mPrev1IsChar = false;                              }                          }                          while (--repLen >= 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: len = ((repLens._0 >= 2) ? repLens._0 + 1 : 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: len = ((repLens._0 >= 2) ? repLens._0 + 1 : 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: numAvailFull < 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: lenTest2 >= 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: uint startLen = 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: uint lenTest = 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: uint curAndLenPrice = price + mRepLenEnc.mPrices[posState][lenTest - 2];
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: uint curAndLenCharPrice = price                                      + mRepLenEnc.mPrices[posState][lenTest - 2]                                      + GET_PRICE_0(mIsMatch[state2][posStateNext])                                      + LitEnc_GetPriceMatched(                                          LIT_PROBS(position + lenTest' data[lenTest - 1])'                                          data[lenTest]' data2[lenTest]' mProbPrices);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: numPairs += 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: numPairs += 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: lenTest2 >= 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: numAvail < 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: uint len = 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: !ChangePair(matches[numPairs - 3]' mainDist)
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: numPairs -= 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: mainLen = matches[numPairs - 2];
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: numPairs > 2 && mainLen == matches[numPairs - 4] + 1
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: numPairs > 2 && mainLen == matches[numPairs - 4] + 1
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: mainLen == 2 && mainDist >= 0x80
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: mainLen >= 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: repLen >= 2 && (                      (repLen + 1 >= mainLen) ||                      (repLen + 2 >= mainLen && mainDist >= (1 << 9)) ||                      (repLen + 3 >= mainLen && mainDist >= (1 << 15)))
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: repLen >= 2 && (                      (repLen + 1 >= mainLen) ||                      (repLen + 2 >= mainLen && mainDist >= (1 << 9)) ||                      (repLen + 3 >= mainLen && mainDist >= (1 << 15)))
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: repLen >= 2 && (                      (repLen + 1 >= mainLen) ||                      (repLen + 2 >= mainLen && mainDist >= (1 << 9)) ||                      (repLen + 3 >= mainLen && mainDist >= (1 << 15)))
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: repLen >= 2 && (                      (repLen + 1 >= mainLen) ||                      (repLen + 2 >= mainLen && mainDist >= (1 << 9)) ||                      (repLen + 3 >= mainLen && mainDist >= (1 << 15)))
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: repLen >= 2 && (                      (repLen + 1 >= mainLen) ||                      (repLen + 2 >= mainLen && mainDist >= (1 << 9)) ||                      (repLen + 3 >= mainLen && mainDist >= (1 << 15)))
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: mainLen < 2 || numAvail <= 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: mainLen < 2 || numAvail <= 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: (mLongestMatchLength >= mainLen && newDistance < mainDist) ||                          (mLongestMatchLength == mainLen + 1 && !ChangePair(mainDist' newDistance)) ||                          (mLongestMatchLength > mainLen + 1) ||                          (mLongestMatchLength + 1 >= mainLen && mainLen >= 3 && ChangePair(newDistance' mainDist))
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: mLongestMatchLength >= 2
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: uint len = 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,GetOptimumFast,The following statement contains a magic number: MovePos(mainLen - 2);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,WriteEndMarker,The following statement contains a magic number: mRC.RangeEnc_EncodeDirectBits(((1u << 30) - 1) >> kNumAlignBits' 30 - kNumAlignBits);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,WriteEndMarker,The following statement contains a magic number: mRC.RangeEnc_EncodeDirectBits(((1u << 30) - 1) >> kNumAlignBits' 30 - kNumAlignBits);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,FillDistancesPrices,The following statement contains a magic number: uint @base = ((2u | (posSlot & 1u)) << (int)footerBits);
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_CodeOneBlock,The following statement contains a magic number: mMatchPriceCount >= (1 << 7)
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_CodeOneBlock,The following statement contains a magic number: processed + kNumOpts + 300 >= maxUnpackSize                                      || mRC.RangeEnc_GetProcessed() + kNumOpts * 2 >= maxPackSize
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_CodeOneBlock,The following statement contains a magic number: processed + kNumOpts + 300 >= maxUnpackSize                                      || mRC.RangeEnc_GetProcessed() + kNumOpts * 2 >= maxPackSize
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,LzmaEnc_AllocAndInit,The following statement contains a magic number: mDistTableSize = i * 2;
Magic Number,ManagedLzma.LZMA.Master,CLzmaEnc,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Implementation\LzmaEnc.cs,ReadMatchDistances,The following statement contains a magic number: lenRes = mMatches[numPairs - 2];
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: byte lc = (byte)(bt % 9);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: bt /= 9;
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: byte pb = (byte)(bt / 5);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: byte lp = (byte)(bt % 5);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: dictSize |= (uint)data[offset + 2] << 8;
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: dictSize |= (uint)data[offset + 2] << 8;
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: dictSize |= (uint)data[offset + 3] << 16;
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: dictSize |= (uint)data[offset + 3] << 16;
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: dictSize |= (uint)data[offset + 4] << 24;
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,ReadFrom,The following statement contains a magic number: dictSize |= (uint)data[offset + 4] << 24;
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,DecoderSettings,The following statement contains a magic number: (mLC = lc) > 8
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,DecoderSettings,The following statement contains a magic number: (mPB = pb) > 4
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,DecoderSettings,The following statement contains a magic number: (mLP = lp) > 4
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,WriteTo,The following statement contains a magic number: buffer[offset] = (byte)((mPB * 5 + mLP) * 9 + mLC);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,WriteTo,The following statement contains a magic number: buffer[offset] = (byte)((mPB * 5 + mLP) * 9 + mLC);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,WriteTo,The following statement contains a magic number: buffer[offset + 2] = (byte)(mDictSize >> 8);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,WriteTo,The following statement contains a magic number: buffer[offset + 2] = (byte)(mDictSize >> 8);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,WriteTo,The following statement contains a magic number: buffer[offset + 3] = (byte)(mDictSize >> 16);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,WriteTo,The following statement contains a magic number: buffer[offset + 3] = (byte)(mDictSize >> 16);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,WriteTo,The following statement contains a magic number: buffer[offset + 4] = (byte)(mDictSize >> 24);
Magic Number,ManagedLzma.LZMA,DecoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\DecoderSettings.cs,WriteTo,The following statement contains a magic number: buffer[offset + 4] = (byte)(mDictSize >> 24);
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,EncoderSettings,The following statement contains a magic number: SetLevel(5);
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: level < 0 || level > 9
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mDictionarySize = (1 << (level * 2 + 14));
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mDictionarySize = (1 << (level * 2 + 14));
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: level <= 5
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mLC = 3;
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mPB = 2;
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mFastMode = (level <= 4);
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mFB = (level <= 6) ? 32 : 64;
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mFB = (level <= 6) ? 32 : 64;
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mFB = (level <= 6) ? 32 : 64;
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mHashBytes = 4;
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: mMC = 16;
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,SetLevel,The following statement contains a magic number: level <= 4
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,GetInternalSettings,The following statement contains a magic number: settings.mNumThreads = mMultiThreaded ? 2 : 1;
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: props.Add((byte)((settings.mPB * 5 + settings.mLP) * 9 + settings.mLC));
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: props.Add((byte)((settings.mPB * 5 + settings.mLP) * 9 + settings.mLC));
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: dictSize = (2u << i);
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: dictSize <= (2u << i)
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: dictSize = (3u << i);
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: dictSize <= (3u << i)
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: i <= 30
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: props.Add((byte)(dictSize >> (8 * i)));
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,LzmaEnc_WriteProperties,The following statement contains a magic number: i < 4
Magic Number,ManagedLzma.LZMA,EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Compression\Lzma\EncoderSettings.cs,GetSerializedSettings,The following statement contains a magic number: var props = ImmutableArray.CreateBuilder<byte>(5);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadFileHeader,The following statement contains a magic number: i < 6
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadFileHeader,The following statement contains a magic number: mMajorVersion = header[6];
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadFileHeader,The following statement contains a magic number: mMinorVersion = header[7];
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadFileHeader,The following statement contains a magic number: mMetadataOffset = GetInt64(header' 12);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadFileHeader,The following statement contains a magic number: mMetadataLength = GetInt64(header' 20);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadFileHeader,The following statement contains a magic number: mMetadataChecksum = new Checksum(GetInt32(header' 28));
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadFileHeader,The following statement contains a magic number: (int)crc != GetInt32(header' 8)
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt32,The following statement contains a magic number: return (int)buffer[offset]                  | ((int)buffer[offset + 1] << 8)                  | ((int)buffer[offset + 2] << 16)                  | ((int)buffer[offset + 3] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt32,The following statement contains a magic number: return (int)buffer[offset]                  | ((int)buffer[offset + 1] << 8)                  | ((int)buffer[offset + 2] << 16)                  | ((int)buffer[offset + 3] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt32,The following statement contains a magic number: return (int)buffer[offset]                  | ((int)buffer[offset + 1] << 8)                  | ((int)buffer[offset + 2] << 16)                  | ((int)buffer[offset + 3] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt32,The following statement contains a magic number: return (int)buffer[offset]                  | ((int)buffer[offset + 1] << 8)                  | ((int)buffer[offset + 2] << 16)                  | ((int)buffer[offset + 3] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt32,The following statement contains a magic number: return (int)buffer[offset]                  | ((int)buffer[offset + 1] << 8)                  | ((int)buffer[offset + 2] << 16)                  | ((int)buffer[offset + 3] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,GetInt64,The following statement contains a magic number: return (long)buffer[offset]                  | ((long)buffer[offset + 1] << 8)                  | ((long)buffer[offset + 2] << 16)                  | ((long)buffer[offset + 3] << 24)                  | ((long)buffer[offset + 4] << 32)                  | ((long)buffer[offset + 5] << 40)                  | ((long)buffer[offset + 6] << 48)                  | ((long)buffer[offset + 7] << 56);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadArchive,The following statement contains a magic number: !(mMajorVersion == 0 && mMinorVersion < 3)
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadDecoder,The following statement contains a magic number: idLen > 4
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadDecoder,The following statement contains a magic number: id |= ReadByte() << (i * 8);
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadRequiredBitVector,The following statement contains a magic number: var buffer = new byte[(count + 7) >> 3];
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadRequiredBitVector,The following statement contains a magic number: var buffer = new byte[(count + 7) >> 3];
Magic Number,ManagedLzma.SevenZip.Reader,ArchiveMetadataReader,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadToken,The following statement contains a magic number: token > 25
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,PrefetchBuffer,The following statement contains a magic number: var buffer = (size <= mBuffer.Length) ? mBuffer : new byte[Math.Max(mBuffer.Length * 2' size)];
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadUInt32,The following statement contains a magic number: EnsureBuffer(4);
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadUInt32,The following statement contains a magic number: mBufferOffset += 4;
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadUInt64,The following statement contains a magic number: EnsureBuffer(8);
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadUInt64,The following statement contains a magic number: mBufferOffset += 8;
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadNumber,The following statement contains a magic number: value += highPart << (i * 8);
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadNumber,The following statement contains a magic number: value |= (ulong)ReadByte() << (8 * i);
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadNumber,The following statement contains a magic number: i < 8
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadString,The following statement contains a magic number: EnsureBuffer(length + 2);
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadString,The following statement contains a magic number: length += 2;
Magic Number,ManagedLzma.SevenZip.Reader,StreamScope,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadataReader.cs,ReadString,The following statement contains a magic number: mBufferOffset += length + 2;
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Initialize,The following statement contains a magic number: mBuffer = new byte[4 << 10];
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Initialize,The following statement contains a magic number: mBuffer = new byte[4 << 10];
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Initialize,The following statement contains a magic number: ((uint)input.Length & 15) != 0
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,DecodeInto,The following statement contains a magic number: mEnding - mOffset < 16
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,DecodeInto,The following statement contains a magic number: count < 16
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,DecodeInto,The following statement contains a magic number: int processed = mDecoder.TransformBlock(mBuffer' mOffset' count & ~15' buffer' offset);
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: int saltSize = (bt >> 7) & 1;
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: int ivSize = (bt >> 6) & 1;
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: saltSize += (bt2 >> 4);
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: ivSize += (bt2 & 15);
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: info.Length < 2 + saltSize + ivSize
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: salt[i] = info[i + 2];
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: iv = new byte[16];
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: iv[i] = info[i + saltSize + 2];
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,Init,The following statement contains a magic number: numCyclesPower > 24
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,InitKey,The following statement contains a magic number: var key = new byte[32];
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,InitKey,The following statement contains a magic number: i < pass.Length && pos < 32
Magic Number,ManagedLzma.SevenZip.Reader,AesArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\AesDecoder.cs,HandleUnderflow,The following statement contains a magic number: int blockSize = (mEnding - mOffset) & ~15;
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,SetInputStream,The following statement contains a magic number: switch (index)              {                  case 0: mMainStream = stream; break;                  case 1: mCallStream = stream; break;                  case 2: mJumpStream = stream; break;                  case 3: mRangeDecoder = new RangeDecoder(stream); break;                  default: throw new ArgumentOutOfRangeException(nameof(index));              }
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,SetInputStream,The following statement contains a magic number: switch (index)              {                  case 0: mMainStream = stream; break;                  case 1: mCallStream = stream; break;                  case 2: mJumpStream = stream; break;                  case 3: mRangeDecoder = new RangeDecoder(stream); break;                  default: throw new ArgumentOutOfRangeException(nameof(index));              }
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Read,The following statement contains a magic number: mStatusDecoder = new StatusDecoder[256 + 2];
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Read,The following statement contains a magic number: mStatusDecoder = new StatusDecoder[256 + 2];
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: const uint kBurstSize = (1u << 18);
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: src <<= 8;
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: i < 4
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: uint dest = src - (uint)(mWritten + 4);
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: yield return (byte)(dest >> 8);
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: yield return (byte)(dest >> 16);
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: yield return (byte)(dest >> 24);
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: prevByte = (byte)(dest >> 24);
Magic Number,ManagedLzma.SevenZip.Reader,Bcj2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Run,The following statement contains a magic number: processedBytes += 4;
Magic Number,ManagedLzma.SevenZip.Reader,RangeDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,RangeDecoder,The following statement contains a magic number: Code = (Code << 8) | ReadByte();
Magic Number,ManagedLzma.SevenZip.Reader,RangeDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,RangeDecoder,The following statement contains a magic number: i < 5
Magic Number,ManagedLzma.SevenZip.Reader,StatusDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,StatusDecoder,The following statement contains a magic number: Prob = kBitModelTotal / 2;
Magic Number,ManagedLzma.SevenZip.Reader,StatusDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Decode,The following statement contains a magic number: decoder.Code = (decoder.Code << 8) | decoder.ReadByte();
Magic Number,ManagedLzma.SevenZip.Reader,StatusDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Bcj2Decoder.cs,Decode,The following statement contains a magic number: decoder.Range <<= 8;
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,BcjArchiveDecoder,The following statement contains a magic number: mBuffer = new byte[4 << 10];
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,BcjArchiveDecoder,The following statement contains a magic number: mBuffer = new byte[4 << 10];
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,DecodeInto,The following statement contains a magic number: mBuffer.Length - mOffset < 5
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,DecodeInto,The following statement contains a magic number: mEnding - mOffset < 5
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: size < 5
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: ip += 5;
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: var limit = data + size - 4;
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: prevPosT > 3
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: uint src = ((uint)p[4] << 24) | ((uint)p[3] << 16) | ((uint)p[2] << 8) | ((uint)p[1]);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: uint src = ((uint)p[4] << 24) | ((uint)p[3] << 16) | ((uint)p[2] << 8) | ((uint)p[1]);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: uint src = ((uint)p[4] << 24) | ((uint)p[3] << 16) | ((uint)p[2] << 8) | ((uint)p[1]);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: uint src = ((uint)p[4] << 24) | ((uint)p[3] << 16) | ((uint)p[2] << 8) | ((uint)p[1]);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: uint src = ((uint)p[4] << 24) | ((uint)p[3] << 16) | ((uint)p[2] << 8) | ((uint)p[1]);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: uint src = ((uint)p[4] << 24) | ((uint)p[3] << 16) | ((uint)p[2] << 8) | ((uint)p[1]);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: int index = kMaskToBitNumber[prevMask] * 8;
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: byte b = (byte)(dest >> (24 - index));
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: src = dest ^ ((1u << (32 - index)) - 1);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: p[4] = (byte)(~(((dest >> 24) & 1) - 1));
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: p[4] = (byte)(~(((dest >> 24) & 1) - 1));
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: p[3] = (byte)(dest >> 16);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: p[3] = (byte)(dest >> 16);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: p[2] = (byte)(dest >> 8);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: p[2] = (byte)(dest >> 8);
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: bufferPos += 5;
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: Test86MSByte(p[4])
Magic Number,ManagedLzma.SevenZip.Reader,BcjArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\BcjDecoder.cs,x86_Convert,The following statement contains a magic number: mState = ((prevPosT > 3) ? 0 : ((prevMask << ((int)prevPosT - 1)) & 0x7));
Magic Number,ManagedLzma.SevenZip.Reader,Lzma2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Lzma2Decoder.cs,Lzma2ArchiveDecoder,The following statement contains a magic number: mBuffer = new byte[4 << 10];
Magic Number,ManagedLzma.SevenZip.Reader,Lzma2ArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\Lzma2Decoder.cs,Lzma2ArchiveDecoder,The following statement contains a magic number: mBuffer = new byte[4 << 10];
Magic Number,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PpmdArchiveDecoder,The following statement contains a magic number: settings.Length != 5
Magic Number,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PpmdArchiveDecoder,The following statement contains a magic number: mSettingMemory = (uint)settings[1] | ((uint)settings[2] << 8) | ((uint)settings[3] << 16) | ((uint)settings[4] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PpmdArchiveDecoder,The following statement contains a magic number: mSettingMemory = (uint)settings[1] | ((uint)settings[2] << 8) | ((uint)settings[3] << 16) | ((uint)settings[4] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PpmdArchiveDecoder,The following statement contains a magic number: mSettingMemory = (uint)settings[1] | ((uint)settings[2] << 8) | ((uint)settings[3] << 16) | ((uint)settings[4] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PpmdArchiveDecoder,The following statement contains a magic number: mSettingMemory = (uint)settings[1] | ((uint)settings[2] << 8) | ((uint)settings[3] << 16) | ((uint)settings[4] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PpmdArchiveDecoder,The following statement contains a magic number: mSettingMemory = (uint)settings[1] | ((uint)settings[2] << 8) | ((uint)settings[3] << 16) | ((uint)settings[4] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PpmdArchiveDecoder,The following statement contains a magic number: mSettingMemory = (uint)settings[1] | ((uint)settings[2] << 8) | ((uint)settings[3] << 16) | ((uint)settings[4] << 24);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd_See_Update,The following statement contains a magic number: p.Count = (byte)(3 << p.Shift++);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PPMD_SetAllBitsIn256Bytes,The following statement contains a magic number: p[i + 7] = p[i + 6] = p[i + 5] = p[i + 4] = p[i + 3] = p[i + 2] = p[i + 1] = p[i + 0] = ~0u;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PPMD_SetAllBitsIn256Bytes,The following statement contains a magic number: p[i + 7] = p[i + 6] = p[i + 5] = p[i + 4] = p[i + 3] = p[i + 2] = p[i + 1] = p[i + 0] = ~0u;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PPMD_SetAllBitsIn256Bytes,The following statement contains a magic number: p[i + 7] = p[i + 6] = p[i + 5] = p[i + 4] = p[i + 3] = p[i + 2] = p[i + 1] = p[i + 0] = ~0u;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PPMD_SetAllBitsIn256Bytes,The following statement contains a magic number: p[i + 7] = p[i + 6] = p[i + 5] = p[i + 4] = p[i + 3] = p[i + 2] = p[i + 1] = p[i + 0] = ~0u;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PPMD_SetAllBitsIn256Bytes,The following statement contains a magic number: p[i + 7] = p[i + 6] = p[i + 5] = p[i + 4] = p[i + 3] = p[i + 2] = p[i + 1] = p[i + 0] = ~0u;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PPMD_SetAllBitsIn256Bytes,The following statement contains a magic number: p[i + 7] = p[i + 6] = p[i + 5] = p[i + 4] = p[i + 3] = p[i + 2] = p[i + 1] = p[i + 0] = ~0u;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,PPMD_SetAllBitsIn256Bytes,The following statement contains a magic number: i < 256 / sizeof(uint)
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_GetBinSumm,The following statement contains a magic number: return ref p.BinSumm[Ppmd7Context_OneState(p.MinContext)->Freq - 1]                       [p.PrevSuccess                           + p.NS2BSIndx[Ppmd7_GetContext(p' p.MinContext->Suffix)->NumStats - 1]                           + (p.HiBitsFlag = p.HB2Flag[p.FoundState->Symbol])                           + 2 * p.HB2Flag[Ppmd7Context_OneState(p.MinContext)->Symbol]                           + ((p.RunLength >> 26) & 0x20)];
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_GetBinSumm,The following statement contains a magic number: return ref p.BinSumm[Ppmd7Context_OneState(p.MinContext)->Freq - 1]                       [p.PrevSuccess                           + p.NS2BSIndx[Ppmd7_GetContext(p' p.MinContext->Suffix)->NumStats - 1]                           + (p.HiBitsFlag = p.HB2Flag[p.FoundState->Symbol])                           + 2 * p.HB2Flag[Ppmd7Context_OneState(p.MinContext)->Symbol]                           + ((p.RunLength >> 26) & 0x20)];
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: uint step = (i >= 12 ? 4 : (i >> 2) + 1);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: uint step = (i >= 12 ? 4 : (i >> 2) + 1);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: uint step = (i >= 12 ? 4 : (i >> 2) + 1);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: p.NS2BSIndx[i + 2] = 2 << 1;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: p.NS2BSIndx[i + 2] = 2 << 1;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: i < 9
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: p.NS2BSIndx[i + 11] = 3 << 1;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: p.NS2BSIndx[i + 11] = 3 << 1;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: i < 256 - 11
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: i < 256 - 11
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: i < 3
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: k = (++m) - 2;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: i < 256
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Construct,The following statement contains a magic number: p.HB2Flag[i + 0x40] = 8;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Alloc,The following statement contains a magic number: p.AlignOffset = 4 - (size & 3);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Alloc,The following statement contains a magic number: p.AlignOffset = 4 - (size & 3);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,GlueFreeBlocks,The following statement contains a magic number: p.GlueCount = 255;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,GlueFreeBlocks,The following statement contains a magic number: nu > 128
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,MyMem12Cpy,The following statement contains a magic number: d[2] = s[2];
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,MyMem12Cpy,The following statement contains a magic number: d[2] = s[2];
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,MyMem12Cpy,The following statement contains a magic number: s += 3;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,MyMem12Cpy,The following statement contains a magic number: d += 3;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,SetSuccessor,The following statement contains a magic number: (p)->SuccessorHigh = (ushort)(v.Value >> 16);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: p.LoUnit = p.UnitsStart = p.HiUnit - p.Size / 8 / UNIT_SIZE * 7 * UNIT_SIZE;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: p.LoUnit = p.UnitsStart = p.HiUnit - p.Size / 8 / UNIT_SIZE * 7 * UNIT_SIZE;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: p.RunLength = p.InitRL = -(Int32)((p.MaxOrder < 12) ? p.MaxOrder : 12) - 1;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: p.RunLength = p.InitRL = -(Int32)((p.MaxOrder < 12) ? p.MaxOrder : 12) - 1;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: p.MinContext->NumStats = 256;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: p.MinContext->SummFreq = 256 + 1;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: p.LoUnit += U2B(256 / 2);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: p.LoUnit += U2B(256 / 2);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: i < 256
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: ushort val = (ushort)(PPMD_BIN_SCALE - kInitBinEsc[k] / (i + 2));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: i < 128
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: s->Summ = (ushort)((5 * i + 10) << (s->Shift = PPMD_PERIOD_BITS - 4));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: s->Summ = (ushort)((5 * i + 10) << (s->Shift = PPMD_PERIOD_BITS - 4));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: s->Summ = (ushort)((5 * i + 10) << (s->Shift = PPMD_PERIOD_BITS - 4));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: s->Count = 4;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,RestartModel,The following statement contains a magic number: i < 25
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Init,The following statement contains a magic number: p.DummySee->Count = 64;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: s->Freq < 32
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: p.FoundState->Freq < MAX_FREQ / 4 && p.MinContext->Suffix.Value != 0
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: c->SummFreq = (ushort)(c->SummFreq + (2 * ns1 < ns ? 1u : 0u) + 2 * ((4 * ns1 <= ns ? 1u : 0u) & (c->SummFreq <= 8 * ns1 ? 1u : 0u)));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: c->SummFreq = (ushort)(c->SummFreq + (2 * ns1 < ns ? 1u : 0u) + 2 * ((4 * ns1 <= ns ? 1u : 0u) & (c->SummFreq <= 8 * ns1 ? 1u : 0u)));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: c->SummFreq = (ushort)(c->SummFreq + (2 * ns1 < ns ? 1u : 0u) + 2 * ((4 * ns1 <= ns ? 1u : 0u) & (c->SummFreq <= 8 * ns1 ? 1u : 0u)));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: c->SummFreq = (ushort)(c->SummFreq + (2 * ns1 < ns ? 1u : 0u) + 2 * ((4 * ns1 <= ns ? 1u : 0u) & (c->SummFreq <= 8 * ns1 ? 1u : 0u)));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: cf = 2 * (uint)p.FoundState->Freq * (c->SummFreq + 6u);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: cf = 2 * (uint)p.FoundState->Freq * (c->SummFreq + 6u);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: cf = 1 + (cf > sf ? 1u : 0u) + (cf >= 4 * sf ? 1u : 0u);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: c->SummFreq += 3;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,UpdateModel,The following statement contains a magic number: cf < 6 * sf
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Rescale,The following statement contains a magic number: s->Freq += 4;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_MakeEscFreq,The following statement contains a magic number: see = p.See[p.NS2Indx[nonMasked - 1]] +                      (nonMasked < (uint)SUFFIX(p' p.MinContext)->NumStats - p.MinContext->NumStats ? 1 : 0) +                      2 * (p.MinContext->SummFreq < 11 * p.MinContext->NumStats ? 1 : 0) +                      4 * (numMasked > nonMasked ? 1 : 0) +                      p.HiBitsFlag;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_MakeEscFreq,The following statement contains a magic number: see = p.See[p.NS2Indx[nonMasked - 1]] +                      (nonMasked < (uint)SUFFIX(p' p.MinContext)->NumStats - p.MinContext->NumStats ? 1 : 0) +                      2 * (p.MinContext->SummFreq < 11 * p.MinContext->NumStats ? 1 : 0) +                      4 * (numMasked > nonMasked ? 1 : 0) +                      p.HiBitsFlag;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_MakeEscFreq,The following statement contains a magic number: see = p.See[p.NS2Indx[nonMasked - 1]] +                      (nonMasked < (uint)SUFFIX(p' p.MinContext)->NumStats - p.MinContext->NumStats ? 1 : 0) +                      2 * (p.MinContext->SummFreq < 11 * p.MinContext->NumStats ? 1 : 0) +                      4 * (numMasked > nonMasked ? 1 : 0) +                      p.HiBitsFlag;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_MakeEscFreq,The following statement contains a magic number: p.MinContext->NumStats != 256
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Update1,The following statement contains a magic number: s->Freq += 4;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Update1,The following statement contains a magic number: p.MinContext->SummFreq += 4;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Update1_0,The following statement contains a magic number: var bit = (2 * p.FoundState->Freq > p.MinContext->SummFreq) ? (byte)1 : (byte)0;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Update1_0,The following statement contains a magic number: p.MinContext->SummFreq += 4;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Update1_0,The following statement contains a magic number: (p.FoundState->Freq += 4) > MAX_FREQ
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_UpdateBin,The following statement contains a magic number: p.FoundState->Freq = (byte)(p.FoundState->Freq + (p.FoundState->Freq < 128 ? 1 : 0));
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Update2,The following statement contains a magic number: p.MinContext->SummFreq += 4;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_Update2,The following statement contains a magic number: (p.FoundState->Freq += 4) > MAX_FREQ
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7z_RangeDec_Init,The following statement contains a magic number: p.Code = (p.Code << 8) | p.Stream.Read(p.Stream);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7z_RangeDec_Init,The following statement contains a magic number: i < 4
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Range_Normalize,The following statement contains a magic number: p.Code = (p.Code << 8) | p.Stream.Read(p.Stream);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Range_Normalize,The following statement contains a magic number: p.Range <<= 8;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Range_Normalize,The following statement contains a magic number: p.Code = (p.Code << 8) | p.Stream.Read(p.Stream);
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Range_Normalize,The following statement contains a magic number: p.Range <<= 8;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Range_DecodeBit,The following statement contains a magic number: uint newBound = (p.Range >> 14) * size0;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_DecodeSymbol,The following statement contains a magic number: uint* charMask = stackalloc uint[256 / sizeof(uint)];
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_DecodeSymbol,The following statement contains a magic number: return -2;
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_DecodeSymbol,The following statement contains a magic number: CPpmd_State** ps = stackalloc CPpmd_State*[256];
Magic Number,ManagedLzma.SevenZip.Reader,PPMD,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,Ppmd7_DecodeSymbol,The following statement contains a magic number: return -2;
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: mBackingSee = Marshal.AllocCoTaskMem(kSeeSize * (25 * 16 + 1));
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: mBackingSee = Marshal.AllocCoTaskMem(kSeeSize * (25 * 16 + 1));
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: DummySee += 16;
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: i < 25
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: mBackingBinSumm = Marshal.AllocCoTaskMem(128 * 64 * 2);
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: mBackingBinSumm = Marshal.AllocCoTaskMem(128 * 64 * 2);
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: mBackingBinSumm = Marshal.AllocCoTaskMem(128 * 64 * 2);
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: p += 64;
Magic Number,ManagedLzma.SevenZip.Reader,CPpmd7,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CPpmd7,The following statement contains a magic number: i < 128
Magic Number,ManagedLzma.SevenZip.Metadata,DecodedStreamIndex,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadata.cs,GetHashCode,The following statement contains a magic number: return (mSectionIndex << 16) + mStreamIndex;
Magic Number,ManagedLzma.SevenZip.Metadata,DecoderInputMetadata,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveMetadata.cs,GetHashCode,The following statement contains a magic number: return (mDecoderIndex << 16) + mStreamIndex;
Magic Number,ManagedLzma.SevenZip.Metadata,CompressionMethod,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\CompressionMethod.cs,CheckInputOutputCount,The following statement contains a magic number: switch (~mSignature)              {                  case kCopy:                  case kDeflate:                  case kLZMA:                  case kLZMA2:                  case kAES:                  case kBCJ:                  case kPPMD:                      if (inputCount != 1)                          throw new InvalidDataException();                        if (outputCount != 1)                          throw new InvalidDataException();                        break;                    case kBCJ2:                      if (inputCount != 4)                          throw new InvalidDataException();                        if (outputCount != 1)                          throw new InvalidDataException();                        break;                    case kDelta:                  case kBZip2:                      throw new NotImplementedException();                    default:                      throw new InvalidDataException();              }
Magic Number,ManagedLzma.SevenZip.Metadata,CompressionMethod,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\CompressionMethod.cs,GetInputCount,The following statement contains a magic number: switch (~mSignature)              {                  case kCopy:                  case kDeflate:                  case kLZMA:                  case kLZMA2:                  case kAES:                  case kBCJ:                  case kPPMD:                      return 1;                    case kBCJ2:                      return 4;                    case kDelta:                  case kBZip2:                      throw new NotImplementedException();                    default:                      throw new InternalFailureException();              }
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PutInt32,The following statement contains a magic number: buffer[offset + 1] = (byte)(value >> 8);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PutInt32,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 16);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PutInt32,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 16);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PutInt32,The following statement contains a magic number: buffer[offset + 3] = (byte)(value >> 24);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PutInt32,The following statement contains a magic number: buffer[offset + 3] = (byte)(value >> 24);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PutInt64,The following statement contains a magic number: PutInt32(buffer' offset + 4' (int)(value >> 32));
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PutInt64,The following statement contains a magic number: PutInt32(buffer' offset + 4' (int)(value >> 32));
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The following statement contains a magic number: nameSize += (name.Length + 1) * 2;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The following statement contains a magic number: WritePadding(2 + GetNumberSize(nameSize)' 16);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The following statement contains a magic number: WritePadding(2 + GetNumberSize(nameSize)' 16);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The following statement contains a magic number: System.Diagnostics.Debug.Assert((mArchiveStream.Position & 15) == 0);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteMetadata,The following statement contains a magic number: WriteByte((byte)(ch >> 8));
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteBitVectorWithHeader,The following statement contains a magic number: WriteNumber((count + 7) / 8);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteBitVectorWithHeader,The following statement contains a magic number: WriteNumber((count + 7) / 8);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteAlignedHeaderWithBitVector,The following statement contains a magic number: var vectorSize = (itemCount == vectorCount) ? 0 : (vectorCount + 7) / 8;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteAlignedHeaderWithBitVector,The following statement contains a magic number: var vectorSize = (itemCount == vectorCount) ? 0 : (vectorCount + 7) / 8;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteAlignedHeaderWithBitVector,The following statement contains a magic number: var contentSize = 2 + vectorSize + itemCount * itemSize;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteAlignedHeaderWithBitVector,The following statement contains a magic number: WritePadding(3 + vectorSize + GetNumberSize(contentSize)' itemSize);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteUInt64Vector,The following statement contains a magic number: WriteAlignedHeaderWithBitVector(vector.Select(x => x.HasValue)' count' defined' token' 8);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteUInt64Vector,The following statement contains a magic number: System.Diagnostics.Debug.Assert((mArchiveStream.Position & 7) == 0);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteUInt32Vector,The following statement contains a magic number: WriteAlignedHeaderWithBitVector(vector.Select(x => x.HasValue)' count' defined' token' 4);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteUInt32Vector,The following statement contains a magic number: System.Diagnostics.Debug.Assert((mArchiveStream.Position & 3) == 0);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteDecoderSection,The following statement contains a magic number: System.Diagnostics.Debug.Assert(!id.IsDefaultOrEmpty && id.Length <= 15);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteToken,The following statement contains a magic number: System.Diagnostics.Debug.Assert(0 <= (int)token && (int)token <= 25);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WritePadding,The following statement contains a magic number: padding < 2
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WritePadding,The following statement contains a magic number: padding -= 2;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteInt32,The following statement contains a magic number: WriteByte((byte)(value >> 8));
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteInt32,The following statement contains a magic number: WriteByte((byte)(value >> 16));
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteInt32,The following statement contains a magic number: WriteByte((byte)(value >> 24));
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteUInt64,The following statement contains a magic number: value >>= 8;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteUInt64,The following statement contains a magic number: i < 8
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteNumber,The following statement contains a magic number: header |= (byte)(value >> (8 * count));
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteNumber,The following statement contains a magic number: value < (1L << (7 * (count + 1)))
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteNumber,The following statement contains a magic number: count < 8
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,WriteNumber,The following statement contains a magic number: value >>= 8;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,GetNumberSize,The following statement contains a magic number: length < 9 && value >= (1L << (length * 7))
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,GetNumberSize,The following statement contains a magic number: length < 9 && value >= (1L << (length * 7))
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PrepareHeader,The following statement contains a magic number: buffer[6] = kMajorVersion;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PrepareHeader,The following statement contains a magic number: buffer[7] = kMinorVersion;
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PrepareHeader,The following statement contains a magic number: PutInt32(buffer' 8' (int)crc);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PrepareHeader,The following statement contains a magic number: PutInt64(buffer' 12' metadataOffset);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PrepareHeader,The following statement contains a magic number: PutInt64(buffer' 20' mMetadataLength);
Magic Number,ManagedLzma.SevenZip.Writer,ArchiveWriter,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\ArchiveWriter.cs,PrepareHeader,The following statement contains a magic number: PutInt32(buffer' 28' mMetadataChecksum.Value);
Magic Number,ManagedLzma.SevenZip.Writer,AesEncoderSeed,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,CreateRandom,The following statement contains a magic number: var seed = new byte[8];
Magic Number,ManagedLzma.SevenZip.Writer,AesEncoderSeed,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,AesEncoderSeed,The following statement contains a magic number: mSeed16 = new byte[16];
Magic Number,ManagedLzma.SevenZip.Writer,AesEncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,AesEncoderSettings,The following statement contains a magic number: mSlowdown = 19;
Magic Number,ManagedLzma.SevenZip.Writer,AesEncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,SerializeSettings,The following statement contains a magic number: var buffer = ImmutableArray.CreateBuilder<byte>(2 + saltSize + seedSize);
Magic Number,ManagedLzma.SevenZip.Writer,AesEncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,SerializeSettings,The following statement contains a magic number: buffer.Add((byte)((encodedSaltSize << 4) | encodedSeedSize));
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,EncryptionStream,The following statement contains a magic number: mBuffer1 = new byte[16];
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,EncryptionStream,The following statement contains a magic number: mBuffer2 = new byte[16];
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,WriteAsync,The following statement contains a magic number: mEncoder.TransformBlock(mBuffer1' 0' 16' mBuffer2' 0);
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,WriteAsync,The following statement contains a magic number: var written = await mOutput.WriteAsync(mBuffer2' 0' 16' StreamMode.Complete).ConfigureAwait(false);
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,WriteAsync,The following statement contains a magic number: System.Diagnostics.Debug.Assert(written == 16);
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,WriteAsync,The following statement contains a magic number: mOffset == 16
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,WriteAsync,The following statement contains a magic number: int copy = Math.Min(16 - mOffset' length);
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,CompleteAsync,The following statement contains a magic number: mOffset < 16
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,CompleteAsync,The following statement contains a magic number: System.Diagnostics.Debug.Assert(mOffset == 16);
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,CompleteAsync,The following statement contains a magic number: mBuffer2 = mEncoder.TransformFinalBlock(mBuffer1' 0' 16);
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,CompleteAsync,The following statement contains a magic number: var written = await mOutput.WriteAsync(mBuffer2' 0' 16' StreamMode.Complete).ConfigureAwait(false);
Magic Number,ManagedLzma.SevenZip.Writer,EncryptionStream,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\AesEncoder.cs,CompleteAsync,The following statement contains a magic number: System.Diagnostics.Debug.Assert(written == 16);
Magic Number,ManagedLzma.SevenZip.Writer,Lzma2EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Lzma2Encoder.cs,LZMA2_DIC_SIZE_FROM_PROP,The following statement contains a magic number: return (uint)(2 | (p & 1)) << (p / 2 + 11);
Magic Number,ManagedLzma.SevenZip.Writer,Lzma2EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Lzma2Encoder.cs,LZMA2_DIC_SIZE_FROM_PROP,The following statement contains a magic number: return (uint)(2 | (p & 1)) << (p / 2 + 11);
Magic Number,ManagedLzma.SevenZip.Writer,Lzma2EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Lzma2Encoder.cs,LZMA2_DIC_SIZE_FROM_PROP,The following statement contains a magic number: return (uint)(2 | (p & 1)) << (p / 2 + 11);
Magic Number,ManagedLzma.SevenZip.Writer,Lzma2EncoderSettings,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Lzma2Encoder.cs,Lzma2Enc_WriteProperties,The following statement contains a magic number: i < 40 && dicSize > LZMA2_DIC_SIZE_FROM_PROP(i)
Magic Number,ManagedLzma.SevenZip.Writer,EncoderInput,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,Dispose,The following statement contains a magic number: mFinalized != 3
Magic Number,ManagedLzma.SevenZip.Writer,EncoderInput,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Encoders\Runtime.cs,GetFinalChecksum,The following statement contains a magic number: mFinalized |= 2;
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,CRC,The following statement contains a magic number: j < 8
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,CRC,The following statement contains a magic number: i < 256
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,CRC,The following statement contains a magic number: uint r = kTable[i - 256];
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,CRC,The following statement contains a magic number: kTable[i] = kTable[r & 0xFF] ^ (r >> 8);
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,From,The following statement contains a magic number: byte[] buffer = new byte[Math.Min(length' 4 << 10)];
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,From,The following statement contains a magic number: byte[] buffer = new byte[Math.Min(length' 4 << 10)];
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,Update,The following statement contains a magic number: return kTable[(crc & 0xFF) ^ bt] ^ (crc >> 8);
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,Update,The following statement contains a magic number: return kTable[0x300 + (crc & 0xFF)]                  ^ kTable[0x200 + ((crc >> 8) & 0xFF)]                  ^ kTable[0x100 + ((crc >> 16) & 0xFF)]                  ^ kTable[0x000 + (crc >> 24)];
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,Update,The following statement contains a magic number: return kTable[0x300 + (crc & 0xFF)]                  ^ kTable[0x200 + ((crc >> 8) & 0xFF)]                  ^ kTable[0x100 + ((crc >> 16) & 0xFF)]                  ^ kTable[0x000 + (crc >> 24)];
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,Update,The following statement contains a magic number: return kTable[0x300 + (crc & 0xFF)]                  ^ kTable[0x200 + ((crc >> 8) & 0xFF)]                  ^ kTable[0x100 + ((crc >> 16) & 0xFF)]                  ^ kTable[0x000 + (crc >> 24)];
Magic Number,ManagedLzma,CRC,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\CRC.cs,Update,The following statement contains a magic number: return Update(Update(crc' (uint)value)' (uint)(value >> 32));
Magic Number,ManagedLzma,PasswordAccessor,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\Password.cs,GetHashCode,The following statement contains a magic number: int hash = unchecked((int)2166136261);
Magic Number,ManagedLzma,PasswordAccessor,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\Utilities\Password.cs,GetHashCode,The following statement contains a magic number: hash = (hash ^ mPassword[i]) * 16777619;
Missing Default,ManagedLzma.SevenZip.Reader,PpmdArchiveDecoder,D:\research\architectureSmells\repos\weltkante_managed-lzma\shared\SevenZip\Decoders\PpmdDecoder.cs,CodeSpec,The following switch statement is missing a default case: switch (mDecoderStatus)              {                  case kStatus.Finished:                      return HRESULT.S_OK;                    case kStatus.Error:                      return HRESULT.S_FALSE;                    case kStatus.NeedInit:                      //_inStream.Init();                      if (!PPMD.Ppmd7z_RangeDec_Init(mRangeDecoder))                      {                          mDecoderStatus = kStatus.Error;                          return HRESULT.S_FALSE;                      }                      mDecoderStatus = kStatus.Normal;                      PPMD.Ppmd7_Init(mState' mSettingOrder);                      break;              }
