Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Reflection,Reflection,C:\repos\MartinChavez_School-of-CSharp\SchoolOfCSharp\Reflection\Reflection.cs,ReflectionMembers,The length of the statement  "            foreach (var member in members.Where(member => member.Name == "GetName")) //Through reflection we can know the method's name at runtime " is 135.
Long Statement,Reflection,AttributesTest,C:\repos\MartinChavez_School-of-CSharp\SchoolOfCSharp\Reflection\AttributesTest.cs,IsDangerZone,The length of the statement  "            return member.GetCustomAttributes(true).OfType<DangerZoneAttribute>().Any(); //You can verify the attributes of a given method at runtime and act on them " is 153.
Long Statement,Reflection,AssemblyReflection,C:\repos\MartinChavez_School-of-CSharp\SchoolOfCSharp\Reflection\AssemblyReflection.cs,LoadAssemblyAtRuntime,The length of the statement  "            foreach (var logger in (from type in Assembly.GetExecutingAssembly().GetTypes() where type.GetInterface("ILogger") != null select Activator.CreateInstance(type)).OfType<ILogger>()) " is 180.
Long Statement,Reflection,CodeGeneration,C:\repos\MartinChavez_School-of-CSharp\SchoolOfCSharp\Reflection\CodeGeneration.cs,DynamicallyCreatingCode,The length of the statement  "            var methodInfo = typeof(Debug).GetMethod("WriteLine"' new[] { typeof(string) }); //The method ‘GetMethod’ extracts the method information from Debug.Writeline  " is 158.
Long Statement,Reflection,CodeGeneration,C:\repos\MartinChavez_School-of-CSharp\SchoolOfCSharp\Reflection\CodeGeneration.cs,DynamicallyCreatingCode,The length of the statement  "            var dynamicMethod = new DynamicMethod("DynamicMethod"' typeof(void)' new Type[] { }); //We can specify the method signature by using a type of DynamicMethod " is 156.
Long Statement,Reflection,CodeGeneration,C:\repos\MartinChavez_School-of-CSharp\SchoolOfCSharp\Reflection\CodeGeneration.cs,DynamicallyCreatingCode,The length of the statement  "            var action = (Action)dynamicMethod.CreateDelegate(typeof(Action)); //We can create dynamic delegates and execute our method " is 123.
Magic Number,Reflection,AttributesTest,C:\repos\MartinChavez_School-of-CSharp\SchoolOfCSharp\Reflection\AttributesTest.cs,AttributesUsingReflection,The following statement contains a magic number: var human = new Human {Age = 11};
