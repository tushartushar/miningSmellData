Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,CreateOrOpenEndpointAsync,Cyclomatic complexity of the method is 15
Long Statement,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,Main,The length of the statement  "	builder.RegisterTypes (typeof(Program)' typeof(RelayCloudBlobStorageProvider)' typeof(Channel)' typeof(OwnEndpointServices)' typeof(DirectEntryAddressBook)' typeof(HttpClientWrapper)).AsSelf ().AsImplementedInterfaces ().SingleInstance ().PropertiesAutowired (); " is 262.
Long Statement,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,PurgeAllAsync,The length of the statement  "				var blobs = await container.ListBlobsSegmentedAsync (container.Name' useFlatBlobListing: true' pageSize: 50' details: BlobListingDetails.Metadata' options: new BlobRequestOptions ()' operationContext: null); " is 207.
Long Statement,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,InitializeLocalCloudAsync,The length of the statement  "	await Task.WhenAll (tableStorage.GetTableReference (AzureTableStorageName).CreateIfNotExistsAsync ()' blobStorage.CreateContainerIfNotExistAsync ()); " is 149.
Long Statement,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,DoAsync,The length of the statement  "	this.MessageRelayService.BlobPostUrl = new Uri (ConfigurationManager.ConnectionStrings ["RelayBlobService"].ConnectionString); " is 126.
Long Statement,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,DoAsync,The length of the statement  "	this.MessageRelayService.InboxServiceUrl = new Uri (ConfigurationManager.ConnectionStrings ["RelayInboxService"].ConnectionString); " is 131.
Long Statement,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,CreateOrOpenEndpointAsync,The length of the statement  "	switch (MessageBox.Show ("Do you have an existing endpoint you want to open?"' "Endpoint selection"' MessageBoxButtons.YesNoCancel' MessageBoxIcon.Question)) { " is 159.
Magic Number,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,PurgeAllAsync,The following statement contains a magic number: foreach (var container in blobClient.ListContainers ()) {  	if (container.Name != "wad-control-container") {  		Console.WriteLine ("\nContainer: {0}"' container.Name);  		if (container.Name.StartsWith ("unittests")) {  			container.Delete ();  		} else {  			var blobs = await container.ListBlobsSegmentedAsync (container.Name' useFlatBlobListing: true' pageSize: 50' details: BlobListingDetails.Metadata' options: new BlobRequestOptions ()' operationContext: null);  			foreach (var blob in blobs.Cast<ICloudBlob> ()) {  				Console.WriteLine ("\tBlob: {0} {1}"' blob.Uri' blob.Metadata ["DeleteAfter"]);  			}  			await Task.WhenAll (blobs.Cast<ICloudBlob> ().Select (b => b.DeleteAsync ()));  		}  	}  }  
Magic Number,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,PurgeAllAsync,The following statement contains a magic number: if (container.Name != "wad-control-container") {  	Console.WriteLine ("\nContainer: {0}"' container.Name);  	if (container.Name.StartsWith ("unittests")) {  		container.Delete ();  	} else {  		var blobs = await container.ListBlobsSegmentedAsync (container.Name' useFlatBlobListing: true' pageSize: 50' details: BlobListingDetails.Metadata' options: new BlobRequestOptions ()' operationContext: null);  		foreach (var blob in blobs.Cast<ICloudBlob> ()) {  			Console.WriteLine ("\tBlob: {0} {1}"' blob.Uri' blob.Metadata ["DeleteAfter"]);  		}  		await Task.WhenAll (blobs.Cast<ICloudBlob> ().Select (b => b.DeleteAsync ()));  	}  }  
Magic Number,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,PurgeAllAsync,The following statement contains a magic number: if (container.Name.StartsWith ("unittests")) {  	container.Delete ();  } else {  	var blobs = await container.ListBlobsSegmentedAsync (container.Name' useFlatBlobListing: true' pageSize: 50' details: BlobListingDetails.Metadata' options: new BlobRequestOptions ()' operationContext: null);  	foreach (var blob in blobs.Cast<ICloudBlob> ()) {  		Console.WriteLine ("\tBlob: {0} {1}"' blob.Uri' blob.Metadata ["DeleteAfter"]);  	}  	await Task.WhenAll (blobs.Cast<ICloudBlob> ().Select (b => b.DeleteAsync ()));  }  
Magic Number,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,ChatLoopAsync,The following statement contains a magic number: while (true) {  	Console.Write ("> ");  	var line = Console.ReadLine ();  	if (line == "#quit") {  		return;  	}  	if (line.Length > 0) {  		var payload = new Payload (Encoding.UTF8.GetBytes (line)' "text/plain");  		await this.Channel.PostAsync (payload' new[] {  			friend  		}' DateTime.UtcNow + TimeSpan.FromMinutes (5));  	}  	Console.WriteLine ("Awaiting friend's reply...");  	var incoming = await this.Channel.ReceiveAsync (longPoll: true);  	foreach (var payloadReceipt in incoming) {  		var message = Encoding.UTF8.GetString (payloadReceipt.Payload.Content);  		Console.WriteLine ("< {0}"' message);  	}  	await Task.WhenAll (incoming.Select (receipt => this.Channel.DeleteInboxItemAsync (receipt.Payload)));  }  
Magic Number,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,ChatLoopAsync,The following statement contains a magic number: if (line.Length > 0) {  	var payload = new Payload (Encoding.UTF8.GetBytes (line)' "text/plain");  	await this.Channel.PostAsync (payload' new[] {  		friend  	}' DateTime.UtcNow + TimeSpan.FromMinutes (5));  }  
Magic Number,ConsoleChat,Program,F:\newReposMay17\AArnott_IronPigeon\src\ConsoleChat\Program.cs,ChatLoopAsync,The following statement contains a magic number: await this.Channel.PostAsync (payload' new[] {  	friend  }' DateTime.UtcNow + TimeSpan.FromMinutes (5));  
