Implementation smell,Namespace,Class,File,Method,Description
Complex Method,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,ReceiveAsync,Cyclomatic complexity of the method is 11
Complex Method,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,Cyclomatic complexity of the method is 12
Complex Method,IronPigeon,Payload,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Payload.cs,Equals,Cyclomatic complexity of the method is 8
Long Parameter List,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostAsync,The method has 5 parameters.
Long Parameter List,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,RegisterWinPhonePushNotificationAsync,The method has 6 parameters.
Long Parameter List,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,RegisterWindowsPushNotificationChannelAsync,The method has 5 parameters.
Long Parameter List,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,EncryptAsync,The method has 5 parameters.
Long Parameter List,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,DecryptAsync,The method has 5 parameters.
Long Parameter List,IronPigeon,ICloudBlobStorageProvider,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\ICloudBlobStorageProvider.cs,UploadMessageAsync,The method has 6 parameters.
Long Parameter List,IronPigeon,PayloadReference,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\PayloadReference.cs,PayloadReference,The method has 6 parameters.
Long Parameter List,IronPigeon.Providers,RelayCloudBlobStorageProvider,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Providers\RelayCloudBlobStorageProvider.cs,UploadMessageAsync,The method has 6 parameters.
Long Identifier,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the parameter recipientPublicSigningKeyBuffer is 31.
Long Identifier,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,IsThumbprintMatch,The length of the parameter allegedHashWebSafeBase64Thumbprint is 34.
Long Statement,IronPigeon,AddressBookEntry,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\AddressBookEntry.cs,ExtractEndpoint,The length of the statement  "		if (!CryptoProviderExtensions.VerifySignatureWithTolerantHashAlgorithm (endpoint.SigningKeyPublicMaterial' this.SerializedEndpoint' this.Signature' this.HashAlgorithmName != null ? (AsymmetricAlgorithm?)CryptoProviderExtensions.GetSignatureProvider (this.HashAlgorithmName) : null)) { " is 284.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostAsync,The length of the statement  "	var payloadReference = await this.PostPayloadAsync (message' expiresUtc' bytesCopiedProgress' cancellationToken).ConfigureAwait (false); " is 136.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DeleteInboxItemAsync,The length of the statement  "	Requires.Argument (payload.PayloadReferenceUri != null' "payload"' "Original payload reference URI no longer available."); " is 122.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,GetVerifiableIdentifiersAsync,The length of the statement  "		var map = endpoint.AuthorizedIdentifiers.Where (id => id != null).ToDictionary (id => id' id => this.IsVerifiableIdentifierAsync (endpoint' id' cancellationToken)); " is 164.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadAsync,The length of the statement  "	var encryptionVariables = await this.CryptoServices.EncryptAsync (plainTextStream' cipherTextStream' cancellationToken: cancellationToken).ConfigureAwait (false); " is 162.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadAsync,The length of the statement  "	Uri blobUri = await this.CloudBlobStorage.UploadMessageAsync (cipherTextStream' expiresUtc' contentType: message.ContentType' bytesCopiedProgress: bytesCopiedProgress' cancellationToken: cancellationToken).ConfigureAwait (false); " is 229.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadAsync,The length of the statement  "	return new PayloadReference (blobUri' messageHash' this.CryptoServices.SymmetricHashAlgorithm.GetHashAlgorithmName ()' encryptionVariables.Key' encryptionVariables.IV' expiresUtc); " is 180.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadAsync,The length of the statement  "			if (!this.CryptoServices.IsHashMatchWithTolerantHashAlgorithm (messageBuffer' notification.Hash' CryptoProviderExtensions.ParseHashAlgorithmName (notification.HashAlgorithmName))) { " is 181.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadAsync,The length of the statement  "				if (responseMessage.Content.Headers.ContentLength.HasValue && responseMessage.Content.Headers.ContentLength.Value > messageBuffer.Length) { " is 139.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadAsync,The length of the statement  "	await this.CryptoServices.DecryptAsync (cipherStream' plainTextStream' encryptionVariables' cancellationToken).ConfigureAwait (false); " is 134.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the statement  "	await this.CryptoServices.DecryptAsync (ciphertextStream' plainTextPayloadStream' encryptedVariables' cancellationToken).ConfigureAwait (false); " is 144.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the statement  "		messageReference.HashAlgorithmName = Utilities.GuessHashAlgorithmFromLength (messageReference.Hash.Length).GetHashAlgorithmName (); " is 131.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the statement  "	if (!CryptoProviderExtensions.VerifySignatureWithTolerantHashAlgorithm (notificationAuthor.SigningKeyPublicMaterial' signedBytes' signature' signingHashAlgorithm)) { " is 165.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the statement  "	if (!Utilities.AreEquivalent (recipientPublicSigningKeyBuffer' this.Endpoint.PublicEndpoint.SigningKeyPublicMaterial)) { " is 120.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	var postTasks = recipients.Select (recipient => Task.Run (() => this.PostPayloadReferenceAsync (messageReference' recipient' cancellationToken))).ToList (); " is 156.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	byte[] notificationSignature = WinRTCrypto.CryptographicEngine.Sign (this.Endpoint.SigningKey' plainTextPayloadStream.ToArray ()); " is 130.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	var signedPlainTextPayloadStream = new MemoryStream ((int)plainTextPayloadStream.Length + notificationSignature.Length + 4); " is 124.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	////await signedPlainTextPayloadStream.WriteSizeAndBufferAsync(Encoding.UTF8.GetBytes(this.CryptoServices.HashAlgorithmName)' cancellationToken); " is 145.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	await signedPlainTextPayloadStream.WriteSizeAndBufferAsync (notificationSignature' cancellationToken).ConfigureAwait (false); " is 125.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	await plainTextPayloadStream.CopyToAsync (signedPlainTextPayloadStream' 4096' cancellationToken).ConfigureAwait (false); " is 120.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	var encryptedVariables = await this.CryptoServices.EncryptAsync (signedPlainTextPayloadStream' cipherTextStream' cancellationToken: cancellationToken).ConfigureAwait (false); " is 174.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	var encryptionKey = CryptoSettings.EncryptionAlgorithm.ImportPublicKey (recipient.EncryptionKeyPublicMaterial' CryptoSettings.PublicKeyFormat); " is 143.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "	using (var response = await this.HttpClient.PostAsync (builder.Uri' new StreamContent (postContent)' cancellationToken).ConfigureAwait (false)) { " is 145.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,IsVerifiableIdentifierAsync,The length of the statement  "	var matchingEndpoint = await Utilities.FastestQualifyingResultAsync (this.AddressBooks' (ct' addressBook) => addressBook.LookupAsync (claimedIdentifier' ct)' resolvedEndpoint => claimingEndpoint.Equals (resolvedEndpoint)' cancellationToken).ConfigureAwait (false); " is 264.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DeletePayloadReferenceAsync,The length of the statement  "	using (var response = await this.HttpClient.DeleteAsync (deleteEndpoint.Uri' this.Endpoint.InboxOwnerCode' cancellationToken).ConfigureAwait (false)) { " is 151.
Long Statement,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadIncomingItemsAsync,The length of the statement  "	var responseMessage = await httpClient.GetAsync (requestUri' this.Endpoint.InboxOwnerCode' cancellationToken).ConfigureAwait (false); " is 133.
Long Statement,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,VerifySignatureWithTolerantHashAlgorithm,The length of the statement  "		var key = WinRTCrypto.AsymmetricKeyAlgorithmProvider.OpenAlgorithm (signingAlgorithm.Value).ImportPublicKey (signingPublicKey' CryptoSettings.PublicKeyFormat); " is 159.
Long Statement,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,VerifySignatureWithTolerantHashAlgorithm,The length of the statement  "	var key1 = WinRTCrypto.AsymmetricKeyAlgorithmProvider.OpenAlgorithm (AsymmetricAlgorithm.RsaSignPkcs1Sha1).ImportPublicKey (signingPublicKey' CryptoSettings.PublicKeyFormat); " is 174.
Long Statement,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,VerifySignatureWithTolerantHashAlgorithm,The length of the statement  "	var key2 = WinRTCrypto.AsymmetricKeyAlgorithmProvider.OpenAlgorithm (AsymmetricAlgorithm.RsaSignPkcs1Sha256).ImportPublicKey (signingPublicKey' CryptoSettings.PublicKeyFormat); " is 176.
Long Statement,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,VerifySignatureWithTolerantHashAlgorithm,The length of the statement  "	return WinRTCrypto.CryptographicEngine.VerifySignature (key1' data' signature) || WinRTCrypto.CryptographicEngine.VerifySignature (key2' data' signature); " is 154.
Long Statement,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,ThisOrNewEncryptionVariables,The length of the statement  "		Requires.Argument (encryptionVariables.IV.Length == CryptoSettings.SymmetricAlgorithm.BlockLength' "iv"' "Incorrect length."); " is 126.
Long Statement,IronPigeon,Endpoint,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Endpoint.cs,Equals,The length of the statement  "	return this.MessageReceivingEndpoint == other.MessageReceivingEndpoint && Utilities.AreEquivalent (this.SigningKeyPublicMaterial' other.SigningKeyPublicMaterial) && Utilities.AreEquivalent (this.EncryptionKeyPublicMaterial' other.EncryptionKeyPublicMaterial); " is 259.
Long Statement,IronPigeon,ProgressWithCompletion,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\ProgressWithCompletion.cs,Report,The length of the statement  "	}' CancellationToken.None' TaskContinuationOptions.NotOnFaulted | TaskContinuationOptions.ExecuteSynchronously' TaskScheduler.Default); " is 135.
Long Statement,IronPigeon,OnlineAddressBook,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\OnlineAddressBook.cs,DownloadEndpointAsync,The length of the statement  "		if (!CryptoProviderExtensions.IsThumbprintMatch (endpoint.SigningKeyPublicMaterial' entryLocation.Fragment.Substring (1))) { " is 124.
Long Statement,IronPigeon,OwnEndpointServices,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\OwnEndpointServices.cs,CreateAsync,The length of the statement  "	var endpoint = await TaskEx.Run (() => this.CreateEndpointWithKeys (cancellationToken)' cancellationToken).ConfigureAwait (false); " is 130.
Long Statement,IronPigeon,OwnEndpointServices,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\OwnEndpointServices.cs,PublishAddressBookEntryAsync,The length of the statement  "	var location = await this.CloudBlobStorage.UploadMessageAsync (ms' DateTime.MaxValue' AddressBookEntry.ContentType' cancellationToken: cancellationToken).ConfigureAwait (false); " is 177.
Long Statement,IronPigeon,OwnEndpointServices,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\OwnEndpointServices.cs,PublishAddressBookEntryAsync,The length of the statement  "	var fullLocationWithFragment = new Uri (location' "#" + this.CryptoProvider.CreateWebSafeBase64Thumbprint (endpoint.PublicEndpoint.SigningKeyPublicMaterial)); " is 158.
Long Statement,IronPigeon,Substream,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Substream.cs,ReadAsync,The length of the statement  "	int bytesRead = await this.underlyingStream.ReadAsync (buffer' offset' Math.Min (count' (int)bytesRemaining)' cancellationToken).ConfigureAwait (false); " is 152.
Long Statement,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,SerializeDataContractAsBase64Async,The length of the statement  "		await writer.WriteLineAsync (entireBase64.Substring (i' Math.Min (MaxLineLength' entireBase64.Length - i))).ConfigureAwait (false); " is 131.
Long Statement,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,LookupAsync,The length of the statement  "	var results = await Task.WhenAll (addressBooks.Select (ab => ab.LookupAsync (identifier' cancellationToken))).ConfigureAwait (false); " is 133.
Long Statement,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,ApplyNoCachePolicy,The length of the statement  "	// The no-cache headers don't seem to impact the client at all' but perhaps they prevent any intermediaries from caching? " is 121.
Long Statement,IronPigeon.Providers,TinyUrlShortener,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Providers\TinyUrlShortener.cs,ShortenAsync,The length of the statement  "	string shorteningRequestUrl = string.Format (CultureInfo.InvariantCulture' ShorteningService' Uri.EscapeDataString (longUrl.AbsoluteUri)); " is 138.
Long Statement,IronPigeon.Providers,GoogleUrlShortener,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Providers\GoogleUrlShortener.cs,ShortenAsync,The length of the statement  "	var postResponse = await this.HttpClient.PostAsync (ShorteningService' requestContent' cancellationToken).ConfigureAwait (false); " is 129.
Long Statement,IronPigeon.Providers,RelayCloudBlobStorageProvider,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Providers\RelayCloudBlobStorageProvider.cs,UploadMessageAsync,The length of the statement  "	var response = await this.HttpClient.PostAsync (this.BlobPostUrl.AbsoluteUri + "?lifetimeInMinutes=" + lifetime' httpContent).ConfigureAwait (false); " is 149.
Long Statement,IronPigeon.Providers,TwitterAddressBook,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Providers\TwitterAddressBook.cs,LookupAsync,The length of the statement  "		var entryLocation = await this.DiscoverAddressBookEntryUrlAsync (identifier.Substring (1)' cancellationToken).ConfigureAwait (false); " is 133.
Long Statement,IronPigeon.Providers,TwitterAddressBook,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Providers\TwitterAddressBook.cs,DiscoverAddressBookEntryUrlAsync,The length of the statement  "	Uri twitterUserProfileLocation = new Uri (string.Format (CultureInfo.InvariantCulture' TwitterUriFormattingString' Uri.EscapeDataString (twitterUsername))); " is 156.
Long Statement,IronPigeon.Providers,TwitterAddressBook,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Providers\TwitterAddressBook.cs,DiscoverAddressBookEntryUrlAsync,The length of the statement  "	using (var userProfileStream = await this.HttpClient.GetBufferedStreamAsync (twitterUserProfileLocation' cancellationToken).ConfigureAwait (false)) { " is 149.
Magic Number,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The following statement contains a magic number: await responseStream.CopyToAsync (responseStreamCopy' 4096' cancellationToken).ConfigureAwait (false);  
Magic Number,IronPigeon,Channel,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The following statement contains a magic number: await plainTextPayloadStream.CopyToAsync (signedPlainTextPayloadStream' 4096' cancellationToken).ConfigureAwait (false);  
Magic Number,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: switch (securityLevel) {  case SecurityLevel.Minimum:  	this.SymmetricKeySize = 128;  	this.AsymmetricKeySize = 512;  	this.SymmetricHashAlgorithm = HashAlgorithm.Sha1;  	break;  case SecurityLevel.Maximum:  	this.SymmetricKeySize = 256;  	this.AsymmetricKeySize = 4096;  	this.SymmetricHashAlgorithm = HashAlgorithm.Sha256;  	break;  default:  	throw new ArgumentException ();  }  
Magic Number,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: switch (securityLevel) {  case SecurityLevel.Minimum:  	this.SymmetricKeySize = 128;  	this.AsymmetricKeySize = 512;  	this.SymmetricHashAlgorithm = HashAlgorithm.Sha1;  	break;  case SecurityLevel.Maximum:  	this.SymmetricKeySize = 256;  	this.AsymmetricKeySize = 4096;  	this.SymmetricHashAlgorithm = HashAlgorithm.Sha256;  	break;  default:  	throw new ArgumentException ();  }  
Magic Number,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: switch (securityLevel) {  case SecurityLevel.Minimum:  	this.SymmetricKeySize = 128;  	this.AsymmetricKeySize = 512;  	this.SymmetricHashAlgorithm = HashAlgorithm.Sha1;  	break;  case SecurityLevel.Maximum:  	this.SymmetricKeySize = 256;  	this.AsymmetricKeySize = 4096;  	this.SymmetricHashAlgorithm = HashAlgorithm.Sha256;  	break;  default:  	throw new ArgumentException ();  }  
Magic Number,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: switch (securityLevel) {  case SecurityLevel.Minimum:  	this.SymmetricKeySize = 128;  	this.AsymmetricKeySize = 512;  	this.SymmetricHashAlgorithm = HashAlgorithm.Sha1;  	break;  case SecurityLevel.Maximum:  	this.SymmetricKeySize = 256;  	this.AsymmetricKeySize = 4096;  	this.SymmetricHashAlgorithm = HashAlgorithm.Sha256;  	break;  default:  	throw new ArgumentException ();  }  
Magic Number,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: this.SymmetricKeySize = 128;  
Magic Number,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: this.AsymmetricKeySize = 512;  
Magic Number,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: this.SymmetricKeySize = 256;  
Magic Number,IronPigeon,CryptoSettings,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: this.AsymmetricKeySize = 4096;  
Magic Number,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,EncryptAsync,The following statement contains a magic number: using (var encryptor = WinRTCrypto.CryptographicEngine.CreateEncryptor (key' encryptionVariables.IV)) {  	var cryptoStream = new CryptoStream (ciphertext' encryptor' CryptoStreamMode.Write);  	await plaintext.CopyToAsync (cryptoStream' 4096' cancellationToken).ConfigureAwait (false);  	cryptoStream.FlushFinalBlock ();  }  
Magic Number,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,EncryptAsync,The following statement contains a magic number: await plaintext.CopyToAsync (cryptoStream' 4096' cancellationToken).ConfigureAwait (false);  
Magic Number,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,DecryptAsync,The following statement contains a magic number: using (var decryptor = WinRTCrypto.CryptographicEngine.CreateDecryptor (key' encryptionVariables.IV)) {  	var cryptoStream = new CryptoStream (plaintext' decryptor' CryptoStreamMode.Write);  	await ciphertext.CopyToAsync (cryptoStream' 4096' cancellationToken).ConfigureAwait (false);  	cryptoStream.FlushFinalBlock ();  }  
Magic Number,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,DecryptAsync,The following statement contains a magic number: await ciphertext.CopyToAsync (cryptoStream' 4096' cancellationToken).ConfigureAwait (false);  
Magic Number,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,ThisOrNewEncryptionVariables,The following statement contains a magic number: if (encryptionVariables == null) {  	return NewSymmetricEncryptionVariables (cryptoProvider);  } else {  	Requires.Argument (encryptionVariables.Key.Length == cryptoProvider.SymmetricKeySize / 8' "key"' "Incorrect length.");  	Requires.Argument (encryptionVariables.IV.Length == CryptoSettings.SymmetricAlgorithm.BlockLength' "iv"' "Incorrect length.");  	return encryptionVariables;  }  
Magic Number,IronPigeon,CryptoProviderExtensions,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,ThisOrNewEncryptionVariables,The following statement contains a magic number: Requires.Argument (encryptionVariables.Key.Length == cryptoProvider.SymmetricKeySize / 8' "key"' "Incorrect length.");  
Magic Number,IronPigeon,OwnEndpoint,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\OwnEndpoint.cs,SaveAsync,The following statement contains a magic number: using (var writer = new BinaryWriter (ms)) {  	writer.SerializeDataContract (this);  	ms.Position = 0;  	return ms.CopyToAsync (target' 4096' cancellationToken);  }  
Magic Number,IronPigeon,OwnEndpoint,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\OwnEndpoint.cs,SaveAsync,The following statement contains a magic number: return ms.CopyToAsync (target' 4096' cancellationToken);  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: if (base64WebSafe.IndexOfAny (WebSafeSpecificBase64Characters) < 0 && (base64WebSafe.Length % 4) == 0) {  	// This web-safe base64 encoded string is equivalent to its standard base64 form.  	return base64WebSafe;  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: if (base64.Length % 4 > 0) {  	base64.Append ('='' 4 - (base64.Length % 4));  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: if (base64.Length % 4 > 0) {  	base64.Append ('='' 4 - (base64.Length % 4));  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: if (base64.Length % 4 > 0) {  	base64.Append ('='' 4 - (base64.Length % 4));  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: base64.Append ('='' 4 - (base64.Length % 4));  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: base64.Append ('='' 4 - (base64.Length % 4));  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,WriteSizeAndStreamAsync,The following statement contains a magic number: await sourceStream.CopyToAsync (stream' 4096' cancellationToken).ConfigureAwait (false);  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,GuessHashAlgorithmFromLength,The following statement contains a magic number: switch (hashLengthInBytes) {  case 160 / 8:  	return HashAlgorithm.Sha1;  case 256 / 8:  	return HashAlgorithm.Sha256;  default:  	throw new NotSupportedException ();  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,GuessHashAlgorithmFromLength,The following statement contains a magic number: switch (hashLengthInBytes) {  case 160 / 8:  	return HashAlgorithm.Sha1;  case 256 / 8:  	return HashAlgorithm.Sha256;  default:  	throw new NotSupportedException ();  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,GuessHashAlgorithmFromLength,The following statement contains a magic number: switch (hashLengthInBytes) {  case 160 / 8:  	return HashAlgorithm.Sha1;  case 256 / 8:  	return HashAlgorithm.Sha256;  default:  	throw new NotSupportedException ();  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,GuessHashAlgorithmFromLength,The following statement contains a magic number: switch (hashLengthInBytes) {  case 160 / 8:  	return HashAlgorithm.Sha1;  case 256 / 8:  	return HashAlgorithm.Sha256;  default:  	throw new NotSupportedException ();  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,ReadAsBufferedStreamAsync,The following statement contains a magic number: using (var stream = await content.ReadAsStreamAsync ().ConfigureAwait (false)) {  	var memoryStream = new MemoryStream ();  	await stream.CopyToAsync (memoryStream' 4096' cancellationToken).ConfigureAwait (false);  	memoryStream.Position = 0;  	return memoryStream;  }  
Magic Number,IronPigeon,Utilities,F:\newReposMay17\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,ReadAsBufferedStreamAsync,The following statement contains a magic number: await stream.CopyToAsync (memoryStream' 4096' cancellationToken).ConfigureAwait (false);  
