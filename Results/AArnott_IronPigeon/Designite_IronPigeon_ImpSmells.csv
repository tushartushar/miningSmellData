Implementation smell,Namespace,Class,File,Method,Description
Complex Method,IronPigeon,Payload,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Payload.cs,Equals,Cyclomatic complexity of the method is 8
Long Parameter List,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostAsync,The method has 5 parameters. Parameters: message' recipients' expiresUtc' bytesCopiedProgress' cancellationToken
Long Parameter List,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,RegisterWinPhonePushNotificationAsync,The method has 6 parameters. Parameters: pushNotificationChannelUri' pushContent' toastLine1' toastLine2' tileTemplate' cancellationToken
Long Parameter List,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,RegisterWindowsPushNotificationChannelAsync,The method has 5 parameters. Parameters: packageSecurityIdentifier' pushNotificationChannelUri' channelExpiration' pushContent' cancellationToken
Long Parameter List,IronPigeon,CryptoProviderExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,EncryptAsync,The method has 5 parameters. Parameters: cryptoProvider' plaintext' ciphertext' encryptionVariables' cancellationToken
Long Parameter List,IronPigeon,CryptoProviderExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,DecryptAsync,The method has 5 parameters. Parameters: cryptoProvider' ciphertext' plaintext' encryptionVariables' cancellationToken
Long Parameter List,IronPigeon,ICloudBlobStorageProvider,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\ICloudBlobStorageProvider.cs,UploadMessageAsync,The method has 6 parameters. Parameters: content' expirationUtc' contentType' contentEncoding' bytesCopiedProgress' cancellationToken
Long Parameter List,IronPigeon,PayloadReference,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\PayloadReference.cs,PayloadReference,The method has 6 parameters. Parameters: location' hash' hashAlgorithmName' key' iv' expiresUtc
Long Parameter List,IronPigeon.Providers,RelayCloudBlobStorageProvider,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Providers\RelayCloudBlobStorageProvider.cs,UploadMessageAsync,The method has 6 parameters. Parameters: content' expirationUtc' contentType' contentEncoding' bytesCopiedProgress' cancellationToken
Long Identifier,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the parameter recipientPublicSigningKeyBuffer is 31.
Long Identifier,IronPigeon,CryptoProviderExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,IsThumbprintMatch,The length of the parameter allegedHashWebSafeBase64Thumbprint is 34.
Long Identifier,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,,The length of the parameter WebSafeSpecificBase64Characters is 31.
Long Identifier,IronPigeon.Providers,TwitterAddressBook,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Providers\TwitterAddressBook.cs,,The length of the parameter AddressBookEntryWithThumbprintFragmentRegex is 43.
Long Statement,IronPigeon,AddressBookEntry,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\AddressBookEntry.cs,ExtractEndpoint,The length of the statement  "                if (!CryptoProviderExtensions.VerifySignatureWithTolerantHashAlgorithm(endpoint.SigningKeyPublicMaterial' this.SerializedEndpoint' this.Signature' this.HashAlgorithmName != null ? (AsymmetricAlgorithm?)CryptoProviderExtensions.GetSignatureProvider(this.HashAlgorithmName) : null)) " is 280.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostAsync,The length of the statement  "            var payloadReference = await this.PostPayloadAsync(message' expiresUtc' bytesCopiedProgress' cancellationToken).ConfigureAwait(false); " is 134.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DeleteInboxItemAsync,The length of the statement  "            Requires.Argument(payload.PayloadReferenceUri != null' "payload"' "Original payload reference URI no longer available."); " is 121.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadAsync,The length of the statement  "            var encryptionVariables = await this.CryptoServices.EncryptAsync(plainTextStream' cipherTextStream' cancellationToken: cancellationToken).ConfigureAwait(false); " is 160.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadAsync,The length of the statement  "            Uri blobUri = await this.CloudBlobStorage.UploadMessageAsync(cipherTextStream' expiresUtc' contentType: message.ContentType' bytesCopiedProgress: bytesCopiedProgress' cancellationToken: cancellationToken).ConfigureAwait(false); " is 227.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadAsync,The length of the statement  "            return new PayloadReference(blobUri' messageHash' this.CryptoServices.SymmetricHashAlgorithm.GetHashAlgorithmName()' encryptionVariables.Key' encryptionVariables.IV' expiresUtc); " is 178.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadAsync,The length of the statement  "                    if (!this.CryptoServices.IsHashMatchWithTolerantHashAlgorithm(messageBuffer' notification.Hash' CryptoProviderExtensions.ParseHashAlgorithmName(notification.HashAlgorithmName))) " is 177.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadAsync,The length of the statement  "                        if (responseMessage.Content.Headers.ContentLength.HasValue && responseMessage.Content.Headers.ContentLength.Value > messageBuffer.Length) " is 137.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadAsync,The length of the statement  "            await this.CryptoServices.DecryptAsync(cipherStream' plainTextStream' encryptionVariables' cancellationToken).ConfigureAwait(false); " is 132.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the statement  "            await this.CryptoServices.DecryptAsync(ciphertextStream' plainTextPayloadStream' encryptedVariables' cancellationToken).ConfigureAwait(false); " is 142.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the statement  "            AsymmetricAlgorithm? signingHashAlgorithm = null;   //// Encoding.UTF8.GetString(await plainTextPayloadStream.ReadSizeAndBufferAsync(cancellationToken)); " is 153.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the statement  "                messageReference.HashAlgorithmName = Utilities.GuessHashAlgorithmFromLength(messageReference.Hash.Length).GetHashAlgorithmName(); " is 129.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The length of the statement  "            if (!CryptoProviderExtensions.VerifySignatureWithTolerantHashAlgorithm(notificationAuthor.SigningKeyPublicMaterial' signedBytes' signature' signingHashAlgorithm)) " is 162.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "            var postTasks = recipients.Select(recipient => Task.Run(() => this.PostPayloadReferenceAsync(messageReference' recipient' cancellationToken))).ToList(); " is 152.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "            byte[] notificationSignature = WinRTCrypto.CryptographicEngine.Sign(this.Endpoint.SigningKey' plainTextPayloadStream.ToArray()); " is 128.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "            var signedPlainTextPayloadStream = new MemoryStream((int)plainTextPayloadStream.Length + notificationSignature.Length + 4); " is 123.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "            ////await signedPlainTextPayloadStream.WriteSizeAndBufferAsync(Encoding.UTF8.GetBytes(this.CryptoServices.HashAlgorithmName)' cancellationToken); " is 145.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "            await signedPlainTextPayloadStream.WriteSizeAndBufferAsync(notificationSignature' cancellationToken).ConfigureAwait(false); " is 123.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "            var encryptedVariables = await this.CryptoServices.EncryptAsync(signedPlainTextPayloadStream' cipherTextStream' cancellationToken: cancellationToken).ConfigureAwait(false); " is 172.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The length of the statement  "            using (var response = await this.HttpClient.PostAsync(builder.Uri' new StreamContent(postContent)' cancellationToken).ConfigureAwait(false)) " is 140.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DeletePayloadReferenceAsync,The length of the statement  "            using (var response = await this.HttpClient.DeleteAsync(deleteEndpoint.Uri' this.Endpoint.InboxOwnerCode' cancellationToken).ConfigureAwait(false)) " is 147.
Long Statement,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadIncomingItemsAsync,The length of the statement  "            var responseMessage = await httpClient.GetAsync(requestUri' this.Endpoint.InboxOwnerCode' cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,IronPigeon,CryptoProviderExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,ThisOrNewEncryptionVariables,The length of the statement  "                Requires.Argument(encryptionVariables.IV.Length == CryptoSettings.SymmetricAlgorithm.BlockLength' "iv"' "Incorrect length."); " is 125.
Long Statement,IronPigeon,OnlineAddressBook,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\OnlineAddressBook.cs,DownloadEndpointAsync,The length of the statement  "                if (!CryptoProviderExtensions.IsThumbprintMatch(endpoint.SigningKeyPublicMaterial' entryLocation.Fragment.Substring(1))) " is 120.
Long Statement,IronPigeon,OwnEndpointServices,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\OwnEndpointServices.cs,CreateAsync,The length of the statement  "            var endpoint = await TaskEx.Run(() => this.CreateEndpointWithKeys(cancellationToken)' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,IronPigeon,OwnEndpointServices,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\OwnEndpointServices.cs,PublishAddressBookEntryAsync,The length of the statement  "            var location = await this.CloudBlobStorage.UploadMessageAsync(ms' DateTime.MaxValue' AddressBookEntry.ContentType' cancellationToken: cancellationToken).ConfigureAwait(false); " is 175.
Long Statement,IronPigeon,Substream,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Substream.cs,ReadAsync,The length of the statement  "            int bytesRead = await this.underlyingStream.ReadAsync(buffer' offset' Math.Min(count' (int)bytesRemaining)' cancellationToken).ConfigureAwait(false); " is 149.
Long Statement,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,SerializeDataContractAsBase64Async,The length of the statement  "                await writer.WriteLineAsync(entireBase64.Substring(i' Math.Min(MaxLineLength' entireBase64.Length - i))).ConfigureAwait(false); " is 127.
Long Statement,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,LookupAsync,The length of the statement  "            var results = await Task.WhenAll(addressBooks.Select(ab => ab.LookupAsync(identifier' cancellationToken))).ConfigureAwait(false); " is 129.
Long Statement,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,ApplyNoCachePolicy,The length of the statement  "            // The no-cache headers don't seem to impact the client at all' but perhaps they prevent any intermediaries from caching? " is 121.
Long Statement,IronPigeon.Providers,GoogleUrlShortener,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Providers\GoogleUrlShortener.cs,ShortenAsync,The length of the statement  "            var postResponse = await this.HttpClient.PostAsync(ShorteningService' requestContent' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,IronPigeon.Providers,RelayCloudBlobStorageProvider,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Providers\RelayCloudBlobStorageProvider.cs,UploadMessageAsync,The length of the statement  "            var response = await this.HttpClient.PostAsync(this.BlobPostUrl.AbsoluteUri + "?lifetimeInMinutes=" + lifetime' httpContent).ConfigureAwait(false); " is 147.
Long Statement,IronPigeon.Providers,TwitterAddressBook,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Providers\TwitterAddressBook.cs,LookupAsync,The length of the statement  "                var entryLocation = await this.DiscoverAddressBookEntryUrlAsync(identifier.Substring(1)' cancellationToken).ConfigureAwait(false); " is 130.
Long Statement,IronPigeon.Providers,TwitterAddressBook,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Providers\TwitterAddressBook.cs,DiscoverAddressBookEntryUrlAsync,The length of the statement  "            Uri twitterUserProfileLocation = new Uri(string.Format(CultureInfo.InvariantCulture' TwitterUriFormattingString' Uri.EscapeDataString(twitterUsername))); " is 153.
Long Statement,IronPigeon.Providers,TwitterAddressBook,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Providers\TwitterAddressBook.cs,DiscoverAddressBookEntryUrlAsync,The length of the statement  "            using (var userProfileStream = await this.HttpClient.GetBufferedStreamAsync(twitterUserProfileLocation' cancellationToken).ConfigureAwait(false)) " is 145.
Magic Number,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadAsync,The following statement contains a magic number: const int MaxAttempts = 2;
Magic Number,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,DownloadPayloadReferenceAsync,The following statement contains a magic number: await responseStream.CopyToAsync(responseStreamCopy' 4096' cancellationToken).ConfigureAwait(false);
Magic Number,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The following statement contains a magic number: var signedPlainTextPayloadStream = new MemoryStream((int)plainTextPayloadStream.Length + notificationSignature.Length + 4);
Magic Number,IronPigeon,Channel,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Channel.cs,PostPayloadReferenceAsync,The following statement contains a magic number: await plainTextPayloadStream.CopyToAsync(signedPlainTextPayloadStream' 4096' cancellationToken).ConfigureAwait(false);
Magic Number,IronPigeon,CryptoSettings,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: switch (securityLevel)              {                  case SecurityLevel.Minimum:                      this.SymmetricKeySize = 128;                      this.AsymmetricKeySize = 512;                      this.SymmetricHashAlgorithm = HashAlgorithm.Sha1;                      break;                  case SecurityLevel.Maximum:                      this.SymmetricKeySize = 256;                      this.AsymmetricKeySize = 4096;                      this.SymmetricHashAlgorithm = HashAlgorithm.Sha256;                      break;                  default:                      throw new ArgumentException();              }
Magic Number,IronPigeon,CryptoSettings,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: switch (securityLevel)              {                  case SecurityLevel.Minimum:                      this.SymmetricKeySize = 128;                      this.AsymmetricKeySize = 512;                      this.SymmetricHashAlgorithm = HashAlgorithm.Sha1;                      break;                  case SecurityLevel.Maximum:                      this.SymmetricKeySize = 256;                      this.AsymmetricKeySize = 4096;                      this.SymmetricHashAlgorithm = HashAlgorithm.Sha256;                      break;                  default:                      throw new ArgumentException();              }
Magic Number,IronPigeon,CryptoSettings,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: switch (securityLevel)              {                  case SecurityLevel.Minimum:                      this.SymmetricKeySize = 128;                      this.AsymmetricKeySize = 512;                      this.SymmetricHashAlgorithm = HashAlgorithm.Sha1;                      break;                  case SecurityLevel.Maximum:                      this.SymmetricKeySize = 256;                      this.AsymmetricKeySize = 4096;                      this.SymmetricHashAlgorithm = HashAlgorithm.Sha256;                      break;                  default:                      throw new ArgumentException();              }
Magic Number,IronPigeon,CryptoSettings,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoSettings.cs,ApplySecurityLevel,The following statement contains a magic number: switch (securityLevel)              {                  case SecurityLevel.Minimum:                      this.SymmetricKeySize = 128;                      this.AsymmetricKeySize = 512;                      this.SymmetricHashAlgorithm = HashAlgorithm.Sha1;                      break;                  case SecurityLevel.Maximum:                      this.SymmetricKeySize = 256;                      this.AsymmetricKeySize = 4096;                      this.SymmetricHashAlgorithm = HashAlgorithm.Sha256;                      break;                  default:                      throw new ArgumentException();              }
Magic Number,IronPigeon,CryptoProviderExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,EncryptAsync,The following statement contains a magic number: await plaintext.CopyToAsync(cryptoStream' 4096' cancellationToken).ConfigureAwait(false);
Magic Number,IronPigeon,CryptoProviderExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,DecryptAsync,The following statement contains a magic number: await ciphertext.CopyToAsync(cryptoStream' 4096' cancellationToken).ConfigureAwait(false);
Magic Number,IronPigeon,CryptoProviderExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\CryptoProviderExtensions.cs,NewSymmetricEncryptionVariables,The following statement contains a magic number: byte[] key = WinRTCrypto.CryptographicBuffer.GenerateRandom(cryptoProvider.SymmetricKeySize / 8);
Magic Number,IronPigeon,OwnEndpoint,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\OwnEndpoint.cs,SaveAsync,The following statement contains a magic number: return ms.CopyToAsync(target' 4096' cancellationToken);
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: base64WebSafe.IndexOfAny(WebSafeSpecificBase64Characters) < 0 && (base64WebSafe.Length % 4) == 0
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: base64.Append('='' 4 - (base64.Length % 4));
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: base64.Append('='' 4 - (base64.Length % 4));
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,FromBase64WebSafe,The following statement contains a magic number: base64.Length % 4 > 0
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,SerializeDataContractAsBase64Async,The following statement contains a magic number: const int MaxLineLength = 79;
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,WriteSizeAndStreamAsync,The following statement contains a magic number: await sourceStream.CopyToAsync(stream' 4096' cancellationToken).ConfigureAwait(false);
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,GuessHashAlgorithmFromLength,The following statement contains a magic number: switch (hashLengthInBytes)              {                  case 160 / 8:                      return HashAlgorithm.Sha1;                  case 256 / 8:                      return HashAlgorithm.Sha256;                  default:                      throw new NotSupportedException();              }
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,GuessHashAlgorithmFromLength,The following statement contains a magic number: switch (hashLengthInBytes)              {                  case 160 / 8:                      return HashAlgorithm.Sha1;                  case 256 / 8:                      return HashAlgorithm.Sha256;                  default:                      throw new NotSupportedException();              }
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,GuessHashAlgorithmFromLength,The following statement contains a magic number: switch (hashLengthInBytes)              {                  case 160 / 8:                      return HashAlgorithm.Sha1;                  case 256 / 8:                      return HashAlgorithm.Sha256;                  default:                      throw new NotSupportedException();              }
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,GuessHashAlgorithmFromLength,The following statement contains a magic number: switch (hashLengthInBytes)              {                  case 160 / 8:                      return HashAlgorithm.Sha1;                  case 256 / 8:                      return HashAlgorithm.Sha256;                  default:                      throw new NotSupportedException();              }
Magic Number,IronPigeon,Utilities,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon\Utilities.cs,ReadAsBufferedStreamAsync,The following statement contains a magic number: await stream.CopyToAsync(memoryStream' 4096' cancellationToken).ConfigureAwait(false);
