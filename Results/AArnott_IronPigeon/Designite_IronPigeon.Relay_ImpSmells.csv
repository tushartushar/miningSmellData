Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,System.Web.Mvc,HtmlExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Code\HtmlExtensions.cs,AbsoluteAction,The method has 5 parameters. Parameters: url' actionName' controllerName' routeValues' protocol
Long Identifier,IronPigeon.Relay.Controllers,OAuthController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\OAuthController.cs,SaveAccountInfoAsync,The length of the parameter previouslyRecordedEmailAddresses is 32.
Long Identifier,IronPigeon.Relay.Models,PushNotificationContext,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Models\PushNotificationContext.cs,GetAsync,The length of the parameter clientPackageSecurityIdentifier is 31.
Long Statement,IronPigeon.Relay,AzureStorageConfig,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\App_Start\AzureStorageConfig.cs,RegisterConfiguration,The length of the statement  "            var storage = CloudStorageAccount.Parse(ConfigurationManager.ConnectionStrings[DefaultCloudConfigurationName].ConnectionString); " is 128.
Long Statement,IronPigeon.Relay,AuthorizationServerHost,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Code\AuthorizationServerHost.cs,GetClient,The length of the statement  "                    ConfigurationManager.AppSettings["TrustedClientSecret"]' // the client secret technically isn't necessary since we only use implicit grants. " is 140.
Long Statement,IronPigeon.Relay,GooglePushNotifications,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Code\GooglePushNotifications.cs,PushGoogleRawNotificationAsync,The length of the statement  "            pushNotifyRequest.Headers.TryAddWithoutValidation("Authorization"' "key=" + this.GoogleApiKey); // non-standard format means we can't use normal type " is 149.
Long Statement,IronPigeon.Relay,MvcApplication,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Global.asax.cs,Application_Start,The length of the statement  "                PushBroker.RegisterAppleService(new ApplePushChannelSettings(appleCert' ConfigurationManager.AppSettings["AppleAPNSCertPassword"])); " is 132.
Long Statement,System.Web.Mvc,HtmlExtensions,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Code\HtmlExtensions.cs,AbsoluteAction,The length of the statement  "            var builder = new UriBuilder(url.Action(actionName' controllerName' new RouteValueDictionary(routeValues)' protocol' null)); " is 124.
Long Statement,IronPigeon.Relay.Controllers,AddressBookController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\AddressBookController.cs,Index,The length of the statement  "            if (this.Request.AcceptTypes != null && !this.Request.AcceptTypes.Contains(AddressBookEntry.ContentType) && this.Request.AcceptTypes.Contains("text/html")) " is 155.
Long Statement,IronPigeon.Relay.Controllers,BlobController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\BlobController.cs,Post,The length of the statement  "            var blobLocation = await this.CloudBlobStorageProvider.UploadMessageAsync(content' expirationUtc' contentType' contentEncoding); " is 128.
Long Statement,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,PushNotifyInboxMessageWinPhoneAsync,The length of the statement  "                        if (inbox.LastWinPhone8PushNotificationUtc.HasValue && inbox.LastAuthenticatedInteractionUtc.HasValue && inbox.LastWinPhone8PushNotificationUtc.Value > inbox.LastAuthenticatedInteractionUtc.Value) " is 196.
Long Statement,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,PushNotifyInboxMessageGoogleAsync,The length of the statement  "                var notifications = new GooglePushNotifications(this.HttpClient' ConfigurationManager.AppSettings["GoogleApiKey"]' inbox.GoogleCloudMessagingRegistrationId); " is 157.
Long Statement,IronPigeon.Relay.Controllers,OAuthController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\OAuthController.cs,Authorize,The length of the statement  "            var scopes = new[] { "wl.signin"' "wl.basic"' "wl.emails" }; // this is a subset of what the client app asks for' ensuring automatic approval. " is 142.
Long Statement,IronPigeon.Relay.Controllers,OAuthController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\OAuthController.cs,AuthorizeWithMicrosoftAccount,The length of the statement  "            var response = this.authorizationServer.PrepareApproveAuthorizationRequest(incomingAuthzRequest' microsoftAccountInfo.Id' new[] { "AddressBook" }); " is 147.
Long Statement,IronPigeon.Relay.Controllers,OAuthController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\OAuthController.cs,SaveAccountInfoAsync,The length of the statement  "            Requires.That(microsoftAccountInfo.Emails != null && microsoftAccountInfo.Emails.Count > 0' "microsoftAccountInfo"' "No emails were provided by Live Connect."); " is 160.
Long Statement,IronPigeon.Relay.Models,PushNotificationContext,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Models\PushNotificationContext.cs,GetAsync,The length of the statement  "            Requires.Argument(clientPackageSecurityIdentifier == null || clientPackageSecurityIdentifier.StartsWith(PushNotificationClientEntity.SchemePrefix)' "clientPackageSecurityIdentifier"' "Prefix {0} not found"' PushNotificationClientEntity.SchemePrefix); " is 250.
Empty Catch Block,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,RetrieveInboxItemsAsync,The method has an empty catch block.
Magic Number,IronPigeon.Relay,GooglePushNotifications,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Code\GooglePushNotifications.cs,PushGoogleRawNotificationAsync,The following statement contains a magic number: var value = new GooglePushObject              {                  CollapseKey = "NewMessages"'                  RegistrationIds = new[] { this.RegistrationId }'                  TimeToLive = (long)TimeSpan.FromDays(7).TotalSeconds'              };
Magic Number,IronPigeon.Relay.Code,MicrosoftTools,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Code\MicrosoftTools.cs,ByteArrayToString,The following statement contains a magic number: StringBuilder hex = new StringBuilder(ba.Length * 2);
Magic Number,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,PurgeExpiredAsync,The following statement contains a magic number: var searchExpiredBlobs = new TransformManyBlock<CloudBlobContainer' ICloudBlob>(                  async c =>                  {                      try                      {                          var results = await c.ListBlobsSegmentedAsync(                              string.Empty'                              useFlatBlobListing: true'                              pageSize: 50'                              details: BlobListingDetails.Metadata'                              options: new BlobRequestOptions()'                              operationContext: null);                          return from blob in results.OfType<ICloudBlob>()                                 let expires = DateTime.Parse(blob.Metadata[ExpirationDateMetadataKey])                                 where expires < deleteBlobsExpiringBefore                                 select blob;                      }                      catch (StorageException ex)                      {                          var webException = ex.InnerException as WebException;                          if (webException != null)                          {                              var httpResponse = (HttpWebResponse)webException.Response;                              if (httpResponse.StatusCode == HttpStatusCode.NotFound)                              {                                  // it's legit that some tests never created the container to begin with.                                  return Enumerable.Empty<ICloudBlob>();                              }                          }                            throw;                      }                  }'                  new ExecutionDataflowBlockOptions                  {                      BoundedCapacity = 4'                  });
Magic Number,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,PurgeExpiredAsync,The following statement contains a magic number: var searchExpiredBlobs = new TransformManyBlock<CloudBlobContainer' ICloudBlob>(                  async c =>                  {                      try                      {                          var results = await c.ListBlobsSegmentedAsync(                              string.Empty'                              useFlatBlobListing: true'                              pageSize: 50'                              details: BlobListingDetails.Metadata'                              options: new BlobRequestOptions()'                              operationContext: null);                          return from blob in results.OfType<ICloudBlob>()                                 let expires = DateTime.Parse(blob.Metadata[ExpirationDateMetadataKey])                                 where expires < deleteBlobsExpiringBefore                                 select blob;                      }                      catch (StorageException ex)                      {                          var webException = ex.InnerException as WebException;                          if (webException != null)                          {                              var httpResponse = (HttpWebResponse)webException.Response;                              if (httpResponse.StatusCode == HttpStatusCode.NotFound)                              {                                  // it's legit that some tests never created the container to begin with.                                  return Enumerable.Empty<ICloudBlob>();                              }                          }                            throw;                      }                  }'                  new ExecutionDataflowBlockOptions                  {                      BoundedCapacity = 4'                  });
Magic Number,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,PurgeExpiredAsync,The following statement contains a magic number: var deleteBlobBlock = new ActionBlock<ICloudBlob>(                  blob =>                  {                      Interlocked.Increment(ref purgedBlobCount);                      return blob.DeleteAsync();                  }'                  new ExecutionDataflowBlockOptions                  {                      MaxDegreeOfParallelism = 4'                      BoundedCapacity = 100'                  });
Magic Number,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,PurgeExpiredAsync,The following statement contains a magic number: var deleteBlobBlock = new ActionBlock<ICloudBlob>(                  blob =>                  {                      Interlocked.Increment(ref purgedBlobCount);                      return blob.DeleteAsync();                  }'                  new ExecutionDataflowBlockOptions                  {                      MaxDegreeOfParallelism = 4'                      BoundedCapacity = 100'                  });
Magic Number,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,PostNotificationAsync,The following statement contains a magic number: var blob = directory.GetBlockBlobReference(Utilities.CreateRandomWebSafeName(24));
Magic Number,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,PushChannelAsync,The following statement contains a magic number: Requires.Argument(content == null || content.Length <= 4096' "content"' "Push content too large");
Magic Number,IronPigeon.Relay.Controllers,InboxController,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Controllers\InboxController.cs,RetrieveInboxItemsAsync,The following statement contains a magic number: var directoryListing = await directory.ListBlobsSegmentedAsync(                          useFlatBlobListing: true'                          pageSize: 50'                          details: BlobListingDetails.Metadata'                          options: new BlobRequestOptions()'                          operationContext: null);
Magic Number,IronPigeon.Relay.Models,InboxContext,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Relay\Models\InboxContext.cs,SaveChangesWithMergeAsync,The following statement contains a magic number: const int MaxRetries = 5;
