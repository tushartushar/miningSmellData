Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,IronPigeon.Tests,InteropTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\InteropTests.cs,SendMessageAsync,The method has 5 parameters. Parameters: cloudStorage' inboxMock' senderCrypto' senderEndpoint' receiverEndpoint
Long Parameter List,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,SendMessageAsync,The method has 6 parameters. Parameters: cloudBlobStorage' inboxMock' cryptoProvider' sender' receiver' message
Long Parameter List,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,ReceiveMessageAsync,The method has 5 parameters. Parameters: cloudBlobStorage' inboxMock' cryptoProvider' receiver' expectMessage
Long Parameter List,IronPigeon.Tests.Mocks,CloudBlobStorageProviderMock,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Mocks\CloudBlobStorageProviderMock.cs,UploadMessageAsync,The method has 6 parameters. Parameters: encryptedMessageContent' expiration' contentType' contentEncoding' bytesCopiedProgress' cancellationToken
Long Statement,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PostAsyncBadArgs,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => channel.PostAsync(null' Valid.OneEndpoint' Valid.ExpirationUtc).GetAwaiter().GetResult()); " is 133.
Long Statement,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PostAsyncBadArgs,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => channel.PostAsync(Valid.Message' null' Valid.ExpirationUtc).GetAwaiter().GetResult()); " is 129.
Long Statement,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PostAsyncBadArgs,The length of the statement  "            Assert.Throws<ArgumentException>(() => channel.PostAsync(Valid.Message' Valid.EmptyEndpoints' Valid.ExpirationUtc).GetAwaiter().GetResult()); " is 141.
Long Statement,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PostAsyncBadArgs,The length of the statement  "            Assert.Throws<ArgumentException>(() => channel.PostAsync(Valid.Message' Valid.OneEndpoint' Invalid.ExpirationUtc).GetAwaiter().GetResult()); " is 140.
Long Statement,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PostAndReceiveAsync,The length of the statement  "                var messages = await this.ReceiveMessageAsync(cloudStorage' inboxMock' new CryptoSettings(SecurityLevel.Minimum)' receiver); " is 124.
Long Statement,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PayloadReferenceTamperingTests,The length of the statement  "                    await this.SendMessageAsync(cloudStorage' inboxMock' this.desktopCryptoProvider' sender' receiver.PublicEndpoint' sentMessage); " is 127.
Long Statement,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PayloadTamperingTests,The length of the statement  "                    await this.SendMessageAsync(cloudStorage' inboxMock' this.desktopCryptoProvider' sender' receiver.PublicEndpoint' sentMessage); " is 127.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new PayloadReference(null' Valid.Hash' Valid.HashAlgorithmName' Valid.Key' Valid.IV' Valid.ExpirationUtc)); " is 150.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new PayloadReference(Valid.Location' null' Valid.HashAlgorithmName' Valid.Key' Valid.IV' Valid.ExpirationUtc)); " is 154.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new PayloadReference(Valid.Location' Valid.Hash' null' Valid.Key' Valid.IV' Valid.ExpirationUtc)); " is 141.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentException>(() => new PayloadReference(Valid.Location' Valid.Hash' string.Empty' Valid.Key' Valid.IV' Valid.ExpirationUtc)); " is 145.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new PayloadReference(Valid.Location' Valid.Hash' Valid.HashAlgorithmName' null' Valid.Key' Valid.ExpirationUtc)); " is 156.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new PayloadReference(Valid.Location' Valid.Hash' Valid.HashAlgorithmName' Valid.Key' null' Valid.ExpirationUtc)); " is 156.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentException>(() => new PayloadReference(Valid.Location' Valid.Hash' Valid.HashAlgorithmName' Valid.Key' Valid.IV' Invalid.ExpirationUtc)); " is 158.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentException>(() => new PayloadReference(Valid.Location' Invalid.Hash' Valid.HashAlgorithmName' Valid.Key' Valid.IV' Valid.ExpirationUtc)); " is 158.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentException>(() => new PayloadReference(Valid.Location' Valid.Hash' Valid.HashAlgorithmName' Invalid.Key' Valid.IV' Valid.ExpirationUtc)); " is 158.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,CtorInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentException>(() => new PayloadReference(Valid.Location' Valid.Hash' Valid.HashAlgorithmName' Valid.Key' Invalid.IV' Valid.ExpirationUtc)); " is 158.
Long Statement,IronPigeon.Tests,PayloadReferenceTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\PayloadReferenceTests.cs,Ctor,The length of the statement  "            var reference = new PayloadReference(Valid.Location' Valid.Hash' Valid.HashAlgorithmName' Valid.Key' Valid.IV' Valid.ExpirationUtc); " is 132.
Long Statement,IronPigeon.Tests.Providers,TwitterAddressBookTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Providers\TwitterAddressBookTests.cs,LookupEntryAsyncExistingUserReplacedEndpoint,The length of the statement  "            Assert.Throws<BadAddressBookEntryException>(() => this.twitter.LookupAsync("@PrivacyNotFound").GetAwaiter().GetResult()); " is 121.
Long Statement,IronPigeon.Tests.Mocks,HttpMessageHandlerRecorder,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Mocks\HttpMessageHandlerRecorder.cs,SetTestName,The length of the statement  "            Verify.Operation(this.recordingPath.Contains(TestNameMacro)' "The scenario doesn't have a {TestName} macro to replace."); " is 121.
Long Statement,IronPigeon.Tests.Mocks,HttpMessageHandlerRecorder,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Mocks\HttpMessageHandlerRecorder.cs,GetRecordedFileNames,The length of the statement  "            string persistedUri = request.Method + " " + request.RequestUri.GetComponents(UriComponents.AbsoluteUri & ~UriComponents.Fragment' UriFormat.Unescaped); " is 152.
Long Statement,IronPigeon.Tests.Mocks,HttpMessageHandlerRecorder,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Mocks\HttpMessageHandlerRecorder.cs,RecordSendAsync,The length of the statement  "                        await writer.WriteLineAsync(string.Format(CultureInfo.InvariantCulture' "{0}:{1}"' header.Key' string.Join("\t"' header.Value))); " is 129.
Long Statement,IronPigeon.Tests.Mocks,InboxHttpHandlerMock,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Mocks\InboxHttpHandlerMock.cs,HttpHandler,The length of the statement  "                var recipient = this.recipients.Keys.FirstOrDefault(r => r.MessageReceivingEndpoint.AbsolutePath == request.RequestUri.AbsolutePath); " is 133.
Long Statement,IronPigeon.Tests.Mocks,InboxHttpHandlerMock,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Mocks\InboxHttpHandlerMock.cs,HttpHandler,The length of the statement  "                recipient = this.recipients.Keys.FirstOrDefault(r => request.RequestUri.AbsolutePath.StartsWith(r.MessageReceivingEndpoint.AbsolutePath + "/")); " is 144.
Long Statement,IronPigeon.Tests.Mocks,LoggerMock,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Mocks\LoggerMock.cs,WriteLine,The length of the statement  "            string message = string.Format(CultureInfo.CurrentCulture' "{0}: {1}"' unformattedMessage' BitConverter.ToString(buffer).Replace("-"' string.Empty).ToLowerInvariant()); " is 168.
Magic Number,IronPigeon.Tests,AddressBookEntryTest,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\AddressBookEntryTest.cs,ExtractEndpointDetectsTampering,The following statement contains a magic number: i < 100
Magic Number,IronPigeon.Tests,EllipticCurveCryptoPatterns,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\EllipticCurveCryptoPatterns.cs,ECAsymmetricSigningAndEncryption,The following statement contains a magic number: var bob = new ECDsaCng(521);
Magic Number,IronPigeon.Tests,EllipticCurveCryptoPatterns,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\EllipticCurveCryptoPatterns.cs,ECAsymmetricSigningAndEncryption,The following statement contains a magic number: var alice = new ECDsaCng(521);
Magic Number,IronPigeon.Tests,EllipticCurveCryptoPatterns,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\EllipticCurveCryptoPatterns.cs,ECAsymmetricSigningAndEncryption,The following statement contains a magic number: cryptoStream.Write(new byte[] { 0x1' 0x3' 0x2 }' 0' 3);
Magic Number,IronPigeon.Tests,EllipticCurveCryptoPatterns,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\EllipticCurveCryptoPatterns.cs,ECAsymmetricSigningAndEncryption,The following statement contains a magic number: byte[] secretMessage = new byte[1024];
Magic Number,IronPigeon.Tests,InteropTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\InteropTests.cs,CrossSecurityLevelAddressBookExchange,The following statement contains a magic number: var highLevelCrypto = new CryptoSettings(SecurityLevel.Minimum) { AsymmetricKeySize = 2048 };
Magic Number,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PayloadReferenceTamperingTests,The following statement contains a magic number: Task.Run(async delegate              {                  var sender = Valid.GenerateOwnEndpoint(this.desktopCryptoProvider);                  var receiver = Valid.GenerateOwnEndpoint(this.desktopCryptoProvider);                    for (int i = 0; i < 100; i++)                  {                      var cloudStorage = new Mocks.CloudBlobStorageProviderMock();                      var inboxMock = new Mocks.InboxHttpHandlerMock(new[] { receiver.PublicEndpoint });                        var sentMessage = Valid.Message;                      await this.SendMessageAsync(cloudStorage' inboxMock' this.desktopCryptoProvider' sender' receiver.PublicEndpoint' sentMessage);                        // Tamper with the payload reference.                      TestUtilities.ApplyFuzzing(inboxMock.Inboxes[receiver.PublicEndpoint][0].Item2' 1);                        var receivedMessages =                          await this.ReceiveMessageAsync(cloudStorage' inboxMock' this.desktopCryptoProvider' receiver' expectMessage: false);                      Assert.Equal(0' receivedMessages.Count);                  }              }).GetAwaiter().GetResult();
Magic Number,IronPigeon.Tests,ChannelTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\ChannelTests.cs,PayloadTamperingTests,The following statement contains a magic number: Task.Run(async delegate              {                  var sender = Valid.GenerateOwnEndpoint(this.desktopCryptoProvider);                  var receiver = Valid.GenerateOwnEndpoint(this.desktopCryptoProvider);                    for (int i = 0; i < 100; i++)                  {                      var cloudStorage = new Mocks.CloudBlobStorageProviderMock();                      var inboxMock = new Mocks.InboxHttpHandlerMock(new[] { receiver.PublicEndpoint });                        var sentMessage = Valid.Message;                      await this.SendMessageAsync(cloudStorage' inboxMock' this.desktopCryptoProvider' sender' receiver.PublicEndpoint' sentMessage);                        // Tamper with the payload itself.                      TestUtilities.ApplyFuzzing(cloudStorage.Blobs.Single().Value' 1);                        var receivedMessages =                          await this.ReceiveMessageAsync(cloudStorage' inboxMock' this.desktopCryptoProvider' receiver' expectMessage: false);                      Assert.Equal(0' receivedMessages.Count);                  }              }).GetAwaiter().GetResult();
Magic Number,IronPigeon.Tests,CryptoProviderTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Providers\CryptoProviderTests.cs,SymmetricEncryptionRoundtrip,The following statement contains a magic number: byte[] plaintext = new byte[10000];
Magic Number,IronPigeon.Tests,CryptoProviderTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Providers\CryptoProviderTests.cs,SymmetricEncryptionRoundtripExplicitKeyAndIV,The following statement contains a magic number: byte[] key = new byte[this.CryptoProvider.SymmetricKeySize / 8];
Magic Number,IronPigeon.Tests,CryptoProviderTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Providers\CryptoProviderTests.cs,SymmetricEncryptionRoundtripExplicitKeyAndIV,The following statement contains a magic number: byte[] plaintext = new byte[10000];
Magic Number,IronPigeon.Tests,CryptoProviderTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Providers\CryptoProviderTests.cs,SymmetricEncryptionAsStreamRoundtrip,The following statement contains a magic number: byte[] plaintext = new byte[10000];
Magic Number,IronPigeon.Tests,UtilitiesTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\UtilitiesTests.cs,Base64WebSafe,The following statement contains a magic number: var buffer = new byte[15];
Magic Number,IronPigeon.Tests,UtilitiesTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\UtilitiesTests.cs,ReadStreamWithProgress,The following statement contains a magic number: var largeStream = new MemoryStream(new byte[1024 * 1024]);
Magic Number,IronPigeon.Tests,UtilitiesTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\UtilitiesTests.cs,ReadStreamWithProgress,The following statement contains a magic number: var largeStream = new MemoryStream(new byte[1024 * 1024]);
Magic Number,IronPigeon.Tests.Providers,AzureBlobStorageTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Providers\AzureBlobStorageTests.cs,PurgeBlobsExpiringBeforeAsync,The following statement contains a magic number: this.provider.PurgeBlobsExpiringBeforeAsync(DateTime.UtcNow.AddDays(7)).GetAwaiter().GetResult();
Magic Number,IronPigeon.Tests.Providers,RelayCloudBlobStorageProviderTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Providers\RelayCloudBlobStorageProviderTests.cs,UploadTest,The following statement contains a magic number: var location = this.provider.UploadMessageAsync(                  content' DateTime.UtcNow + TimeSpan.FromMinutes(5.5)' "application/testcontent"' "testencoding").Result;
Magic Number,IronPigeon.Tests.Providers,RelayCloudBlobStorageProviderTests,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Providers\RelayCloudBlobStorageProviderTests.cs,UploadTest,The following statement contains a magic number: location = this.provider.UploadMessageAsync(                  content' DateTime.UtcNow + TimeSpan.FromMinutes(5.5)' "application/testcontent"' "testencoding"' progress).Result;
Magic Number,IronPigeon.Tests.Mocks,HttpMessageHandlerRecorder,D:\research\architectureSmells\repos\AArnott_IronPigeon\src\IronPigeon.Desktop.Tests\Mocks\HttpMessageHandlerRecorder.cs,PlaybackSendAsync,The following statement contains a magic number: var parts = line.Split(new[] { ':' }' 2);
