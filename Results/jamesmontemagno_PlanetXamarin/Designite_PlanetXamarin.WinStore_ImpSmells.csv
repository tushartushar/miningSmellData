Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,PlanetXamarin.WinStore.PlatformSpecific,BooleanToVisibilityConverter,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\PlatformSpecific\BooleanToVisibilityConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,PlanetXamarin.WinStore.PlatformSpecific,BooleanToVisibilityConverter,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\PlatformSpecific\BooleanToVisibilityConverter.cs,ConvertBack,The method has 4 parameters.
Long Statement,PlanetXamarin.WinStore,MasterPage,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\MasterPage.xaml.cs,ItemListView_SelectionChanged,The length of the statement  "		this.Browser.NavigateToString (WebBrowserHelper.WrapHtml (DefaultViewModel.SelectedFeedItem.Description' Browser.Width)); " is 121.
Long Statement,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 240.
Long Statement,PlanetXamarin.WinStore.Common,ObservableDictionary,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\ObservableDictionary.cs,Remove,The length of the statement  "	if (this._dictionary.TryGetValue (item.Key' out currentValue) && Object.Equals (item.Value' currentValue) && this._dictionary.Remove (item.Key)) { " is 146.
Long Statement,PlanetXamarin.WinStore.Common,SuspensionManager,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,PlanetXamarin.WinStore.Common,SuspensionManager,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Long Statement,PlanetXamarin.WinStore.PlatformSpecific,WebBrowserHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\PlatformSpecific\WebBrowserHelper.cs,HtmlHeader,The length of the statement  "	head.Append (string.Format ("body {{background:{0};color:{1};font-family:'Segoe WP';font-size:{2}pt;margin:0;padding:0 }}"' "#1D1D1D"' "#FFFFFF"' (double)17.0f)); " is 162.
Complex Conditional,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Magic Number,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	e.Handled = true;  	this.GoBackCommand.Execute (null);  } else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
Magic Number,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	e.Handled = true;  	this.GoBackCommand.Execute (null);  } else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
Magic Number,PlanetXamarin.WinStore.Common,NavigationHelper,D:\newReposJune17\jamesmontemagno_PlanetXamarin\PlanetXamarin.WinStore\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
