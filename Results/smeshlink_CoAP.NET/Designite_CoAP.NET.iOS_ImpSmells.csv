Implementation smell,Namespace,Class,File,Method,Description
Long Method,CoAP,MessageEncoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The method has 115 lines of code.
Complex Method,CoAP,Code,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Code.cs,ToString,Cyclomatic complexity of the method is 31
Complex Method,CoAP,LinkFormat,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\LinkFormat.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,CoAP,LinkFormat,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\LinkFormat.cs,Matches,Cyclomatic complexity of the method is 14
Complex Method,CoAP,Message,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Message.cs,Equals,Cyclomatic complexity of the method is 11
Complex Method,CoAP,Option,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,ToString,Cyclomatic complexity of the method is 23
Complex Method,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,Cyclomatic complexity of the method is 16
Complex Method,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,Cyclomatic complexity of the method is 16
Complex Method,CoAP,MessageEncoder03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,Cyclomatic complexity of the method is 12
Complex Method,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,Cyclomatic complexity of the method is 20
Complex Method,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,Cyclomatic complexity of the method is 20
Complex Method,CoAP,MessageEncoder08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,Cyclomatic complexity of the method is 10
Complex Method,CoAP,MessageEncoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,Cyclomatic complexity of the method is 14
Complex Method,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,Cyclomatic complexity of the method is 9
Complex Method,CoAP,MessageEncoder13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,Cyclomatic complexity of the method is 9
Complex Method,CoAP,MessageEncoder18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,Cyclomatic complexity of the method is 8
Long Statement,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,FromHexStream,The length of the statement  "                    Int16 high = Int16.Parse(hex[i].ToString()' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture); " is 140.
Long Statement,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,FromHexStream,The length of the statement  "                    Int16 low = Int16.Parse(hex[i + 1].ToString()' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture); " is 143.
Complex Conditional,CoAP,LinkFormat,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\LinkFormat.cs,Serialize,The conditional expression  "(!resource.Hidden && (resource.Name.Length > 0) || !recursive)                   && Matches(resource' query)"  is complex.
Complex Conditional,CoAP,Request,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Request.cs,WaitForResponse,The conditional expression  "_currentResponse == null &&                      !IsCancelled && !IsTimedOut && !IsRejected"  is complex.
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ToHexString,The following statement contains a magic number: StringBuilder builder = new StringBuilder(data.Length * 3);
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ToHexString,The following statement contains a magic number: builder.Append(digits[(data[i] >> 4) & 0xF]);
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,FromHexStream,The following statement contains a magic number: hex.Length % 2 == 1
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,FromHexStream,The following statement contains a magic number: Byte[] tmp = new Byte[hex.Length / 2];
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,FromHexStream,The following statement contains a magic number: tmp[j++] = Convert.ToByte(high * 16 + low);
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ComputeHash,The following statement contains a magic number: const Int32 p = 16777619;
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ComputeHash,The following statement contains a magic number: Int32 hash = (Int32)2166136261;
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ComputeHash,The following statement contains a magic number: hash += hash << 13;
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ComputeHash,The following statement contains a magic number: hash ^= hash >> 7;
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ComputeHash,The following statement contains a magic number: hash += hash << 3;
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ComputeHash,The following statement contains a magic number: hash ^= hash >> 17;
Magic Number,CoAP.Util,ByteArrayUtils,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Util\ByteArrayUtils.cs,ComputeHash,The following statement contains a magic number: hash += hash << 5;
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,DecodeSZX,The following statement contains a magic number: return 1 << (szx + 4);
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,EncodeSZX,The following statement contains a magic number: blockSize < 16
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,EncodeSZX,The following statement contains a magic number: return 6;
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,EncodeSZX,The following statement contains a magic number: blockSize > 1024
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,EncodeSZX,The following statement contains a magic number: return (Int32)(Math.Log(blockSize) / Math.Log(2)) - 4;
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,EncodeSZX,The following statement contains a magic number: return (Int32)(Math.Log(blockSize) / Math.Log(2)) - 4;
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,ValidSZX,The following statement contains a magic number: return (szx >= 0 && szx <= 6);
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,Encode,The following statement contains a magic number: value |= (m ? 1 : 0) << 3;
Magic Number,CoAP,BlockOption,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\BlockOption.cs,Encode,The following statement contains a magic number: value |= num << 4;
Magic Number,CoAP,Code,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Code.cs,GetResponseClass,The following statement contains a magic number: return (code >> 5) & 0x7;
Magic Number,CoAP,Code,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Code.cs,IsRequest,The following statement contains a magic number: return (code >= 1) && (code <= 31);
Magic Number,CoAP,Code,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Code.cs,IsResponse,The following statement contains a magic number: return (code >= 64) && (code <= 191);
Magic Number,CoAP,Code,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Code.cs,IsResponse,The following statement contains a magic number: return (code >= 64) && (code <= 191);
Magic Number,CoAP,Code,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Code.cs,IsSuccess,The following statement contains a magic number: return code >= 64 && code < 96;
Magic Number,CoAP,Code,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Code.cs,IsSuccess,The following statement contains a magic number: return code >= 64 && code < 96;
Magic Number,CoAP,Code,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Code.cs,IsValid,The following statement contains a magic number: return (code >= 0) && (code <= 255);
Magic Number,CoAP,LinkFormat,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\LinkFormat.cs,Parse,The following statement contains a magic number: path = path.Substring(1' path.Length - 2);
Magic Number,CoAP,LinkFormat,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\LinkFormat.cs,Serialize,The following statement contains a magic number: linkFormat.Length > 3
Magic Number,CoAP,LinkFormat,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\LinkFormat.cs,Deserialize,The following statement contains a magic number: path = path.Substring(1' path.Length - 2);
Magic Number,CoAP,Message,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Message.cs,AddIfMatch,The following statement contains a magic number: opaque.Length > 8
Magic Number,CoAP,Message,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Message.cs,AddUriPath,The following statement contains a magic number: path.Length > 255
Magic Number,CoAP,Message,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Message.cs,AddUriQuery,The following statement contains a magic number: query.Length > 255
Magic Number,CoAP,Message,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Message.cs,AddLocationPath,The following statement contains a magic number: path.Length > 255
Magic Number,CoAP,Message,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Message.cs,AddLocationQuery,The following statement contains a magic number: query.Length > 255
Magic Number,CoAP,Option,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,GetHashCode,The following statement contains a magic number: const Int32 prime = 31;
Magic Number,CoAP,Option,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,IsUnsafe,The following statement contains a magic number: return ((Int32)type & 2) > 0;
Magic Number,CoAP,Int32Convertor,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,Decode,The following statement contains a magic number: iOutcome <<= 8;
Magic Number,CoAP,Int32Convertor,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,Encode,The following statement contains a magic number: value >= 1 << (i * 8) || value < 0
Magic Number,CoAP,Int32Convertor,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,Encode,The following statement contains a magic number: i < 4
Magic Number,CoAP,Int32Convertor,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,Encode,The following statement contains a magic number: ret[len - i - 1] = (Byte)(value >> i * 8);
Magic Number,CoAP,Int64Convertor,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,Decode,The following statement contains a magic number: iOutcome <<= 8;
Magic Number,CoAP,Int64Convertor,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,Encode,The following statement contains a magic number: value >= 1L << (i * 8) || value < 0L
Magic Number,CoAP,Int64Convertor,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,Encode,The following statement contains a magic number: i < 8
Magic Number,CoAP,Int64Convertor,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Option.cs,Encode,The following statement contains a magic number: ret[len - i - 1] = (Byte)(value >> i * 8);
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:  #pragma warning restore 612' 618                      return 14;                  case OptionType.Block2:                      return 13;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 13:                      return OptionType.Block2;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapOutCode,The following statement contains a magic number: switch (code)              {                  case Code.Content:                      return 80;                  default:                      return (code >> 5) * 40 + (code & 0xf);              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapOutCode,The following statement contains a magic number: switch (code)              {                  case Code.Content:                      return 80;                  default:                      return (code >> 5) * 40 + (code & 0xf);              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapOutCode,The following statement contains a magic number: switch (code)              {                  case Code.Content:                      return 80;                  default:                      return (code >> 5) * 40 + (code & 0xf);              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapInCode,The following statement contains a magic number: code == 80
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapOutMediaType,The following statement contains a magic number: switch (mediaType)              {                  case MediaType.ApplicationXObixBinary:                      return 48;                  case MediaType.ApplicationFastinfoset:                      return 49;                  case MediaType.ApplicationSoapFastinfoset:                      return 50;                  case MediaType.ApplicationJson:                      return 51;                  default:                      return mediaType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapOutMediaType,The following statement contains a magic number: switch (mediaType)              {                  case MediaType.ApplicationXObixBinary:                      return 48;                  case MediaType.ApplicationFastinfoset:                      return 49;                  case MediaType.ApplicationSoapFastinfoset:                      return 50;                  case MediaType.ApplicationJson:                      return 51;                  default:                      return mediaType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapOutMediaType,The following statement contains a magic number: switch (mediaType)              {                  case MediaType.ApplicationXObixBinary:                      return 48;                  case MediaType.ApplicationFastinfoset:                      return 49;                  case MediaType.ApplicationSoapFastinfoset:                      return 50;                  case MediaType.ApplicationJson:                      return 51;                  default:                      return mediaType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapOutMediaType,The following statement contains a magic number: switch (mediaType)              {                  case MediaType.ApplicationXObixBinary:                      return 48;                  case MediaType.ApplicationFastinfoset:                      return 49;                  case MediaType.ApplicationSoapFastinfoset:                      return 50;                  case MediaType.ApplicationJson:                      return 51;                  default:                      return mediaType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapInMediaType,The following statement contains a magic number: switch (mediaType)              {                  case 48:                      return MediaType.ApplicationXObixBinary;                  case 49:                      return MediaType.ApplicationFastinfoset;                  case 50:                      return MediaType.ApplicationSoapFastinfoset;                  case 51:                      return MediaType.ApplicationJson;                  default:                      return mediaType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapInMediaType,The following statement contains a magic number: switch (mediaType)              {                  case 48:                      return MediaType.ApplicationXObixBinary;                  case 49:                      return MediaType.ApplicationFastinfoset;                  case 50:                      return MediaType.ApplicationSoapFastinfoset;                  case 51:                      return MediaType.ApplicationJson;                  default:                      return mediaType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapInMediaType,The following statement contains a magic number: switch (mediaType)              {                  case 48:                      return MediaType.ApplicationXObixBinary;                  case 49:                      return MediaType.ApplicationFastinfoset;                  case 50:                      return MediaType.ApplicationSoapFastinfoset;                  case 51:                      return MediaType.ApplicationJson;                  default:                      return mediaType;              }
Magic Number,CoAP,Draft03,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,MapInMediaType,The following statement contains a magic number: switch (mediaType)              {                  case 48:                      return MediaType.ApplicationXObixBinary;                  case 49:                      return MediaType.ApplicationFastinfoset;                  case 50:                      return MediaType.ApplicationSoapFastinfoset;                  case 51:                      return MediaType.ApplicationJson;                  default:                      return mediaType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: switch (optionType)              {                  case OptionType.Reserved:                      return 0;                  case OptionType.ContentType:                      return 1;                  case OptionType.MaxAge:                      return 2;                  case OptionType.ProxyUri:                      return 3;                  case OptionType.ETag:                      return 4;                  case OptionType.UriHost:                      return 5;                  case OptionType.LocationPath:                      return 6;                  case OptionType.UriPort:                      return 7;                  case OptionType.LocationQuery:                      return 8;                  case OptionType.UriPath:                      return 9;                  case OptionType.Token:                      return 11;                  case OptionType.UriQuery:                      return 15;                  case OptionType.Observe:                      return 10;                  case OptionType.Accept:                      return 12;                  case OptionType.IfMatch:                      return 13;  #pragma warning disable 612' 618                  case OptionType.FencepostDivisor:                      return 14;  #pragma warning restore 612' 618                  case OptionType.Block2:                      return 17;                  case OptionType.Block1:                      return 19;                  case OptionType.IfNoneMatch:                      return 21;                  default:                      return (Int32)optionType;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft08,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: switch (optionNumber)              {                  case 0:                      return OptionType.Reserved;                  case 1:                      return OptionType.ContentType;                  case 2:                      return OptionType.MaxAge;                  case 3:                      return OptionType.ProxyUri;                  case 4:                      return OptionType.ETag;                  case 5:                      return OptionType.UriHost;                  case 6:                      return OptionType.LocationPath;                  case 7:                      return OptionType.UriPort;                  case 8:                      return OptionType.LocationQuery;                  case 9:                      return OptionType.UriPath;                  case 11:                      return OptionType.Token;                  case 15:                      return OptionType.UriQuery;                  case 10:                      return OptionType.Observe;                  case 12:                      return OptionType.Accept;                  case 13:                      return OptionType.IfMatch;  #pragma warning disable 612' 618                  case 14:                      return OptionType.FencepostDivisor;  #pragma warning restore 612' 618                  case 17:                      return OptionType.Block2;                  case 19:                      return OptionType.Block1;                  case 21:                      return OptionType.IfNoneMatch;                  default:                      return (OptionType)optionNumber;              }
Magic Number,CoAP,Draft12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: return 16;
Magic Number,CoAP,Draft12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: optionNumber == 16
Magic Number,CoAP,MessageEncoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: optionDelta -= 15;
Magic Number,CoAP,MessageEncoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: optionDelta < 30
Magic Number,CoAP,MessageEncoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: optionCount < 15
Magic Number,CoAP,MessageEncoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(0xf0' 8);
Magic Number,CoAP,MessageEncoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: optionCount > 14
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: Boolean hasMoreOptions = _optionCount == 15;
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: Int32 bits = m_reader.Read(4);
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: switch (bits)                          {                              case 0:                                  // end-of-options marker read (0xF0)' payload follows                                  hasMoreOptions = false;                                  continue;                              case 1:                                  // 0xF1 (Delta = 15)                                  optionDelta = 15 + m_reader.Read(OptionDeltaBits);                                  break;                              case 2:                                  // Delta = ((Option Jump Value) + 2) * 8                                  optionDelta = (m_reader.Read(8) + 2) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              case 3:                                  // Delta = ((Option Jump Value) + 258) * 8                                  optionDelta = (m_reader.Read(16) + 258) * 8 + m_reader.Read(OptionDeltaBits);                                  break;                              default:                                  break;                          }
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: optionDelta == 15
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: additionalLength = m_reader.Read(8);
Magic Number,CoAP,MessageDecoder12,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,ParseMessage,The following statement contains a magic number: length == 15
Magic Number,CoAP,Draft13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetValueFromOptionNibble,The following statement contains a magic number: nibble < 13
Magic Number,CoAP,Draft13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNibble,The following statement contains a magic number: optionValue <= 12
Magic Number,CoAP,Draft13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNumber,The following statement contains a magic number: return 16;
Magic Number,CoAP,Draft13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionType,The following statement contains a magic number: optionNumber == 16
Magic Number,CoAP,MessageEncoder13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(optionDelta - 13' 8);
Magic Number,CoAP,MessageEncoder13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(optionDelta - 13' 8);
Magic Number,CoAP,MessageEncoder13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: optionDeltaNibble == 13
Magic Number,CoAP,MessageEncoder13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(optionLength - 13' 8);
Magic Number,CoAP,MessageEncoder13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(optionLength - 13' 8);
Magic Number,CoAP,MessageEncoder13,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: optionLengthNibble == 13
Magic Number,CoAP,Draft18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetOptionNibble,The following statement contains a magic number: optionValue <= 12
Magic Number,CoAP,Draft18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,GetValueFromOptionNibble,The following statement contains a magic number: nibble < 13
Magic Number,CoAP,MessageEncoder18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(optionDelta - 13' 8);
Magic Number,CoAP,MessageEncoder18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(optionDelta - 13' 8);
Magic Number,CoAP,MessageEncoder18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: optionDeltaNibble == 13
Magic Number,CoAP,MessageEncoder18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(optionLength - 13' 8);
Magic Number,CoAP,MessageEncoder18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: writer.Write(optionLength - 13' 8);
Magic Number,CoAP,MessageEncoder18,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.NET\Spec.cs,Serialize,The following statement contains a magic number: optionLengthNibble == 13
