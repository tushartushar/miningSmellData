Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,CoAP,MemoryLeakingHashMapTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MemoryLeakingMapTest.cs,,The length of the parameter TEST_SWEEP_DEDUPLICATOR_INTERVAL is 32.
Long Identifier,CoAP,MemoryLeakingHashMapTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MemoryLeakingMapTest.cs,,The length of the parameter HOW_MANY_NOTIFICATION_WE_WAIT_FOR is 33.
Long Statement,CoAP,EndpointSurveillant,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MemoryLeakingMapTest.cs,ExtractField,The length of the statement  "            FieldInfo fi = obj.GetType().GetField(name' BindingFlags.DeclaredOnly | BindingFlags.NonPublic | BindingFlags.Instance); " is 120.
Long Statement,CoAP,ResourceTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTest.cs,ConcreteTest,The length of the statement  "            String link = "</careless>;rt=\"SepararateResponseTester\";title=\"This resource will ACK anything' but never send a separate response\"'</feedback>;rt=\"FeedbackMailSender\";title=\"POST feedback using mail\"'</helloWorld>;rt=\"HelloWorldDisplayer\";title=\"GET a friendly greeting!\"'</image>;ct=21;ct=22;ct=23;ct=24;rt=\"Image\";sz=18029;title=\"GET an image with different content-types\"'</large>;rt=\"block\";title=\"Large resource\"'</large_update>;rt=\"block\";rt=\"observe\";title=\"Large resource that can be updated using PUT method\"'</mirror>;rt=\"RequestMirroring\";title=\"POST request to receive it back as echo\"'</obs>;obs;rt=\"observe\";title=\"Observable resource which changes every 5 seconds\"'</query>;title=\"Resource accepting query parameters\"'</seg1/seg2/seg3>;title=\"Long path resource\"'</separate>;title=\"Resource which cannot be served immediately and which cannot be acknowledged in a piggy-backed way\"'</storage>;obs;rt=\"Storage\";title=\"PUT your data here or POST new resources!\"'</test>;title=\"Default test resource\"'</timeResource>;rt=\"CurrentTime\";title=\"GET the current time\"'</toUpper>;rt=\"UppercaseConverter\";title=\"POST text here to convert it to uppercase\"'</weatherResource>;rt=\"ZurichWeather\";title=\"GET the current weather in zurich\""; " is 1301.
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(0' false' 15).SequenceEqual(b(0xf0)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(0' false' 16).SequenceEqual(b(0x01' 0x00)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(0' false' 79).SequenceEqual(b(0x04' 0xf0)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(0' false' 113).SequenceEqual(b(0x07' 0x10)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(0' false' 26387).SequenceEqual(b(0x06' 0x71' 0x30)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(0' false' 1048575).SequenceEqual(b(0xff' 0xff' 0xf0)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(7' false' 1048575).SequenceEqual(b(0xff' 0xff' 0xf7)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(7' false' 1048575).SequenceEqual(b(0xff' 0xff' 0xf7)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(7' true' 1048575).SequenceEqual(b(0xff' 0xff' 0xff)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestGetValue,The following statement contains a magic number: Assert.IsTrue(ToBytes(7' true' 1048575).SequenceEqual(b(0xff' 0xff' 0xff)));
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(0' false' 15);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(0' false' 16);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(0' false' 79);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(0' false' 113);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(0' false' 26387);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(0' false' 1048575);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(7' false' 1048575);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(7' false' 1048575);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(7' true' 1048575);
Magic Number,CoAP,BlockOptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockOptionTest.cs,TestCombined,The following statement contains a magic number: TestCombined(7' true' 1048575);
Magic Number,CoAP,BlockwiseTransferTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockwiseTransferTest.cs,SetupServer,The following statement contains a magic number: _config.DefaultBlockSize = 32;
Magic Number,CoAP,BlockwiseTransferTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockwiseTransferTest.cs,SetupServer,The following statement contains a magic number: _config.MaxMessageSize = 32;
Magic Number,CoAP,BlockwiseTransferTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockwiseTransferTest.cs,ExecuteGETRequest,The following statement contains a magic number: Response response = request.WaitForResponse(1000);
Magic Number,CoAP,BlockwiseTransferTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\BlockwiseTransferTest.cs,ExecutePOSTRequest,The following statement contains a magic number: Response response = request.WaitForResponse(1000);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestSynchronousCall,The following statement contains a magic number: Assert.AreEqual(5' _notifications);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,CoapClientTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\CoapClientTest.cs,TestAsynchronousCall,The following statement contains a magic number: Assert.AreEqual(5' _notifications);
Magic Number,CoAP,MemoryLeakingHashMapTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MemoryLeakingMapTest.cs,TestSimpleNONGet,The following statement contains a magic number: Response response = request.Send(_clientEndpoint).WaitForResponse(1000);
Magic Number,CoAP,MemoryLeakingHashMapTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MemoryLeakingMapTest.cs,TestObserve,The following statement contains a magic number: Thread.Sleep(HOW_MANY_NOTIFICATION_WE_WAIT_FOR * OBS_NOTIFICATION_INTERVALL + 3000);
Magic Number,CoAP,MemoryLeakingHashMapTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MemoryLeakingMapTest.cs,TestObserve,The following statement contains a magic number: Boolean success = mre.WaitOne(100);
Magic Number,CoAP,EndpointSurveillant,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MemoryLeakingMapTest.cs,WaitUntilDeduplicatorShouldBeEmpty,The following statement contains a magic number: int time = _exchangeLifecycle + _sweepDuplicatorInterval + 100;
Magic Number,CoAP,EndpointSurveillant,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MemoryLeakingMapTest.cs,WaitUntilDeduplicatorShouldBeEmpty,The following statement contains a magic number: Console.WriteLine("Wait until deduplicator should be empty (" + time / 1000f + " seconds)");
Magic Number,CoAP,MessageTypeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MessageTypeTest.cs,TestNonConfirmable,The following statement contains a magic number: Response response = req2acc.WaitForResponse(100);
Magic Number,CoAP,MessageTypeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MessageTypeTest.cs,TestNonConfirmable,The following statement contains a magic number: response = req2noacc.WaitForResponse(100);
Magic Number,CoAP,MessageTypeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MessageTypeTest.cs,TestConfirmable,The following statement contains a magic number: Response response = req2acc.WaitForResponse(100);
Magic Number,CoAP,MessageTypeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\MessageTypeTest.cs,TestConfirmable,The following statement contains a magic number: response = req2noacc.WaitForResponse(100);
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestIntOption,The following statement contains a magic number: Int32 oneByteValue = 255;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestIntOption,The following statement contains a magic number: Int32 twoByteValue = 256;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestIntOption,The following statement contains a magic number: Assert.AreEqual(opt2.Length' 2);
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestOptionEquality,The following statement contains a magic number: Int32 oneByteValue = 255;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestOptionEquality,The following statement contains a magic number: Int32 twoByteValue = 256;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,Test2BytesToken,The following statement contains a magic number: Assert.AreEqual(t1.Length' 2);
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,Test4BytesToken,The following statement contains a magic number: Assert.AreEqual(t1.Length' 4);
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue= new Byte[4];
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[4]));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue = new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 };
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue = new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 };
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue = new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 };
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue = new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 };
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue = new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 };
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue = new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 };
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue = new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 };
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: option.RawValue = new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 };
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 69' 152' 35' 55' 152' 116' 35' 152 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: option.IntValue = 11;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 11 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: option.IntValue = 255;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { (Byte)255 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: option.IntValue = 256;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: option.IntValue = 18273;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 71' 97 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 71' 97 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: option.IntValue = 1 << 16;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: option.IntValue = 23984773;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 1' 109' (Byte)250' (Byte)133 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 1' 109' (Byte)250' (Byte)133 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetIntegerValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 1' 109' (Byte)250' (Byte)133 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: option.LongValue = 11;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 11 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: option.LongValue = 255;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { (Byte)255 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: option.LongValue = 256;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: option.LongValue = 18273;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 71' 97 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 71' 97 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: option.LongValue = 1 << 16;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: option.LongValue = 23984773;
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 1' 109' (Byte)250' (Byte)133 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 1' 109' (Byte)250' (Byte)133 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 1' 109' (Byte)250' (Byte)133 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 152' 35' 116' 152' 55' 35' 152' 69 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 152' 35' 116' 152' 55' 35' 152' 69 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 152' 35' 116' 152' 55' 35' 152' 69 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 152' 35' 116' 152' 55' 35' 152' 69 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 152' 35' 116' 152' 55' 35' 152' 69 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 152' 35' 116' 152' 55' 35' 152' 69 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 152' 35' 116' 152' 55' 35' 152' 69 }));
Magic Number,CoAP,OptionTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\OptionTest.cs,TestSetLongValue,The following statement contains a magic number: Assert.IsTrue(option.RawValue.SequenceEqual(new Byte[] { 152' 35' 116' 152' 55' 35' 152' 69 }));
Magic Number,CoAP,RandomAccessBlockTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\RandomAccessBlockTest.cs,TestServer,The following statement contains a magic number: Int32[] blockOrder = { 2' 1' 3 };
Magic Number,CoAP,RandomAccessBlockTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\RandomAccessBlockTest.cs,TestServer,The following statement contains a magic number: Int32[] blockOrder = { 2' 1' 3 };
Magic Number,CoAP,RandomAccessBlockTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\RandomAccessBlockTest.cs,TestServer,The following statement contains a magic number: String[] expectations = {                  RESPONSE_PAYLOAD.Substring(32 /* until the end */)'                  RESPONSE_PAYLOAD.Substring(16' 16)'                  null // block is out of bounds              };
Magic Number,CoAP,RandomAccessBlockTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\RandomAccessBlockTest.cs,TestServer,The following statement contains a magic number: String[] expectations = {                  RESPONSE_PAYLOAD.Substring(32 /* until the end */)'                  RESPONSE_PAYLOAD.Substring(16' 16)'                  null // block is out of bounds              };
Magic Number,CoAP,RandomAccessBlockTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\RandomAccessBlockTest.cs,TestServer,The following statement contains a magic number: String[] expectations = {                  RESPONSE_PAYLOAD.Substring(32 /* until the end */)'                  RESPONSE_PAYLOAD.Substring(16' 16)'                  null // block is out of bounds              };
Magic Number,CoAP,RandomAccessBlockTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\RandomAccessBlockTest.cs,TestServer,The following statement contains a magic number: Int32 szx = BlockOption.EncodeSZX(16);
Magic Number,CoAP,RandomAccessBlockTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\RandomAccessBlockTest.cs,TestServer,The following statement contains a magic number: Response response = request.WaitForResponse(1000);
Magic Number,CoAP,ResourceTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTest.cs,SimpleTest,The following statement contains a magic number: Assert.AreEqual(41' res.ContentTypeCode);
Magic Number,CoAP,ResourceTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTest.cs,ExtendedTest,The following statement contains a magic number: Assert.AreEqual(42' res.ContentTypeCode);
Magic Number,CoAP,ResourceTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTest.cs,ExtendedTest,The following statement contains a magic number: Assert.AreEqual(10' res.MaximumSizeEstimate);
Magic Number,CoAP,ResourceTreeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTreeTest.cs,TestNameChange,The following statement contains a magic number: String resp1 = Request.NewGet().SetUri(baseUri + NAME_1).Send().WaitForResponse(100).PayloadString;
Magic Number,CoAP,ResourceTreeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTreeTest.cs,TestNameChange,The following statement contains a magic number: String resp2 = Request.NewGet().SetUri(baseUri + NAME_1 + "/" + CHILD).Send().WaitForResponse(100).PayloadString;
Magic Number,CoAP,ResourceTreeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTreeTest.cs,TestNameChange,The following statement contains a magic number: String resp3 = Request.NewGet().SetUri(baseUri + NAME_2).Send().WaitForResponse(100).PayloadString;
Magic Number,CoAP,ResourceTreeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTreeTest.cs,TestNameChange,The following statement contains a magic number: String resp4 = Request.NewGet().SetUri(baseUri + NAME_2 + "/" + CHILD).Send().WaitForResponse(100).PayloadString;
Magic Number,CoAP,ResourceTreeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTreeTest.cs,TestNameChange,The following statement contains a magic number: StatusCode code1 = Request.NewGet().SetUri(baseUri + NAME_1).Send().WaitForResponse(100).StatusCode;
Magic Number,CoAP,ResourceTreeTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\ResourceTreeTest.cs,TestNameChange,The following statement contains a magic number: StatusCode code2 = Request.NewGet().SetUri(baseUri + NAME_1 + "/" + CHILD).Send().WaitForResponse(100).StatusCode;
Magic Number,CoAP,StartStopTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\StartStopTest.cs,TestStartStop,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,StartStopTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\StartStopTest.cs,TestStartStop,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,StartStopTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\StartStopTest.cs,TestStartStop,The following statement contains a magic number: i < 3
Magic Number,CoAP,StartStopTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\StartStopTest.cs,SendRequestAndExpect,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,CoAP,StartStopTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\StartStopTest.cs,SendRequestAndExpect,The following statement contains a magic number: String response = request.Send().WaitForResponse(1000).PayloadString;
Magic Number,CoAP.Channel,IPAddressTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Channel\IPAddressTest.cs,TestMapBetweenIPv4AndIPv6,The following statement contains a magic number: IPAddress ipv4 = new IPAddress(new Byte[] { 10' 0' 0' i });
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test32BitInt,The following statement contains a magic number: writer.Write(intIn' 32);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test32BitInt,The following statement contains a magic number: Int32 intOut = reader.Read(32);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test32BitIntZero,The following statement contains a magic number: writer.Write(intIn' 32);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test32BitIntZero,The following statement contains a magic number: Int32 intOut = reader.Read(32);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test32BitIntOne,The following statement contains a magic number: writer.Write(intIn' 32);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test32BitIntOne,The following statement contains a magic number: Int32 intOut = reader.Read(32);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test16BitInt,The following statement contains a magic number: writer.Write(intIn' 16);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test16BitInt,The following statement contains a magic number: Int32 intOut = reader.Read(16);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test8BitInt,The following statement contains a magic number: writer.Write(intIn' 8);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test8BitInt,The following statement contains a magic number: Int32 intOut = reader.Read(8);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test4BitInt,The following statement contains a magic number: writer.Write(intIn' 4);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test4BitInt,The following statement contains a magic number: Int32 intOut = reader.Read(4);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test2BitInt,The following statement contains a magic number: writer.Write(intIn' 2);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,Test2BitInt,The following statement contains a magic number: Int32 intOut = reader.Read(2);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestByteOrder,The following statement contains a magic number: Int32 intIn = 1234567890;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestByteOrder,The following statement contains a magic number: writer.Write(intIn' 32);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestByteOrder,The following statement contains a magic number: Int32 intOut = reader.Read(32);
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestUnalignedBytes3,The following statement contains a magic number: Int32 bitCount = 3;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestUnalignedBytes7,The following statement contains a magic number: Int32 bitCount = 7;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestBytesLeft,The following statement contains a magic number: Int32 bitCount = 8;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestBytesLeftUnaligned,The following statement contains a magic number: Int32 bitCount = 7;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestGETRequestHeader,The following statement contains a magic number: Int32 versionSz = 2;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestGETRequestHeader,The following statement contains a magic number: Int32 typeSz = 2;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestGETRequestHeader,The following statement contains a magic number: Int32 optionCntSz = 4;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestGETRequestHeader,The following statement contains a magic number: Int32 codeSz = 8;
Magic Number,CoAP.Codec,DatagramReadWriteTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\DatagramReadWriteTest.cs,TestGETRequestHeader,The following statement contains a magic number: Int32 msgIdSz = 16;
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestMessage,The following statement contains a magic number: msg.ID = 12345;
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestMessageWithOptions,The following statement contains a magic number: msg.ID = 12345;
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestMessageWithOptions,The following statement contains a magic number: msg.AddOption(Option.Create(OptionType.MaxAge' 30));
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestMessageWithExtendedOption,The following statement contains a magic number: msg.ID = 12345;
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestMessageWithExtendedOption,The following statement contains a magic number: msg.AddOption(Option.Create((OptionType)12' "a"));
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestMessageWithExtendedOption,The following statement contains a magic number: msg.AddOption(Option.Create((OptionType)197' "extend option"));
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestMessageWithExtendedOption,The following statement contains a magic number: Option extendOpt = convMsg.GetFirstOption((OptionType)197);
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.ID = 7;
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.Token = new Byte[] { 11' 82' 165' 77' 3 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.Token = new Byte[] { 11' 82' 165' 77' 3 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.Token = new Byte[] { 11' 82' 165' 77' 3 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.Token = new Byte[] { 11' 82' 165' 77' 3 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.Token = new Byte[] { 11' 82' 165' 77' 3 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.AddIfMatch(new Byte[] { 34' 239 })                  .AddIfMatch(new Byte[] { 88' 12' 254' 157' 5 });
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.AddIfMatch(new Byte[] { 34' 239 })                  .AddIfMatch(new Byte[] { 88' 12' 254' 157' 5 });
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.AddIfMatch(new Byte[] { 34' 239 })                  .AddIfMatch(new Byte[] { 88' 12' 254' 157' 5 });
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.AddIfMatch(new Byte[] { 34' 239 })                  .AddIfMatch(new Byte[] { 88' 12' 254' 157' 5 });
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.AddIfMatch(new Byte[] { 34' 239 })                  .AddIfMatch(new Byte[] { 88' 12' 254' 157' 5 });
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.AddIfMatch(new Byte[] { 34' 239 })                  .AddIfMatch(new Byte[] { 88' 12' 254' 157' 5 });
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.AddIfMatch(new Byte[] { 34' 239 })                  .AddIfMatch(new Byte[] { 88' 12' 254' 157' 5 });
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.ContentType = 40;
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestRequestParsing,The following statement contains a magic number: request.Accept = 40;
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.ID = 9;
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.Token = new Byte[] { 22' 255' 0' 78' 100' 22 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.Token = new Byte[] { 22' 255' 0' 78' 100' 22 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.Token = new Byte[] { 22' 255' 0' 78' 100' 22 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.Token = new Byte[] { 22' 255' 0' 78' 100' 22 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.Token = new Byte[] { 22' 255' 0' 78' 100' 22 };
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.AddETag(new Byte[] { 1' 0' 0' 0' 0' 1 })                                  .AddLocationPath("/one/two/three/four/five/six/seven/eight/nine/ten")                                  .AddOption(Option.Create((OptionType)57453' "Arbitrary".GetHashCode()))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary1"))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary2"))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary3"));
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.AddETag(new Byte[] { 1' 0' 0' 0' 0' 1 })                                  .AddLocationPath("/one/two/three/four/five/six/seven/eight/nine/ten")                                  .AddOption(Option.Create((OptionType)57453' "Arbitrary".GetHashCode()))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary1"))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary2"))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary3"));
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.AddETag(new Byte[] { 1' 0' 0' 0' 0' 1 })                                  .AddLocationPath("/one/two/three/four/five/six/seven/eight/nine/ten")                                  .AddOption(Option.Create((OptionType)57453' "Arbitrary".GetHashCode()))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary1"))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary2"))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary3"));
Magic Number,CoAP.Codec,MessageTest,D:\research\architectureSmells\repos1\smeshlink_CoAP.NET\CoAP.Test\Codec\MessageTest.cs,TestResponseParsing,The following statement contains a magic number: response.AddETag(new Byte[] { 1' 0' 0' 0' 0' 1 })                                  .AddLocationPath("/one/two/three/four/five/six/seven/eight/nine/ten")                                  .AddOption(Option.Create((OptionType)57453' "Arbitrary".GetHashCode()))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary1"))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary2"))                                  .AddOption(Option.Create((OptionType)19205' "Arbitrary3"));
