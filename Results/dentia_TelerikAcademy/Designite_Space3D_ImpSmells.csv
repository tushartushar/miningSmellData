Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Space3D,DistanceCalculator,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\OOP\Defining-Classes-SP\Space3D\DistanceCalculator.cs,Calculate,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((p.X - q.X)' 2) + Math.Pow ((p.Y - q.Y)' 2) + Math.Pow ((p.Z - q.Z)' 2));  
Magic Number,Space3D,DistanceCalculator,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\OOP\Defining-Classes-SP\Space3D\DistanceCalculator.cs,Calculate,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((p.X - q.X)' 2) + Math.Pow ((p.Y - q.Y)' 2) + Math.Pow ((p.Z - q.Z)' 2));  
Magic Number,Space3D,DistanceCalculator,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\OOP\Defining-Classes-SP\Space3D\DistanceCalculator.cs,Calculate,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((p.X - q.X)' 2) + Math.Pow ((p.Y - q.Y)' 2) + Math.Pow ((p.Z - q.Z)' 2));  
Magic Number,Space3D,PathStorage,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\OOP\Defining-Classes-SP\Space3D\PathStorage.cs,Load,The following statement contains a magic number: try {  	using (IO.StreamReader reader = new IO.StreamReader (fullPath)) {  		string[] allPoints = reader.ReadToEnd ().Split (new string[] {  			" -> "  		}' StringSplitOptions.RemoveEmptyEntries);  		foreach (var point in allPoints) {  			double[] coordinates = point.Trim ('{').Trim ('}').Split (new[] {  				' ''  				'''  			}' StringSplitOptions.RemoveEmptyEntries).Select (x => double.Parse (x)).ToArray ();  			path.AddPoint (new Point3D (coordinates [0]' coordinates [1]' coordinates [2]));  		}  	}  } catch (IO.FileNotFoundException) {  	Console.Write ("The path \"{0}\" cannot be found."' pathName);  	return null;  }  
Magic Number,Space3D,PathStorage,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\OOP\Defining-Classes-SP\Space3D\PathStorage.cs,Load,The following statement contains a magic number: using (IO.StreamReader reader = new IO.StreamReader (fullPath)) {  	string[] allPoints = reader.ReadToEnd ().Split (new string[] {  		" -> "  	}' StringSplitOptions.RemoveEmptyEntries);  	foreach (var point in allPoints) {  		double[] coordinates = point.Trim ('{').Trim ('}').Split (new[] {  			' ''  			'''  		}' StringSplitOptions.RemoveEmptyEntries).Select (x => double.Parse (x)).ToArray ();  		path.AddPoint (new Point3D (coordinates [0]' coordinates [1]' coordinates [2]));  	}  }  
Magic Number,Space3D,PathStorage,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\OOP\Defining-Classes-SP\Space3D\PathStorage.cs,Load,The following statement contains a magic number: foreach (var point in allPoints) {  	double[] coordinates = point.Trim ('{').Trim ('}').Split (new[] {  		' ''  		'''  	}' StringSplitOptions.RemoveEmptyEntries).Select (x => double.Parse (x)).ToArray ();  	path.AddPoint (new Point3D (coordinates [0]' coordinates [1]' coordinates [2]));  }  
Magic Number,Space3D,PathStorage,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\OOP\Defining-Classes-SP\Space3D\PathStorage.cs,Load,The following statement contains a magic number: path.AddPoint (new Point3D (coordinates [0]' coordinates [1]' coordinates [2]));  
