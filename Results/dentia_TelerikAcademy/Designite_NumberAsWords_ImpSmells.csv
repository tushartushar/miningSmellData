Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,Cyclomatic complexity of the method is 29
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,NumberAsWord,The following statement contains a magic number: if (number > 99) {  	return Hundreds (number);  } else if (number > 9) {  	return Tens (number);  } else {  	return DigitAsWord (number);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,NumberAsWord,The following statement contains a magic number: if (number > 99) {  	return Hundreds (number);  } else if (number > 9) {  	return Tens (number);  } else {  	return DigitAsWord (number);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,NumberAsWord,The following statement contains a magic number: if (number > 9) {  	return Tens (number);  } else {  	return DigitAsWord (number);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: if (num [num.Length - 2] == '1') {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "" + num [num.Length - 1]));  } else {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "") * 10);  	if (number % 10 != 0) {  		tens += "-" + DigitAsWord (int.Parse (num [num.Length - 1] + ""));  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: if (num [num.Length - 2] == '1') {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "" + num [num.Length - 1]));  } else {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "") * 10);  	if (number % 10 != 0) {  		tens += "-" + DigitAsWord (int.Parse (num [num.Length - 1] + ""));  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: if (num [num.Length - 2] == '1') {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "" + num [num.Length - 1]));  } else {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "") * 10);  	if (number % 10 != 0) {  		tens += "-" + DigitAsWord (int.Parse (num [num.Length - 1] + ""));  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: if (num [num.Length - 2] == '1') {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "" + num [num.Length - 1]));  } else {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "") * 10);  	if (number % 10 != 0) {  		tens += "-" + DigitAsWord (int.Parse (num [num.Length - 1] + ""));  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: if (num [num.Length - 2] == '1') {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "" + num [num.Length - 1]));  } else {  	tens += DigitAsWord (int.Parse (num [num.Length - 2] + "") * 10);  	if (number % 10 != 0) {  		tens += "-" + DigitAsWord (int.Parse (num [num.Length - 1] + ""));  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: tens += DigitAsWord (int.Parse (num [num.Length - 2] + "" + num [num.Length - 1]));  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: tens += DigitAsWord (int.Parse (num [num.Length - 2] + "") * 10);  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: tens += DigitAsWord (int.Parse (num [num.Length - 2] + "") * 10);  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Tens,The following statement contains a magic number: if (number % 10 != 0) {  	tens += "-" + DigitAsWord (int.Parse (num [num.Length - 1] + ""));  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if (((number / 10) % 10) != 0 || (number % 10) != 0) {  	hundred += " and ";  	if ((number / 10) % 10 > 0) {  		hundred += Tens (number - (100 * ((number / 100) % 10)));  	} else {  		hundred += DigitAsWord (number % 10);  	}  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if ((number / 10) % 10 > 0) {  	hundred += Tens (number - (100 * ((number / 100) % 10)));  } else {  	hundred += DigitAsWord (number % 10);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if ((number / 10) % 10 > 0) {  	hundred += Tens (number - (100 * ((number / 100) % 10)));  } else {  	hundred += DigitAsWord (number % 10);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if ((number / 10) % 10 > 0) {  	hundred += Tens (number - (100 * ((number / 100) % 10)));  } else {  	hundred += DigitAsWord (number % 10);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if ((number / 10) % 10 > 0) {  	hundred += Tens (number - (100 * ((number / 100) % 10)));  } else {  	hundred += DigitAsWord (number % 10);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if ((number / 10) % 10 > 0) {  	hundred += Tens (number - (100 * ((number / 100) % 10)));  } else {  	hundred += DigitAsWord (number % 10);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: if ((number / 10) % 10 > 0) {  	hundred += Tens (number - (100 * ((number / 100) % 10)));  } else {  	hundred += DigitAsWord (number % 10);  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: hundred += Tens (number - (100 * ((number / 100) % 10)));  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: hundred += Tens (number - (100 * ((number / 100) % 10)));  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: hundred += Tens (number - (100 * ((number / 100) % 10)));  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,Hundreds,The following statement contains a magic number: hundred += DigitAsWord (number % 10);  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
Magic Number,NumberAsWords,NumberAsWords,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#1\Conditional-Statements\NumberAsWords\NumberAsWords.cs,DigitAsWord,The following statement contains a magic number: switch (p) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  case 10:  	return "ten";  case 11:  	return "eleven";  case 12:  	return "twelve";  case 13:  	return "thirteen";  case 14:  	return "fourteen";  case 15:  	return "fifteen";  case 16:  	return "sixteen";  case 17:  	return "seventeen";  case 18:  	return "eighteen";  case 19:  	return "nineteen";  case 20:  	return "twenty";  case 30:  	return "thirty";  case 40:  	return "forty";  case 50:  	return "fifty";  case 60:  	return "sixty";  case 70:  	return "seventy";  case 80:  	return "eight";  case 90:  	return "ninety";  default:  	return "Invalid";  }  
