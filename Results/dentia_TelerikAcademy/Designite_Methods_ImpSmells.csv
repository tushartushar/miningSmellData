Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Methods,Student,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Student.cs,Student,The method has 5 parameters. Parameters: firstName' lastName' birthDate' town' comments
Long Identifier,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,CalculateTriangleArea,The length of the parameter semiperimeterMinusSidesFormula is 30.
Long Statement,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,CalculateTriangleArea,The length of the statement  "            double semiperimeterMinusSidesFormula = semiperimeter * (semiperimeter - sideA) * (semiperimeter - sideB) * (semiperimeter - sideC); " is 132.
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,CalculateTriangleArea,The following statement contains a magic number: double semiperimeter = (sideA + sideB + sideC) / 2;
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number)              {                  case 0: return "zero";                  case 1: return "one";                  case 2: return "two";                  case 3: return "three";                  case 4: return "four";                  case 5: return "five";                  case 6: return "six";                  case 7: return "seven";                  case 8: return "eight";                  case 9: return "nine";                  default: throw new ArgumentException("Invalid digit.");              }
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number)              {                  case 0: return "zero";                  case 1: return "one";                  case 2: return "two";                  case 3: return "three";                  case 4: return "four";                  case 5: return "five";                  case 6: return "six";                  case 7: return "seven";                  case 8: return "eight";                  case 9: return "nine";                  default: throw new ArgumentException("Invalid digit.");              }
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number)              {                  case 0: return "zero";                  case 1: return "one";                  case 2: return "two";                  case 3: return "three";                  case 4: return "four";                  case 5: return "five";                  case 6: return "six";                  case 7: return "seven";                  case 8: return "eight";                  case 9: return "nine";                  default: throw new ArgumentException("Invalid digit.");              }
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number)              {                  case 0: return "zero";                  case 1: return "one";                  case 2: return "two";                  case 3: return "three";                  case 4: return "four";                  case 5: return "five";                  case 6: return "six";                  case 7: return "seven";                  case 8: return "eight";                  case 9: return "nine";                  default: throw new ArgumentException("Invalid digit.");              }
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number)              {                  case 0: return "zero";                  case 1: return "one";                  case 2: return "two";                  case 3: return "three";                  case 4: return "four";                  case 5: return "five";                  case 6: return "six";                  case 7: return "seven";                  case 8: return "eight";                  case 9: return "nine";                  default: throw new ArgumentException("Invalid digit.");              }
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number)              {                  case 0: return "zero";                  case 1: return "one";                  case 2: return "two";                  case 3: return "three";                  case 4: return "four";                  case 5: return "five";                  case 6: return "six";                  case 7: return "seven";                  case 8: return "eight";                  case 9: return "nine";                  default: throw new ArgumentException("Invalid digit.");              }
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number)              {                  case 0: return "zero";                  case 1: return "one";                  case 2: return "two";                  case 3: return "three";                  case 4: return "four";                  case 5: return "five";                  case 6: return "six";                  case 7: return "seven";                  case 8: return "eight";                  case 9: return "nine";                  default: throw new ArgumentException("Invalid digit.");              }
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number)              {                  case 0: return "zero";                  case 1: return "one";                  case 2: return "two";                  case 3: return "three";                  case 4: return "four";                  case 5: return "five";                  case 6: return "six";                  case 7: return "seven";                  case 8: return "eight";                  case 9: return "nine";                  default: throw new ArgumentException("Invalid digit.");              }
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(CalculateTriangleArea(3' 4' 5));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(CalculateTriangleArea(3' 4' 5));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(CalculateTriangleArea(3' 4' 5));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(NumberToDigit(5));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(FindMaxNumber(5' -1' 3' 2' 14' 2' 3));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(FindMaxNumber(5' -1' 3' 2' 14' 2' 3));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(FindMaxNumber(5' -1' 3' 2' 14' 2' 3));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(FindMaxNumber(5' -1' 3' 2' 14' 2' 3));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(FindMaxNumber(5' -1' 3' 2' 14' 2' 3));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine(FindMaxNumber(5' -1' 3' 2' 14' 2' 3));
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: PrintAsNumber(1.3' FormatOptions.Round);
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: PrintAsNumber(0.75' FormatOptions.Percent);
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: PrintAsNumber(2.30' FormatOptions.AlignRight);
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: double firstPointX = 3.0;
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: double secondPointX = 3.0;
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: double secondPointY = 2.5;
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Student peter = new Student("Peter"' "Ivanov"' new DateTime(1992' 3' 17)' "Sofia");
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Student peter = new Student("Peter"' "Ivanov"' new DateTime(1992' 3' 17)' "Sofia");
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Student peter = new Student("Peter"' "Ivanov"' new DateTime(1992' 3' 17)' "Sofia");
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Student stella = new Student("Stella"' "Markova"' new DateTime(1993' 3' 11)' "Vidin"' "gamer' high results");
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Student stella = new Student("Stella"' "Markova"' new DateTime(1993' 3' 11)' "Vidin"' "gamer' high results");
Magic Number,Methods,Methods,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Student stella = new Student("Stella"' "Markova"' new DateTime(1993' 3' 11)' "Vidin"' "gamer' high results");
