Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,Cyclomatic complexity of the method is 12
Complex Method,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,PrintAsNumber,Cyclomatic complexity of the method is 11
Long Parameter List,Methods,Student,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Student.cs,Student,The method has 5 parameters.
Long Identifier,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,CalculateTriangleArea,The length of the parameter semiperimeterMinusSidesFormula is 30.
Long Statement,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,CalculateTriangleArea,The length of the statement  "	double semiperimeterMinusSidesFormula = semiperimeter * (semiperimeter - sideA) * (semiperimeter - sideB) * (semiperimeter - sideC); " is 132.
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException ("Invalid digit.");  }  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException ("Invalid digit.");  }  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException ("Invalid digit.");  }  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException ("Invalid digit.");  }  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException ("Invalid digit.");  }  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException ("Invalid digit.");  }  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException ("Invalid digit.");  }  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException ("Invalid digit.");  }  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (CalculateTriangleArea (3' 4' 5));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (CalculateTriangleArea (3' 4' 5));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (CalculateTriangleArea (3' 4' 5));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (NumberToDigit (5));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: PrintAsNumber (1.3' FormatOptions.Round);  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: PrintAsNumber (0.75' FormatOptions.Percent);  
Magic Number,Methods,Methods,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\HQC\High-Quality-Methods\Methods\Methods.cs,Main,The following statement contains a magic number: PrintAsNumber (2.30' FormatOptions.AlignRight);  
