Implementation smell,Namespace,Class,File,Method,Description
Long Statement,FriendsOfPesho,FriendsOfPesho,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Graph-Algorithms\FriendsOfPesho\FriendsOfPesho.cs,FindMinimalDistance,The length of the statement  "	foreach (var distance in hospitalIds.Select (FindMinimalDistanceDijkstra).Select (dijkstraDistances => dijkstraDistances.Where ((a' b) => !hospitalIds.Contains (b)).Sum ())) { " is 175.
Magic Number,FriendsOfPesho,FriendsOfPesho,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Graph-Algorithms\FriendsOfPesho\FriendsOfPesho.cs,Main,The following statement contains a magic number: for (var i = 0; i < parameters [1]; i++) {  	var nodesInfo = Console.ReadLine ().Split (' ').Select (x => int.Parse (x) - 1).ToArray ();  	graph [nodesInfo [0]].Add (new KeyValuePair<int' int> (nodesInfo [1]' nodesInfo [2] + 1));  	graph [nodesInfo [1]].Add (new KeyValuePair<int' int> (nodesInfo [0]' nodesInfo [2] + 1));  }  
Magic Number,FriendsOfPesho,FriendsOfPesho,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Graph-Algorithms\FriendsOfPesho\FriendsOfPesho.cs,Main,The following statement contains a magic number: for (var i = 0; i < parameters [1]; i++) {  	var nodesInfo = Console.ReadLine ().Split (' ').Select (x => int.Parse (x) - 1).ToArray ();  	graph [nodesInfo [0]].Add (new KeyValuePair<int' int> (nodesInfo [1]' nodesInfo [2] + 1));  	graph [nodesInfo [1]].Add (new KeyValuePair<int' int> (nodesInfo [0]' nodesInfo [2] + 1));  }  
Magic Number,FriendsOfPesho,FriendsOfPesho,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Graph-Algorithms\FriendsOfPesho\FriendsOfPesho.cs,Main,The following statement contains a magic number: graph [nodesInfo [0]].Add (new KeyValuePair<int' int> (nodesInfo [1]' nodesInfo [2] + 1));  
Magic Number,FriendsOfPesho,FriendsOfPesho,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Graph-Algorithms\FriendsOfPesho\FriendsOfPesho.cs,Main,The following statement contains a magic number: graph [nodesInfo [1]].Add (new KeyValuePair<int' int> (nodesInfo [0]' nodesInfo [2] + 1));  
