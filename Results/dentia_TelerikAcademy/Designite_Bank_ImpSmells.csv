Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Bank,LoanAccount,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\LoanAccount.cs,CalculateInterest,The following statement contains a magic number: if (this.Client is Individual)              {                  months = Math.Max(0' months - 3);              }              else              {                  months = Math.Max(0' months - 2);              }
Magic Number,Bank,LoanAccount,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\LoanAccount.cs,CalculateInterest,The following statement contains a magic number: if (this.Client is Individual)              {                  months = Math.Max(0' months - 3);              }              else              {                  months = Math.Max(0' months - 2);              }
Magic Number,Bank,MortgageAccount,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\MortgageAccount.cs,CalculateInterest,The following statement contains a magic number: if (this.Client is Company)              {                  if (months <= 12)                  {                      return months * (this.Balance * 0.5m);                  }                  else                  {                      return (12 * (this.Balance * 0.5m)) + ((months - 12) * ((this.InterestRate / 100) * this.Balance));                  }              }              else              {                  if (months <= 6)                  {                      return 0.0m;                  }                  else                  {                      return (months - 6) * ((this.InterestRate / 100.0m) * this.Balance);                  }              }
Magic Number,Bank,MortgageAccount,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\MortgageAccount.cs,CalculateInterest,The following statement contains a magic number: if (this.Client is Company)              {                  if (months <= 12)                  {                      return months * (this.Balance * 0.5m);                  }                  else                  {                      return (12 * (this.Balance * 0.5m)) + ((months - 12) * ((this.InterestRate / 100) * this.Balance));                  }              }              else              {                  if (months <= 6)                  {                      return 0.0m;                  }                  else                  {                      return (months - 6) * ((this.InterestRate / 100.0m) * this.Balance);                  }              }
Magic Number,Bank,MortgageAccount,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\MortgageAccount.cs,CalculateInterest,The following statement contains a magic number: if (this.Client is Company)              {                  if (months <= 12)                  {                      return months * (this.Balance * 0.5m);                  }                  else                  {                      return (12 * (this.Balance * 0.5m)) + ((months - 12) * ((this.InterestRate / 100) * this.Balance));                  }              }              else              {                  if (months <= 6)                  {                      return 0.0m;                  }                  else                  {                      return (months - 6) * ((this.InterestRate / 100.0m) * this.Balance);                  }              }
Magic Number,Bank,MortgageAccount,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\MortgageAccount.cs,CalculateInterest,The following statement contains a magic number: if (this.Client is Company)              {                  if (months <= 12)                  {                      return months * (this.Balance * 0.5m);                  }                  else                  {                      return (12 * (this.Balance * 0.5m)) + ((months - 12) * ((this.InterestRate / 100) * this.Balance));                  }              }              else              {                  if (months <= 6)                  {                      return 0.0m;                  }                  else                  {                      return (months - 6) * ((this.InterestRate / 100.0m) * this.Balance);                  }              }
Magic Number,Bank,MortgageAccount,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\MortgageAccount.cs,CalculateInterest,The following statement contains a magic number: if (this.Client is Company)              {                  if (months <= 12)                  {                      return months * (this.Balance * 0.5m);                  }                  else                  {                      return (12 * (this.Balance * 0.5m)) + ((months - 12) * ((this.InterestRate / 100) * this.Balance));                  }              }              else              {                  if (months <= 6)                  {                      return 0.0m;                  }                  else                  {                      return (months - 6) * ((this.InterestRate / 100.0m) * this.Balance);                  }              }
Magic Number,Bank,MortgageAccount,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\MortgageAccount.cs,CalculateInterest,The following statement contains a magic number: if (this.Client is Company)              {                  if (months <= 12)                  {                      return months * (this.Balance * 0.5m);                  }                  else                  {                      return (12 * (this.Balance * 0.5m)) + ((months - 12) * ((this.InterestRate / 100) * this.Balance));                  }              }              else              {                  if (months <= 6)                  {                      return 0.0m;                  }                  else                  {                      return (months - 6) * ((this.InterestRate / 100.0m) * this.Balance);                  }              }
Magic Number,Bank,TestBank,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\TestBank.cs,LoadAccounts,The following statement contains a magic number: bank.AddAccount(new MortgageAccount(new Individual("Another name")' 50000.0m' 25));
Magic Number,Bank,TestBank,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\TestBank.cs,LoadAccounts,The following statement contains a magic number: bank.AddAccount(new DepositAccount(new Company("Company")' 7500.0m' 12));
Magic Number,Bank,TestBank,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\TestBank.cs,LoadAccounts,The following statement contains a magic number: bank.AddAccount(new LoanAccount(new Company("'notherCompany")' 175000.0m' 22));
Magic Number,Bank,TestBank,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\TestBank.cs,LoadAccounts,The following statement contains a magic number: bank.AddAccount(new MortgageAccount(new Individual("Poor Guy")' 30500.0m' 50));
Magic Number,Bank,TestBank,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\TestBank.cs,LoadAccounts,The following statement contains a magic number: bank.AddAccount(new DepositAccount(new Company("McCompany")' 12450.0m' 13));
Magic Number,Bank,TestBank,C:\repos\dentia_TelerikAcademy\Homeworks\OOP\OOP-Fundamental-Principles-SP\Bank\TestBank.cs,LoadAccounts,The following statement contains a magic number: bank.AddAccount(new LoanAccount(new Individual("Freddy")' 129.0m' 2));
