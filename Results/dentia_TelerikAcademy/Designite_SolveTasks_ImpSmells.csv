Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,Main,Cyclomatic complexity of the method is 9
Complex Method,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,Cyclomatic complexity of the method is 11
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: while (true) {  	Console.Clear ();  	if (Console.KeyAvailable) {  		ConsoleKeyInfo pressed = Console.ReadKey (true);  		while (Console.KeyAvailable)  			Console.ReadKey (true);  		if (pressed.Key == ConsoleKey.UpArrow) {  			--choise;  			if (choise == -1)  				choise = 2;  		} else if (pressed.Key == ConsoleKey.DownArrow) {  			++choise;  			choise %= 3;  		} else if (pressed.Key == ConsoleKey.Enter) {  			Console.ForegroundColor = defaultForeGround;  			Console.BackgroundColor = defaultBackground;  			return (Task)choise;  		}  	}  	for (int currentChoise = 0; currentChoise < choises.Length; currentChoise++) {  		if (currentChoise == choise) {  			Console.ForegroundColor = choiseForeGround;  			Console.BackgroundColor = choiseBackground;  		}  		Console.WriteLine (choises [currentChoise]);  		Console.ForegroundColor = defaultForeGround;  		Console.BackgroundColor = defaultBackground;  	}  	Thread.Sleep (100);  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: while (true) {  	Console.Clear ();  	if (Console.KeyAvailable) {  		ConsoleKeyInfo pressed = Console.ReadKey (true);  		while (Console.KeyAvailable)  			Console.ReadKey (true);  		if (pressed.Key == ConsoleKey.UpArrow) {  			--choise;  			if (choise == -1)  				choise = 2;  		} else if (pressed.Key == ConsoleKey.DownArrow) {  			++choise;  			choise %= 3;  		} else if (pressed.Key == ConsoleKey.Enter) {  			Console.ForegroundColor = defaultForeGround;  			Console.BackgroundColor = defaultBackground;  			return (Task)choise;  		}  	}  	for (int currentChoise = 0; currentChoise < choises.Length; currentChoise++) {  		if (currentChoise == choise) {  			Console.ForegroundColor = choiseForeGround;  			Console.BackgroundColor = choiseBackground;  		}  		Console.WriteLine (choises [currentChoise]);  		Console.ForegroundColor = defaultForeGround;  		Console.BackgroundColor = defaultBackground;  	}  	Thread.Sleep (100);  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: while (true) {  	Console.Clear ();  	if (Console.KeyAvailable) {  		ConsoleKeyInfo pressed = Console.ReadKey (true);  		while (Console.KeyAvailable)  			Console.ReadKey (true);  		if (pressed.Key == ConsoleKey.UpArrow) {  			--choise;  			if (choise == -1)  				choise = 2;  		} else if (pressed.Key == ConsoleKey.DownArrow) {  			++choise;  			choise %= 3;  		} else if (pressed.Key == ConsoleKey.Enter) {  			Console.ForegroundColor = defaultForeGround;  			Console.BackgroundColor = defaultBackground;  			return (Task)choise;  		}  	}  	for (int currentChoise = 0; currentChoise < choises.Length; currentChoise++) {  		if (currentChoise == choise) {  			Console.ForegroundColor = choiseForeGround;  			Console.BackgroundColor = choiseBackground;  		}  		Console.WriteLine (choises [currentChoise]);  		Console.ForegroundColor = defaultForeGround;  		Console.BackgroundColor = defaultBackground;  	}  	Thread.Sleep (100);  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: if (Console.KeyAvailable) {  	ConsoleKeyInfo pressed = Console.ReadKey (true);  	while (Console.KeyAvailable)  		Console.ReadKey (true);  	if (pressed.Key == ConsoleKey.UpArrow) {  		--choise;  		if (choise == -1)  			choise = 2;  	} else if (pressed.Key == ConsoleKey.DownArrow) {  		++choise;  		choise %= 3;  	} else if (pressed.Key == ConsoleKey.Enter) {  		Console.ForegroundColor = defaultForeGround;  		Console.BackgroundColor = defaultBackground;  		return (Task)choise;  	}  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: if (Console.KeyAvailable) {  	ConsoleKeyInfo pressed = Console.ReadKey (true);  	while (Console.KeyAvailable)  		Console.ReadKey (true);  	if (pressed.Key == ConsoleKey.UpArrow) {  		--choise;  		if (choise == -1)  			choise = 2;  	} else if (pressed.Key == ConsoleKey.DownArrow) {  		++choise;  		choise %= 3;  	} else if (pressed.Key == ConsoleKey.Enter) {  		Console.ForegroundColor = defaultForeGround;  		Console.BackgroundColor = defaultBackground;  		return (Task)choise;  	}  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: if (pressed.Key == ConsoleKey.UpArrow) {  	--choise;  	if (choise == -1)  		choise = 2;  } else if (pressed.Key == ConsoleKey.DownArrow) {  	++choise;  	choise %= 3;  } else if (pressed.Key == ConsoleKey.Enter) {  	Console.ForegroundColor = defaultForeGround;  	Console.BackgroundColor = defaultBackground;  	return (Task)choise;  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: if (pressed.Key == ConsoleKey.UpArrow) {  	--choise;  	if (choise == -1)  		choise = 2;  } else if (pressed.Key == ConsoleKey.DownArrow) {  	++choise;  	choise %= 3;  } else if (pressed.Key == ConsoleKey.Enter) {  	Console.ForegroundColor = defaultForeGround;  	Console.BackgroundColor = defaultBackground;  	return (Task)choise;  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: if (choise == -1)  	choise = 2;  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: choise = 2;  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: if (pressed.Key == ConsoleKey.DownArrow) {  	++choise;  	choise %= 3;  } else if (pressed.Key == ConsoleKey.Enter) {  	Console.ForegroundColor = defaultForeGround;  	Console.BackgroundColor = defaultBackground;  	return (Task)choise;  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: choise %= 3;  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: while (number > 0) {  	result *= 10;  	result += number % 10;  	number /= 10;  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: while (number > 0) {  	result *= 10;  	result += number % 10;  	number /= 10;  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: while (number > 0) {  	result *= 10;  	result += number % 10;  	number /= 10;  }  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: result *= 10;  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: result += number % 10;  
Magic Number,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: number /= 10;  
Missing Default,SolveTasks,SolveTasks,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,Main,The following switch statement is missing a default case: switch (GetChoise ()) {  case Task.Reverse:  	ReverseNumber ();  	break;  case Task.Average:  	GetAverage ();  	break;  case Task.Equation:  	SolveEquation ();  	break;  }  
