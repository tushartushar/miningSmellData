Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SolveTasks,SolveTasks,C:\repos\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,Cyclomatic complexity of the method is 8
Magic Number,SolveTasks,SolveTasks,C:\repos\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: while (true)              {                  Console.Clear();                  if (Console.KeyAvailable)                  {                      ConsoleKeyInfo pressed = Console.ReadKey(true);                      while (Console.KeyAvailable) Console.ReadKey(true);                        if (pressed.Key == ConsoleKey.UpArrow)                      {                          --choise;                          if (choise == -1)                              choise = 2;                      }                      else if (pressed.Key == ConsoleKey.DownArrow)                      {                          ++choise;                          choise %= 3;                      }                      else if (pressed.Key == ConsoleKey.Enter)                      {                          Console.ForegroundColor = defaultForeGround;                          Console.BackgroundColor = defaultBackground;                          return (Task)choise;                      }                  }                  for (int currentChoise = 0; currentChoise < choises.Length; currentChoise++)                  {                      if (currentChoise == choise)                      {                          Console.ForegroundColor = choiseForeGround;                          Console.BackgroundColor = choiseBackground;                      }                                                Console.WriteLine(choises[currentChoise]);                      Console.ForegroundColor = defaultForeGround;                      Console.BackgroundColor = defaultBackground;                  }                  Thread.Sleep(100);              }
Magic Number,SolveTasks,SolveTasks,C:\repos\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: while (true)              {                  Console.Clear();                  if (Console.KeyAvailable)                  {                      ConsoleKeyInfo pressed = Console.ReadKey(true);                      while (Console.KeyAvailable) Console.ReadKey(true);                        if (pressed.Key == ConsoleKey.UpArrow)                      {                          --choise;                          if (choise == -1)                              choise = 2;                      }                      else if (pressed.Key == ConsoleKey.DownArrow)                      {                          ++choise;                          choise %= 3;                      }                      else if (pressed.Key == ConsoleKey.Enter)                      {                          Console.ForegroundColor = defaultForeGround;                          Console.BackgroundColor = defaultBackground;                          return (Task)choise;                      }                  }                  for (int currentChoise = 0; currentChoise < choises.Length; currentChoise++)                  {                      if (currentChoise == choise)                      {                          Console.ForegroundColor = choiseForeGround;                          Console.BackgroundColor = choiseBackground;                      }                                                Console.WriteLine(choises[currentChoise]);                      Console.ForegroundColor = defaultForeGround;                      Console.BackgroundColor = defaultBackground;                  }                  Thread.Sleep(100);              }
Magic Number,SolveTasks,SolveTasks,C:\repos\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,GetChoise,The following statement contains a magic number: while (true)              {                  Console.Clear();                  if (Console.KeyAvailable)                  {                      ConsoleKeyInfo pressed = Console.ReadKey(true);                      while (Console.KeyAvailable) Console.ReadKey(true);                        if (pressed.Key == ConsoleKey.UpArrow)                      {                          --choise;                          if (choise == -1)                              choise = 2;                      }                      else if (pressed.Key == ConsoleKey.DownArrow)                      {                          ++choise;                          choise %= 3;                      }                      else if (pressed.Key == ConsoleKey.Enter)                      {                          Console.ForegroundColor = defaultForeGround;                          Console.BackgroundColor = defaultBackground;                          return (Task)choise;                      }                  }                  for (int currentChoise = 0; currentChoise < choises.Length; currentChoise++)                  {                      if (currentChoise == choise)                      {                          Console.ForegroundColor = choiseForeGround;                          Console.BackgroundColor = choiseBackground;                      }                                                Console.WriteLine(choises[currentChoise]);                      Console.ForegroundColor = defaultForeGround;                      Console.BackgroundColor = defaultBackground;                  }                  Thread.Sleep(100);              }
Magic Number,SolveTasks,SolveTasks,C:\repos\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: while (number > 0)              {                  result *= 10;                  result += number % 10;                  number /= 10;              }
Magic Number,SolveTasks,SolveTasks,C:\repos\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: while (number > 0)              {                  result *= 10;                  result += number % 10;                  number /= 10;              }
Magic Number,SolveTasks,SolveTasks,C:\repos\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,ReverseNumber,The following statement contains a magic number: while (number > 0)              {                  result *= 10;                  result += number % 10;                  number /= 10;              }
Missing Default,SolveTasks,SolveTasks,C:\repos\dentia_TelerikAcademy\Homeworks\C#2\Methods\SolveTasks\SolveTasks.cs,Main,The following switch statement is missing a default case: switch (GetChoise())              {                  case Task.Reverse:                      ReverseNumber();                      break;                  case Task.Average:                      GetAverage();                      break;                  case Task.Equation:                      SolveEquation();                      break;              }
