Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: Assert.IsTrue(collection.BinarySearch(4));
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,BinarySearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\BinarySearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: Assert.IsFalse(collection.BinarySearch(24));
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnTrueWhenElementExists,The following statement contains a magic number: Assert.IsTrue(collection.LinearSearch(4));
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 9' 2' 8' 3' 7' 4' 6' 5 });
Magic Number,Algorithms.Tests,LinearSearchTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\LinearSearchTests.cs,ShouldReturnFalseWhenElementDoesntExist,The following statement contains a magic number: Assert.IsFalse(collection.LinearSearch(24));
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,MergeSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\MergeSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,QuickSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\QuickSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlySortedCollection,The following statement contains a magic number: var collection = new SortableCollection<int>(new[] { 1' 2' 3' 4' 5' 6' 7 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyDoubles,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { 1.4' -8.6' 2' 13.1' 13.2' 55' 55' 55.1' 55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
Magic Number,Algorithms.Tests,SelectionSorterTests,D:\research\architectureSmells\repos\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\Algorithms.Tests\SelectionSorterTests.cs,ShouldSortCorrectlyOnlyNegativeValues,The following statement contains a magic number: var collection = new SortableCollection<double>(new[] { -1.4' -8.6' -2' -13.1' -13.2' -55' -55' -55.1' -55.01 });
