Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: collection = new SortableCollection<int> (new[] {  	22'  	11'  	101'  	33'  	0'  	101  });  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: Console.WriteLine (collection.LinearSearch (101));  
Magic Number,SortingAndSearchingAlgorithms,Program,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\Program.cs,Main,The following statement contains a magic number: Console.WriteLine (collection.BinarySearch (101));  
Magic Number,SortingAndSearchingAlgorithms,SortableCollection,F:\newReposMay17\dentia_TelerikAcademy\Homeworks\DSA\Sorting-and-Searching-Algorithms\SortingAndSearchingAlgorithms\SortableCollection.cs,BinarySearchRecursive,The following statement contains a magic number: if (min > max) {  	return false;  } else {  	var mid = (min + max) / 2;  	if (this.Items [mid].CompareTo (key) == 0) {  		return true;  	} else if (this.Items [mid].CompareTo (key) > 0) {  		return this.BinarySearchRecursive (key' min' mid - 1);  	} else {  		return this.BinarySearchRecursive (key' mid + 1' max);  	}  }  
