Implementation smell,Namespace,Class,File,Method,Description
Long Method,Santase.ConsoleUI,ConsolePlayer,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\ConsolePlayer.cs,GetTurn,The method has 107 lines of code.
Complex Method,Santase.ConsoleUI,ConsolePlayer,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\ConsolePlayer.cs,GetTurn,Cyclomatic complexity of the method is 13
Magic Number,Santase.ConsoleUI,ConsolePlayer,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\ConsolePlayer.cs,AddCard,The following statement contains a magic number: Thread.Sleep(150);
Magic Number,Santase.ConsoleUI,ConsolePlayer,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\ConsolePlayer.cs,GetTurn,The following statement contains a magic number: while (true)              {                  PlayerAction playerAction = null;                    Console.SetCursorPosition(0' this.row + 1);                  Console.Write(new string(' '' 79));                  Console.SetCursorPosition(0' this.row + 1);                  Console.Write("Turn? [1-{0}]=Card{1}"'                      this.cards.Count'                      context.AmITheFirstPlayer ? "; [T]=Change trump; [C]=Close: " : ": ");                  var userActionAsString = Console.ReadLine();                  if (string.IsNullOrWhiteSpace(userActionAsString))                  {                      Console.WriteLine("Empty turn!                 ");                      continue;                  }                    if (userActionAsString[0] >= '1'                      && userActionAsString[0] <= '6')                  {                      var cardIndex =                          int.Parse(userActionAsString[0].ToString()) - 1;                      if (cardIndex >= this.cards.Count)                      {                          Console.WriteLine("Invalid card!              ");                          continue;                      }                        var card = this.cards[cardIndex];                      var possibleAnnounce = Announce.None;                        if (context.AmITheFirstPlayer)                      {                          possibleAnnounce = this.PossibleAnnounce(card' context.TrumpCard);                          if (possibleAnnounce != Announce.None)                          {                              while (true)                              {                                  Console.SetCursorPosition(0' this.row + 2);                                  Console.Write("Announce {0} [Y]/[N]?         "' possibleAnnounce.ToString());                                  var userInput = Console.ReadLine();                                  if (string.IsNullOrWhiteSpace(userInput))                                  {                                      Console.WriteLine("Please enter [Y] or [N]         ");                                      continue;                                  }                                    if (userInput[0] == 'N')                                  {                                      possibleAnnounce = Announce.None;                                  }                                  else if (userInput[0] == 'Y')                                  {                                      break;                                  }                                  else                                  {                                      Console.WriteLine("Please enter [Y] or [N]         ");                                      continue;                                  }                              }                          }                      }                        playerAction =                          new PlayerAction(                              PlayerActionType.PlayCard'                              card'                              possibleAnnounce);                  }                  else if (userActionAsString[0] == 'T')                  {                      playerAction =                          new PlayerAction(                              PlayerActionType.ChangeTrump'                              null'                              Announce.None);                  }                  else if (userActionAsString[0] == 'C')                  {                      playerAction =                          new PlayerAction(                              PlayerActionType.CloseGame'                              null'                              Announce.None);                  }                  else                  {                      Console.WriteLine("Invalid turn!                ");                      continue;                  }                    if (actionValidater.IsValid(playerAction' context' this.cards))                  {                      if (playerAction.Type == PlayerActionType.PlayCard)                      {                          this.cards.Remove(playerAction.Card);                      }                        if (playerAction.Type == PlayerActionType.ChangeTrump)                      {                          this.cards.Remove(new Card(context.TrumpCard.Suit' CardType.Nine));                      }                        this.PrintGameInfo(context);                        return playerAction;                  }                  else                  {                      Console.WriteLine("Invalid action!                  ");                      continue;                  }              }
Magic Number,Santase.ConsoleUI,ConsolePlayer,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\ConsolePlayer.cs,GetTurn,The following statement contains a magic number: while (true)              {                  PlayerAction playerAction = null;                    Console.SetCursorPosition(0' this.row + 1);                  Console.Write(new string(' '' 79));                  Console.SetCursorPosition(0' this.row + 1);                  Console.Write("Turn? [1-{0}]=Card{1}"'                      this.cards.Count'                      context.AmITheFirstPlayer ? "; [T]=Change trump; [C]=Close: " : ": ");                  var userActionAsString = Console.ReadLine();                  if (string.IsNullOrWhiteSpace(userActionAsString))                  {                      Console.WriteLine("Empty turn!                 ");                      continue;                  }                    if (userActionAsString[0] >= '1'                      && userActionAsString[0] <= '6')                  {                      var cardIndex =                          int.Parse(userActionAsString[0].ToString()) - 1;                      if (cardIndex >= this.cards.Count)                      {                          Console.WriteLine("Invalid card!              ");                          continue;                      }                        var card = this.cards[cardIndex];                      var possibleAnnounce = Announce.None;                        if (context.AmITheFirstPlayer)                      {                          possibleAnnounce = this.PossibleAnnounce(card' context.TrumpCard);                          if (possibleAnnounce != Announce.None)                          {                              while (true)                              {                                  Console.SetCursorPosition(0' this.row + 2);                                  Console.Write("Announce {0} [Y]/[N]?         "' possibleAnnounce.ToString());                                  var userInput = Console.ReadLine();                                  if (string.IsNullOrWhiteSpace(userInput))                                  {                                      Console.WriteLine("Please enter [Y] or [N]         ");                                      continue;                                  }                                    if (userInput[0] == 'N')                                  {                                      possibleAnnounce = Announce.None;                                  }                                  else if (userInput[0] == 'Y')                                  {                                      break;                                  }                                  else                                  {                                      Console.WriteLine("Please enter [Y] or [N]         ");                                      continue;                                  }                              }                          }                      }                        playerAction =                          new PlayerAction(                              PlayerActionType.PlayCard'                              card'                              possibleAnnounce);                  }                  else if (userActionAsString[0] == 'T')                  {                      playerAction =                          new PlayerAction(                              PlayerActionType.ChangeTrump'                              null'                              Announce.None);                  }                  else if (userActionAsString[0] == 'C')                  {                      playerAction =                          new PlayerAction(                              PlayerActionType.CloseGame'                              null'                              Announce.None);                  }                  else                  {                      Console.WriteLine("Invalid turn!                ");                      continue;                  }                    if (actionValidater.IsValid(playerAction' context' this.cards))                  {                      if (playerAction.Type == PlayerActionType.PlayCard)                      {                          this.cards.Remove(playerAction.Card);                      }                        if (playerAction.Type == PlayerActionType.ChangeTrump)                      {                          this.cards.Remove(new Card(context.TrumpCard.Suit' CardType.Nine));                      }                        this.PrintGameInfo(context);                        return playerAction;                  }                  else                  {                      Console.WriteLine("Invalid action!                  ");                      continue;                  }              }
Magic Number,Santase.ConsoleUI,ConsolePlayer,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\ConsolePlayer.cs,PrintGameInfo,The following statement contains a magic number: Console.SetCursorPosition(0' 2);
Magic Number,Santase.ConsoleUI,ConsolePlayer,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\ConsolePlayer.cs,PrintGameInfo,The following statement contains a magic number: Console.SetCursorPosition(0' 3);
Magic Number,Santase.ConsoleUI,Program,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\Program.cs,Main,The following statement contains a magic number: Console.BufferHeight = Console.WindowHeight = 17;
Magic Number,Santase.ConsoleUI,Program,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\Program.cs,Main,The following statement contains a magic number: Console.BufferWidth = Console.WindowWidth = 50;
Magic Number,Santase.ConsoleUI,Program,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\Program.cs,Main,The following statement contains a magic number: ISantaseGame game = new SantaseGame(                  new ConsolePlayer(5' 10)'                  new ConsolePlayer(10' 10)'                  PlayerPosition.FirstPlayer);
Magic Number,Santase.ConsoleUI,Program,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\Program.cs,Main,The following statement contains a magic number: ISantaseGame game = new SantaseGame(                  new ConsolePlayer(5' 10)'                  new ConsolePlayer(10' 10)'                  PlayerPosition.FirstPlayer);
Magic Number,Santase.ConsoleUI,Program,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\Program.cs,Main,The following statement contains a magic number: ISantaseGame game = new SantaseGame(                  new ConsolePlayer(5' 10)'                  new ConsolePlayer(10' 10)'                  PlayerPosition.FirstPlayer);
Magic Number,Santase.ConsoleUI,Program,C:\repos\dentia_TelerikAcademy\Homeworks\HQC\Unit-Testing\Santase\Santase.ConsoleUI\Program.cs,Main,The following statement contains a magic number: ISantaseGame game = new SantaseGame(                  new ConsolePlayer(5' 10)'                  new ConsolePlayer(10' 10)'                  PlayerPosition.FirstPlayer);
