Implementation smell,Namespace,Class,File,Method,Description
Magic Number,PermutationWithRepetition,PermutationWithRepetition,C:\repos\dentia_TelerikAcademy\Homeworks\DSA\Recursion\PermutationWithRepetition\PermutationWithRepetition.cs,Main,The following statement contains a magic number: var arr = new[] { 3' 5' 1' 5' 5 };
Magic Number,PermutationWithRepetition,PermutationWithRepetition,C:\repos\dentia_TelerikAcademy\Homeworks\DSA\Recursion\PermutationWithRepetition\PermutationWithRepetition.cs,Main,The following statement contains a magic number: var arr = new[] { 3' 5' 1' 5' 5 };
Magic Number,PermutationWithRepetition,PermutationWithRepetition,C:\repos\dentia_TelerikAcademy\Homeworks\DSA\Recursion\PermutationWithRepetition\PermutationWithRepetition.cs,Main,The following statement contains a magic number: var arr = new[] { 3' 5' 1' 5' 5 };
Magic Number,PermutationWithRepetition,PermutationWithRepetition,C:\repos\dentia_TelerikAcademy\Homeworks\DSA\Recursion\PermutationWithRepetition\PermutationWithRepetition.cs,Main,The following statement contains a magic number: var arr = new[] { 3' 5' 1' 5' 5 };
Magic Number,PermutationWithRepetition,PermutationWithRepetition,C:\repos\dentia_TelerikAcademy\Homeworks\DSA\Recursion\PermutationWithRepetition\PermutationWithRepetition.cs,PermuteAndPrint,The following statement contains a magic number: for (int left = n - 2; left >= start; left--)              {                  for (int right = left + 1; right < n; right++)                  {                      if (arr[left] != arr[right])                      {                          Swap(ref arr[left]' ref arr[right]);                          PermuteAndPrint(arr' left + 1' n);                      }                  }                    var firstElement = arr[left];                  for (int i = left; i < n - 1; i++)                  {                      arr[i] = arr[i + 1];                  }                    arr[n - 1] = firstElement;              }
