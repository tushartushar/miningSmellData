Implementation smell,Namespace,Class,File,Method,Description
Long Method,WPCordovaClassLib.CordovaLib,XHRHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\XHRHelper.cs,InjectScript,The method has 218 lines of code.
Complex Method,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,Cyclomatic complexity of the method is 13
Complex Method,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,Cyclomatic complexity of the method is 8
Complex Method,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_Loaded,Cyclomatic complexity of the method is 8
Complex Method,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_ScriptNotify,Cyclomatic complexity of the method is 8
Complex Method,WPCordovaClassLib.Cordova,CommandFactory,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CommandFactory.cs,CreateByServiceName,Cyclomatic complexity of the method is 8
Complex Method,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,Cyclomatic complexity of the method is 15
Complex Method,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,Cyclomatic complexity of the method is 15
Complex Method,WPCordovaClassLib.CordovaLib,ConfigHandler,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ConfigHandler.cs,URLIsAllowed,Cyclomatic complexity of the method is 8
Complex Method,WPCordovaClassLib.CordovaLib,XHRHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\XHRHelper.cs,HandleCommand,Cyclomatic complexity of the method is 10
Long Parameter List,WPCordovaClassLib.Cordova,NativeExecution,C:\repos\Wangot_dio-wp8\DIO\cordovalib\NativeExecution.cs,ProcessCommand,The method has 5 parameters.
Long Statement,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_Loaded,The length of the statement  "				IsolatedStorageFileStream fileStream = new IsolatedStorageFileStream ("DeviceID.txt"' FileMode.Open' FileAccess.Read' appStorage); " is 130.
Long Statement,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_Loaded,The length of the statement  "				IsolatedStorageFileStream file = new IsolatedStorageFileStream ("DeviceID.txt"' FileMode.Create' FileAccess.Write' appStorage); " is 127.
Long Statement,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_Loaded,The length of the statement  "                *///StreamResourceInfo streamInfo = Application.GetResourceStream(new Uri("CordovaSourceDictionary.xml"' UriKind.Relative)); " is 124.
Long Statement,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_Loaded,The length of the statement  "		//                    string strBaseDir = AppRoot + file.path.Substring(0' file.path.LastIndexOf(System.IO.Path.DirectorySeparatorChar)); " is 137.
Long Statement,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_Loaded,The length of the statement  "		//                    using (IsolatedStorageFileStream outFile = appStorage.OpenFile(AppRoot + file.path' FileMode.Create)) " is 123.
Long Statement,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_Loaded,The length of the statement  "		//                        Debug.WriteLine("INFO: Writing data for " + AppRoot + file.path + " and length = " + data.Length); " is 124.
Long Statement,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_Loaded,The length of the statement  "		//                Debug.WriteLine("ERROR: Failed to write file :: " + file.path + " did you forget to add it to the project?"); " is 127.
Long Statement,WPCordovaClassLib.Cordova,NativeExecution,C:\repos\Wangot_dio-wp8\DIO\cordovalib\NativeExecution.cs,ProcessCommand,The length of the statement  "				Debug.WriteLine ("ERROR: failed to InvokeMethodNamed :: " + commandCallParams.Action + " on Object :: " + commandCallParams.Service); " is 133.
Long Statement,WPCordovaClassLib.Cordova,NativeExecution,C:\repos\Wangot_dio-wp8\DIO\cordovalib\NativeExecution.cs,ProcessCommand,The length of the statement  "		Debug.WriteLine (String.Format ("ERROR: Unable to execute command :: {0}:{1}:{2} "' commandCallParams.Service' commandCallParams.Action' ex.Message)); " is 150.
Long Statement,WPCordovaClassLib.Cordova,PluginResult,C:\repos\Wangot_dio-wp8\DIO\cordovalib\PluginResult.cs,ToJSONString,The length of the statement  "	string res = String.Format ("\"status\":{0}'\"message\":{1}'\"keepCallback\":{2}"' (int)this.Result' this.Message' this.KeepCallback.ToString ().ToLower ()); " is 157.
Long Statement,WPCordovaClassLib.CordovaLib,ConfigHandler,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ConfigHandler.cs,AddWhiteListEntry,The length of the statement  "		// starts with wildcard match - we make the first '.' optional (so '*.org.apache.cordova' will match 'org.apache.cordova') " is 122.
Complex Conditional,WPCordovaClassLib.Cordova.Commands,BaseCommand,C:\repos\Wangot_dio-wp8\DIO\cordovalib\Commands\BaseCommand.cs,InvokeMethodNamed,The conditional expression  "args == null || args.Length == 0 || (args.Length == 1 && "undefined".Equals (args [0]))"  is complex.
Complex Conditional,WPCordovaClassLib,BrowserMouseHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\BrowserMouseHelper.cs,Border_ManipulationDelta,The conditional expression  "(ScrollDisabled || !userScalable) && (e.DeltaManipulation.Scale.X != 0.0 || e.DeltaManipulation.Scale.Y != 0.0)"  is complex.
Empty Catch Block,WPCordovaClassLib,BrowserMouseHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\BrowserMouseHelper.cs,ParseViewportMeta,The method has an empty catch block.
Empty Catch Block,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,The method has an empty catch block.
Empty Catch Block,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,The method has an empty catch block.
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle % 90 != 0 || angle < 0) {  	throw new ArgumentException ();  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle % 360 == 0) {  	return stream;  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: angle = angle % 360;  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle % 180 == 0) {  	wbTarget = new WriteableBitmap (srcPixelWidth' srcPixelHeight);  }  else {  	wbTarget = new WriteableBitmap (srcPixelHeight' srcPixelWidth);  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle == 90) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [(srcPixelHeight - y - 1) + (x * destPixelWidth)] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  else if (angle == 180) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [(srcPixelWidth - x - 1) + (srcPixelHeight - y - 1) * srcPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  else if (angle == 270) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [y + (srcPixelWidth - x - 1) * destPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle == 90) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [(srcPixelHeight - y - 1) + (x * destPixelWidth)] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  else if (angle == 180) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [(srcPixelWidth - x - 1) + (srcPixelHeight - y - 1) * srcPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  else if (angle == 270) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [y + (srcPixelWidth - x - 1) * destPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle == 90) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [(srcPixelHeight - y - 1) + (x * destPixelWidth)] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  else if (angle == 180) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [(srcPixelWidth - x - 1) + (srcPixelHeight - y - 1) * srcPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  else if (angle == 270) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [y + (srcPixelWidth - x - 1) * destPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle == 180) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [(srcPixelWidth - x - 1) + (srcPixelHeight - y - 1) * srcPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  else if (angle == 270) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [y + (srcPixelWidth - x - 1) * destPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle == 180) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [(srcPixelWidth - x - 1) + (srcPixelHeight - y - 1) * srcPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  else if (angle == 270) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [y + (srcPixelWidth - x - 1) * destPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: if (angle == 270) {  	for (int x = 0; x < srcPixelWidth; x++) {  		for (int y = 0; y < srcPixelHeight; y++) {  			destPxls [y + (srcPixelWidth - x - 1) * destPixelWidth] = srcPxls [x + y * srcPixelWidth];  		}  	}  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,RotateStream,The following statement contains a magic number: wbTarget.SaveJpeg (targetStream' destPixelWidth' wbTarget.PixelHeight' 0' 100);  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: while (start == 0xFF && index != 0xE1)// This never seems to happen' todo: optimize   {  	// Get the data length  	ushort dLen = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  	// skip along  	reader.ReadBytes (dLen - 2);  	start = reader.ReadByte ();  	index = reader.ReadByte ();  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: while (start == 0xFF && index != 0xE1)// This never seems to happen' todo: optimize   {  	// Get the data length  	ushort dLen = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  	// skip along  	reader.ReadBytes (dLen - 2);  	start = reader.ReadByte ();  	index = reader.ReadByte ();  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: reader.ReadBytes (dLen - 2);  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: for (var n = 0; n < 4; n++) {  	exif += reader.ReadChar ();  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: reader.ReadBytes (2);  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: reader.ReadBytes (2);  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: if (0x002A != BitConverter.ToUInt16 (reader.ReadBytes (2)' 0)) {  	Debug.WriteLine ("Error in data != 0x002A");  	return 0;  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: for (ushort x = 0; x < tagCount; x++) {  	// Orientation = 0x112' aka 274  	if (0x112 == BitConverter.ToUInt16 (reader.ReadBytes (2)' 0)) {  		ushort dType = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  		// don't care ..  		uint comps = reader.ReadUInt32 ();  		byte[] tagData = reader.ReadBytes (4);  		int orientation = (int)tagData [0];  		Debug.WriteLine ("orientation = " + orientation.ToString ());  		return orientation;  		// 6 means rotate clockwise 90 deg  		// 8 means rotate counter-clockwise 90 deg  		// 1 means all is good  		// 3 means flip vertical  	}  	// skip to the next item' 12 bytes each  	reader.BaseStream.Seek (10' SeekOrigin.Current);  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: for (ushort x = 0; x < tagCount; x++) {  	// Orientation = 0x112' aka 274  	if (0x112 == BitConverter.ToUInt16 (reader.ReadBytes (2)' 0)) {  		ushort dType = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  		// don't care ..  		uint comps = reader.ReadUInt32 ();  		byte[] tagData = reader.ReadBytes (4);  		int orientation = (int)tagData [0];  		Debug.WriteLine ("orientation = " + orientation.ToString ());  		return orientation;  		// 6 means rotate clockwise 90 deg  		// 8 means rotate counter-clockwise 90 deg  		// 1 means all is good  		// 3 means flip vertical  	}  	// skip to the next item' 12 bytes each  	reader.BaseStream.Seek (10' SeekOrigin.Current);  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: for (ushort x = 0; x < tagCount; x++) {  	// Orientation = 0x112' aka 274  	if (0x112 == BitConverter.ToUInt16 (reader.ReadBytes (2)' 0)) {  		ushort dType = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  		// don't care ..  		uint comps = reader.ReadUInt32 ();  		byte[] tagData = reader.ReadBytes (4);  		int orientation = (int)tagData [0];  		Debug.WriteLine ("orientation = " + orientation.ToString ());  		return orientation;  		// 6 means rotate clockwise 90 deg  		// 8 means rotate counter-clockwise 90 deg  		// 1 means all is good  		// 3 means flip vertical  	}  	// skip to the next item' 12 bytes each  	reader.BaseStream.Seek (10' SeekOrigin.Current);  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: for (ushort x = 0; x < tagCount; x++) {  	// Orientation = 0x112' aka 274  	if (0x112 == BitConverter.ToUInt16 (reader.ReadBytes (2)' 0)) {  		ushort dType = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  		// don't care ..  		uint comps = reader.ReadUInt32 ();  		byte[] tagData = reader.ReadBytes (4);  		int orientation = (int)tagData [0];  		Debug.WriteLine ("orientation = " + orientation.ToString ());  		return orientation;  		// 6 means rotate clockwise 90 deg  		// 8 means rotate counter-clockwise 90 deg  		// 1 means all is good  		// 3 means flip vertical  	}  	// skip to the next item' 12 bytes each  	reader.BaseStream.Seek (10' SeekOrigin.Current);  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: if (0x112 == BitConverter.ToUInt16 (reader.ReadBytes (2)' 0)) {  	ushort dType = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  	// don't care ..  	uint comps = reader.ReadUInt32 ();  	byte[] tagData = reader.ReadBytes (4);  	int orientation = (int)tagData [0];  	Debug.WriteLine ("orientation = " + orientation.ToString ());  	return orientation;  	// 6 means rotate clockwise 90 deg  	// 8 means rotate counter-clockwise 90 deg  	// 1 means all is good  	// 3 means flip vertical  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: if (0x112 == BitConverter.ToUInt16 (reader.ReadBytes (2)' 0)) {  	ushort dType = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  	// don't care ..  	uint comps = reader.ReadUInt32 ();  	byte[] tagData = reader.ReadBytes (4);  	int orientation = (int)tagData [0];  	Debug.WriteLine ("orientation = " + orientation.ToString ());  	return orientation;  	// 6 means rotate clockwise 90 deg  	// 8 means rotate counter-clockwise 90 deg  	// 1 means all is good  	// 3 means flip vertical  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: if (0x112 == BitConverter.ToUInt16 (reader.ReadBytes (2)' 0)) {  	ushort dType = BitConverter.ToUInt16 (reader.ReadBytes (2)' 0);  	// don't care ..  	uint comps = reader.ReadUInt32 ();  	byte[] tagData = reader.ReadBytes (4);  	int orientation = (int)tagData [0];  	Debug.WriteLine ("orientation = " + orientation.ToString ());  	return orientation;  	// 6 means rotate clockwise 90 deg  	// 8 means rotate counter-clockwise 90 deg  	// 1 means all is good  	// 3 means flip vertical  }  
Magic Number,WPCordovaClassLib.Cordova.Commands,ImageExifHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ImageExifHelper.cs,getImageOrientationFromStream,The following statement contains a magic number: reader.BaseStream.Seek (10' SeekOrigin.Current);  
Magic Number,WPCordovaClassLib,BrowserMouseHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\BrowserMouseHelper.cs,ParseViewportMeta,The following statement contains a magic number: try {  	string metaContent = _browser.InvokeScript ("eval"' new string[] {  		metaScript  	}) as string;  	string[] arr = metaContent.Split (new[] {  		' ''  		''''  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Dictionary<string' string> metaDictionary = new Dictionary<string' string> ();  	foreach (string val in arr) {  		string[] keyVal = val.Split ('=');  		metaDictionary.Add (keyVal [0]' keyVal [1]);  	}  	this.userScalable = false;  	// reset to default  	if (metaDictionary.ContainsKey ("user-scalable")) {  		this.userScalable = metaDictionary ["user-scalable"] == "yes";  	}  	this.maxScale = 2.0;  	// reset to default  	if (metaDictionary.ContainsKey ("maximum-scale")) {  		this.maxScale = double.Parse (metaDictionary ["maximum-scale"]);  	}  	this.minScale = 0.5;  	// reset to default  	if (metaDictionary.ContainsKey ("minimum-scale")) {  		this.minScale = double.Parse (metaDictionary ["minimum-scale"]);  	}  }  catch (Exception) {  }  
Magic Number,WPCordovaClassLib,BrowserMouseHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\BrowserMouseHelper.cs,ParseViewportMeta,The following statement contains a magic number: try {  	string metaContent = _browser.InvokeScript ("eval"' new string[] {  		metaScript  	}) as string;  	string[] arr = metaContent.Split (new[] {  		' ''  		''''  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Dictionary<string' string> metaDictionary = new Dictionary<string' string> ();  	foreach (string val in arr) {  		string[] keyVal = val.Split ('=');  		metaDictionary.Add (keyVal [0]' keyVal [1]);  	}  	this.userScalable = false;  	// reset to default  	if (metaDictionary.ContainsKey ("user-scalable")) {  		this.userScalable = metaDictionary ["user-scalable"] == "yes";  	}  	this.maxScale = 2.0;  	// reset to default  	if (metaDictionary.ContainsKey ("maximum-scale")) {  		this.maxScale = double.Parse (metaDictionary ["maximum-scale"]);  	}  	this.minScale = 0.5;  	// reset to default  	if (metaDictionary.ContainsKey ("minimum-scale")) {  		this.minScale = double.Parse (metaDictionary ["minimum-scale"]);  	}  }  catch (Exception) {  }  
Magic Number,WPCordovaClassLib,BrowserMouseHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\BrowserMouseHelper.cs,ParseViewportMeta,The following statement contains a magic number: this.maxScale = 2.0;  
Magic Number,WPCordovaClassLib,BrowserMouseHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\BrowserMouseHelper.cs,ParseViewportMeta,The following statement contains a magic number: this.minScale = 0.5;  
Magic Number,WPCordovaClassLib.Cordova,CordovaCommandCall,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaCommandCall.cs,Parse,The following statement contains a magic number: if (split.Length < 3) {  	return null;  }  
Magic Number,WPCordovaClassLib.Cordova,CordovaCommandCall,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaCommandCall.cs,Parse,The following statement contains a magic number: commandCallParameters.CallbackId = split [2];  
Magic Number,WPCordovaClassLib.Cordova,CordovaCommandCall,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaCommandCall.cs,Parse,The following statement contains a magic number: try {  	string arg = split.Length <= 3 ? "[]" : String.Join ("/"' split.Skip (3));  	if (!arg.StartsWith ("["))// save the exception  	 {  		arg = string.Format ("[{0}]"' arg);  	}  	List<string> args = JSON.JsonHelper.Deserialize<List<string>> (arg);  	args.Add (commandCallParameters.CallbackId);  	commandCallParameters.Args = JSON.JsonHelper.Serialize (args.ToArray ());  }  catch (Exception) {  	return null;  }  
Magic Number,WPCordovaClassLib.Cordova,CordovaCommandCall,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaCommandCall.cs,Parse,The following statement contains a magic number: try {  	string arg = split.Length <= 3 ? "[]" : String.Join ("/"' split.Skip (3));  	if (!arg.StartsWith ("["))// save the exception  	 {  		arg = string.Format ("[{0}]"' arg);  	}  	List<string> args = JSON.JsonHelper.Deserialize<List<string>> (arg);  	args.Add (commandCallParameters.CallbackId);  	commandCallParameters.Args = JSON.JsonHelper.Serialize (args.ToArray ());  }  catch (Exception) {  	return null;  }  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,The following statement contains a magic number: switch (Page.Orientation) {  case PageOrientation.Portrait:  // intentional fall through  case PageOrientation.PortraitUp:  	i = 0;  	break;  case PageOrientation.PortraitDown:  	i = 180;  	break;  case PageOrientation.Landscape:  // intentional fall through  case PageOrientation.LandscapeLeft:  	i = -90;  	break;  case PageOrientation.LandscapeRight:  	i = 90;  	break;  }  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,The following statement contains a magic number: switch (Page.Orientation) {  case PageOrientation.Portrait:  // intentional fall through  case PageOrientation.PortraitUp:  	i = 0;  	break;  case PageOrientation.PortraitDown:  	i = 180;  	break;  case PageOrientation.Landscape:  // intentional fall through  case PageOrientation.LandscapeLeft:  	i = -90;  	break;  case PageOrientation.LandscapeRight:  	i = 90;  	break;  }  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,The following statement contains a magic number: switch (Page.Orientation) {  case PageOrientation.Portrait:  // intentional fall through  case PageOrientation.PortraitUp:  	i = 0;  	break;  case PageOrientation.PortraitDown:  	i = 180;  	break;  case PageOrientation.Landscape:  // intentional fall through  case PageOrientation.LandscapeLeft:  	i = -90;  	break;  case PageOrientation.LandscapeRight:  	i = 90;  	break;  }  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,The following statement contains a magic number: i = 180;  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,The following statement contains a magic number: i = -90;  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,The following statement contains a magic number: i = 90;  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,The following statement contains a magic number: switch (e.Orientation) {  case PageOrientation.Portrait:  // intentional fall through  case PageOrientation.PortraitUp:  	i = 0;  	break;  case PageOrientation.PortraitDown:  	i = 180;  	break;  case PageOrientation.Landscape:  // intentional fall through  case PageOrientation.LandscapeLeft:  	i = -90;  	break;  case PageOrientation.LandscapeRight:  	i = 90;  	break;  }  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,The following statement contains a magic number: switch (e.Orientation) {  case PageOrientation.Portrait:  // intentional fall through  case PageOrientation.PortraitUp:  	i = 0;  	break;  case PageOrientation.PortraitDown:  	i = 180;  	break;  case PageOrientation.Landscape:  // intentional fall through  case PageOrientation.LandscapeLeft:  	i = -90;  	break;  case PageOrientation.LandscapeRight:  	i = 90;  	break;  }  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,The following statement contains a magic number: switch (e.Orientation) {  case PageOrientation.Portrait:  // intentional fall through  case PageOrientation.PortraitUp:  	i = 0;  	break;  case PageOrientation.PortraitDown:  	i = 180;  	break;  case PageOrientation.Landscape:  // intentional fall through  case PageOrientation.LandscapeLeft:  	i = -90;  	break;  case PageOrientation.LandscapeRight:  	i = 90;  	break;  }  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,The following statement contains a magic number: i = 180;  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,The following statement contains a magic number: i = -90;  
Magic Number,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,The following statement contains a magic number: i = 90;  
Magic Number,WPCordovaClassLib.CordovaLib,ConfigHandler,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ConfigHandler.cs,AddWhiteListEntry,The following statement contains a magic number: try {  	Uri uri = new Uri (origin.Replace ("*"' "replaced-text")' UriKind.Absolute);  	string tempHostName = uri.Host.Replace ("replaced-text"' "*");  	//if (uri.HostNameType == UriHostNameType.Dns){}  	// starts with wildcard match - we make the first '.' optional (so '*.org.apache.cordova' will match 'org.apache.cordova')  	if (tempHostName.StartsWith ("*.")) {  		//"(\\s{0}|*.)"  		hostName = @"\w*.*" + tempHostName.Substring (2).Replace ("."' @"\.").Replace ("*"' @"\w*");  	}  	else {  		hostName = tempHostName.Replace ("."' @"\.").Replace ("*"' @"\w*");  	}  	//  "^https?://"  	hostMatchingRegex = uri.Scheme + "://" + hostName + uri.PathAndQuery;  	//Debug.WriteLine("Adding regex :: " + hostMatchingRegex);  	AllowedDomains.Add (hostMatchingRegex);  }  catch (Exception) {  	Debug.WriteLine ("Invalid Whitelist entry (probably missing the protocol):: " + origin);  }  
Magic Number,WPCordovaClassLib.CordovaLib,ConfigHandler,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ConfigHandler.cs,AddWhiteListEntry,The following statement contains a magic number: if (tempHostName.StartsWith ("*.")) {  	//"(\\s{0}|*.)"  	hostName = @"\w*.*" + tempHostName.Substring (2).Replace ("."' @"\.").Replace ("*"' @"\w*");  }  else {  	hostName = tempHostName.Replace ("."' @"\.").Replace ("*"' @"\w*");  }  
Magic Number,WPCordovaClassLib.CordovaLib,ConfigHandler,C:\repos\Wangot_dio-wp8\DIO\cordovalib\ConfigHandler.cs,AddWhiteListEntry,The following statement contains a magic number: hostName = @"\w*.*" + tempHostName.Substring (2).Replace ("."' @"\.").Replace ("*"' @"\w*");  
Missing Default,WPCordovaClassLib,CordovaView,C:\repos\Wangot_dio-wp8\DIO\cordovalib\CordovaView.xaml.cs,CordovaBrowser_ScriptNotify,The following switch statement is missing a default case: switch (commandCallParams.Action.ToLower ()) {  case "overridebackbutton":  	string arg0 = JsonHelper.Deserialize<string[]> (commandCallParams.Args) [0];  	this.OverrideBackButton = (arg0 != null && arg0.Length > 0 && arg0.ToLower () == "true");  	break;  }  
Missing Default,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,InjectScript,The following switch statement is missing a default case: switch (Page.Orientation) {  case PageOrientation.Portrait:  // intentional fall through  case PageOrientation.PortraitUp:  	i = 0;  	break;  case PageOrientation.PortraitDown:  	i = 180;  	break;  case PageOrientation.Landscape:  // intentional fall through  case PageOrientation.LandscapeLeft:  	i = -90;  	break;  case PageOrientation.LandscapeRight:  	i = 90;  	break;  }  
Missing Default,WPCordovaClassLib.Cordova,OrientationHelper,C:\repos\Wangot_dio-wp8\DIO\cordovalib\OrientationHelper.cs,page_OrientationChanged,The following switch statement is missing a default case: switch (e.Orientation) {  case PageOrientation.Portrait:  // intentional fall through  case PageOrientation.PortraitUp:  	i = 0;  	break;  case PageOrientation.PortraitDown:  	i = 180;  	break;  case PageOrientation.Landscape:  // intentional fall through  case PageOrientation.LandscapeLeft:  	i = -90;  	break;  case PageOrientation.LandscapeRight:  	i = 90;  	break;  }  
