Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToViews,Cyclomatic complexity of the method is 8
Complex Method,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToRoutines,Cyclomatic complexity of the method is 8
Complex Method,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToConstraints,Cyclomatic complexity of the method is 11
Complex Method,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateProperty,Cyclomatic complexity of the method is 12
Complex Method,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetTables,Cyclomatic complexity of the method is 35
Complex Method,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetViews,Cyclomatic complexity of the method is 35
Long Parameter List,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,DataModelElement,The method has 5 parameters.
Long Parameter List,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToConstraints,The method has 5 parameters.
Long Parameter List,Fosol.Data.Models.Configuration,ConventionElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\ConventionElement.cs,CreateAlias,The method has 9 parameters.
Long Statement,Fosol.Data.Models,ColumnCollection,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\ColumnCollection.cs,Add,The length of the statement  "			throw new InvalidOperationException (string.Format ("Column '{0}' already exists.  Cannot add a duplicate column."' column.Name)); " is 130.
Long Statement,Fosol.Data.Models,ColumnCollection,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\ColumnCollection.cs,Add,The length of the statement  "			throw new InvalidOperationException (string.Format ("Column at ordinal position '{0}' already exists.  Cannot add a duplicate column."' column.OrdinalPosition)); " is 161.
Long Statement,Fosol.Data.Models,ConstraintColumnCollection,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\ConstraintColumnCollection.cs,Add,The length of the statement  "		throw new InvalidOperationException (string.Format ("Column '{0}' already exists.  Cannot add a duplicate column."' column.Name)); " is 130.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToTables,The length of the statement  "		var table_config = this.Tables.FirstOrDefault (t => t.Name.Equals (table.Name' StringComparison.InvariantCultureIgnoreCase)); " is 125.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToTables,The length of the statement  "		if ((table_config == null && this.Tables.Import == ImportOption.Configured) || (table_config != null && table_config.Action == ImportAction.Ignore)) { " is 150.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToViews,The length of the statement  "		if ((config == null && view_import_option == ImportOption.Configured) || (config != null && config.Action == ImportAction.Ignore)) { " is 132.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToRoutines,The length of the statement  "		var config = this.Routines.FirstOrDefault (r => r.Name.Equals (routine.Name' StringComparison.InvariantCultureIgnoreCase)); " is 123.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToRoutines,The length of the statement  "		if ((config == null && routine_import_option == ImportOption.Configured) || (config != null && config.Action == ImportAction.Ignore)) { " is 135.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToColumns,The length of the statement  "		var column_config = config.Columns.FirstOrDefault (c => c.Name.Equals (column.Name' StringComparison.InvariantCultureIgnoreCase)); " is 130.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToColumns,The length of the statement  "		if ((column_config == null && config.Columns.Import == ImportOption.Configured) || (column_config != null && column_config.Action == ImportAction.Ignore)) { " is 156.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToConstraints,The length of the statement  "		var constraint_config = config.Constraints.FirstOrDefault (c => c.Name.Equals (constraint.Name' StringComparison.InvariantCultureIgnoreCase)); " is 142.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToConstraints,The length of the statement  "		if ((constraint_config == null && config.Constraints.Import == ImportOption.Configured) || (constraint_config != null && constraint_config.Action == ImportAction.Ignore)) { " is 172.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToConstraints,The length of the statement  "			var parent_table_config = this.Tables.FirstOrDefault (t => t.Name.Equals (((ReferentialConstraint)constraint).ParentName' StringComparison.InvariantCultureIgnoreCase)); " is 168.
Long Statement,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToConstraints,The length of the statement  "			if ((parent_table_config == null && this.Tables.Import == ImportOption.Configured) || (parent_table_config != null && parent_table_config.Action == ImportAction.Ignore)) { " is 171.
Long Statement,Fosol.Data.Models.Configuration,ModelFactorySection,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\ModelFactorySection.cs,GetDefault,The length of the statement  "	return (ModelFactorySection)System.Configuration.ConfigurationManager.GetSection (ModelFactorySection.DefaultSectionName); " is 122.
Long Statement,Fosol.Data.Models.Configuration,ConventionElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\ConventionElement.cs,CreateManyToOneAlias,The length of the statement  "	Fosol.Common.Validation.Assert.IsValue (constraint.ConstraintType' ConstraintType.ForeignKey' "constraint.ConstraintType"); " is 123.
Long Statement,Fosol.Data.Models.Configuration,ConventionElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\ConventionElement.cs,CreateAlias,The length of the statement  "			exp = "(" + String.Join ("|"' g.Aliases.Where (a => !a.IsRegex).Select (c => Regex.Escape (c.Find))) + ")|(" + String.Join (")|("' g.Aliases.Where (a => a.IsRegex).Select (c => c.Find)) + ")"; " is 192.
Long Statement,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateProperty,The length of the statement  "		prop.AppendLine ("[Column(\"" + column.Name + "\"' Order = " + column.OrdinalPosition + "' TypeName = \"" + column.DbType + "\")]"); " is 132.
Long Statement,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateProperty,The length of the statement  "			prop.AppendLine ("[MaxLength(" + column.MaximumLength + "' ErrorMessage = \"" + column.Name + " cannot be longer than " + column.MaximumLength + " characters.\")]"); " is 165.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetTables,The length of the statement  "					var column = new SqlColumn ((string)reader ["COLUMN_NAME"]' (System.Data.SqlDbType)Enum.Parse (typeof(System.Data.SqlDbType)' (string)reader ["DATA_TYPE"]' true)' (int)reader ["ORDINAL_POSITION"]); " is 197.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetTables,The length of the statement  "						throw new Exceptions.ModelFactoryException (string.Format ("Invalid constraint: Column '{0}' wasn't imported."' column_name)); " is 126.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetTables,The length of the statement  "						constraint = constraint_type == ConstraintType.ForeignKey ? new ReferentialConstraint (constraint_name' constraint_type) : new Constraint (constraint_name' constraint_type); " is 173.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetViews,The length of the statement  "					var column = new SqlColumn ((string)reader ["COLUMN_NAME"]' (System.Data.SqlDbType)Enum.Parse (typeof(System.Data.SqlDbType)' (string)reader ["DATA_TYPE"]' true)' (int)reader ["ORDINAL_POSITION"]); " is 197.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetViews,The length of the statement  "						throw new Exceptions.ModelFactoryException (string.Format ("Invalid constraint: Column '{0}' wasn't imported."' column_name)); " is 126.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetViews,The length of the statement  "						constraint = constraint_type == ConstraintType.ForeignKey ? new ReferentialConstraint (constraint_name' constraint_type) : new Constraint (constraint_name' constraint_type); " is 173.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetColumns,The length of the statement  "	var sql = "SELECT c.*' " + "COLUMNPROPERTY(OBJECT_ID('{0}')' c.COLUMN_NAME' 'AllowsNull') AS AllowsNull' " + "COLUMNPROPERTY(OBJECT_ID('{0}')' c.COLUMN_NAME' 'IsComputed') AS IsComputed' " + "COLUMNPROPERTY(OBJECT_ID('{0}')' c.COLUMN_NAME' 'IsDeterministic') AS IsDeterministic' " + "COLUMNPROPERTY(OBJECT_ID('{0}')' c.COLUMN_NAME' 'IsIdentity') AS IsIdentity " + "FROM INFORMATION_SCHEMA.Columns c " + "WHERE c.TABLE_NAME='{0}' " + "ORDER BY ORDINAL_POSITION ASC "; " is 466.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetConstraint,The length of the statement  "	var sql = "SELECT kcu.COLUMN_NAME' kcu.CONSTRAINT_NAME' kcu.ORDINAL_POSITION' tc.* " + "FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu " + "LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc ON kcu.TABLE_NAME = tc.TABLE_NAME AND kcu.CONSTRAINT_NAME = tc.CONSTRAINT_NAME " + "WHERE kcu.CONSTRAINT_NAME = '{0}' "; " is 308.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetConstraints,The length of the statement  "		sql = "SELECT kcu.COLUMN_NAME' kcu.CONSTRAINT_NAME' kcu.ORDINAL_POSITION' tc.* " + "FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu " + "LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc ON kcu.TABLE_NAME = tc.TABLE_NAME AND kcu.CONSTRAINT_NAME = tc.CONSTRAINT_NAME " + "WHERE kcu.TABLE_NAME = '{0}' " + "ORDER BY kcu.ORDINAL_POSITION ASC "; " is 338.
Long Statement,Fosol.Data.Models.SqlClient,SqlModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\SqlClient\SqlModelFactory.cs,GetConstraints,The length of the statement  "		sql = "SELECT kcu.COLUMN_NAME' kcu.CONSTRAINT_NAME' kcu.ORDINAL_POSITION' tc.* " + "FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu " + "LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc ON kcu.TABLE_NAME = tc.TABLE_NAME AND kcu.CONSTRAINT_NAME = tc.CONSTRAINT_NAME " + "WHERE kcu.TABLE_NAME = '{0}' " + " AND kcu.COLUMN_NAME='{1}' " + "ORDER BY kcu.ORDINAL_POSITION ASC "; " is 370.
Complex Conditional,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToTables,The conditional expression  "(table_config == null && this.Tables.Import == ImportOption.Configured) || (table_config != null && table_config.Action == ImportAction.Ignore)"  is complex.
Complex Conditional,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToViews,The conditional expression  "(config == null && view_import_option == ImportOption.Configured) || (config != null && config.Action == ImportAction.Ignore)"  is complex.
Complex Conditional,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToRoutines,The conditional expression  "(config == null && routine_import_option == ImportOption.Configured) || (config != null && config.Action == ImportAction.Ignore)"  is complex.
Complex Conditional,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToColumns,The conditional expression  "(column_config == null && config.Columns.Import == ImportOption.Configured) || (column_config != null && column_config.Action == ImportAction.Ignore)"  is complex.
Complex Conditional,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToConstraints,The conditional expression  "(constraint_config == null && config.Constraints.Import == ImportOption.Configured) || (constraint_config != null && constraint_config.Action == ImportAction.Ignore)"  is complex.
Complex Conditional,Fosol.Data.Models.Configuration,DataModelElement,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Configuration\DataModelElement.cs,ApplyConfigurationToConstraints,The conditional expression  "(parent_table_config == null && this.Tables.Import == ImportOption.Configured) || (parent_table_config != null && parent_table_config.Action == ImportAction.Ignore)"  is complex.
Virtual Method Call from Constructor,Fosol.Data.Models,Column,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\Column.cs,Column,The constructor "Column" calls a virtual method "GetNativeType".
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#region Variables".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#endregion".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#region Properties".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#endregion".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#region Columns".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: foreach (var column in table.Columns) {  	foreach (var line in GenerateProperty (column).Split (new[] {  		"\r\n"  	}' StringSplitOptions.None)) {  		code.AppendLine (line.Indent (2));  	}  }  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: foreach (var line in GenerateProperty (column).Split (new[] {  	"\r\n"  }' StringSplitOptions.None)) {  	code.AppendLine (line.Indent (2));  }  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine (line.Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#endregion".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#region Referential Constraints".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: foreach (var column in table.Columns.Where (c => c.IsForeignKey)) {  	foreach (var line in GenerateConstraint (column).Split (new[] {  		"\r\n"  	}' StringSplitOptions.None)) {  		code.AppendLine (line.Indent (2));  	}  }  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: foreach (var line in GenerateConstraint (column).Split (new[] {  	"\r\n"  }' StringSplitOptions.None)) {  	code.AppendLine (line.Indent (2));  }  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine (line.Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#endregion".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#region Constructors".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#endregion".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#region Methods".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#endregion".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#region Events".Indent (2));  
Magic Number,Fosol.Data.Models.CSharp,CSharpCodeFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\CSharp\CSharpCodeFactory.cs,GenerateTable,The following statement contains a magic number: code.AppendLine ("#endregion".Indent (2));  
Missing Default,Fosol.Data.Models,ModelFactory,C:\repos\Fosol_Fosol.Data\Fosol.Data.Models\ModelFactory.cs,ParseConstraintType,The following switch statement is missing a default case: switch (value) {  case ("FOREIGN KEY"):  	return ConstraintType.ForeignKey;  case ("PRIMARY KEY"):  	return ConstraintType.PrimaryKey;  case ("UNIQUE"):  	return ConstraintType.Unique;  }  
