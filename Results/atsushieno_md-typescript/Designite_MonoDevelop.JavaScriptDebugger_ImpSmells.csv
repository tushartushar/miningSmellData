Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.JavaScript.Node.Debugger,NodeBacktrace,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeBacktrace.cs,GetExpressionCompletionData,Cyclomatic complexity of the method is 13
Long Statement,MonoDevelop.JavaScript.Node.Debugger,NodeDebuggerSessionFactory,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\MonoDevelop.JavaScript.Node.Debugger\NodeDebuggerSessionFactory.cs,CreateDebuggerStartInfo,The length of the statement  "			// FIXME: there is some issue in SourceMap parser or TypeScript map output that results in ArgumentOutOfRangeException... " is 121.
Long Statement,MonoDevelop.JavaScript.Node.Debugger,NodeDebuggerSessionFactory,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\MonoDevelop.JavaScript.Node.Debugger\NodeDebuggerSessionFactory.cs,CreateDebuggerStartInfo,The length of the statement  "			startInfo.SourceMap.Read (File.ReadAllText (Path.Combine (pec.WorkingDirectory' Path.GetFileName (pec.ScriptPath + ".map")))); " is 126.
Long Statement,Mono.JavaScript.Node.Debugger,NodeDebuggerSession,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeDebuggerSession.cs,OnInsertBreakEvent,The length of the statement  "							var ret = debugger.SetBreakpoint ("function"' bf.FunctionName' be.Enabled' -1' -1' bp.ConditionExpression' bp.HitCount); " is 120.
Long Statement,Mono.JavaScript.Node.Debugger,NodeDebuggerSession,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeDebuggerSession.cs,OnEnableBreakEvent,The length of the statement  "					debugger.ChangeBreakpoint (new ChangeBreakpointRequestArguments () { Breakpoint = (double) binfo.Handle' Enabled = enable }); " is 125.
Long Statement,Mono.JavaScript.Node.Debugger,NodeBacktrace,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeBacktrace.cs,GetParameters,The length of the statement  "			NodeCommandResult res = session.RunCommand ("-stack-list-arguments"' "0"' frameIndex.ToString ()' frameIndex.ToString ()); " is 122.
Long Statement,Mono.JavaScript.Node.Debugger,NodeDissassemblyBuffer,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeBacktrace.cs,GetLines,The length of the statement  "				ResultData data = session.RunCommand ("-data-disassemble"' "-s"' startAddr.ToString ()' "-e"' endAddr.ToString ()' "--"' "0"); " is 126.
Magic Number,Mono.JavaScript.Node.Debugger,NodeDebuggerSession,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeDebuggerSession.cs,StartNodeDebugger,The following statement contains a magic number: !bootstrap_lock.Wait (8000)
Magic Number,Mono.JavaScript.Node.Debugger,NodeDebuggerSession,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeDebuggerSession.cs,ProcessError,The following statement contains a magic number: bootstrap_step < 2
Magic Number,Mono.JavaScript.Node.Debugger,NodeBacktrace,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeBacktrace.cs,GetExpressionCompletionData,The following statement contains a magic number: exp = exp.Substring (0' exp.Length - (pointer ? 2 : 1));
Magic Number,Mono.JavaScript.Node.Debugger,NodeBacktrace,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeBacktrace.cs,CreateFrame,The following statement contains a magic number: addr = long.Parse (sadr.Substring (2)' NumberStyles.HexNumber);
Magic Number,Mono.JavaScript.Node.Debugger,NodeBacktrace,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeBacktrace.cs,Disassemble,The following statement contains a magic number: long addr = long.Parse (data.GetObject ("frame").GetValue ("addr").Substring (2)' NumberStyles.HexNumber);
Magic Number,Mono.JavaScript.Node.Debugger,NodeDissassemblyBuffer,D:\research\architectureSmells\repos\atsushieno_md-typescript\MonoDevelop.JavaScriptDebugger\Mono.JavaScript.Node.Debugger\NodeBacktrace.cs,GetLines,The following statement contains a magic number: long addr = long.Parse (aline.GetValue ("address").Substring (2)' NumberStyles.HexNumber);
