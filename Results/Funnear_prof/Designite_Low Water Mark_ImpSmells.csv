Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LowWaterMark,action,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\action.cs,buttonGo_Click,Cyclomatic complexity of the method is 16
Complex Method,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,Cyclomatic complexity of the method is 9
Long Statement,LowWaterMark,action,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\action.cs,buttonGo_Click,The length of the statement  "			MessageBox.Show ("Уровень конфиденциальности объекта сменился на: " + ap.MyObjectsList [thisObjectID].getLevel ().ToString ()); " is 127.
Magic Number,LowWaterMark,action,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\action.cs,buttonGo_Click,The following statement contains a magic number: if (chosenRight == "Read") {  	checkAccess = ap.MyObjectsList [thisObjectID].rights [ap.MyUsersList [thisUserID]].isRead ();  	if (checkAccess)  		MessageBox.Show ("Вы прочитали " + chosenObject);  	else  		MessageBox.Show ("У вас нет прав на чтение объекта " + chosenObject);  }  else if (chosenRight == "Write") {  	checkAccess = ap.MyObjectsList [thisObjectID].rights [ap.MyUsersList [thisUserID]].isWrite ();  	if (checkAccess) {  		MessageBox.Show ("Вы меняете объект: " + chosenObject);  		/*                         * При выполнении операции write' гриф конфиденциальности объекта снижается                         * до уровня допуска субъекта' выполнившего команду write                         * *///старый уровень в цифрах  		short oldSecrecyLevelNum = ap.MyObjectsList [thisObjectID].getLevel ().LevelNum;  		ap.MyObjectsList [thisObjectID].changeLevel (ap.MyUsersList [thisUserID].getLevel ());  		MessageBox.Show ("Уровень конфиденциальности объекта сменился на: " + ap.MyObjectsList [thisObjectID].getLevel ().ToString ());  		//новый уровень в цифрах  		short newSecrecyLevelNum = ap.MyObjectsList [thisObjectID].getLevel ().LevelNum;  		//добавить автоматический перерассчет матрицы доступа  		/*                          * При снижении грифа конфиденциальности объекта вся прежняя информация в объекте стирается                          * и записывается информация субъектом' давшим команду write.                          * *///проверка на снижение  		if (newSecrecyLevelNum < oldSecrecyLevelNum) {  			MessageBox.Show ("Старые данные уничтожены' сохраняем новые.");  		}  		else {  			MessageBox.Show ("Старая информация сохранилась.");  		}  		/*                         * Уничтожение информации не производится'                         * если гриф конфиденциальности объекта равен уровню допуска субъекта.                         * */}  	else  		MessageBox.Show ("У вас нет прав на изменение объекта " + chosenObject);  }  else if (chosenRight == "Reset") {  	//проверка на наличие прав на выбранное действие  	checkAccess = ap.MyObjectsList [thisObjectID].rights [ap.MyUsersList [thisUserID]].isReset ();  	if (checkAccess) {  		/*                                    * При выполнении команды reset' гриф конфиденциальности объекта поднимается                              * и становится максимальным в линейном порядке.                              *                               * После этого все субъекты приобретают право write в данный объект'                              * но read имеют право только субъекты' имеющие максимальный уровень безопасности.                               * */string levelName = "TopSecret";  		Secrecy desiredLevel = new Secrecy (levelName' 3);  		if (ap.MyObjectsList [thisObjectID].changeLevel (desiredLevel)) {  			MessageBox.Show ("Вы повысили уровень конфиденциальности объекта " + chosenObject + " на максимальный.");  			//устанавливаем права на запись  			for (short i = 0; i < ap.MyUsersList.Count; i++) {  				ap.MyObjectsList [thisObjectID].grantRight (ap.MyUsersList [i]' "Write");  			}  			//устанавливаем права на чтение админу' но лишаем остальных  			for (short i = 0; i < ap.MyUsersList.Count; i++) {  				if (!ap.MyUsersList [i].Admin) {  					ap.MyObjectsList [thisObjectID].discardRight (ap.MyUsersList [i]' "Read");  				}  				else {  					ap.MyObjectsList [thisObjectID].grantRight (ap.MyUsersList [i]' "Read");  				}  			}  		}  		else  			MessageBox.Show ("Ошибка.");  	}  	else  		MessageBox.Show ("У вас нет прав на изменение уровня конфиденциальности объекта " + chosenObject);  }  else  	MessageBox.Show ("Ошибка выбора операции.");  
Magic Number,LowWaterMark,action,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\action.cs,buttonGo_Click,The following statement contains a magic number: if (chosenRight == "Write") {  	checkAccess = ap.MyObjectsList [thisObjectID].rights [ap.MyUsersList [thisUserID]].isWrite ();  	if (checkAccess) {  		MessageBox.Show ("Вы меняете объект: " + chosenObject);  		/*                         * При выполнении операции write' гриф конфиденциальности объекта снижается                         * до уровня допуска субъекта' выполнившего команду write                         * *///старый уровень в цифрах  		short oldSecrecyLevelNum = ap.MyObjectsList [thisObjectID].getLevel ().LevelNum;  		ap.MyObjectsList [thisObjectID].changeLevel (ap.MyUsersList [thisUserID].getLevel ());  		MessageBox.Show ("Уровень конфиденциальности объекта сменился на: " + ap.MyObjectsList [thisObjectID].getLevel ().ToString ());  		//новый уровень в цифрах  		short newSecrecyLevelNum = ap.MyObjectsList [thisObjectID].getLevel ().LevelNum;  		//добавить автоматический перерассчет матрицы доступа  		/*                          * При снижении грифа конфиденциальности объекта вся прежняя информация в объекте стирается                          * и записывается информация субъектом' давшим команду write.                          * *///проверка на снижение  		if (newSecrecyLevelNum < oldSecrecyLevelNum) {  			MessageBox.Show ("Старые данные уничтожены' сохраняем новые.");  		}  		else {  			MessageBox.Show ("Старая информация сохранилась.");  		}  		/*                         * Уничтожение информации не производится'                         * если гриф конфиденциальности объекта равен уровню допуска субъекта.                         * */}  	else  		MessageBox.Show ("У вас нет прав на изменение объекта " + chosenObject);  }  else if (chosenRight == "Reset") {  	//проверка на наличие прав на выбранное действие  	checkAccess = ap.MyObjectsList [thisObjectID].rights [ap.MyUsersList [thisUserID]].isReset ();  	if (checkAccess) {  		/*                                    * При выполнении команды reset' гриф конфиденциальности объекта поднимается                              * и становится максимальным в линейном порядке.                              *                               * После этого все субъекты приобретают право write в данный объект'                              * но read имеют право только субъекты' имеющие максимальный уровень безопасности.                               * */string levelName = "TopSecret";  		Secrecy desiredLevel = new Secrecy (levelName' 3);  		if (ap.MyObjectsList [thisObjectID].changeLevel (desiredLevel)) {  			MessageBox.Show ("Вы повысили уровень конфиденциальности объекта " + chosenObject + " на максимальный.");  			//устанавливаем права на запись  			for (short i = 0; i < ap.MyUsersList.Count; i++) {  				ap.MyObjectsList [thisObjectID].grantRight (ap.MyUsersList [i]' "Write");  			}  			//устанавливаем права на чтение админу' но лишаем остальных  			for (short i = 0; i < ap.MyUsersList.Count; i++) {  				if (!ap.MyUsersList [i].Admin) {  					ap.MyObjectsList [thisObjectID].discardRight (ap.MyUsersList [i]' "Read");  				}  				else {  					ap.MyObjectsList [thisObjectID].grantRight (ap.MyUsersList [i]' "Read");  				}  			}  		}  		else  			MessageBox.Show ("Ошибка.");  	}  	else  		MessageBox.Show ("У вас нет прав на изменение уровня конфиденциальности объекта " + chosenObject);  }  else  	MessageBox.Show ("Ошибка выбора операции.");  
Magic Number,LowWaterMark,action,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\action.cs,buttonGo_Click,The following statement contains a magic number: if (chosenRight == "Reset") {  	//проверка на наличие прав на выбранное действие  	checkAccess = ap.MyObjectsList [thisObjectID].rights [ap.MyUsersList [thisUserID]].isReset ();  	if (checkAccess) {  		/*                                    * При выполнении команды reset' гриф конфиденциальности объекта поднимается                              * и становится максимальным в линейном порядке.                              *                               * После этого все субъекты приобретают право write в данный объект'                              * но read имеют право только субъекты' имеющие максимальный уровень безопасности.                               * */string levelName = "TopSecret";  		Secrecy desiredLevel = new Secrecy (levelName' 3);  		if (ap.MyObjectsList [thisObjectID].changeLevel (desiredLevel)) {  			MessageBox.Show ("Вы повысили уровень конфиденциальности объекта " + chosenObject + " на максимальный.");  			//устанавливаем права на запись  			for (short i = 0; i < ap.MyUsersList.Count; i++) {  				ap.MyObjectsList [thisObjectID].grantRight (ap.MyUsersList [i]' "Write");  			}  			//устанавливаем права на чтение админу' но лишаем остальных  			for (short i = 0; i < ap.MyUsersList.Count; i++) {  				if (!ap.MyUsersList [i].Admin) {  					ap.MyObjectsList [thisObjectID].discardRight (ap.MyUsersList [i]' "Read");  				}  				else {  					ap.MyObjectsList [thisObjectID].grantRight (ap.MyUsersList [i]' "Read");  				}  			}  		}  		else  			MessageBox.Show ("Ошибка.");  	}  	else  		MessageBox.Show ("У вас нет прав на изменение уровня конфиденциальности объекта " + chosenObject);  }  else  	MessageBox.Show ("Ошибка выбора операции.");  
Magic Number,LowWaterMark,action,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\action.cs,buttonGo_Click,The following statement contains a magic number: if (checkAccess) {  	/*                                    * При выполнении команды reset' гриф конфиденциальности объекта поднимается                              * и становится максимальным в линейном порядке.                              *                               * После этого все субъекты приобретают право write в данный объект'                              * но read имеют право только субъекты' имеющие максимальный уровень безопасности.                               * */string levelName = "TopSecret";  	Secrecy desiredLevel = new Secrecy (levelName' 3);  	if (ap.MyObjectsList [thisObjectID].changeLevel (desiredLevel)) {  		MessageBox.Show ("Вы повысили уровень конфиденциальности объекта " + chosenObject + " на максимальный.");  		//устанавливаем права на запись  		for (short i = 0; i < ap.MyUsersList.Count; i++) {  			ap.MyObjectsList [thisObjectID].grantRight (ap.MyUsersList [i]' "Write");  		}  		//устанавливаем права на чтение админу' но лишаем остальных  		for (short i = 0; i < ap.MyUsersList.Count; i++) {  			if (!ap.MyUsersList [i].Admin) {  				ap.MyObjectsList [thisObjectID].discardRight (ap.MyUsersList [i]' "Read");  			}  			else {  				ap.MyObjectsList [thisObjectID].grantRight (ap.MyUsersList [i]' "Read");  			}  		}  	}  	else  		MessageBox.Show ("Ошибка.");  }  else  	MessageBox.Show ("У вас нет прав на изменение уровня конфиденциальности объекта " + chosenObject);  
Magic Number,LowWaterMark,MyObject,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\MyObject.cs,changeLevel,The following statement contains a magic number: if ((desiredLevel.LevelNum == 3) && (desiredLevel.Level == "TopSecret")) {  	this.setLevel (desiredLevel);  	return true;  }  else  	return false;  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: rootRandom = rnd.Next (0' 5);  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: for (short i = 0; i < MyUsersList.Count; i++) {  	if (rootRandom == i) {  		MyUsersList [i].Admin = true;  		//все права дадим админу  		MyUsersList [i].setLevel (AllSecrecyLevels [3]);  	}  	else {  		//остальным - как повезет' но меньше высшего                         		accessRandom = rnd.Next (0' 3);  		MyUsersList [i].setLevel (AllSecrecyLevels [accessRandom]);  	}  }  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: for (short i = 0; i < MyUsersList.Count; i++) {  	if (rootRandom == i) {  		MyUsersList [i].Admin = true;  		//все права дадим админу  		MyUsersList [i].setLevel (AllSecrecyLevels [3]);  	}  	else {  		//остальным - как повезет' но меньше высшего                         		accessRandom = rnd.Next (0' 3);  		MyUsersList [i].setLevel (AllSecrecyLevels [accessRandom]);  	}  }  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: if (rootRandom == i) {  	MyUsersList [i].Admin = true;  	//все права дадим админу  	MyUsersList [i].setLevel (AllSecrecyLevels [3]);  }  else {  	//остальным - как повезет' но меньше высшего                         	accessRandom = rnd.Next (0' 3);  	MyUsersList [i].setLevel (AllSecrecyLevels [accessRandom]);  }  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: if (rootRandom == i) {  	MyUsersList [i].Admin = true;  	//все права дадим админу  	MyUsersList [i].setLevel (AllSecrecyLevels [3]);  }  else {  	//остальным - как повезет' но меньше высшего                         	accessRandom = rnd.Next (0' 3);  	MyUsersList [i].setLevel (AllSecrecyLevels [accessRandom]);  }  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: MyUsersList [i].setLevel (AllSecrecyLevels [3]);  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: accessRandom = rnd.Next (0' 3);  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: for (short j = 0; j < MyObjectsList.Count; j++) {  	accessRandom = rnd.Next (0' 4);  	MyObjectsList [j].setLevel (AllSecrecyLevels [accessRandom]);  }  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: accessRandom = rnd.Next (0' 4);  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: for (short i = 0; i < MyUsersList.Count; i++) {  	for (short j = 0; j < MyObjectsList.Count; j++) {  		xo = MyObjectsList [j].getLevel ().LevelNum;  		xu = MyUsersList [i].getLevel ().LevelNum;  		//проверяем право на чтение  		NRU = (xo <= xu) ? true : false;  		if (NRU) {  			MyObjectsList [j].grantRight (MyUsersList [i]' rightsList [0]);  		}  		//право на запись  		NWD = (xo >= xu) ? true : false;  		if (NWD) {  			MyObjectsList [j].grantRight (MyUsersList [i]' rightsList [1]);  		}  		//право на Reset  		allowReset = (xu >= xo) ? true : false;  		if (allowReset) {  			MyObjectsList [j].grantRight (MyUsersList [i]' rightsList [2]);  		}  	}  }  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: for (short j = 0; j < MyObjectsList.Count; j++) {  	xo = MyObjectsList [j].getLevel ().LevelNum;  	xu = MyUsersList [i].getLevel ().LevelNum;  	//проверяем право на чтение  	NRU = (xo <= xu) ? true : false;  	if (NRU) {  		MyObjectsList [j].grantRight (MyUsersList [i]' rightsList [0]);  	}  	//право на запись  	NWD = (xo >= xu) ? true : false;  	if (NWD) {  		MyObjectsList [j].grantRight (MyUsersList [i]' rightsList [1]);  	}  	//право на Reset  	allowReset = (xu >= xo) ? true : false;  	if (allowReset) {  		MyObjectsList [j].grantRight (MyUsersList [i]' rightsList [2]);  	}  }  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: if (allowReset) {  	MyObjectsList [j].grantRight (MyUsersList [i]' rightsList [2]);  }  
Magic Number,LowWaterMark,AccessPolicy,C:\repos\Funnear_prof\AccessPolitics\Backup\Политики доступа\AccessPolicy.cs,Randomize,The following statement contains a magic number: MyObjectsList [j].grantRight (MyUsersList [i]' rightsList [2]);  
