Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestDefaultNoLoop,The length of the statement  "			Assert.AreEqual(0' testDefaultNoLoopCount' "testDefaultNoLoopCount shouldn't have incremented again' a is set not to loop using global defaults"); " is 146.
Long Statement,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestDefaultLoop,The length of the statement  "			Assert.AreEqual(1' testDefaultLoopCount' "testDefaultLoopCount should have incremented again' a is set to loop using global defaults"); " is 135.
Long Statement,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestAgainstDefaultLoop,The length of the statement  "			Assert.AreEqual(0' testAgainstDefaultLoopCount' "testAgainstDefaultLoopCount should still be incremented after first update"); " is 126.
Long Statement,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestAgainstDefaultLoop,The length of the statement  "			Assert.AreEqual(0' testAgainstDefaultLoopCount' "testAgainstDefaultLoopCount shouldn't have incremented again' a is set not to loop"); " is 134.
Long Statement,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestCase,The length of the statement  "			Assert.IsFalse(item.CheckTickReady(testTime)' "CheckTickReady should return false when time is before next scheduled tick"); " is 124.
Long Statement,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestCase,The length of the statement  "			Assert.IsFalse(item.CheckTickReady(testTimePlus4)' "CheckTickReady should return false when time is before next scheduled tick"); " is 129.
Long Statement,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestCase,The length of the statement  "			Assert.IsTrue(item.CheckTickReady(testTimePlus8)' "CheckTickReady should return true when time is after next scheduled tick"); " is 126.
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestPriority,The following statement contains a magic number: var b = new TickedObject(CallbackSetTest1' 0' 2) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestPriority,The following statement contains a magic number: var b = new TickedObject(CallbackSetTest1' 0' 2) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestPriority,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestPriority,The following statement contains a magic number: Assert.AreEqual(2' test1' "test1 should have been updated to the last object");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestPauseBasic,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestUnPauseBasic,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestUnPausePriority,The following statement contains a magic number: var b = new TickedObject(CallbackSetTest1' 0' 2) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestUnPausePriority,The following statement contains a magic number: var b = new TickedObject(CallbackSetTest1' 0' 2) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestUnPausePriority,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestUnPausePriority,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestUnPausePriority,The following statement contains a magic number: Assert.AreEqual(2' test1' "test1 should have been updated to the last object");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: var b = new TickedObject(Callback2' 5' 2) {Priority = 3};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: var b = new TickedObject(Callback2' 5' 2) {Priority = 3};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: var b = new TickedObject(Callback2' 5' 2) {Priority = 3};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: var c = new TickedObject(Callback2' 2' 1) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: var c = new TickedObject(Callback2' 2' 1) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2.9f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(5.01f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: Assert.AreEqual(2' aCalled' "a should have been called twice");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestTiming,The following statement contains a magic number: Assert.AreEqual(2' cCalled' "c should have been called twice");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemove,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemove,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(4));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveWhileEnqueued,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(0.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveWhileEnqueued,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(1.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveWhileEnqueued,The following statement contains a magic number: Assert.AreEqual(2' aVal' "Invalid aVal after the third update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerWhileInWorkQueue,The following statement contains a magic number: queue.MaxProcessedPerUpdate = 10;
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerWhileInWorkQueue,The following statement contains a magic number: var c = new TickedObject((x =>              {                  cVal += 2;                  queue.Remove(b);              })' 0);
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerWhileInWorkQueue,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(0.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerWhileInWorkQueue,The following statement contains a magic number: Assert.AreEqual(2' cVal' "Invalid cVal after the first update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerWhileInWorkQueue,The following statement contains a magic number: Assert.AreEqual(2' aVal' "Invalid aVal after the second update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerWhileInWorkQueue,The following statement contains a magic number: Assert.AreEqual(4' cVal' "Invalid cVal after the second update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerAfterPassingInWorkQueue,The following statement contains a magic number: var queue = new TickedQueue {MaxProcessedPerUpdate = 10};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerAfterPassingInWorkQueue,The following statement contains a magic number: var c = new TickedObject((x =>              {                  cVal += 2;                  queue.Remove(b);              }));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerAfterPassingInWorkQueue,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(0.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerAfterPassingInWorkQueue,The following statement contains a magic number: Assert.AreEqual(2' cVal' "Invalid cVal after the first update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerAfterPassingInWorkQueue,The following statement contains a magic number: Assert.AreEqual(2' aVal' "Invalid aVal after the second update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestRemoveFromHandlerAfterPassingInWorkQueue,The following statement contains a magic number: Assert.AreEqual(4' cVal' "Invalid cVal after the second update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestNoExceptionHandler,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(0.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestNoExceptionHandler,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(1.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestNoExceptionHandler,The following statement contains a magic number: Assert.AreEqual(2' aVal' "Invalid aVal after the third update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestExceptionHandler,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(0.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestMaxProcessedPerUpdate,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(0.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestMaxProcessedPerUpdate,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(1.5f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestMaxProcessedPerUpdate,The following statement contains a magic number: queue.MaxProcessedPerUpdate = 2;
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestMaxProcessedPerUpdate,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2f));
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestMaxProcessedPerUpdate,The following statement contains a magic number: Assert.AreEqual(2' aVal' "Invalid aVal after the first update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestMaxProcessedPerUpdate,The following statement contains a magic number: Assert.AreEqual(2' bVal' "Invalid bVal after the first update");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,TestEnumerator,The following statement contains a magic number: Assert.AreEqual(2' queue.Items.Count()' "Queue should contain two items");
Magic Number,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,Callback2,The following statement contains a magic number: switch (i)                  {                      case 0:                          ++aCalled;                          break;                      case 1:                          ++cCalled;                          break;                      case 2:                          ++bCalled;                          break;                  }
Magic Number,TickedPriorityQueueUnitTests,QueueSaturationUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueSaturationUnit.cs,TestForStagnation,The following statement contains a magic number: queue.MaxProcessedPerUpdate = 100;
Magic Number,TickedPriorityQueueUnitTests,QueueSaturationUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueSaturationUnit.cs,TestForStagnation,The following statement contains a magic number: var obj = new TickedObject(Callback' 0.5f' i);
Magic Number,TickedPriorityQueueUnitTests,QueueSaturationUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueSaturationUnit.cs,TestForStagnation,The following statement contains a magic number: i < 10000
Magic Number,TickedPriorityQueueUnitTests,QueueSaturationUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueSaturationUnit.cs,TestForStagnation,The following statement contains a magic number: time = time.AddSeconds(0.5);
Magic Number,TickedPriorityQueueUnitTests,QueueSaturationUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueSaturationUnit.cs,TestForStagnation,The following statement contains a magic number: time = time.AddMilliseconds(1000);
Magic Number,TickedPriorityQueueUnitTests,QueueSaturationUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueSaturationUnit.cs,TestForStagnation,The following statement contains a magic number: i < 1000
Magic Number,TickedPriorityQueueUnitTests,QueueSaturationUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueSaturationUnit.cs,Callback,The following statement contains a magic number: obj is int && (int)obj == 9999
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestPriorityCompare,The following statement contains a magic number: var a = new TickedObject(Callback' 0' 0) {Priority = 5};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestPriorityCompare,The following statement contains a magic number: var b = new TickedObject(Callback' 0' 1) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestTickTimeCompare,The following statement contains a magic number: var a = new TickedObject(Callback' 2' 0) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestTickTimeCompare,The following statement contains a magic number: var a = new TickedObject(Callback' 2' 0) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestTickTimeCompare,The following statement contains a magic number: var b = new TickedObject(Callback' 1' 1) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestTimeCompare,The following statement contains a magic number: var a = new TickedObject(Callback' 2' 0) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestTimeCompare,The following statement contains a magic number: var a = new TickedObject(Callback' 2' 0) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestTimeCompare,The following statement contains a magic number: var b = new TickedObject(Callback' 1' 1) {Priority = 2};
Magic Number,TickedPriorityQueueUnitTests,TickedQueueItemComparerUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemComparerUnit.cs,TestTimeCompare,The following statement contains a magic number: var itemB = new TickedQueueItem(b' DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(4));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestNoLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestNoLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(4));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestDefaultNoLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestDefaultNoLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(4));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestDefaultLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestDefaultLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(4));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestAgainstDefaultLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(2));
Magic Number,TickedPriorityQueueUnitTests,QueueLoopUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\QueueLoopUnit.cs,TestAgainstDefaultLoop,The following statement contains a magic number: queue.Update(DateTime.UtcNow.AddSeconds(4));
Magic Number,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestCase,The following statement contains a magic number: obj.Priority = 6;
Magic Number,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestCase,The following statement contains a magic number: obj.TickLength = 7;
Magic Number,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestCase,The following statement contains a magic number: DateTime testTimePlus4 = testTime.AddSeconds(4);
Magic Number,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestCase,The following statement contains a magic number: DateTime testTimePlus8 = testTime.AddSeconds(8);
Magic Number,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestTickTimeReset,The following statement contains a magic number: obj.Priority = 6;
Magic Number,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestTickTimeReset,The following statement contains a magic number: obj.TickLength = 7;
Magic Number,TickedPriorityQueue,TickedQueueItemUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueItemUnit.cs,TestTickTimeReset,The following statement contains a magic number: var future = now.AddSeconds(3);
Missing Default,TickedPriorityQueueUnitTests,TickedQueueUnit,D:\research\architectureSmells\repos\Garufortho_TickedPriorityQueue\TickedPriorityQueue Unit Tests\Source\Unit Tests\TickedQueueUnit.cs,Callback2,The following switch statement is missing a default case: switch (i)                  {                      case 0:                          ++aCalled;                          break;                      case 1:                          ++cCalled;                          break;                      case 2:                          ++bCalled;                          break;                  }
