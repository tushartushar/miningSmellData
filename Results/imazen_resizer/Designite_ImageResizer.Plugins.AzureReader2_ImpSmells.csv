Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ImageResizer.Plugins.AzureReader2,AzureReader2Plugin,F:\newReposMay17\imazen_resizer\Plugins\AzureReader2\AzureReader.cs,GetBlobRefAsync,The length of the statement  "	string relativeBlobURL = string.Format ("{0}/{1}"' CloudBlobClient.BaseUri.OriginalString.TrimEnd ('/'' '\\')' subPath); " is 120.
Long Statement,ImageResizer.Plugins.AzureReader2,AzureReader2Plugin,F:\newReposMay17\imazen_resizer\Plugins\AzureReader2\AzureReader.cs,Install,The length of the statement  "		throw new InvalidOperationException ("AzureReader2 requires a named connection string or a connection string to be specified with the 'connectionString' attribute."); " is 166.
Magic Number,ImageResizer.Plugins.AzureReader2,AzureReader2Plugin,F:\newReposMay17\imazen_resizer\Plugins\AzureReader2\AzureReader.cs,FetchMetadataAsync,The following statement contains a magic number: try {  	var cloudBlob = await GetBlobRefAsync (virtualPath);  	var meta = new BlobMetadata ();  	meta.Exists = true;  	//Otherwise an exception would have happened at FetchAttributes  	var utc = cloudBlob.Properties.LastModified;  	if (utc != null) {  		meta.LastModifiedDateUtc = utc.Value.UtcDateTime;  	}  	return meta;  } catch (StorageException e) {  	if (e.RequestInformation.HttpStatusCode == 404) {  		return new BlobMetadata () {  			Exists = false  		};  	} else {  		throw;  	}  }  
Magic Number,ImageResizer.Plugins.AzureReader2,AzureReader2Plugin,F:\newReposMay17\imazen_resizer\Plugins\AzureReader2\AzureReader.cs,FetchMetadataAsync,The following statement contains a magic number: if (e.RequestInformation.HttpStatusCode == 404) {  	return new BlobMetadata () {  		Exists = false  	};  } else {  	throw;  }  
Magic Number,ImageResizer.Plugins.AzureReader2,AzureReader2Plugin,F:\newReposMay17\imazen_resizer\Plugins\AzureReader2\AzureReader.cs,OpenAsync,The following statement contains a magic number: try {  	var cloudBlob = await GetBlobRefAsync (virtualPath);  	//TODO: Skip a round trip and skip getting the blob reference.  	await cloudBlob.DownloadToStreamAsync (ms);  } catch (StorageException e) {  	if (e.RequestInformation.HttpStatusCode == 404) {  		throw new FileNotFoundException ("Azure blob file not found"' e);  	}  	throw;  }  
Magic Number,ImageResizer.Plugins.AzureReader2,AzureReader2Plugin,F:\newReposMay17\imazen_resizer\Plugins\AzureReader2\AzureReader.cs,OpenAsync,The following statement contains a magic number: if (e.RequestInformation.HttpStatusCode == 404) {  	throw new FileNotFoundException ("Azure blob file not found"' e);  }  
