Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sample02,Sample,F:\newReposMay17\imazen_resizer\Plugins\Libs\FreeImage\Wrapper\FreeImage.NET\cs\Samples\Sample 02 - Multipaged bitmaps\Program.cs,Example,Cyclomatic complexity of the method is 15
Magic Number,Sample02,Sample,F:\newReposMay17\imazen_resizer\Plugins\Libs\FreeImage\Wrapper\FreeImage.NET\cs\Samples\Sample 02 - Multipaged bitmaps\Program.cs,Example,The following statement contains a magic number: if (count > 2) {  	// Lock page 2  	page = FreeImage.LockPage (dib' 2);  	if (!page.IsNull) {  		// Clone the page for later appending  		FIBITMAP temp = FreeImage.Clone (page);  		// Unlock the page again  		FreeImage.UnlockPage (dib' page' false);  		// Delete the page form the multipaged bitmap  		FreeImage.DeletePage (dib' 2);  		// Append the clone again  		FreeImage.AppendPage (dib' temp);  		// Check whether the number of pages is still the same  		Console.WriteLine ("Pages before: {0}. Pages after: {1}"' count' FreeImage.GetPageCount (dib));  		// Unload clone to prevent memory leak  		FreeImage.UnloadEx (ref temp);  	}  }  
Magic Number,Sample02,Sample,F:\newReposMay17\imazen_resizer\Plugins\Libs\FreeImage\Wrapper\FreeImage.NET\cs\Samples\Sample 02 - Multipaged bitmaps\Program.cs,Example,The following statement contains a magic number: if (count > 2) {  	// Lock page 2  	page = FreeImage.LockPage (dib' 2);  	if (!page.IsNull) {  		// Clone the page for later appending  		FIBITMAP temp = FreeImage.Clone (page);  		// Unlock the page again  		FreeImage.UnlockPage (dib' page' false);  		// Delete the page form the multipaged bitmap  		FreeImage.DeletePage (dib' 2);  		// Append the clone again  		FreeImage.AppendPage (dib' temp);  		// Check whether the number of pages is still the same  		Console.WriteLine ("Pages before: {0}. Pages after: {1}"' count' FreeImage.GetPageCount (dib));  		// Unload clone to prevent memory leak  		FreeImage.UnloadEx (ref temp);  	}  }  
Magic Number,Sample02,Sample,F:\newReposMay17\imazen_resizer\Plugins\Libs\FreeImage\Wrapper\FreeImage.NET\cs\Samples\Sample 02 - Multipaged bitmaps\Program.cs,Example,The following statement contains a magic number: if (count > 2) {  	// Lock page 2  	page = FreeImage.LockPage (dib' 2);  	if (!page.IsNull) {  		// Clone the page for later appending  		FIBITMAP temp = FreeImage.Clone (page);  		// Unlock the page again  		FreeImage.UnlockPage (dib' page' false);  		// Delete the page form the multipaged bitmap  		FreeImage.DeletePage (dib' 2);  		// Append the clone again  		FreeImage.AppendPage (dib' temp);  		// Check whether the number of pages is still the same  		Console.WriteLine ("Pages before: {0}. Pages after: {1}"' count' FreeImage.GetPageCount (dib));  		// Unload clone to prevent memory leak  		FreeImage.UnloadEx (ref temp);  	}  }  
Magic Number,Sample02,Sample,F:\newReposMay17\imazen_resizer\Plugins\Libs\FreeImage\Wrapper\FreeImage.NET\cs\Samples\Sample 02 - Multipaged bitmaps\Program.cs,Example,The following statement contains a magic number: page = FreeImage.LockPage (dib' 2);  
Magic Number,Sample02,Sample,F:\newReposMay17\imazen_resizer\Plugins\Libs\FreeImage\Wrapper\FreeImage.NET\cs\Samples\Sample 02 - Multipaged bitmaps\Program.cs,Example,The following statement contains a magic number: if (!page.IsNull) {  	// Clone the page for later appending  	FIBITMAP temp = FreeImage.Clone (page);  	// Unlock the page again  	FreeImage.UnlockPage (dib' page' false);  	// Delete the page form the multipaged bitmap  	FreeImage.DeletePage (dib' 2);  	// Append the clone again  	FreeImage.AppendPage (dib' temp);  	// Check whether the number of pages is still the same  	Console.WriteLine ("Pages before: {0}. Pages after: {1}"' count' FreeImage.GetPageCount (dib));  	// Unload clone to prevent memory leak  	FreeImage.UnloadEx (ref temp);  }  
Magic Number,Sample02,Sample,F:\newReposMay17\imazen_resizer\Plugins\Libs\FreeImage\Wrapper\FreeImage.NET\cs\Samples\Sample 02 - Multipaged bitmaps\Program.cs,Example,The following statement contains a magic number: FreeImage.DeletePage (dib' 2);  
