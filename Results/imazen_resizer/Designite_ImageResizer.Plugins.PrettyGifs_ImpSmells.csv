Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,PrettyGifs,Cyclomatic complexity of the method is 8
Complex Method,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,QuantizePixel,Cyclomatic complexity of the method is 8
Complex Method,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,QuantizeImage,Cyclomatic complexity of the method is 11
Long Parameter List,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,SaveIndexed,The method has 7 parameters. Parameters: format' img' target' colors' dither' fourPass' ditherPercent
Long Parameter List,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,QuantizeImage,The method has 6 parameters. Parameters: sourceData' intermediate' output' width' height' bounds
Long Parameter List,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,AdjustNeighborSource,The method has 6 parameters. Parameters: offsetX' offsetY' deltaR' deltaG' deltaB' deltaA
Long Statement,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,CreateIfSuitable,The length of the statement  "            if (!string.IsNullOrEmpty(settings["encoder"]) && !"prettygifs".Equals(settings["encoder"]' StringComparison.OrdinalIgnoreCase)) return null;" is 141.
Long Statement,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,CreateIfSuitable,The length of the statement  "            if (ImageFormat.Gif.Equals(f) || (ImageFormat.Png.Equals(f) && settings["colors"] != null)) return new PrettyGifs(settings' original);" is 134.
Long Statement,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,GetFormatIfSuitable,The length of the statement  "            ImageFormat requestedFormat = DefaultEncoder.GetRequestedFormat(settings.Format' originalFormat); //fallback to originalFormat if not specified." is 144.
Long Statement,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,SaveIndexed,The length of the statement  "                quantizer.FirstPassPixelCount = (long)Math.Pow(query.Get<int>( "pixelCount"' (int)Math.Sqrt(quantizer.FirstPassPixelCount))'2);" is 127.
Long Statement,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,SaveIndexed,The length of the statement  "                quantizer.FirstPassPixelThreshold = (long)Math.Pow(query.Get<int>( "pixelThreshold"' (int)Math.Sqrt(quantizer.FirstPassPixelThreshold))' 2);" is 140.
Long Statement,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,QuantizePixel,The length of the statement  "            //Quote: Second' I've found a solution for preserving GIF transparency when invoking Image::Save(...). The .NET (tested on v2.0) " is 128.
Long Statement,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,QuantizePixel,The length of the statement  "            //GIF encoder considers transparent the first color found in the palette' so I've changed some methods (replace them with the supplied ones):" is 141.
Long Statement,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,QuantizePixel,The length of the statement  "                //To dither' we find the error (difference from real pixel to the palette color)' and subtract it from the next pixel. When that color is paletted' " is 147.
Long Statement,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,QuantizePixel,The length of the statement  "                //The issue is that error adjustments build up' so you're never working off the original color. Hopefully this doesn't cause issues." is 132.
Long Statement,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,QuantizePixel,The length of the statement  "                            float adjust = DitherMatrix[y' x] * DitherPercent;//How much of the error should be passed on (in negative form) the this neighbor pixel" is 136.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,ValidatePropertyValues,The length of the statement  "            if (!FullTrust && !OmitFinalStage) throw new Exception("If FullTrust=False' OmitFinalStage must be set to true. The final stage requires full trust.");" is 151.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,ValidatePropertyValues,The length of the statement  "            if (!FullTrust && FourPass) throw new Exception("If FullTrust=False' FourPass must be false also. Four-pass quantization requires full trust.");" is 144.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,Quantize,The length of the statement  "                    firstPass = new Bitmap((int)Math.Floor((double)copy.Width * factor)' (int)Math.Floor((double)copy.Height * factor)' PixelFormat.Format32bppArgb);" is 145.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,Quantize,The length of the statement  "                        //Use the low-quality settings - we want the original colors of the image' nearest neighbor is better than bicubic spline here." is 127.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,Quantize,The length of the statement  "                tempOutput = new Bitmap(OmitFinalStage ? 2 : src.Width' OmitFinalStage ? 2 : src.Height' PixelFormat.Format8bppIndexed);" is 120.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,QuantizeFullTrust,The length of the statement  "                    firstPassData = firstPass.LockBits(new Rectangle(0' 0' firstPass.Width' firstPass.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppArgb);" is 145.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,QuantizeImage,The length of the statement  "            secondPassIntermediate = (intermediate != null) ? intermediate : sourceData;// Not thread safe.... But nothing here is anyways...//For dithering - 5-18-09 ndj" is 158.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,AdjustNeighborSource,The length of the statement  "            IntPtr p = (IntPtr)((long)secondPassIntermediate.Scan0 + ((long)y * (long)secondPassIntermediate.Stride) + (PixelSize * x));" is 124.
Long Statement,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,AdjustNeighborSource,The length of the statement  "            Marshal.StructureToPtr(c' p' true); //False to not dispose old block. Since no reference to it exists (I believe PtrToStructure from Color32 copies' not references)' this should be safe" is 185.
Complex Conditional,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,Quantize,The conditional expression  "firstPass != null && firstPass != copy && firstPass != src && firstPass != result"  is complex.
Magic Number,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,Write,The following statement contains a magic number: byte colors = (byte)Math.Min(Math.Max(this.Colors' 1)' 255);
Magic Number,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,SaveIndexed,The following statement contains a magic number: quantizer.DitherPercent = (float)ditherPercent / 100;
Magic Number,ImageResizer.Plugins.PrettyGifs,PrettyGifs,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\PrettyGifs.cs,GetBitsNeededForColorDepth,The following statement contains a magic number: return (int)Math.Ceiling(Math.Log(colors' 2));
Magic Number,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,Reset,The following statement contains a magic number: maxColors > 255
Magic Number,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,Reset,The following statement contains a magic number: (maxColorBits < 1) | (maxColorBits > 8)
Magic Number,ImageResizer.Plugins.PrettyGifs,OctreeQuantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,QuantizePixel,The following statement contains a magic number: y < 3
Magic Number,ImageResizer.Plugins.PrettyGifs,Octree,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,Octree,The following statement contains a magic number: _reducibleNodes = new OctreeNode[9] ;
Magic Number,ImageResizer.Plugins.PrettyGifs,OctreeNode,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,Reduce,The following statement contains a magic number: index < 8
Magic Number,ImageResizer.Plugins.PrettyGifs,OctreeNode,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,GetPaletteIndex,The following statement contains a magic number: int	shift = 7 - level ;
Magic Number,ImageResizer.Plugins.PrettyGifs,OctreeNode,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\OctreeQuantizer.cs,GetPaletteIndex,The following statement contains a magic number: int index = ( ( pixel.Red & mask[level] ) >> ( shift - 2 ) ) |                             ( ( pixel.Green & mask[level] ) >> ( shift - 1 ) ) |                             ( ( pixel.Blue & mask[level] ) >> ( shift ) ) ;
Magic Number,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,Quantize,The following statement contains a magic number: tempOutput = new Bitmap(OmitFinalStage ? 2 : src.Width' OmitFinalStage ? 2 : src.Height' PixelFormat.Format8bppIndexed);
Magic Number,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,Quantize,The following statement contains a magic number: tempOutput = new Bitmap(OmitFinalStage ? 2 : src.Width' OmitFinalStage ? 2 : src.Height' PixelFormat.Format8bppIndexed);
Magic Number,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,ToByte,The following statement contains a magic number: return 255;
Magic Number,ImageResizer.Plugins.PrettyGifs,Quantizer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\PrettyGifs\Quantizer.cs,ToByte,The following statement contains a magic number: i > 255
