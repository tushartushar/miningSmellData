Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Imazen.Profiling,Profiler,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Profiler.cs,StopAt,Cyclomatic complexity of the method is 8
Complex Method,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,TraverseTree,Cyclomatic complexity of the method is 12
Long Parameter List,Imazen.Profiling,BenchmarkRunner,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\BenchmarkRunner.cs,TimeOperation,The method has 6 parameters.
Long Parameter List,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,TraverseTree,The method has 5 parameters.
Long Parameter List,Imazen.Profiling,ProfilingResultNode,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultNode.cs,ProfilingResultNode,The method has 7 parameters.
Long Parameter List,Imazen.Profiling,Stat,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Stat.cs,Stat,The method has 6 parameters.
Long Statement,Imazen.Profiling,BenchmarkRunner,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\BenchmarkRunner.cs,TimeOperation,The length of the statement  "		var inputs = new int[threadsPerBatch].Select (x => new Tuple<P' T> (profilerProvider (rootNodeName' threadsPerBatch)' setUp != null ? setUp () : default(T))).ToList (); " is 168.
Long Statement,Imazen.Profiling,ConcurrencyResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultExtensions.cs,CollectChildSets,The length of the statement  "			throw new ArgumentOutOfRangeException ("All run trees must have identical structure - mismatched children within segment" + r.SegmentName' "runs"); " is 147.
Long Statement,Imazen.Profiling,ConcurrencyResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultFormatter.cs,GetTimingInfo,The length of the statement  "		return string.Format ("exclusive: {0} ||{1}||   inclusive: {2} ||{3} {4}"' sexcl.ToString (DeltaSignificantRatio)' pexcl.ToString (DeltaSignificantRatio)' sincl.ToString (DeltaSignificantRatio)' pincl.ToString (DeltaSignificantRatio)' suffix); " is 243.
Long Statement,Imazen.Profiling,ConcurrencyResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultFormatter.cs,GetTimingInfo,The length of the statement  "		return string.Format ("{0} ||{1} {2}"' sincl.ToString (DeltaSignificantRatio)' pincl.ToString (DeltaSignificantRatio)' suffix); " is 127.
Long Statement,Imazen.Profiling,Profiler,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Profiler.cs,LogStart,The length of the statement  "		throw new InvalidOperationException (string.Format ("The given profiling segment {0} has already been started' and allowRecursion=false"' segmentName)); " is 152.
Long Statement,Imazen.Profiling,Profiler,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Profiler.cs,LogStart,The length of the statement  "			throw new InvalidOperationException (string.Format ("You cannot log a profiling segment {0} {1} that starts before its parent {1} {2} "' segmentName' ticks' top.SegmentName' top.StartTicks)); " is 191.
Long Statement,Imazen.Profiling,Profiler,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Profiler.cs,Start,The length of the statement  "		throw new InvalidOperationException (string.Format ("The given profiling segment {0} has already been started' and allowRecursion=false"' segmentName)); " is 152.
Long Statement,Imazen.Profiling,Profiler,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Profiler.cs,StopAt,The length of the statement  "			throw new InvalidOperationException (string.Format ("The given profiling segment {0} is not running anywhere in the callstack; it cannot be stopped."' normalized_name)); " is 169.
Long Statement,Imazen.Profiling,Profiler,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Profiler.cs,StopAt,The length of the statement  "			throw new InvalidOperationException (string.Format ("The given profiling segment {0} is not running at the top of the callstack; it cannot be stopped."' normalized_name)); " is 171.
Long Statement,Imazen.Profiling,ProfilingNode,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingNode.cs,CollapseInvocations,The length of the statement  "	return new ProfilingResultNode (names.First ()' invocations.Count ()' invocations.Aggregate<ProfilingNode' long> (0' (d' n) => d + n.TicksExclusive)' invocations.Aggregate<ProfilingNode' long> (0' (d' n) => d + n.TicksInclusive)' invocations.Select (n => n.StartTicks).Min ()' invocations.Select (n => n.StopTicks).Max ()' invocations.SelectMany (n => n.NonNullChildren).GroupBy (n => n.SegmentName).Select (group => CollapseInvocations (group)).ToList ()); " is 457.
Long Statement,Imazen.Profiling,ProfilingNode,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingNode.cs,ToString,The length of the statement  "	return string.Format ("{0} {1}ms ({2})"' SegmentName' ElapsedTicks / Stopwatch.Frequency' string.Join (" "' NonNullChildren.Select (c => c.ToString ()))); " is 154.
Long Statement,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,ExclusiveMs,The length of the statement  "	return new Stat<double> (s.Min (n => n.TicksExclusiveTotal)' s.Max (n => n.TicksExclusiveTotal)' s.Sum (n => n.TicksExclusiveTotal)' s.Count ()' "ms"' "F").ConvertTo<double> (n => n * 1000 / Stopwatch.Frequency); " is 212.
Long Statement,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,InclusiveMs,The length of the statement  "	return new Stat<double> (s.Min (n => n.TicksInclusiveTotal)' s.Max (n => n.TicksInclusiveTotal)' s.Sum (n => n.TicksInclusiveTotal)' s.Count ()' "ms"' "F").ConvertTo<double> (n => n * 1000 / Stopwatch.Frequency); " is 212.
Long Statement,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,Invocations,The length of the statement  "	return new Stat<long> (s.Min (n => n.Invocations)' s.Max (n => n.Invocations)' s.Sum (n => n.Invocations)' s.Count ()' ""' ""); " is 127.
Long Statement,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,DeduplicateTime,The length of the statement  "	return times.Aggregate ((acc' elem) => new Tuple<long' long> (acc.Item1 + (elem.Item2 - (acc.Item2 > elem.Item1 ? Math.Min (elem.Item2' acc.Item2) : elem.Item1))' Math.Max (acc.Item2' elem.Item2))).Item1; " is 204.
Long Statement,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,CollectChildSets,The length of the statement  "			throw new ArgumentOutOfRangeException ("All run trees must have identical structure - mismatched children within segment" + runs.First ().SegmentName' "runs"); " is 159.
Long Statement,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,ValidateSet,The length of the statement  "		throw new ArgumentOutOfRangeException ("runs"' "All run trees must have identical structure (name mismatch). " + moreInfo); " is 123.
Long Statement,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,ValidateSet,The length of the statement  "		throw new ArgumentOutOfRangeException ("runs"' "All run trees must have identical structure (invocation count mismatch). " + moreInfo); " is 135.
Long Statement,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,GetTimingInfo,The length of the statement  "		return string.Format ("runs exclusive: {1} {0}"' invocations' String.Join ("  "' runs.Select (n => n.TicksExclusiveTotal * 1000 / Stopwatch.Frequency))); " is 153.
Long Statement,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,GetTimingInfo,The length of the statement  "	string exclusive = eDelta > DeltaSignificantPercent ? string.Format ("{0:F} .. {1:F}ms"' eMin' eMax) : string.Format ("{0:F}ms"' eMin); " is 135.
Long Statement,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,GetTimingInfo,The length of the statement  "	string inclusive = iDelta > DeltaSignificantPercent ? string.Format ("{0:F} .. {1:F}ms"' iMin' iMax) : string.Format ("{0:F}ms"' iMin); " is 135.
Long Statement,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,PrintStats,The length of the statement  "		sb.Append (string.Join (""' runs.CollectChildSets ().Select (s => PrintStats (s' prefix + runs.First ().SegmentName + ">")))); " is 126.
Long Statement,Imazen.Profiling,ProfilingResultNode,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultNode.cs,WithStartStopTime,The length of the statement  "	return new ProfilingResultNode (SegmentName' Invocations' TicksExclusiveTotal' TicksInclusiveTotal' startTicks' stopTicks' Children.ToList ()); " is 143.
Long Statement,Imazen.Profiling,Stat,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Stat.cs,Combine,The length of the statement  "	return new Stat<T> (Math.Min ((dynamic)Min' (dynamic)other.Min)' Math.Max ((dynamic)Max' (dynamic)other.Max)' (dynamic)Max + (dynamic)other.Max' Count + other.Count' Units' FormatString); " is 187.
Long Statement,Imazen.Profiling,Stat,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Stat.cs,ToString,The length of the statement  "	return (dynamic)DeltaRatio > (dynamic)DeltaSignificantRatio ? string.Format ("{0:" + FormatString + "} .. {1:" + FormatString + "}{2}"' Min' Max' Units) : string.Format ("{0:" + FormatString + "}{1}"' Min' Units); " is 213.
Magic Number,Imazen.Profiling,BenchmarkRunner,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\BenchmarkRunner.cs,ResetGC,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,Imazen.Profiling,BenchmarkRunner,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\BenchmarkRunner.cs,BenchmarkRunner,The following statement contains a magic number: SequentialRuns = 8;  
Magic Number,Imazen.Profiling,BenchmarkRunner,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\BenchmarkRunner.cs,BenchmarkRunner,The following statement contains a magic number: ParallelRuns = 2;  
Magic Number,Imazen.Profiling,BenchmarkRunner,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\BenchmarkRunner.cs,BenchmarkRunner,The following statement contains a magic number: ParallelThreads = 8;  
Magic Number,Imazen.Profiling,ConcurrencyResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultExtensions.cs,ToMilliseconds,The following statement contains a magic number: return ticks.Select (t => t * 1000.0 / (double)Stopwatch.Frequency);  
Magic Number,Imazen.Profiling,ConcurrencyResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultExtensions.cs,MaxExclusiveMs,The following statement contains a magic number: return r.AllRuns ().Max (n => n.TicksExclusiveTotal) * 1000.0 / (double)Stopwatch.Frequency;  
Magic Number,Imazen.Profiling,ConcurrencyResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultExtensions.cs,GetStats,The following statement contains a magic number: s.ParallelRealMs = activeWallTime * 1000 / (double)Stopwatch.Frequency;  
Magic Number,Imazen.Profiling,ConcurrencyResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultFormatter.cs,ConcurrencyResultFormatter,The following statement contains a magic number: DeltaAbnormalRatio = .80;  
Magic Number,Imazen.Profiling,ConcurrencyResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultFormatter.cs,ConcurrencyResultFormatter,The following statement contains a magic number: DeltaSignificantRatio = .5;  
Magic Number,Imazen.Profiling,ConcurrencyResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ConcurrencyResultFormatter.cs,ConcurrencyResultFormatter,The following statement contains a magic number: ExclusiveTimeSignificantMs = 5;  
Magic Number,Imazen.Profiling,CostlyBaseline,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\CostlyBaseline.cs,DoWork,The following statement contains a magic number: for (var i = 0; i < sx * sy; i += 32) {  	Array.Copy (pattern' 0' fromBuffer' i' 32);  }  
Magic Number,Imazen.Profiling,CostlyBaseline,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\CostlyBaseline.cs,DoWork,The following statement contains a magic number: for (var i = 0; i < sx * sy; i += 32) {  	Array.Copy (pattern' 0' fromBuffer' i' 32);  }  
Magic Number,Imazen.Profiling,CostlyBaseline,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\CostlyBaseline.cs,DoWork,The following statement contains a magic number: i += 32
Magic Number,Imazen.Profiling,CostlyBaseline,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\CostlyBaseline.cs,DoWork,The following statement contains a magic number: Array.Copy (pattern' 0' fromBuffer' i' 32);  
Magic Number,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,ExclusiveMs,The following statement contains a magic number: return new Stat<double> (s.Min (n => n.TicksExclusiveTotal)' s.Max (n => n.TicksExclusiveTotal)' s.Sum (n => n.TicksExclusiveTotal)' s.Count ()' "ms"' "F").ConvertTo<double> (n => n * 1000 / Stopwatch.Frequency);  
Magic Number,Imazen.Profiling,ProfilingResultExtensions,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultExtensions.cs,InclusiveMs,The following statement contains a magic number: return new Stat<double> (s.Min (n => n.TicksInclusiveTotal)' s.Max (n => n.TicksInclusiveTotal)' s.Sum (n => n.TicksInclusiveTotal)' s.Count ()' "ms"' "F").ConvertTo<double> (n => n * 1000 / Stopwatch.Frequency);  
Magic Number,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,ProfilingResultFormatter,The following statement contains a magic number: DeltaAbnormalPercent = 80;  
Magic Number,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,ProfilingResultFormatter,The following statement contains a magic number: DeltaSignificantPercent = 5;  
Magic Number,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,ProfilingResultFormatter,The following statement contains a magic number: ExclusiveTimeSignificantMs = 5;  
Magic Number,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,GetTimingInfo,The following statement contains a magic number: if (eDelta > DeltaAbnormalPercent) {  	return string.Format ("runs exclusive: {1} {0}"' invocations' String.Join ("  "' runs.Select (n => n.TicksExclusiveTotal * 1000 / Stopwatch.Frequency)));  }  
Magic Number,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,GetTimingInfo,The following statement contains a magic number: return string.Format ("runs exclusive: {1} {0}"' invocations' String.Join ("  "' runs.Select (n => n.TicksExclusiveTotal * 1000 / Stopwatch.Frequency)));  
Magic Number,Imazen.Profiling,ProfilingResultFormatter,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\ProfilingResultFormatter.cs,PrintStats,The following statement contains a magic number: if (runs.Max (n => n.TicksExclusiveTotal) >= ExclusiveTimeSignificantMs * Stopwatch.Frequency / 1000.0) {  	sb.AppendFormat ("{0}{1} {2}\n"' prefix' runs.First ().SegmentName' GetTimingInfo (runs));  	sb.Append (string.Join (""' runs.CollectChildSets ().Select (s => PrintStats (s' prefix + Indentation))));  } else {  	sb.Append (string.Join (""' runs.CollectChildSets ().Select (s => PrintStats (s' prefix + runs.First ().SegmentName + ">"))));  }  
Magic Number,Imazen.Profiling,Stat,F:\newReposMay17\imazen_resizer\Plugins\Imazen.Profiling\Stat.cs,ToString,The following statement contains a magic number: return ToString ((T)Convert.ChangeType (0.08' typeof(T)));  
