Implementation smell,Namespace,Class,File,Method,Description
Long Method,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The method has 105 lines of code.
Complex Method,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,FetchLicense,Cyclomatic complexity of the method is 11
Complex Method,ImageResizer.Plugins.LicenseVerifier,LicenseDetails,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,LicenseDetails,Cyclomatic complexity of the method is 8
Complex Method,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,Cyclomatic complexity of the method is 32
Complex Method,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,Cyclomatic complexity of the method is 15
Complex Method,ImageResizer.Plugins.Watermark,WatermarkPlugin,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Watermark.cs,ParseWatermarks,Cyclomatic complexity of the method is 13
Long Parameter List,ImageResizer.Plugins.LicenseVerifier,Computation,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\Computation.cs,Computation,The method has 6 parameters.
Long Parameter List,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,LicenseFetcher,The method has 9 parameters.
Long Parameter List,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The method has 5 parameters.
Long Statement,ImageResizer.Plugins.LicenseVerifier,DomainLookup,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\DomainLookup.cs,GetChainsByDomain,The length of the statement  "	return chains.SelectMany (chain => chain.Licenses ().SelectMany (b => b.Fields.GetAllDomains ()).Select (domain => new KeyValuePair<string' ILicenseChain> (domain' chain))).GroupBy (pair => pair.Key' pair => pair.Value' (k' v) => new KeyValuePair<string' IEnumerable<ILicenseChain>> (k' v)).ToDictionary (pair => pair.Key' pair => pair.Value' StringComparer.Ordinal); " is 367.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseChain,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseChain.cs,ToPublicString,The length of the statement  "	Func<ILicenseBlob' string> freshness = b => b == remoteLicense ? "(fresh)\n" : b.Original == cached ? "(from cache)\n" : ""; " is 124.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseChain,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseChain.cs,ToPublicString,The length of the statement  "			parent.AcceptIssue (new Issue ("Remote license file does not match. Please contact support@imageresizing.net"' "Local: " + Id + "  Remote: " + newId' IssueSeverity.Error)); " is 172.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,QueueLicenseFetch,The length of the statement  "				if (pair.Value.Status == TaskStatus.RanToCompletion || pair.Value.Status == TaskStatus.Faulted || pair.Value.Status == TaskStatus.Canceled) { " is 141.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,FirewallIssue,The length of the statement  "	return new Issue ("Check firewall; cannot reach Amazon S3 to validate license " + licenseName' "Check https://status.aws.amazon.com' and ensure the following URLs can be reached from this server: " + string.Join ("\n"' baseUrls.Select (s => s + "*"))' IssueSeverity.Error); " is 273.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,ConstructQuerystring,The length of the statement  "		sink.AcceptIssue (new Issue ("LicenseManager"' "Failed to collect querystring for license request"' ex.ToString ()' IssueSeverity.Warning)); " is 140.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,InvokeResultCallback,The length of the statement  "		sink.AcceptIssue (new Issue ("LicenseManager"' "Exception thrown in callback for FetchLicense"' ex.ToString ()' IssueSeverity.Error)); " is 134.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseManagerSingleton,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseManager.cs,TryDeserialize,The length of the statement  "		AcceptIssue (new Issue ("Failed to parse license (from " + licenseSource + "):"' WebConfigLicenseReader.TryRedact (license) + "\n" + ex' IssueSeverity.Error)); " is 159.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseManagerSingleton,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseManager.cs,TryDeserialize,The length of the statement  "		sink.AcceptIssue (new Issue ("License " + blob.Fields.Id + " (from " + licenseSource + ") has been corrupted or has not been signed with a matching private key."' IssueSeverity.Error)); " is 185.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseManagerSingleton,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseManager.cs,TryDeserialize,The length of the statement  "		sink.AcceptIssue (new Issue ("This license cannot be installed directly; it must be fetched from a license server"' WebConfigLicenseReader.TryRedact (license)' IssueSeverity.Error)); " is 182.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseBlob,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Deserialize,The length of the statement  "		throw new ArgumentException ("Not enough ':' delimited segments in license key; failed to deserialize: \"" + license + "\""' nameof (license)); " is 143.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseDetailsExtensions,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,DataMatches,The length of the statement  "	return me != null && other != null && me.Id == other.Id && me.Issued == other.Issued && me.Expires == other.Expires && me.SubscriptionExpirationDate == other.SubscriptionExpirationDate && me.Pairs.All (pair => other.Get (pair.Key) == pair.Value); " is 246.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseBlobExtensions,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,ToRedactedString,The length of the statement  "	return Join ("\n"' b.Fields.Pairs.Select (pair => "secret".Equals (pair.Key' StringComparison.OrdinalIgnoreCase) ?  : )); " is 121.
Long Statement,ImageResizer.Plugins.LicenseVerifier,RSADecryptPublic,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,DecryptPublic,The length of the statement  "	return BigInteger.ModPow (input' Exponent' Modulus).ToByteArray ().Skip (signaturePadding).Reverse ().SkipWhile (v => v != 0).Skip (1 + signaturePadding).ToArray (); " is 165.
Long Statement,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Test_Generic,The length of the statement  "	var mod = BigInteger.Parse ("28178177427582259905122756905913963624440517746414712044433894631438407111916149031583287058323879921298234454158166031934230083094710974550125942791690254427377300877691173542319534371793100994953897137837772694304619234054383162641475011138179669415510521009673718000682851222831185756777382795378538121010194881849505437499638792289283538921706236004391184253166867653735050981736002298838523242717690667046044130539971131293603078008447972889271580670305162199959939004819206804246872436611558871928921860176200657026263241409488257640191893499783065332541392967986495144643652353104461436623253327708136399114561"); " is 649.
Long Statement,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Test_Generic,The length of the statement  "	const string licenseStr = "localhost:RG9tYWluOiBsb2NhbGhvc3QKT3duZXI6IEV2ZXJ5b25lCklzc3VlZDogMjAxNS0wMy0yOFQwOTozNjo1OVoKRmVhdHVyZXM6IFI0RWxpdGUgUjRDcmVhdGl2ZSBSNFBlcmZvcm1hbmNlCg==:h6D+kIXbF3qmvmW2gDpb+b4gdxBjnrkZLvSzXmEnqKAywNJNpTdFekpTOB4SwU14WbTeVyWwvFngHax7WuHBV+0WkQ5lDqKFaRW32vj8CJQeG8Wvnyj9PaNGaS/FpKhNjZbDEmh3qqirBp2NR0bpN4QbhP9NMy7+rOMo0nynAruwWvJKCnuf7mWWdb9a5uTZO9OUcSeS/tY8QaNeIhaCnhPe0Yx9qvOXe5nMnl10CR9ur+EtS54d1qzBGHqN/3oFhiB+xlqNELwz23qR4c8HxbTEyNarkG4CZx8CbbgJfHmPxAYGJTTBTPJ+cdah8MJR16Ta36cRZ2Buy8XYo/nf1g=="; " is 528.
Long Statement,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Validate,The length of the statement  "	log.AppendLine ("Plaintext hash: " + BitConverter.ToString (new SHA512Managed ().ComputeHash (blob.Data)).ToLower ().Replace ("-"' "")); " is 136.
Long Statement,ImageResizer.Plugins.LicenseVerifier,RealClock,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicensingSupport.cs,GetBuildDate,The length of the statement  "		return GetType ().Assembly.GetCustomAttributes (typeof(BuildDateAttribute)' false).Select (a => ((BuildDateAttribute)a).ValueDate).FirstOrDefault (); " is 149.
Long Statement,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,GetMemCachedBitmap,The length of the statement  "		throw new ImageProcessingException (500' "Failed to located watermark " + virtualPath' "Failed to located a watermarking file"' fe); " is 132.
Long Statement,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,RenderTo,The length of the statement  "				s.destGraphics.DrawImage (final' PolygonMath.ToRectangle (PolygonMath.CenterInside (PolygonMath.DownScaleInside (final.Size' imgBounds.Size)' imgBounds))); " is 155.
Long Statement,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,RenderTo,The length of the statement  "			s.destGraphics.DrawImage (img' PolygonMath.ToRectangle (PolygonMath.CenterInside (PolygonMath.DownScaleInside (img.Size' imgBounds.Size)' imgBounds))); " is 151.
Long Statement,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The length of the statement  "	SizeF normalSize = actualSizeCalculator ((double.IsNaN (width) && Fill) ? cont.Width : width' (double.IsNaN (height) && Fill) ? cont.Height : height); " is 150.
Long Statement,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The length of the statement  "	//When all 3 values are specified in either direction' we must use the alignment setting to determine which direction to snap to. " is 129.
Long Statement,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The length of the statement  "			if (Align == ContentAlignment.BottomCenter || Align == ContentAlignment.MiddleCenter || Align == ContentAlignment.TopCenter) { " is 126.
Long Statement,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The length of the statement  "			if (Align == ContentAlignment.BottomRight || Align == ContentAlignment.MiddleRight || Align == ContentAlignment.TopRight) " is 121.
Long Statement,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The length of the statement  "	//When all 3 values are specified in either direction' we must use the alignment setting to determine which direction to snap to. " is 129.
Long Statement,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The length of the statement  "			if (Align == ContentAlignment.MiddleLeft || Align == ContentAlignment.MiddleCenter || Align == ContentAlignment.MiddleRight) { " is 126.
Long Statement,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The length of the statement  "			if (Align == ContentAlignment.BottomLeft || Align == ContentAlignment.BottomCenter || Align == ContentAlignment.BottomRight) " is 124.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		bottomRightPadding = new SizeF ((float)Math.Floor (bottomRightPadding.Width)' (float)Math.Floor (bottomRightPadding.Height)); " is 125.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		SizeF watermarkBoundingBox = new SizeF (watermarkSize.Width + topLeftPadding.Width + bottomRightPadding.Width' watermarkSize.Height + topLeftPadding.Height + bottomRightPadding.Height); " is 185.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		bottomRightPadding = new SizeF ((float)Math.Floor (bottomRightPadding.Width)' (float)Math.Floor (bottomRightPadding.Height)); " is 125.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		float innerWidth = (float)Math.Floor (imageBox.Width - Math.Abs (topLeftPadding.Width) - Math.Abs (bottomRightPadding.Width)); " is 126.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		float innerHeight = (float)Math.Floor (imageBox.Height - Math.Abs (topLeftPadding.Height) - Math.Abs (bottomRightPadding.Height)); " is 130.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		if (align == ContentAlignment.BottomCenter || align == ContentAlignment.BottomLeft || align == ContentAlignment.BottomRight) " is 124.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		if (align == ContentAlignment.MiddleCenter || align == ContentAlignment.MiddleLeft || align == ContentAlignment.MiddleRight) " is 124.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		if (align == ContentAlignment.BottomRight || align == ContentAlignment.MiddleRight || align == ContentAlignment.TopRight) " is 121.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		if (align == ContentAlignment.BottomCenter || align == ContentAlignment.MiddleCenter || align == ContentAlignment.TopCenter) " is 124.
Long Statement,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The length of the statement  "		g.DrawImage (wb' new Rectangle ((int)(x + imageBox.X)' (int)(y + imageBox.Y)' (int)watermarkSize.Width' (int)watermarkSize.Height)); " is 132.
Long Statement,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,RenderTo,The length of the statement  "					size = PolygonMath.GetBoundingBox (PolygonMath.RotatePoly (PolygonMath.ToPoly (new RectangleF (new PointF (0' 0)' size))' Angle)).Size; " is 135.
Long Statement,ImageResizer.Plugins.Watermark,WatermarkPlugin,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Watermark.cs,Install,The length of the statement  "	_namedWatermarks = ParseWatermarks (c.getConfigXml ().queryFirst ("watermarks")' ref _defaultImageQuery' ref _otherImages); " is 123.
Long Statement,ImageResizer.Plugins.Watermark,WatermarkPlugin,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Watermark.cs,ParseWatermarks,The length of the statement  "	Dictionary<string' IEnumerable<Layer>> dict = new Dictionary<string' IEnumerable<Layer>> (StringComparer.OrdinalIgnoreCase); " is 124.
Long Statement,ImageResizer.Plugins.Watermark,WatermarkPlugin,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Watermark.cs,ParseWatermarks,The length of the statement  "		if (c.Name.Equals ("image"' StringComparison.OrdinalIgnoreCase) || c.Name.Equals ("text"' StringComparison.OrdinalIgnoreCase) || c.Name.Equals ("group"' StringComparison.OrdinalIgnoreCase)) { " is 191.
Long Statement,ImageResizer.Plugins.Watermark,WatermarkPlugin,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Watermark.cs,ParseWatermarks,The length of the statement  "				this.c.configurationSectionIssues.AcceptIssue (new Issue ("WatermarkPlugin"' "The name attribute for each watermark or watermark group must be specified' and must be unique."' "XML: " + c.ToString ()' IssueSeverity.ConfigurationError)); " is 236.
Long Statement,ImageResizer.Plugins.Watermark,WatermarkPlugin,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Watermark.cs,Pipeline_PostRewrite,The length of the statement  "				e.QueryString ["watermark-cachebreak"] = (e.QueryString ["watermark-cachebreak"] ?? "") + "_" + l.GetDataHash ().ToString (); " is 125.
Magic Number,ImageResizer.Plugins.LicenseVerifier,DomainLookup,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\DomainLookup.cs,DomainLookup,The following statement contains a magic number: suffixSearchList = knownDomains.Select (known => {  	var d = known.TrimStart ('.');  	d = d.StartsWith ("www.") ? d.Substring (4) : d;  	return new KeyValuePair<string' string> ("." + d' known);  }).ToList ();  
Magic Number,ImageResizer.Plugins.LicenseVerifier,DomainLookup,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\DomainLookup.cs,DomainLookup,The following statement contains a magic number: d = d.StartsWith ("www.") ? d.Substring (4) : d;  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,AdjustErrorDebounce,The following statement contains a magic number: if (error.IntervalTicks > 0) {  	error.IntervalTicks *= ErrorMultiplier;  	error.IntervalTicks += (long)Math.Round (new Random ().NextDouble () * clock.TicksPerSecond / 2.0);  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,AdjustErrorDebounce,The following statement contains a magic number: error.IntervalTicks += (long)Math.Round (new Random ().NextDouble () * clock.TicksPerSecond / 2.0);  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,ConstructQuerystring,The following statement contains a magic number: try {  	var query = getInfo ();  	query.WithPrepend (true).Add ("license_id"' id);  	return query.ToQueryString (7000);  } catch (Exception ex) {  	sink.AcceptIssue (new Issue ("LicenseManager"' "Failed to collect querystring for license request"' ex.ToString ()' IssueSeverity.Warning));  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseFetcher.cs,ConstructQuerystring,The following statement contains a magic number: return query.ToQueryString (7000);  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseBlob,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Deserialize,The following statement contains a magic number: if (parts.Count < 2) {  	throw new ArgumentException ("Not enough ':' delimited segments in license key; failed to deserialize: \"" + license + "\""' nameof (license));  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: if (debug) {  	var log = new StringBuilder ();  	exitCode = Test_Generic (log) ? 0 : 4;  	if (!Validate (licenseStr' mod' exp' log)) {  		exitCode = 2 ^ exitCode;  	}  	if (exitCode != 0) {  		Console.WriteLine (log.ToString ());  	}  } else {  	exitCode = Validate (licenseStr' mod' exp' null) ? 0 : 1;  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: if (debug) {  	var log = new StringBuilder ();  	exitCode = Test_Generic (log) ? 0 : 4;  	if (!Validate (licenseStr' mod' exp' log)) {  		exitCode = 2 ^ exitCode;  	}  	if (exitCode != 0) {  		Console.WriteLine (log.ToString ());  	}  } else {  	exitCode = Validate (licenseStr' mod' exp' null) ? 0 : 1;  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: exitCode = Test_Generic (log) ? 0 : 4;  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: if (!Validate (licenseStr' mod' exp' log)) {  	exitCode = 2 ^ exitCode;  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\Watermark\..\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: exitCode = 2 ^ exitCode;  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: if (value.EndsWith ("px"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 2);  	type = Units.Pixels;  } else if (value.EndsWith ("%")) {  	value = value.Substring (0' value.Length - 1);  	type = Units.Percentage;  } else if (value.EndsWith ("percent"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 7);  	type = Units.Percentage;  } else if (value.EndsWith ("pct"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 3);  	type = Units.Percentage;  }  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: if (value.EndsWith ("px"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 2);  	type = Units.Pixels;  } else if (value.EndsWith ("%")) {  	value = value.Substring (0' value.Length - 1);  	type = Units.Percentage;  } else if (value.EndsWith ("percent"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 7);  	type = Units.Percentage;  } else if (value.EndsWith ("pct"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 3);  	type = Units.Percentage;  }  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: if (value.EndsWith ("px"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 2);  	type = Units.Pixels;  } else if (value.EndsWith ("%")) {  	value = value.Substring (0' value.Length - 1);  	type = Units.Percentage;  } else if (value.EndsWith ("percent"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 7);  	type = Units.Percentage;  } else if (value.EndsWith ("pct"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 3);  	type = Units.Percentage;  }  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: value = value.Substring (0' value.Length - 2);  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: if (value.EndsWith ("%")) {  	value = value.Substring (0' value.Length - 1);  	type = Units.Percentage;  } else if (value.EndsWith ("percent"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 7);  	type = Units.Percentage;  } else if (value.EndsWith ("pct"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 3);  	type = Units.Percentage;  }  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: if (value.EndsWith ("%")) {  	value = value.Substring (0' value.Length - 1);  	type = Units.Percentage;  } else if (value.EndsWith ("percent"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 7);  	type = Units.Percentage;  } else if (value.EndsWith ("pct"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 3);  	type = Units.Percentage;  }  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: if (value.EndsWith ("percent"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 7);  	type = Units.Percentage;  } else if (value.EndsWith ("pct"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 3);  	type = Units.Percentage;  }  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: if (value.EndsWith ("percent"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 7);  	type = Units.Percentage;  } else if (value.EndsWith ("pct"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 3);  	type = Units.Percentage;  }  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: value = value.Substring (0' value.Length - 7);  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: if (value.EndsWith ("pct"' StringComparison.OrdinalIgnoreCase)) {  	value = value.Substring (0' value.Length - 3);  	type = Units.Percentage;  }  
Magic Number,ImageResizer.Plugins.Watermark,DistanceUnit,F:\newReposMay17\imazen_resizer\Plugins\Watermark\DistanceUnit.cs,TryParse,The following statement contains a magic number: value = value.Substring (0' value.Length - 3);  
Magic Number,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,GetMemCachedBitmap,The following statement contains a magic number: try {  	b = c.CurrentImageBuilder.LoadImage (virtualPath' query);  } catch (FileNotFoundException fe) {  	throw new ImageProcessingException (500' "Failed to located watermark " + virtualPath' "Failed to located a watermarking file"' fe);  }  
Magic Number,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,GetMemCachedBitmap,The following statement contains a magic number: throw new ImageProcessingException (500' "Failed to located watermark " + virtualPath' "Failed to located a watermarking file"' fe);  
Magic Number,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,RenderTo,The following statement contains a magic number: lock (img) {  	//Only one reader from the cached bitmap at a time.  	//Skip rendering unless we have room to work with.  	if (imgBounds.Width < 2 || imgBounds.Height < 2)  		return;  	if (ImageQuery.Keys.Count > 0 || Fill) {  		ResizeSettings settings = new ResizeSettings (ImageQuery);  		if (Fill && string.IsNullOrEmpty (settings ["scale"]))  			settings.Scale = ScaleMode.Both;  		settings.MaxWidth = (int)Math.Floor (imgBounds.Width);  		settings.MaxHeight = (int)Math.Floor (imgBounds.Height);  		using (Bitmap final = c.CurrentImageBuilder.Build (img' settings' false)) {  			s.destGraphics.DrawImage (final' PolygonMath.ToRectangle (PolygonMath.CenterInside (PolygonMath.DownScaleInside (final.Size' imgBounds.Size)' imgBounds)));  		}  	} else {  		s.destGraphics.DrawImage (img' PolygonMath.ToRectangle (PolygonMath.CenterInside (PolygonMath.DownScaleInside (img.Size' imgBounds.Size)' imgBounds)));  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,RenderTo,The following statement contains a magic number: lock (img) {  	//Only one reader from the cached bitmap at a time.  	//Skip rendering unless we have room to work with.  	if (imgBounds.Width < 2 || imgBounds.Height < 2)  		return;  	if (ImageQuery.Keys.Count > 0 || Fill) {  		ResizeSettings settings = new ResizeSettings (ImageQuery);  		if (Fill && string.IsNullOrEmpty (settings ["scale"]))  			settings.Scale = ScaleMode.Both;  		settings.MaxWidth = (int)Math.Floor (imgBounds.Width);  		settings.MaxHeight = (int)Math.Floor (imgBounds.Height);  		using (Bitmap final = c.CurrentImageBuilder.Build (img' settings' false)) {  			s.destGraphics.DrawImage (final' PolygonMath.ToRectangle (PolygonMath.CenterInside (PolygonMath.DownScaleInside (final.Size' imgBounds.Size)' imgBounds)));  		}  	} else {  		s.destGraphics.DrawImage (img' PolygonMath.ToRectangle (PolygonMath.CenterInside (PolygonMath.DownScaleInside (img.Size' imgBounds.Size)' imgBounds)));  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,RenderTo,The following statement contains a magic number: if (imgBounds.Width < 2 || imgBounds.Height < 2)  	return;  
Magic Number,ImageResizer.Plugins.Watermark,ImageLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\ImageLayer.cs,RenderTo,The following statement contains a magic number: if (imgBounds.Width < 2 || imgBounds.Height < 2)  	return;  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: if (!double.IsNaN (left) && !double.IsNaN (right) && right < left)  	left = right = ((left + right) / 2);  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: left = right = ((left + right) / 2);  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: if (!double.IsNaN (top) && !double.IsNaN (bottom) && bottom < top)  	bottom = top = ((bottom + top) / 2);  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: bottom = top = ((bottom + top) / 2);  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: if (!double.IsNaN (left) && !double.IsNaN (right) && !double.IsNaN (width)) {  	if (width > right - left)  		width = right - left;  	//Use the smaller value in this case' no need to align.  	else {  		if (Align == ContentAlignment.BottomLeft || Align == ContentAlignment.MiddleLeft || Align == ContentAlignment.TopLeft)  			right = left + width;  		if (Align == ContentAlignment.BottomCenter || Align == ContentAlignment.MiddleCenter || Align == ContentAlignment.TopCenter) {  			left += (right - left - width) / 2;  			right = left + width;  		}  		if (Align == ContentAlignment.BottomRight || Align == ContentAlignment.MiddleRight || Align == ContentAlignment.TopRight)  			left = right - width;  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: if (width > right - left)  	width = right - left;  //Use the smaller value in this case' no need to align.  else {  	if (Align == ContentAlignment.BottomLeft || Align == ContentAlignment.MiddleLeft || Align == ContentAlignment.TopLeft)  		right = left + width;  	if (Align == ContentAlignment.BottomCenter || Align == ContentAlignment.MiddleCenter || Align == ContentAlignment.TopCenter) {  		left += (right - left - width) / 2;  		right = left + width;  	}  	if (Align == ContentAlignment.BottomRight || Align == ContentAlignment.MiddleRight || Align == ContentAlignment.TopRight)  		left = right - width;  }  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: if (Align == ContentAlignment.BottomCenter || Align == ContentAlignment.MiddleCenter || Align == ContentAlignment.TopCenter) {  	left += (right - left - width) / 2;  	right = left + width;  }  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: left += (right - left - width) / 2;  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: if (!double.IsNaN (top) && !double.IsNaN (bottom) && !double.IsNaN (height)) {  	if (height > bottom - top)  		height = bottom - top;  	//Use the smaller value in this case' no need to align.  	else {  		if (Align == ContentAlignment.TopLeft || Align == ContentAlignment.TopCenter || Align == ContentAlignment.TopRight)  			bottom = top + height;  		if (Align == ContentAlignment.MiddleLeft || Align == ContentAlignment.MiddleCenter || Align == ContentAlignment.MiddleRight) {  			top += (bottom - top - height) / 2;  			bottom = top + height;  		}  		if (Align == ContentAlignment.BottomLeft || Align == ContentAlignment.BottomCenter || Align == ContentAlignment.BottomRight)  			top = bottom - height;  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: if (height > bottom - top)  	height = bottom - top;  //Use the smaller value in this case' no need to align.  else {  	if (Align == ContentAlignment.TopLeft || Align == ContentAlignment.TopCenter || Align == ContentAlignment.TopRight)  		bottom = top + height;  	if (Align == ContentAlignment.MiddleLeft || Align == ContentAlignment.MiddleCenter || Align == ContentAlignment.MiddleRight) {  		top += (bottom - top - height) / 2;  		bottom = top + height;  	}  	if (Align == ContentAlignment.BottomLeft || Align == ContentAlignment.BottomCenter || Align == ContentAlignment.BottomRight)  		top = bottom - height;  }  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: if (Align == ContentAlignment.MiddleLeft || Align == ContentAlignment.MiddleCenter || Align == ContentAlignment.MiddleRight) {  	top += (bottom - top - height) / 2;  	bottom = top + height;  }  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,CalculateLayerCoordinates,The following statement contains a magic number: top += (bottom - top - height) / 2;  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,Resolve,The following statement contains a magic number: if (value.Type == DistanceUnit.Units.Percentage)  	val *= percentRelativeTo / 100;  
Magic Number,ImageResizer.Plugins.Watermark,Layer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\Layer.cs,Resolve,The following statement contains a magic number: val *= percentRelativeTo / 100;  
Magic Number,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The following statement contains a magic number: lock (wb) {  	//If percentages' resolve to pixels  	if (valuesPercentages) {  		//Force into 0..1 range' inclusive.  		watermarkSize.Height = Math.Max (0' Math.Min (1' watermarkSize.Height));  		watermarkSize.Width = Math.Max (0' Math.Min (1' watermarkSize.Width));  		topLeftPadding.Height = Math.Max (0' Math.Min (1' topLeftPadding.Height));  		topLeftPadding.Width = Math.Max (0' Math.Min (1' topLeftPadding.Width));  		bottomRightPadding.Height = Math.Max (0' Math.Min (1' bottomRightPadding.Height));  		bottomRightPadding.Width = Math.Max (0' Math.Min (1' bottomRightPadding.Width));  		//Make sure everything adds up to 1  		double totalWidth = watermarkSize.Width + topLeftPadding.Width + bottomRightPadding.Width;  		if (totalWidth > 1) {  			totalWidth = 1 / totalWidth;  			//Turn it into the factor we have to multiple by to make everything fit.  			watermarkSize.Width *= (float)totalWidth;  			topLeftPadding.Width *= (float)totalWidth;  			bottomRightPadding.Width *= (float)totalWidth;  		}  		double totalHeight = watermarkSize.Height + topLeftPadding.Height + bottomRightPadding.Height;  		if (totalHeight > 1) {  			totalHeight = 1 / totalHeight;  			//Turn it into the factor we have to multiply by to make everything fit.  			watermarkSize.Height *= (float)totalHeight;  			topLeftPadding.Height *= (float)totalHeight;  			bottomRightPadding.Height *= (float)totalHeight;  		}  		//Now' we can resolve the percentages to pixels.  		watermarkSize.Height *= imageBox.Height;  		watermarkSize.Width *= imageBox.Width;  		topLeftPadding.Height *= imageBox.Height;  		topLeftPadding.Width *= imageBox.Width;  		bottomRightPadding.Height *= imageBox.Height;  		bottomRightPadding.Width *= imageBox.Width;  	}  	//Keep aspect ratio' shrinking further if needed.  	if (keepAspectRatio)  		watermarkSize = PolygonMath.DownScaleInside (wb.Size' watermarkSize);  	//Floor all values to avoid rounding errors and blurry lines.  	watermarkSize = new SizeF ((float)Math.Floor (watermarkSize.Width)' (float)Math.Floor (watermarkSize.Height));  	topLeftPadding = new SizeF ((float)Math.Floor (topLeftPadding.Width)' (float)Math.Floor (topLeftPadding.Height));  	bottomRightPadding = new SizeF ((float)Math.Floor (bottomRightPadding.Width)' (float)Math.Floor (bottomRightPadding.Height));  	//Check bounding box  	SizeF watermarkBoundingBox = new SizeF (watermarkSize.Width + topLeftPadding.Width + bottomRightPadding.Width' watermarkSize.Height + topLeftPadding.Height + bottomRightPadding.Height);  	//Don't draw the watermark if it is too small.  	if (!PolygonMath.FitsInside (watermarkBoundingBox' imageBox.Size)) {  		if (hideIfTooSmall)  			return true;  		else {  			SizeF oldSize = watermarkBoundingBox;  			watermarkBoundingBox = PolygonMath.DownScaleInside (watermarkBoundingBox' imageBox.Size);  			watermarkSize.Width -= (oldSize.Width - watermarkBoundingBox.Width);  			watermarkSize.Height -= (oldSize.Height - watermarkBoundingBox.Height);  		}  	}  	//Floor all values again  	watermarkSize = new SizeF ((float)Math.Floor (watermarkSize.Width)' (float)Math.Floor (watermarkSize.Height));  	topLeftPadding = new SizeF ((float)Math.Floor (topLeftPadding.Width)' (float)Math.Floor (topLeftPadding.Height));  	bottomRightPadding = new SizeF ((float)Math.Floor (bottomRightPadding.Width)' (float)Math.Floor (bottomRightPadding.Height));  	float innerWidth = (float)Math.Floor (imageBox.Width - Math.Abs (topLeftPadding.Width) - Math.Abs (bottomRightPadding.Width));  	float innerHeight = (float)Math.Floor (imageBox.Height - Math.Abs (topLeftPadding.Height) - Math.Abs (bottomRightPadding.Height));  	float x = 0;  	float y = 0;  	if (align == ContentAlignment.BottomCenter || align == ContentAlignment.BottomLeft || align == ContentAlignment.BottomRight)  		y = (innerHeight - watermarkSize.Height) + topLeftPadding.Height;  	if (align == ContentAlignment.MiddleCenter || align == ContentAlignment.MiddleLeft || align == ContentAlignment.MiddleRight)  		y = (innerHeight - watermarkSize.Height) / 2 + topLeftPadding.Height;  	if (align == ContentAlignment.TopCenter || align == ContentAlignment.TopLeft || align == ContentAlignment.TopRight)  		y = topLeftPadding.Height;  	if (align == ContentAlignment.BottomRight || align == ContentAlignment.MiddleRight || align == ContentAlignment.TopRight)  		x = (innerWidth - watermarkSize.Width) + topLeftPadding.Width;  	if (align == ContentAlignment.BottomCenter || align == ContentAlignment.MiddleCenter || align == ContentAlignment.TopCenter)  		x = (innerWidth - watermarkSize.Width) / 2 + topLeftPadding.Width;  	if (align == ContentAlignment.BottomLeft || align == ContentAlignment.MiddleLeft || align == ContentAlignment.TopLeft)  		x = topLeftPadding.Width;  	//Draw watermark  	g.DrawImage (wb' new Rectangle ((int)(x + imageBox.X)' (int)(y + imageBox.Y)' (int)watermarkSize.Width' (int)watermarkSize.Height));  }  
Magic Number,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The following statement contains a magic number: lock (wb) {  	//If percentages' resolve to pixels  	if (valuesPercentages) {  		//Force into 0..1 range' inclusive.  		watermarkSize.Height = Math.Max (0' Math.Min (1' watermarkSize.Height));  		watermarkSize.Width = Math.Max (0' Math.Min (1' watermarkSize.Width));  		topLeftPadding.Height = Math.Max (0' Math.Min (1' topLeftPadding.Height));  		topLeftPadding.Width = Math.Max (0' Math.Min (1' topLeftPadding.Width));  		bottomRightPadding.Height = Math.Max (0' Math.Min (1' bottomRightPadding.Height));  		bottomRightPadding.Width = Math.Max (0' Math.Min (1' bottomRightPadding.Width));  		//Make sure everything adds up to 1  		double totalWidth = watermarkSize.Width + topLeftPadding.Width + bottomRightPadding.Width;  		if (totalWidth > 1) {  			totalWidth = 1 / totalWidth;  			//Turn it into the factor we have to multiple by to make everything fit.  			watermarkSize.Width *= (float)totalWidth;  			topLeftPadding.Width *= (float)totalWidth;  			bottomRightPadding.Width *= (float)totalWidth;  		}  		double totalHeight = watermarkSize.Height + topLeftPadding.Height + bottomRightPadding.Height;  		if (totalHeight > 1) {  			totalHeight = 1 / totalHeight;  			//Turn it into the factor we have to multiply by to make everything fit.  			watermarkSize.Height *= (float)totalHeight;  			topLeftPadding.Height *= (float)totalHeight;  			bottomRightPadding.Height *= (float)totalHeight;  		}  		//Now' we can resolve the percentages to pixels.  		watermarkSize.Height *= imageBox.Height;  		watermarkSize.Width *= imageBox.Width;  		topLeftPadding.Height *= imageBox.Height;  		topLeftPadding.Width *= imageBox.Width;  		bottomRightPadding.Height *= imageBox.Height;  		bottomRightPadding.Width *= imageBox.Width;  	}  	//Keep aspect ratio' shrinking further if needed.  	if (keepAspectRatio)  		watermarkSize = PolygonMath.DownScaleInside (wb.Size' watermarkSize);  	//Floor all values to avoid rounding errors and blurry lines.  	watermarkSize = new SizeF ((float)Math.Floor (watermarkSize.Width)' (float)Math.Floor (watermarkSize.Height));  	topLeftPadding = new SizeF ((float)Math.Floor (topLeftPadding.Width)' (float)Math.Floor (topLeftPadding.Height));  	bottomRightPadding = new SizeF ((float)Math.Floor (bottomRightPadding.Width)' (float)Math.Floor (bottomRightPadding.Height));  	//Check bounding box  	SizeF watermarkBoundingBox = new SizeF (watermarkSize.Width + topLeftPadding.Width + bottomRightPadding.Width' watermarkSize.Height + topLeftPadding.Height + bottomRightPadding.Height);  	//Don't draw the watermark if it is too small.  	if (!PolygonMath.FitsInside (watermarkBoundingBox' imageBox.Size)) {  		if (hideIfTooSmall)  			return true;  		else {  			SizeF oldSize = watermarkBoundingBox;  			watermarkBoundingBox = PolygonMath.DownScaleInside (watermarkBoundingBox' imageBox.Size);  			watermarkSize.Width -= (oldSize.Width - watermarkBoundingBox.Width);  			watermarkSize.Height -= (oldSize.Height - watermarkBoundingBox.Height);  		}  	}  	//Floor all values again  	watermarkSize = new SizeF ((float)Math.Floor (watermarkSize.Width)' (float)Math.Floor (watermarkSize.Height));  	topLeftPadding = new SizeF ((float)Math.Floor (topLeftPadding.Width)' (float)Math.Floor (topLeftPadding.Height));  	bottomRightPadding = new SizeF ((float)Math.Floor (bottomRightPadding.Width)' (float)Math.Floor (bottomRightPadding.Height));  	float innerWidth = (float)Math.Floor (imageBox.Width - Math.Abs (topLeftPadding.Width) - Math.Abs (bottomRightPadding.Width));  	float innerHeight = (float)Math.Floor (imageBox.Height - Math.Abs (topLeftPadding.Height) - Math.Abs (bottomRightPadding.Height));  	float x = 0;  	float y = 0;  	if (align == ContentAlignment.BottomCenter || align == ContentAlignment.BottomLeft || align == ContentAlignment.BottomRight)  		y = (innerHeight - watermarkSize.Height) + topLeftPadding.Height;  	if (align == ContentAlignment.MiddleCenter || align == ContentAlignment.MiddleLeft || align == ContentAlignment.MiddleRight)  		y = (innerHeight - watermarkSize.Height) / 2 + topLeftPadding.Height;  	if (align == ContentAlignment.TopCenter || align == ContentAlignment.TopLeft || align == ContentAlignment.TopRight)  		y = topLeftPadding.Height;  	if (align == ContentAlignment.BottomRight || align == ContentAlignment.MiddleRight || align == ContentAlignment.TopRight)  		x = (innerWidth - watermarkSize.Width) + topLeftPadding.Width;  	if (align == ContentAlignment.BottomCenter || align == ContentAlignment.MiddleCenter || align == ContentAlignment.TopCenter)  		x = (innerWidth - watermarkSize.Width) / 2 + topLeftPadding.Width;  	if (align == ContentAlignment.BottomLeft || align == ContentAlignment.MiddleLeft || align == ContentAlignment.TopLeft)  		x = topLeftPadding.Width;  	//Draw watermark  	g.DrawImage (wb' new Rectangle ((int)(x + imageBox.X)' (int)(y + imageBox.Y)' (int)watermarkSize.Width' (int)watermarkSize.Height));  }  
Magic Number,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The following statement contains a magic number: if (align == ContentAlignment.MiddleCenter || align == ContentAlignment.MiddleLeft || align == ContentAlignment.MiddleRight)  	y = (innerHeight - watermarkSize.Height) / 2 + topLeftPadding.Height;  
Magic Number,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The following statement contains a magic number: y = (innerHeight - watermarkSize.Height) / 2 + topLeftPadding.Height;  
Magic Number,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The following statement contains a magic number: if (align == ContentAlignment.BottomCenter || align == ContentAlignment.MiddleCenter || align == ContentAlignment.TopCenter)  	x = (innerWidth - watermarkSize.Width) / 2 + topLeftPadding.Width;  
Magic Number,ImageResizer.Plugins.Watermark,LegacyWatermarkFeatures,F:\newReposMay17\imazen_resizer\Plugins\Watermark\LegacyWatermarkFeatures.cs,LegacyDrawWatermark,The following statement contains a magic number: x = (innerWidth - watermarkSize.Width) / 2 + topLeftPadding.Width;  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: using (GraphicsPath path = new GraphicsPath ()) {  	path.AddString (text' f.FontFamily' (int)f.Style' (float)(f.SizeInPoints / 72 * g.DpiY)' point' fmt);  	Color c = GlowColor;  	if (GlowWidth > 0 && c.A == 255)  		c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  	//Draw glow  	for (int i = 1; i <= GlowWidth; ++i) {  		using (Pen pen = new Pen (c' i + OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw outline  	if (OutlineWidth > 0) {  		using (Pen pen = new Pen (OutlineColor' OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw inner text  	using (Brush b = GetBrush ()) {  		g.FillPath (b' path);  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: using (GraphicsPath path = new GraphicsPath ()) {  	path.AddString (text' f.FontFamily' (int)f.Style' (float)(f.SizeInPoints / 72 * g.DpiY)' point' fmt);  	Color c = GlowColor;  	if (GlowWidth > 0 && c.A == 255)  		c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  	//Draw glow  	for (int i = 1; i <= GlowWidth; ++i) {  		using (Pen pen = new Pen (c' i + OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw outline  	if (OutlineWidth > 0) {  		using (Pen pen = new Pen (OutlineColor' OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw inner text  	using (Brush b = GetBrush ()) {  		g.FillPath (b' path);  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: using (GraphicsPath path = new GraphicsPath ()) {  	path.AddString (text' f.FontFamily' (int)f.Style' (float)(f.SizeInPoints / 72 * g.DpiY)' point' fmt);  	Color c = GlowColor;  	if (GlowWidth > 0 && c.A == 255)  		c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  	//Draw glow  	for (int i = 1; i <= GlowWidth; ++i) {  		using (Pen pen = new Pen (c' i + OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw outline  	if (OutlineWidth > 0) {  		using (Pen pen = new Pen (OutlineColor' OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw inner text  	using (Brush b = GetBrush ()) {  		g.FillPath (b' path);  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: using (GraphicsPath path = new GraphicsPath ()) {  	path.AddString (text' f.FontFamily' (int)f.Style' (float)(f.SizeInPoints / 72 * g.DpiY)' point' fmt);  	Color c = GlowColor;  	if (GlowWidth > 0 && c.A == 255)  		c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  	//Draw glow  	for (int i = 1; i <= GlowWidth; ++i) {  		using (Pen pen = new Pen (c' i + OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw outline  	if (OutlineWidth > 0) {  		using (Pen pen = new Pen (OutlineColor' OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw inner text  	using (Brush b = GetBrush ()) {  		g.FillPath (b' path);  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: using (GraphicsPath path = new GraphicsPath ()) {  	path.AddString (text' f.FontFamily' (int)f.Style' (float)(f.SizeInPoints / 72 * g.DpiY)' point' fmt);  	Color c = GlowColor;  	if (GlowWidth > 0 && c.A == 255)  		c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  	//Draw glow  	for (int i = 1; i <= GlowWidth; ++i) {  		using (Pen pen = new Pen (c' i + OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw outline  	if (OutlineWidth > 0) {  		using (Pen pen = new Pen (OutlineColor' OutlineWidth)) {  			pen.LineJoin = LineJoin.Round;  			g.DrawPath (pen' path);  		}  	}  	//Draw inner text  	using (Brush b = GetBrush ()) {  		g.FillPath (b' path);  	}  }  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: path.AddString (text' f.FontFamily' (int)f.Style' (float)(f.SizeInPoints / 72 * g.DpiY)' point' fmt);  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: if (GlowWidth > 0 && c.A == 255)  	c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: if (GlowWidth > 0 && c.A == 255)  	c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: if (GlowWidth > 0 && c.A == 255)  	c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: if (GlowWidth > 0 && c.A == 255)  	c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  
Magic Number,ImageResizer.Plugins.Watermark,TextLayer,F:\newReposMay17\imazen_resizer\Plugins\Watermark\TextLayer.cs,DrawString,The following statement contains a magic number: c = Color.FromArgb (Math.Max (64' Math.Min (24' 255 / GlowWidth))' c);  
