Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,FetchLicense,Cyclomatic complexity of the method is 11
Complex Method,ImageResizer.Plugins.LicenseVerifier,LicenseDetails,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,LicenseDetails,Cyclomatic complexity of the method is 8
Long Parameter List,ImageResizer.Plugins.LicenseVerifier,Computation,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,Computation,The method has 6 parameters.
Long Parameter List,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,LicenseFetcher,The method has 9 parameters.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseChain,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseChain.cs,ToPublicString,The length of the statement  "	Func<ILicenseBlob' string> freshness = b => b == remoteLicense ? "(fresh)\n" : b.Original == cached ? "(from cache)\n" : ""; " is 124.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseChain,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseChain.cs,ToPublicString,The length of the statement  "			parent.AcceptIssue (new Issue ("Remote license file does not match. Please contact support@imageresizing.net"' "Local: " + Id + "  Remote: " + newId' IssueSeverity.Error)); " is 172.
Long Statement,ImageResizer.Plugins.LicenseVerifier,DomainLookup,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\DomainLookup.cs,GetChainsByDomain,The length of the statement  "	return chains.SelectMany (chain => chain.Licenses ().SelectMany (b => b.Fields.GetAllDomains ()).Select (domain => new KeyValuePair<string' ILicenseChain> (domain' chain))).GroupBy (pair => pair.Key' pair => pair.Value' (k' v) => new KeyValuePair<string' IEnumerable<ILicenseChain>> (k' v)).ToDictionary (pair => pair.Key' pair => pair.Value' StringComparer.Ordinal); " is 367.
Long Statement,ImageResizer.Plugins.LicenseVerifier,RealClock,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicensingSupport.cs,GetBuildDate,The length of the statement  "		return GetType ().Assembly.GetCustomAttributes (typeof(BuildDateAttribute)' false).Select (a => ((BuildDateAttribute)a).ValueDate).FirstOrDefault (); " is 149.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,QueueLicenseFetch,The length of the statement  "				if (pair.Value.Status == TaskStatus.RanToCompletion || pair.Value.Status == TaskStatus.Faulted || pair.Value.Status == TaskStatus.Canceled) { " is 141.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,FirewallIssue,The length of the statement  "	return new Issue ("Check firewall; cannot reach Amazon S3 to validate license " + licenseName' "Check https://status.aws.amazon.com' and ensure the following URLs can be reached from this server: " + string.Join ("\n"' baseUrls.Select (s => s + "*"))' IssueSeverity.Error); " is 273.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,ConstructQuerystring,The length of the statement  "		sink.AcceptIssue (new Issue ("LicenseManager"' "Failed to collect querystring for license request"' ex.ToString ()' IssueSeverity.Warning)); " is 140.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,InvokeResultCallback,The length of the statement  "		sink.AcceptIssue (new Issue ("LicenseManager"' "Exception thrown in callback for FetchLicense"' ex.ToString ()' IssueSeverity.Error)); " is 134.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseManagerSingleton,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseManager.cs,TryDeserialize,The length of the statement  "		AcceptIssue (new Issue ("Failed to parse license (from " + licenseSource + "):"' WebConfigLicenseReader.TryRedact (license) + "\n" + ex' IssueSeverity.Error)); " is 159.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseManagerSingleton,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseManager.cs,TryDeserialize,The length of the statement  "		sink.AcceptIssue (new Issue ("License " + blob.Fields.Id + " (from " + licenseSource + ") has been corrupted or has not been signed with a matching private key."' IssueSeverity.Error)); " is 185.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseManagerSingleton,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseManager.cs,TryDeserialize,The length of the statement  "		sink.AcceptIssue (new Issue ("This license cannot be installed directly; it must be fetched from a license server"' WebConfigLicenseReader.TryRedact (license)' IssueSeverity.Error)); " is 182.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseBlob,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Deserialize,The length of the statement  "		throw new ArgumentException ("Not enough ':' delimited segments in license key; failed to deserialize: \"" + license + "\""' nameof (license)); " is 143.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseDetailsExtensions,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,DataMatches,The length of the statement  "	return me != null && other != null && me.Id == other.Id && me.Issued == other.Issued && me.Expires == other.Expires && me.SubscriptionExpirationDate == other.SubscriptionExpirationDate && me.Pairs.All (pair => other.Get (pair.Key) == pair.Value); " is 246.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseBlobExtensions,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,ToRedactedString,The length of the statement  "	return Join ("\n"' b.Fields.Pairs.Select (pair => "secret".Equals (pair.Key' StringComparison.OrdinalIgnoreCase) ?  : )); " is 121.
Long Statement,ImageResizer.Plugins.LicenseVerifier,RSADecryptPublic,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,DecryptPublic,The length of the statement  "	return BigInteger.ModPow (input' Exponent' Modulus).ToByteArray ().Skip (signaturePadding).Reverse ().SkipWhile (v => v != 0).Skip (1 + signaturePadding).ToArray (); " is 165.
Long Statement,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Test_Generic,The length of the statement  "	var mod = BigInteger.Parse ("28178177427582259905122756905913963624440517746414712044433894631438407111916149031583287058323879921298234454158166031934230083094710974550125942791690254427377300877691173542319534371793100994953897137837772694304619234054383162641475011138179669415510521009673718000682851222831185756777382795378538121010194881849505437499638792289283538921706236004391184253166867653735050981736002298838523242717690667046044130539971131293603078008447972889271580670305162199959939004819206804246872436611558871928921860176200657026263241409488257640191893499783065332541392967986495144643652353104461436623253327708136399114561"); " is 649.
Long Statement,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Test_Generic,The length of the statement  "	const string licenseStr = "localhost:RG9tYWluOiBsb2NhbGhvc3QKT3duZXI6IEV2ZXJ5b25lCklzc3VlZDogMjAxNS0wMy0yOFQwOTozNjo1OVoKRmVhdHVyZXM6IFI0RWxpdGUgUjRDcmVhdGl2ZSBSNFBlcmZvcm1hbmNlCg==:h6D+kIXbF3qmvmW2gDpb+b4gdxBjnrkZLvSzXmEnqKAywNJNpTdFekpTOB4SwU14WbTeVyWwvFngHax7WuHBV+0WkQ5lDqKFaRW32vj8CJQeG8Wvnyj9PaNGaS/FpKhNjZbDEmh3qqirBp2NR0bpN4QbhP9NMy7+rOMo0nynAruwWvJKCnuf7mWWdb9a5uTZO9OUcSeS/tY8QaNeIhaCnhPe0Yx9qvOXe5nMnl10CR9ur+EtS54d1qzBGHqN/3oFhiB+xlqNELwz23qR4c8HxbTEyNarkG4CZx8CbbgJfHmPxAYGJTTBTPJ+cdah8MJR16Ta36cRZ2Buy8XYo/nf1g=="; " is 528.
Long Statement,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Validate,The length of the statement  "	log.AppendLine ("Plaintext hash: " + BitConverter.ToString (new SHA512Managed ().ComputeHash (blob.Data)).ToLower ().Replace ("-"' "")); " is 136.
Magic Number,ImageResizer.Plugins.LicenseVerifier,DomainLookup,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\DomainLookup.cs,DomainLookup,The following statement contains a magic number: suffixSearchList = knownDomains.Select (known => {  	var d = known.TrimStart ('.');  	d = d.StartsWith ("www.") ? d.Substring (4) : d;  	return new KeyValuePair<string' string> ("." + d' known);  }).ToList ();  
Magic Number,ImageResizer.Plugins.LicenseVerifier,DomainLookup,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\DomainLookup.cs,DomainLookup,The following statement contains a magic number: d = d.StartsWith ("www.") ? d.Substring (4) : d;  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,AdjustErrorDebounce,The following statement contains a magic number: if (error.IntervalTicks > 0) {  	error.IntervalTicks *= ErrorMultiplier;  	error.IntervalTicks += (long)Math.Round (new Random ().NextDouble () * clock.TicksPerSecond / 2.0);  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,AdjustErrorDebounce,The following statement contains a magic number: error.IntervalTicks += (long)Math.Round (new Random ().NextDouble () * clock.TicksPerSecond / 2.0);  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,ConstructQuerystring,The following statement contains a magic number: try {  	var query = getInfo ();  	query.WithPrepend (true).Add ("license_id"' id);  	return query.ToQueryString (7000);  } catch (Exception ex) {  	sink.AcceptIssue (new Issue ("LicenseManager"' "Failed to collect querystring for license request"' ex.ToString ()' IssueSeverity.Warning));  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,ConstructQuerystring,The following statement contains a magic number: return query.ToQueryString (7000);  
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseBlob,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Deserialize,The following statement contains a magic number: if (parts.Count < 2) {  	throw new ArgumentException ("Not enough ':' delimited segments in license key; failed to deserialize: \"" + license + "\""' nameof (license));  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: if (debug) {  	var log = new StringBuilder ();  	exitCode = Test_Generic (log) ? 0 : 4;  	if (!Validate (licenseStr' mod' exp' log)) {  		exitCode = 2 ^ exitCode;  	}  	if (exitCode != 0) {  		Console.WriteLine (log.ToString ());  	}  } else {  	exitCode = Validate (licenseStr' mod' exp' null) ? 0 : 1;  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: if (debug) {  	var log = new StringBuilder ();  	exitCode = Test_Generic (log) ? 0 : 4;  	if (!Validate (licenseStr' mod' exp' log)) {  		exitCode = 2 ^ exitCode;  	}  	if (exitCode != 0) {  		Console.WriteLine (log.ToString ());  	}  } else {  	exitCode = Validate (licenseStr' mod' exp' null) ? 0 : 1;  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: exitCode = Test_Generic (log) ? 0 : 4;  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: if (!Validate (licenseStr' mod' exp' log)) {  	exitCode = 2 ^ exitCode;  }  
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,F:\newReposMay17\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: exitCode = 2 ^ exitCode;  
