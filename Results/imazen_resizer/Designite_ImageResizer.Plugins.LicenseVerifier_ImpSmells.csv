Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ImageResizer.Plugins.LicenseVerifier,LicenseDetails,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,LicenseDetails,Cyclomatic complexity of the method is 8
Long Parameter List,ImageResizer.Plugins.LicenseVerifier,Computation,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,Computation,The method has 6 parameters. Parameters: c' trustedKeys' permanentIssueSink' mgr' clock' enforcementEnabled
Long Parameter List,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,LicenseFetcher,The method has 9 parameters. Parameters: clock' getClient' licenseResult' getInfo' sink' licenseId' licenseSecret' baseUrls' licenseFetchIntervalSeconds
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseChain,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseChain.cs,ToPublicString,The length of the statement  "                $"License {Id}{(IsRemote ? " (remote)" : "")}\n{string.Join("\n\n"' Licenses().Where(b => b.Fields.IsPublic()).Select(b => freshness(b) + b.ToRedactedString()))}\n");" is 166.
Long Statement,ImageResizer.Plugins.LicenseVerifier,LicenseChain,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseChain.cs,ToString,The length of the statement  "                $"License {Id} (remote={IsRemote})\n    {string.Join("\n\n"' Licenses().Select(b => freshness(b) + b.ToRedactedString())).Replace("\n"' "\n    ")}\n");" is 151.
Long Statement,ImageResizer.Plugins.LicenseVerifier,Computation,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,AreFeaturesLicensed,The length of the statement  "                    $"License {b.Fields.Id} needs to be upgraded; it does not cover in-use features {notCovered.SelectMany(v => v).Distinct().Delimited("' ")}"' b.ToRedactedString()'" is 162.
Long Statement,ImageResizer.Plugins.LicenseVerifier,Computation,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,IsLicenseValid,The length of the statement  "                    $"License {details.Id} covers ImageResizer versions prior to {details.SubscriptionExpirationDate?.ToString("D")}' but you are using a build dated {GetBuildDate()?.ToString("D")}"'" is 179.
Long Statement,ImageResizer.Plugins.LicenseVerifier,Computation,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,IsLicenseValid,The length of the statement  "                permanentIssues.AcceptIssue(new Issue($"License {details.Id}" + (message != null ? $": {message}" : " is no longer valid")'" is 123.
Long Statement,ImageResizer.Plugins.LicenseVerifier,Computation,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,GetGracePeriodFor,The length of the statement  "                    $"License {chain.Id} was not found in the disk cache and could not be retrieved from the remote server within {graceMinutes} minutes."'" is 135.
Long Statement,ImageResizer.Plugins.LicenseVerifier,Computation,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,SalesMessage,The length of the statement  "                return "Need to change domains? Get a discounted upgrade to a floating license: https://imageresizing.net/licenses/convert";" is 124.
Long Statement,ImageResizer.Plugins.LicenseVerifier,Computation,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,SalesMessage,The length of the statement  "A universal license key would fix that. See if your purchase is eligible for a free key: https://imageresizing.net/licenses/convert";" is 133.
Long Statement,ImageResizer.Plugins.LicenseVerifier,DomainLookup,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\DomainLookup.cs,GetDomainMappings,The length of the statement  "                        $"You have mapped {from} to {to}. {to} is not one of the known domains: {string.Join(" "' knownDomains.OrderBy(s => s))}"'" is 122.
Long Statement,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Test_Generic,The length of the statement  "                "28178177427582259905122756905913963624440517746414712044433894631438407111916149031583287058323879921298234454158166031934230083094710974550125942791690254427377300877691173542319534371793100994953897137837772694304619234054383162641475011138179669415510521009673718000682851222831185756777382795378538121010194881849505437499638792289283538921706236004391184253166867653735050981736002298838523242717690667046044130539971131293603078008447972889271580670305162199959939004819206804246872436611558871928921860176200657026263241409488257640191893499783065332541392967986495144643652353104461436623253327708136399114561");" is 621.
Long Statement,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Test_Generic,The length of the statement  "                "localhost:RG9tYWluOiBsb2NhbGhvc3QKT3duZXI6IEV2ZXJ5b25lCklzc3VlZDogMjAxNS0wMy0yOFQwOTozNjo1OVoKRmVhdHVyZXM6IFI0RWxpdGUgUjRDcmVhdGl2ZSBSNFBlcmZvcm1hbmNlCg==:h6D+kIXbF3qmvmW2gDpb+b4gdxBjnrkZLvSzXmEnqKAywNJNpTdFekpTOB4SwU14WbTeVyWwvFngHax7WuHBV+0WkQ5lDqKFaRW32vj8CJQeG8Wvnyj9PaNGaS/FpKhNjZbDEmh3qqirBp2NR0bpN4QbhP9NMy7+rOMo0nynAruwWvJKCnuf7mWWdb9a5uTZO9OUcSeS/tY8QaNeIhaCnhPe0Yx9qvOXe5nMnl10CR9ur+EtS54d1qzBGHqN/3oFhiB+xlqNELwz23qR4c8HxbTEyNarkG4CZx8CbbgJfHmPxAYGJTTBTPJ+cdah8MJR16Ta36cRZ2Buy8XYo/nf1g==";" is 502.
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseChain,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseChain.cs,GetLicenseServers,The following statement contains a magic number: return newList.Concat(oldStack.Except(newList)).Take(10).ToArray();
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseChain,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseChain.cs,GetReportPairs,The following statement contains a magic number: var firstHearbeat = (long)(parent.FirstHeartbeat.GetValueOrDefault() -                                         new DateTimeOffset(1970' 1' 1' 0' 0' 0' 0' TimeSpan.Zero)).TotalSeconds;
Magic Number,ImageResizer.Plugins.LicenseVerifier,Computation,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\Computation.cs,GetGracePeriodFor,The following statement contains a magic number: var thirtySeconds = mgr.FirstHeartbeat.Value.AddSeconds(30);
Magic Number,ImageResizer.Plugins.LicenseVerifier,DomainLookup,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\DomainLookup.cs,DomainLookup,The following statement contains a magic number: suffixSearchList = knownDomains.Select(known =>                                            {                                                var d = known.TrimStart('.');                                                d = d.StartsWith("www.") ? d.Substring(4) : d;                                                return new KeyValuePair<string' string>("." + d' known);                                            })                                            .ToList();
Magic Number,ImageResizer.Plugins.LicenseVerifier,DomainLookup,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\DomainLookup.cs,ExplainNormalizations,The following statement contains a magic number: return LookupTableSize > 0                 ? $"The domain lookup table has {LookupTableSize} elements. Displaying {Math.Min(200' LookupTableSize)}:\n" +                    lookupTable.OrderByDescending(p => p.Value)                                                .Take(200)                                                .Select(pair => pair.Key == pair.Value ? pair.Key : $"{pair.Key} => {pair.Value}").Delimited("' ") +                   "\n"                 : "";
Magic Number,ImageResizer.Plugins.LicenseVerifier,DomainLookup,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\DomainLookup.cs,ExplainNormalizations,The following statement contains a magic number: return LookupTableSize > 0                 ? $"The domain lookup table has {LookupTableSize} elements. Displaying {Math.Min(200' LookupTableSize)}:\n" +                    lookupTable.OrderByDescending(p => p.Value)                                                .Take(200)                                                .Select(pair => pair.Key == pair.Value ? pair.Key : $"{pair.Key} => {pair.Value}").Delimited("' ") +                   "\n"                 : "";
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,AdjustErrorDebounce,The following statement contains a magic number: error.IntervalTicks += (long) Math.Round(new Random().NextDouble() * clock.TicksPerSecond / 2.0);
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseFetcher,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseFetcher.cs,ConstructQuerystring,The following statement contains a magic number: return query.ToQueryString(7000);
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseManagerSingleton,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseManager.cs,AllowFetching,The following statement contains a magic number: oldestWrite.HasValue && now.Subtract(oldestWrite.Value) < TimeSpan.FromMinutes(60)
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseBlob,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Deserialize,The following statement contains a magic number: parts.Count < 2
Magic Number,ImageResizer.Plugins.LicenseVerifier,LicenseBlob,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Deserialize,The following statement contains a magic number: var dataBytes = Convert.FromBase64String(parts[parts.Count - 2]);
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: var debug = args.ElementAtOrDefault(2) == "-d";
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: exitCode = Test_Generic(log) ? 0 : 4;
Magic Number,ImageResizer.Plugins.LicenseVerifier,SignatureTestApp,D:\research\architectureSmells\repos\imazen_resizer\Plugins\LicenseVerifier\LicenseParsing.cs,Main,The following statement contains a magic number: exitCode = 2 ^ exitCode;
