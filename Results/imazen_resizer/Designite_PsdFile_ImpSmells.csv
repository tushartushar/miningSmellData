Implementation smell,Namespace,Class,File,Method,Description
Long Method,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The method has 214 lines of code.
Complex Method,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,Cyclomatic complexity of the method is 8
Complex Method,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,Cyclomatic complexity of the method is 10
Complex Method,PhotoshopFile,Mask,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,Cyclomatic complexity of the method is 9
Complex Method,PhotoshopFile,WaitableCounter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PrivateThreadPool.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadLayers,Cyclomatic complexity of the method is 9
Complex Method,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadImage,Cyclomatic complexity of the method is 8
Complex Method,PhotoshopFile,RlePacketStateMachine,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,PushRow,Cyclomatic complexity of the method is 9
Complex Method,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,parseTypeString,Cyclomatic complexity of the method is 14
Complex Method,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,ReadValue,Cyclomatic complexity of the method is 11
Complex Method,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,Cyclomatic complexity of the method is 30
Complex Method,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,Cyclomatic complexity of the method is 21
Long Statement,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,getString,The length of the statement  "            string s = lineprefix +  "(" + this.Type.ToString()  + ") "+ this.Name + ":" + ((this.Value == null) ? "null" : this.Value.ToString());" is 135.
Long Statement,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,getColor,The length of the statement  "            return Color.FromArgb((int)((double)values[0] * 255)'(int)((double)values[1] * 255)'(int)((double)values[2] * 255)'(int)( (double)values[3] * 255));" is 148.
Long Statement,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The length of the statement  "                return ((Dictionary<string' object>)tree).ContainsKey(key) ? query(((Dictionary<string'object>)tree)[key]' selector.Substring(m.Length)) : false;" is 145.
Long Statement,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The length of the statement  "                throw new Exception("Failed to find Byte Order mark in string! :" + System.Text.UTF8Encoding.BigEndianUnicode.GetString(b));" is 124.
Long Statement,PhotoshopFile.Text,TdTaStylesheetReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaStylesheetReader.cs,BuildRunItem,The length of the statement  "            return TdTaParser.MergeObjects(TdTaParser.getDict(tree' baseSelector + ".DefaultRunData")' TdTaParser.getList(tree' baseSelector + ".RunArray")[index]);" is 152.
Long Statement,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The length of the statement  "                throw new Exception("Old style tySh font syntax not implemented' found on layer " + l.Name + ". Use a newer version of Photoshop");" is 131.
Long Statement,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The length of the statement  "                throw new Exception("Txt2 text layer info not supported' found on layer " + l.Name + ". Where did you find this file? What version of photoshop?");" is 147.
Long Statement,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The length of the statement  "                    fontName = new Regex("\\-(Bold|Italic|BoldItalic)$"' RegexOptions.IgnoreCase | RegexOptions.IgnoreCase).Replace(fontName' "");" is 126.
Long Statement,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The length of the statement  "                    double finalOpacity = (glowOpacity + 1.5)/2.5; //Because Photoshop doesn't actually use the opacity as the final opacity... " is 123.
Long Statement,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The length of the statement  "                        using (Pen pen = new Pen(Color.FromArgb((int)Math.Round(currentOpacity * 255.0)' glowColor)' (float)((glowWidth - fadeWidth + (double)i) * 2)))" is 143.
Long Statement,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,The length of the statement  "                case '(': return new Token(parseBinary(r)); //Binary data. Leading and trailing parens are stripped' and escaped parens are restored to normal." is 143.
Complex Conditional,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetMaskValue,The conditional expression  "y >= 0 && y < mask.Rect.Height &&            x >= 0 && x < mask.Rect.Width"  is complex.
Complex Conditional,PhotoshopFile,ReadableBinary,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\ReadableBinary.cs,CreateHexEditorString,The conditional expression  "((((num3 >= 0x20) && (num3 <= 0x7e)) || (num3 >= 160)) && ((num3 != 60) && (num3 != 0x3e))) && (num3 != 0x26)"  is complex.
Complex Conditional,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,copy,The conditional expression  "o is double || o is string || o is int || o is bool"  is complex.
Complex Conditional,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,The conditional expression  "Char.IsWhiteSpace(pc) || pc == '\n' || pc=='[' || pc==']' || pc=='<' || pc=='>'"  is complex.
Complex Conditional,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,The conditional expression  "Char.IsWhiteSpace(pc) || pc == '\n' || pc ==']' || pc =='>'"  is complex.
Complex Conditional,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,The conditional expression  "c == 't' || c == 'T' || c == 'f' || c == 'F'"  is complex.
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadInt16,The following statement contains a magic number: this.SwapBytes((byte*)&val' 2);
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadDouble,The following statement contains a magic number: SwapBytes((byte*)&val' 8);
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadInt32,The following statement contains a magic number: this.SwapBytes((byte*)&val' 4);
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadInt64,The following statement contains a magic number: this.SwapBytes((byte*)&val' 8);
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadUInt16,The following statement contains a magic number: this.SwapBytes((byte*)&val' 2);
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadUInt32,The following statement contains a magic number: this.SwapBytes((byte*)&val' 4);
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadUInt64,The following statement contains a magic number: this.SwapBytes((byte*)&val' 8);
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadPascalString,The following statement contains a magic number: (stringLength % 2) == 0
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadPSDUnicodeString,The following statement contains a magic number: i % 2 == 1 && c != 0
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadPSDUnicodeString,The following statement contains a magic number: i < nLength * 2
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadTdTaString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(4096);
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadTdTaString,The following statement contains a magic number: c == '>' && sb[sb.Length - 2] == '>' && sb[sb.Length - 3] == '\n'
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadTdTaString,The following statement contains a magic number: c == '>' && sb[sb.Length - 2] == '>' && sb[sb.Length - 3] == '\n'
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadPSDColor,The following statement contains a magic number: a = 255;
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,ReadPSDColor,The following statement contains a magic number: bits == 8
Magic Number,PhotoshopFile,BinaryReverseReader,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,SwapBytes,The following statement contains a magic number: i < nLength / 2
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,WritePascalString,The following statement contains a magic number: c = s.Substring(0' 255).ToCharArray();
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,WritePascalString,The following statement contains a magic number: s.Length > 255
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,WritePascalString,The following statement contains a magic number: (realLength % 2) == 0
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,WritePascalString,The following statement contains a magic number: i < (2 - (realLength % 2))
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,WritePascalString,The following statement contains a magic number: i < (2 - (realLength % 2))
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,Write,The following statement contains a magic number: this.SwapBytes((byte*)&val' 2);
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,Write,The following statement contains a magic number: this.SwapBytes((byte*)&val' 4);
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,Write,The following statement contains a magic number: this.SwapBytes((byte*)&val' 8);
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,Write,The following statement contains a magic number: this.SwapBytes((byte*)&val' 2);
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,Write,The following statement contains a magic number: this.SwapBytes((byte*)&val' 4);
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,Write,The following statement contains a magic number: this.SwapBytes((byte*)&val' 8);
Magic Number,PhotoshopFile,BinaryReverseWriter,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\BinaryReverseReader.cs,SwapBytes,The following statement contains a magic number: i < nLength / 2
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,BytesFromBits,The following statement contains a magic number: return (bits + 7) / 8;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,BytesFromBits,The following statement contains a magic number: return (bits + 7) / 8;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetBitmapValue,The following statement contains a magic number: byte mask = (byte)(0x80 >> (pos % 8));
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetBitmapValue,The following statement contains a magic number: byte bwValue = (byte)(bitmap[pos / 8] & mask);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetBitmapValue,The following statement contains a magic number: bwValue = (bwValue == 0) ? (byte)255 : (byte)0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,DecodeImage,The following statement contains a magic number: pCurrPixel->Alpha = 255;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,DecodeImage,The following statement contains a magic number: pCurrPixel->Alpha = (byte)((pCurrPixel->Alpha * GetMaskValue(layer.MaskData' x' y)) / 255);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (layer.colorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(layer.ch0bytes[pos]'                              layer.ch1bytes[pos]'                              layer.ch2bytes[pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(layer.ch0bytes[pos]'                         layer.ch1bytes[pos]'                         layer.ch2bytes[pos]'                         layer.ch3bytes[pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(layer.ch0bytes[pos]'                         layer.ch1bytes[pos]'                         layer.ch2bytes[pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(layer.ch0bytes' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(layer.ch0bytes[pos]'                              layer.ch0bytes[pos]'                              layer.ch0bytes[pos]);           break;         case PsdFile.ColorModes.Indexed:           {               int index = (int)layer.ch0bytes[pos];             c = Color.FromArgb((int)layer.colorModeData[index]'                              layer.colorModeData[index + 256]'                              layer.colorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {               c = LabToRGB(layer.ch0bytes[pos]'                          layer.ch1bytes[pos]'                          layer.ch2bytes[pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (layer.colorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(layer.ch0bytes[pos]'                              layer.ch1bytes[pos]'                              layer.ch2bytes[pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(layer.ch0bytes[pos]'                         layer.ch1bytes[pos]'                         layer.ch2bytes[pos]'                         layer.ch3bytes[pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(layer.ch0bytes[pos]'                         layer.ch1bytes[pos]'                         layer.ch2bytes[pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(layer.ch0bytes' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(layer.ch0bytes[pos]'                              layer.ch0bytes[pos]'                              layer.ch0bytes[pos]);           break;         case PsdFile.ColorModes.Indexed:           {               int index = (int)layer.ch0bytes[pos];             c = Color.FromArgb((int)layer.colorModeData[index]'                              layer.colorModeData[index + 256]'                              layer.colorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {               c = LabToRGB(layer.ch0bytes[pos]'                          layer.ch1bytes[pos]'                          layer.ch2bytes[pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following statement contains a magic number: switch (layer.colorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(layer.ch0bytes[pos]'                              layer.ch1bytes[pos]'                              layer.ch2bytes[pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(layer.ch0bytes[pos]'                         layer.ch1bytes[pos]'                         layer.ch2bytes[pos]'                         layer.ch3bytes[pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(layer.ch0bytes[pos]'                         layer.ch1bytes[pos]'                         layer.ch2bytes[pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(layer.ch0bytes' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(layer.ch0bytes[pos]'                              layer.ch0bytes[pos]'                              layer.ch0bytes[pos]);           break;         case PsdFile.ColorModes.Indexed:           {               int index = (int)layer.ch0bytes[pos];             c = Color.FromArgb((int)layer.colorModeData[index]'                              layer.colorModeData[index + 256]'                              layer.colorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {               c = LabToRGB(layer.ch0bytes[pos]'                          layer.ch1bytes[pos]'                          layer.ch2bytes[pos]);           }           break;       }
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetMaskValue,The following statement contains a magic number: int c = 255;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,DecodeImage,The following statement contains a magic number: pCurrPixel->Alpha = 255;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: L_coef = 256.0 / 100.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: L_coef = 256.0 / 100.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: a_coef = 256.0 / 256.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: a_coef = 256.0 / 256.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: b_coef = 256.0 / 256.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: b_coef = 256.0 / 256.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: int a = (int)(exA / a_coef - 128.0);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: int b = (int)(exB / b_coef - 128.0);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: const double ref_X = 95.047;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: const double ref_Y = 100.000;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: const double ref_Z = 108.883;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: double var_Y = ((double)L + 16.0) / 116.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: double var_Y = ((double)L + 16.0) / 116.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: double var_X = (double)a / 500.0 + var_Y;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: double var_Z = var_Y - (double)b / 200.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: var_Y = Math.Pow(var_Y' 3);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: Math.Pow(var_Y' 3) > 0.008856
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: Math.Pow(var_Y' 3) > 0.008856
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: var_X = Math.Pow(var_X' 3);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: Math.Pow(var_X' 3) > 0.008856
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: Math.Pow(var_X' 3) > 0.008856
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: var_Z = Math.Pow(var_Z' 3);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: Math.Pow(var_Z' 3) > 0.008856
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LabToRGB,The following statement contains a magic number: Math.Pow(var_Z' 3) > 0.008856
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_X = X / 100.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_Y = Y / 100.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_Z = Z / 100.0;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_R = var_X * 3.2406 + var_Y * (-1.5372) + var_Z * (-0.4986);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_R = var_X * 3.2406 + var_Y * (-1.5372) + var_Z * (-0.4986);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_R = var_X * 3.2406 + var_Y * (-1.5372) + var_Z * (-0.4986);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_G = var_X * (-0.9689) + var_Y * 1.8758 + var_Z * 0.0415;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_G = var_X * (-0.9689) + var_Y * 1.8758 + var_Z * 0.0415;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_G = var_X * (-0.9689) + var_Y * 1.8758 + var_Z * 0.0415;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_B = var_X * 0.0557 + var_Y * (-0.2040) + var_Z * 1.0570;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_B = var_X * 0.0557 + var_Y * (-0.2040) + var_Z * 1.0570;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: double var_B = var_X * 0.0557 + var_Y * (-0.2040) + var_Z * 1.0570;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_R = 1.055 * (Math.Pow(var_R' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_R = 1.055 * (Math.Pow(var_R' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_R = 1.055 * (Math.Pow(var_R' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_R > 0.0031308
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_G = 1.055 * (Math.Pow(var_G' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_G = 1.055 * (Math.Pow(var_G' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_G = 1.055 * (Math.Pow(var_G' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_G > 0.0031308
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_B = 1.055 * (Math.Pow(var_B' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_B = 1.055 * (Math.Pow(var_B' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_B = 1.055 * (Math.Pow(var_B' 1 / 2.4)) - 0.055;
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: var_B > 0.0031308
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: int nRed = (int)(var_R * 256.0);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: int nGreen = (int)(var_G * 256.0);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,XYZToRGB,The following statement contains a magic number: int nBlue = (int)(var_B * 256.0);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,CMYKToRGB,The following statement contains a magic number: double dMaxColours = Math.Pow(2' 8);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,CMYKToRGB,The following statement contains a magic number: double dMaxColours = Math.Pow(2' 8);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,CMYKToRGB,The following statement contains a magic number: int nRed = (int)((1.0 - (C * (1 - K) + K)) * 255);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,CMYKToRGB,The following statement contains a magic number: int nGreen = (int)((1.0 - (M * (1 - K) + K)) * 255);
Magic Number,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,CMYKToRGB,The following statement contains a magic number: int nBlue = (int)((1.0 - (Y * (1 - K) + K)) * 255);
Magic Number,PhotoshopFile,LayerWrapper,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LayerWrapper,The following statement contains a magic number: hasmask = l.SortedChannels.ContainsKey(-2);
Magic Number,PhotoshopFile,LayerWrapper,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LayerWrapper,The following statement contains a magic number: hasch2 = l.SortedChannels.ContainsKey(2);
Magic Number,PhotoshopFile,LayerWrapper,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LayerWrapper,The following statement contains a magic number: hasch3 = l.SortedChannels.ContainsKey(3);
Magic Number,PhotoshopFile,LayerWrapper,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LayerWrapper,The following statement contains a magic number: ch2bytes = l.SortedChannels[2].ImageData;
Magic Number,PhotoshopFile,LayerWrapper,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,LayerWrapper,The following statement contains a magic number: ch3bytes = l.SortedChannels[3].ImageData;
Magic Number,PhotoshopFile,ImageResource,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageResource.cs,ImageResource,The following statement contains a magic number: m_osType = new string(reader.ReadChars(4));
Magic Number,PhotoshopFile,ImageResource,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageResource.cs,ImageResource,The following statement contains a magic number: reader.BaseStream.Position % 2 == 1
Magic Number,PhotoshopFile,ImageResource,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageResource.cs,Save,The following statement contains a magic number: writer.BaseStream.Position % 2 == 1
Magic Number,PhotoshopFile,Thumbnail,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageResources\Thumbnail.cs,Thumbnail,The following statement contains a magic number: this.ID == 1033
Magic Number,PhotoshopFile,Layer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,Layer,The following statement contains a magic number: string signature = new string(reader.ReadChars(4));
Magic Number,PhotoshopFile,Layer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,Layer,The following statement contains a magic number: m_blendModeKey = new string(reader.ReadChars(4));
Magic Number,PhotoshopFile,Layer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,Layer,The following statement contains a magic number: int paddingBytes =(int)((reader.BaseStream.Position - namePosition) % 4);
Magic Number,PhotoshopFile,Layer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,Save,The following statement contains a magic number: int paddingBytes = (int)((writer.BaseStream.Position - namePosition) % 4);
Magic Number,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,Save,The following statement contains a magic number: writer.Write(Data.Length+2);
Magic Number,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               m_bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               m_bytesPerRow = m_layer.m_rect.Width;               break;             case 16:               m_bytesPerRow = m_layer.m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               m_bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               m_bytesPerRow = m_layer.m_rect.Width;               break;             case 16:               m_bytesPerRow = m_layer.m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               m_bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               m_bytesPerRow = m_layer.m_rect.Width;               break;             case 16:               m_bytesPerRow = m_layer.m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,CompressImageData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               bytesPerRow = m_layer.m_rect.Width;               break;             case 16:               bytesPerRow = m_layer.m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,CompressImageData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               bytesPerRow = m_layer.m_rect.Width;               break;             case 16:               bytesPerRow = m_layer.m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,CompressImageData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               bytesPerRow = m_layer.m_rect.Width;               break;             case 16:               bytesPerRow = m_layer.m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,Mask,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,Mask,The following statement contains a magic number: maskLength == 36
Magic Number,PhotoshopFile,Mask,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following statement contains a magic number: m_rect.IsEmpty || m_layer.SortedChannels.ContainsKey(-2) == false
Magic Number,PhotoshopFile,Mask,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following statement contains a magic number: Channel maskChannel = m_layer.SortedChannels[-2];
Magic Number,PhotoshopFile,Mask,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               bytesPerRow = m_rect.Width;               break;             case 16:               bytesPerRow = m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,Mask,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               bytesPerRow = m_rect.Width;               break;             case 16:               bytesPerRow = m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,Mask,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following statement contains a magic number: switch (m_layer.PsdFile.Depth)           {             case 1:               bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               bytesPerRow = m_rect.Width;               break;             case 16:               bytesPerRow = m_rect.Width * 2;               break;           }
Magic Number,PhotoshopFile,AdjustmentLayerInfo,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,AdjustmentLayerInfo,The following statement contains a magic number: string signature = new string(reader.ReadChars(4));
Magic Number,PhotoshopFile,AdjustmentLayerInfo,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,AdjustmentLayerInfo,The following statement contains a magic number: m_key = new string(reader.ReadChars(4));
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadHeader,The following statement contains a magic number: string signature = new string(reader.ReadChars(4));
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadHeader,The following statement contains a magic number: reader.BaseStream.Position += 6;
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadLayers,The following statement contains a magic number: channel.ID != -2
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadLayers,The following statement contains a magic number: reader.BaseStream.Position % 2 == 1
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,SaveLayers,The following statement contains a magic number: writer.BaseStream.Position % 2 == 1
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadImage,The following statement contains a magic number: reader.BaseStream.Position += m_rows * m_channels * 2;
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadImage,The following statement contains a magic number: switch (m_depth)       {         case 1:           bytesPerRow = ImageDecoder.BytesFromBits(m_columns);           break;         case 8:           bytesPerRow = m_columns;           break;         case 16:           bytesPerRow = m_columns * 2;           break;       }
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadImage,The following statement contains a magic number: switch (m_depth)       {         case 1:           bytesPerRow = ImageDecoder.BytesFromBits(m_columns);           break;         case 8:           bytesPerRow = m_columns;           break;         case 16:           bytesPerRow = m_columns * 2;           break;       }
Magic Number,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadImage,The following statement contains a magic number: switch (m_depth)       {         case 1:           bytesPerRow = ImageDecoder.BytesFromBits(m_columns);           break;         case 8:           bytesPerRow = m_columns;           break;         case 16:           bytesPerRow = m_columns * 2;           break;       }
Magic Number,PhotoshopFile,RleHelper,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,DecodedRow,The following statement contains a magic number: len < 128
Magic Number,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,ReadSpecialString,The following statement contains a magic number: length = 4;
Magic Number,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,ReadValue,The following statement contains a magic number: vt.Type = parseTypeString(new string(r.ReadPSDChars(4)));
Magic Number,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,ReadValue,The following statement contains a magic number: switch (vt.Type)             {                 case  OSType.tdta:                                          uint unknown = r.ReadUInt32();                     TdTaParser p = new TdTaParser(r);                     object o = p.ParseOneTree();                     vt.Value = o;                      break;                 case  OSType.Descriptor:                     vt = DynVal.ReadDescriptor(r);                     break;                 case OSType.List:                      vt.Children = ReadValues(r'true);                     break;                 case OSType.Double:                     vt.Value = r.ReadDouble();                     break;                 case OSType.UnitFloat: //Unif float                     //TODO: need a specific type for this' with a double and a type (percent/pixel)?                     string tst = GetMeaningOfFourCC(new string(r.ReadPSDChars(4))); //#Prc #Pxl #Ang = percent / pixels / angle?                     double d = r.ReadDouble();                     tst += ": " + d;                     vt.Value = tst;                     break;                 case OSType.Enumerated:                     string namesp = ReadSpecialString(r);                     string item = ReadSpecialString(r);                     //vt.Value = namesp + "." + item; //TODO: cast to real enum                     vt.Value = GetMeaningOfFourCC(namesp) + "." + GetMeaningOfFourCC(item);                     break;                 case OSType.Integer:                     vt.Value = r.ReadInt32(); //4 byte integer                     break;                 case OSType.Boolean:                     vt.Value = r.ReadBoolean();                     break;                 case  OSType.String:                     vt.Value = r.ReadPSDUnicodeString();                     break;                  default:                     throw new Exception("Unhandled type: " + vt.Type);             }
Magic Number,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,GetMeaningOfFourCC,The following statement contains a magic number: fourCC.Length != 4
Magic Number,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,LoadFourCC,The following statement contains a magic number: string name = items[0].Substring(2);
Magic Number,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,LoadFourCC,The following statement contains a magic number: FourCCs.Add(items[1].PadRight(4' ' ')' name);
Magic Number,PhotoshopFile,ReadableBinary,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\ReadableBinary.cs,CreateHexEditorString,The following statement contains a magic number: ((((num3 >= 0x20) && (num3 <= 0x7e)) || (num3 >= 160)) && ((num3 != 60) && (num3 != 0x3e))) && (num3 != 0x26)
Magic Number,PhotoshopFile,ReadableBinary,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\ReadableBinary.cs,CreateHexEditorString,The following statement contains a magic number: ((((num3 >= 0x20) && (num3 <= 0x7e)) || (num3 >= 160)) && ((num3 != 60) && (num3 != 0x3e))) && (num3 != 0x26)
Magic Number,PhotoshopFile,ReadableBinary,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\ReadableBinary.cs,CreateHexEditorString,The following statement contains a magic number: sbAll.Append(num3.ToString("X"'NumberFormatInfo.InvariantInfo).PadLeft(2' '0') + " ");
Magic Number,PhotoshopFile,ReadableBinary,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\ReadableBinary.cs,CreateHexEditorString,The following statement contains a magic number: (pos % 8) == 0
Magic Number,PhotoshopFile,ReadableBinary,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\ReadableBinary.cs,NewLine,The following statement contains a magic number: sbAll.Append("\r\n" + pos.ToString("X"' NumberFormatInfo.InvariantInfo).PadLeft(4' '0') + ":");
Magic Number,PhotoshopFile.Text,EffectBase,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\EffectBase.cs,ReadBlendKey,The following statement contains a magic number: string blendModeSignature = new string(r.ReadPSDChars(4));
Magic Number,PhotoshopFile.Text,EffectBase,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\EffectBase.cs,ReadBlendKey,The following statement contains a magic number: return new string(r.ReadPSDChars(4));
Magic Number,PhotoshopFile.Text,Effects,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Effects,The following statement contains a magic number: r.BaseStream.Position += 2;
Magic Number,PhotoshopFile.Text,Glow,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Glow,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Blur = (uint)r.ReadUInt16();                     this.Intensity = r.ReadUInt32();                     ushort something = r.ReadUInt16();                     this.Color = r.ReadPSDColor(16' false); //Inner color (no alpha)                      this.BlendModeKey = this.ReadBlendKey(r);                     this.Enabled = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     //TODO!                     if (this.Inner)                         this.Unknown = r.ReadByte();                     this.UnknownColor = r.ReadPSDColor(16' false); //unknown color(no alpha)                     this.Data = r.ReadBytes((int)r.BytesToEnd);                     break;             }
Magic Number,PhotoshopFile.Text,Glow,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Glow,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Blur = (uint)r.ReadUInt16();                     this.Intensity = r.ReadUInt32();                     ushort something = r.ReadUInt16();                     this.Color = r.ReadPSDColor(16' false); //Inner color (no alpha)                      this.BlendModeKey = this.ReadBlendKey(r);                     this.Enabled = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     //TODO!                     if (this.Inner)                         this.Unknown = r.ReadByte();                     this.UnknownColor = r.ReadPSDColor(16' false); //unknown color(no alpha)                     this.Data = r.ReadBytes((int)r.BytesToEnd);                     break;             }
Magic Number,PhotoshopFile.Text,Glow,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Glow,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Blur = (uint)r.ReadUInt16();                     this.Intensity = r.ReadUInt32();                     ushort something = r.ReadUInt16();                     this.Color = r.ReadPSDColor(16' false); //Inner color (no alpha)                      this.BlendModeKey = this.ReadBlendKey(r);                     this.Enabled = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     //TODO!                     if (this.Inner)                         this.Unknown = r.ReadByte();                     this.UnknownColor = r.ReadPSDColor(16' false); //unknown color(no alpha)                     this.Data = r.ReadBytes((int)r.BytesToEnd);                     break;             }
Magic Number,PhotoshopFile.Text,Bevel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Bevel,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Angle = (uint)r.ReadUInt16();                     this.Strength = (uint)r.ReadUInt16();                     this.Blur = (uint)r.ReadUInt16();                      this.Unknown1 = r.ReadByte();                     this.Unknown2 = r.ReadByte();                     this.Unknown3 = r.ReadUInt16();                     this.Unknown4 = r.ReadUInt16();                      this.BlendModeKey = this.ReadBlendKey(r);                     this.ShadowBlendModeKey = this.ReadBlendKey(r);                      this.Color = r.ReadPSDColor(16' true);                     this.ShadowColor = r.ReadPSDColor(16' true);                      this.BevelStyle = r.ReadByte();                     this.Opacity = r.ReadByte();                     this.ShadowOpacity = r.ReadByte();                      this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Inverted = r.ReadBoolean();                      System.Drawing.Color someColor = r.ReadPSDColor(16' true);                     System.Drawing.Color someColor2 = r.ReadPSDColor(16' true);                     break;             }
Magic Number,PhotoshopFile.Text,Bevel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Bevel,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Angle = (uint)r.ReadUInt16();                     this.Strength = (uint)r.ReadUInt16();                     this.Blur = (uint)r.ReadUInt16();                      this.Unknown1 = r.ReadByte();                     this.Unknown2 = r.ReadByte();                     this.Unknown3 = r.ReadUInt16();                     this.Unknown4 = r.ReadUInt16();                      this.BlendModeKey = this.ReadBlendKey(r);                     this.ShadowBlendModeKey = this.ReadBlendKey(r);                      this.Color = r.ReadPSDColor(16' true);                     this.ShadowColor = r.ReadPSDColor(16' true);                      this.BevelStyle = r.ReadByte();                     this.Opacity = r.ReadByte();                     this.ShadowOpacity = r.ReadByte();                      this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Inverted = r.ReadBoolean();                      System.Drawing.Color someColor = r.ReadPSDColor(16' true);                     System.Drawing.Color someColor2 = r.ReadPSDColor(16' true);                     break;             }
Magic Number,PhotoshopFile.Text,Bevel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Bevel,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Angle = (uint)r.ReadUInt16();                     this.Strength = (uint)r.ReadUInt16();                     this.Blur = (uint)r.ReadUInt16();                      this.Unknown1 = r.ReadByte();                     this.Unknown2 = r.ReadByte();                     this.Unknown3 = r.ReadUInt16();                     this.Unknown4 = r.ReadUInt16();                      this.BlendModeKey = this.ReadBlendKey(r);                     this.ShadowBlendModeKey = this.ReadBlendKey(r);                      this.Color = r.ReadPSDColor(16' true);                     this.ShadowColor = r.ReadPSDColor(16' true);                      this.BevelStyle = r.ReadByte();                     this.Opacity = r.ReadByte();                     this.ShadowOpacity = r.ReadByte();                      this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Inverted = r.ReadBoolean();                      System.Drawing.Color someColor = r.ReadPSDColor(16' true);                     System.Drawing.Color someColor2 = r.ReadPSDColor(16' true);                     break;             }
Magic Number,PhotoshopFile.Text,Bevel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Bevel,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Angle = (uint)r.ReadUInt16();                     this.Strength = (uint)r.ReadUInt16();                     this.Blur = (uint)r.ReadUInt16();                      this.Unknown1 = r.ReadByte();                     this.Unknown2 = r.ReadByte();                     this.Unknown3 = r.ReadUInt16();                     this.Unknown4 = r.ReadUInt16();                      this.BlendModeKey = this.ReadBlendKey(r);                     this.ShadowBlendModeKey = this.ReadBlendKey(r);                      this.Color = r.ReadPSDColor(16' true);                     this.ShadowColor = r.ReadPSDColor(16' true);                      this.BevelStyle = r.ReadByte();                     this.Opacity = r.ReadByte();                     this.ShadowOpacity = r.ReadByte();                      this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Inverted = r.ReadBoolean();                      System.Drawing.Color someColor = r.ReadPSDColor(16' true);                     System.Drawing.Color someColor2 = r.ReadPSDColor(16' true);                     break;             }
Magic Number,PhotoshopFile.Text,Bevel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Bevel,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Angle = (uint)r.ReadUInt16();                     this.Strength = (uint)r.ReadUInt16();                     this.Blur = (uint)r.ReadUInt16();                      this.Unknown1 = r.ReadByte();                     this.Unknown2 = r.ReadByte();                     this.Unknown3 = r.ReadUInt16();                     this.Unknown4 = r.ReadUInt16();                      this.BlendModeKey = this.ReadBlendKey(r);                     this.ShadowBlendModeKey = this.ReadBlendKey(r);                      this.Color = r.ReadPSDColor(16' true);                     this.ShadowColor = r.ReadPSDColor(16' true);                      this.BevelStyle = r.ReadByte();                     this.Opacity = r.ReadByte();                     this.ShadowOpacity = r.ReadByte();                      this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Inverted = r.ReadBoolean();                      System.Drawing.Color someColor = r.ReadPSDColor(16' true);                     System.Drawing.Color someColor2 = r.ReadPSDColor(16' true);                     break;             }
Magic Number,PhotoshopFile.Text,Shadow,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Shadow,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Intensity = r.ReadUInt32();                      this.Angle = r.ReadUInt32();                     this.Distance = r.ReadUInt32();                      this.Color = r.ReadPSDColor(16' true);                      this.BlendModeKey = this.ReadBlendKey(r);                     //this.BlendModeSignature = r.ReadUInt32();                     //this.BlendModeKey = r.ReadUInt32();                     this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     break;                  case 2:                     this.Blur = (uint)r.ReadUInt16();                     this.Intensity = r.ReadUInt32();                      this.Angle = r.ReadUInt32();                     this.Distance = r.ReadUInt32();                      ushort something = r.ReadUInt16();//TODO:?                      this.Color = r.ReadPSDColor(16' true);                      this.BlendModeKey = this.ReadBlendKey(r);                     this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     //TODO: 10 unknown bytes!                     break;             }
Magic Number,PhotoshopFile.Text,Shadow,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Shadow,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Intensity = r.ReadUInt32();                      this.Angle = r.ReadUInt32();                     this.Distance = r.ReadUInt32();                      this.Color = r.ReadPSDColor(16' true);                      this.BlendModeKey = this.ReadBlendKey(r);                     //this.BlendModeSignature = r.ReadUInt32();                     //this.BlendModeKey = r.ReadUInt32();                     this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     break;                  case 2:                     this.Blur = (uint)r.ReadUInt16();                     this.Intensity = r.ReadUInt32();                      this.Angle = r.ReadUInt32();                     this.Distance = r.ReadUInt32();                      ushort something = r.ReadUInt16();//TODO:?                      this.Color = r.ReadPSDColor(16' true);                      this.BlendModeKey = this.ReadBlendKey(r);                     this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     //TODO: 10 unknown bytes!                     break;             }
Magic Number,PhotoshopFile.Text,Shadow,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Shadow,The following statement contains a magic number: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Intensity = r.ReadUInt32();                      this.Angle = r.ReadUInt32();                     this.Distance = r.ReadUInt32();                      this.Color = r.ReadPSDColor(16' true);                      this.BlendModeKey = this.ReadBlendKey(r);                     //this.BlendModeSignature = r.ReadUInt32();                     //this.BlendModeKey = r.ReadUInt32();                     this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     break;                  case 2:                     this.Blur = (uint)r.ReadUInt16();                     this.Intensity = r.ReadUInt32();                      this.Angle = r.ReadUInt32();                     this.Distance = r.ReadUInt32();                      ushort something = r.ReadUInt16();//TODO:?                      this.Color = r.ReadPSDColor(16' true);                      this.BlendModeKey = this.ReadBlendKey(r);                     this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     //TODO: 10 unknown bytes!                     break;             }
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,getColor,The following statement contains a magic number: return Color.FromArgb((int)((double)values[0] * 255)'(int)((double)values[1] * 255)'(int)((double)values[2] * 255)'(int)( (double)values[3] * 255));
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,getColor,The following statement contains a magic number: return Color.FromArgb((int)((double)values[0] * 255)'(int)((double)values[1] * 255)'(int)((double)values[2] * 255)'(int)( (double)values[3] * 255));
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,getColor,The following statement contains a magic number: return Color.FromArgb((int)((double)values[0] * 255)'(int)((double)values[1] * 255)'(int)((double)values[2] * 255)'(int)( (double)values[3] * 255));
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,getColor,The following statement contains a magic number: return Color.FromArgb((int)((double)values[0] * 255)'(int)((double)values[1] * 255)'(int)((double)values[2] * 255)'(int)( (double)values[3] * 255));
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,getColor,The following statement contains a magic number: return Color.FromArgb((int)((double)values[0] * 255)'(int)((double)values[1] * 255)'(int)((double)values[2] * 255)'(int)( (double)values[3] * 255));
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,getColor,The following statement contains a magic number: return Color.FromArgb((int)((double)values[0] * 255)'(int)((double)values[1] * 255)'(int)((double)values[2] * 255)'(int)( (double)values[3] * 255));
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The following statement contains a magic number: return System.Text.UTF8Encoding.BigEndianUnicode.GetString(b'2'b.Length -2);
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The following statement contains a magic number: return System.Text.UTF8Encoding.BigEndianUnicode.GetString(b'2'b.Length -2);
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The following statement contains a magic number: b[0] == 254 && b[1] == 255
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The following statement contains a magic number: b[0] == 254 && b[1] == 255
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The following statement contains a magic number: return System.Text.UTF8Encoding.Unicode.GetString(b' 2' b.Length - 2);
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The following statement contains a magic number: return System.Text.UTF8Encoding.Unicode.GetString(b' 2' b.Length - 2);
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The following statement contains a magic number: b[0] == 255 && b[1] == 254
Magic Number,PhotoshopFile.Text,TdTaParser,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TdTaParser.cs,query,The following statement contains a magic number: b[0] == 255 && b[1] == 254
Magic Number,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The following statement contains a magic number: glowOpacity = (double)outerGlow.Opacity / 255.0;
Magic Number,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The following statement contains a magic number: fontName = fontName.Substring(0' fontName.Length - 2);
Magic Number,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The following statement contains a magic number: fontName = fontName.Substring(0' fontName.Length - 2);
Magic Number,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The following statement contains a magic number: glowWidth = 2;
Magic Number,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The following statement contains a magic number: glowWidth == 3
Magic Number,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The following statement contains a magic number: double finalOpacity = (glowOpacity + 1.5)/2.5;
Magic Number,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The following statement contains a magic number: double finalOpacity = (glowOpacity + 1.5)/2.5;
Magic Number,PhotoshopFile.Text,TextLayerRenderer,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TextLayerRenderer.cs,Render,The following statement contains a magic number: int fadeWidth = (int)Math.Floor(glowWidth * 0.33);
Magic Number,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,parseBinary,The following statement contains a magic number: MemoryStream ms = new MemoryStream(128);
Magic Number,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,The following statement contains a magic number: StringBuilder sb = new StringBuilder(40);
Magic Number,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,The following statement contains a magic number: StringBuilder sb = new StringBuilder(40);
Magic Number,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,The following statement contains a magic number: StringBuilder sb = new StringBuilder(40);
Magic Number,PhotoshopFile.Text,TypeTool,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TypeTool.cs,TypeTool,The following statement contains a magic number: Version <= 5
Magic Number,PhotoshopFile.Text,TypeTool,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TypeTool.cs,TypeTool,The following statement contains a magic number: i < 4
Magic Number,PhotoshopFile.Text,TypeToolObject,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\TypeToolObject.cs,TypeToolObject,The following statement contains a magic number: Data.Length != 17 || !(Array.TrueForAll(Data' b => b == 0))
Missing Default,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following switch statement is missing a default case: switch (psdFile.ColorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[1][pos]'                              psdFile.ImageData[2][pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         psdFile.ImageData[3][pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(psdFile.ImageData[0][pos]'                         psdFile.ImageData[1][pos]'                         psdFile.ImageData[2][pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(psdFile.ImageData[0]' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]'                              psdFile.ImageData[0][pos]);           break;         case PsdFile.ColorModes.Indexed:           {             int index = (int)psdFile.ImageData[0][pos];             c = Color.FromArgb((int)psdFile.ColorModeData[index]'                              psdFile.ColorModeData[index + 256]'                              psdFile.ColorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {             c = LabToRGB(psdFile.ImageData[0][pos]'                          psdFile.ImageData[1][pos]'                          psdFile.ImageData[2][pos]);           }           break;       }
Missing Default,PhotoshopFile,ImageDecoder,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\ImageDecoderBitmaps.cs,GetColor,The following switch statement is missing a default case: switch (layer.colorMode)       {         case PsdFile.ColorModes.RGB:           c = Color.FromArgb(layer.ch0bytes[pos]'                              layer.ch1bytes[pos]'                              layer.ch2bytes[pos]);           break;         case PsdFile.ColorModes.CMYK:           c = CMYKToRGB(layer.ch0bytes[pos]'                         layer.ch1bytes[pos]'                         layer.ch2bytes[pos]'                         layer.ch3bytes[pos]);           break;         case PsdFile.ColorModes.Multichannel:           c = CMYKToRGB(layer.ch0bytes[pos]'                         layer.ch1bytes[pos]'                         layer.ch2bytes[pos]'                         0);           break;         case PsdFile.ColorModes.Bitmap:           byte bwValue = ImageDecoder.GetBitmapValue(layer.ch0bytes' pos);           c = Color.FromArgb(bwValue' bwValue' bwValue);           break;         case PsdFile.ColorModes.Grayscale:         case PsdFile.ColorModes.Duotone:           c = Color.FromArgb(layer.ch0bytes[pos]'                              layer.ch0bytes[pos]'                              layer.ch0bytes[pos]);           break;         case PsdFile.ColorModes.Indexed:           {               int index = (int)layer.ch0bytes[pos];             c = Color.FromArgb((int)layer.colorModeData[index]'                              layer.colorModeData[index + 256]'                              layer.colorModeData[index + 2 * 256]);           }           break;         case PsdFile.ColorModes.Lab:           {               c = LabToRGB(layer.ch0bytes[pos]'                          layer.ch1bytes[pos]'                          layer.ch2bytes[pos]);           }           break;       }
Missing Default,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following switch statement is missing a default case: switch (m_layer.PsdFile.Depth)           {             case 1:               m_bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               m_bytesPerRow = m_layer.m_rect.Width;               break;             case 16:               m_bytesPerRow = m_layer.m_rect.Width * 2;               break;           }
Missing Default,PhotoshopFile,Channel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,CompressImageData,The following switch statement is missing a default case: switch (m_layer.PsdFile.Depth)           {             case 1:               bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               bytesPerRow = m_layer.m_rect.Width;               break;             case 16:               bytesPerRow = m_layer.m_rect.Width * 2;               break;           }
Missing Default,PhotoshopFile,Mask,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Layer.cs,LoadPixelData,The following switch statement is missing a default case: switch (m_layer.PsdFile.Depth)           {             case 1:               bytesPerRow = ImageDecoder.BytesFromBits(m_layer.m_rect.Width);               break;             case 8:               bytesPerRow = m_rect.Width;               break;             case 16:               bytesPerRow = m_rect.Width * 2;               break;           }
Missing Default,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadImageResources,The following switch statement is missing a default case: switch (resID)         {           case ResourceIDs.ResolutionInfo:             imgRes = new ResolutionInfo(imgRes);             break;           case ResourceIDs.Thumbnail1:           case ResourceIDs.Thumbnail2:             imgRes = new Thumbnail(imgRes);             break;           case ResourceIDs.AlphaChannelNames:             imgRes = new AlphaChannels(imgRes);             break;         }
Missing Default,PhotoshopFile,PsdFile,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\PsdFile.cs,LoadImage,The following switch statement is missing a default case: switch (m_depth)       {         case 1:           bytesPerRow = ImageDecoder.BytesFromBits(m_columns);           break;         case 8:           bytesPerRow = m_columns;           break;         case 16:           bytesPerRow = m_columns * 2;           break;       }
Missing Default,PhotoshopFile,DynVal,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\DynVal.cs,parseTypeString,The following switch statement is missing a default case: switch (fourCharType)             {                 case "obj ": return OSType.Reference;                 case "Objc": return OSType.Descriptor;                 case "VlLs": return OSType.List;                 case "doub": return OSType.Double;                 case "UntF": return OSType.UnitFloat;                 case "TEXT": return OSType.String;                 case "enum": return OSType.Enumerated;                 case "long": return OSType.Integer;                 case "bool": return OSType.Boolean;                 case "GlbO": return OSType.Descriptor;                 case "type": return OSType.Class;                 case "GlbC": return OSType.Class;                 case "alis": return OSType.Alias;                 case "tdta": return OSType.tdta;             }
Missing Default,PhotoshopFile.Text,Glow,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Glow,The following switch statement is missing a default case: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Blur = (uint)r.ReadUInt16();                     this.Intensity = r.ReadUInt32();                     ushort something = r.ReadUInt16();                     this.Color = r.ReadPSDColor(16' false); //Inner color (no alpha)                      this.BlendModeKey = this.ReadBlendKey(r);                     this.Enabled = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     //TODO!                     if (this.Inner)                         this.Unknown = r.ReadByte();                     this.UnknownColor = r.ReadPSDColor(16' false); //unknown color(no alpha)                     this.Data = r.ReadBytes((int)r.BytesToEnd);                     break;             }
Missing Default,PhotoshopFile.Text,Bevel,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Bevel,The following switch statement is missing a default case: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Data = null;                     break;                 case 2:                     this.Angle = (uint)r.ReadUInt16();                     this.Strength = (uint)r.ReadUInt16();                     this.Blur = (uint)r.ReadUInt16();                      this.Unknown1 = r.ReadByte();                     this.Unknown2 = r.ReadByte();                     this.Unknown3 = r.ReadUInt16();                     this.Unknown4 = r.ReadUInt16();                      this.BlendModeKey = this.ReadBlendKey(r);                     this.ShadowBlendModeKey = this.ReadBlendKey(r);                      this.Color = r.ReadPSDColor(16' true);                     this.ShadowColor = r.ReadPSDColor(16' true);                      this.BevelStyle = r.ReadByte();                     this.Opacity = r.ReadByte();                     this.ShadowOpacity = r.ReadByte();                      this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Inverted = r.ReadBoolean();                      System.Drawing.Color someColor = r.ReadPSDColor(16' true);                     System.Drawing.Color someColor2 = r.ReadPSDColor(16' true);                     break;             }
Missing Default,PhotoshopFile.Text,Shadow,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Effects.cs,Shadow,The following switch statement is missing a default case: switch (version)             {                 case 0:                     this.Blur = r.ReadUInt32();                     this.Intensity = r.ReadUInt32();                      this.Angle = r.ReadUInt32();                     this.Distance = r.ReadUInt32();                      this.Color = r.ReadPSDColor(16' true);                      this.BlendModeKey = this.ReadBlendKey(r);                     //this.BlendModeSignature = r.ReadUInt32();                     //this.BlendModeKey = r.ReadUInt32();                     this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     break;                  case 2:                     this.Blur = (uint)r.ReadUInt16();                     this.Intensity = r.ReadUInt32();                      this.Angle = r.ReadUInt32();                     this.Distance = r.ReadUInt32();                      ushort something = r.ReadUInt16();//TODO:?                      this.Color = r.ReadPSDColor(16' true);                      this.BlendModeKey = this.ReadBlendKey(r);                     this.Enabled = r.ReadBoolean();                     this.UseGlobalAngle = r.ReadBoolean();                     this.Opacity = r.ReadByte();                     //TODO: 10 unknown bytes!                     break;             }
Missing Default,PhotoshopFile.Text,Token,D:\research\architectureSmells\repos\imazen_resizer\Plugins\Libs\PsdPlugin\PsdFile\Text\Token.cs,nextToken,The following switch statement is missing a default case: switch (c)             {                 case '(': return new Token(parseBinary(r)); //Binary data. Leading and trailing parens are stripped' and escaped parens are restored to normal.                 case '[': return new Token(TokenType.StartList' c.ToString()); // [ opening list char                 case ']': return new Token(TokenType.EndList' c.ToString()); //Closing list char             }
