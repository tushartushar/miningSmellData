Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,Execute,The length of the statement  "            //If there are any threads waiting in line' or if the permitted number of CAIR.exe instances has been reached' get in line" is 122.
Long Statement,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,GetVideoInfo,The length of the statement  "            string result = RunExecutable(GetFFprobePath()' " -loglevel error -show_format -print_format xml -i \"" + job.SourcePath + "\""' job.Timeout /2);" is 145.
Long Statement,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,InnerExecute,The length of the statement  "                    string message = RunExecutable(GetFFmpegPath()' " -ss " + job.Seconds.ToString() + " -y -i \"" + job.SourcePath + "\" -an -vframes 1 -r 1 -f image2 -pix_fmt rgb24  \"" + path + "\""' job.Timeout);" is 196.
Long Statement,ImageResizer.Plugins.FFmpeg,FFmpegPlugin,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegPlugin.cs,FileExists,The length of the statement  "            return IsPathVideoFileWithOurCommands(virtualPath' queryString) && c.Pipeline.FileExists(virtualPath' new NameValueCollection());" is 129.
Long Statement,ImageResizer.Plugins.FFmpeg,FFmpegPlugin,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegPlugin.cs,GetFile,The length of the statement  "            if (IsPathVideoFileWithOurCommands(virtualPath' queryString) && c.Pipeline.FileExists(virtualPath' new NameValueCollection()))" is 126.
Magic Number,ImageResizer.Plugins.FFmpeg,FFmpegJob,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegJob.cs,FFmpegJob,The following statement contains a magic number: Timeout = 15000;
Magic Number,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,Execute,The following statement contains a magic number: if (_concurrentWaitingThreads > 0 || (MaxConcurrentExecutions > 0 &&                     _concurrentExecutions > MaxConcurrentExecutions))             {                 try                 {                     Interlocked.Increment(ref _concurrentWaitingThreads);                     //Wait for a free slot                     while (MaxConcurrentExecutions > 0 &&                         _concurrentExecutions > MaxConcurrentExecutions)                     {                         turnstile.WaitOne(1000);                     }                 }                 finally                 {                     Interlocked.Decrement(ref _concurrentWaitingThreads);                 }             }
Magic Number,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,GetVideoInfo,The following statement contains a magic number: string result = RunExecutable(GetFFprobePath()' " -loglevel error -show_format -print_format xml -i \"" + job.SourcePath + "\""' job.Timeout /2);
Magic Number,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,InnerExecute,The following statement contains a magic number: if (job.Seconds == null){                 var xml = GetVideoInfo(job);                 var duration = (double)xml.Descendants("format").FirstOrDefault().Attributes("duration").FirstOrDefault();                 job.Seconds = duration * job.Percent / 100;             }
Magic Number,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,InnerExecute,The following statement contains a magic number: do             {                 if (tries > 4) throw new Exception("Failed to locate a non-blank frame");                                  var path = Path.GetTempFileName();                 byte[] result;                 try{                     string message = RunExecutable(GetFFmpegPath()' " -ss " + job.Seconds.ToString() + " -y -i \"" + job.SourcePath + "\" -an -vframes 1 -r 1 -f image2 -pix_fmt rgb24  \"" + path + "\""' job.Timeout);                      if (message.Contains("Output file is empty' nothing was encoded"))                     {                         throw new Exception("You are outside the bounds of the video");                     }                     result = File.ReadAllBytes(path);                     job.Result = new MemoryStream(result);                 }finally{                     File.Delete(path);                 }                 failedTest = (job.SkipBlankFrames == true && IsBlank(result'10));                 if (failedTest) job.Seconds += job.IncrementWhenBlank ?? 5;                 tries++;              } while (failedTest);
Magic Number,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,InnerExecute,The following statement contains a magic number: do             {                 if (tries > 4) throw new Exception("Failed to locate a non-blank frame");                                  var path = Path.GetTempFileName();                 byte[] result;                 try{                     string message = RunExecutable(GetFFmpegPath()' " -ss " + job.Seconds.ToString() + " -y -i \"" + job.SourcePath + "\" -an -vframes 1 -r 1 -f image2 -pix_fmt rgb24  \"" + path + "\""' job.Timeout);                      if (message.Contains("Output file is empty' nothing was encoded"))                     {                         throw new Exception("You are outside the bounds of the video");                     }                     result = File.ReadAllBytes(path);                     job.Result = new MemoryStream(result);                 }finally{                     File.Delete(path);                 }                 failedTest = (job.SkipBlankFrames == true && IsBlank(result'10));                 if (failedTest) job.Seconds += job.IncrementWhenBlank ?? 5;                 tries++;              } while (failedTest);
Magic Number,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,InnerExecute,The following statement contains a magic number: do             {                 if (tries > 4) throw new Exception("Failed to locate a non-blank frame");                                  var path = Path.GetTempFileName();                 byte[] result;                 try{                     string message = RunExecutable(GetFFmpegPath()' " -ss " + job.Seconds.ToString() + " -y -i \"" + job.SourcePath + "\" -an -vframes 1 -r 1 -f image2 -pix_fmt rgb24  \"" + path + "\""' job.Timeout);                      if (message.Contains("Output file is empty' nothing was encoded"))                     {                         throw new Exception("You are outside the bounds of the video");                     }                     result = File.ReadAllBytes(path);                     job.Result = new MemoryStream(result);                 }finally{                     File.Delete(path);                 }                 failedTest = (job.SkipBlankFrames == true && IsBlank(result'10));                 if (failedTest) job.Seconds += job.IncrementWhenBlank ?? 5;                 tries++;              } while (failedTest);
Magic Number,ImageResizer.Plugins.FFmpeg,FFmpegManager,C:\repos\imazen_resizer\Plugins\FFmpeg\FFmpegManager.cs,IsBlank,The following statement contains a magic number: using (var b = new Bitmap(ms))             {                 using (var gray = Grayscale.CommonAlgorithms.BT709.Apply(b))                 {                     new SobelEdgeDetector().ApplyInPlace(gray);                     var p = new SimplePosterization(SimplePosterization.PosterizationFillingType.Average);                     p.PosterizationInterval = 128;                     p.ApplyInPlace(gray);                     return gray.GetPixel(0' 0).R < threshold;                 }                                                  }
