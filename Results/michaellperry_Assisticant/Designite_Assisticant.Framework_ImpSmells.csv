Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Assisticant.Metas,BindingListSlot,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\BindingListSlot.cs,PublishChanges,Cyclomatic complexity of the method is 8
Complex Method,Assisticant.Metas,CollectionSlot,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\CollectionSlot.cs,PublishChanges,Cyclomatic complexity of the method is 8
Complex Method,Assisticant.Metas,ViewModelTypes,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\ViewModelTypes.cs,IsViewModelUncached,Cyclomatic complexity of the method is 8
Complex Method,Assisticant.Timers,FloatingTimeZone,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Timers\FloatingTimeZone.cs,ScheduleNext,Cyclomatic complexity of the method is 8
Long Statement,Assisticant.Metas,BindingListSlot,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\BindingListSlot.cs,SetValue,The length of the statement  "                _translateIncomingList = (Func<IEnumerable' IEnumerable>)mi.CreateDelegatePortable(typeof(Func<IEnumerable' IEnumerable>)' this); " is 129.
Long Statement,Assisticant.Metas,BindingListSlot,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\BindingListSlot.cs,GetElementType,The length of the statement  "                .FirstOrDefault(i => i.IsGenericTypePortable() && i.GetGenericTypeDefinition() == typeof(IEnumerable<>)) ?? typeof(IEnumerable<object>)) " is 136.
Long Statement,Assisticant.Metas,CollectionSlot,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\CollectionSlot.cs,SetValue,The length of the statement  "                    .FirstOrDefault(i => i.IsGenericTypePortable() && i.GetGenericTypeDefinition() == typeof(IEnumerable<>)) ?? typeof(IEnumerable<object>)) " is 136.
Long Statement,Assisticant.Metas,CollectionSlot,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\CollectionSlot.cs,SetValue,The length of the statement  "                _translateIncomingList = (Func<IEnumerable' IEnumerable>)mi.CreateDelegatePortable(typeof(Func<IEnumerable' IEnumerable>)' this); " is 129.
Long Statement,Assisticant.Metas,CommandMeta,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\CommandMeta.cs,GetAll,The length of the statement  "                   where method.IsPublic && !method.IsStatic && !method.IsSpecialName && method.ReturnType == typeof(void) && method.GetParameters().Length <= 1 " is 141.
Long Statement,Assisticant.Metas,ValuePropertyMeta,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\ValuePropertyMeta.cs,UnwrapObservableType,The length of the statement  "            for (Type ancestor = observable; ancestor != typeof(object) && ancestor != null; ancestor = ancestor.BaseTypePortable()) " is 120.
Long Statement,Assisticant.Metas,ViewModelTypes,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\ViewModelTypes.cs,IsViewModelUncached,The length of the statement  "            if (type.IsClassPortable() && type != typeof(object) && (type.FullName.StartsWith("System.") || type.FullName.StartsWith("Windows."))) " is 134.
Complex Conditional,Assisticant.Metas,ViewModelTypes,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\ViewModelTypes.cs,IsViewModelUncached,The conditional expression  "type.IsClassPortable() && type != typeof(object) && (type.FullName.StartsWith("System.") || type.FullName.StartsWith("Windows."))"  is complex.
Virtual Method Call from Constructor,Assisticant.Metas,MemberSlot,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\MemberSlot.cs,MemberSlot,The constructor "MemberSlot" calls a virtual method "UpdateValue".
Virtual Method Call from Constructor,Assisticant.Metas,MethodCommand,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Metas\MethodCommand.cs,MethodCommand,The constructor "MethodCommand" calls a virtual method "GetValue".
Magic Number,Assisticant.Timers,DroppingTimeSpan,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Timers\DroppingTimeSpan.cs,GetHashCode,The following statement contains a magic number: return 31 * _zone.GetHashCode() + _zero.GetHashCode();
Magic Number,Assisticant.Timers,FloatingDateTime,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Timers\FloatingDateTime.cs,GetHashCode,The following statement contains a magic number: return 31 * _zone.GetHashCode() + _delta.GetHashCode();
Magic Number,Assisticant.Timers,FloatingTimeZone,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Timers\FloatingTimeZone.cs,GetTimer,The following statement contains a magic number: 2 * _purgePressure >= _timers.Count
Magic Number,Assisticant.Timers,RisingTimeSpan,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Timers\RisingTimeSpan.cs,GetHashCode,The following statement contains a magic number: return 31 * _zone.GetHashCode() + _zero.GetHashCode();
Magic Number,Assisticant.Timers,UtcTimeZone,D:\research\architectureSmells\repos\michaellperry_Assisticant\Assisticant\Timers\UtcTimeZone.cs,ScheduleTimer,The following statement contains a magic number: _timer.Change(Convert.ToInt32(Math.Max(20' delay.TotalMilliseconds))' -1);
