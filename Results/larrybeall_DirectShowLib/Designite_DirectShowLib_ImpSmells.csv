Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DirectShowLib.MultimediaStreaming,MsError,C:\repos\larrybeall_DirectShowLib\DirectShowLib\mmstream.cs,GetErrorText,Cyclomatic complexity of the method is 42
Complex Method,DirectShowLib.DES,DESError,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DES.cs,GetErrorText,Cyclomatic complexity of the method is 21
Complex Method,DirectShowLib.DMO,DMOError,C:\repos\larrybeall_DirectShowLib\DirectShowLib\MediaObj.cs,GetErrorText,Cyclomatic complexity of the method is 21
Long Parameter List,DirectShowLib.MultimediaStreaming,IAMMediaTypeStream,C:\repos\larrybeall_DirectShowLib\DirectShowLib\amstream.cs,CreateSample,The method has 5 parameters.
Long Parameter List,DirectShowLib,IKsPropertySet,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,Set,The method has 6 parameters.
Long Parameter List,DirectShowLib,IKsPropertySet,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,Get,The method has 7 parameters.
Long Parameter List,DirectShowLib,IAMVideoControl,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,GetFrameRateList,The method has 5 parameters.
Long Parameter List,DirectShowLib,IAMVideoProcAmp,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,GetRange,The method has 6 parameters.
Long Parameter List,DirectShowLib,IAMVideoCompression,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,GetInfo,The method has 8 parameters.
Long Parameter List,DirectShowLib,ICaptureGraphBuilder2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,FindInterface,The method has 5 parameters.
Long Parameter List,DirectShowLib,ICaptureGraphBuilder2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,RenderStream,The method has 5 parameters.
Long Parameter List,DirectShowLib,ICaptureGraphBuilder2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,ControlStream,The method has 7 parameters.
Long Parameter List,DirectShowLib,ICaptureGraphBuilder2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,FindPin,The method has 7 parameters.
Long Parameter List,DirectShowLib,IDVEnc,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,get_IFormatResolution,The method has 5 parameters.
Long Parameter List,DirectShowLib,IDVEnc,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,put_IFormatResolution,The method has 5 parameters.
Long Parameter List,DirectShowLib,IAMStreamSelect,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,Info,The method has 8 parameters.
Long Parameter List,DirectShowLib,IFilterMapper2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,RegisterFilter,The method has 6 parameters.
Long Parameter List,DirectShowLib,IFilterMapper2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,EnumMatchingFilters,The method has 15 parameters.
Long Parameter List,DirectShowLib,IFilterMapper3,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,RegisterFilter,The method has 6 parameters.
Long Parameter List,DirectShowLib,IFilterMapper3,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,EnumMatchingFilters,The method has 15 parameters.
Long Parameter List,DirectShowLib,IAMCameraControl,C:\repos\larrybeall_DirectShowLib\DirectShowLib\AXExtend.cs,GetRange,The method has 6 parameters.
Long Parameter List,DirectShowLib,IAMStats,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Control.cs,GetValueByIndex,The method has 8 parameters.
Long Parameter List,DirectShowLib,IAMStats,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Control.cs,GetValueByName,The method has 8 parameters.
Long Parameter List,DirectShowLib,IQueueCommand,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Control.cs,InvokeAtStreamTime,The method has 9 parameters.
Long Parameter List,DirectShowLib,IQueueCommand,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Control.cs,InvokeAtPresentationTime,The method has 9 parameters.
Long Parameter List,DirectShowLib,IGraphConfig,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DynGraph.cs,Reconnect,The method has 6 parameters.
Long Parameter List,DirectShowLib,IMpeg2Data,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Mpeg2Data.cs,GetSection,The method has 5 parameters.
Long Parameter List,DirectShowLib,IMpeg2Data,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Mpeg2Data.cs,GetTable,The method has 5 parameters.
Long Parameter List,DirectShowLib,IMpeg2Data,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Mpeg2Data.cs,GetStreamOfSections,The method has 5 parameters.
Long Parameter List,DirectShowLib,IMpeg2Stream,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Mpeg2Data.cs,Initialize,The method has 7 parameters.
Long Parameter List,DirectShowLib,ISectionList,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Mpeg2Data.cs,Initialize,The method has 8 parameters.
Long Parameter List,DirectShowLib,ICreatePropBagOnRegKey,C:\repos\larrybeall_DirectShowLib\DirectShowLib\RegBag.cs,Create,The method has 6 parameters.
Long Parameter List,DirectShowLib,IVMRSurfaceAllocatorEx9,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Vmr9.cs,GetSurfaceEx,The method has 5 parameters.
Long Parameter List,DirectShowLib,IVMRImageCompositor9,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Vmr9.cs,CompositeImage,The method has 8 parameters.
Long Parameter List,DirectShowLib,IVMRImageCompositor,C:\repos\larrybeall_DirectShowLib\DirectShowLib\VmRender.cs,CompositeImage,The method has 8 parameters.
Long Parameter List,DirectShowLib.BDA,IBroadcastEventEx,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Tuner.cs,FireEx,The method has 5 parameters.
Long Parameter List,DirectShowLib.BDA,IEvalRat,C:\repos\larrybeall_DirectShowLib\DirectShowLib\TvRatings.cs,MostRestrictiveRating,The method has 9 parameters.
Long Parameter List,DirectShowLib.DES,IAMErrorLog,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DES.cs,LogError,The method has 5 parameters.
Long Parameter List,DirectShowLib.DES,IMediaDet,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DES.cs,GetBitmapBits,The method has 5 parameters.
Long Parameter List,DirectShowLib.Dvd,IDvdControl2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DVDIf.cs,PlayChaptersAutoStop,The method has 5 parameters.
Long Parameter List,DirectShowLib.Dvd,IDvdControl2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DVDIf.cs,PlayPeriodInTitleAutoStop,The method has 5 parameters.
Long Parameter List,DirectShowLib.Dvd,IDvdInfo2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DVDIf.cs,GetDVDTextStringAsNative,The method has 6 parameters.
Long Parameter List,DirectShowLib.Dvd,IDvdInfo2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DVDIf.cs,GetDVDTextStringAsUnicode,The method has 6 parameters.
Long Parameter List,DirectShowLib.DMO,DMOUtils,C:\repos\larrybeall_DirectShowLib\DirectShowLib\MediaObj.cs,DMOEnum,The method has 7 parameters.
Long Parameter List,DirectShowLib.DMO,DMOUtils,C:\repos\larrybeall_DirectShowLib\DirectShowLib\MediaObj.cs,DMORegister,The method has 8 parameters.
Long Parameter List,DirectShowLib.DMO,DMOUtils,C:\repos\larrybeall_DirectShowLib\DirectShowLib\MediaObj.cs,DMOGetTypes,The method has 7 parameters.
Long Parameter List,DirectShowLib.DMO,IMediaObject,C:\repos\larrybeall_DirectShowLib\DirectShowLib\MediaObj.cs,ProcessInput,The method has 5 parameters.
Long Parameter List,DirectShowLib.SBE,IStreamBufferRecordingAttribute,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,SetAttribute,The method has 5 parameters.
Long Parameter List,DirectShowLib.SBE,IStreamBufferRecordingAttribute,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,GetAttributeByName,The method has 5 parameters.
Long Parameter List,DirectShowLib.SBE,IStreamBufferRecordingAttribute,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,GetAttributeByIndex,The method has 7 parameters.
Long Parameter List,DirectShowLib.SBE,ISBE2GlobalEvent,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,GetEvent,The method has 8 parameters.
Long Parameter List,DirectShowLib.SBE,ISBE2GlobalEvent2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,GetEvent,The method has 8 parameters.
Long Parameter List,DirectShowLib.SBE,ISBE2GlobalEvent2,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,GetEventEx,The method has 9 parameters.
Long Statement,DirectShowLib.MultimediaStreaming,MsError,C:\repos\larrybeall_DirectShowLib\DirectShowLib\mmstream.cs,GetErrorText,The length of the statement  "		sRet = "An IMediaStream object could not be removed from an IMultiMediaStream object because it still contains at least one allocated sample."; " is 143.
Long Statement,DirectShowLib,DsFindPin,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,ByConnectionStatus,The length of the statement  "			if ((hr == 0 && vStat == PinConnectedStatus.Connected) || (hr == DsResults.E_NotConnected && vStat == PinConnectedStatus.Unconnected)) { " is 136.
Long Statement,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,AMMediaTypeToString,The length of the statement  "	return string.Format ("{0} {1} {2} {3} {4} {5}"' MediaTypeToString (pmt.majorType)' MediaSubTypeToString (pmt.subType)' MediaFormatTypeToString (pmt.formatType)' (pmt.fixedSizeSamples ? "FixedSamples" : "NotFixedSamples")' (pmt.temporalCompression ? "temporalCompression" : "NottemporalCompression")' pmt.sampleSize.ToString ()); " is 329.
Long Statement,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The length of the statement  "			dta.MultichannelAudioAttributes [x].Info [y] = (DvdMUAMixingInfo)Marshal.PtrToStructure (pNativeData' typeof(DvdMUAMixingInfo)); " is 128.
Long Statement,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The length of the statement  "		dta.SubpictureAttributes [x] = (DvdSubpictureAttributes)Marshal.PtrToStructure (pNativeData' typeof(DvdSubpictureAttributes)); " is 126.
Long Statement,DirectShowLib,DKAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The length of the statement  "	pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (DvdKaraokeAssignment.GetUnderlyingType (typeof(DvdKaraokeAssignment)))); " is 136.
Long Statement,DirectShowLib,DKAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The length of the statement  "		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (DvdKaraokeContents.GetUnderlyingType (typeof(DvdKaraokeContents)))); " is 132.
Long Statement,DirectShowLib.DMO,DMOError,C:\repos\larrybeall_DirectShowLib\DirectShowLib\MediaObj.cs,GetErrorText,The length of the statement  "		sRet = "Data cannot be accepted on this stream. You might need to process more output data; see IMediaObject::ProcessInput."; " is 125.
Complex Conditional,DirectShowLib,DsFindPin,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,ByConnectionStatus,The conditional expression  "(hr == 0 && vStat == PinConnectedStatus.Connected) || (hr == DsResults.E_NotConnected && vStat == PinConnectedStatus.Unconnected)"  is complex.
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsToString,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MediaSubTypeToString,The following statement contains a magic number: if (s.Length == 36 && s.Substring (8).ToUpper () == "-0000-0010-8000-00AA00389B71") {  	// Parse out the FourCC code  	byte[] asc =  {  		Convert.ToByte (s.Substring (6' 2)' 16)'  		Convert.ToByte (s.Substring (4' 2)' 16)'  		Convert.ToByte (s.Substring (2' 2)' 16)'  		Convert.ToByte (s.Substring (0' 2)' 16)  	};  	s = Encoding.ASCII.GetString (asc);  }  
Magic Number,DirectShowLib,DsMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalManagedToNative,The following statement contains a magic number: for (int x = 0; x < iSize / 4; x++) {  	Marshal.WriteInt32 (p' x * 4' 0);  }  
Magic Number,DirectShowLib,DsMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalManagedToNative,The following statement contains a magic number: for (int x = 0; x < iSize / 4; x++) {  	Marshal.WriteInt32 (p' x * 4' 0);  }  
Magic Number,DirectShowLib,DsMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalManagedToNative,The following statement contains a magic number: Marshal.WriteInt32 (p' x * 4' 0);  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: dta.AudioAttributes = new DvdAudioAttributes[8];  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	// Copy in the value' and advance the pointer  	dta.AudioAttributes [x] = (DvdAudioAttributes)Marshal.PtrToStructure (pNativeData' typeof(DvdAudioAttributes));  	pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdAudioAttributes)));  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: dta.MultichannelAudioAttributes = new DvdMultichannelAudioAttributes[8];  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	// MultichannelAudioAttributes has nested ByValArrays.  They need to be individually copied.  	dta.MultichannelAudioAttributes [x].Info = new DvdMUAMixingInfo[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Info [y] = (DvdMUAMixingInfo)Marshal.PtrToStructure (pNativeData' typeof(DvdMUAMixingInfo));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUAMixingInfo)));  	}  	dta.MultichannelAudioAttributes [x].Coeff = new DvdMUACoeff[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Coeff [y] = (DvdMUACoeff)Marshal.PtrToStructure (pNativeData' typeof(DvdMUACoeff));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUACoeff)));  	}  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	// MultichannelAudioAttributes has nested ByValArrays.  They need to be individually copied.  	dta.MultichannelAudioAttributes [x].Info = new DvdMUAMixingInfo[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Info [y] = (DvdMUAMixingInfo)Marshal.PtrToStructure (pNativeData' typeof(DvdMUAMixingInfo));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUAMixingInfo)));  	}  	dta.MultichannelAudioAttributes [x].Coeff = new DvdMUACoeff[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Coeff [y] = (DvdMUACoeff)Marshal.PtrToStructure (pNativeData' typeof(DvdMUACoeff));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUACoeff)));  	}  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	// MultichannelAudioAttributes has nested ByValArrays.  They need to be individually copied.  	dta.MultichannelAudioAttributes [x].Info = new DvdMUAMixingInfo[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Info [y] = (DvdMUAMixingInfo)Marshal.PtrToStructure (pNativeData' typeof(DvdMUAMixingInfo));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUAMixingInfo)));  	}  	dta.MultichannelAudioAttributes [x].Coeff = new DvdMUACoeff[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Coeff [y] = (DvdMUACoeff)Marshal.PtrToStructure (pNativeData' typeof(DvdMUACoeff));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUACoeff)));  	}  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	// MultichannelAudioAttributes has nested ByValArrays.  They need to be individually copied.  	dta.MultichannelAudioAttributes [x].Info = new DvdMUAMixingInfo[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Info [y] = (DvdMUAMixingInfo)Marshal.PtrToStructure (pNativeData' typeof(DvdMUAMixingInfo));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUAMixingInfo)));  	}  	dta.MultichannelAudioAttributes [x].Coeff = new DvdMUACoeff[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Coeff [y] = (DvdMUACoeff)Marshal.PtrToStructure (pNativeData' typeof(DvdMUACoeff));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUACoeff)));  	}  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	// MultichannelAudioAttributes has nested ByValArrays.  They need to be individually copied.  	dta.MultichannelAudioAttributes [x].Info = new DvdMUAMixingInfo[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Info [y] = (DvdMUAMixingInfo)Marshal.PtrToStructure (pNativeData' typeof(DvdMUAMixingInfo));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUAMixingInfo)));  	}  	dta.MultichannelAudioAttributes [x].Coeff = new DvdMUACoeff[8];  	for (int y = 0; y < 8; y++) {  		// Copy in the value' and advance the pointer  		dta.MultichannelAudioAttributes [x].Coeff [y] = (DvdMUACoeff)Marshal.PtrToStructure (pNativeData' typeof(DvdMUACoeff));  		pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUACoeff)));  	}  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: dta.MultichannelAudioAttributes [x].Info = new DvdMUAMixingInfo[8];  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	// Copy in the value' and advance the pointer  	dta.MultichannelAudioAttributes [x].Info [y] = (DvdMUAMixingInfo)Marshal.PtrToStructure (pNativeData' typeof(DvdMUAMixingInfo));  	pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUAMixingInfo)));  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: dta.MultichannelAudioAttributes [x].Coeff = new DvdMUACoeff[8];  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int y = 0; y < 8; y++) {  	// Copy in the value' and advance the pointer  	dta.MultichannelAudioAttributes [x].Coeff [y] = (DvdMUACoeff)Marshal.PtrToStructure (pNativeData' typeof(DvdMUACoeff));  	pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdMUACoeff)));  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: pNativeData = (IntPtr)(pNativeData.ToInt64 () + 4);  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: dta.SubpictureAttributes = new DvdSubpictureAttributes[32];  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int x = 0; x < 32; x++) {  	// Copy in the value' and advance the pointer  	dta.SubpictureAttributes [x] = (DvdSubpictureAttributes)Marshal.PtrToStructure (pNativeData' typeof(DvdSubpictureAttributes));  	pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (typeof(DvdSubpictureAttributes)));  }  
Magic Number,DirectShowLib,DTAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,GetNativeDataSize,The following statement contains a magic number: return 3208;  
Magic Number,DirectShowLib,DKAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: pNativeData = (IntPtr)(pNativeData.ToInt64 () + 3);  
Magic Number,DirectShowLib,DKAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: dka.wChannelContents = new DvdKaraokeContents[8];  
Magic Number,DirectShowLib,DKAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,MarshalNativeToManaged,The following statement contains a magic number: for (int x = 0; x < 8; x++) {  	// Copy in the value' and advance the pointer  	dka.wChannelContents [x] = (DvdKaraokeContents)Marshal.ReadInt16 (pNativeData);  	pNativeData = (IntPtr)(pNativeData.ToInt64 () + Marshal.SizeOf (DvdKaraokeContents.GetUnderlyingType (typeof(DvdKaraokeContents))));  }  
Magic Number,DirectShowLib,DKAMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\DsUtils.cs,GetNativeDataSize,The following statement contains a magic number: return 32;  
Magic Number,DirectShowLib.SBE,SDMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,MarshalManagedToNative,The following statement contains a magic number: for (int x = 0; x < iSize / 8; x++) {  	Marshal.WriteInt64 (ip' x * 8' 0);  }  
Magic Number,DirectShowLib.SBE,SDMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,MarshalManagedToNative,The following statement contains a magic number: for (int x = 0; x < iSize / 8; x++) {  	Marshal.WriteInt64 (ip' x * 8' 0);  }  
Magic Number,DirectShowLib.SBE,SDMarshaler,C:\repos\larrybeall_DirectShowLib\DirectShowLib\Sbe.cs,MarshalManagedToNative,The following statement contains a magic number: Marshal.WriteInt64 (ip' x * 8' 0);  
