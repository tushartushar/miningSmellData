Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,DotNetClientTest,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\DotNetClientTest.cs,ConfigureCollection,The length of the statement  "                    mock.Setup(x => x.InvokeAsync(It.IsAny<string>()' It.IsAny<object[]>()' It.IsAny<CancellationToken>())).Callback((string method' object[] args' CancellationToken token) => " is 171.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,DotNetClientTest,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\DotNetClientTest.cs,ConfigureCollection,The length of the statement  "                .MockSingleton<IHubProxyFactory>(mock => mock.Setup(x => x.Create(It.IsAny<string>()' It.IsAny<Action<HubConnection>>()' It.IsAny<Func<IHub' Task>>()' It.IsAny<Func<Task>>()' It.IsAny<Action<Exception>>()' It.IsAny<Action>())) " is 226.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,DotNetClientTest,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\DotNetClientTest.cs,ConfigureCollection,The length of the statement  "                .Callback((string url' Action<HubConnection> configure' Func<IHub' Task> onstarted' Func<Task> onreconnected' Action<Exception> faulted' Action connected) => " is 157.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The length of the statement  "            var removeSubscriber = new Mock<IHandle<NoneConstraintEvent>>().As<IHandle<GenericEvent<string>>>().As<IHandle<StandardEvent>>().Object; ; " is 138.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The length of the statement  "            var subscriberOne = new Mock<IHandle<NoneConstraintEvent>>().As<IHandle<GenericEvent<int>>>().As<IHandle<StandardEvent>>().Object; " is 130.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The length of the statement  "            var subscriberTwo = new Mock<IHandle<NoneConstraintEvent>>().As<IHandle<GenericEvent<int>>>().As<IHandle<StandardEvent>>().Object; " is 130.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The length of the statement  "            EventAggregator.Subscribe(removeSubscriber' builder => builder.Add<StandardEvent' StandardEventConstraint>(new StandardEventConstraint { Id = 2 })); " is 148.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The length of the statement  "            EventAggregator.Subscribe(subscriberOne' builder => builder.Add<StandardEvent' StandardEventConstraint>(new StandardEventConstraint { Id = 1 })); " is 145.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The length of the statement  "            EventAggregator.Subscribe(subscriberTwo' builder => builder.Add<StandardEvent' StandardEventConstraint>(new StandardEventConstraint { Id = 1 })); " is 145.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The length of the statement  "            EventAggregator.Subscribe(thirdConstraintSubscriber' builder => builder.Add<StandardEvent' StandardEventConstraint>(new StandardEventConstraint { Id = 3 })); " is 157.
Long Statement,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_doing_concurrent_operations_on_subscription_queue,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\SubscriptionTest.cs,Context,The length of the statement  "                .ForEach(i => FailIfThreadCrashes(() => Get<EventProxy>().Subscribe(new[] { new Subscription(typeof(StandardEvent)' null' null) }))); " is 133.
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The following statement contains a magic number: EventAggregator.Subscribe(removeSubscriber' builder => builder.Add<StandardEvent' StandardEventConstraint>(new StandardEventConstraint { Id = 2 }));
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,Context,The following statement contains a magic number: EventAggregator.Subscribe(thirdConstraintSubscriber' builder => builder.Add<StandardEvent' StandardEventConstraint>(new StandardEventConstraint { Id = 3 }));
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,It_should_resubscribe_correctly,The following statement contains a magic number: Assert.AreEqual(4' subscriptionCount);
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_a_client_is_reconnected,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\ReconnectTest.cs,It_should_resubscribe_correctly,The following statement contains a magic number: Assert.AreEqual(2' connectedCount);
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,SubscriptionTest<TEvent>,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\SubscriptionTest.cs,Context,The following statement contains a magic number: i < 2
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_subscribing_to_multiple_constrained_events_of_same_type_but_different_constraint,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\SubscriptionTest.cs,When_subscribing_to_multiple_constrained_events_of_same_type_but_different_constraint,The following statement contains a magic number: exptectedSubscriptionCount = 2;
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_subscribing_to_multiple_constrained_events_of_same_type_but_different_constraint_and_same_subscriber_issue_19,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\SubscriptionTest.cs,Context,The following statement contains a magic number: EventAggregator.Subscribe(subscriber' builder => builder                  .For<StandardEvent>()                  .Add(new StandardEventConstraint {Id = 1})                  .Add(new StandardEventConstraint {Id = 2}));
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_subscribing_to_multiple_constrained_events_of_same_type_but_different_constraint_and_same_subscriber_issue_19,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\SubscriptionTest.cs,It_Should_subscribe_to_both_events,The following statement contains a magic number: Assert.AreEqual(2' subscriptionCount);
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_doing_concurrent_operations_on_subscription_queue,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\SubscriptionTest.cs,Context,The following statement contains a magic number: Enumerable.Range(0' 4)                  .ForEach(i => FailIfThreadCrashes(() => Get<EventProxy>().Subscribe(new[] { new Subscription(typeof(StandardEvent)' null' null) })));
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,When_doing_concurrent_operations_on_subscription_queue,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\SubscriptionTest.cs,OnConnected,The following statement contains a magic number: var timer = new System.Timers.Timer(5000);
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,UnsubscriptionTest<TEvent>,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\UnsubscriptionTest.cs,Context,The following statement contains a magic number: var handlers = Enumerable.Range(0' 2).Select(i => new Mock<IHandle<TEvent>>().Object)                  .Cast<object>()                  .ToList();
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,UnsubscriptionTest<TEvent>,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\UnsubscriptionTest.cs,Context,The following statement contains a magic number: i < 2
Magic Number,SignalR.EventAggregatorProxy.Tests.DotNetClient,UnsubscriptionTest<TEvent>,D:\research\architectureSmells\repos\AndersMalmgren_SignalR.EventAggregatorProxy\SignalR.EventAggregatorProxy.Tests.DotNetClient\UnsubscriptionTest.cs,Context,The following statement contains a magic number: i < 2
