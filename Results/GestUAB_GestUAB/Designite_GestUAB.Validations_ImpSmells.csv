Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome da instituição deve conter somente caracteres alfabéticos."); " is 123.
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome do colaborador deve conter somente caracteres alfabéticos."); " is 123.
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("A profissão deve conter somente caracteres alfabéticos."); //\\p{L} " is 122.
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[\d\w\s-\.\/]*$").WithMessage(@"O documento deve conter somente caracteres alfanúmericos' ' '' '.'' '-'' '/'."); " is 124.
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O município de nascimento deve conter somente caracteres alfabéticos."); " is 127.
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome do colaborador deve conter somente caracteres alfabéticos."); " is 123.
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\d\-\s]*$").WithMessage("O nome do colaborador deve conter somente caracteres alfabéticos."); " is 125.
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\d\-\s\.]*$").WithMessage("O nome do colaborador deve conter somente caracteres alfabéticos."); " is 127.
Long Statement,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\d\-\s\.]*$").WithMessage("O complemento de endereço deve conter somente caracteres alfanuméricos."); " is 133.
Long Statement,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O conta da instituição deve conter somente caracteres alfabéticos."); " is 124.
Long Statement,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O conta do bolsista deve conter somente caracteres alfabéticos."); " is 121.
Long Statement,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The length of the statement  "                        .Matches(@"^[\d\w\s-\.\/]*$").WithMessage(@"O documento deve conter somente caracteres alfanúmericos' ' '' '.'' '-'' '/'."); " is 124.
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,ColaboradorValidator,The following statement contains a magic number: RuleSet("Update"' () =>              {                  RuleFor(x => x.Cpf)                      .NotEmpty()                      .WithMessage("O CPF é obrigatório.")                      .Length(14)                      .WithMessage(@"CPF inválido.")                      .Matches(@"^(\d{3}\.\d{3}\.\d{3}-\d{2})$")                      .WithMessage("O CPF deve seguir o padrão xxx.xxx.xxx-xx.")                      .ValidCpf()                      .WithMessage(@"CPF inválido.");                  SetRules();              });
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetCreateRules,The following statement contains a magic number: RuleFor(x => x.Cpf)                  .NotEmpty()                      .WithMessage("O CPF é obrigatório.")                      .Length(14)                      .WithMessage(@"CPF inválido.")                      .Matches(@"^(\d{3}\.\d{3}\.\d{3}-\d{2})$")                      .WithMessage("O CPF deve seguir o padrão xxx.xxx.xxx-xx.")                      .ValidCpf()                      .WithMessage(@"CPF inválido.")                      .Must(x => !ColaboradorManager.CpfExists(x))                      .WithMessage(@"CPF já cadastrado"' x => x.Cpf)                      .Remote(@"CPF já cadastrado"' "/validation/colaborador/validate-exists-cpf"' "GET");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Instituicao)                      .NotEmpty().WithMessage("O nome da instituição é obrigatório.")                          .Length(0' 100).WithMessage("O nome da instituição deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome da instituição deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Nome)                      .NotEmpty().WithMessage("O nome é obrigatório.")                          .Length(0' 100).WithMessage("O nome deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome do colaborador deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Profissao)                      .Length(0' 100).WithMessage("A profissão deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("A profissão deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.DataNascimento)                      .NotEmpty().WithMessage("A data de nascimento do colaborador é obrigatória.")                          .InclusiveBetween(DateTime.Today.AddYears(-130)' DateTime.Today.AddYears(-12))                          .WithMessage("Não é possível o colaborador ter nascido nesta data.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.DataNascimento)                      .NotEmpty().WithMessage("A data de nascimento do colaborador é obrigatória.")                          .InclusiveBetween(DateTime.Today.AddYears(-130)' DateTime.Today.AddYears(-12))                          .WithMessage("Não é possível o colaborador ter nascido nesta data.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Documento).NotEmpty().WithMessage("O documento de identificação é obrigatório.")                      .Length(0' 20).WithMessage(@"O documento deve conter no máximo 20 caracteres alfanúmericos' ' '' '.'' '-'' '/'.")                          .Matches(@"^[\d\w\s-\.\/]*$").WithMessage(@"O documento deve conter somente caracteres alfanúmericos' ' '' '.'' '-'' '/'.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.OrgaoEmissor)                      .NotEmpty().WithMessage("O orgão emissor é obrigatório.")                          .Length(0' 100).WithMessage("O orgão emissor deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\/\s]*$").WithMessage("O orgão emissor deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.MunicipioNascimento).NotEmpty().WithMessage("O município de nascimento é obrigatório.")                      .Length(0' 100).WithMessage("O município de nascimento deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O município de nascimento deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.NomeConjuge)                      .ValidNomeConjuge()                          .Length(0' 100).WithMessage("O nome do cônjuge deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome do colaborador deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.NomePai)                      .Length(0' 100).WithMessage("O nome do pai deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome do pai deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.NomeMae)                      .NotEmpty().WithMessage("O nome da mãe é obrigatório.")                          .Length(0' 100).WithMessage("O nome da mãe deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\d\-\s]*$").WithMessage("O nome do colaborador deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Logradouro)                      .NotEmpty().WithMessage("O logradouro de endereço é obrigatório.")                          .Length(0' 100).WithMessage("O logradouro de endereço deve conter no máximo 100 caracteres alfanuméricos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\d\-\s\.]*$").WithMessage("O nome do colaborador deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Complemento)                      .Length(0' 100).WithMessage("O complemento de endereço deve conter no máximo 100 caracteres alfanuméricos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\d\-\s\.]*$").WithMessage("O complemento de endereço deve conter somente caracteres alfanuméricos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Numero)                      .NotEmpty().WithMessage("O número de endereço é obrigatório.")                          .Length(0' 6).WithMessage("O número de endereço deve conter no máximo 6 caracteres numéricos.")                          .Matches(@"^(\d*)$").WithMessage("O número de endereço deve conter somente caracteres numéricos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Cep).NotEmpty().WithMessage("O CEP é obrigatório.")                      .Length(9)                          .WithMessage("O CEP deve conter 8 caracteres numéricos.")                          .Matches(@"^(\d{5}-\d{3})$") // .Matches ("^(\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2})|(\\d{11})$")                          .WithMessage("O CEP deve seguir o padrão xxxxx-xxx.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Bairro).NotEmpty().WithMessage("O bairro é obrigatório.")                      .Length(0' 100).WithMessage("O bairro deve conter no máximo 100 caracteres alfanuméricos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\d\-\s]*$").WithMessage("O bairro deve conter somente caracteres alfanuméricos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Municipio).NotEmpty().WithMessage("O município é obrigatório.")                      .Length(0' 100).WithMessage("O município deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O município deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Telefone).NotEmpty()                      .WithMessage("O telefone é obrigatório.")                          .Length(14)                          .WithMessage("O telefone deve conter 10 caracteres numéricos.")                          .Matches(@"^(\([0-9]{2}\)\s[0-9]{4}-[0-9]{4})$")                          .WithMessage("O telefone deve seguir o padrão (xx) xxxx-xxxx");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Celular)                      .Length(0' 14)                          .WithMessage("O celular deve conter 10 caracteres numéricos.")                          .Matches(@"^(\([0-9]{2}\)\s[0-9]{4}-[0-9]{4})|()$")                          .WithMessage("O celular deve seguir o padrão (xx) xxxx-xxxx");
Magic Number,GestUAB.Models,ColaboradorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\ColaboradorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Email)                  .NotEmpty().WithMessage("O e-mail é obrigatório.")                  .Length(0' 50)                  .WithMessage("O e-mail deve conter no máximo 50 caracteres.")                  .EmailAddress()                  .WithMessage("E-mail inválido");
Magic Number,GestUAB.Models,CursoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\CursoValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Nome)                      .NotEmpty().WithMessage("O nome é obrigatório.")                          .Length(0' 100).WithMessage("O nome deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome do curso deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,SetorValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\SetorValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Nome)                      .NotEmpty().WithMessage("O nome é obrigatório.")                          .Length(0' 100).WithMessage("O nome deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O nome do setor deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Banco)                      .NotEmpty().WithMessage("O conta da instituição é obrigatório.")                          .Length(0' 100).WithMessage("O conta da instituição deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O conta da instituição deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.Conta)                      .NotEmpty().WithMessage("O conta é obrigatório.")                          .Length(0' 100).WithMessage("O conta deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\s]*$").WithMessage("O conta do bolsista deve conter somente caracteres alfabéticos.");
Magic Number,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.DataInicio)                      .NotEmpty().WithMessage("A data de nascimento do bolsista é obrigatória.")                          .InclusiveBetween(DateTime.Today.AddYears(-130)' DateTime.Today.AddYears(-12))                          .WithMessage("Não é possível o bolsista ter nascido nesta data.");
Magic Number,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.DataInicio)                      .NotEmpty().WithMessage("A data de nascimento do bolsista é obrigatória.")                          .InclusiveBetween(DateTime.Today.AddYears(-130)' DateTime.Today.AddYears(-12))                          .WithMessage("Não é possível o bolsista ter nascido nesta data.");
Magic Number,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.UltimoCursoTitulacao).NotEmpty().WithMessage("O documento de identificação é obrigatório.")                      .Length(0' 20).WithMessage(@"O documento deve conter no máximo 20 caracteres alfanúmericos' ' '' '.'' '-'' '/'.")                          .Matches(@"^[\d\w\s-\.\/]*$").WithMessage(@"O documento deve conter somente caracteres alfanúmericos' ' '' '.'' '-'' '/'.");
Magic Number,GestUAB.Models,VinculoValidator,D:\research\architectureSmells\repos\GestUAB_GestUAB\src\GestUAB.Validations\VinculoValidator.cs,SetRules,The following statement contains a magic number: RuleFor(x => x.InstituicaoTitulacao)                      .NotEmpty().WithMessage("O orgão emissor é obrigatório.")                          .Length(0' 100).WithMessage("O orgão emissor deve conter no máximo 100 caracteres alfabéticos.")                          .Matches(@"^[a-zA-Z\u00C0-\u00ff\-\/\s]*$").WithMessage("O orgão emissor deve conter somente caracteres alfabéticos.");
