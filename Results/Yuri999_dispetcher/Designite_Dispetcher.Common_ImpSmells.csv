Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Dispetcher.Common.IoC,IocInitializer,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\IocInitializer.cs,ProcessAssembly,Cyclomatic complexity of the method is 9
Complex Method,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,ReadItems,Cyclomatic complexity of the method is 10
Long Statement,Dispetcher.Common.IoC,IocInitializer,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\IocInitializer.cs,ProcessAssembly,The length of the statement  "			var interfaceType = type.GetInterfaces ().FirstOrDefault (i => i.IsDefined (typeof(ComponentInterfaceAttribute)' false)); " is 121.
Long Statement,Dispetcher.Common.IoC,IocInitializer,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\IocInitializer.cs,ProcessAssembly,The length of the statement  "				throw new Exception (String.Format ("Не удалось найти родительский интерфейс с атрибутом [ComponentInterface] для типа {0}."' type.ToString ())); " is 145.
Long Statement,Dispetcher.Common.IoC,Locator,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\Locator.cs,Resolve,The length of the statement  "	if (interfaceAttrs != null && interfaceAttrs.Length > 0 && ((ComponentInterfaceAttribute)interfaceAttrs [0]).AllowMultiple) " is 123.
Long Statement,Dispetcher.Common.IoC,Locator,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\Locator.cs,Resolve,The length of the statement  "	if (interfaceAttrs != null && interfaceAttrs.Length > 0 && !((ComponentInterfaceAttribute)interfaceAttrs [0]).AllowMultiple && components.Count > 1) " is 148.
Long Statement,Dispetcher.Common.IoC,Locator,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\Locator.cs,ResolveAll,The length of the statement  "	if (interfaceAttrs != null && interfaceAttrs.Length > 0 && !((ComponentInterfaceAttribute)interfaceAttrs [0]).AllowMultiple) " is 124.
Long Statement,Dispetcher.Common.Managers,CsvItemManager,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Managers\CsvItemManager.cs,Insert,The length of the statement  "	var id = DbManager.ExecQuery<long> ("INSERT INTO [Journal] (Date' SideNumberPlan' SideNumberFact' Schedule' Route' VehicleType' Protected' ModifyDate) " + "VALUES (@date' @sidenumberplan' @sidenumberfact' @schedule' @route' @vehicletype' @protected' @modifydate); SELECT last_insert_rowid();"' new Dictionary<string' object> () { " is 329.
Long Statement,Dispetcher.Common.Models,CsvItem,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Models\CsvItem.cs,ToString,The length of the statement  "	return String.Format ("{0}|{1}|{2}|{3}|{4}|{5}"' Date.ToShortDateString ()' Route' VehicleType' Schedule' SideNumberPlan' SideNumberFact); " is 138.
Long Statement,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,ReadItems,The length of the statement  "					var key = String.Format ("{0}|{1}|{2}|{3}"' csvItem.Date.ToShortDateString ()' csvItem.Route' csvItem.VehicleType' csvItem.Schedule); " is 133.
Long Statement,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,SendData,The length of the statement  "		var items = DbManager.ExecQuery<CsvItem> ("SELECT * FROM [Journal] WHERE Date = @date"' new Dictionary<string' object> () { " is 123.
Long Statement,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,SendData,The length of the statement  "		}).Select (x => String.Format ("{0}-{1}-{2}-{3}"' (int)x.VehicleType' x.Route' x.Schedule' x.SideNumberFact)).ToList (); " is 120.
Complex Conditional,Dispetcher.Common.IoC,Locator,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\Locator.cs,Resolve,The conditional expression  "interfaceAttrs != null && interfaceAttrs.Length > 0 && !((ComponentInterfaceAttribute)interfaceAttrs [0]).AllowMultiple && components.Count > 1"  is complex.
Empty Catch Block,Dispetcher.Common.IoC,IocInitializer,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\IocInitializer.cs,LoadAssemblies,The method has an empty catch block.
Empty Catch Block,Dispetcher.Common.Helpers,UiHelper,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Helpers\UiHelper.cs,RunInUiThread,The method has an empty catch block.
Empty Catch Block,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,QueueThread,The method has an empty catch block.
Empty Catch Block,Dispetcher.Common.Tasks,CheckMailboxTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\CheckMailboxTask.cs,ThreadWork,The method has an empty catch block.
Empty Catch Block,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,Start,The method has an empty catch block.
Magic Number,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,QueueThread,The following statement contains a magic number: while (!_terminated) {  	string filename = null;  	lock (_files) {  		if (_files.Count > 0) {  			filename = _files.Dequeue ();  		}  	}  	if (filename != null) {  		try {  			ProcessFile (filename);  		}  		catch (Exception ex) {  			// TODO log  		}  	}  	Thread.Sleep (100);  }  
Magic Number,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,QueueThread,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,ConvertToCsvItem,The following statement contains a magic number: if (items.Count < 5)  	return null;  
Magic Number,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,ConvertToCsvItem,The following statement contains a magic number: csvItem.Schedule = items [2];  
Magic Number,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,ConvertToCsvItem,The following statement contains a magic number: csvItem.Route = items [3];  
Magic Number,Dispetcher.Common.Processor,CsvFileProcessor,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Processor\CsvFileProcessor.cs,ConvertToCsvItem,The following statement contains a magic number: if (!Enum.TryParse<VehicleType> (items [4]' true' out vt))  	throw new Exception ("Не удалось разобрать тип транспорта.");  
Magic Number,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,Start,The following statement contains a magic number: (new Thread (() =>  {  	while (!_terminated) {  		if (DateTime.Now - _lastSend > new TimeSpan (0' 0' 30)) {  			Interlocked.Increment (ref _sendCount);  		}  		if (_sendCount > 0) {  			try {  				SendData ();  			}  			catch (Exception ex) {  				// TODO log  			}  			_lastSend = DateTime.Now;  			Interlocked.Decrement (ref _sendCount);  		}  		Thread.Sleep (100);  	}  }) {  	IsBackground = true  }).Start ();  
Magic Number,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,Start,The following statement contains a magic number: (new Thread (() =>  {  	while (!_terminated) {  		if (DateTime.Now - _lastSend > new TimeSpan (0' 0' 30)) {  			Interlocked.Increment (ref _sendCount);  		}  		if (_sendCount > 0) {  			try {  				SendData ();  			}  			catch (Exception ex) {  				// TODO log  			}  			_lastSend = DateTime.Now;  			Interlocked.Decrement (ref _sendCount);  		}  		Thread.Sleep (100);  	}  }) {  	IsBackground = true  }).Start ();  
Magic Number,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,Start,The following statement contains a magic number: while (!_terminated) {  	if (DateTime.Now - _lastSend > new TimeSpan (0' 0' 30)) {  		Interlocked.Increment (ref _sendCount);  	}  	if (_sendCount > 0) {  		try {  			SendData ();  		}  		catch (Exception ex) {  			// TODO log  		}  		_lastSend = DateTime.Now;  		Interlocked.Decrement (ref _sendCount);  	}  	Thread.Sleep (100);  }  
Magic Number,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,Start,The following statement contains a magic number: while (!_terminated) {  	if (DateTime.Now - _lastSend > new TimeSpan (0' 0' 30)) {  		Interlocked.Increment (ref _sendCount);  	}  	if (_sendCount > 0) {  		try {  			SendData ();  		}  		catch (Exception ex) {  			// TODO log  		}  		_lastSend = DateTime.Now;  		Interlocked.Decrement (ref _sendCount);  	}  	Thread.Sleep (100);  }  
Magic Number,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,Start,The following statement contains a magic number: if (DateTime.Now - _lastSend > new TimeSpan (0' 0' 30)) {  	Interlocked.Increment (ref _sendCount);  }  
Magic Number,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,Start,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Dispetcher.Common.Tasks,SendChangesTask,C:\repos\Yuri999_dispetcher\Dispetcher.Common\Tasks\SendChangesTask.cs,SendData,The following statement contains a magic number: lock (_sendSync) {  	// до четырех утра считаем что это еще предыдущий день  	var date = DateTime.Now.Hour < 4 ? DateTime.Today.AddDays (-1) : DateTime.Today;  	var items = DbManager.ExecQuery<CsvItem> ("SELECT * FROM [Journal] WHERE Date = @date"' new Dictionary<string' object> () {  		{  			"date"'  			date  		}  	}).Select (x => String.Format ("{0}-{1}-{2}-{3}"' (int)x.VehicleType' x.Route' x.Schedule' x.SideNumberFact)).ToList ();  	var postData = "Items=" + string.Join ("+"' items);  	WebRequest request = WebRequest.Create ("http://gde-edet.com/Dispetcher/Receiver");  	request.Method = "POST";  	byte[] byteArray = Encoding.UTF8.GetBytes (postData);  	request.ContentType = "application/x-www-form-urlencoded";  	request.ContentLength = byteArray.Length;  	using (Stream dataStream = request.GetRequestStream ()) {  		dataStream.Write (byteArray' 0' byteArray.Length);  	}  	WebResponse response = request.GetResponse ();  	var status = ((HttpWebResponse)response).StatusDescription;  	using (Stream dataStream = response.GetResponseStream ()) {  		using (StreamReader reader = new StreamReader (dataStream)) {  			string responseFromServer = reader.ReadToEnd ();  		}  	}  	response.Close ();  }  
Missing Default,Dispetcher.Common.IoC,IocInitializer,C:\repos\Yuri999_dispetcher\Dispetcher.Common\IoC\IocInitializer.cs,ProcessAssembly,The following switch statement is missing a default case: switch (((ComponentInterfaceAttribute)interfaceAttributes [0]).LifeTime) {  case ComponentLifeTime.Singleton:  	reg.SingleInstance ();  	break;  case ComponentLifeTime.Transient:  	reg.InstancePerDependency ();  	break;  }  
