Implementation smell,Namespace,Class,File,Method,Description
Complex Method,sfsharp,Prompt,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Prompt.cs,UserInput,Cyclomatic complexity of the method is 8
Complex Method,sfsharp,Prompt,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Prompt.cs,AcceptCharacter,Cyclomatic complexity of the method is 11
Complex Method,sfsharp,Sender,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Sender.cs,ParseArgs,Cyclomatic complexity of the method is 11
Complex Method,sfsharp,SerialForwarder,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SerialForwarder.cs,SerialForwarder,Cyclomatic complexity of the method is 21
Complex Method,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,ExecCommand,Cyclomatic complexity of the method is 47
Complex Method,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,PrintHelp,Cyclomatic complexity of the method is 40
Complex Method,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,Cyclomatic complexity of the method is 17
Long Statement,sfsharp,SerialForwarder,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SerialForwarder.cs,ListenForClients,The length of the statement  "			WriteLine ("New client connected to Serial forwarder (id = " + id.ToString () + ") on port " + port.ToString ()' prompt.eventTextColor); " is 136.
Long Statement,sfsharp,SerialForwarder,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SerialForwarder.cs,newClient_MoteIFClosedEvent,The length of the statement  "	WriteLine (motecom + " is not responding. Closing Serial forwarder (id = " + id.ToString () + ")"' prompt.errorTextColor); " is 122.
Long Statement,sfsharp,SerialForwarder,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SerialForwarder.cs,ClientDC,The length of the statement  "	WriteLine ("Client disconnected from Serial forwarder (id = " + id.ToString () + ") on port " + port.ToString ()' prompt.eventTextColor); " is 137.
Virtual Method Call from Constructor,sfsharp,SerialForwarder,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SerialForwarder.cs,SerialForwarder,The constructor "SerialForwarder" calls a virtual method "Close".
Magic Number,sfsharp,Listener,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Listener.cs,Listener,The following statement contains a magic number: if (args.Count != 3) {  	prompt.WriteLine ("listen: Wrong arguments"' prompt.errorTextColor);  	return;  }  
Magic Number,sfsharp,Listener,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Listener.cs,Listener,The following statement contains a magic number: motecom = args [2].ToString ();  
Magic Number,sfsharp,Prompt,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Prompt.cs,Prompt,The following statement contains a magic number: Console.CursorSize = 3;  
Magic Number,sfsharp,Sender,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Sender.cs,ParseArgs,The following statement contains a magic number: if (args.Count < 5 || args.Count > 6)  	return false;  
Magic Number,sfsharp,Sender,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Sender.cs,ParseArgs,The following statement contains a magic number: if (args.Count < 5 || args.Count > 6)  	return false;  
Magic Number,sfsharp,SFClientHandler,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFClientHandler.cs,Handshake,The following statement contains a magic number: try {  	stream = tcpClient.GetStream ();  	stream.Write (VERSION' 0' VERSION.Length);  	byte[] partnerV = readN (2);  	if (!partnerV.SequenceEqual (VERSION)) {  		throw new Exception ("Incompatible version of remote SF client\n");  	}  }  catch (Exception e) {  	throw e;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,Init,The following statement contains a magic number: prompt = new Prompt (""' ">> "' helloMsg' 25);  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,TcpClient,The following statement contains a magic number: while (true) {  	try {  		tcpClient = tcpListener.AcceptTcpClient ();  	}  	catch (Exception) {  		return;  	}  	prompt.WriteLine ("Control client connected"' prompt.eventTextColor);  	controlClient = tcpClient.GetStream ();  	prompt.EnableTCPClientEcho (controlClient);  	var encoder = new UTF8Encoding ();  	byte[] hello = encoder.GetBytes (helloMsg + '\n');  	controlClient.Write (hello' 0' hello.Length);  	while (true) {  		try {  			bytesRead = controlClient.Read (buffer' 0' 250);  			cmdStr = this.Parse (buffer' 0' bytesRead);  			prompt.ControlClientCmd (cmdStr);  			string cmd = cmdStr.ToLower ();  			if (cmd.Equals ("exit") && activeListeners.Count == 0)  				continue;  			ExecCommand (cmd);  		}  		catch (Exception e) {  			Debug.WriteLine (e.Message);  			CloseControlClient ();  			break;  		}  	}  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,TcpClient,The following statement contains a magic number: while (true) {  	try {  		bytesRead = controlClient.Read (buffer' 0' 250);  		cmdStr = this.Parse (buffer' 0' bytesRead);  		prompt.ControlClientCmd (cmdStr);  		string cmd = cmdStr.ToLower ();  		if (cmd.Equals ("exit") && activeListeners.Count == 0)  			continue;  		ExecCommand (cmd);  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		CloseControlClient ();  		break;  	}  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,TcpClient,The following statement contains a magic number: try {  	bytesRead = controlClient.Read (buffer' 0' 250);  	cmdStr = this.Parse (buffer' 0' bytesRead);  	prompt.ControlClientCmd (cmdStr);  	string cmd = cmdStr.ToLower ();  	if (cmd.Equals ("exit") && activeListeners.Count == 0)  		continue;  	ExecCommand (cmd);  }  catch (Exception e) {  	Debug.WriteLine (e.Message);  	CloseControlClient ();  	break;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,TcpClient,The following statement contains a magic number: bytesRead = controlClient.Read (buffer' 0' 250);  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,PrintHelp,The following statement contains a magic number: if (args.Count < 2) {  	PrintMainHelp ();  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: if (args.Count != 3) {  	printVars ("X");  	printVars ("");  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: if (args [2].ToString ().StartsWith ("0x"))  	fromBase = 16;  else  	fromBase = 10;  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: if (args [2].ToString ().StartsWith ("0x"))  	fromBase = 16;  else  	fromBase = 10;  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: if (args [2].ToString ().StartsWith ("0x"))  	fromBase = 16;  else  	fromBase = 10;  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: fromBase = 16;  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: fromBase = 10;  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: try {  	switch (args [1].ToString ()) {  	case "dest":  		dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "src":  		src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "group":  		group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "am":  		amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	default:  		prompt.WriteLine ("Unknown variable");  		return;  	}  }  catch (Exception e) {  	prompt.WriteLine (e.Message' prompt.errorTextColor);  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: try {  	switch (args [1].ToString ()) {  	case "dest":  		dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "src":  		src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "group":  		group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "am":  		amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	default:  		prompt.WriteLine ("Unknown variable");  		return;  	}  }  catch (Exception e) {  	prompt.WriteLine (e.Message' prompt.errorTextColor);  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: try {  	switch (args [1].ToString ()) {  	case "dest":  		dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "src":  		src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "group":  		group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "am":  		amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	default:  		prompt.WriteLine ("Unknown variable");  		return;  	}  }  catch (Exception e) {  	prompt.WriteLine (e.Message' prompt.errorTextColor);  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: try {  	switch (args [1].ToString ()) {  	case "dest":  		dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "src":  		src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "group":  		group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	case "am":  		amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  		break;  	default:  		prompt.WriteLine ("Unknown variable");  		return;  	}  }  catch (Exception e) {  	prompt.WriteLine (e.Message' prompt.errorTextColor);  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: switch (args [1].ToString ()) {  case "dest":  	dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "src":  	src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "group":  	group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "am":  	amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  default:  	prompt.WriteLine ("Unknown variable");  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: switch (args [1].ToString ()) {  case "dest":  	dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "src":  	src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "group":  	group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "am":  	amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  default:  	prompt.WriteLine ("Unknown variable");  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: switch (args [1].ToString ()) {  case "dest":  	dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "src":  	src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "group":  	group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "am":  	amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  default:  	prompt.WriteLine ("Unknown variable");  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: switch (args [1].ToString ()) {  case "dest":  	dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "src":  	src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "group":  	group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  case "am":  	amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  	break;  default:  	prompt.WriteLine ("Unknown variable");  	return;  }  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: dest = Convert.ToUInt16 (args [2].ToString ()' fromBase);  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: src = Convert.ToUInt16 (args [2].ToString ()' fromBase);  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: group = Convert.ToUInt16 (args [2].ToString ()' fromBase);  
Magic Number,sfsharp,SFMain,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\SFMain.cs,setVar,The following statement contains a magic number: amtype = Convert.ToUInt16 (args [2].ToString ()' fromBase);  
Missing Default,sfsharp,Sender,C:\repos\ediazal_tinyos-csharp-sdk\sfsharp\Sender.cs,ParseArgs,The following switch statement is missing a default case: switch (args [i].ToString ()) {  case "-comm":  	if (++i < args.Count) {  		motecom = args [i].ToString ();  		break;  	}  	else  		prompt.WriteLine ("send: wrong arguments"' prompt.errorTextColor);  	return false;  case "-m":  	if (++i < args.Count) {  		payload = args [i].ToString ();  		break;  	}  	else  		prompt.WriteLine ("send: wrong arguments"' prompt.errorTextColor);  	return false;  case "-listen":  	listen = true;  	break;  }  
