Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CameraControl.Plugins.AutoExportPlugins,FtpPlugin,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\FtpPlugin.cs,Send,Cyclomatic complexity of the method is 8
Complex Method,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,Cyclomatic complexity of the method is 38
Complex Method,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,Cyclomatic complexity of the method is 18
Complex Method,CameraControl.Plugins.ImageTransformPlugins,RotateTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\RotateTransform.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,CameraControl.Plugins.ImageTransformPlugins,ScriptTransformView,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ScriptTransformView.xaml.cs,LoadData,Cyclomatic complexity of the method is 9
Complex Method,CameraControl.Plugins.ImageTransformPlugins,ScriptTransformView,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ScriptTransformView.xaml.cs,TextArea_TextEntered,Cyclomatic complexity of the method is 8
Complex Method,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetEnabled,Cyclomatic complexity of the method is 16
Complex Method,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,Cyclomatic complexity of the method is 16
Complex Method,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,_backgroundWorker_DoWork,Cyclomatic complexity of the method is 15
Complex Method,CameraControl.Plugins.ToolPlugins,StatisticsViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\StatisticsViewModel.cs,Refresh,Cyclomatic complexity of the method is 16
Long Parameter List,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The method has 5 parameters.
Long Parameter List,CameraControl.Plugins.FilenameTemplate,BarcodeFromImage,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\BarcodeFromImage.cs,Pharse,The method has 5 parameters.
Long Parameter List,CameraControl.Plugins.FilenameTemplate,ExifTemplate,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ExifTemplate.cs,Pharse,The method has 5 parameters.
Long Statement,CameraControl.Plugins.AutoExportPlugins,BasePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\BasePluginViewModel.cs,TransformTemplate,The length of the statement  "	return matchX.Cast<Match> ().Aggregate (text' (current1' match) => item.FileNameTemplates.Where (template => System.String.Compare (template.Name' match.Value' System.StringComparison.InvariantCultureIgnoreCase) == 0).Aggregate (current1' (current' template) => current.Replace (match.Value' template.Value))); " is 310.
Long Statement,CameraControl.Plugins.AutoExportPlugins,DropboxViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\DropboxViewModel.cs,SendResponse,The length of the statement  "	Application.Current.Dispatcher.Invoke (new Action (() => ((Window)ServiceProvider.PluginManager.SelectedWindow).Activate ())); " is 126.
Long Statement,CameraControl.Plugins.AutoExportPlugins,DropboxViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\DropboxViewModel.cs,SendResponse,The length of the statement  "	return "<HTML><BODY>OK</br><h3>Logis succeed. Please return to digiCamControl</br><a href=\"javascript:window.open(''''_self').close();\">close</a></BODY></HTML>"; " is 163.
Long Statement,CameraControl.Plugins.AutoExportPlugins,ExecuteFilePlugin,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\ExecuteFilePlugin.cs,Execute,The length of the statement  "		PhotoUtils.Run (conf.PathToExe' string.IsNullOrEmpty (conf.Params) ? outfile : conf.Params.Replace ("%1"' outfile)' ProcessWindowStyle.Normal); " is 143.
Long Statement,CameraControl.Plugins.AutoExportPlugins,FacebookPluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\FacebookPluginViewModel.cs,SendResponse,The length of the statement  "		string token_url = string.Format ("https://graph.facebook.com/oauth/access_token?client_id={0}&redirect_uri={1}&%20client_secret={2}&code={3}"' ClientId' Server' ClientSecret' code); " is 182.
Long Statement,CameraControl.Plugins.AutoExportPlugins,FacebookPluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\FacebookPluginViewModel.cs,SendResponse,The length of the statement  "				Application.Current.Dispatcher.Invoke (new Action (() => ((Window)ServiceProvider.PluginManager.SelectedWindow).Activate ())); " is 126.
Long Statement,CameraControl.Plugins.AutoExportPlugins,FacebookPluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\FacebookPluginViewModel.cs,SendResponse,The length of the statement  "				return "<HTML><BODY>OK</br><h3>Logis succeed. Please return to digiCamControl</br><a href=\"javascript:window.open(''''_self').close();\">close</a></BODY></HTML>"; " is 163.
Long Statement,CameraControl.Plugins.AutoExportPlugins,PrintPlugin,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\PrintPlugin.cs,Print,The length of the statement  "			Source = BitmapLoader.Instance.LoadImage (outfile' PageWidth > PageHeight ? PageWidth : PageHeight' conf.Rotate ? 90 : 0)' " is 122.
Long Statement,CameraControl.Plugins.AutoExportPlugins,SendEmailPlugin,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\SendEmailPlugin.cs,Send,The length of the statement  "		HelpProvider.SendEmail ((string.IsNullOrEmpty (conf.Message) ? "." : conf.TransformTemplate (item' conf.Message))' (string.IsNullOrEmpty (conf.Subject) ? "Your photo" : conf.TransformTemplate (item' conf.Subject))' conf.From' conf.To' outfile); " is 244.
Long Statement,CameraControl.Plugins.AutoExportPlugins,TransformPlugin,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\TransformPlugin.cs,Execute,The length of the statement  "		string newFile = Path.Combine (Path.GetDirectoryName (filename)' Path.GetFileNameWithoutExtension (filename) + "_transformed" + ".jpg"); " is 136.
Long Statement,CameraControl.Plugins.ExportPlugins,ExportCsv,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExportPlugins\ExportCsv.cs,Execute,The length of the statement  "					writer.WriteLine ("{0}'{1}'{2}"' file.FileName' file.FileDate.ToString ("O")' (i > 0 ? Math.Round ((file.FileDate - ServiceProvider.Settings.DefaultSession.Files [i - 1].FileDate).TotalMilliseconds' 0) : 0)); " is 208.
Long Statement,CameraControl.Plugins.ExternalDevices,ArduinoShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\ArduinoShutterRelease.cs,StringToByteArray,The length of the statement  "	return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray (); " is 131.
Long Statement,CameraControl.Plugins.ExternalDevices,HidUsbRelay,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\HidUsbRelay.cs,Connect,The length of the statement  "	Hd = RelayDeviceWrapper.usb_relay_device_open_with_serial_number (dev.Value.serial_number' dev.Value.serial_number.Length); " is 123.
Long Statement,CameraControl.Plugins.ExternalDevices,UsbRelayRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\UsbRelayRelease.cs,StringToByteArray,The length of the statement  "	return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray (); " is 131.
Long Statement,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The length of the statement  "			text = matchX.Cast<Match> ().Aggregate (conf.Text' (current1' match) => item.FileNameTemplates.Where (template => String.Compare (template.Name' match.Value' StringComparison.InvariantCultureIgnoreCase) == 0).Aggregate (current1' (current' template) => current.Replace (match.Value' template.Value))); " is 301.
Long Statement,CameraControl.Plugins.ImageTransformPlugins,TransformPluginEditViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\TransformPluginEditViewModel.cs,Preview,The length of the statement  "		outfile = AutoExportPluginHelper.ExecuteTransformPlugins (ServiceProvider.Settings.SelectedBitmap.FileItem' Config' outfile' true); " is 131.
Long Statement,CameraControl.Plugins.MainWindowPlugins,SimpleMainWindow,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\MainWindowPlugins\SimpleMainWindow.xaml.cs,MetroWindow_Loaded,The length of the statement  "	MessageBox.Show ("This is a demostration of digiCamControl plugin usage.\nFor normal usage please restart the application and select Default window!"); " is 151.
Long Statement,CameraControl.Plugins.MainWindowPlugins,SimpleMainWindow,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\MainWindowPlugins\SimpleMainWindow.xaml.cs,PhotoCaptured,The length of the statement  "			fileName = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (fileName) + "\\" + Path.GetFileNameWithoutExtension (fileName) + "_"' 0' Path.GetExtension (fileName)); " is 169.
Long Statement,CameraControl.Plugins.ToolPlugins,CombineZpViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\CombineZpViewModel.cs,GenerateTask,The length of the statement  "		string newFile = Path.Combine (Path.GetDirectoryName (Files [0].FileName)' Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse" + ".jpg"); " is 151.
Long Statement,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,GenerateTask,The length of the statement  "		string newFile = Path.Combine (Path.GetDirectoryName (Files [0].FileName)' Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse" + ".jpg"); " is 151.
Long Statement,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The length of the statement  "		_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg"); " is 175.
Long Statement,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The length of the statement  "		//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif"; " is 171.
Long Statement,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,Start,The length of the statement  "			if (MessageBox.Show ("Video file already exist. Do you want to continue ?"' "Warning "' MessageBoxButton.YesNo) != MessageBoxResult.Yes) " is 136.
Long Statement,CameraControl.Plugins.ToolPlugins,StatisticsViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\StatisticsViewModel.cs,Refresh,The length of the statement  "				Summary.Add (new NamedValue<string> ("Most used apperture"' Files.GroupBy (x => x.F).OrderByDescending (x => x.Count ()).First ().Key)); " is 136.
Long Statement,CameraControl.Plugins.ToolPlugins,StatisticsViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\StatisticsViewModel.cs,Refresh,The length of the statement  "				Summary.Add (new NamedValue<string> ("Most used exposure"' Files.GroupBy (x => x.E).OrderByDescending (x => x.Count ()).First ().Key)); " is 135.
Long Statement,CameraControl.Plugins.ToolPlugins,StatisticsViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\StatisticsViewModel.cs,Refresh,The length of the statement  "				Summary.Add (new NamedValue<string> ("Most used ISO"' Files.GroupBy (x => x.Iso).OrderByDescending (x => x.Count ()).First ().Key)); " is 132.
Empty Catch Block,CameraControl.Plugins.AutoExportPlugins,FacebookPluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\FacebookPluginViewModel.cs,LoadAlbums,The method has an empty catch block.
Empty Catch Block,CameraControl.Plugins.ExternalDevices,DCCUSBShutterReleaseConfig,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterReleaseConfig.xaml.cs,UserControl_Unloaded,The method has an empty catch block.
Empty Catch Block,CameraControl.Plugins.ImageTransformPlugins,ScriptTransformView,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ScriptTransformView.xaml.cs,LoadData,The method has an empty catch block.
Empty Catch Block,CameraControl.Plugins.ToolPlugins,CombineZpViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\CombineZpViewModel.cs,Stop,The method has an empty catch block.
Empty Catch Block,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,Stop,The method has an empty catch block.
Empty Catch Block,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The method has an empty catch block.
Empty Catch Block,CameraControl.Plugins.ToolPlugins,ImageSequencerViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ImageSequencerViewModel.cs,GetThubnail,The method has an empty catch block.
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,Connect,The following statement contains a magic number: try {  	//IPHostEntry ipHostInfo = Dns.Resolve(Dns.GetHostName());  	//IPAddress ipAddress = ipHostInfo.AddressList[0];  	//IPEndPoint remoteEP = new IPEndPoint(ipAddress' 4300);  	// Create a TCP/IP  socket.  	socket = new TcpClient ("localhost"' 4300);  	//socket.Connect(remoteEP);  } catch (Exception exception) {  	Log.Error ("Unable to connect PHD"' exception);  }  
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,Connect,The following statement contains a magic number: socket = new TcpClient ("localhost"' 4300);  
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,DoDither,The following statement contains a magic number: while (!Cancel && (!(DateTime.Now > dateTime) && (double)num2 > (double)settleAt)) {  	Thread.Sleep (num1 * 1000);  	socket.GetStream ().Flush ();  	socket.Client.Send (new byte[1] {  		10  	});  	while (!Cancel && socket.Available > 0) {  		socket.Client.Receive (buffer' 1' SocketFlags.None);  		num2 = (float)int.Parse (buffer [0].ToString ()) / 100f;  		Log.Debug ("PHD Dithering pixel value = " + num2.ToString ());  	}  	if ((double)num2 > 0.0 && num4 < num3)  		num2 = 2.55f;  	++num4;  }  
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,DoDither,The following statement contains a magic number: while (!Cancel && (!(DateTime.Now > dateTime) && (double)num2 > (double)settleAt)) {  	Thread.Sleep (num1 * 1000);  	socket.GetStream ().Flush ();  	socket.Client.Send (new byte[1] {  		10  	});  	while (!Cancel && socket.Available > 0) {  		socket.Client.Receive (buffer' 1' SocketFlags.None);  		num2 = (float)int.Parse (buffer [0].ToString ()) / 100f;  		Log.Debug ("PHD Dithering pixel value = " + num2.ToString ());  	}  	if ((double)num2 > 0.0 && num4 < num3)  		num2 = 2.55f;  	++num4;  }  
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,DoDither,The following statement contains a magic number: Thread.Sleep (num1 * 1000);  
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,DoDither,The following statement contains a magic number: socket.Client.Send (new byte[1] {  	10  });  
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,SetAggressiveness,The following statement contains a magic number: if (socket != null) {  	socket.GetStream ().Flush ();  	socket.Client.Send (new byte[1] {  		(byte)(ushort)moveX  	});  	Thread.Sleep (1000);  	while (!Cancel && socket.Available > 0) {  		socket.Client.Receive (buffer' 1' SocketFlags.None);  		val2 = int.Parse (buffer [0].ToString ());  	}  }  
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,SetAggressiveness,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,CameraControl.Plugins.Astro,PHDWnd,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\Astro\PHDWnd.xaml.cs,btn_diter_Click,The following statement contains a magic number: DoDither (socket' AggressivenessENUM.HIGH' (float)2.55);  
Magic Number,CameraControl.Plugins.AutoExportPlugins,FacebookPluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\FacebookPluginViewModel.cs,LoadAlbums,The following statement contains a magic number: try {  	String url = string.Format ("/{0}/albums"' SelectedPage.Split (new[] {  		"||"  	}' StringSplitOptions.RemoveEmptyEntries) [0]);  	string token = SelectedPage.Split (new[] {  		"||"  	}' StringSplitOptions.RemoveEmptyEntries) [1];  	var client = new FacebookClient {  		AccessToken = AccessToken'  		AppId = ClientId'  		AppSecret = ClientSecret  	};  	Albums = new AsyncObservableCollection<ValuePair> ();  	do {  		dynamic albums = client.Get (url' new {  			limit = 25'  			offset = 0  		});  		foreach (dynamic data in albums.data) {  			Albums.Add (new ValuePair () {  				Value = data.id + "||" + token'  				Name = data.name  			});  		}  		if (albums.paging != null && !String.IsNullOrEmpty (albums.paging.next))  			url = albums.paging.next;  		else  			url = String.Empty;  	} while (!String.IsNullOrEmpty (url));  	if (string.IsNullOrEmpty (SelectedAlbum) && Albums.Any ()) {  		SelectedAlbum = Albums [0].Value;  	}  } catch (Exception) {  }  
Magic Number,CameraControl.Plugins.AutoExportPlugins,FacebookPluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\FacebookPluginViewModel.cs,LoadAlbums,The following statement contains a magic number: do {  	dynamic albums = client.Get (url' new {  		limit = 25'  		offset = 0  	});  	foreach (dynamic data in albums.data) {  		Albums.Add (new ValuePair () {  			Value = data.id + "||" + token'  			Name = data.name  		});  	}  	if (albums.paging != null && !String.IsNullOrEmpty (albums.paging.next))  		url = albums.paging.next;  	else  		url = String.Empty;  } while (!String.IsNullOrEmpty (url));  
Magic Number,CameraControl.Plugins.AutoExportPlugins,PrintPlugin,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\AutoExportPlugins\PrintPlugin.cs,Print,The following statement contains a magic number: try {  	PrintDialog dlg = new PrintDialog ();  	configData.IsRedy = false;  	configData.IsError = false;  	var conf = new PrintPluginViewModel (configData);  	var outfile = PhotoUtils.ReplaceExtension (Path.GetTempFileName ()' Path.GetExtension (item.Name));  	outfile = AutoExportPluginHelper.ExecuteTransformPlugins (item' configData' outfile);  	System.Printing.PrintCapabilities capabilities = dlg.PrintQueue.GetPrintCapabilities (dlg.PrintTicket);  	var PageWidth = (int)capabilities.PageImageableArea.ExtentWidth;  	var PageHeight = (int)capabilities.PageImageableArea.ExtentHeight;  	var panel = new StackPanel {  		Margin = new Thickness (conf.Margin)'  	};  	var image = new Image {  		Source = BitmapLoader.Instance.LoadImage (outfile' PageWidth > PageHeight ? PageWidth : PageHeight' conf.Rotate ? 90 : 0)'  		Width = PageWidth'  		Height = PageHeight'  		Stretch = Stretch.Uniform'  	};  	panel.Children.Add (image);  	panel.UpdateLayout ();  	panel.Measure (new Size (PageWidth' PageHeight));  	panel.Arrange (new Rect (new Point (0' 0)' panel.DesiredSize));  	panel.UpdateLayout ();  	dlg.PrintVisual (panel' item.Name);  	image.Source = null;  	panel.Children.Clear ();  	// remove unused file  	if (outfile != item.FileName) {  		PhotoUtils.WaitForFile (outfile);  		File.Delete (outfile);  	}  } catch (Exception exception) {  	Log.Error ("Error print file"' exception);  	configData.IsError = true;  	configData.Error = exception.Message;  }  
Magic Number,CameraControl.Plugins.ExternalDevices,ArduinoShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\ArduinoShutterRelease.cs,OpenShutter,The following statement contains a magic number: try {  	if (config.AttachedObject != null)  		CloseShutter (config);  	SerialPort serialPort = new SerialPort (config.Get ("Port"));  	serialPort.Open ();  	serialPort.BaudRate = 9600;  	serialPort.WriteTimeout = 3500;  	if (config.Get ("IsHexa") == "True") {  		var data = StringToByteArray (config.Get ("CaptureOn"));  		serialPort.Write (data' 0' data.Length);  	} else {  		serialPort.WriteLine (config.Get ("CaptureOn"));  	}  	config.AttachedObject = serialPort;  } catch (Exception ex) {  	Log.Debug ("ArduinoShutterRelease"' ex);  	StaticHelper.Instance.SystemMessage = "Error Shutter " + ex.Message;  }  
Magic Number,CameraControl.Plugins.ExternalDevices,ArduinoShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\ArduinoShutterRelease.cs,OpenShutter,The following statement contains a magic number: try {  	if (config.AttachedObject != null)  		CloseShutter (config);  	SerialPort serialPort = new SerialPort (config.Get ("Port"));  	serialPort.Open ();  	serialPort.BaudRate = 9600;  	serialPort.WriteTimeout = 3500;  	if (config.Get ("IsHexa") == "True") {  		var data = StringToByteArray (config.Get ("CaptureOn"));  		serialPort.Write (data' 0' data.Length);  	} else {  		serialPort.WriteLine (config.Get ("CaptureOn"));  	}  	config.AttachedObject = serialPort;  } catch (Exception ex) {  	Log.Debug ("ArduinoShutterRelease"' ex);  	StaticHelper.Instance.SystemMessage = "Error Shutter " + ex.Message;  }  
Magic Number,CameraControl.Plugins.ExternalDevices,ArduinoShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\ArduinoShutterRelease.cs,OpenShutter,The following statement contains a magic number: serialPort.BaudRate = 9600;  
Magic Number,CameraControl.Plugins.ExternalDevices,ArduinoShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\ArduinoShutterRelease.cs,OpenShutter,The following statement contains a magic number: serialPort.WriteTimeout = 3500;  
Magic Number,CameraControl.Plugins.ExternalDevices,ArduinoShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\ArduinoShutterRelease.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,CameraControl.Plugins.ExternalDevices,ArduinoShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\ArduinoShutterRelease.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,CameraControl.Plugins.ExternalDevices,ArduinoShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\ArduinoShutterRelease.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterRelease.cs,SendCommand,The following statement contains a magic number: lock (_locker) {  	try {  		SerialPort sp = new SerialPort ();  		if (sp.IsOpen)  			sp.Close ();  		sp.PortName = port;  		sp.BaudRate = 9600;  		sp.WriteTimeout = 3500;  		sp.Open ();  		sp.Write (cmd);  		sp.Close ();  	} catch (Exception exception) {  		Log.Error ("Error sending serial command "' exception);  		StaticHelper.Instance.SystemMessage = "Error sending serial command " + exception.Message;  	}  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterRelease.cs,SendCommand,The following statement contains a magic number: lock (_locker) {  	try {  		SerialPort sp = new SerialPort ();  		if (sp.IsOpen)  			sp.Close ();  		sp.PortName = port;  		sp.BaudRate = 9600;  		sp.WriteTimeout = 3500;  		sp.Open ();  		sp.Write (cmd);  		sp.Close ();  	} catch (Exception exception) {  		Log.Error ("Error sending serial command "' exception);  		StaticHelper.Instance.SystemMessage = "Error sending serial command " + exception.Message;  	}  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterRelease.cs,SendCommand,The following statement contains a magic number: try {  	SerialPort sp = new SerialPort ();  	if (sp.IsOpen)  		sp.Close ();  	sp.PortName = port;  	sp.BaudRate = 9600;  	sp.WriteTimeout = 3500;  	sp.Open ();  	sp.Write (cmd);  	sp.Close ();  } catch (Exception exception) {  	Log.Error ("Error sending serial command "' exception);  	StaticHelper.Instance.SystemMessage = "Error sending serial command " + exception.Message;  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterRelease.cs,SendCommand,The following statement contains a magic number: try {  	SerialPort sp = new SerialPort ();  	if (sp.IsOpen)  		sp.Close ();  	sp.PortName = port;  	sp.BaudRate = 9600;  	sp.WriteTimeout = 3500;  	sp.Open ();  	sp.Write (cmd);  	sp.Close ();  } catch (Exception exception) {  	Log.Error ("Error sending serial command "' exception);  	StaticHelper.Instance.SystemMessage = "Error sending serial command " + exception.Message;  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterRelease.cs,SendCommand,The following statement contains a magic number: sp.BaudRate = 9600;  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterRelease.cs,SendCommand,The following statement contains a magic number: sp.WriteTimeout = 3500;  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterReleaseConfig,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterReleaseConfig.xaml.cs,btn_vers_Click,The following statement contains a magic number: try {  	if (sp.IsOpen) {  		sp.DataReceived -= sp_DataReceived;  		sp.Close ();  	}  	sp.PortName = Port;  	sp.BaudRate = 9600;  	sp.WriteTimeout = 3500;  	sp.Open ();  	sp.DataReceived += sp_DataReceived;  	sp.WriteLine ("v");  } catch (Exception ex) {  	MessageBox.Show (ex.Message);  	Log.Error ("Serial error"' ex);  	Dispatcher.Invoke (new Action (delegate {  		lbl_mess.Content = "Error";  	}));  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterReleaseConfig,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterReleaseConfig.xaml.cs,btn_vers_Click,The following statement contains a magic number: try {  	if (sp.IsOpen) {  		sp.DataReceived -= sp_DataReceived;  		sp.Close ();  	}  	sp.PortName = Port;  	sp.BaudRate = 9600;  	sp.WriteTimeout = 3500;  	sp.Open ();  	sp.DataReceived += sp_DataReceived;  	sp.WriteLine ("v");  } catch (Exception ex) {  	MessageBox.Show (ex.Message);  	Log.Error ("Serial error"' ex);  	Dispatcher.Invoke (new Action (delegate {  		lbl_mess.Content = "Error";  	}));  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterReleaseConfig,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterReleaseConfig.xaml.cs,btn_vers_Click,The following statement contains a magic number: sp.BaudRate = 9600;  
Magic Number,CameraControl.Plugins.ExternalDevices,DCCUSBShutterReleaseConfig,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DCCUSBShutterReleaseConfig.xaml.cs,btn_vers_Click,The following statement contains a magic number: sp.WriteTimeout = 3500;  
Magic Number,CameraControl.Plugins.ExternalDevices,DSUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DSUSBShutterRelease.cs,OpenShutter,The following statement contains a magic number: for (int index = 1; index <= 5; ++index) {  	DSUSB_ShutterOpen ();  	DSUSB_ShutterStatus (ref status);  	if (status == 2)  		return true;  	Thread.Sleep (500);  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DSUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DSUSBShutterRelease.cs,OpenShutter,The following statement contains a magic number: for (int index = 1; index <= 5; ++index) {  	DSUSB_ShutterOpen ();  	DSUSB_ShutterStatus (ref status);  	if (status == 2)  		return true;  	Thread.Sleep (500);  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DSUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DSUSBShutterRelease.cs,OpenShutter,The following statement contains a magic number: for (int index = 1; index <= 5; ++index) {  	DSUSB_ShutterOpen ();  	DSUSB_ShutterStatus (ref status);  	if (status == 2)  		return true;  	Thread.Sleep (500);  }  
Magic Number,CameraControl.Plugins.ExternalDevices,DSUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DSUSBShutterRelease.cs,OpenShutter,The following statement contains a magic number: if (status == 2)  	return true;  
Magic Number,CameraControl.Plugins.ExternalDevices,DSUSBShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\DSUSBShutterRelease.cs,OpenShutter,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,CameraControl.Plugins.ExternalDevices,HidUsbRelay,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\HidUsbRelay.cs,Capture,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,CameraControl.Plugins.ExternalDevices,MultiCameraBoxShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\MultiCameraBoxShutterRelease.cs,SendCommand,The following statement contains a magic number: lock (_locker) {  	try {  		SerialPort sp = new SerialPort ();  		if (sp.IsOpen)  			sp.Close ();  		sp.PortName = port;  		sp.BaudRate = 9600;  		sp.WriteTimeout = 3500;  		sp.Open ();  		sp.Write (cmd);  		sp.Close ();  	} catch (Exception exception) {  		Log.Error ("Error sending serial command "' exception);  		StaticHelper.Instance.SystemMessage = "Error sending serial command " + exception.Message;  	}  }  
Magic Number,CameraControl.Plugins.ExternalDevices,MultiCameraBoxShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\MultiCameraBoxShutterRelease.cs,SendCommand,The following statement contains a magic number: lock (_locker) {  	try {  		SerialPort sp = new SerialPort ();  		if (sp.IsOpen)  			sp.Close ();  		sp.PortName = port;  		sp.BaudRate = 9600;  		sp.WriteTimeout = 3500;  		sp.Open ();  		sp.Write (cmd);  		sp.Close ();  	} catch (Exception exception) {  		Log.Error ("Error sending serial command "' exception);  		StaticHelper.Instance.SystemMessage = "Error sending serial command " + exception.Message;  	}  }  
Magic Number,CameraControl.Plugins.ExternalDevices,MultiCameraBoxShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\MultiCameraBoxShutterRelease.cs,SendCommand,The following statement contains a magic number: try {  	SerialPort sp = new SerialPort ();  	if (sp.IsOpen)  		sp.Close ();  	sp.PortName = port;  	sp.BaudRate = 9600;  	sp.WriteTimeout = 3500;  	sp.Open ();  	sp.Write (cmd);  	sp.Close ();  } catch (Exception exception) {  	Log.Error ("Error sending serial command "' exception);  	StaticHelper.Instance.SystemMessage = "Error sending serial command " + exception.Message;  }  
Magic Number,CameraControl.Plugins.ExternalDevices,MultiCameraBoxShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\MultiCameraBoxShutterRelease.cs,SendCommand,The following statement contains a magic number: try {  	SerialPort sp = new SerialPort ();  	if (sp.IsOpen)  		sp.Close ();  	sp.PortName = port;  	sp.BaudRate = 9600;  	sp.WriteTimeout = 3500;  	sp.Open ();  	sp.Write (cmd);  	sp.Close ();  } catch (Exception exception) {  	Log.Error ("Error sending serial command "' exception);  	StaticHelper.Instance.SystemMessage = "Error sending serial command " + exception.Message;  }  
Magic Number,CameraControl.Plugins.ExternalDevices,MultiCameraBoxShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\MultiCameraBoxShutterRelease.cs,SendCommand,The following statement contains a magic number: sp.BaudRate = 9600;  
Magic Number,CameraControl.Plugins.ExternalDevices,MultiCameraBoxShutterRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\MultiCameraBoxShutterRelease.cs,SendCommand,The following statement contains a magic number: sp.WriteTimeout = 3500;  
Magic Number,CameraControl.Plugins.ExternalDevices,UsbRelayRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\UsbRelayRelease.cs,OpenShutter,The following statement contains a magic number: try {  	if (config.AttachedObject != null)  		CloseShutter (config);  	SerialPort serialPort = new SerialPort (config.Get ("Port"));  	serialPort.Open ();  	serialPort.WriteTimeout = 3500;  	var data = StringToByteArray (config.Get ("Init"));  	serialPort.Write (data' 0' data.Length);  	data = StringToByteArray (config.Get ("CaptureOn"));  	serialPort.Write (data' 0' data.Length);  	config.AttachedObject = serialPort;  } catch (Exception ex) {  	Log.Debug ("UsbRelayRelease"' ex);  	StaticHelper.Instance.SystemMessage = "Error Shutter " + ex.Message;  }  
Magic Number,CameraControl.Plugins.ExternalDevices,UsbRelayRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\UsbRelayRelease.cs,OpenShutter,The following statement contains a magic number: serialPort.WriteTimeout = 3500;  
Magic Number,CameraControl.Plugins.ExternalDevices,UsbRelayRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\UsbRelayRelease.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,CameraControl.Plugins.ExternalDevices,UsbRelayRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\UsbRelayRelease.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,CameraControl.Plugins.ExternalDevices,UsbRelayRelease,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ExternalDevices\UsbRelayRelease.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The following statement contains a magic number: try {  	_sp.PortName = Port;  	_sp.BaudRate = 9600;  	_sp.WriteTimeout = 3500;  	_sp.ReadTimeout = 3500;  	_sp.Open ();  	_sp.WriteLine (ArduinoLabelCommand);  	Thread.Sleep (500);  	return _sp.ReadLine ();  } catch (Exception ex) {  	Log.Debug ("ArduinoLabel error"' ex);  	StaticHelper.Instance.SystemMessage = ex.Message;  } finally {  	if (_sp != null && _sp.IsOpen)  		_sp.Close ();  }  
Magic Number,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The following statement contains a magic number: try {  	_sp.PortName = Port;  	_sp.BaudRate = 9600;  	_sp.WriteTimeout = 3500;  	_sp.ReadTimeout = 3500;  	_sp.Open ();  	_sp.WriteLine (ArduinoLabelCommand);  	Thread.Sleep (500);  	return _sp.ReadLine ();  } catch (Exception ex) {  	Log.Debug ("ArduinoLabel error"' ex);  	StaticHelper.Instance.SystemMessage = ex.Message;  } finally {  	if (_sp != null && _sp.IsOpen)  		_sp.Close ();  }  
Magic Number,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The following statement contains a magic number: try {  	_sp.PortName = Port;  	_sp.BaudRate = 9600;  	_sp.WriteTimeout = 3500;  	_sp.ReadTimeout = 3500;  	_sp.Open ();  	_sp.WriteLine (ArduinoLabelCommand);  	Thread.Sleep (500);  	return _sp.ReadLine ();  } catch (Exception ex) {  	Log.Debug ("ArduinoLabel error"' ex);  	StaticHelper.Instance.SystemMessage = ex.Message;  } finally {  	if (_sp != null && _sp.IsOpen)  		_sp.Close ();  }  
Magic Number,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The following statement contains a magic number: try {  	_sp.PortName = Port;  	_sp.BaudRate = 9600;  	_sp.WriteTimeout = 3500;  	_sp.ReadTimeout = 3500;  	_sp.Open ();  	_sp.WriteLine (ArduinoLabelCommand);  	Thread.Sleep (500);  	return _sp.ReadLine ();  } catch (Exception ex) {  	Log.Debug ("ArduinoLabel error"' ex);  	StaticHelper.Instance.SystemMessage = ex.Message;  } finally {  	if (_sp != null && _sp.IsOpen)  		_sp.Close ();  }  
Magic Number,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The following statement contains a magic number: _sp.BaudRate = 9600;  
Magic Number,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The following statement contains a magic number: _sp.WriteTimeout = 3500;  
Magic Number,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The following statement contains a magic number: _sp.ReadTimeout = 3500;  
Magic Number,CameraControl.Plugins.FilenameTemplate,ArduinoLabel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\FilenameTemplate\ArduinoLabel.cs,Pharse,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Chromakey,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Chromakey.cs,Execute,The following statement contains a magic number: if (conf.UnsharpMask)  	res.ApplyFilter (new UnsharpMaskFilter (1.4f' 1.32f' 5));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Chromakey,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Chromakey.cs,Execute,The following statement contains a magic number: res.ApplyFilter (new UnsharpMaskFilter (1.4f' 1.32f' 5));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Chromakey,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Chromakey.cs,Execute,The following statement contains a magic number: backdrop.SaveJpg (dest' 90);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,ChromakeyViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ChromakeyViewModel.cs,ChromakeyViewModel,The following statement contains a magic number: if (Hue == 0 && Saturnation == 0 && Brigthness == 0) {  	Hue = 40;  	Saturnation = 70;  	Brigthness = 50;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,ChromakeyViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ChromakeyViewModel.cs,ChromakeyViewModel,The following statement contains a magic number: if (Hue == 0 && Saturnation == 0 && Brigthness == 0) {  	Hue = 40;  	Saturnation = 70;  	Brigthness = 50;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,ChromakeyViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ChromakeyViewModel.cs,ChromakeyViewModel,The following statement contains a magic number: if (Hue == 0 && Saturnation == 0 && Brigthness == 0) {  	Hue = 40;  	Saturnation = 70;  	Brigthness = 50;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,ChromakeyViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ChromakeyViewModel.cs,ChromakeyViewModel,The following statement contains a magic number: Hue = 40;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,ChromakeyViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ChromakeyViewModel.cs,ChromakeyViewModel,The following statement contains a magic number: Saturnation = 70;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,ChromakeyViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\ChromakeyViewModel.cs,ChromakeyViewModel,The following statement contains a magic number: Brigthness = 50;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  		conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  		conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  		conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  	}  	if (conf.CropMargins) {  		conf.Left = image.Width * conf.WidthProcent / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height * conf.HeightProcent / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	if (conf.LiveViewCrop) {  		var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  		conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Width = image.Width - (conf.Left * 2);  		conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  		conf.Height = image.Height - (conf.Top * 2);  	}  	MagickGeometry geometry = new MagickGeometry ();  	geometry.Width = conf.Width;  	geometry.Height = conf.Height;  	geometry.X = conf.Left;  	geometry.Y = conf.Top;  	image.Crop (geometry);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  	conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  	conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  	conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  	conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  	conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  	conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  	conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  	conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  	conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.FromLiveView && ServiceProvider.DeviceManager.SelectedCameraDevice != null) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  	conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  	conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  	conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Left = image.Width * prop.LiveviewSettings.HorizontalMin / 1000;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Width = image.Width * (prop.LiveviewSettings.HorizontalMax) / 1000;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Top = image.Height * prop.LiveviewSettings.VerticalMin / 1000;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Height = image.Height * (prop.LiveviewSettings.VerticalMax) / 1000;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.CropMargins) {  	conf.Left = image.Width * conf.WidthProcent / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height * conf.HeightProcent / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.CropMargins) {  	conf.Left = image.Width * conf.WidthProcent / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height * conf.HeightProcent / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.CropMargins) {  	conf.Left = image.Width * conf.WidthProcent / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height * conf.HeightProcent / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.CropMargins) {  	conf.Left = image.Width * conf.WidthProcent / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height * conf.HeightProcent / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Left = image.Width * conf.WidthProcent / 100;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Width = image.Width - (conf.Left * 2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Top = image.Height * conf.HeightProcent / 100;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Height = image.Height - (conf.Top * 2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.LiveViewCrop) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.LiveViewCrop) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.LiveViewCrop) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.LiveViewCrop) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.LiveViewCrop) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: if (conf.LiveViewCrop) {  	var prop = ServiceProvider.DeviceManager.SelectedCameraDevice.LoadProperties ();  	conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Width = image.Width - (conf.Left * 2);  	conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  	conf.Height = image.Height - (conf.Top * 2);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Left = image.Width / 2 * prop.LiveviewSettings.CropRatio / 100;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Width = image.Width - (conf.Left * 2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Top = image.Height / 2 * prop.LiveviewSettings.CropRatio / 100;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransform.cs,Execute,The following statement contains a magic number: conf.Height = image.Height - (conf.Top * 2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransformViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransformViewModel.cs,CropTransformViewModel,The following statement contains a magic number: WidthProcent = 5;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,CropTransformViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\CropTransformViewModel.cs,CropTransformViewModel,The following statement contains a magic number: HeightProcent = 5;  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	switch (conf.SelectedMode) {  	case 0:  		image.SepiaTone (new Percentage (conf.Param1));  		break;  	case 1:  		image.OilPaint (conf.Param1' 0.1);  		break;  	case 2:  		image.Sketch ();  		break;  	case 3:  		image.Charcoal ();  		break;  	case 4:  		image.Solarize ();  		break;  	case 5:  		image.Swirl (conf.Param1);  		break;  	case 6:  		image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  		break;  	case 7:  		image.BlueShift ();  		break;  	case 8:  		image.RotationalBlur (conf.Param1);  		break;  	case 9:  		image.Raise (conf.Param1);  		break;  	case 10:  		image.Negate ();  		break;  	case 11:  		image.ColorSpace = ColorSpace.Gray;  		break;  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following statement contains a magic number: image.OilPaint (conf.Param1' 0.1);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Sepia"'  	Name1 = "Threshold"'  	Min1 = 0'  	Max1 = 99'  	Default1 = 80'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Sepia"'  	Name1 = "Threshold"'  	Min1 = 0'  	Max1 = 99'  	Default1 = 80'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Oil Paint"'  	Name1 = "Radius"'  	Min1 = 3'  	Max1 = 35'  	Default1 = 15'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Oil Paint"'  	Name1 = "Radius"'  	Min1 = 3'  	Max1 = 35'  	Default1 = 15'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Oil Paint"'  	Name1 = "Radius"'  	Min1 = 3'  	Max1 = 35'  	Default1 = 15'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Sketch"'  	Name1 = "Sigma"'  	Min1 = 1'  	Max1 = 99'  	Default1 = 20'  	Param1Visible = false'  	Name2 = "Angle"'  	Min2 = 0'  	Max2 = 359'  	Default2 = 135'  	Param2Visible = false  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Sketch"'  	Name1 = "Sigma"'  	Min1 = 1'  	Max1 = 99'  	Default1 = 20'  	Param1Visible = false'  	Name2 = "Angle"'  	Min2 = 0'  	Max2 = 359'  	Default2 = 135'  	Param2Visible = false  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Sketch"'  	Name1 = "Sigma"'  	Min1 = 1'  	Max1 = 99'  	Default1 = 20'  	Param1Visible = false'  	Name2 = "Angle"'  	Min2 = 0'  	Max2 = 359'  	Default2 = 135'  	Param2Visible = false  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Sketch"'  	Name1 = "Sigma"'  	Min1 = 1'  	Max1 = 99'  	Default1 = 20'  	Param1Visible = false'  	Name2 = "Angle"'  	Min2 = 0'  	Max2 = 359'  	Default2 = 135'  	Param2Visible = false  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Solarize"'  	Name1 = "Threshold of the intensity"'  	Min1 = 0'  	Max1 = 99'  	Default1 = 10'  	Param1Visible = false  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Solarize"'  	Name1 = "Threshold of the intensity"'  	Min1 = 0'  	Max1 = 99'  	Default1 = 10'  	Param1Visible = false  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Swirl"'  	Name1 = "Degrees"'  	Min1 = 0'  	Max1 = 359'  	Default1 = 45'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Swirl"'  	Name1 = "Degrees"'  	Min1 = 0'  	Max1 = 359'  	Default1 = 45'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Wave"'  	Name1 = "Amplitude"'  	Min1 = 1'  	Max1 = 99'  	Default1 = 30'  	Param1Visible = true'  	Name2 = "Wave length"'  	Min2 = 0'  	Max2 = 365'  	Default2 = 135'  	Param2Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Wave"'  	Name1 = "Amplitude"'  	Min1 = 1'  	Max1 = 99'  	Default1 = 30'  	Param1Visible = true'  	Name2 = "Wave length"'  	Min2 = 0'  	Max2 = 365'  	Default2 = 135'  	Param2Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Wave"'  	Name1 = "Amplitude"'  	Min1 = 1'  	Max1 = 99'  	Default1 = 30'  	Param1Visible = true'  	Name2 = "Wave length"'  	Min2 = 0'  	Max2 = 365'  	Default2 = 135'  	Param2Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Wave"'  	Name1 = "Amplitude"'  	Min1 = 1'  	Max1 = 99'  	Default1 = 30'  	Param1Visible = true'  	Name2 = "Wave length"'  	Min2 = 0'  	Max2 = 365'  	Default2 = 135'  	Param2Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Radial Blur"'  	Name1 = "Degrees"'  	Min1 = 0'  	Max1 = 100'  	Default1 = 10'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Radial Blur"'  	Name1 = "Degrees"'  	Min1 = 0'  	Max1 = 100'  	Default1 = 10'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Raise"'  	Name1 = "Degrees"'  	Min1 = -200'  	Max1 = +200'  	Default1 = 20'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Raise"'  	Name1 = "Degrees"'  	Min1 = -200'  	Max1 = +200'  	Default1 = 20'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,EffectViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\EffectViewModel.cs,EffectViewModel,The following statement contains a magic number: Effects.Add (new EffectType () {  	Name = "Raise"'  	Name1 = "Degrees"'  	Min1 = -200'  	Max1 = +200'  	Default1 = 20'  	Param1Visible = true  });  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.Normalize)  		image.Normalize ();  	if (conf.AutoGamma)  		image.AutoGamma ();  	image.BrightnessContrast (new Percentage (conf.Brightness)' new Percentage (conf.Contrast));  	if (conf.SContrast > 0)  		image.SigmoidalContrast (true' conf.SContrast);  	if (conf.Edge)  		image.AdaptiveSharpen ();  	if (conf.Sharpen > 0)  		image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.Normalize)  		image.Normalize ();  	if (conf.AutoGamma)  		image.AutoGamma ();  	image.BrightnessContrast (new Percentage (conf.Brightness)' new Percentage (conf.Contrast));  	if (conf.SContrast > 0)  		image.SigmoidalContrast (true' conf.SContrast);  	if (conf.Edge)  		image.AdaptiveSharpen ();  	if (conf.Sharpen > 0)  		image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.Normalize)  		image.Normalize ();  	if (conf.AutoGamma)  		image.AutoGamma ();  	image.BrightnessContrast (new Percentage (conf.Brightness)' new Percentage (conf.Contrast));  	if (conf.SContrast > 0)  		image.SigmoidalContrast (true' conf.SContrast);  	if (conf.Edge)  		image.AdaptiveSharpen ();  	if (conf.Sharpen > 0)  		image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	if (conf.Normalize)  		image.Normalize ();  	if (conf.AutoGamma)  		image.AutoGamma ();  	image.BrightnessContrast (new Percentage (conf.Brightness)' new Percentage (conf.Contrast));  	if (conf.SContrast > 0)  		image.SigmoidalContrast (true' conf.SContrast);  	if (conf.Edge)  		image.AdaptiveSharpen ();  	if (conf.Sharpen > 0)  		image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: if (conf.Sharpen > 0)  	image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: if (conf.Sharpen > 0)  	image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: if (conf.Sharpen > 0)  	image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: if (conf.Sharpen > 0)  	image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,Enhance,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Enhance.cs,Execute,The following statement contains a magic number: image.UnsharpMask (1.5' 1.5' conf.Sharpen / 100.0' 0.2);  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	Gravity gravity = Gravity.Center;  	if (conf.A11) {  		gravity = Gravity.Northwest;  	}  	if (conf.A12) {  		gravity = Gravity.North;  	}  	if (conf.A13) {  		gravity = Gravity.Northeast;  	}  	if (conf.A21) {  		gravity = Gravity.West;  	}  	if (conf.A22) {  		gravity = Gravity.Center;  	}  	if (conf.A23) {  		gravity = Gravity.East;  	}  	if (conf.A31) {  		gravity = Gravity.Southwest;  	}  	if (conf.A32) {  		gravity = Gravity.South;  	}  	if (conf.A33) {  		gravity = Gravity.Southeast;  	}  	if (File.Exists (conf.OverlayFile)) {  		// Read the watermark that will be put on top of the image  		using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  			if (conf.StrechOverlay)  				watermark.Resize (image.Width' image.Height);  			// Optionally make the watermark more transparent  			if (conf.Transparency != 100)  				watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  			// Draw the watermark in the bottom right corner  			image.Composite (watermark' gravity' CompositeOperator.Over);  			//// Optionally make the watermark more transparent  			//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  			//// Or draw the watermark at a specific location  			//image.Composite(watermark' 200' 50' CompositeOperator.Over);  		}  	}  	string text = "";  	if (!string.IsNullOrEmpty (conf.Text)) {  		Regex regPattern = new Regex (@"\[(.*?)\]"' RegexOptions.Singleline);  		MatchCollection matchX = regPattern.Matches (conf.Text);  		text = matchX.Cast<Match> ().Aggregate (conf.Text' (current1' match) => item.FileNameTemplates.Where (template => String.Compare (template.Name' match.Value' StringComparison.InvariantCultureIgnoreCase) == 0).Aggregate (current1' (current' template) => current.Replace (match.Value' template.Value)));  		image.Settings.Font = conf.Font;  		image.Settings.FontPointsize = conf.FontSize;  		Color color = (Color)ColorConverter.ConvertFromString (conf.FontColor);  		image.Settings.FillColor = new MagickColor (color.R' color.G' color.B' color.A);  		image.Settings.StrokeColor = new MagickColor (color.R' color.G' color.B' color.A);  		image.Annotate (text' gravity);  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	Gravity gravity = Gravity.Center;  	if (conf.A11) {  		gravity = Gravity.Northwest;  	}  	if (conf.A12) {  		gravity = Gravity.North;  	}  	if (conf.A13) {  		gravity = Gravity.Northeast;  	}  	if (conf.A21) {  		gravity = Gravity.West;  	}  	if (conf.A22) {  		gravity = Gravity.Center;  	}  	if (conf.A23) {  		gravity = Gravity.East;  	}  	if (conf.A31) {  		gravity = Gravity.Southwest;  	}  	if (conf.A32) {  		gravity = Gravity.South;  	}  	if (conf.A33) {  		gravity = Gravity.Southeast;  	}  	if (File.Exists (conf.OverlayFile)) {  		// Read the watermark that will be put on top of the image  		using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  			if (conf.StrechOverlay)  				watermark.Resize (image.Width' image.Height);  			// Optionally make the watermark more transparent  			if (conf.Transparency != 100)  				watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  			// Draw the watermark in the bottom right corner  			image.Composite (watermark' gravity' CompositeOperator.Over);  			//// Optionally make the watermark more transparent  			//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  			//// Or draw the watermark at a specific location  			//image.Composite(watermark' 200' 50' CompositeOperator.Over);  		}  	}  	string text = "";  	if (!string.IsNullOrEmpty (conf.Text)) {  		Regex regPattern = new Regex (@"\[(.*?)\]"' RegexOptions.Singleline);  		MatchCollection matchX = regPattern.Matches (conf.Text);  		text = matchX.Cast<Match> ().Aggregate (conf.Text' (current1' match) => item.FileNameTemplates.Where (template => String.Compare (template.Name' match.Value' StringComparison.InvariantCultureIgnoreCase) == 0).Aggregate (current1' (current' template) => current.Replace (match.Value' template.Value)));  		image.Settings.Font = conf.Font;  		image.Settings.FontPointsize = conf.FontSize;  		Color color = (Color)ColorConverter.ConvertFromString (conf.FontColor);  		image.Settings.FillColor = new MagickColor (color.R' color.G' color.B' color.A);  		image.Settings.StrokeColor = new MagickColor (color.R' color.G' color.B' color.A);  		image.Annotate (text' gravity);  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	Gravity gravity = Gravity.Center;  	if (conf.A11) {  		gravity = Gravity.Northwest;  	}  	if (conf.A12) {  		gravity = Gravity.North;  	}  	if (conf.A13) {  		gravity = Gravity.Northeast;  	}  	if (conf.A21) {  		gravity = Gravity.West;  	}  	if (conf.A22) {  		gravity = Gravity.Center;  	}  	if (conf.A23) {  		gravity = Gravity.East;  	}  	if (conf.A31) {  		gravity = Gravity.Southwest;  	}  	if (conf.A32) {  		gravity = Gravity.South;  	}  	if (conf.A33) {  		gravity = Gravity.Southeast;  	}  	if (File.Exists (conf.OverlayFile)) {  		// Read the watermark that will be put on top of the image  		using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  			if (conf.StrechOverlay)  				watermark.Resize (image.Width' image.Height);  			// Optionally make the watermark more transparent  			if (conf.Transparency != 100)  				watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  			// Draw the watermark in the bottom right corner  			image.Composite (watermark' gravity' CompositeOperator.Over);  			//// Optionally make the watermark more transparent  			//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  			//// Or draw the watermark at a specific location  			//image.Composite(watermark' 200' 50' CompositeOperator.Over);  		}  	}  	string text = "";  	if (!string.IsNullOrEmpty (conf.Text)) {  		Regex regPattern = new Regex (@"\[(.*?)\]"' RegexOptions.Singleline);  		MatchCollection matchX = regPattern.Matches (conf.Text);  		text = matchX.Cast<Match> ().Aggregate (conf.Text' (current1' match) => item.FileNameTemplates.Where (template => String.Compare (template.Name' match.Value' StringComparison.InvariantCultureIgnoreCase) == 0).Aggregate (current1' (current' template) => current.Replace (match.Value' template.Value)));  		image.Settings.Font = conf.Font;  		image.Settings.FontPointsize = conf.FontSize;  		Color color = (Color)ColorConverter.ConvertFromString (conf.FontColor);  		image.Settings.FillColor = new MagickColor (color.R' color.G' color.B' color.A);  		image.Settings.StrokeColor = new MagickColor (color.R' color.G' color.B' color.A);  		image.Annotate (text' gravity);  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	Gravity gravity = Gravity.Center;  	if (conf.A11) {  		gravity = Gravity.Northwest;  	}  	if (conf.A12) {  		gravity = Gravity.North;  	}  	if (conf.A13) {  		gravity = Gravity.Northeast;  	}  	if (conf.A21) {  		gravity = Gravity.West;  	}  	if (conf.A22) {  		gravity = Gravity.Center;  	}  	if (conf.A23) {  		gravity = Gravity.East;  	}  	if (conf.A31) {  		gravity = Gravity.Southwest;  	}  	if (conf.A32) {  		gravity = Gravity.South;  	}  	if (conf.A33) {  		gravity = Gravity.Southeast;  	}  	if (File.Exists (conf.OverlayFile)) {  		// Read the watermark that will be put on top of the image  		using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  			if (conf.StrechOverlay)  				watermark.Resize (image.Width' image.Height);  			// Optionally make the watermark more transparent  			if (conf.Transparency != 100)  				watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  			// Draw the watermark in the bottom right corner  			image.Composite (watermark' gravity' CompositeOperator.Over);  			//// Optionally make the watermark more transparent  			//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  			//// Or draw the watermark at a specific location  			//image.Composite(watermark' 200' 50' CompositeOperator.Over);  		}  	}  	string text = "";  	if (!string.IsNullOrEmpty (conf.Text)) {  		Regex regPattern = new Regex (@"\[(.*?)\]"' RegexOptions.Singleline);  		MatchCollection matchX = regPattern.Matches (conf.Text);  		text = matchX.Cast<Match> ().Aggregate (conf.Text' (current1' match) => item.FileNameTemplates.Where (template => String.Compare (template.Name' match.Value' StringComparison.InvariantCultureIgnoreCase) == 0).Aggregate (current1' (current' template) => current.Replace (match.Value' template.Value)));  		image.Settings.Font = conf.Font;  		image.Settings.FontPointsize = conf.FontSize;  		Color color = (Color)ColorConverter.ConvertFromString (conf.FontColor);  		image.Settings.FillColor = new MagickColor (color.R' color.G' color.B' color.A);  		image.Settings.StrokeColor = new MagickColor (color.R' color.G' color.B' color.A);  		image.Annotate (text' gravity);  	}  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: if (File.Exists (conf.OverlayFile)) {  	// Read the watermark that will be put on top of the image  	using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  		if (conf.StrechOverlay)  			watermark.Resize (image.Width' image.Height);  		// Optionally make the watermark more transparent  		if (conf.Transparency != 100)  			watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  		// Draw the watermark in the bottom right corner  		image.Composite (watermark' gravity' CompositeOperator.Over);  		//// Optionally make the watermark more transparent  		//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  		//// Or draw the watermark at a specific location  		//image.Composite(watermark' 200' 50' CompositeOperator.Over);  	}  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: if (File.Exists (conf.OverlayFile)) {  	// Read the watermark that will be put on top of the image  	using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  		if (conf.StrechOverlay)  			watermark.Resize (image.Width' image.Height);  		// Optionally make the watermark more transparent  		if (conf.Transparency != 100)  			watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  		// Draw the watermark in the bottom right corner  		image.Composite (watermark' gravity' CompositeOperator.Over);  		//// Optionally make the watermark more transparent  		//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  		//// Or draw the watermark at a specific location  		//image.Composite(watermark' 200' 50' CompositeOperator.Over);  	}  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: if (File.Exists (conf.OverlayFile)) {  	// Read the watermark that will be put on top of the image  	using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  		if (conf.StrechOverlay)  			watermark.Resize (image.Width' image.Height);  		// Optionally make the watermark more transparent  		if (conf.Transparency != 100)  			watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  		// Draw the watermark in the bottom right corner  		image.Composite (watermark' gravity' CompositeOperator.Over);  		//// Optionally make the watermark more transparent  		//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  		//// Or draw the watermark at a specific location  		//image.Composite(watermark' 200' 50' CompositeOperator.Over);  	}  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: if (File.Exists (conf.OverlayFile)) {  	// Read the watermark that will be put on top of the image  	using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  		if (conf.StrechOverlay)  			watermark.Resize (image.Width' image.Height);  		// Optionally make the watermark more transparent  		if (conf.Transparency != 100)  			watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  		// Draw the watermark in the bottom right corner  		image.Composite (watermark' gravity' CompositeOperator.Over);  		//// Optionally make the watermark more transparent  		//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  		//// Or draw the watermark at a specific location  		//image.Composite(watermark' 200' 50' CompositeOperator.Over);  	}  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  	if (conf.StrechOverlay)  		watermark.Resize (image.Width' image.Height);  	// Optionally make the watermark more transparent  	if (conf.Transparency != 100)  		watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  	// Draw the watermark in the bottom right corner  	image.Composite (watermark' gravity' CompositeOperator.Over);  	//// Optionally make the watermark more transparent  	//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  	//// Or draw the watermark at a specific location  	//image.Composite(watermark' 200' 50' CompositeOperator.Over);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  	if (conf.StrechOverlay)  		watermark.Resize (image.Width' image.Height);  	// Optionally make the watermark more transparent  	if (conf.Transparency != 100)  		watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  	// Draw the watermark in the bottom right corner  	image.Composite (watermark' gravity' CompositeOperator.Over);  	//// Optionally make the watermark more transparent  	//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  	//// Or draw the watermark at a specific location  	//image.Composite(watermark' 200' 50' CompositeOperator.Over);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  	if (conf.StrechOverlay)  		watermark.Resize (image.Width' image.Height);  	// Optionally make the watermark more transparent  	if (conf.Transparency != 100)  		watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  	// Draw the watermark in the bottom right corner  	image.Composite (watermark' gravity' CompositeOperator.Over);  	//// Optionally make the watermark more transparent  	//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  	//// Or draw the watermark at a specific location  	//image.Composite(watermark' 200' 50' CompositeOperator.Over);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: using (MagickImage watermark = new MagickImage (conf.OverlayFile)) {  	if (conf.StrechOverlay)  		watermark.Resize (image.Width' image.Height);  	// Optionally make the watermark more transparent  	if (conf.Transparency != 100)  		watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  	// Draw the watermark in the bottom right corner  	image.Composite (watermark' gravity' CompositeOperator.Over);  	//// Optionally make the watermark more transparent  	//watermark.Evaluate(Channels.Alpha' EvaluateOperator.Divide' 4);  	//// Or draw the watermark at a specific location  	//image.Composite(watermark' 200' 50' CompositeOperator.Over);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: if (conf.Transparency != 100)  	watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: if (conf.Transparency != 100)  	watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: if (conf.Transparency != 100)  	watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: if (conf.Transparency != 100)  	watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,OverlayTransform,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\OverlayTransform.cs,ExecuteThread,The following statement contains a magic number: watermark.Evaluate (Channels.Alpha' EvaluateOperator.Add' -(255 * (100 - conf.Transparency) / 100));  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,PixelBinning,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\PixelBinning.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	int newx = image.Width / (conf.SelectedMode + 2);  	int newy = image.Height / (conf.SelectedMode + 2);  	int cropx = newx * (conf.SelectedMode + 2);  	int cropy = newy * (conf.SelectedMode + 2);  	if (cropx != image.Width || cropy != image.Height)  		image.Crop (cropx' cropy' Gravity.Center);  	image.FilterType = FilterType.Box;  	image.Resize (newx' newy);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,PixelBinning,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\PixelBinning.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	int newx = image.Width / (conf.SelectedMode + 2);  	int newy = image.Height / (conf.SelectedMode + 2);  	int cropx = newx * (conf.SelectedMode + 2);  	int cropy = newy * (conf.SelectedMode + 2);  	if (cropx != image.Width || cropy != image.Height)  		image.Crop (cropx' cropy' Gravity.Center);  	image.FilterType = FilterType.Box;  	image.Resize (newx' newy);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,PixelBinning,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\PixelBinning.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	int newx = image.Width / (conf.SelectedMode + 2);  	int newy = image.Height / (conf.SelectedMode + 2);  	int cropx = newx * (conf.SelectedMode + 2);  	int cropy = newy * (conf.SelectedMode + 2);  	if (cropx != image.Width || cropy != image.Height)  		image.Crop (cropx' cropy' Gravity.Center);  	image.FilterType = FilterType.Box;  	image.Resize (newx' newy);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ImageTransformPlugins,PixelBinning,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\PixelBinning.cs,Execute,The following statement contains a magic number: using (MagickImage image = new MagickImage (infile)) {  	int newx = image.Width / (conf.SelectedMode + 2);  	int newy = image.Height / (conf.SelectedMode + 2);  	int cropx = newx * (conf.SelectedMode + 2);  	int cropy = newy * (conf.SelectedMode + 2);  	if (cropx != image.Width || cropy != image.Height)  		image.Crop (cropx' cropy' Gravity.Center);  	image.FilterType = FilterType.Box;  	image.Resize (newx' newy);  	image.Format = MagickFormat.Jpeg;  	image.Write (dest);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,ArduinoCommandViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ArduinoCommandViewModel.cs,ArduinoCommandViewModel,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	Buttons.Add (new ArduinoButton () {  		Title = "Button " + (i + 1)'  		Visible = true  	});  }  
Magic Number,CameraControl.Plugins.ToolPlugins,ArduinoViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ArduinoViewModel.cs,OpenPort,The following statement contains a magic number: try {  	if (Active && !string.IsNullOrEmpty (Port) && !_sp.IsOpen) {  		_sp.PortName = Port;  		_sp.BaudRate = 9600;  		_sp.WriteTimeout = 3500;  		_sp.Open ();  		_sp.DataReceived += sp_DataReceived;  	}  } catch (Exception ex) {  	Log.Error ("Port open error"' ex);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,ArduinoViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ArduinoViewModel.cs,OpenPort,The following statement contains a magic number: try {  	if (Active && !string.IsNullOrEmpty (Port) && !_sp.IsOpen) {  		_sp.PortName = Port;  		_sp.BaudRate = 9600;  		_sp.WriteTimeout = 3500;  		_sp.Open ();  		_sp.DataReceived += sp_DataReceived;  	}  } catch (Exception ex) {  	Log.Error ("Port open error"' ex);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,ArduinoViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ArduinoViewModel.cs,OpenPort,The following statement contains a magic number: if (Active && !string.IsNullOrEmpty (Port) && !_sp.IsOpen) {  	_sp.PortName = Port;  	_sp.BaudRate = 9600;  	_sp.WriteTimeout = 3500;  	_sp.Open ();  	_sp.DataReceived += sp_DataReceived;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,ArduinoViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ArduinoViewModel.cs,OpenPort,The following statement contains a magic number: if (Active && !string.IsNullOrEmpty (Port) && !_sp.IsOpen) {  	_sp.PortName = Port;  	_sp.BaudRate = 9600;  	_sp.WriteTimeout = 3500;  	_sp.Open ();  	_sp.DataReceived += sp_DataReceived;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,ArduinoViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ArduinoViewModel.cs,OpenPort,The following statement contains a magic number: _sp.BaudRate = 9600;  
Magic Number,CameraControl.Plugins.ToolPlugins,ArduinoViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ArduinoViewModel.cs,OpenPort,The following statement contains a magic number: _sp.WriteTimeout = 3500;  
Magic Number,CameraControl.Plugins.ToolPlugins,CombineZpViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\CombineZpViewModel.cs,WaitAndPreview,The following statement contains a magic number: Thread.Sleep (700);  
Magic Number,CameraControl.Plugins.ToolPlugins,CombineZpViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\CombineZpViewModel.cs,WaitAndPreview,The following statement contains a magic number: try {  	while (Files [Files.Count - 1].Loading) {  		Thread.Sleep (200);  	}  	Preview ();  } catch (Exception ex) {  	Log.Error ("WaitAndPreview"' ex);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,CombineZpViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\CombineZpViewModel.cs,WaitAndPreview,The following statement contains a magic number: while (Files [Files.Count - 1].Loading) {  	Thread.Sleep (200);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,CombineZpViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\CombineZpViewModel.cs,WaitAndPreview,The following statement contains a magic number: Thread.Sleep (200);  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,WaitAndPreview,The following statement contains a magic number: Thread.Sleep (700);  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,WaitAndPreview,The following statement contains a magic number: try {  	while (Files [Files.Count - 1].Loading) {  		Thread.Sleep (200);  	}  	Preview ();  } catch (Exception ex) {  	Log.Error ("WaitAndPreview"' ex);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,WaitAndPreview,The following statement contains a magic number: while (Files [Files.Count - 1].Loading) {  	Thread.Sleep (200);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,WaitAndPreview,The following statement contains a magic number: Thread.Sleep (200);  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: switch (Mode) {  case 0:  	Exposure = 100;  	Contrast = 0;  	Saturation = 100;  	Mu = 50;  	Sigma = 20;  	HardMask = false;  	break;  case 1:  	Exposure = 0;  	Contrast = 100;  	Saturation = 0;  	Mu = 50;  	Sigma = 20;  	HardMask = true;  	break;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: switch (Mode) {  case 0:  	Exposure = 100;  	Contrast = 0;  	Saturation = 100;  	Mu = 50;  	Sigma = 20;  	HardMask = false;  	break;  case 1:  	Exposure = 0;  	Contrast = 100;  	Saturation = 0;  	Mu = 50;  	Sigma = 20;  	HardMask = true;  	break;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: switch (Mode) {  case 0:  	Exposure = 100;  	Contrast = 0;  	Saturation = 100;  	Mu = 50;  	Sigma = 20;  	HardMask = false;  	break;  case 1:  	Exposure = 0;  	Contrast = 100;  	Saturation = 0;  	Mu = 50;  	Sigma = 20;  	HardMask = true;  	break;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: switch (Mode) {  case 0:  	Exposure = 100;  	Contrast = 0;  	Saturation = 100;  	Mu = 50;  	Sigma = 20;  	HardMask = false;  	break;  case 1:  	Exposure = 0;  	Contrast = 100;  	Saturation = 0;  	Mu = 50;  	Sigma = 20;  	HardMask = true;  	break;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: switch (Mode) {  case 0:  	Exposure = 100;  	Contrast = 0;  	Saturation = 100;  	Mu = 50;  	Sigma = 20;  	HardMask = false;  	break;  case 1:  	Exposure = 0;  	Contrast = 100;  	Saturation = 0;  	Mu = 50;  	Sigma = 20;  	HardMask = true;  	break;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: switch (Mode) {  case 0:  	Exposure = 100;  	Contrast = 0;  	Saturation = 100;  	Mu = 50;  	Sigma = 20;  	HardMask = false;  	break;  case 1:  	Exposure = 0;  	Contrast = 100;  	Saturation = 0;  	Mu = 50;  	Sigma = 20;  	HardMask = true;  	break;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: switch (Mode) {  case 0:  	Exposure = 100;  	Contrast = 0;  	Saturation = 100;  	Mu = 50;  	Sigma = 20;  	HardMask = false;  	break;  case 1:  	Exposure = 0;  	Contrast = 100;  	Saturation = 0;  	Mu = 50;  	Sigma = 20;  	HardMask = true;  	break;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: Exposure = 100;  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: Saturation = 100;  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: Mu = 50;  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: Sigma = 20;  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: Contrast = 100;  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: Mu = 50;  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: Sigma = 20;  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following statement contains a magic number: ContrastWindowSize = 5;  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: try {  	OnProgressChange ("Enfuse images ..");  	OnProgressChange ("This may take few minutes too");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (Files [0].FileName) + Files.Count + "_enfuse.jpg");  	_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (_resulfile));  	StringBuilder stringBuilder = new StringBuilder ();  	stringBuilder.Append (" -o " + _resulfile);  	stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  	stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  	stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  	//stringBuilder.Append(" --entropy-weight=" + decimal.Round((decimal)(_settings.EnfuseEnt / 100)' 2));  	stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  	stringBuilder.Append (" --contrast-window-size=" + ContrastWindowSize);  	stringBuilder.Append (" --gray-projector=l-star");  	if (HardMask) {  		stringBuilder.Append (" --hard-mask");  	}  	if (AlignImages)  		stringBuilder.Append (" " + _filenames [0] + "????.tif");  	else  		stringBuilder.Append (" " + Path.GetDirectoryName (_filenames [0]) + "\\image_????.jpg");  	//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif";  	Process newprocess = new Process ();  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = _pathtoenfuse'  		Arguments = stringBuilder.ToString ().Replace ("'"' ".")'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	_enfuseProcess = newprocess;  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  	if (File.Exists (_resulfile)) {  		//string localfile = Path.Combine(Path.GetDirectoryName(_files[0].FileName)'  		//                                Path.GetFileName(_resulfile));  		//File.Copy(_resulfile' localfile' true);  		//ServiceProvider.Settings.DefaultSession.AddFile(localfile);  		PreviewBitmap = BitmapLoader.Instance.LoadImage (_resulfile);  	} else {  		OnProgressChange ("No output file something went wrong !");  	}  	_enfuseProcess = null;  } catch (Exception exception) {  	OnProgressChange ("Error copy files " + exception.Message);  	Log.Error ("Error copy files "' exception);  	_shouldStop = true;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: try {  	OnProgressChange ("Enfuse images ..");  	OnProgressChange ("This may take few minutes too");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (Files [0].FileName) + Files.Count + "_enfuse.jpg");  	_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (_resulfile));  	StringBuilder stringBuilder = new StringBuilder ();  	stringBuilder.Append (" -o " + _resulfile);  	stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  	stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  	stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  	//stringBuilder.Append(" --entropy-weight=" + decimal.Round((decimal)(_settings.EnfuseEnt / 100)' 2));  	stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  	stringBuilder.Append (" --contrast-window-size=" + ContrastWindowSize);  	stringBuilder.Append (" --gray-projector=l-star");  	if (HardMask) {  		stringBuilder.Append (" --hard-mask");  	}  	if (AlignImages)  		stringBuilder.Append (" " + _filenames [0] + "????.tif");  	else  		stringBuilder.Append (" " + Path.GetDirectoryName (_filenames [0]) + "\\image_????.jpg");  	//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif";  	Process newprocess = new Process ();  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = _pathtoenfuse'  		Arguments = stringBuilder.ToString ().Replace ("'"' ".")'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	_enfuseProcess = newprocess;  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  	if (File.Exists (_resulfile)) {  		//string localfile = Path.Combine(Path.GetDirectoryName(_files[0].FileName)'  		//                                Path.GetFileName(_resulfile));  		//File.Copy(_resulfile' localfile' true);  		//ServiceProvider.Settings.DefaultSession.AddFile(localfile);  		PreviewBitmap = BitmapLoader.Instance.LoadImage (_resulfile);  	} else {  		OnProgressChange ("No output file something went wrong !");  	}  	_enfuseProcess = null;  } catch (Exception exception) {  	OnProgressChange ("Error copy files " + exception.Message);  	Log.Error ("Error copy files "' exception);  	_shouldStop = true;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: try {  	OnProgressChange ("Enfuse images ..");  	OnProgressChange ("This may take few minutes too");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (Files [0].FileName) + Files.Count + "_enfuse.jpg");  	_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (_resulfile));  	StringBuilder stringBuilder = new StringBuilder ();  	stringBuilder.Append (" -o " + _resulfile);  	stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  	stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  	stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  	//stringBuilder.Append(" --entropy-weight=" + decimal.Round((decimal)(_settings.EnfuseEnt / 100)' 2));  	stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  	stringBuilder.Append (" --contrast-window-size=" + ContrastWindowSize);  	stringBuilder.Append (" --gray-projector=l-star");  	if (HardMask) {  		stringBuilder.Append (" --hard-mask");  	}  	if (AlignImages)  		stringBuilder.Append (" " + _filenames [0] + "????.tif");  	else  		stringBuilder.Append (" " + Path.GetDirectoryName (_filenames [0]) + "\\image_????.jpg");  	//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif";  	Process newprocess = new Process ();  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = _pathtoenfuse'  		Arguments = stringBuilder.ToString ().Replace ("'"' ".")'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	_enfuseProcess = newprocess;  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  	if (File.Exists (_resulfile)) {  		//string localfile = Path.Combine(Path.GetDirectoryName(_files[0].FileName)'  		//                                Path.GetFileName(_resulfile));  		//File.Copy(_resulfile' localfile' true);  		//ServiceProvider.Settings.DefaultSession.AddFile(localfile);  		PreviewBitmap = BitmapLoader.Instance.LoadImage (_resulfile);  	} else {  		OnProgressChange ("No output file something went wrong !");  	}  	_enfuseProcess = null;  } catch (Exception exception) {  	OnProgressChange ("Error copy files " + exception.Message);  	Log.Error ("Error copy files "' exception);  	_shouldStop = true;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: try {  	OnProgressChange ("Enfuse images ..");  	OnProgressChange ("This may take few minutes too");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (Files [0].FileName) + Files.Count + "_enfuse.jpg");  	_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (_resulfile));  	StringBuilder stringBuilder = new StringBuilder ();  	stringBuilder.Append (" -o " + _resulfile);  	stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  	stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  	stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  	//stringBuilder.Append(" --entropy-weight=" + decimal.Round((decimal)(_settings.EnfuseEnt / 100)' 2));  	stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  	stringBuilder.Append (" --contrast-window-size=" + ContrastWindowSize);  	stringBuilder.Append (" --gray-projector=l-star");  	if (HardMask) {  		stringBuilder.Append (" --hard-mask");  	}  	if (AlignImages)  		stringBuilder.Append (" " + _filenames [0] + "????.tif");  	else  		stringBuilder.Append (" " + Path.GetDirectoryName (_filenames [0]) + "\\image_????.jpg");  	//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif";  	Process newprocess = new Process ();  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = _pathtoenfuse'  		Arguments = stringBuilder.ToString ().Replace ("'"' ".")'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	_enfuseProcess = newprocess;  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  	if (File.Exists (_resulfile)) {  		//string localfile = Path.Combine(Path.GetDirectoryName(_files[0].FileName)'  		//                                Path.GetFileName(_resulfile));  		//File.Copy(_resulfile' localfile' true);  		//ServiceProvider.Settings.DefaultSession.AddFile(localfile);  		PreviewBitmap = BitmapLoader.Instance.LoadImage (_resulfile);  	} else {  		OnProgressChange ("No output file something went wrong !");  	}  	_enfuseProcess = null;  } catch (Exception exception) {  	OnProgressChange ("Error copy files " + exception.Message);  	Log.Error ("Error copy files "' exception);  	_shouldStop = true;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: try {  	OnProgressChange ("Enfuse images ..");  	OnProgressChange ("This may take few minutes too");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (Files [0].FileName) + Files.Count + "_enfuse.jpg");  	_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (_resulfile));  	StringBuilder stringBuilder = new StringBuilder ();  	stringBuilder.Append (" -o " + _resulfile);  	stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  	stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  	stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  	//stringBuilder.Append(" --entropy-weight=" + decimal.Round((decimal)(_settings.EnfuseEnt / 100)' 2));  	stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  	stringBuilder.Append (" --contrast-window-size=" + ContrastWindowSize);  	stringBuilder.Append (" --gray-projector=l-star");  	if (HardMask) {  		stringBuilder.Append (" --hard-mask");  	}  	if (AlignImages)  		stringBuilder.Append (" " + _filenames [0] + "????.tif");  	else  		stringBuilder.Append (" " + Path.GetDirectoryName (_filenames [0]) + "\\image_????.jpg");  	//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif";  	Process newprocess = new Process ();  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = _pathtoenfuse'  		Arguments = stringBuilder.ToString ().Replace ("'"' ".")'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	_enfuseProcess = newprocess;  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  	if (File.Exists (_resulfile)) {  		//string localfile = Path.Combine(Path.GetDirectoryName(_files[0].FileName)'  		//                                Path.GetFileName(_resulfile));  		//File.Copy(_resulfile' localfile' true);  		//ServiceProvider.Settings.DefaultSession.AddFile(localfile);  		PreviewBitmap = BitmapLoader.Instance.LoadImage (_resulfile);  	} else {  		OnProgressChange ("No output file something went wrong !");  	}  	_enfuseProcess = null;  } catch (Exception exception) {  	OnProgressChange ("Error copy files " + exception.Message);  	Log.Error ("Error copy files "' exception);  	_shouldStop = true;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: try {  	OnProgressChange ("Enfuse images ..");  	OnProgressChange ("This may take few minutes too");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (Files [0].FileName) + Files.Count + "_enfuse.jpg");  	_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (_resulfile));  	StringBuilder stringBuilder = new StringBuilder ();  	stringBuilder.Append (" -o " + _resulfile);  	stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  	stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  	stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  	//stringBuilder.Append(" --entropy-weight=" + decimal.Round((decimal)(_settings.EnfuseEnt / 100)' 2));  	stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  	stringBuilder.Append (" --contrast-window-size=" + ContrastWindowSize);  	stringBuilder.Append (" --gray-projector=l-star");  	if (HardMask) {  		stringBuilder.Append (" --hard-mask");  	}  	if (AlignImages)  		stringBuilder.Append (" " + _filenames [0] + "????.tif");  	else  		stringBuilder.Append (" " + Path.GetDirectoryName (_filenames [0]) + "\\image_????.jpg");  	//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif";  	Process newprocess = new Process ();  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = _pathtoenfuse'  		Arguments = stringBuilder.ToString ().Replace ("'"' ".")'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	_enfuseProcess = newprocess;  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  	if (File.Exists (_resulfile)) {  		//string localfile = Path.Combine(Path.GetDirectoryName(_files[0].FileName)'  		//                                Path.GetFileName(_resulfile));  		//File.Copy(_resulfile' localfile' true);  		//ServiceProvider.Settings.DefaultSession.AddFile(localfile);  		PreviewBitmap = BitmapLoader.Instance.LoadImage (_resulfile);  	} else {  		OnProgressChange ("No output file something went wrong !");  	}  	_enfuseProcess = null;  } catch (Exception exception) {  	OnProgressChange ("Error copy files " + exception.Message);  	Log.Error ("Error copy files "' exception);  	_shouldStop = true;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: try {  	OnProgressChange ("Enfuse images ..");  	OnProgressChange ("This may take few minutes too");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (Files [0].FileName) + Files.Count + "_enfuse.jpg");  	_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (_resulfile));  	StringBuilder stringBuilder = new StringBuilder ();  	stringBuilder.Append (" -o " + _resulfile);  	stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  	stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  	stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  	//stringBuilder.Append(" --entropy-weight=" + decimal.Round((decimal)(_settings.EnfuseEnt / 100)' 2));  	stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  	stringBuilder.Append (" --contrast-window-size=" + ContrastWindowSize);  	stringBuilder.Append (" --gray-projector=l-star");  	if (HardMask) {  		stringBuilder.Append (" --hard-mask");  	}  	if (AlignImages)  		stringBuilder.Append (" " + _filenames [0] + "????.tif");  	else  		stringBuilder.Append (" " + Path.GetDirectoryName (_filenames [0]) + "\\image_????.jpg");  	//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif";  	Process newprocess = new Process ();  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = _pathtoenfuse'  		Arguments = stringBuilder.ToString ().Replace ("'"' ".")'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	_enfuseProcess = newprocess;  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  	if (File.Exists (_resulfile)) {  		//string localfile = Path.Combine(Path.GetDirectoryName(_files[0].FileName)'  		//                                Path.GetFileName(_resulfile));  		//File.Copy(_resulfile' localfile' true);  		//ServiceProvider.Settings.DefaultSession.AddFile(localfile);  		PreviewBitmap = BitmapLoader.Instance.LoadImage (_resulfile);  	} else {  		OnProgressChange ("No output file something went wrong !");  	}  	_enfuseProcess = null;  } catch (Exception exception) {  	OnProgressChange ("Error copy files " + exception.Message);  	Log.Error ("Error copy files "' exception);  	_shouldStop = true;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: try {  	OnProgressChange ("Enfuse images ..");  	OnProgressChange ("This may take few minutes too");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (Files [0].FileName) + Files.Count + "_enfuse.jpg");  	_resulfile = StaticHelper.GetUniqueFilename (Path.GetDirectoryName (Files [0].FileName) + "\\" + Path.GetFileNameWithoutExtension (Files [0].FileName) + "_enfuse"' 0' ".jpg");  	_resulfile = Path.Combine (_tempdir' Path.GetFileName (_resulfile));  	StringBuilder stringBuilder = new StringBuilder ();  	stringBuilder.Append (" -o " + _resulfile);  	stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  	stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  	stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  	//stringBuilder.Append(" --entropy-weight=" + decimal.Round((decimal)(_settings.EnfuseEnt / 100)' 2));  	stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  	stringBuilder.Append (" --contrast-window-size=" + ContrastWindowSize);  	stringBuilder.Append (" --gray-projector=l-star");  	if (HardMask) {  		stringBuilder.Append (" --hard-mask");  	}  	if (AlignImages)  		stringBuilder.Append (" " + _filenames [0] + "????.tif");  	else  		stringBuilder.Append (" " + Path.GetDirectoryName (_filenames [0]) + "\\image_????.jpg");  	//string param = " -o " + _resulfile + " --exposure-weight=0 --saturation-weight=0 --contrast-weight=1 --hard-mask --contrast-window-size=9 " + _filenames[0] + "????.tif";  	Process newprocess = new Process ();  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = _pathtoenfuse'  		Arguments = stringBuilder.ToString ().Replace ("'"' ".")'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	_enfuseProcess = newprocess;  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  	if (File.Exists (_resulfile)) {  		//string localfile = Path.Combine(Path.GetDirectoryName(_files[0].FileName)'  		//                                Path.GetFileName(_resulfile));  		//File.Copy(_resulfile' localfile' true);  		//ServiceProvider.Settings.DefaultSession.AddFile(localfile);  		PreviewBitmap = BitmapLoader.Instance.LoadImage (_resulfile);  	} else {  		OnProgressChange ("No output file something went wrong !");  	}  	_enfuseProcess = null;  } catch (Exception exception) {  	OnProgressChange ("Error copy files " + exception.Message);  	Log.Error ("Error copy files "' exception);  	_shouldStop = true;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: stringBuilder.Append (" --exposure-weight=" + decimal.Round ((decimal)(Exposure / 100.0)' 2));  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: stringBuilder.Append (" --saturation-weight=" + decimal.Round ((decimal)(Saturation / 100.2)' 2));  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: stringBuilder.Append (" --contrast-weight=" + decimal.Round ((decimal)(Contrast / 100.0)' 2));  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,EnfuseImge,The following statement contains a magic number: stringBuilder.Append (" --exposure-sigma=" + decimal.Round ((decimal)(Sigma / 100.0)' 2));  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginWindow,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginWindow.xaml.cs,zoomAndPanControl_MouseDoubleClick,The following statement contains a magic number: if (zoomAndPanControl.ContentScale <= zoomAndPanControl.FitScale ()) {  	zoomAndPanControl.ZoomAboutPoint (4' curContentMousePoint);  } else {  	zoomAndPanControl.ScaleToFit ();  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginWindow,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginWindow.xaml.cs,zoomAndPanControl_MouseDoubleClick,The following statement contains a magic number: zoomAndPanControl.ZoomAboutPoint (4' curContentMousePoint);  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginWindow,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginWindow.xaml.cs,zoomAndPanControl_MouseWheel,The following statement contains a magic number: if (e.Delta > 0) {  	zoomAndPanControl.ZoomIn (curContentMousePoint);  } else if (e.Delta < 0) {  	// don't allow zoomout les that original image   	if (zoomAndPanControl.ContentScale - 0.2 > zoomAndPanControl.FitScale ()) {  		zoomAndPanControl.ZoomOut (curContentMousePoint);  	} else {  		zoomAndPanControl.ScaleToFit ();  	}  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginWindow,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginWindow.xaml.cs,zoomAndPanControl_MouseWheel,The following statement contains a magic number: if (e.Delta < 0) {  	// don't allow zoomout les that original image   	if (zoomAndPanControl.ContentScale - 0.2 > zoomAndPanControl.FitScale ()) {  		zoomAndPanControl.ZoomOut (curContentMousePoint);  	} else {  		zoomAndPanControl.ScaleToFit ();  	}  }  
Magic Number,CameraControl.Plugins.ToolPlugins,EnfusePluginWindow,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginWindow.xaml.cs,zoomAndPanControl_MouseWheel,The following statement contains a magic number: if (zoomAndPanControl.ContentScale - 0.2 > zoomAndPanControl.FitScale ()) {  	zoomAndPanControl.ZoomOut (curContentMousePoint);  } else {  	zoomAndPanControl.ScaleToFit ();  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: VideoTypes = new ObservableCollection<VideoType> {  	new VideoType ("4K 16:9"' 3840' 2160' ".mp4")'  	new VideoType ("HD 1080 16:9"' 1920' 1080' ".mp4")'  	new VideoType ("UXGA 4:3"' 1600' 1200' ".mp4")'  	new VideoType ("HD 720 16:9"' 1280' 720' ".mp4")'  	new VideoType ("Super VGA 4:3"' 800' 600' ".mp4")'  	new VideoType ("Animated gif"' 800' 600' ".gif")'  };  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenMovieViewModel,The following statement contains a magic number: Fps = 15;  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,_backgroundWorker_DoWork,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenerateGif,The following statement contains a magic number: try {  	Progress = 0;  	var files = Directory.GetFiles (tempFolder);  	AnimatedGifEncoder e = new AnimatedGifEncoder ();  	e.Start (OutPutFile);  	e.SetDelay (1000 / Fps);  	//-1:no repeat'0:always repeat  	e.SetRepeat (0);  	for (int i = 0' count = files.Length; i < count; i++) {  		Progress++;  		e.AddFrame (Image.FromFile (files [i]));  	}  	e.Finish ();  } catch (Exception ex) {  	OutPut.Insert (0' "Converting error :" + ex.Message);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenerateGif,The following statement contains a magic number: e.SetDelay (1000 / Fps);  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenerateMp4,The following statement contains a magic number: try {  	string ffmpegPath = Path.Combine (Settings.ApplicationFolder' "ffmpeg.exe");  	if (!File.Exists (ffmpegPath)) {  		MessageBox.Show ("ffmpeg not found! Please reinstall the application.");  		return;  	}  	string parameters = @"-r {0} -i {1}\img00%04d.jpg -c:v libx264 -vf fps=25 -pix_fmt yuv420p";  	if (VideoType.Name.StartsWith ("4K")) {  		parameters = @"-r {0} -i {1}\img00%04d.jpg -c:v libx265 -vf fps=25";  	}  	//                parameters += string.Format("-s {0}x{1}"' Width' Height);  	if (Preview) {  		parameters += " -vf scale=400:264";  	} else {  		parameters += string.Format (" -vf scale={0}:{1}"' Width' Height);  	}  	parameters += " {2}";  	OutPut.Insert (0' "Generating video ..... ");  	Process newprocess = new Process ();  	Progress = 0;  	ProgressMax = (MaxValue - MinValue) * 25 / Fps;  	newprocess.StartInfo = new ProcessStartInfo () {  		FileName = ffmpegPath'  		Arguments = string.Format (parameters' Fps' tempFolder' OutPutFile)'  		UseShellExecute = false'  		WindowStyle = ProcessWindowStyle.Minimized'  		CreateNoWindow = true'  		RedirectStandardOutput = true'  		RedirectStandardError = true  	};  	newprocess.Start ();  	newprocess.OutputDataReceived += newprocess_OutputDataReceived;  	newprocess.ErrorDataReceived += newprocess_OutputDataReceived;  	newprocess.BeginOutputReadLine ();  	newprocess.BeginErrorReadLine ();  	newprocess.WaitForExit ();  } catch (Exception exception) {  	OutPut.Insert (0' "Converting error :" + exception.Message);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,GenerateMp4,The following statement contains a magic number: ProgressMax = (MaxValue - MinValue) * 25 / Fps;  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: try {  	lock (_locker) {  		OutPut.Insert (0' e.Data);  		//frame=   20 fps= 12 q=0.0 size=       0kB time=00:00:00.00 bitrate=N/A      		if (e.Data != null && e.Data.StartsWith ("frame=")) {  			var s = e.Data.Substring (7' 5).Trim ();  			int i = 0;  			if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  				Progress = i;  		}  	}  } catch (Exception) {  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: try {  	lock (_locker) {  		OutPut.Insert (0' e.Data);  		//frame=   20 fps= 12 q=0.0 size=       0kB time=00:00:00.00 bitrate=N/A      		if (e.Data != null && e.Data.StartsWith ("frame=")) {  			var s = e.Data.Substring (7' 5).Trim ();  			int i = 0;  			if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  				Progress = i;  		}  	}  } catch (Exception) {  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: try {  	lock (_locker) {  		OutPut.Insert (0' e.Data);  		//frame=   20 fps= 12 q=0.0 size=       0kB time=00:00:00.00 bitrate=N/A      		if (e.Data != null && e.Data.StartsWith ("frame=")) {  			var s = e.Data.Substring (7' 5).Trim ();  			int i = 0;  			if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  				Progress = i;  		}  	}  } catch (Exception) {  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: try {  	lock (_locker) {  		OutPut.Insert (0' e.Data);  		//frame=   20 fps= 12 q=0.0 size=       0kB time=00:00:00.00 bitrate=N/A      		if (e.Data != null && e.Data.StartsWith ("frame=")) {  			var s = e.Data.Substring (7' 5).Trim ();  			int i = 0;  			if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  				Progress = i;  		}  	}  } catch (Exception) {  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: lock (_locker) {  	OutPut.Insert (0' e.Data);  	//frame=   20 fps= 12 q=0.0 size=       0kB time=00:00:00.00 bitrate=N/A      	if (e.Data != null && e.Data.StartsWith ("frame=")) {  		var s = e.Data.Substring (7' 5).Trim ();  		int i = 0;  		if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  			Progress = i;  	}  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: lock (_locker) {  	OutPut.Insert (0' e.Data);  	//frame=   20 fps= 12 q=0.0 size=       0kB time=00:00:00.00 bitrate=N/A      	if (e.Data != null && e.Data.StartsWith ("frame=")) {  		var s = e.Data.Substring (7' 5).Trim ();  		int i = 0;  		if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  			Progress = i;  	}  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: lock (_locker) {  	OutPut.Insert (0' e.Data);  	//frame=   20 fps= 12 q=0.0 size=       0kB time=00:00:00.00 bitrate=N/A      	if (e.Data != null && e.Data.StartsWith ("frame=")) {  		var s = e.Data.Substring (7' 5).Trim ();  		int i = 0;  		if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  			Progress = i;  	}  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: lock (_locker) {  	OutPut.Insert (0' e.Data);  	//frame=   20 fps= 12 q=0.0 size=       0kB time=00:00:00.00 bitrate=N/A      	if (e.Data != null && e.Data.StartsWith ("frame=")) {  		var s = e.Data.Substring (7' 5).Trim ();  		int i = 0;  		if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  			Progress = i;  	}  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: if (e.Data != null && e.Data.StartsWith ("frame=")) {  	var s = e.Data.Substring (7' 5).Trim ();  	int i = 0;  	if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  		Progress = i;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: if (e.Data != null && e.Data.StartsWith ("frame=")) {  	var s = e.Data.Substring (7' 5).Trim ();  	int i = 0;  	if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  		Progress = i;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: if (e.Data != null && e.Data.StartsWith ("frame=")) {  	var s = e.Data.Substring (7' 5).Trim ();  	int i = 0;  	if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  		Progress = i;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: if (e.Data != null && e.Data.StartsWith ("frame=")) {  	var s = e.Data.Substring (7' 5).Trim ();  	int i = 0;  	if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  		Progress = i;  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  	Progress = i;  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,newprocess_OutputDataReceived,The following statement contains a magic number: if (int.TryParse (e.Data.Substring (7' 5).Trim ()' out i))  	Progress = i;  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,CopyFile,The following statement contains a magic number: using (MagickImage image = new MagickImage (filename)) {  	double zw = (double)Width / image.Width;  	double zh = (double)Height / image.Height;  	double za = FillImage ? ((zw <= zh) ? zw : zh) : ((zw >= zh) ? zw : zh);  	if (FillImage) {  		double aspect = (double)VideoType.Width / VideoType.Height;  		double pAspect = (double)image.Width / image.Height;  		if (aspect > pAspect)  			image.Crop (image.Width' (int)(image.Width / aspect)' Gravity.Center);  		else  			image.Crop ((int)(image.Height / aspect)' image.Height' Gravity.Center);  	}  	MagickGeometry geometry = new MagickGeometry (VideoType.Width' VideoType.Height) {  		IgnoreAspectRatio = false'  		FillArea = false  	};  	image.FilterType = FilterType.Point;  	image.Resize (geometry);  	image.Quality = 80;  	image.Format = MagickFormat.Jpeg;  	image.Write (destFile);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,CopyFile,The following statement contains a magic number: image.Quality = 80;  
Magic Number,CameraControl.Plugins.ToolPlugins,GenThumbViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenThumbViewModel.cs,_backgroundWorker_DoWork,The following statement contains a magic number: try {  	RaisePropertyChanged (() => IsBusy);  	RaisePropertyChanged (() => IsFree);  	Thread.Sleep (500);  	CurrentImages = 0;  	TotalImages = ServiceProvider.Settings.DefaultSession.Files.Count;  	foreach (FileItem item in ServiceProvider.Settings.DefaultSession.Files) {  		if (_backgroundWorker.CancellationPending)  			break;  		CurrentImages++;  		if (!item.HaveGeneratedThumbnail) {  			BitmapLoader.Instance.GenerateCache (item);  			BitmapLoader.Instance.SetImageInfo (item);  		}  		Bitmap = item.Thumbnail;  		GC.Collect ();  	}  	ServiceProvider.Settings.Save (ServiceProvider.Settings.DefaultSession);  } catch (Exception ex) {  	Log.Error ("Unable to generate thumbs"' ex);  }  
Magic Number,CameraControl.Plugins.ToolPlugins,GenThumbViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenThumbViewModel.cs,_backgroundWorker_DoWork,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,CameraControl.Plugins.ToolPlugins,ImageSequencerViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ImageSequencerViewModel.cs,ImageSequencerViewModel,The following statement contains a magic number: Fps = 15;  
Magic Number,CameraControl.Plugins.ToolPlugins,ImageSequencerViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ImageSequencerViewModel.cs,_backgroundWorker_DoWork,The following statement contains a magic number: while (true) {  	if (_backgroundWorker.CancellationPending)  		break;  	if (!IsPaused)  		CurrentImages++;  	Thread.Sleep (1000 / Fps);  	if (CurrentImages >= MaxValue)  		if (Loop)  			CurrentImages = MinValue;  		else  			Stop ();  }  
Magic Number,CameraControl.Plugins.ToolPlugins,ImageSequencerViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\ImageSequencerViewModel.cs,_backgroundWorker_DoWork,The following statement contains a magic number: Thread.Sleep (1000 / Fps);  
Missing Default,CameraControl.Plugins.ImageTransformPlugins,Effect,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ImageTransformPlugins\Effect.cs,Execute,The following switch statement is missing a default case: switch (conf.SelectedMode) {  case 0:  	image.SepiaTone (new Percentage (conf.Param1));  	break;  case 1:  	image.OilPaint (conf.Param1' 0.1);  	break;  case 2:  	image.Sketch ();  	break;  case 3:  	image.Charcoal ();  	break;  case 4:  	image.Solarize ();  	break;  case 5:  	image.Swirl (conf.Param1);  	break;  case 6:  	image.Wave (PixelInterpolateMethod.Bilinear' conf.Param1' conf.Param2);  	break;  case 7:  	image.BlueShift ();  	break;  case 8:  	image.RotationalBlur (conf.Param1);  	break;  case 9:  	image.Raise (conf.Param1);  	break;  case 10:  	image.Negate ();  	break;  case 11:  	image.ColorSpace = ColorSpace.Gray;  	break;  }  
Missing Default,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetEnabled,The following switch statement is missing a default case: switch (Mode) {  case 0:  	ExposureEnabled = true;  	ContrastEnabled = false;  	SaturationEnabled = true;  	MuEnabled = true;  	SigmaEnabled = true;  	OptimizeFiledOfView = true;  	break;  case 1:  	ExposureEnabled = false;  	ContrastEnabled = true;  	SaturationEnabled = false;  	MuEnabled = true;  	SigmaEnabled = true;  	OptimizeFiledOfView = false;  	break;  }  
Missing Default,CameraControl.Plugins.ToolPlugins,EnfusePluginViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\EnfusePluginViewModel.cs,SetDefault,The following switch statement is missing a default case: switch (Mode) {  case 0:  	Exposure = 100;  	Contrast = 0;  	Saturation = 100;  	Mu = 50;  	Sigma = 20;  	HardMask = false;  	break;  case 1:  	Exposure = 0;  	Contrast = 100;  	Saturation = 0;  	Mu = 50;  	Sigma = 20;  	HardMask = true;  	break;  }  
Missing Default,CameraControl.Plugins.ToolPlugins,GenMovieViewModel,F:\newReposMay17\dukus_digiCamControl\CameraControl.Plugins\ToolPlugins\GenMovieViewModel.cs,_backgroundWorker_DoWork,The following switch statement is missing a default case: switch (VideoType.Extension) {  case ".mp4":  	GenerateMp4 (tempFolder);  	break;  case ".gif":  	GenerateGif (tempFolder);  	break;  }  
