Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetProperty,Cyclomatic complexity of the method is 9
Complex Method,Capture.Workflow.Plugins.Views,LiveView,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Views\LiveView.cs,GetPreview,Cyclomatic complexity of the method is 10
Complex Method,Capture.Workflow.Plugins.Views,StartScreen,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Views\StartScreen.cs,GetPreview,Cyclomatic complexity of the method is 10
Long Statement,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["BackgroundColor"].Value != "Transparent" && viewElement.Properties ["BackgroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,GetControl,The length of the statement  "		button.Background = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["BackgroundColor"].Value)); " is 133.
Long Statement,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["ForegroundColor"].Value != "Transparent" && viewElement.Properties ["ForegroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,GetControl,The length of the statement  "		button.Foreground = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["ForegroundColor"].Value)); " is 133.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "	//    < ComboBox Name = "cmb_iso" IsEnabled = "{Binding Path=IsoNumber.IsEnabled}" ItemsSource = "{Binding Path=IsoNumber.Values}" SelectedValue = "{Binding Path=IsoNumber.Value}" /> " is 182.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "	var property = GetProperty (viewElement.Properties ["Property"].Value' ServiceProvider.Instance.DeviceManager.SelectedCameraDevice); " is 132.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["BackgroundColor"].Value != "Transparent" && viewElement.Properties ["BackgroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "		comboBox.Background = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["BackgroundColor"].Value)); " is 135.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["ForegroundColor"].Value != "Transparent" && viewElement.Properties ["ForegroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "		comboBox.Foreground = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["ForegroundColor"].Value)); " is 135.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["ForegroundColor"].Value != "Transparent" && viewElement.Properties ["ForegroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "		label.Foreground = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["ForegroundColor"].Value)); " is 132.
Long Statement,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetControl,The length of the statement  "		Orientation = viewElement.Properties ["Orientation"].Value == "Horizontal" ? Orientation.Horizontal : Orientation.Vertical " is 122.
Long Statement,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["BackgroundColor"].Value != "Transparent" && viewElement.Properties ["BackgroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,GetControl,The length of the statement  "		label.Background = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["BackgroundColor"].Value)); " is 132.
Long Statement,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["ForegroundColor"].Value != "Transparent" && viewElement.Properties ["ForegroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,GetControl,The length of the statement  "		label.Foreground = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["ForegroundColor"].Value)); " is 132.
Long Statement,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["BackgroundColor"].Value != "Transparent" && viewElement.Properties ["BackgroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,GetControl,The length of the statement  "		textBox.Background = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["BackgroundColor"].Value)); " is 134.
Long Statement,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["ForegroundColor"].Value != "Transparent" && viewElement.Properties ["ForegroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,GetControl,The length of the statement  "		textBox.Foreground = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["ForegroundColor"].Value)); " is 134.
Long Statement,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,GetControl,The length of the statement  "	//if (viewElement.Properties["BackgroundColor"].Value != "Transparent" && viewElement.Properties["BackgroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,GetControl,The length of the statement  "	if (viewElement.Properties ["ForegroundColor"].Value != "Transparent" && viewElement.Properties ["ForegroundColor"].Value != "#00FFFFFF") " is 137.
Long Statement,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,GetControl,The length of the statement  "		label.Foreground = new SolidColorBrush ((Color)ColorConverter.ConvertFromString (viewElement.Properties ["ForegroundColor"].Value)); " is 132.
Long Statement,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,GetControl,The length of the statement  "	stackpanel.Orientation = viewElement.Properties ["Orientation"].Value == "Horizontal" ? Orientation.Horizontal : Orientation.Vertical; " is 134.
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StartLiveViewThread,The following statement contains a magic number: try {  	bool retry = false;  	int retryNum = 0;  	Log.Debug ("LiveView: Liveview started");  	do {  		try {  			var cam = WorkflowManager.Instance.Context.CameraDevice as CanonSDKBase;  			if (cam != null) {  				cam.StartLiveViewCamera ();  			} else {  				WorkflowManager.Instance.Context.CameraDevice.StartLiveView ();  			}  		} catch (DeviceException deviceException) {  			if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  				Thread.Sleep (100);  				Log.Debug ("Retry live view :" + deviceException.ErrorCode.ToString ("X"));  				retry = true;  				retryNum++;  			} else {  				throw;  			}  		}  	} while (retry && retryNum < 35);  	Log.Debug ("LiveView: Liveview start done");  	WorkflowManager.Instance.OnMessage (new MessageEventArgs (Messages.StartLiveView' null));  } catch (Exception exception) {  	Log.Error ("Unable to start liveview !"' exception);  	StaticHelper.Instance.SystemMessage = "Unable to start liveview ! " + exception.Message;  }  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StartLiveViewThread,The following statement contains a magic number: try {  	bool retry = false;  	int retryNum = 0;  	Log.Debug ("LiveView: Liveview started");  	do {  		try {  			var cam = WorkflowManager.Instance.Context.CameraDevice as CanonSDKBase;  			if (cam != null) {  				cam.StartLiveViewCamera ();  			} else {  				WorkflowManager.Instance.Context.CameraDevice.StartLiveView ();  			}  		} catch (DeviceException deviceException) {  			if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  				Thread.Sleep (100);  				Log.Debug ("Retry live view :" + deviceException.ErrorCode.ToString ("X"));  				retry = true;  				retryNum++;  			} else {  				throw;  			}  		}  	} while (retry && retryNum < 35);  	Log.Debug ("LiveView: Liveview start done");  	WorkflowManager.Instance.OnMessage (new MessageEventArgs (Messages.StartLiveView' null));  } catch (Exception exception) {  	Log.Error ("Unable to start liveview !"' exception);  	StaticHelper.Instance.SystemMessage = "Unable to start liveview ! " + exception.Message;  }  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StartLiveViewThread,The following statement contains a magic number: do {  	try {  		var cam = WorkflowManager.Instance.Context.CameraDevice as CanonSDKBase;  		if (cam != null) {  			cam.StartLiveViewCamera ();  		} else {  			WorkflowManager.Instance.Context.CameraDevice.StartLiveView ();  		}  	} catch (DeviceException deviceException) {  		if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  			Thread.Sleep (100);  			Log.Debug ("Retry live view :" + deviceException.ErrorCode.ToString ("X"));  			retry = true;  			retryNum++;  		} else {  			throw;  		}  	}  } while (retry && retryNum < 35);  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StartLiveViewThread,The following statement contains a magic number: do {  	try {  		var cam = WorkflowManager.Instance.Context.CameraDevice as CanonSDKBase;  		if (cam != null) {  			cam.StartLiveViewCamera ();  		} else {  			WorkflowManager.Instance.Context.CameraDevice.StartLiveView ();  		}  	} catch (DeviceException deviceException) {  		if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  			Thread.Sleep (100);  			Log.Debug ("Retry live view :" + deviceException.ErrorCode.ToString ("X"));  			retry = true;  			retryNum++;  		} else {  			throw;  		}  	}  } while (retry && retryNum < 35);  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StartLiveViewThread,The following statement contains a magic number: try {  	var cam = WorkflowManager.Instance.Context.CameraDevice as CanonSDKBase;  	if (cam != null) {  		cam.StartLiveViewCamera ();  	} else {  		WorkflowManager.Instance.Context.CameraDevice.StartLiveView ();  	}  } catch (DeviceException deviceException) {  	if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  		Thread.Sleep (100);  		Log.Debug ("Retry live view :" + deviceException.ErrorCode.ToString ("X"));  		retry = true;  		retryNum++;  	} else {  		throw;  	}  }  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StartLiveViewThread,The following statement contains a magic number: if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  	Thread.Sleep (100);  	Log.Debug ("Retry live view :" + deviceException.ErrorCode.ToString ("X"));  	retry = true;  	retryNum++;  } else {  	throw;  }  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StartLiveViewThread,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StopLiveViewThread,The following statement contains a magic number: try {  	bool retry = false;  	int retryNum = 0;  	Log.Debug ("LiveView: Liveview stopping");  	do {  		try {  			WorkflowManager.Instance.Context.CameraDevice.StopLiveView ();  		} catch (DeviceException deviceException) {  			if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  				Thread.Sleep (500);  				Log.Debug ("Retry live view stop:" + deviceException.ErrorCode.ToString ("X"));  				retry = true;  				retryNum++;  			} else {  				throw;  			}  		}  	} while (retry && retryNum < 35);  	WorkflowManager.Instance.OnMessage (new MessageEventArgs (Messages.StopLiveView' null));  } catch (Exception exception) {  	Log.Error ("Unable to stop liveview !"' exception);  	StaticHelper.Instance.SystemMessage = "Unable to stop liveview ! " + exception.Message;  }  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StopLiveViewThread,The following statement contains a magic number: try {  	bool retry = false;  	int retryNum = 0;  	Log.Debug ("LiveView: Liveview stopping");  	do {  		try {  			WorkflowManager.Instance.Context.CameraDevice.StopLiveView ();  		} catch (DeviceException deviceException) {  			if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  				Thread.Sleep (500);  				Log.Debug ("Retry live view stop:" + deviceException.ErrorCode.ToString ("X"));  				retry = true;  				retryNum++;  			} else {  				throw;  			}  		}  	} while (retry && retryNum < 35);  	WorkflowManager.Instance.OnMessage (new MessageEventArgs (Messages.StopLiveView' null));  } catch (Exception exception) {  	Log.Error ("Unable to stop liveview !"' exception);  	StaticHelper.Instance.SystemMessage = "Unable to stop liveview ! " + exception.Message;  }  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StopLiveViewThread,The following statement contains a magic number: do {  	try {  		WorkflowManager.Instance.Context.CameraDevice.StopLiveView ();  	} catch (DeviceException deviceException) {  		if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  			Thread.Sleep (500);  			Log.Debug ("Retry live view stop:" + deviceException.ErrorCode.ToString ("X"));  			retry = true;  			retryNum++;  		} else {  			throw;  		}  	}  } while (retry && retryNum < 35);  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StopLiveViewThread,The following statement contains a magic number: do {  	try {  		WorkflowManager.Instance.Context.CameraDevice.StopLiveView ();  	} catch (DeviceException deviceException) {  		if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  			Thread.Sleep (500);  			Log.Debug ("Retry live view stop:" + deviceException.ErrorCode.ToString ("X"));  			retry = true;  			retryNum++;  		} else {  			throw;  		}  	}  } while (retry && retryNum < 35);  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StopLiveViewThread,The following statement contains a magic number: try {  	WorkflowManager.Instance.Context.CameraDevice.StopLiveView ();  } catch (DeviceException deviceException) {  	if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  		Thread.Sleep (500);  		Log.Debug ("Retry live view stop:" + deviceException.ErrorCode.ToString ("X"));  		retry = true;  		retryNum++;  	} else {  		throw;  	}  }  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StopLiveViewThread,The following statement contains a magic number: if (deviceException.ErrorCode == ErrorCodes.ERROR_BUSY || deviceException.ErrorCode == ErrorCodes.MTP_Device_Busy) {  	Thread.Sleep (500);  	Log.Debug ("Retry live view stop:" + deviceException.ErrorCode.ToString ("X"));  	retry = true;  	retryNum++;  } else {  	throw;  }  
Magic Number,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,StopLiveViewThread,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Width"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "150"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Height"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "50"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Margins"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "5"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "FontSize"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 6'  	RangeMax = 400'  	Value = "15"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "FontSize"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 6'  	RangeMax = 400'  	Value = "15"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,GetControl,The following statement contains a magic number: if (Enum.TryParse (viewElement.Properties ["Icon"].Value' out kind))  	button.Content = new PackIcon () {  		Kind = kind'  		Width = button.Width / 2'  		Height = button.Height / 2  	};  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,GetControl,The following statement contains a magic number: if (Enum.TryParse (viewElement.Properties ["Icon"].Value' out kind))  	button.Content = new PackIcon () {  		Kind = kind'  		Width = button.Width / 2'  		Height = button.Height / 2  	};  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,GetControl,The following statement contains a magic number: button.Content = new PackIcon () {  	Kind = kind'  	Width = button.Width / 2'  	Height = button.Height / 2  };  
Magic Number,Capture.Workflow.Plugins.ViewElements,Button,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Button.cs,GetControl,The following statement contains a magic number: button.Content = new PackIcon () {  	Kind = kind'  	Width = button.Width / 2'  	Height = button.Height / 2  };  
Magic Number,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Width"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "150"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "LabelWidth"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "150"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Height"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "50"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Margins"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "5"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "FontSize"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 6'  	RangeMax = 400'  	Value = "15"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "FontSize"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 6'  	RangeMax = 400'  	Value = "15"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Width"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "150"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Height"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "50"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Margins"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "5"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "FontSize"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 6'  	RangeMax = 400'  	Value = "15"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,Label,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\Label.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "FontSize"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 6'  	RangeMax = 400'  	Value = "15"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Width"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "150"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "LabelWidth"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "150"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Height"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "50"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "Margins"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 0'  	RangeMax = 9999'  	Value = "5"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "FontSize"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 6'  	RangeMax = 400'  	Value = "15"  });  
Magic Number,Capture.Workflow.Plugins.ViewElements,TextElement,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\TextElement.cs,CreateElement,The following statement contains a magic number: element.Properties.Items.Add (new CustomProperty () {  	Name = "FontSize"'  	PropertyType = CustomPropertyType.Number'  	RangeMin = 6'  	RangeMax = 400'  	Value = "15"  });  
Magic Number,Capture.Workflow.Plugins.Views,StartScreen,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Views\StartScreen.cs,CreateView,The following statement contains a magic number: view.Properties.Items.Add (new CustomProperty () {  	Name = "BorderThickness"'  	PropertyType = CustomPropertyType.Number'  	Value = "0"'  	RangeMax = 100  });  
Magic Number,Capture.Workflow.Plugins.Views,StartScreen,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Views\StartScreen.cs,CreateView,The following statement contains a magic number: view.Properties.Items.Add (new CustomProperty () {  	Name = "CornerRadius"'  	PropertyType = CustomPropertyType.Number'  	Value = "0"'  	RangeMax = 90  });  
Missing Default,Capture.Workflow.Plugins.Commands,CameraAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\CameraAction.cs,Execute,The following switch statement is missing a default case: switch (command.Properties ["Action"].Value) {  case "Capture":  	CaptureAsync ();  	break;  case "StartLiveView":  	StartLiveView ();  	break;  case "StopLiveView":  	StopLiveView ();  	break;  }  
Missing Default,Capture.Workflow.Plugins.Commands,ViewAction,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Commands\ViewAction.cs,Execute,The following switch statement is missing a default case: switch (command.Properties ["Action"].Value) {  case "ShowView":  	WorkflowManager.Instance.OnMessage (new MessageEventArgs (Messages.ShowView' command.Properties ["ViewName"].Value));  	break;  }  
Missing Default,Capture.Workflow.Plugins.ViewElements,CameraProperty,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\ViewElements\CameraProperty.cs,GetProperty,The following switch statement is missing a default case: switch (name) {  case "Mode":  	return device.Mode;  case "CompressionSetting":  	return device.CompressionSetting;  case "ExposureCompensation":  	return device.ExposureCompensation;  case "ExposureMeteringMode":  	return device.ExposureCompensation;  case "FNumber":  	return device.FNumber;  case "IsoNumber":  	return device.IsoNumber;  case "ShutterSpeed":  	return device.ShutterSpeed;  case "WhiteBalance":  	return device.WhiteBalance;  case "FocusMode":  	return device.FocusMode;  }  
Missing Default,Capture.Workflow.Plugins.Views,LiveView,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Views\LiveView.cs,GetPreview,The following switch statement is missing a default case: switch (element.Properties ["Position"].Value) {  case "Left":  	model.LeftElements.Add (element.Instance.GetControl (element));  	break;  case "BottomLeft":  	model.BottomLeftElements.Add (element.Instance.GetControl (element));  	break;  case "BottomRight":  	model.BottomRightElements.Add (element.Instance.GetControl (element));  	break;  }  
Missing Default,Capture.Workflow.Plugins.Views,StartScreen,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow.Plugins\Views\StartScreen.cs,GetPreview,The following switch statement is missing a default case: switch (element.Properties ["Position"].Value) {  case "Center":  	model.CenterElements.Add (element.Instance.GetControl (element));  	break;  case "BottomLeft":  	model.BottomLeftElements.Add (element.Instance.GetControl (element));  	break;  case "BottomRight":  	model.BottomRightElements.Add (element.Instance.GetControl (element));  	break;  }  
