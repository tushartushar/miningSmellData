Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetListing,The method has 129 lines of code.
Long Method,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The method has 107 lines of code.
Complex Method,System.Net.FtpClient.Extensions,ChecksumExtension,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\Extensions\GetChecksum.cs,GetChecksum,Cyclomatic complexity of the method is 8
Complex Method,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetFeatures,Cyclomatic complexity of the method is 39
Complex Method,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,Cyclomatic complexity of the method is 13
Complex Method,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,Cyclomatic complexity of the method is 19
Complex Method,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,DereferenceLink,Cyclomatic complexity of the method is 9
Complex Method,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetListing,Cyclomatic complexity of the method is 28
Complex Method,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetHash,Cyclomatic complexity of the method is 17
Complex Method,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Connect,Cyclomatic complexity of the method is 10
Complex Method,System.Net.FtpClient,FtpHash,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpHash.cs,Verify,Cyclomatic complexity of the method is 19
Complex Method,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,Parse,Cyclomatic complexity of the method is 11
Complex Method,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,Cyclomatic complexity of the method is 18
Complex Method,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,Cyclomatic complexity of the method is 42
Complex Method,System.Net.FtpClient,FtpSocketStream,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpSocketStream.cs,Close,Cyclomatic complexity of the method is 8
Complex Method,System.Net.FtpClient,FtpSocketStream,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpSocketStream.cs,Connect,Cyclomatic complexity of the method is 14
Long Parameter List,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,BeginOpenRead,The method has 5 parameters.
Long Parameter List,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,BeginDeleteDirectory,The method has 5 parameters.
Long Parameter List,System.Net.FtpClient,IFtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\IFtpClient.cs,BeginOpenRead,The method has 5 parameters.
Long Parameter List,System.Net.FtpClient,IFtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\IFtpClient.cs,BeginDeleteDirectory,The method has 5 parameters.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetAsyncDelegate,The length of the statement  "			throw new InvalidCastException ("The AsyncResult cannot be matched to the specified delegate. " + string.Format ("Are you sure you meant to call {0} and not another method?"' st.GetFrame (0).GetMethod ().Name)); " is 211.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Authenticate,The length of the statement  "	if (reply.Type == FtpResponseType.PositiveIntermediate && !(reply = Execute ("PASS {0}"' Credentials.Password)).Success) " is 120.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Disconnect,The length of the statement  "				FtpTrace.WriteLine ("FtpClient.Disconnect(): SocketException caught and discarded while closing control connection: {0}"' sockex.ToString ()); " is 142.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Disconnect,The length of the statement  "				FtpTrace.WriteLine ("FtpClient.Disconnect(): IOException caught and discarded while closing control connection: {0}"' ioex.ToString ()); " is 136.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Disconnect,The length of the statement  "				FtpTrace.WriteLine ("FtpClient.Disconnect(): FtpCommandException caught and discarded while closing control connection: {0}"' cmdex.ToString ()); " is 145.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Disconnect,The length of the statement  "				FtpTrace.WriteLine ("FtpClient.Disconnect(): FtpException caught and discarded while closing control connection: {0}"' ftpex.ToString ()); " is 138.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The length of the statement  "		throw new InvalidOperationException ("The control connection stream is null! Generally this means there is no connection to the server. Cannot open a passive data stream."); " is 173.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The length of the statement  "			if (reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoPassive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork) " is 205.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The length of the statement  "		m = Regex.Match (reply.Message' @"(?<quad1>\d+)'" + @"(?<quad2>\d+)'" + @"(?<quad3>\d+)'" + @"(?<quad4>\d+)'" + @"(?<port1>\d+)'" + @"(?<port2>\d+)"); " is 150.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The length of the statement  "			host = string.Format ("{0}.{1}.{2}.{3}"' m.Groups ["quad1"].Value' m.Groups ["quad2"].Value' m.Groups ["quad3"].Value' m.Groups ["quad4"].Value); " is 145.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The length of the statement  "		throw new InvalidOperationException ("The control connection stream is null! Generally this means there is no connection to the server. Cannot open an active data stream."); " is 173.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The length of the statement  "		if (!(reply = Execute ("EPRT |{0}|{1}|{2}|"' ipver' stream.LocalEndPoint.Address.ToString ()' stream.LocalEndPoint.Port)).Success) { " is 132.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The length of the statement  "			if (reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoActive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork) { " is 206.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The length of the statement  "				// we don't want this failed EPRT attempt to close our control connection when the stream is closed so clear out the reference. " is 127.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The length of the statement  "		if (!(reply = Execute ("PORT {0}'{1}'{2}"' stream.LocalEndPoint.Address.ToString ().Replace ('.'' ''')' stream.LocalEndPoint.Port / 256' stream.LocalEndPoint.Port % 256)).Success) { " is 181.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetObjectInfo,The length of the statement  "		throw new InvalidOperationException ("The GetObjectInfo method only works on servers that support machine listings. " + "Please check the Capabilities flags for FtpCapability.MLSD before calling this method."); " is 210.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,CreateDirectory,The length of the statement  "			FtpTrace.WriteLine (string.Format ("CreateDirectory(\"{0}\"' {1}): Create non-existent parent: {2}"' path' force' path.GetFtpDirectoryName ())); " is 144.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,SetHashAlgorithm,The length of the statement  "			throw new NotImplementedException (string.Format ("The hash algorithm {0} was not advertised by the server."' type.ToString ())); " is 129.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetHash,The length of the statement  "	if (!(m = Regex.Match (reply.Message' @"(?<algorithm>.+)\s" + @"(?<bytestart>\d+)-(?<byteend>\d+)\s" + @"(?<hash>.+)\s" + @"(?<filename>.+)")).Success) { " is 153.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Dispose,The length of the statement  "			FtpTrace.WriteLine ("FtpClient.Dispose(): Caught and discarded an exception while disconnecting from host: {0}"' ex.ToString ()); " is 129.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Dispose,The length of the statement  "				FtpTrace.WriteLine ("FtpClient.Dispose(): Caught and discarded an exception while disposing FtpStream object: {0}"' ex.ToString ()); " is 132.
Long Statement,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Connect,The length of the statement  "				throw new UriFormatException ("The user info portion of the URI contains more than 1 colon. The username and password portion of the URI should be URL encoded."); " is 162.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The length of the statement  "	string regex = @"(?<permissions>.+)\s+" + @"(?<objectcount>\d+)\s+" + @"(?<user>.+)\s+" + @"(?<group>.+)\s+" + @"(?<size>\d+)\s+" + @"(?<modify>\w+\s+\d+\s+\d+:\d+|\w+\s+\d+\s+\d+)\s" + @"(?<name>.*)$"; " is 202.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The length of the statement  "	if (((capabilities & FtpCapability.MDTM) != FtpCapability.MDTM || item.Type == FtpFileSystemObjectType.Directory) && m.Groups ["modify"].Value.Length > 0) { " is 156.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The length of the statement  "			FtpTrace.WriteLine ("Ignoring modified date because MDTM feature is present. If you aren't already' pass FtpListOption.Modify or FtpListOption.SizeModify to GetListing() to retrieve the modification time."); " is 207.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The length of the statement  "		Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase); " is 152.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseDosList,The length of the statement  "	if ((m = Regex.Match (buf' @"(?<modify>\d+-\d+-\d+\s+\d+:\d+\w+)\s+<DIR>\s+(?<name>.*)$"' RegexOptions.IgnoreCase)).Success) { " is 126.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseDosList,The length of the statement  "		//if (DateTime.TryParse(m.Groups["modify"].Value' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal' out modify)) " is 124.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseDosList,The length of the statement  "		if (DateTime.TryParseExact (m.Groups ["modify"].Value' datefmt' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal' out modify)) " is 138.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseDosList,The length of the statement  "	else if ((m = Regex.Match (buf' @"(?<modify>\d+-\d+-\d+\s+\d+:\d+\w+)\s+(?<size>\d+)\s+(?<name>.*)$"' RegexOptions.IgnoreCase)).Success) { " is 138.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseDosList,The length of the statement  "		//if (DateTime.TryParse(m.Groups["modify"].Value' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal' out modify)) " is 124.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseDosList,The length of the statement  "		if (DateTime.TryParseExact (m.Groups ["modify"].Value' datefmt' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal' out modify)) " is 138.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseVaxList,The length of the statement  "	string regex = @"(?<name>.+)\.(?<extension>.+);(?<version>\d+)\s+" + @"(?<size>\d+)\s+" + @"(?<modify>\d+-\w+-\d+\s+\d+:\d+)"; " is 126.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseVaxList,The length of the statement  "		item.m_name = string.Format ("{0}.{1};{2}"' m.Groups ["name"].Value' m.Groups ["extension"].Value' m.Groups ["version"].Value); " is 127.
Long Statement,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseVaxList,The length of the statement  "		if (!DateTime.TryParse (m.Groups ["modify"].Value' CultureInfo.InvariantCulture' DateTimeStyles.AssumeLocal' out item.m_modified)) " is 130.
Long Statement,System.Net.FtpClient,FtpSocketStream,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpSocketStream.cs,ActivateEncryption,The length of the statement  "		m_sslStream = new SslStream (NetworkStream' true' new RemoteCertificateValidationCallback (delegate (object sender' X509Certificate certificate' X509Chain chain' SslPolicyErrors sslPolicyErrors) { " is 196.
Long Statement,System.Net.FtpClient,FtpSocketStream,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpSocketStream.cs,ActivateEncryption,The length of the statement  "		FtpTrace.WriteLine ("Time to activate encryption: {0}h {1}m {2}s' Total Seconds: {3}."' auth_time_total.Hours' auth_time_total.Minutes' auth_time_total.Seconds' auth_time_total.TotalSeconds); " is 191.
Complex Conditional,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The conditional expression  "reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoPassive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork"  is complex.
Complex Conditional,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The conditional expression  "reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoActive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork"  is complex.
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The following statement contains a magic number: if (type == FtpDataConnectionType.EPSV || type == FtpDataConnectionType.AutoPassive) {  	if (!(reply = Execute ("EPSV")).Success) {  		// if we're connected with IPv4 and data channel type is AutoPassive then fallback to IPv4  		if (reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoPassive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork)  			return OpenPassiveDataStream (FtpDataConnectionType.PASV' command' restart);  		throw new FtpCommandException (reply);  	}  	m = Regex.Match (reply.Message' @"\(\|\|\|(?<port>\d+)\|\)");  	if (!m.Success) {  		throw new FtpException ("Failed to get the EPSV port from: " + reply.Message);  	}  	host = m_host;  	port = int.Parse (m.Groups ["port"].Value);  } else {  	if (m_stream.LocalEndPoint.AddressFamily != Sockets.AddressFamily.InterNetwork)  		throw new FtpException ("Only IPv4 is supported by the PASV command. Use EPSV instead.");  	if (!(reply = Execute ("PASV")).Success)  		throw new FtpCommandException (reply);  	m = Regex.Match (reply.Message' @"(?<quad1>\d+)'" + @"(?<quad2>\d+)'" + @"(?<quad3>\d+)'" + @"(?<quad4>\d+)'" + @"(?<port1>\d+)'" + @"(?<port2>\d+)");  	if (!m.Success || m.Groups.Count != 7)  		throw new FtpException (string.Format ("Malformed PASV response: {0}"' reply.Message));  	// PASVEX mode ignores the host supplied in the PASV response  	if (type == FtpDataConnectionType.PASVEX)  		host = m_host;  	else  		host = string.Format ("{0}.{1}.{2}.{3}"' m.Groups ["quad1"].Value' m.Groups ["quad2"].Value' m.Groups ["quad3"].Value' m.Groups ["quad4"].Value);  	port = (int.Parse (m.Groups ["port1"].Value) << 8) + int.Parse (m.Groups ["port2"].Value);  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The following statement contains a magic number: if (type == FtpDataConnectionType.EPSV || type == FtpDataConnectionType.AutoPassive) {  	if (!(reply = Execute ("EPSV")).Success) {  		// if we're connected with IPv4 and data channel type is AutoPassive then fallback to IPv4  		if (reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoPassive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork)  			return OpenPassiveDataStream (FtpDataConnectionType.PASV' command' restart);  		throw new FtpCommandException (reply);  	}  	m = Regex.Match (reply.Message' @"\(\|\|\|(?<port>\d+)\|\)");  	if (!m.Success) {  		throw new FtpException ("Failed to get the EPSV port from: " + reply.Message);  	}  	host = m_host;  	port = int.Parse (m.Groups ["port"].Value);  } else {  	if (m_stream.LocalEndPoint.AddressFamily != Sockets.AddressFamily.InterNetwork)  		throw new FtpException ("Only IPv4 is supported by the PASV command. Use EPSV instead.");  	if (!(reply = Execute ("PASV")).Success)  		throw new FtpCommandException (reply);  	m = Regex.Match (reply.Message' @"(?<quad1>\d+)'" + @"(?<quad2>\d+)'" + @"(?<quad3>\d+)'" + @"(?<quad4>\d+)'" + @"(?<port1>\d+)'" + @"(?<port2>\d+)");  	if (!m.Success || m.Groups.Count != 7)  		throw new FtpException (string.Format ("Malformed PASV response: {0}"' reply.Message));  	// PASVEX mode ignores the host supplied in the PASV response  	if (type == FtpDataConnectionType.PASVEX)  		host = m_host;  	else  		host = string.Format ("{0}.{1}.{2}.{3}"' m.Groups ["quad1"].Value' m.Groups ["quad2"].Value' m.Groups ["quad3"].Value' m.Groups ["quad4"].Value);  	port = (int.Parse (m.Groups ["port1"].Value) << 8) + int.Parse (m.Groups ["port2"].Value);  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The following statement contains a magic number: if (!m.Success || m.Groups.Count != 7)  	throw new FtpException (string.Format ("Malformed PASV response: {0}"' reply.Message));  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenPassiveDataStream,The following statement contains a magic number: port = (int.Parse (m.Groups ["port1"].Value) << 8) + int.Parse (m.Groups ["port2"].Value);  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The following statement contains a magic number: if (type == FtpDataConnectionType.EPRT || type == FtpDataConnectionType.AutoActive) {  	int ipver = 0;  	switch (stream.LocalEndPoint.AddressFamily) {  	case Sockets.AddressFamily.InterNetwork:  		ipver = 1;  		// IPv4  		break;  	case Sockets.AddressFamily.InterNetworkV6:  		ipver = 2;  		// IPv6  		break;  	default:  		throw new InvalidOperationException ("The IP protocol being used is not supported.");  	}  	if (!(reply = Execute ("EPRT |{0}|{1}|{2}|"' ipver' stream.LocalEndPoint.Address.ToString ()' stream.LocalEndPoint.Port)).Success) {  		// if we're connected with IPv4 and the data channel type is AutoActive then try to fall back to the PORT command  		if (reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoActive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork) {  			stream.ControlConnection = null;  			// we don't want this failed EPRT attempt to close our control connection when the stream is closed so clear out the reference.  			stream.Close ();  			return OpenActiveDataStream (FtpDataConnectionType.PORT' command' restart);  		} else {  			stream.Close ();  			throw new FtpCommandException (reply);  		}  	}  } else {  	if (m_stream.LocalEndPoint.AddressFamily != Sockets.AddressFamily.InterNetwork)  		throw new FtpException ("Only IPv4 is supported by the PORT command. Use EPRT instead.");  	if (!(reply = Execute ("PORT {0}'{1}'{2}"' stream.LocalEndPoint.Address.ToString ().Replace ('.'' ''')' stream.LocalEndPoint.Port / 256' stream.LocalEndPoint.Port % 256)).Success) {  		stream.Close ();  		throw new FtpCommandException (reply);  	}  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The following statement contains a magic number: if (type == FtpDataConnectionType.EPRT || type == FtpDataConnectionType.AutoActive) {  	int ipver = 0;  	switch (stream.LocalEndPoint.AddressFamily) {  	case Sockets.AddressFamily.InterNetwork:  		ipver = 1;  		// IPv4  		break;  	case Sockets.AddressFamily.InterNetworkV6:  		ipver = 2;  		// IPv6  		break;  	default:  		throw new InvalidOperationException ("The IP protocol being used is not supported.");  	}  	if (!(reply = Execute ("EPRT |{0}|{1}|{2}|"' ipver' stream.LocalEndPoint.Address.ToString ()' stream.LocalEndPoint.Port)).Success) {  		// if we're connected with IPv4 and the data channel type is AutoActive then try to fall back to the PORT command  		if (reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoActive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork) {  			stream.ControlConnection = null;  			// we don't want this failed EPRT attempt to close our control connection when the stream is closed so clear out the reference.  			stream.Close ();  			return OpenActiveDataStream (FtpDataConnectionType.PORT' command' restart);  		} else {  			stream.Close ();  			throw new FtpCommandException (reply);  		}  	}  } else {  	if (m_stream.LocalEndPoint.AddressFamily != Sockets.AddressFamily.InterNetwork)  		throw new FtpException ("Only IPv4 is supported by the PORT command. Use EPRT instead.");  	if (!(reply = Execute ("PORT {0}'{1}'{2}"' stream.LocalEndPoint.Address.ToString ().Replace ('.'' ''')' stream.LocalEndPoint.Port / 256' stream.LocalEndPoint.Port % 256)).Success) {  		stream.Close ();  		throw new FtpCommandException (reply);  	}  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The following statement contains a magic number: if (type == FtpDataConnectionType.EPRT || type == FtpDataConnectionType.AutoActive) {  	int ipver = 0;  	switch (stream.LocalEndPoint.AddressFamily) {  	case Sockets.AddressFamily.InterNetwork:  		ipver = 1;  		// IPv4  		break;  	case Sockets.AddressFamily.InterNetworkV6:  		ipver = 2;  		// IPv6  		break;  	default:  		throw new InvalidOperationException ("The IP protocol being used is not supported.");  	}  	if (!(reply = Execute ("EPRT |{0}|{1}|{2}|"' ipver' stream.LocalEndPoint.Address.ToString ()' stream.LocalEndPoint.Port)).Success) {  		// if we're connected with IPv4 and the data channel type is AutoActive then try to fall back to the PORT command  		if (reply.Type == FtpResponseType.PermanentNegativeCompletion && type == FtpDataConnectionType.AutoActive && m_stream != null && m_stream.LocalEndPoint.AddressFamily == Sockets.AddressFamily.InterNetwork) {  			stream.ControlConnection = null;  			// we don't want this failed EPRT attempt to close our control connection when the stream is closed so clear out the reference.  			stream.Close ();  			return OpenActiveDataStream (FtpDataConnectionType.PORT' command' restart);  		} else {  			stream.Close ();  			throw new FtpCommandException (reply);  		}  	}  } else {  	if (m_stream.LocalEndPoint.AddressFamily != Sockets.AddressFamily.InterNetwork)  		throw new FtpException ("Only IPv4 is supported by the PORT command. Use EPRT instead.");  	if (!(reply = Execute ("PORT {0}'{1}'{2}"' stream.LocalEndPoint.Address.ToString ().Replace ('.'' ''')' stream.LocalEndPoint.Port / 256' stream.LocalEndPoint.Port % 256)).Success) {  		stream.Close ();  		throw new FtpCommandException (reply);  	}  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The following statement contains a magic number: switch (stream.LocalEndPoint.AddressFamily) {  case Sockets.AddressFamily.InterNetwork:  	ipver = 1;  	// IPv4  	break;  case Sockets.AddressFamily.InterNetworkV6:  	ipver = 2;  	// IPv6  	break;  default:  	throw new InvalidOperationException ("The IP protocol being used is not supported.");  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The following statement contains a magic number: ipver = 2;  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The following statement contains a magic number: if (!(reply = Execute ("PORT {0}'{1}'{2}"' stream.LocalEndPoint.Address.ToString ().Replace ('.'' ''')' stream.LocalEndPoint.Port / 256' stream.LocalEndPoint.Port % 256)).Success) {  	stream.Close ();  	throw new FtpCommandException (reply);  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenActiveDataStream,The following statement contains a magic number: if (!(reply = Execute ("PORT {0}'{1}'{2}"' stream.LocalEndPoint.Address.ToString ().Replace ('.'' ''')' stream.LocalEndPoint.Port / 256' stream.LocalEndPoint.Port % 256)).Success) {  	stream.Close ();  	throw new FtpCommandException (reply);  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetListing,The following statement contains a magic number: if (path == null || path.Trim ().Length == 0) {  	pwd = GetWorkingDirectory ();  	if (pwd != null && pwd.Trim ().Length > 0)  		path = pwd;  	else  		path = "./";  } else if (!path.StartsWith ("/") && pwd != null && pwd.Trim ().Length > 0) {  	if (path.StartsWith ("./"))  		path = path.Remove (0' 2);  	path = string.Format ("{0}/{1}"' pwd' path).GetFtpPath ();  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetListing,The following statement contains a magic number: if (!path.StartsWith ("/") && pwd != null && pwd.Trim ().Length > 0) {  	if (path.StartsWith ("./"))  		path = path.Remove (0' 2);  	path = string.Format ("{0}/{1}"' pwd' path).GetFtpPath ();  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetListing,The following statement contains a magic number: if (path.StartsWith ("./"))  	path = path.Remove (0' 2);  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetListing,The following statement contains a magic number: path = path.Remove (0' 2);  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetNameListing,The following statement contains a magic number: if (path == null || path.Trim ().Length == 0) {  	if (pwd != null && pwd.Trim ().Length > 0)  		path = pwd;  	else  		path = "./";  } else if (!path.StartsWith ("/") && pwd != null && pwd.Trim ().Length > 0) {  	if (path.StartsWith ("./"))  		path = path.Remove (0' 2);  	path = string.Format ("{0}/{1}"' pwd' path).GetFtpPath ();  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetNameListing,The following statement contains a magic number: if (!path.StartsWith ("/") && pwd != null && pwd.Trim ().Length > 0) {  	if (path.StartsWith ("./"))  		path = path.Remove (0' 2);  	path = string.Format ("{0}/{1}"' pwd' path).GetFtpPath ();  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetNameListing,The following statement contains a magic number: if (path.StartsWith ("./"))  	path = path.Remove (0' 2);  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetNameListing,The following statement contains a magic number: path = path.Remove (0' 2);  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Connect,The following statement contains a magic number: if (uri.UserInfo != null && uri.UserInfo.Length > 0) {  	if (uri.UserInfo.Contains (":")) {  		string[] parts = uri.UserInfo.Split (':');  		if (parts.Length != 2)  			throw new UriFormatException ("The user info portion of the URI contains more than 1 colon. The username and password portion of the URI should be URL encoded.");  		cl.Credentials = new NetworkCredential (HttpUtility.UrlDecode (parts [0])' HttpUtility.UrlDecode (parts [1]));  	} else  		cl.Credentials = new NetworkCredential (HttpUtility.UrlDecode (uri.UserInfo)' "");  } else {  	// if no credentials were supplied just make up  	// some for anonymous authentication.  	cl.Credentials = new NetworkCredential ("ftp"' "ftp");  }  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Connect,The following statement contains a magic number: if (uri.UserInfo.Contains (":")) {  	string[] parts = uri.UserInfo.Split (':');  	if (parts.Length != 2)  		throw new UriFormatException ("The user info portion of the URI contains more than 1 colon. The username and password portion of the URI should be URL encoded.");  	cl.Credentials = new NetworkCredential (HttpUtility.UrlDecode (parts [0])' HttpUtility.UrlDecode (parts [1]));  } else  	cl.Credentials = new NetworkCredential (HttpUtility.UrlDecode (uri.UserInfo)' "");  
Magic Number,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,Connect,The following statement contains a magic number: if (parts.Length != 2)  	throw new UriFormatException ("The user info portion of the URI contains more than 1 colon. The username and password portion of the URI should be URL encoded.");  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,Parse,The following statement contains a magic number: if (buf != null && buf.Length > 0) {  	FtpListItem item;  	foreach (Parser parser in Parsers) {  		if ((item = parser (buf' capabilities)) != null) {  			// if this is a vax/openvms file listing  			// there are no slashes in the path name  			if (parser == (new Parser (ParseVaxList)))  				item.FullName = path + item.Name;  			else {  				FtpTrace.WriteLine (item.Name);  				// remove globbing/wildcard from path  				if (path.GetFtpFileName ().Contains ("*")) {  					path = path.GetFtpDirectoryName ();  				}  				if (item.Name != null) {  					// absolute path? then ignore the path input to this method.  					if (item.Name.StartsWith ("/") || item.Name.StartsWith ("./") || item.Name.StartsWith ("../")) {  						item.FullName = item.Name;  						item.Name = item.Name.GetFtpFileName ();  					} else if (path != null) {  						item.FullName = path.GetFtpPath (item.Name);  						//.GetFtpPathWithoutGlob();  					} else {  						FtpTrace.WriteLine ("Couldn't determine the full path of this object:{0}{1}"' Environment.NewLine' item.ToString ());  					}  				}  				// if a link target is set and it doesn't include an absolute path  				// then try to resolve it.  				if (item.LinkTarget != null && !item.LinkTarget.StartsWith ("/")) {  					if (item.LinkTarget.StartsWith ("./"))  						item.LinkTarget = path.GetFtpPath (item.LinkTarget.Remove (0' 2));  					else  						item.LinkTarget = path.GetFtpPath (item.LinkTarget);  				}  			}  			item.Input = buf;  			return item;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,Parse,The following statement contains a magic number: foreach (Parser parser in Parsers) {  	if ((item = parser (buf' capabilities)) != null) {  		// if this is a vax/openvms file listing  		// there are no slashes in the path name  		if (parser == (new Parser (ParseVaxList)))  			item.FullName = path + item.Name;  		else {  			FtpTrace.WriteLine (item.Name);  			// remove globbing/wildcard from path  			if (path.GetFtpFileName ().Contains ("*")) {  				path = path.GetFtpDirectoryName ();  			}  			if (item.Name != null) {  				// absolute path? then ignore the path input to this method.  				if (item.Name.StartsWith ("/") || item.Name.StartsWith ("./") || item.Name.StartsWith ("../")) {  					item.FullName = item.Name;  					item.Name = item.Name.GetFtpFileName ();  				} else if (path != null) {  					item.FullName = path.GetFtpPath (item.Name);  					//.GetFtpPathWithoutGlob();  				} else {  					FtpTrace.WriteLine ("Couldn't determine the full path of this object:{0}{1}"' Environment.NewLine' item.ToString ());  				}  			}  			// if a link target is set and it doesn't include an absolute path  			// then try to resolve it.  			if (item.LinkTarget != null && !item.LinkTarget.StartsWith ("/")) {  				if (item.LinkTarget.StartsWith ("./"))  					item.LinkTarget = path.GetFtpPath (item.LinkTarget.Remove (0' 2));  				else  					item.LinkTarget = path.GetFtpPath (item.LinkTarget);  			}  		}  		item.Input = buf;  		return item;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,Parse,The following statement contains a magic number: if ((item = parser (buf' capabilities)) != null) {  	// if this is a vax/openvms file listing  	// there are no slashes in the path name  	if (parser == (new Parser (ParseVaxList)))  		item.FullName = path + item.Name;  	else {  		FtpTrace.WriteLine (item.Name);  		// remove globbing/wildcard from path  		if (path.GetFtpFileName ().Contains ("*")) {  			path = path.GetFtpDirectoryName ();  		}  		if (item.Name != null) {  			// absolute path? then ignore the path input to this method.  			if (item.Name.StartsWith ("/") || item.Name.StartsWith ("./") || item.Name.StartsWith ("../")) {  				item.FullName = item.Name;  				item.Name = item.Name.GetFtpFileName ();  			} else if (path != null) {  				item.FullName = path.GetFtpPath (item.Name);  				//.GetFtpPathWithoutGlob();  			} else {  				FtpTrace.WriteLine ("Couldn't determine the full path of this object:{0}{1}"' Environment.NewLine' item.ToString ());  			}  		}  		// if a link target is set and it doesn't include an absolute path  		// then try to resolve it.  		if (item.LinkTarget != null && !item.LinkTarget.StartsWith ("/")) {  			if (item.LinkTarget.StartsWith ("./"))  				item.LinkTarget = path.GetFtpPath (item.LinkTarget.Remove (0' 2));  			else  				item.LinkTarget = path.GetFtpPath (item.LinkTarget);  		}  	}  	item.Input = buf;  	return item;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,Parse,The following statement contains a magic number: if (parser == (new Parser (ParseVaxList)))  	item.FullName = path + item.Name;  else {  	FtpTrace.WriteLine (item.Name);  	// remove globbing/wildcard from path  	if (path.GetFtpFileName ().Contains ("*")) {  		path = path.GetFtpDirectoryName ();  	}  	if (item.Name != null) {  		// absolute path? then ignore the path input to this method.  		if (item.Name.StartsWith ("/") || item.Name.StartsWith ("./") || item.Name.StartsWith ("../")) {  			item.FullName = item.Name;  			item.Name = item.Name.GetFtpFileName ();  		} else if (path != null) {  			item.FullName = path.GetFtpPath (item.Name);  			//.GetFtpPathWithoutGlob();  		} else {  			FtpTrace.WriteLine ("Couldn't determine the full path of this object:{0}{1}"' Environment.NewLine' item.ToString ());  		}  	}  	// if a link target is set and it doesn't include an absolute path  	// then try to resolve it.  	if (item.LinkTarget != null && !item.LinkTarget.StartsWith ("/")) {  		if (item.LinkTarget.StartsWith ("./"))  			item.LinkTarget = path.GetFtpPath (item.LinkTarget.Remove (0' 2));  		else  			item.LinkTarget = path.GetFtpPath (item.LinkTarget);  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,Parse,The following statement contains a magic number: if (item.LinkTarget != null && !item.LinkTarget.StartsWith ("/")) {  	if (item.LinkTarget.StartsWith ("./"))  		item.LinkTarget = path.GetFtpPath (item.LinkTarget.Remove (0' 2));  	else  		item.LinkTarget = path.GetFtpPath (item.LinkTarget);  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,Parse,The following statement contains a magic number: if (item.LinkTarget.StartsWith ("./"))  	item.LinkTarget = path.GetFtpPath (item.LinkTarget.Remove (0' 2));  else  	item.LinkTarget = path.GetFtpPath (item.LinkTarget);  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,Parse,The following statement contains a magic number: item.LinkTarget = path.GetFtpPath (item.LinkTarget.Remove (0' 2));  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if ((m = Regex.Match (buf' @"unix.mode=(?<mode>\d+);"' RegexOptions.IgnoreCase)).Success) {  	if (m.Groups ["mode"].Value.Length == 4) {  		item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  	} else if (m.Groups ["mode"].Value.Length == 3) {  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if ((m = Regex.Match (buf' @"unix.mode=(?<mode>\d+);"' RegexOptions.IgnoreCase)).Success) {  	if (m.Groups ["mode"].Value.Length == 4) {  		item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  	} else if (m.Groups ["mode"].Value.Length == 3) {  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if ((m = Regex.Match (buf' @"unix.mode=(?<mode>\d+);"' RegexOptions.IgnoreCase)).Success) {  	if (m.Groups ["mode"].Value.Length == 4) {  		item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  	} else if (m.Groups ["mode"].Value.Length == 3) {  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if ((m = Regex.Match (buf' @"unix.mode=(?<mode>\d+);"' RegexOptions.IgnoreCase)).Success) {  	if (m.Groups ["mode"].Value.Length == 4) {  		item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  	} else if (m.Groups ["mode"].Value.Length == 3) {  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if ((m = Regex.Match (buf' @"unix.mode=(?<mode>\d+);"' RegexOptions.IgnoreCase)).Success) {  	if (m.Groups ["mode"].Value.Length == 4) {  		item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  	} else if (m.Groups ["mode"].Value.Length == 3) {  		item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  		item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  		item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if (m.Groups ["mode"].Value.Length == 4) {  	item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  } else if (m.Groups ["mode"].Value.Length == 3) {  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if (m.Groups ["mode"].Value.Length == 4) {  	item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  } else if (m.Groups ["mode"].Value.Length == 3) {  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if (m.Groups ["mode"].Value.Length == 4) {  	item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  } else if (m.Groups ["mode"].Value.Length == 3) {  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if (m.Groups ["mode"].Value.Length == 4) {  	item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  } else if (m.Groups ["mode"].Value.Length == 3) {  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if (m.Groups ["mode"].Value.Length == 4) {  	item.SpecialPermissions = (FtpSpecialPermissions)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  } else if (m.Groups ["mode"].Value.Length == 3) {  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [3].ToString ());  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if (m.Groups ["mode"].Value.Length == 3) {  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: if (m.Groups ["mode"].Value.Length == 3) {  	item.OwnerPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [0].ToString ());  	item.GroupPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [1].ToString ());  	item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseMachineList,The following statement contains a magic number: item.OthersPermissions = (FtpPermission)int.Parse (m.Groups ["mode"].Value [2].ToString ());  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: switch (item.Type) {  case FtpFileSystemObjectType.Directory:  	// ignore these...  	if (item.Name == "." || item.Name == "..")  		return null;  	break;  case FtpFileSystemObjectType.Link:  	if (!item.Name.Contains (" -> "))  		return null;  	item.LinkTarget = item.Name.Remove (0' item.Name.IndexOf ("-> ") + 3);  	item.Name = item.Name.Remove (item.Name.IndexOf (" -> "));  	break;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: item.LinkTarget = item.Name.Remove (0' item.Name.IndexOf ("-> ") + 3);  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (m.Groups ["permissions"].Value.Length > 0) {  	Match perms = Regex.Match (m.Groups ["permissions"].Value' @"[\w-]{1}(?<owner>[\w-]{3})(?<group>[\w-]{3})(?<others>[\w-]{3})"' RegexOptions.IgnoreCase);  	if (perms.Success) {  		if (perms.Groups ["owner"].Value.Length == 3) {  			if (perms.Groups ["owner"].Value [0] == 'r')  				item.OwnerPermissions |= FtpPermission.Read;  			if (perms.Groups ["owner"].Value [1] == 'w')  				item.OwnerPermissions |= FtpPermission.Write;  			if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  				item.OwnerPermissions |= FtpPermission.Execute;  			if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  		}  		if (perms.Groups ["group"].Value.Length == 3) {  			if (perms.Groups ["group"].Value [0] == 'r')  				item.GroupPermissions |= FtpPermission.Read;  			if (perms.Groups ["group"].Value [1] == 'w')  				item.GroupPermissions |= FtpPermission.Write;  			if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  				item.GroupPermissions |= FtpPermission.Execute;  			if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  				item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  		}  		if (perms.Groups ["others"].Value.Length == 3) {  			if (perms.Groups ["others"].Value [0] == 'r')  				item.OthersPermissions |= FtpPermission.Read;  			if (perms.Groups ["others"].Value [1] == 'w')  				item.OthersPermissions |= FtpPermission.Write;  			if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  				item.OthersPermissions |= FtpPermission.Execute;  			if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  				item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  		}  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Success) {  	if (perms.Groups ["owner"].Value.Length == 3) {  		if (perms.Groups ["owner"].Value [0] == 'r')  			item.OwnerPermissions |= FtpPermission.Read;  		if (perms.Groups ["owner"].Value [1] == 'w')  			item.OwnerPermissions |= FtpPermission.Write;  		if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  			item.OwnerPermissions |= FtpPermission.Execute;  		if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  	}  	if (perms.Groups ["group"].Value.Length == 3) {  		if (perms.Groups ["group"].Value [0] == 'r')  			item.GroupPermissions |= FtpPermission.Read;  		if (perms.Groups ["group"].Value [1] == 'w')  			item.GroupPermissions |= FtpPermission.Write;  		if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  			item.GroupPermissions |= FtpPermission.Execute;  		if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  			item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  	}  	if (perms.Groups ["others"].Value.Length == 3) {  		if (perms.Groups ["others"].Value [0] == 'r')  			item.OthersPermissions |= FtpPermission.Read;  		if (perms.Groups ["others"].Value [1] == 'w')  			item.OthersPermissions |= FtpPermission.Write;  		if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  			item.OthersPermissions |= FtpPermission.Execute;  		if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  			item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  	}  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value.Length == 3) {  	if (perms.Groups ["owner"].Value [0] == 'r')  		item.OwnerPermissions |= FtpPermission.Read;  	if (perms.Groups ["owner"].Value [1] == 'w')  		item.OwnerPermissions |= FtpPermission.Write;  	if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  		item.OwnerPermissions |= FtpPermission.Execute;  	if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value.Length == 3) {  	if (perms.Groups ["owner"].Value [0] == 'r')  		item.OwnerPermissions |= FtpPermission.Read;  	if (perms.Groups ["owner"].Value [1] == 'w')  		item.OwnerPermissions |= FtpPermission.Write;  	if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  		item.OwnerPermissions |= FtpPermission.Execute;  	if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value.Length == 3) {  	if (perms.Groups ["owner"].Value [0] == 'r')  		item.OwnerPermissions |= FtpPermission.Read;  	if (perms.Groups ["owner"].Value [1] == 'w')  		item.OwnerPermissions |= FtpPermission.Write;  	if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  		item.OwnerPermissions |= FtpPermission.Execute;  	if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value.Length == 3) {  	if (perms.Groups ["owner"].Value [0] == 'r')  		item.OwnerPermissions |= FtpPermission.Read;  	if (perms.Groups ["owner"].Value [1] == 'w')  		item.OwnerPermissions |= FtpPermission.Write;  	if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  		item.OwnerPermissions |= FtpPermission.Execute;  	if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value.Length == 3) {  	if (perms.Groups ["owner"].Value [0] == 'r')  		item.OwnerPermissions |= FtpPermission.Read;  	if (perms.Groups ["owner"].Value [1] == 'w')  		item.OwnerPermissions |= FtpPermission.Write;  	if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  		item.OwnerPermissions |= FtpPermission.Execute;  	if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  	item.OwnerPermissions |= FtpPermission.Execute;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value [2] == 'x' || perms.Groups ["owner"].Value [2] == 's')  	item.OwnerPermissions |= FtpPermission.Execute;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  	item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["owner"].Value [2] == 's' || perms.Groups ["owner"].Value [2] == 'S')  	item.SpecialPermissions |= FtpSpecialPermissions.SetUserID;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value.Length == 3) {  	if (perms.Groups ["group"].Value [0] == 'r')  		item.GroupPermissions |= FtpPermission.Read;  	if (perms.Groups ["group"].Value [1] == 'w')  		item.GroupPermissions |= FtpPermission.Write;  	if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  		item.GroupPermissions |= FtpPermission.Execute;  	if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value.Length == 3) {  	if (perms.Groups ["group"].Value [0] == 'r')  		item.GroupPermissions |= FtpPermission.Read;  	if (perms.Groups ["group"].Value [1] == 'w')  		item.GroupPermissions |= FtpPermission.Write;  	if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  		item.GroupPermissions |= FtpPermission.Execute;  	if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value.Length == 3) {  	if (perms.Groups ["group"].Value [0] == 'r')  		item.GroupPermissions |= FtpPermission.Read;  	if (perms.Groups ["group"].Value [1] == 'w')  		item.GroupPermissions |= FtpPermission.Write;  	if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  		item.GroupPermissions |= FtpPermission.Execute;  	if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value.Length == 3) {  	if (perms.Groups ["group"].Value [0] == 'r')  		item.GroupPermissions |= FtpPermission.Read;  	if (perms.Groups ["group"].Value [1] == 'w')  		item.GroupPermissions |= FtpPermission.Write;  	if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  		item.GroupPermissions |= FtpPermission.Execute;  	if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value.Length == 3) {  	if (perms.Groups ["group"].Value [0] == 'r')  		item.GroupPermissions |= FtpPermission.Read;  	if (perms.Groups ["group"].Value [1] == 'w')  		item.GroupPermissions |= FtpPermission.Write;  	if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  		item.GroupPermissions |= FtpPermission.Execute;  	if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  		item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  	item.GroupPermissions |= FtpPermission.Execute;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value [2] == 'x' || perms.Groups ["group"].Value [2] == 's')  	item.GroupPermissions |= FtpPermission.Execute;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  	item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["group"].Value [2] == 's' || perms.Groups ["group"].Value [2] == 'S')  	item.SpecialPermissions |= FtpSpecialPermissions.SetGroupID;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value.Length == 3) {  	if (perms.Groups ["others"].Value [0] == 'r')  		item.OthersPermissions |= FtpPermission.Read;  	if (perms.Groups ["others"].Value [1] == 'w')  		item.OthersPermissions |= FtpPermission.Write;  	if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  		item.OthersPermissions |= FtpPermission.Execute;  	if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  		item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value.Length == 3) {  	if (perms.Groups ["others"].Value [0] == 'r')  		item.OthersPermissions |= FtpPermission.Read;  	if (perms.Groups ["others"].Value [1] == 'w')  		item.OthersPermissions |= FtpPermission.Write;  	if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  		item.OthersPermissions |= FtpPermission.Execute;  	if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  		item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value.Length == 3) {  	if (perms.Groups ["others"].Value [0] == 'r')  		item.OthersPermissions |= FtpPermission.Read;  	if (perms.Groups ["others"].Value [1] == 'w')  		item.OthersPermissions |= FtpPermission.Write;  	if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  		item.OthersPermissions |= FtpPermission.Execute;  	if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  		item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value.Length == 3) {  	if (perms.Groups ["others"].Value [0] == 'r')  		item.OthersPermissions |= FtpPermission.Read;  	if (perms.Groups ["others"].Value [1] == 'w')  		item.OthersPermissions |= FtpPermission.Write;  	if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  		item.OthersPermissions |= FtpPermission.Execute;  	if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  		item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value.Length == 3) {  	if (perms.Groups ["others"].Value [0] == 'r')  		item.OthersPermissions |= FtpPermission.Read;  	if (perms.Groups ["others"].Value [1] == 'w')  		item.OthersPermissions |= FtpPermission.Write;  	if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  		item.OthersPermissions |= FtpPermission.Execute;  	if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  		item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  }  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  	item.OthersPermissions |= FtpPermission.Execute;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value [2] == 'x' || perms.Groups ["others"].Value [2] == 't')  	item.OthersPermissions |= FtpPermission.Execute;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  	item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  
Magic Number,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following statement contains a magic number: if (perms.Groups ["others"].Value [2] == 't' || perms.Groups ["others"].Value [2] == 'T')  	item.SpecialPermissions |= FtpSpecialPermissions.Sticky;  
Missing Default,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetFeatures,The following switch statement is missing a default case: switch (type.ToUpper ().Trim ()) {  case "SHA-1":  case "SHA-1*":  	m_hashAlgorithms |= FtpHashAlgorithm.SHA1;  	break;  case "SHA-256":  case "SHA-256*":  	m_hashAlgorithms |= FtpHashAlgorithm.SHA256;  	break;  case "SHA-512":  case "SHA-512*":  	m_hashAlgorithms |= FtpHashAlgorithm.SHA512;  	break;  case "MD5":  case "MD5*":  	m_hashAlgorithms |= FtpHashAlgorithm.MD5;  	break;  case "CRC":  case "CRC*":  	m_hashAlgorithms |= FtpHashAlgorithm.CRC;  	break;  }  
Missing Default,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenDataStream,The following switch statement is missing a default case: switch (type) {  case FtpDataConnectionType.PORT:  	type = FtpDataConnectionType.EPRT;  	FtpTrace.WriteLine ("Changed data connection type to EPRT because we are connected with IPv6.");  	break;  case FtpDataConnectionType.PASV:  case FtpDataConnectionType.PASVEX:  	type = FtpDataConnectionType.EPSV;  	FtpTrace.WriteLine ("Changed data connection type to EPSV because we are connected with IPv6.");  	break;  }  
Missing Default,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,OpenDataStream,The following switch statement is missing a default case: switch (type) {  case FtpDataConnectionType.AutoPassive:  case FtpDataConnectionType.EPSV:  case FtpDataConnectionType.PASV:  case FtpDataConnectionType.PASVEX:  	stream = OpenPassiveDataStream (type' command' restart);  	break;  case FtpDataConnectionType.AutoActive:  case FtpDataConnectionType.EPRT:  case FtpDataConnectionType.PORT:  	stream = OpenActiveDataStream (type' command' restart);  	break;  }  
Missing Default,System.Net.FtpClient,FtpClient,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpClient.cs,GetHashAlgorithm,The following switch statement is missing a default case: switch (reply.Message) {  case "SHA-1":  	type = FtpHashAlgorithm.SHA1;  	break;  case "SHA-256":  	type = FtpHashAlgorithm.SHA256;  	break;  case "SHA-512":  	type = FtpHashAlgorithm.SHA512;  	break;  case "MD5":  	type = FtpHashAlgorithm.MD5;  	break;  }  
Missing Default,System.Net.FtpClient,FtpListItem,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpListItem.cs,ParseUnixList,The following switch statement is missing a default case: switch (item.Type) {  case FtpFileSystemObjectType.Directory:  	// ignore these...  	if (item.Name == "." || item.Name == "..")  		return null;  	break;  case FtpFileSystemObjectType.Link:  	if (!item.Name.Contains (" -> "))  		return null;  	item.LinkTarget = item.Name.Remove (0' item.Name.IndexOf ("-> ") + 3);  	item.Name = item.Name.Remove (item.Name.IndexOf (" -> "));  	break;  }  
Missing Default,System.Net.FtpClient,FtpSocketStream,F:\newReposMay17\dukus_digiCamControl\packages\System.Net.FtpClient.1.0.5824.34026\source\FtpSocketStream.cs,Connect,The following switch statement is missing a default case: switch (addresses [i].AddressFamily) {  case AddressFamily.InterNetwork:  	if ((ipVersions & FtpIpVersion.IPv4) != FtpIpVersion.IPv4) {  		#if DEBUG  		FtpTrace.WriteLine ("SKIPPED!");  		#endif  		continue;  	}  	break;  case AddressFamily.InterNetworkV6:  	if ((ipVersions & FtpIpVersion.IPv6) != FtpIpVersion.IPv6) {  		#if DEBUG  		FtpTrace.WriteLine ("SKIPPED!");  		#endif  		continue;  	}  	break;  }  
