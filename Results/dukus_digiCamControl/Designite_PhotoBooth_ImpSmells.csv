Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PhotoBooth,ColorUtility,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\ColorUtility.cs,Convert,Cyclomatic complexity of the method is 8
Complex Method,PhotoBooth,PhotoBoothControlWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothControl.xaml.cs,UpdateImageDisplay,Cyclomatic complexity of the method is 21
Complex Method,PhotoBooth.Cards,ThreeSmallOneLargeCardTemplate,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\Cards\ThreeSmallOneLargeCardTemplate.cs,OnImageUpdated,Cyclomatic complexity of the method is 13
Complex Method,PhotoBooth.Cards,TwoByTwoCardTemplate,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\Cards\TwoByTwoCardTemplate.cs,OnImageUpdated,Cyclomatic complexity of the method is 13
Long Parameter List,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,WndProc,The method has 5 parameters.
Long Statement,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,GenerateImage,The length of the statement  "	FormattedText text = new FormattedText (content' CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface (this.FontFamily' FontStyles.Normal' FontWeights.Normal' new FontStretch ())' fontSize' this.Foreground); " is 224.
Long Statement,PhotoBooth,DocumentUtility,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\DocumentUtility.cs,CreateFixedDocument,The length of the statement  "	RenderTargetBitmap renderTarget = new RenderTargetBitmap (Convert.ToInt32 (content.RenderSize.Width)' Convert.ToInt32 (content.RenderSize.Height)' Constants.ScreenDPI' Constants.ScreenDPI' PixelFormats.Pbgra32); " is 211.
Long Statement,PhotoBooth,PhotoCard,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoCard.cs,GetJpgImage,The length of the statement  "	RenderTargetBitmap renderTarget = new RenderTargetBitmap ((int)renderWidth' (int)renderHeight' dpi' dpi' PixelFormats.Pbgra32); " is 127.
Long Statement,PhotoBooth,WindowsMessage,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\WindowsMessage.cs,Matches,The length of the statement  "	return this.Message == message && (this.IgnoreWParam || this.wParam == wparam) && (this.IgnoreLParam || this.lParam == lparam); " is 127.
Long Statement,PhotoBooth,PhotoBoothControlWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothControl.xaml.cs,PhotoBooth_CanExecute,The length of the statement  "	e.CanExecute = !this.initializing && this.camera != null && this.camera.CameraReady && this.SelectedTemplate != null && (!this.OneButtonOperation || this.OneButtonMessage != null); " is 180.
Long Statement,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,CaptureImages,The length of the statement  "		Debug.WriteLine ("Pre capture: {0}:{1}:{2}:{3}"' testTime.Hour' testTime.Minute' testTime.Second' testTime.Millisecond); " is 120.
Long Statement,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,CaptureImages,The length of the statement  "		Debug.WriteLine ("Post capture: {0}:{1}:{2}:{3}"' testTime.Hour' testTime.Minute' testTime.Second' testTime.Millisecond); " is 121.
Long Statement,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,PhotoCaptured,The length of the statement  "		Debug.WriteLine ("Pre transfer: {0}:{1}:{2}:{3}"' testTime.Hour' testTime.Minute' testTime.Second' testTime.Millisecond); " is 121.
Long Statement,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,PhotoCaptured,The length of the statement  "		Debug.WriteLine ("Post transfer: {0}:{1}:{2}:{3}"' testTime.Hour' testTime.Minute' testTime.Second' testTime.Millisecond); " is 122.
Long Statement,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,CanPrint,The length of the statement  "	return !this.TakingPictures && this.CardTemplate != null && this.CardTemplate.CanPrint && this.photoContainer.Visibility == System.Windows.Visibility.Visible; " is 158.
Long Statement,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,GetNextCardFileName,The length of the statement  "		fileName = System.IO.Path.Combine (this.SaveFileLocation.FullName' string.Format (SaveCardFormat' this.saveFileCount++)); " is 121.
Long Statement,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,WndProc,The length of the statement  "	if (this.OneButtonOperation && this.OneButtonMessage != null && this.OneButtonMessage.Matches (msg' wParam' lParam) && this.CanTakePictureSet ()) { " is 147.
Complex Conditional,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,WndProc,The conditional expression  "this.OneButtonOperation && this.OneButtonMessage != null && this.OneButtonMessage.Matches (msg' wParam' lParam) && this.CanTakePictureSet ()"  is complex.
Empty Catch Block,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,PhotoCaptured,The method has an empty catch block.
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,ShowPreview,The following statement contains a magic number: if (this.CardTemplate != null) {  	for (int i = this.CardTemplate.Images.Count + 1; i <= this.CardTemplate.ImagesRequired; i++) {  		this.CardTemplate.Images.Add (this.GenerateImage (string.Format ("{0}"' i)));  	}  	PhotoCard card = this.CardTemplate.CreateCard ();  	card.Owner = this.Owner;  	card.SizeToContent = SizeToContent.Width;  	card.Width /= 2;  	card.ShowDialog ();  }  
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,ShowPreview,The following statement contains a magic number: card.Width /= 2;  
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,GenerateImage,The following statement contains a magic number: using (drawingContext) {  	Pen pen = new Pen (Brushes.Red' 2);  	Rect rect = new Rect (margin' margin' width - 2 * margin' height - 2 * margin);  	drawingContext.DrawRoundedRectangle (Brushes.Gray' pen' rect' margin' margin);  	drawingContext.DrawText (text' new Point (width / 2' (height - fontSize) / 2));  	drawingContext.Close ();  }  
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,GenerateImage,The following statement contains a magic number: using (drawingContext) {  	Pen pen = new Pen (Brushes.Red' 2);  	Rect rect = new Rect (margin' margin' width - 2 * margin' height - 2 * margin);  	drawingContext.DrawRoundedRectangle (Brushes.Gray' pen' rect' margin' margin);  	drawingContext.DrawText (text' new Point (width / 2' (height - fontSize) / 2));  	drawingContext.Close ();  }  
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,GenerateImage,The following statement contains a magic number: using (drawingContext) {  	Pen pen = new Pen (Brushes.Red' 2);  	Rect rect = new Rect (margin' margin' width - 2 * margin' height - 2 * margin);  	drawingContext.DrawRoundedRectangle (Brushes.Gray' pen' rect' margin' margin);  	drawingContext.DrawText (text' new Point (width / 2' (height - fontSize) / 2));  	drawingContext.Close ();  }  
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,GenerateImage,The following statement contains a magic number: using (drawingContext) {  	Pen pen = new Pen (Brushes.Red' 2);  	Rect rect = new Rect (margin' margin' width - 2 * margin' height - 2 * margin);  	drawingContext.DrawRoundedRectangle (Brushes.Gray' pen' rect' margin' margin);  	drawingContext.DrawText (text' new Point (width / 2' (height - fontSize) / 2));  	drawingContext.Close ();  }  
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,GenerateImage,The following statement contains a magic number: using (drawingContext) {  	Pen pen = new Pen (Brushes.Red' 2);  	Rect rect = new Rect (margin' margin' width - 2 * margin' height - 2 * margin);  	drawingContext.DrawRoundedRectangle (Brushes.Gray' pen' rect' margin' margin);  	drawingContext.DrawText (text' new Point (width / 2' (height - fontSize) / 2));  	drawingContext.Close ();  }  
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,GenerateImage,The following statement contains a magic number: drawingContext.DrawText (text' new Point (width / 2' (height - fontSize) / 2));  
Magic Number,PhotoBooth,CardDesigner,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\CardDesigner.xaml.cs,GenerateImage,The following statement contains a magic number: drawingContext.DrawText (text' new Point (width / 2' (height - fontSize) / 2));  
Magic Number,PhotoBooth,PhotoBoothControlWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothControl.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: foreach (string filename in imageFilenames) {  	if (!File.Exists (filename)) {  		continue;  	}  	Uri imageLocation = new Uri (filename' UriKind.Absolute);  	BitmapImage image = new BitmapImage (imageLocation);  	switch (count) {  	case 0:  		this.image1.Source = image;  		this.image1.Visibility = System.Windows.Visibility.Visible;  		break;  	case 1:  		this.image2.Source = image;  		this.image2.Visibility = System.Windows.Visibility.Visible;  		break;  	case 2:  		this.image3.Source = image;  		this.image3.Visibility = System.Windows.Visibility.Visible;  		break;  	case 3:  		this.image4.Source = image;  		this.image4.Visibility = System.Windows.Visibility.Visible;  		break;  	default:  		break;  	}  	if (count >= 3) {  		break;  	}  	count++;  }  
Magic Number,PhotoBooth,PhotoBoothControlWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothControl.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: foreach (string filename in imageFilenames) {  	if (!File.Exists (filename)) {  		continue;  	}  	Uri imageLocation = new Uri (filename' UriKind.Absolute);  	BitmapImage image = new BitmapImage (imageLocation);  	switch (count) {  	case 0:  		this.image1.Source = image;  		this.image1.Visibility = System.Windows.Visibility.Visible;  		break;  	case 1:  		this.image2.Source = image;  		this.image2.Visibility = System.Windows.Visibility.Visible;  		break;  	case 2:  		this.image3.Source = image;  		this.image3.Visibility = System.Windows.Visibility.Visible;  		break;  	case 3:  		this.image4.Source = image;  		this.image4.Visibility = System.Windows.Visibility.Visible;  		break;  	default:  		break;  	}  	if (count >= 3) {  		break;  	}  	count++;  }  
Magic Number,PhotoBooth,PhotoBoothControlWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothControl.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: foreach (string filename in imageFilenames) {  	if (!File.Exists (filename)) {  		continue;  	}  	Uri imageLocation = new Uri (filename' UriKind.Absolute);  	BitmapImage image = new BitmapImage (imageLocation);  	switch (count) {  	case 0:  		this.image1.Source = image;  		this.image1.Visibility = System.Windows.Visibility.Visible;  		break;  	case 1:  		this.image2.Source = image;  		this.image2.Visibility = System.Windows.Visibility.Visible;  		break;  	case 2:  		this.image3.Source = image;  		this.image3.Visibility = System.Windows.Visibility.Visible;  		break;  	case 3:  		this.image4.Source = image;  		this.image4.Visibility = System.Windows.Visibility.Visible;  		break;  	default:  		break;  	}  	if (count >= 3) {  		break;  	}  	count++;  }  
Magic Number,PhotoBooth,PhotoBoothControlWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothControl.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: switch (count) {  case 0:  	this.image1.Source = image;  	this.image1.Visibility = System.Windows.Visibility.Visible;  	break;  case 1:  	this.image2.Source = image;  	this.image2.Visibility = System.Windows.Visibility.Visible;  	break;  case 2:  	this.image3.Source = image;  	this.image3.Visibility = System.Windows.Visibility.Visible;  	break;  case 3:  	this.image4.Source = image;  	this.image4.Visibility = System.Windows.Visibility.Visible;  	break;  default:  	break;  }  
Magic Number,PhotoBooth,PhotoBoothControlWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothControl.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: switch (count) {  case 0:  	this.image1.Source = image;  	this.image1.Visibility = System.Windows.Visibility.Visible;  	break;  case 1:  	this.image2.Source = image;  	this.image2.Visibility = System.Windows.Visibility.Visible;  	break;  case 2:  	this.image3.Source = image;  	this.image3.Visibility = System.Windows.Visibility.Visible;  	break;  case 3:  	this.image4.Source = image;  	this.image4.Visibility = System.Windows.Visibility.Visible;  	break;  default:  	break;  }  
Magic Number,PhotoBooth,PhotoBoothControlWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothControl.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: if (count >= 3) {  	break;  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,PhotoBoothCamera,The following statement contains a magic number: this.ImageCount = 4;  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,PhotoBoothCamera,The following statement contains a magic number: this.ImageInterval = 500;  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,TakePictureSet,The following statement contains a magic number: if (this.ImageCount < 1 || this.ImageCount > 100) {  	this.ImageCount = 4;  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,TakePictureSet,The following statement contains a magic number: if (this.ImageCount < 1 || this.ImageCount > 100) {  	this.ImageCount = 4;  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,TakePictureSet,The following statement contains a magic number: this.ImageCount = 4;  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,TakePictureSet,The following statement contains a magic number: if (this.ImageInterval < 250 || this.ImageInterval > 1000) {  	this.ImageInterval = 400;  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,TakePictureSet,The following statement contains a magic number: if (this.ImageInterval < 250 || this.ImageInterval > 1000) {  	this.ImageInterval = 400;  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,TakePictureSet,The following statement contains a magic number: if (this.ImageInterval < 250 || this.ImageInterval > 1000) {  	this.ImageInterval = 400;  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,TakePictureSet,The following statement contains a magic number: this.ImageInterval = 400;  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,CaptureImages,The following statement contains a magic number: while (currentImage < this.ImageCount) {  	while (DateTime.Now < nextImageCapture) {  		Thread.Sleep (10);  	}  	DateTime testTime = DateTime.Now;  	Debug.WriteLine ("Pre capture: {0}:{1}:{2}:{3}"' testTime.Hour' testTime.Minute' testTime.Second' testTime.Millisecond);  	this.Capture ();  	testTime = DateTime.Now;  	Debug.WriteLine ("Post capture: {0}:{1}:{2}:{3}"' testTime.Hour' testTime.Minute' testTime.Second' testTime.Millisecond);  	nextImageCapture = DateTime.Now.AddMilliseconds ((double)this.ImageInterval);  	while (!this.imageCaptured) {  		// need to add error time out here  		Thread.Sleep (10);  	}  	this.captureFiles.Add (this.lastImageFile);  	currentImage++;  	if (this.CaptureComplete != null) {  		this.OnCaptureComplete ();  	}  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,CaptureImages,The following statement contains a magic number: while (currentImage < this.ImageCount) {  	while (DateTime.Now < nextImageCapture) {  		Thread.Sleep (10);  	}  	DateTime testTime = DateTime.Now;  	Debug.WriteLine ("Pre capture: {0}:{1}:{2}:{3}"' testTime.Hour' testTime.Minute' testTime.Second' testTime.Millisecond);  	this.Capture ();  	testTime = DateTime.Now;  	Debug.WriteLine ("Post capture: {0}:{1}:{2}:{3}"' testTime.Hour' testTime.Minute' testTime.Second' testTime.Millisecond);  	nextImageCapture = DateTime.Now.AddMilliseconds ((double)this.ImageInterval);  	while (!this.imageCaptured) {  		// need to add error time out here  		Thread.Sleep (10);  	}  	this.captureFiles.Add (this.lastImageFile);  	currentImage++;  	if (this.CaptureComplete != null) {  		this.OnCaptureComplete ();  	}  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,CaptureImages,The following statement contains a magic number: while (DateTime.Now < nextImageCapture) {  	Thread.Sleep (10);  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,CaptureImages,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,CaptureImages,The following statement contains a magic number: while (!this.imageCaptured) {  	// need to add error time out here  	Thread.Sleep (10);  }  
Magic Number,PhotoBooth,PhotoBoothCamera,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothCamera.cs,CaptureImages,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,PhotoBoothWindow,The following statement contains a magic number: this.fontSizeAnimation = new DoubleAnimation (this.initialStatusFontSize / 4' TimeSpan.FromSeconds (1.0));  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: if (this.Camera.CaptureFiles.Count >= 2 && !string.IsNullOrEmpty (this.Camera.CaptureFiles [1])) {  	Properties.Settings.Default.ImagePath2 = this.Camera.CaptureFiles [1];  }  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: if (this.Camera.CaptureFiles.Count >= 3 && !string.IsNullOrEmpty (this.Camera.CaptureFiles [2])) {  	Properties.Settings.Default.ImagePath3 = this.Camera.CaptureFiles [2];  }  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: if (this.Camera.CaptureFiles.Count >= 3 && !string.IsNullOrEmpty (this.Camera.CaptureFiles [2])) {  	Properties.Settings.Default.ImagePath3 = this.Camera.CaptureFiles [2];  }  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: if (this.Camera.CaptureFiles.Count >= 3 && !string.IsNullOrEmpty (this.Camera.CaptureFiles [2])) {  	Properties.Settings.Default.ImagePath3 = this.Camera.CaptureFiles [2];  }  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: Properties.Settings.Default.ImagePath3 = this.Camera.CaptureFiles [2];  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: if (this.Camera.CaptureFiles.Count >= 4 && !string.IsNullOrEmpty (this.Camera.CaptureFiles [3])) {  	Properties.Settings.Default.ImagePath4 = this.Camera.CaptureFiles [3];  }  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: if (this.Camera.CaptureFiles.Count >= 4 && !string.IsNullOrEmpty (this.Camera.CaptureFiles [3])) {  	Properties.Settings.Default.ImagePath4 = this.Camera.CaptureFiles [3];  }  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: if (this.Camera.CaptureFiles.Count >= 4 && !string.IsNullOrEmpty (this.Camera.CaptureFiles [3])) {  	Properties.Settings.Default.ImagePath4 = this.Camera.CaptureFiles [3];  }  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,UpdateImageDisplay,The following statement contains a magic number: Properties.Settings.Default.ImagePath4 = this.Camera.CaptureFiles [3];  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,PrintCard,The following statement contains a magic number: if (this.SaveCards && this.SaveFileLocation.Exists) {  	string fileName = GetNextCardFileName ();  	Byte[] jpeg = cardView.GetJpgImage (2.0' 95' Constants.ScreenDPI);  	System.IO.File.WriteAllBytes (fileName' jpeg);  }  
Magic Number,PhotoBooth,PhotoBoothWindow,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\PhotoBoothWindow.xaml.cs,PrintCard,The following statement contains a magic number: if (this.SaveCards && this.SaveFileLocation.Exists) {  	string fileName = GetNextCardFileName ();  	Byte[] jpeg = cardView.GetJpgImage (2.0' 95' Constants.ScreenDPI);  	System.IO.File.WriteAllBytes (fileName' jpeg);  }  
Magic Number,PhotoBooth.Cards,ThreeSmallOneLargeCardTemplate,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\Cards\ThreeSmallOneLargeCardTemplate.cs,ThreeSmallOneLargeCardTemplate,The following statement contains a magic number: this.ImagesRequired = 4;  
Magic Number,PhotoBooth.Cards,ThreeSmallOneLargeCardTemplate,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\Cards\ThreeSmallOneLargeCardTemplate.cs,OnImageUpdated,The following statement contains a magic number: switch (imageIndex) {  case 0:  	this.TopLeftImage = imageSrc;  	break;  case 1:  	this.TopMiddleImage = imageSrc;  	break;  case 2:  	this.TopRightImage = imageSrc;  	break;  case 3:  	this.BottomImage = imageSrc;  	break;  default:  	return;  }  
Magic Number,PhotoBooth.Cards,ThreeSmallOneLargeCardTemplate,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\Cards\ThreeSmallOneLargeCardTemplate.cs,OnImageUpdated,The following statement contains a magic number: switch (imageIndex) {  case 0:  	this.TopLeftImage = imageSrc;  	break;  case 1:  	this.TopMiddleImage = imageSrc;  	break;  case 2:  	this.TopRightImage = imageSrc;  	break;  case 3:  	this.BottomImage = imageSrc;  	break;  default:  	return;  }  
Magic Number,PhotoBooth.Cards,TwoByTwoCardTemplate,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\Cards\TwoByTwoCardTemplate.cs,TwoByTwoCardTemplate,The following statement contains a magic number: this.ImagesRequired = 4;  
Magic Number,PhotoBooth.Cards,TwoByTwoCardTemplate,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\Cards\TwoByTwoCardTemplate.cs,OnImageUpdated,The following statement contains a magic number: switch (imageIndex) {  case 0:  	this.TopLeftImage = imageSrc;  	break;  case 1:  	this.TopRightImage = imageSrc;  	break;  case 2:  	this.BottomLeftImage = imageSrc;  	break;  case 3:  	this.BottomRightImage = imageSrc;  	break;  default:  	return;  }  
Magic Number,PhotoBooth.Cards,TwoByTwoCardTemplate,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\Cards\TwoByTwoCardTemplate.cs,OnImageUpdated,The following statement contains a magic number: switch (imageIndex) {  case 0:  	this.TopLeftImage = imageSrc;  	break;  case 1:  	this.TopRightImage = imageSrc;  	break;  case 2:  	this.BottomLeftImage = imageSrc;  	break;  case 3:  	this.BottomRightImage = imageSrc;  	break;  default:  	return;  }  
Missing Default,PhotoBooth,ColorUtility,F:\newReposMay17\dukus_digiCamControl\PhotoBooth\ColorUtility.cs,Convert,The following switch statement is missing a default case: switch (conversion) {  case ColorConversion.BlackAndWhite:  	format = PixelFormats.BlackWhite;  	break;  case ColorConversion.GrayScale:  	format = PixelFormats.Gray32Float;  	break;  }  
