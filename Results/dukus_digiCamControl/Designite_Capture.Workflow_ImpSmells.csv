Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Capture.Workflow.Wpf.Controls,EditableTextBlock,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\EditableTextBlock.cs,IsInEditModeUpdate,Cyclomatic complexity of the method is 8
Long Statement,Capture.Workflow.Wpf.Controls,IconPicker,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\IconPicker.xaml.cs,AddIcons,The length of the statement  "	var packIconKinds = Enum.GetNames (typeof(PackIconKind)).OrderBy (k => k' StringComparer.InvariantCultureIgnoreCase).ToList (); " is 127.
Magic Number,Capture.Workflow.Wpf.Controls,EditableTextBlock,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\EditableTextBlock.cs,OnMouseDown,The following statement contains a magic number: if (e.MiddleButton == MouseButtonState.Pressed) {  	IsInEditMode = true;  } else if (e.ClickCount == 2) {  	IsInEditMode = true;  }  
Magic Number,Capture.Workflow.Wpf.Controls,EditableTextBlock,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\EditableTextBlock.cs,OnMouseDown,The following statement contains a magic number: if (e.ClickCount == 2) {  	IsInEditMode = true;  }  
Magic Number,Capture.Workflow.Wpf.Controls,EditableTextBlockAdorner,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\EditableTextBlockAdorner.cs,ArrangeOverride,The following statement contains a magic number: _textBox.Arrange (new Rect (0' -5' finalSize.Width' finalSize.Height + 10));  
Magic Number,Capture.Workflow.Wpf.Controls,EditableTextBlockAdorner,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\EditableTextBlockAdorner.cs,ArrangeOverride,The following statement contains a magic number: _textBox.Arrange (new Rect (0' -5' finalSize.Width' finalSize.Height + 10));  
Missing Default,Capture.Workflow.ViewModel,WorkflowViewViewModel,F:\newReposMay17\dukus_digiCamControl\Capture.Workflow\ViewModel\WorkflowViewViewModel.cs,Instance_Message,The following switch statement is missing a default case: switch (e.Name) {  case Messages.ShowView:  	WorkFlowView view = Workflow.GetView ((string)e.Param);  	if (view != null) {  		if (Contents.DataContext != null) {  			// dispose old view if was loaded  			var obj = Contents.DataContext as IDisposable;  			if (obj != null) {  				obj.Dispose ();  			}  		}  		Contents = view.Instance.GetPreview (view);  	}  	break;  }  
