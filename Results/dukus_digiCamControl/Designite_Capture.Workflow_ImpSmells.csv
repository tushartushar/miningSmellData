Implementation smell,Namespace,Class,File,Method,Description
Long Method,Capture.Workflow.Wpf.Converters,ParameterToControlConverter,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Converters\ParameterToControlConverter.cs,Convert,The method has 100 lines of code.
Long Parameter List,Capture.Workflow.Classes,GoogleAnalytics,C:\repos\dukus_digiCamControl\Capture.Workflow\Classes\GoogleAnalytics.cs,EcommerceTransaction,The method has 6 parameters. Parameters: id' affiliation' revenue' shipping' tax' currency
Long Parameter List,Capture.Workflow.Classes,GoogleAnalytics,C:\repos\dukus_digiCamControl\Capture.Workflow\Classes\GoogleAnalytics.cs,EcommerceItem,The method has 7 parameters. Parameters: id' name' price' quantity' code' category' currency
Long Identifier,Capture.Workflow.ViewModel,WorkflowEditorViewModel,C:\repos\dukus_digiCamControl\Capture.Workflow\ViewModel\WorkflowEditorViewModel.cs,,The length of the parameter _selectedViewCommandCollection is 30.
Long Statement,Capture.Workflow.Classes,GoogleAnalytics,C:\repos\dukus_digiCamControl\Capture.Workflow\Classes\GoogleAnalytics.cs,baseValues,The length of the statement  "            string userAgent = string.Format("CaptureWorkFlow/{0} (Windows NT {1}.{2}) "' AppVersion.Substring(0' AppVersion.LastIndexOf("."))' Environment.OSVersion.Version.Major' Environment.OSVersion.Version.Minor); " is 206.
Long Statement,Capture.Workflow.Classes,GoogleAnalytics,C:\repos\dukus_digiCamControl\Capture.Workflow\Classes\GoogleAnalytics.cs,baseValues,The length of the statement  "            string screenResolution = string.Format("{0}x{1}"' System.Windows.SystemParameters.PrimaryScreenWidth' System.Windows.SystemParameters.PrimaryScreenHeight); " is 156.
Long Statement,CSScriptNativeApi,CodeDomSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.native.cs,LoadMethod_Static,The length of the statement  "                // Note: you can use GetStaticMethodWithArgs for higher precision method search: GetStaticMethodWithArgs("*.SayHello"' typeof(string));  " is 135.
Long Statement,Capture.Workflow,App,C:\repos\dukus_digiCamControl\Capture.Workflow\App.xaml.cs,Configure,The length of the statement  "            Log.Debug("------------------------------===========================Application starting===========================------------------------------"); " is 148.
Empty Catch Block,Capture.Workflow.Classes,GoogleAnalytics,C:\repos\dukus_digiCamControl\Capture.Workflow\Classes\GoogleAnalytics.cs,GoogleAnalytics,The method has an empty catch block.
Empty Catch Block,Capture.Workflow.Classes,GoogleAnalytics,C:\repos\dukus_digiCamControl\Capture.Workflow\Classes\GoogleAnalytics.cs,PostData,The method has an empty catch block.
Empty Catch Block,Capture.Workflow.Wpf.Converters,WorkflowToCardBitmapConverter,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Converters\WorkflowToCardBitmapConverter.cs,Convert,The method has an empty catch block.
Empty Catch Block,Capture.Workflow,App,C:\repos\dukus_digiCamControl\Capture.Workflow\App.xaml.cs,Configure,The method has an empty catch block.
Magic Number,CSScriptEvaluatorApi,HostApp,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,Profile,The following statement contains a magic number: var count = 20;
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,CompileMethod_Instance,The following statement contains a magic number: var result = script.Sqr(7);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,CreateDelegate,The following statement contains a magic number: var r = sqr(3);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,LoadDelegate,The following statement contains a magic number: int result = product(3' 2);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,LoadDelegate,The following statement contains a magic number: int result = product(3' 2);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,LoadCode,The following statement contains a magic number: int result = script.Sum(1' 2);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,LoadMethod,The following statement contains a magic number: int result = script.Sum(1' 2);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,LoadMethodWithInterface,The following statement contains a magic number: int result = script.Sum(1' 2);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,LoadCode_WithInterface,The following statement contains a magic number: int result = script.Sum(1' 2);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,LoadCode_WithDuckTypedInterface,The following statement contains a magic number: int result = script.Sum(1' 2);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,PerformanceTest,The following statement contains a magic number: var r = script.Sqr(3);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,DebugTest,The following statement contains a magic number: var r = script.Sum(3' 4);
Magic Number,CSScriptEvaluatorApi,EvaluatorSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.evaluator.cs,DebugTest,The following statement contains a magic number: var r = script.Sum(3' 4);
Magic Number,CSScriptEvaluatorExtensions,HostApp,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,Test,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadDelegateAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(LoadDelegateAsync)' product(4' 2));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadDelegateAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(LoadDelegateAsync)' product(4' 2));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadMethodAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(LoadMethodAsync)' script.Div(15' 3));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadMethodAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(LoadMethodAsync)' script.Div(15' 3));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadCodeAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(LoadCodeAsync)' calc.Sum(1' 2));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,CreateDelegateAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(CreateDelegateAsync)' product(15' 3));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,CreateDelegateAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(CreateDelegateAsync)' product(15' 3));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,CompileCodeAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(CompileCodeAsync)' calc.Sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,CompileCodeAsync,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(CompileCodeAsync)' calc.Sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,AsyncSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,RemoteAsynch,The following statement contains a magic number: Console.WriteLine("   End of {0}: {1}"' nameof(RemoteAsynch)' sum(1' 2));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,CreateDelegateRemotely,The following statement contains a magic number: Console.WriteLine("{0}: {1}"' nameof(CreateDelegateRemotely)' sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,CreateDelegateRemotely,The following statement contains a magic number: Console.WriteLine("{0}: {1}"' nameof(CreateDelegateRemotely)' sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadCodeRemotely,The following statement contains a magic number: Console.WriteLine("{0}: {1}"' nameof(LoadCodeRemotely)' script.Sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadCodeRemotely,The following statement contains a magic number: Console.WriteLine("{0}: {1}"' nameof(LoadCodeRemotely)' script.Sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadCodeRemotelyWithInterface,The following statement contains a magic number: Console.WriteLine("{0}: {1}"' nameof(LoadCodeRemotelyWithInterface)' script.Sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadCodeRemotelyWithInterface,The following statement contains a magic number: Console.WriteLine("{0}: {1}"' nameof(LoadCodeRemotelyWithInterface)' script.Sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadMethodRemotely,The following statement contains a magic number: Console.WriteLine("{0}: {1}"' nameof(LoadMethodRemotely)' script.Sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,LoadMethodRemotely,The following statement contains a magic number: Console.WriteLine("{0}: {1}"' nameof(LoadMethodRemotely)' script.Sum(15' 3));
Magic Number,CSScriptEvaluatorExtensions,UnloadingSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.Extensions.cs,KeepRemoteObjectAlive,The following statement contains a magic number: sumSponsor = sum.ExtendLifeFromMinutes(30);
Magic Number,CSScriptNativeApi,CodeDomSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.native.cs,LoadMethod_Instance,The following statement contains a magic number: var result = script.Sqr(7);
Magic Number,CSScriptNativeApi,CodeDomSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.native.cs,CreateFunc,The following statement contains a magic number: int r = Sqr(3);
Magic Number,CSScriptNativeApi,CodeDomSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.native.cs,LoadCode,The following statement contains a magic number: int result = script.Sum(1' 2);
Magic Number,CSScriptNativeApi,CodeDomSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.native.cs,LoadCodeWithConfig,The following statement contains a magic number: try                  {                      File.WriteAllText(file' @"using System;                                                public class Script                                                {                                                    public int Sum(int a' int b)                                                    {                                                        return a+b;                                                    }                                                }");                        var settings = new Settings();                      //settings = null; // set to null to foll back to defaults                         dynamic script = CSScript.LoadWithConfig(file' null' false' settings' "/define:TEST")                                               .CreateObject("*");                        int result = script.Sum(1' 2);                  }                  finally                  {                      if (File.Exists(file))                          File.Delete(file);                  }
Magic Number,CSScriptNativeApi,CodeDomSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.native.cs,LoadCode_WithInterface,The following statement contains a magic number: int result = calc.Sum(1' 2);
Magic Number,CSScriptNativeApi,CodeDomSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.native.cs,LoadCode_WithDuckTypedInterface,The following statement contains a magic number: int result = calc.Sum(1' 2);
Magic Number,CSScriptNativeApi,CodeDomSamples,C:\repos\dukus_digiCamControl\Capture.Workflow\Scripting.native.cs,DebugTest,The following statement contains a magic number: int result = script.Sum(1' 2);
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 0' 0' 0)' "Black 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 255' 255' 255)' "White 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 255' 255' 255)' "White 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 255' 255' 255)' "White 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 255' 255' 255)' "White 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 255' 0' 0)' "Red 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 255' 0' 0)' "Red 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 0' 255' 0)' "Green 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 0' 255' 0)' "Green 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 0' 0' 255)' "Blue 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,InitializeColors,The following statement contains a magic number: AddColor(Color.FromArgb(128' 0' 0' 255)' "Blue 50%");
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: GeometryDrawing backgroundSquare =                  new GeometryDrawing(                      Brushes.White'                      null'                      new RectangleGeometry(new Rect(0' 0' 8' 8)));
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: GeometryDrawing backgroundSquare =                  new GeometryDrawing(                      Brushes.White'                      null'                      new RectangleGeometry(new Rect(0' 0' 8' 8)));
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: aGeometryGroup.Children.Add(new RectangleGeometry(new Rect(0' 0' 4' 4)));
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: aGeometryGroup.Children.Add(new RectangleGeometry(new Rect(0' 0' 4' 4)));
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: aGeometryGroup.Children.Add(new RectangleGeometry(new Rect(4' 4' 4' 4)));
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: aGeometryGroup.Children.Add(new RectangleGeometry(new Rect(4' 4' 4' 4)));
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: aGeometryGroup.Children.Add(new RectangleGeometry(new Rect(4' 4' 4' 4)));
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: aGeometryGroup.Children.Add(new RectangleGeometry(new Rect(4' 4' 4' 4)));
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: checkerBrush.Viewport = new Rect(0' 0' 0.5' 0.5);
Magic Number,CameraControl.Core.Wpf,Colorpicker,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\Colorpicker.xaml.cs,CreateCheckerBrush,The following statement contains a magic number: checkerBrush.Viewport = new Rect(0' 0' 0.5' 0.5);
Magic Number,Capture.Workflow.Wpf.Controls,EditableTextBlock,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\EditableTextBlock.cs,OnMouseDown,The following statement contains a magic number: if (e.MiddleButton == MouseButtonState.Pressed)              {                  IsInEditMode = true;              }              else if (e.ClickCount == 2)              {                  IsInEditMode = true;              }
Magic Number,Capture.Workflow.Wpf.Controls,EditableTextBlockAdorner,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\EditableTextBlockAdorner.cs,ArrangeOverride,The following statement contains a magic number: _textBox.Arrange(new Rect(0' -5' finalSize.Width' finalSize.Height+10));
Magic Number,Capture.Workflow.Wpf.Controls,EditableTextBlockAdorner,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Controls\EditableTextBlockAdorner.cs,ArrangeOverride,The following statement contains a magic number: _textBox.Arrange(new Rect(0' -5' finalSize.Width' finalSize.Height+10));
Magic Number,Capture.Workflow.Wpf.Converters,ParameterToControlConverter,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Converters\ParameterToControlConverter.cs,Convert,The following statement contains a magic number: if (property != null)                  switch (property.PropertyType)                  {                      //case CustomPropertyType.Number:                      //    NumericUpDown numericUpDown = new NumericUpDown();                      //    numericUpDown.Minimum = property.RangeMin;                      //    numericUpDown.Maximum = property.RangeMax;                      //    numericUpDown.DataContext = property;                      //    numericUpDown.SetBinding(NumericUpDown.ValueProperty' "Value");                      //    return numericUpDown;                      case CustomPropertyType.Code:                      case CustomPropertyType.String:                      case CustomPropertyType.Number:                      {                          TextBox text = new TextBox();                          text.DataContext = property;                          text.SetBinding(TextBox.TextProperty' "Value");                          return text;                      }                      case CustomPropertyType.ParamString:                      {                          TextBox text = new TextBox();                          text.DataContext = property;                          text.SetBinding(TextBox.TextProperty' "Value");                          return text;                      }                      case CustomPropertyType.Color:                          var colorpicker = new Colorpicker();                          colorpicker.DataContext = property;                          colorpicker.SetBinding(Colorpicker.SelectedColorProperty'                              new Binding("Value") {Mode = BindingMode.TwoWay});                          return colorpicker;                      case CustomPropertyType.ValueList:                      {                          ComboBox comboBox = new ComboBox();                          comboBox.DataContext = property;                          comboBox.SetBinding(ComboBox.ItemsSourceProperty' "ValueList");                          comboBox.SetBinding(ComboBox.SelectedItemProperty' "Value");                          return comboBox;                      }                      case CustomPropertyType.Variable:                      {                          property.InitVaribleList();                          ComboBox comboBox = new ComboBox();                          comboBox.DataContext = property;                          comboBox.SetBinding(ComboBox.ItemsSourceProperty' "ValueList");                          comboBox.SetBinding(ComboBox.SelectedItemProperty' "Value");                          return comboBox;                      }                      case CustomPropertyType.View:                      {                          property.InitViewList();                          ComboBox comboBox = new ComboBox();                          comboBox.DataContext = property;                          comboBox.SetBinding(ComboBox.ItemsSourceProperty' "ValueList");                          comboBox.SetBinding(ComboBox.SelectedItemProperty' "Value");                          return comboBox;                      }                      case CustomPropertyType.Icon:                          var iconicker = new IconPicker();                          iconicker.DataContext = property;                          iconicker.SetBinding(IconPicker.SelectedIconProperty'                              new Binding("Value") {Mode = BindingMode.TwoWay});                          return iconicker;                      case CustomPropertyType.Bool:                          CheckBox checkBox = new CheckBox();                          checkBox.DataContext = property;                          checkBox.SetBinding(CheckBox.IsCheckedProperty' "Value");                          return checkBox;                      case CustomPropertyType.File:                      {                          TextBox text = new TextBox();                          text.DataContext = property;                          text.SetBinding(TextBox.TextProperty' "Value");                          text.HorizontalAlignment = HorizontalAlignment.Stretch;                          text.VerticalContentAlignment = VerticalAlignment.Center;                          text.Margin = new Thickness(0' 0' 50' 0);                          Button button = new Button();                          button.HorizontalAlignment = HorizontalAlignment.Right;                          button.Content = "...";                          button.Click += (sender' e) =>                          {                              OpenFileDialog dialog=new OpenFileDialog();                              if (dialog.ShowDialog() == true)                              {                                  property.Value = dialog.FileName;                              }                          };                          var stackpanel = new Grid {HorizontalAlignment = HorizontalAlignment.Stretch};                          stackpanel.Children.Add(text);                          stackpanel.Children.Add(button);                          return stackpanel;                          }                      default:                          throw new ArgumentOutOfRangeException();                  }
Magic Number,Capture.Workflow.Wpf.Converters,WorkflowToCardBitmapConverter,C:\repos\dukus_digiCamControl\Capture.Workflow\Wpf\Converters\WorkflowToCardBitmapConverter.cs,Convert,The following statement contains a magic number: try              {                  if (val != null)                  {                      var file = val.Properties["CardBackground"].Value;                      if (!string.IsNullOrEmpty(file))                      {                          using (Stream stream = val.GetFileStream(file))                          {                              return Utils.LoadImage(stream' 300' 0);                          }                      }                  }              }              catch (Exception e)              {              }
Magic Number,Capture.Workflow,App,C:\repos\dukus_digiCamControl\Capture.Workflow\App.xaml.cs,Configure,The following statement contains a magic number: if (!isConfigured)              {                  // Setup RollingFileAppender                  var fileAppender = new RollingFileAppender                  {                      Layout =                          new PatternLayout(                              "%d [%t]%-5p %c [%x] - %m%n")'                      MaximumFileSize = "10000KB"'                      MaxSizeRollBackups = 5'                      RollingStyle = RollingFileAppender.RollingMode.Size'                      AppendToFile = true'                      File = logFile'                      ImmediateFlush = true'                      LockingModel = new FileAppender.MinimalLock()'                      Name = "XXXRollingFileAppender"                  };                  fileAppender.ActivateOptions(); // IMPORTANT' creates the file                  BasicConfigurator.Configure(fileAppender);  #if DEBUG                  // Setup TraceAppender                  TraceAppender ta = new TraceAppender();                  ta.Layout = new PatternLayout("%d [%t]%-5p %c [%x] - %m%n");                  BasicConfigurator.Configure(ta);  #endif              }
Missing Default,Capture.Workflow.ViewModel,WorkflowViewViewModel,C:\repos\dukus_digiCamControl\Capture.Workflow\ViewModel\WorkflowViewViewModel.cs,Instance_Message,The following switch statement is missing a default case: switch (e.Name)              {                  case Messages.ShowView:                      Application.Current.Dispatcher.BeginInvoke(new Action(() => ShowView((string) e.Param)));                      break;                  case Messages.PreviousView:                      Application.Current.Dispatcher.BeginInvoke(new Action(() => ShowView(_preView)));                      break;                  case Messages.ShowHelp:                      Application.Current.Dispatcher.BeginInvoke(new Action(() => ShowHelp((Context)e.Param)));                      break;                  case Messages.IsBusy:                      IsBusy = true;                      break;                  case Messages.IsNotBusy:                      IsBusy = false;                      break;              }
Missing Default,Capture.Workflow.View,WorkflowViewView,C:\repos\dukus_digiCamControl\Capture.Workflow\View\WorkflowViewView.xaml.cs,Instance_Message,The following switch statement is missing a default case: switch (e.Name)              {                  case Messages.SessionCanceled:                      Application.Current.Dispatcher.BeginInvoke(new Action(Close));                      break;              }
