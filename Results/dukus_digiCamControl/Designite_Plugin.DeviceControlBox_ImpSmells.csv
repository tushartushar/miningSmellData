Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,Plugin.DeviceControl,WaterDropWnd,C:\repos\dukus_digiCamControl\Plugin.DeviceControl\WaterDropWnd.xaml.cs,MetroWindow_Closed,The method has an empty catch block.
Magic Number,Plugin.DeviceControl,WaterDropWnd,C:\repos\dukus_digiCamControl\Plugin.DeviceControl\WaterDropWnd.xaml.cs,btn_start_Click,The following statement contains a magic number: try              {                  if (ServiceProvider.Settings.DefaultSession.WriteComment)                  {                      ServiceProvider.Settings.DefaultSession.Comment = "c=" + slider_cmera.Value + "|";                      ServiceProvider.Settings.DefaultSession.Comment += "dw=" + slider_drop_wait.Value + "|";                      ServiceProvider.Settings.DefaultSession.Comment += "dw2=" + slider_drop2_wait.Value + "|";                      ServiceProvider.Settings.DefaultSession.Comment += "d1=" + slider_drop1.Value + "|";                      ServiceProvider.Settings.DefaultSession.Comment += "d2=" + slider_drop2.Value + "|";                      ServiceProvider.Settings.DefaultSession.Comment += "d3=" + slider_drop3.Value + "|";                      ServiceProvider.Settings.DefaultSession.Comment += "f=" + slider_flash.Value.ToString() + "|";                  }                  if (chk_external.IsChecked == true)                  {                        NikonBase camera = ServiceProvider.DeviceManager.SelectedCameraDevice as NikonBase;                      if (camera != null)                      {                          camera.StopEventTimer();                          _timer.Interval = GetTotalLength() + 100;                          _timer.Start();                        }                  }                  else                  {                      ServiceProvider.DeviceManager.SelectedCameraDevice.CapturePhoto();                  }                  OpenPort();                  sp.WriteLine(" ");              }              catch (Exception exception)              {                  lst_message.Items.Add(exception.Message);              }
Magic Number,Plugin.DeviceControl,WaterDropWnd,C:\repos\dukus_digiCamControl\Plugin.DeviceControl\WaterDropWnd.xaml.cs,OpenPort,The following statement contains a magic number: if (!sp.IsOpen)              {                  sp.PortName = (string)cmb_ports.SelectedItem;                  sp.BaudRate = 9600;                  sp.WriteTimeout = 3500;                  sp.Open();                  sp.DataReceived += sp_DataReceived;              }
Magic Number,Plugin.DeviceControl,WaterDropWnd,C:\repos\dukus_digiCamControl\Plugin.DeviceControl\WaterDropWnd.xaml.cs,OpenPort,The following statement contains a magic number: if (!sp.IsOpen)              {                  sp.PortName = (string)cmb_ports.SelectedItem;                  sp.BaudRate = 9600;                  sp.WriteTimeout = 3500;                  sp.Open();                  sp.DataReceived += sp_DataReceived;              }
Missing Default,Plugin.DeviceControl,WaterDropWnd,C:\repos\dukus_digiCamControl\Plugin.DeviceControl\WaterDropWnd.xaml.cs,sp_DataReceived,The following switch statement is missing a default case: switch (command)                          {                              case "camera_timer":                                  Dispatcher.Invoke(new Action(delegate { slider_cmera.Value = value; }));                                  break;                              case "drop1_time":                                  Dispatcher.Invoke(new Action(delegate { slider_drop1.Value = value; }));                                  break;                              case "drop_wait_time":                                  Dispatcher.Invoke(new Action(delegate { slider_drop_wait.Value = value; }));                                  break;                              case "drop2_wait_time":                                  Dispatcher.Invoke(new Action(delegate { slider_drop2_wait.Value = value; }));                                  break;                              case "drop2_time":                                  Dispatcher.Invoke(new Action(delegate { slider_drop2.Value = value; }));                                  break;                              case "drop3_time":                                  Dispatcher.Invoke(new Action(delegate { slider_drop3.Value = value; }));                                  break;                              case "flash_time":                                  Dispatcher.Invoke(new Action(delegate { slider_flash.Value = value; }));                                  break;                              case "sound":                                  Dispatcher.Invoke(new Action(delegate { prg_threshold.Value = value; }));                                  break;                          }
