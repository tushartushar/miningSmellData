Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,SetEnvironmentVariables,The length of the statement  "                throw new DirectoryNotFoundException(string.Format("Directory '{0}' does not exist - cannot set the environment variable R_HOME to that value"' rHome)); " is 152.
Long Statement,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,SetEnvironmentVariables,The length of the statement  "                // so all we can do is an intelligible error message for the user' explaining he needs to set the LD_LIBRARY_PATH env variable " is 126.
Long Statement,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,FindRHome,The length of the statement  "                    // that rHome is a short path format. Here we retrieve the path possibly in long format' and process to short format later on " is 125.
Long Statement,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,SetenvPrepend,The length of the statement  "            // this function results from a merge of PR https://rdotnet.codeplex.com/SourceControl/network/forks/skyguy94/PRFork/contribution/7684 " is 134.
Long Statement,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,SetenvPrepend,The length of the statement  "            //  Not sure of the intent' and why a SetDllDirectory was used' where we moved away from. May need discussion with skyguy94 " is 123.
Long Statement,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,GetRCoreRegistryKeyWin32,The length of the statement  "                    throw new ApplicationException("Windows Registry key 'SOFTWARE\\R-core' not found in HKEY_LOCAL_MACHINE nor HKEY_CURRENT_USER"); " is 128.
Magic Number,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,ConstructRPath,The following statement contains a magic number: switch (platform)              {                  case PlatformID.Win32NT:                      var rPath = Path.Combine(rHome' "bin");                      Version rVersion = GetRVersionFromRegistry();                      if (rVersion.Major > 2 || (rVersion.Major == 2 && rVersion.Minor >= 12))                      {                          var bitness = Environment.Is64BitProcess ? "x64" : "i386";                          rPath = Path.Combine(rPath' bitness);                      }                      return rPath;                    default:                      throw new PlatformNotSupportedException();              }
Magic Number,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,ConstructRPath,The following statement contains a magic number: switch (platform)              {                  case PlatformID.Win32NT:                      var rPath = Path.Combine(rHome' "bin");                      Version rVersion = GetRVersionFromRegistry();                      if (rVersion.Major > 2 || (rVersion.Major == 2 && rVersion.Minor >= 12))                      {                          var bitness = Environment.Is64BitProcess ? "x64" : "i386";                          rPath = Path.Combine(rPath' bitness);                      }                      return rPath;                    default:                      throw new PlatformNotSupportedException();              }
Magic Number,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,ConstructRPath,The following statement contains a magic number: switch (platform)              {                  case PlatformID.Win32NT:                      var rPath = Path.Combine(rHome' "bin");                      Version rVersion = GetRVersionFromRegistry();                      if (rVersion.Major > 2 || (rVersion.Major == 2 && rVersion.Minor >= 12))                      {                          var bitness = Environment.Is64BitProcess ? "x64" : "i386";                          rPath = Path.Combine(rPath' bitness);                      }                      return rPath;                    default:                      throw new PlatformNotSupportedException();              }
Magic Number,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,FindRPathFromRegistry,The following statement contains a magic number: return currentVersion < new Version(2' 12) ? bin : Path.Combine(bin' is64Bit ? "x64" : "i386");
Magic Number,RDotNet.NativeLibrary,NativeUtility,C:\repos\jmp75_rdotnet\RDotNet.NativeLibrary\NativeUtility.cs,FindRPathFromRegistry,The following statement contains a magic number: return currentVersion < new Version(2' 12) ? bin : Path.Combine(bin' is64Bit ? "x64" : "i386");
