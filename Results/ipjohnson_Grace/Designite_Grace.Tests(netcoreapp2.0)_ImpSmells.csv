Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Grace.Tests.Classes.Scoped,TestController1,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Scoped\Controllers.cs,TestController1,The method has 5 parameters. Parameters: transient1' repositoryTransient2' repositoryTransient3' repositoryTransient4' repositoryTransient5
Long Parameter List,Grace.Tests.Classes.Scoped,RepositoryTransient1,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Scoped\Repositories.cs,RepositoryTransient1,The method has 5 parameters. Parameters: scopedService1' scopedService2' scopedService3' scopedService4' scopedService5
Long Parameter List,Grace.Tests.Classes.Scoped,RepositoryTransient2,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Scoped\Repositories.cs,RepositoryTransient2,The method has 5 parameters. Parameters: scopedService1' scopedService2' scopedService3' scopedService4' scopedService5
Long Parameter List,Grace.Tests.Classes.Scoped,RepositoryTransient3,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Scoped\Repositories.cs,RepositoryTransient3,The method has 5 parameters. Parameters: scopedService1' scopedService2' scopedService3' scopedService4' scopedService5
Long Parameter List,Grace.Tests.Classes.Scoped,RepositoryTransient4,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Scoped\Repositories.cs,RepositoryTransient4,The method has 5 parameters. Parameters: scopedService1' scopedService2' scopedService3' scopedService4' scopedService5
Long Parameter List,Grace.Tests.Classes.Scoped,RepositoryTransient5,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Scoped\Repositories.cs,RepositoryTransient5,The method has 5 parameters. Parameters: scopedService1' scopedService2' scopedService3' scopedService4' scopedService5
Long Parameter List,Grace.Tests.Classes.Simple,FiveArgParameterService,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Simple\FactoryServiceClasses.cs,FiveArgParameterService,The method has 5 parameters. Parameters: stringArg' intArg' doubleArg' decimalArg' basicService
Long Parameter List,Grace.Tests.Classes.Simple,FiveDependencyService<T1;T2;T3;T4;T5>,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Simple\FiveDependencyService.cs,FiveDependencyService,The method has 5 parameters. Parameters: dependency1' dependency2' dependency3' dependency4' dependency5
Long Parameter List,Grace.Tests.Classes.Simple,StructDefaultValueService,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Classes\Simple\StructDefaultValueService.cs,StructDefaultValueService,The method has 14 parameters. Parameters: dateTime' dateTimeDefault' timeSpan' timeSpanDefault' dateTimeOffset' dateTimeOffsetDefault' guid' guidDefault' customStruct' customStructDefault' color' colorNull' integer' integerNull
Long Parameter List,Grace.Tests.DependencyInjection.AddOns,ChildContainerExpressionProvider,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\MissingDependencyExpressionProviderTests.cs,LocateFromChildContainer,The method has 9 parameters. Parameters: valueProvider' scope' staticContext' type' key' context' defaultValue' useDefault' isRequired
Long Parameter List,Grace.Tests.Dynamic,Dependent5,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,Dependent5,The method has 5 parameters. Parameters: basicService1' basicService2' basicService3' basicService4' basicService5
Long Parameter List,Grace.Tests.Dynamic,Dependent6,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,Dependent6,The method has 6 parameters. Parameters: basicService1' basicService2' basicService3' basicService4' basicService5' basicService6
Long Parameter List,Grace.Tests.Dynamic,Dependent7,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,Dependent7,The method has 7 parameters. Parameters: basicService1' basicService2' basicService3' basicService4' basicService5' basicService6' basicService7
Long Parameter List,Grace.Tests.Dynamic,Dependent8,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,Dependent8,The method has 8 parameters. Parameters: basicService1' basicService2' basicService3' basicService4' basicService5' basicService6' basicService7' basicService8
Long Parameter List,Grace.Tests.Dynamic,Dependent9,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,Dependent9,The method has 9 parameters. Parameters: basicService1' basicService2' basicService3' basicService4' basicService5' basicService6' basicService7' basicService8' basicService9
Long Parameter List,Grace.Tests.Factory,IExampleClassFactory,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\Issue215Tests.cs,Create,The method has 6 parameters. Parameters: startId' endId' reverse' loadIdsLimit' maxBufferSize' cancellationTokenSource
Long Parameter List,Grace.Tests.Factory,ExampleClass,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\Issue215Tests.cs,ExampleClass,The method has 8 parameters. Parameters: startId' endId' reverse' loadIdsLimit' maxBufferSize' cancellationTokenSource' dependency1' dependency2
Long Statement,Grace.Tests.DependencyInjection.AddOns,DecoratorProvider,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\MissingStrategyProviderTests.cs,ProvideExports,The length of the statement  "                    var decorator = new GenericCompiledDecoratorStrategy(typeof(DecoratorDependentService<>)'scope' request.Services.LifestyleExpressionBuilder); " is 141.
Long Statement,Grace.Tests.DependencyInjection.AddOns,DecoratorProvider,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\MissingStrategyProviderTests.cs,ProvideExports,The length of the statement  "                    var export = new GenericCompiledExportStrategy(typeof(DependentService<>)'scope' request.Services.LifestyleExpressionBuilder); " is 126.
Long Statement,Grace.Tests.DependencyInjection.AddOns,StrategyInspectorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\StrategyInspectorTests.cs,ScopeInspectorTest,The length of the statement  "                    return sc.Locate<OneDependency>(withKey: sc.ScopeName' extraData: new { StaticContext = ctx }); //Is there any way to Locate while retaining previous StaticInjectionContext? (ctx in this case) " is 192.
Long Statement,Grace.Tests.DependencyInjection.AddOns,AnInspector,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\StrategyInspectorTests.cs,Inspect,The length of the statement  "                    conf.EnrichmentDelegate((Func<OneDependency' IExportLocatorScope' IInjectionContext' OneDependency>)DoSomethingToEnrich); " is 121.
Long Statement,Grace.Tests.DependencyInjection.AttributeTests,LifestyleAttributeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AttributeTests\LifestyleAttributeTests.cs,SingletonPerObjectGraph_Attribute_Test,The length of the statement  "                container.Locate<TwoDependencyService<AttributedSingletonPerObjectGraphService' AttributedSingletonPerObjectGraphService>>(); " is 125.
Long Statement,Grace.Tests.DependencyInjection.AttributeTests,LifestyleAttributeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AttributeTests\LifestyleAttributeTests.cs,SingletonPerObjectGraph_Attribute_Test,The length of the statement  "                container.Locate<TwoDependencyService<AttributedSingletonPerObjectGraphService' AttributedSingletonPerObjectGraphService>>(); " is 125.
Long Statement,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DepencencyInjectionContainer_ExportAsBase_Interface,The length of the statement  "            container.Configure(c => c.Export<InheritingBasicService>().As<IInheritingBasicService>().ImportProperty(m => m.Count).DefaultValue(5)); " is 136.
Long Statement,Grace.Tests.DependencyInjection.ChildContainer,ChildContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ChildContainer\ChildContainerTests.cs,ChildContainer_Locate_Dependency_From_Parent_Container,The length of the statement  "            using (var childContainer = container.CreateChildScope(c => c.Export<DependentService<IBasicService>>().As<IDependentService<IBasicService>>())) " is 144.
Long Statement,Grace.Tests.DependencyInjection.Conditions,WhenClassHasTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Conditions\WhenClassHasTests.cs,WhenClassHasGeneric_Match_With_Filter,The length of the statement  "                c.Export<AttributedSimpleObjectA>().As<IAttributedSimpleObject>().When.ClassHas<SomeTestAttribute>(attribute => attribute.TestValue == 10); " is 139.
Long Statement,Grace.Tests.DependencyInjection.Conditions,WhenConditionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Conditions\WhenConditionConfigurationTests.cs,WhenConditionConfiguration_Null_MeetsCondition_Func,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => configuration.MeetsCondition((Func<IActivationStrategy'StaticInjectionContext'bool>)null)); " is 134.
Long Statement,Grace.Tests.DependencyInjection.Conditions,WhenInjectedIntoTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Conditions\WhenInjectedIntoTests.cs,WhenInjectedIntoGeneric_Matches_Correctly,The length of the statement  "                c.Export<AttributedSimpleObjectA>().As<IAttributedSimpleObject>().When.InjectedInto<DependentService<IAttributedSimpleObject>>(); " is 129.
Long Statement,Grace.Tests.DependencyInjection.Conditions,WhenInjectedIntoTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Conditions\WhenInjectedIntoTests.cs,WhenInjectedIntoGeneric_Matches_Correctly,The length of the statement  "                c.Export<AttributedSimpleObjectB>().As<IAttributedSimpleObject>().When.InjectedInto<AttributedDependentService<IAttributedSimpleObject>>(); " is 139.
Long Statement,Grace.Tests.DependencyInjection.Conditions,WhenInjectedIntoTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Conditions\WhenInjectedIntoTests.cs,WhenInjectedInto_Matches_Correctly,The length of the statement  "                c.Export<AttributedSimpleObjectB>().As<IAttributedSimpleObject>().When.InjectedInto(typeof(AttributedDependentService<>)); " is 122.
Long Statement,Grace.Tests.DependencyInjection.Conditions,WhenInjectedIntoTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Conditions\WhenInjectedIntoTests.cs,WhenInjectedInto_Complex_Decorator_Test,The length of the statement  "                c.ExportDecorator(typeof(BasicDecorator)).As(typeof(IBasicService)).When.MeetsCondition(new CustomWhenInjectedInto(typeof(IMyTestService))); " is 140.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_ConstructorSelection,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_WithCtorValue,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PropertyInject,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_ThrowsWhenMissingDependency,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_MultipleIntParameters_Issue78,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_Disposable,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_Disposable,The length of the statement  "            using (var owned = container.Locate<Owned<MultipleConstructorDisposable>>(new { basicService = new BasicService()' constructorImportService = new ConstructorImportService(new BasicService()) })) " is 194.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PassThroughForPerObjectGraph,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PassThroughForPerObjectGraph,The length of the statement  "            var instance2 = container.Locate<ImportTwoMultipleConstructorImport>(new { basicService' constructorImportService = new ConstructorImportService(basicService) }); " is 162.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,DynamicConstructorSelection_WithFunc,The length of the statement  "            DependencyInjectionContainer di = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); // ß not sure about the Dynamic strategy " is 184.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,DynamicConstructorSelection_WithCtorParam_Func,The length of the statement  "            DependencyInjectionContainer container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); // ß not sure about the Dynamic strategy " is 191.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,DynamicConstructorSelection_ChildScope,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,DynamicConstructorSelection_Disposable_Singleton,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.Dynamic); " is 125.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,LeastParametersTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\LeastParametersTests.cs,LeastParameter_Uses_Correct_Constructor,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.LeastParameters); " is 133.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,MostParametersTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\MostParametersTests.cs,MostParametrs_Uses_Correct_Constructor,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.MostParameters); " is 132.
Long Statement,Grace.Tests.DependencyInjection.ConstructorSelection,TimedConstructorSelectionMethod,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\TimedConstructorSelectionMethod.cs,CreateExpression,The length of the statement  "            return ExpressionUtilities.CreateExpressionForDelegate(createDelegate' false' scope' request' activationConfiguration.ActivationStrategy); " is 138.
Long Statement,Grace.Tests.DependencyInjection.DisposableTests,DisposalCleanupTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DisposableTests\DisposalCleanupTests.cs,Export_DisposableCleanup_Called,The length of the statement  "            container.Configure(c => c.Export<DisposableService>().As<IDisposableService>().DisposalCleanupDelegate(d => disposedDelegateCalled = true)); " is 141.
Long Statement,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Constructor_Parameter_Missing_Throws,The length of the statement  "            container.Configure(c => c.Export(typeof(DependentService<>)).As(typeof(IDependentService<>)).WithCtorParam<object>().IsDynamic()); " is 131.
Long Statement,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Constructor_Parameter_Not_Required,The length of the statement  "            container.Configure(c => c.Export<DependentService<int>>().As<IDependentService<int>>().WithCtorParam<int>().IsRequired(false).IsDynamic()); " is 140.
Long Statement,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Constructor_Parameter_Resolve_From_Child_Scope,The length of the statement  "            container.Configure(c => c.Export(typeof(DependentService<>)).As(typeof(IDependentService<>)).WithCtorParam<object>().IsDynamic()); " is 131.
Long Statement,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Parameter_Resolve_IEnumerable,The length of the statement  "            container.Configure(c => c.Export(typeof(DependentService<>)).As(typeof(IDependentService<>)).WithCtorParam<object>().IsDynamic()); " is 131.
Long Statement,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Parameter_Resolve_IEnumerable_With_Creator,The length of the statement  "            container.Configure(c => c.Export(typeof(DependentService<>)).As(typeof(IDependentService<>)).WithCtorParam<object>().IsDynamic()); " is 131.
Long Statement,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Parameter_Resolve_Array,The length of the statement  "            container.Configure(c => c.Export(typeof(DependentService<>)).As(typeof(IDependentService<>)).WithCtorParam<object>().IsDynamic()); " is 131.
Long Statement,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The length of the statement  "                c.Export<ImportEnumberableService>().As<IImportEnumberableService>().WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>().SortByProperty(m => m.Count); " is 173.
Long Statement,Grace.Tests.DependencyInjection.Expressions,ExpressionExportStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Expressions\ExpressionExportStrategyTests.cs,ExpressionExport_LocateWithData,The length of the statement  "                    new DependentService<InjectionContextClass>(Arg.Locate<InjectionContextClass>(new { Arg.Locate<IntProviderClass>().SomeValue }))); " is 130.
Long Statement,Grace.Tests.DependencyInjection.Factory,FiveArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FiveArgFactoryTests.cs,FactoryFiveArg_Create_Instance,The length of the statement  "                block.ExportFactory<SimpleObjectA' SimpleObjectB' SimpleObjectC' SimpleObjectD' SimpleObjectE' IEnumerable<ISimpleObject>>( " is 123.
Long Statement,Grace.Tests.DependencyInjection.Generics,GenericConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Generics\GenericConfigurationTests.cs,Generic_Constructor_Parameter_Not_Required,The length of the statement  "            container.Configure(c => c.Export(typeof(DependentService<>)).As(typeof(IDependentService<>)).WithCtorParam<object>().Named("value").IsRequired(false)); " is 152.
Long Statement,Grace.Tests.DependencyInjection.Generics,SimpleGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Generics\SimpleGenericTests.cs,Locate_Open_Generic_Filtered,The length of the statement  "                c.Export(typeof(DependentService<>)).WithCtorParam<object>().Named("value").Consider(s => s.ActivationType.Name.EndsWith("B`1")); " is 129.
Long Statement,Grace.Tests.DependencyInjection.Intercept,InterceptExtensions,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionExtensions.cs,Intercept,The length of the statement  "            return block.ExportDecorator(decoratorType).As(tService).WithCtorParam<TInterceptor' IInterceptor[]>(i => new IInterceptor[] { i }); " is 132.
Long Statement,Grace.Tests.DependencyInjection.Intercept,InterceptExtensions,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionExtensions.cs,InterceptAttribute,The length of the statement  "                        c.ExportDecorator(decoratorType).As(tService).WithCtorParam<TInterceptor' IInterceptor[]>(i => new IInterceptor[] { i }) " is 120.
Long Statement,Grace.Tests.DependencyInjection.Keyed,KeyedLocateTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Keyed\KeyedLocateTests.cs,Export_With_Key_Import_With_Key,The length of the statement  "                c.Export<ImportSingleSimpleObject>().AsKeyed<ImportSingleSimpleObject>("A").WithCtorParam<ISimpleObject>().LocateWithKey("A"); " is 126.
Long Statement,Grace.Tests.DependencyInjection.Keyed,KeyedLocateTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Keyed\KeyedLocateTests.cs,Export_With_Key_Import_With_Key,The length of the statement  "                c.Export<ImportSingleSimpleObject>().AsKeyed<ImportSingleSimpleObject>("B").WithCtorParam<ISimpleObject>().LocateWithKey("B"); " is 126.
Long Statement,Grace.Tests.DependencyInjection.Lifestyle,CustomSingletonLifestyleTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\CustomSingletonLifestyleTests.cs,CustomSingletonTest,The length of the statement  "            container.Configure(c => c.Export<DependentService<IBasicService>>().As<IDependentService<IBasicService>>().Lifestyle.Custom(new CustomSingletonLifestyle())); " is 158.
Long Statement,Grace.Tests.DependencyInjection.Lifestyle,CustomSingletonLifestyleTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\CustomSingletonLifestyleTests.cs,CustomSingletonTest,The length of the statement  "            var instance = container.Locate<IDependentService<IBasicService>>(new { basicService = new BasicService { Count = 5 } }); " is 121.
Long Statement,Grace.Tests.DependencyInjection.Lifestyle,CustomSingletonLifestyleTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\CustomSingletonLifestyleTests.cs,CustomSingletonTest,The length of the statement  "            var instance2 = container.Locate<IDependentService<IBasicService>>(new { basicService = new BasicService { Count = 15 } }); " is 123.
Long Statement,Grace.Tests.DependencyInjection.Lifestyle,SingletonPerKeyTest,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\SingletonPerKeyTest.cs,SingletonPerKey,The length of the statement  "            container.Configure(c => c.Export<BasicService>().Lifestyle.SingletonPerKey((scope'context) => context.GetExtraData("key") ?? "A")); " is 132.
Long Statement,Grace.Tests.DependencyInjection.Lifestyle,SingletonPerNamedScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\SingletonPerNamedScopeTests.cs,SingletonPerNamedScopeDisposal,The length of the statement  "            container.Configure(c => c.Export<DisposableService>().As<IDisposableService>().Lifestyle.SingletonPerNamedScope("Test")); " is 122.
Long Statement,Grace.Tests.DependencyInjection.Lifestyle,SingletonPerNamedScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\SingletonPerNamedScopeTests.cs,SingletonPerNamedScopeNestedDisposal,The length of the statement  "            container.Configure(c => c.Export<DisposableService>().As<IDisposableService>().Lifestyle.SingletonPerNamedScope("Test")); " is 122.
Long Statement,Grace.Tests.DependencyInjection.Lifestyle,SingletonPerScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\SingletonPerScopeTests.cs,SingletonPerScope_ShareContext,The length of the statement  "            container.Configure(c => c.Export(typeof(DependentService<>)).As(typeof(IDependentService<>)).Lifestyle.SingletonPerScope()); " is 125.
Long Statement,Grace.Tests.DependencyInjection.MemberInjection,PropertyInjectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\MemberInjection\PropertyInjectionTests.cs,PropertyInjection_ImportMember_With_Members_HaveAttribute_Filter_With_Filter,The length of the statement  "                c.Export<MultiplePropertyInject>().ImportMembers(MembersThat.HaveAttribute<SomeTestAttribute>(attribute => attribute.TestValue == 10)); " is 135.
Long Statement,Grace.Tests.DependencyInjection.MemberInjection,PropertyInjectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\MemberInjection\PropertyInjectionTests.cs,PropertyInjection_ImportMember_Inheriting,The length of the statement  "                c.Export<InheritingClass>().ImportMembers(MembersThat.HaveAttribute<SomeTestAttribute>(attribute => attribute.TestValue == 10)); " is 128.
Long Statement,Grace.Tests.DependencyInjection.Registration,ExportRegistrationBlockTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportRegistrationBlockTests.cs,ExportRegistrationBlock_Export_Instance_FuncScope_StaticContext,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => block.ExportInstance((Func<IExportLocatorScope'StaticInjectionContext' IBasicService>)null)); " is 136.
Long Statement,Grace.Tests.DependencyInjection.Registration,ExportRegistrationBlockTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportRegistrationBlockTests.cs,ExportRegistrationBlock_Export_Instance_FuncScope_StaticContext_InjectionContext,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => block.ExportInstance((Func<IExportLocatorScope' StaticInjectionContext'IInjectionContext' IBasicService>)null)); " is 155.
Long Statement,Grace.Tests.DependencyInjection.Registration,ExportRegistrationBlockTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportRegistrationBlockTests.cs,ExportRegistrationBlock_Export_Factory_2_Arg,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => block.ExportFactory((Func<IExportLocatorScope' StaticInjectionContext' IBasicService>)null)); " is 136.
Long Statement,Grace.Tests.DependencyInjection.Registration,ExportRegistrationBlockTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportRegistrationBlockTests.cs,ExportRegistrationBlock_Export_Factory_3_Arg,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => block.ExportFactory((Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext' IBasicService>)null)); " is 155.
Long Statement,Grace.Tests.DependencyInjection.Registration,ExportRegistrationBlockTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportRegistrationBlockTests.cs,ExportRegistrationBlock_Export_Factory_4_Arg,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => block.ExportFactory((Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext' IMultipleService' IBasicService>)null)); " is 173.
Long Statement,Grace.Tests.DependencyInjection.Registration,ExportRegistrationBlockTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportRegistrationBlockTests.cs,ExportRegistrationBlock_Export_Factory_5_Arg,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => block.ExportFactory((Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext'IMultipleService'ISimpleObject' IBasicService>)null)); " is 186.
Long Statement,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_When,The length of the statement  "                c.Export(new[] { typeof(MultipleService1) }).ByInterface<IMultipleService>().When.InjectedInto(typeof(DependentService<>)); " is 123.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_One_Arg,The length of the statement  "            strategy.Received().ConstructorParameter(NSubstitute.Arg.Is<ConstructorParameterInfo>(info => info.ExportFunc == func)); " is 120.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Two_Arg,The length of the statement  "            strategy.Received().ConstructorParameter(NSubstitute.Arg.Is<ConstructorParameterInfo>(info => info.ExportFunc == func)); " is 120.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Three_Arg,The length of the statement  "            Func<MultipleService1' MultipleService2' MultipleService3' IDependentService<IMultipleService>> func = (service' service2' service3) => null; " is 141.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Three_Arg,The length of the statement  "            strategy.Received().ConstructorParameter(NSubstitute.Arg.Is<ConstructorParameterInfo>(info => info.ExportFunc == func)); " is 120.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Four_Arg,The length of the statement  "            Func<MultipleService1' MultipleService2' MultipleService3' MultipleService4' IDependentService<IMultipleService>> func = (service' service2' service3' service4) => null; " is 169.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Four_Arg,The length of the statement  "            strategy.Received().ConstructorParameter(NSubstitute.Arg.Is<ConstructorParameterInfo>(info => info.ExportFunc == func)); " is 120.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Four_Arg_Null,The length of the statement  "            Func<MultipleService1' MultipleService2' MultipleService3'MultipleService4' IDependentService<IMultipleService>> func = null; " is 125.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Five_Arg,The length of the statement  "            Func<MultipleService1' MultipleService2' MultipleService3' MultipleService4'MultipleService5' IDependentService<IMultipleService>> func = (service' service2' service3' service4' service5) => null; " is 196.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Five_Arg,The length of the statement  "            strategy.Received().ConstructorParameter(NSubstitute.Arg.Is<ConstructorParameterInfo>(info => info.ExportFunc == func)); " is 120.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_WithCtorParam_Five_Arg_Null,The length of the statement  "            Func<MultipleService1' MultipleService2' MultipleService3' MultipleService4'MultipleService5' IDependentService<IMultipleService>> func = null; " is 143.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationGenericTests.cs,FluentExportStrategyConfigurationGeneric_ImportConstructorSelectionMethod,The length of the statement  "            var container = new DependencyInjectionContainer(c => c.Behaviors.ConstructorSelection = ConstructorSelectionMethod.LeastParameters); " is 133.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationTests.cs,FluentExportStrategyConfiguration_As_Throws_Exception_Open_Closed,The length of the statement  "            Assert.Throws<ArgumentException>(() => container.Configure(c => c.Export(typeof(DependentService<IBasicService>)).As(typeof(IDependentService<>)))); " is 148.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationTests.cs,FluentExportStrategyConfiguration_AsKeyed_Throws_Exception_Open_Closed,The length of the statement  "            Assert.Throws<ArgumentException>(() => container.Configure(c => c.Export(typeof(DependentService<IBasicService>)).AsKeyed(typeof(IDependentService<>)' 1))); " is 156.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_DefaultValue_Func_Multi_Arg_Null,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => configuration.DefaultValue((Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext' int>)null)); " is 152.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_DefaultValue,The length of the statement  "            container.Configure(c => c.Export<DependentService<IBasicService>>().WithCtorParam<IBasicService>().DefaultValue(basicService)); " is 128.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_DefaultValue_Func,The length of the statement  "            container.Configure(c => c.Export<DependentService<IBasicService>>().WithCtorParam<IBasicService>().DefaultValue(basicService)); " is 128.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_DefaultValue_Func_Multi_Arg,The length of the statement  "            var basicService = new Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext' IBasicService>((scope' staticContext' context) => new BasicService { Count = ++i }); " is 176.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_DefaultValue_Func_Multi_Arg,The length of the statement  "            container.Configure(c => c.Export<DependentService<IBasicService>>().WithCtorParam<IBasicService>().DefaultValue(basicService)); " is 128.
Long Statement,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_Named,The length of the statement  "            container.Configure(c => c.Export<DependentService<IBasicService>>().WithCtorParam<object>().Named("value").DefaultValue(basicService)); " is 136.
Long Statement,Grace.Tests.DependencyInjection.Registration,OnlyIfExportTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\OnlyIfExportTests.cs,ExportFactory_IfNotRegistered_Pass,The length of the statement  "                c.ExportFactory<IBasicService>(() => new BasicServiceDecorator(new BasicService())).IfNotRegistered(typeof(IBasicService)); " is 123.
Long Statement,Grace.Tests.DependencyInjection.Registration,OnlyIfExportTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\OnlyIfExportTests.cs,ExportFactory_IfNotRegistered_Fail,The length of the statement  "                c.ExportFactory<IBasicService>(() => new BasicServiceDecorator(new BasicService())).IfNotRegistered(typeof(IBasicService)); " is 123.
Long Statement,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_EnrichWithDelegate,The length of the statement  "            Func<IExportLocatorScope' StaticInjectionContext' BasicService' BasicService> enrichmentDelegate = (scope'staticonctext'context) => new BasicService(); " is 151.
Long Statement,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam_Multi_4_Arg,The length of the statement  "            Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext'IBasicService' int> func = (scope' staticContext' context' basic) => 5; " is 139.
Long Statement,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam_Multi_5_Arg,The length of the statement  "            Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext'IBasicService'IMultipleService' int> func = (scope' staticContext' context' basic' multiple) => 5; " is 166.
Long Statement,Grace.Tests.DependencyInjection.Wrappers,FuncFiveArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFiveArgWrapperTests.cs,FuncFiveArg_Locate_Instance,The length of the statement  "            var func = container.Locate<Func<int' double' string' bool' byte' IFiveDependencyService<int' double' string' bool' byte>>>(); " is 126.
Long Statement,Grace.Tests.Diagnostics,ExtraDataContainerDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ExtraDataContainerDebuggerViewTests.cs,ExtraDataContainerDebuggerView_DisplayValue,The length of the statement  "            var property = debugger.GetType().GetTypeInfo().GetProperty("DebuggerDisplayValue"' BindingFlags.Instance | BindingFlags.NonPublic); " is 132.
Long Statement,Grace.Tests.Factory,DynamicTypeBuilderTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicTypeBuilderTests.cs,DynamicTypeBuilder_StringParam,The length of the statement  "            var proxyType = builder.CreateType(typeof(IComplexProvider<string>)' out List<DynamicTypeBuilder.DelegateInfo> methods); " is 120.
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_IndexOf_Found,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_IndexOf_Found,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_IndexOf_Found,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_IndexOf_Found,The following statement contains a magic number: Assert.Equal(1' array.IndexOf(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_IndexOf_Not_Found,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_IndexOf_Not_Found,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_IndexOf_Not_Found,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_IndexOf_Not_Found,The following statement contains a magic number: Assert.Equal(-1' array.IndexOf(20));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Beginning,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Beginning,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Beginning,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Beginning,The following statement contains a magic number: Assert.Equal(5' array[1]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Beginning,The following statement contains a magic number: Assert.Equal(10' array[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Beginning,The following statement contains a magic number: Assert.Equal(10' array[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Beginning,The following statement contains a magic number: Assert.Equal(15' array[3]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Beginning,The following statement contains a magic number: Assert.Equal(15' array[3]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: array = array.Insert(3' 20);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: array = array.Insert(3' 20);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: Assert.Equal(5' array[0]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: Assert.Equal(10' array[1]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: Assert.Equal(15' array[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: Assert.Equal(15' array[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: Assert.Equal(20' array[3]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_End,The following statement contains a magic number: Assert.Equal(20' array[3]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: array = array.Insert(2' 20);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: array = array.Insert(2' 20);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: Assert.Equal(5' array[0]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: Assert.Equal(10' array[1]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: Assert.Equal(20' array[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: Assert.Equal(20' array[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: Assert.Equal(15' array[3]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Insert_Middle,The following statement contains a magic number: Assert.Equal(15' array[3]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: Assert.Equal(0' comparer.CompareTo(new[] { 5' 10' 15 }' new CustomComparer()));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: Assert.Equal(0' comparer.CompareTo(new[] { 5' 10' 15 }' new CustomComparer()));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Compare,The following statement contains a magic number: Assert.Equal(0' comparer.CompareTo(new[] { 5' 10' 15 }' new CustomComparer()));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_FromArray,The following statement contains a magic number: var array = (ImmutableArray<int>)new[] { 5' 10' 15 };
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_FromArray,The following statement contains a magic number: var array = (ImmutableArray<int>)new[] { 5' 10' 15 };
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_FromArray,The following statement contains a magic number: var array = (ImmutableArray<int>)new[] { 5' 10' 15 };
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_FromArray,The following statement contains a magic number: Assert.Equal(5' array[0]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_FromArray,The following statement contains a magic number: Assert.Equal(10' array[1]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_FromArray,The following statement contains a magic number: Assert.Equal(15' array[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_FromArray,The following statement contains a magic number: Assert.Equal(15' array[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_CopyTo_Array,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_CopyTo_Array,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_CopyTo_Array,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_CopyTo_Array,The following statement contains a magic number: var copyArray = new int[3];
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_CopyTo_Array,The following statement contains a magic number: Assert.Equal(5' copyArray[0]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_CopyTo_Array,The following statement contains a magic number: Assert.Equal(10' copyArray[1]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_CopyTo_Array,The following statement contains a magic number: Assert.Equal(15' copyArray[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_CopyTo_Array,The following statement contains a magic number: Assert.Equal(15' copyArray[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Equal_Symbol,The following statement contains a magic number: var array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Nullable_Equal_Symbol,The following statement contains a magic number: ImmutableArray<int>? array3 = ImmutableArray.Create(4' 8' 12);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: var array2 = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: Assert.True(stArray1.Equals(new[] { 5' 10' 15 }' new CustomComparer()));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: Assert.True(stArray1.Equals(new[] { 5' 10' 15 }' new CustomComparer()));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_StructuralEqual,The following statement contains a magic number: Assert.True(stArray1.Equals(new[] { 5' 10' 15 }' new CustomComparer()));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_GetHashCode,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_GetHashCode,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_GetHashCode,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_GetHashCode_StructuralyEqual,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_GetHashCode_StructuralyEqual,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_GetHashCode_StructuralyEqual,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Create,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Create,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Create,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Create,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Create,The following statement contains a magic number: Assert.True(newList.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Create,The following statement contains a magic number: Assert.True(newList.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Create,The following statement contains a magic number: Assert.True(newList.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_From,The following statement contains a magic number: var array = ImmutableArray.From(new List<int> { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_From,The following statement contains a magic number: var array = ImmutableArray.From(new List<int> { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_From,The following statement contains a magic number: var array = ImmutableArray.From(new List<int> { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_From,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_From,The following statement contains a magic number: Assert.True(newList.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_From,The following statement contains a magic number: Assert.True(newList.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_From,The following statement contains a magic number: Assert.True(newList.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Contains,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Contains,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Contains,The following statement contains a magic number: var array = ImmutableArray.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Contains,The following statement contains a magic number: Assert.True(array.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Contains,The following statement contains a magic number: Assert.True(array.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_Contains,The following statement contains a magic number: Assert.True(array.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_AddRange,The following statement contains a magic number: array = array.AddRange(new List<int> { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_AddRange,The following statement contains a magic number: array = array.AddRange(new List<int> { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_AddRange,The following statement contains a magic number: array = array.AddRange(new List<int> { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_AddRange,The following statement contains a magic number: Assert.True(array.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_AddRange,The following statement contains a magic number: Assert.True(array.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableArrayTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableArrayTests.cs,ImmutableArray_AddRange,The following statement contains a magic number: Assert.True(array.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Null_Reference_Check,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => ImmutableHashTree<int?' int>.Empty.Add(null' 5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadsafeAdd_Null_Tree,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => ImmutableHashTree.ThreadSafeAdd(ref tree' 10' 10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadsafeAdd_Null_Tree,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => ImmutableHashTree.ThreadSafeAdd(ref tree' 10' 10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadsafeAdd_Null_Key,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => ImmutableHashTree.ThreadSafeAdd(ref tree' null' 10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Index_Throws_KeyNotFound,The following statement contains a magic number: Assert.Throws<KeyNotFoundException>(() => tree[5]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: var dictionary = new Dictionary<int' int> { { 5' 5 }' { 10' 10 }' { 15' 15 } };
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: var dictionary = new Dictionary<int' int> { { 5' 5 }' { 10' 10 }' { 15' 15 } };
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: var dictionary = new Dictionary<int' int> { { 5' 5 }' { 10' 10 }' { 15' 15 } };
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: var dictionary = new Dictionary<int' int> { { 5' 5 }' { 10' 10 }' { 15' 15 } };
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: var dictionary = new Dictionary<int' int> { { 5' 5 }' { 10' 10 }' { 15' 15 } };
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: var dictionary = new Dictionary<int' int> { { 5' 5 }' { 10' 10 }' { 15' 15 } };
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: Assert.Equal(3' tree.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: Assert.Equal(5' tree[5]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: Assert.Equal(5' tree[5]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: Assert.Equal(10' tree[10]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: Assert.Equal(10' tree[10]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: Assert.Equal(15' tree[15]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_From,The following statement contains a magic number: Assert.Equal(15' tree[15]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Throws_Key_Already_Exists,The following statement contains a magic number: var tree = ImmutableHashTree<int' int>.Empty.Add(10' 10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Throws_Key_Already_Exists,The following statement contains a magic number: var tree = ImmutableHashTree<int' int>.Empty.Add(10' 10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Throws_Key_Already_Exists,The following statement contains a magic number: Assert.Throws<KeyExistsException<int>>(() => tree.Add(10' 10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Throws_Key_Already_Exists,The following statement contains a magic number: Assert.Throws<KeyExistsException<int>>(() => tree.Add(10' 10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_TryGetValue_ReturnsValue,The following statement contains a magic number: var tree = ImmutableHashTree<int' int>.Empty.Add(10' 10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_TryGetValue_ReturnsValue,The following statement contains a magic number: var tree = ImmutableHashTree<int' int>.Empty.Add(10' 10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_TryGetValue_ReturnsValue,The following statement contains a magic number: Assert.False(tree.TryGetValue(5' out testValue));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(5' ImmutableHashTree.ThreadSafeAdd(ref tree' "Hello"' 5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(5' ImmutableHashTree.ThreadSafeAdd(ref tree' "Hello"' 5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(5' tree["Hello"]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(5' ImmutableHashTree.ThreadSafeAdd(ref tree' "Hello"' 10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(5' ImmutableHashTree.ThreadSafeAdd(ref tree' "Hello"' 10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(5' tree["Hello"]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(10' ImmutableHashTree.ThreadSafeAdd(ref tree' "Hello"' 10' updateIfExists: true));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(10' ImmutableHashTree.ThreadSafeAdd(ref tree' "Hello"' 10' updateIfExists: true));
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_ThreadSafeAdd_UpdateIfExists,The following statement contains a magic number: Assert.Equal(10' tree["Hello"]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_Index,The following statement contains a magic number: tree = tree.Add(new ConflictClass(i % 5' i)' i);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_Index,The following statement contains a magic number: i < 1000
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_Index,The following statement contains a magic number: Assert.Equal(1000' tree.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_Index,The following statement contains a magic number: var conflict = new ConflictClass(i % 5' i);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_Index,The following statement contains a magic number: i < 1000
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue,The following statement contains a magic number: tree = tree.Add(new ConflictClass(i % 5' i)' i);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue,The following statement contains a magic number: i < 1000
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue,The following statement contains a magic number: Assert.Equal(1000' tree.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue,The following statement contains a magic number: var conflict = new ConflictClass(i % 5' i);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue,The following statement contains a magic number: i < 1000
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue_Default,The following statement contains a magic number: tree = tree.Add(new ConflictClass(5' 1)' 6);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue_Default,The following statement contains a magic number: tree = tree.Add(new ConflictClass(5' 1)' 6);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue_Default,The following statement contains a magic number: var value = tree.GetValueOrDefault(new ConflictClass(5' 2)' 10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue_Default,The following statement contains a magic number: var value = tree.GetValueOrDefault(new ConflictClass(5' 2)' 10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue_Default,The following statement contains a magic number: var value = tree.GetValueOrDefault(new ConflictClass(5' 2)' 10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_GetValue_Default,The following statement contains a magic number: Assert.Equal(10' value);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_IterateInOrder,The following statement contains a magic number: tree = tree.Add(new ConflictClass(i % 5' i)' i);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_IterateInOrder,The following statement contains a magic number: i < 1000
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_IterateInOrder,The following statement contains a magic number: Assert.Equal(1000' tree.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_IterateInOrder,The following statement contains a magic number: Assert.Equal(1000' list.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_IterateInOrder_Enumerable,The following statement contains a magic number: tree = tree.Add(new ConflictClass(i % 5' i)' i);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_IterateInOrder_Enumerable,The following statement contains a magic number: i < 1000
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_IterateInOrder_Enumerable,The following statement contains a magic number: Assert.Equal(1000' tree.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Conflict_IterateInOrder_Enumerable,The following statement contains a magic number: Assert.Equal(1000' tree.IterateInOrder().Count());
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Threading_Test,The following statement contains a magic number: var threadCount = 4;
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Threading_Test,The following statement contains a magic number: Task.WaitAll(tasks.ToArray()' 60 * 1000);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,ImmutableHashTree_Threading_Test,The following statement contains a magic number: Task.WaitAll(tasks.ToArray()' 60 * 1000);
Magic Number,Grace.Tests.Data.Immutable,ImmutableHashTreeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableHashTreeTests.cs,AddRangeToTree,The following statement contains a magic number: i % 1000 == 0
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Null_Reference_Check,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => ImmutableLinkedList.ThreadSafeAddRange(ref value' new []{5}));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Add_Test,The following statement contains a magic number: list = list.Add(5);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Enumerator_Test,The following statement contains a magic number: list = list.Add(5);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Enumerator_Test,The following statement contains a magic number: list = list.Add(10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Enumerator_Test,The following statement contains a magic number: list = list.Add(15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Enumerator_Test,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Enumerator_Test,The following statement contains a magic number: Assert.True(newList.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Enumerator_Test,The following statement contains a magic number: Assert.True(newList.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Enumerator_Test,The following statement contains a magic number: Assert.True(newList.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_From,The following statement contains a magic number: var list = ImmutableLinkedList.From(new[] { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_From,The following statement contains a magic number: var list = ImmutableLinkedList.From(new[] { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_From,The following statement contains a magic number: var list = ImmutableLinkedList.From(new[] { 5' 10' 15 });
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_From,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_From,The following statement contains a magic number: Assert.True(newList.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_From,The following statement contains a magic number: Assert.True(newList.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_From,The following statement contains a magic number: Assert.True(newList.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Create,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Create,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Create,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Create,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Create,The following statement contains a magic number: Assert.True(newList.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Create,The following statement contains a magic number: Assert.True(newList.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Create,The following statement contains a magic number: Assert.True(newList.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Contains,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Contains,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Contains,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Contains,The following statement contains a magic number: Assert.True(list.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Contains,The following statement contains a magic number: Assert.True(list.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Contains,The following statement contains a magic number: Assert.True(list.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeAdd,The following statement contains a magic number: ImmutableLinkedList.ThreadSafeAdd(ref list' 5);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeAdd,The following statement contains a magic number: ImmutableLinkedList.ThreadSafeAdd(ref list' 10);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeAdd,The following statement contains a magic number: ImmutableLinkedList.ThreadSafeAdd(ref list' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeAdd,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeAdd,The following statement contains a magic number: Assert.True(newList.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeAdd,The following statement contains a magic number: Assert.True(newList.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeAdd,The following statement contains a magic number: Assert.True(newList.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeEmpty,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeEmpty,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeEmpty,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeEmpty,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeEmpty,The following statement contains a magic number: Assert.True(newList.Contains(5));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeEmpty,The following statement contains a magic number: Assert.True(newList.Contains(10));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ThreadSafeEmpty,The following statement contains a magic number: Assert.True(newList.Contains(15));
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_Beginning,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_Beginning,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_Beginning,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_Beginning,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_Beginning,The following statement contains a magic number: Assert.Equal(15' newList[0]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_Beginning,The following statement contains a magic number: Assert.Equal(10' newList[1]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_Beginning,The following statement contains a magic number: Assert.Equal(5' newList[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_Beginning,The following statement contains a magic number: Assert.Equal(5' newList[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList,The following statement contains a magic number: Assert.Equal(15' list[0]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList,The following statement contains a magic number: Assert.Equal(10' list[1]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList,The following statement contains a magic number: Assert.Equal(5' list[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList,The following statement contains a magic number: Assert.Equal(5' list[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList_IndexException,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList_IndexException,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList_IndexException,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_ReadOnlyList_IndexException,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => list[3]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_End,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_End,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_End,The following statement contains a magic number: var list = ImmutableLinkedList.Create(5' 10' 15);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_End,The following statement contains a magic number: Assert.Equal(3' newList.Count);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_End,The following statement contains a magic number: Assert.Equal(5' newList[0]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_End,The following statement contains a magic number: Assert.Equal(10' newList[1]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_End,The following statement contains a magic number: Assert.Equal(15' newList[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Visit_Start_End,The following statement contains a magic number: Assert.Equal(15' newList[2]);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Multithreaded_Test,The following statement contains a magic number: var writerCount = 4;
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Multithreaded_Test,The following statement contains a magic number: _countdownEvent = new CountdownEvent(4);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Multithreaded_Test,The following statement contains a magic number: Task.WaitAll(listOfTasks.ToArray()' 60 * 1000);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,ImmutableLinkedList_Multithreaded_Test,The following statement contains a magic number: Task.WaitAll(listOfTasks.ToArray()' 60 * 1000);
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,RemoveFromList,The following statement contains a magic number: i < 500
Magic Number,Grace.Tests.Data.Immutable,ImmutableLinkedListTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\Immutable\ImmutableLinkedListTests.cs,AddRangeToList,The following statement contains a magic number: _addAmount % 1000 == 0
Magic Number,Grace.Tests.Data,ReflectionServiceTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\ReflectionServiceTests.cs,GetPropertiesFromObject,The following statement contains a magic number: var values = ReflectionService.GetPropertiesFromObject(new { Test = "Property"' Value = 4 });
Magic Number,Grace.Tests.Data,ReflectionServiceTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\ReflectionServiceTests.cs,GetPropertiesFromObject,The following statement contains a magic number: Assert.Equal(2' values.Count);
Magic Number,Grace.Tests.Data,ReflectionServiceTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\ReflectionServiceTests.cs,GetPropertiesFromObject,The following statement contains a magic number: Assert.Equal(4' values["Value"]);
Magic Number,Grace.Tests.Data,ReflectionServiceTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\ReflectionServiceTests.cs,GetPropertiesInheritClass,The following statement contains a magic number: Assert.Equal(2' values.Count);
Magic Number,Grace.Tests.Data,ReflectionServiceTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Data\ReflectionServiceTests.cs,GetPropertiesInheritClass,The following statement contains a magic number: Assert.Equal(2' values["PropTwo"]);
Magic Number,Grace.Tests.DependencyInjection.AddOns,ExportInitializeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\ExportInitializeTests.cs,ExportInitialize_Type,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInitialize<BasicService>(service => service.Count = 10);                  c.Export<BasicService>().As<IBasicService>();              });
Magic Number,Grace.Tests.DependencyInjection.AddOns,ExportInitializeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\ExportInitializeTests.cs,ExportInitialize_Type,The following statement contains a magic number: Assert.Equal(10' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.AddOns,ExportInitializeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\ExportInitializeTests.cs,ExportInitialize_Interface,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInitialize<IBasicService>(service => service.Count = 10);                  c.Export<BasicService>();              });
Magic Number,Grace.Tests.DependencyInjection.AddOns,ExportInitializeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\ExportInitializeTests.cs,ExportInitialize_Interface,The following statement contains a magic number: Assert.Equal(10' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.AddOns,ExportInitializeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\ExportInitializeTests.cs,ExportInitialize_Dependent,The following statement contains a magic number: Assert.Equal(10' instance.Value.IntValue);
Magic Number,Grace.Tests.DependencyInjection.AddOns,ExportInitializeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\ExportInitializeTests.cs,ExportInitialize_Base,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInitialize<BasicService>(service => service.Count = 10);                  c.Export<InheritBasicService>().As<IBasicService>();              });
Magic Number,Grace.Tests.DependencyInjection.AddOns,ExportInitializeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\ExportInitializeTests.cs,ExportInitialize_Base,The following statement contains a magic number: Assert.Equal(10' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.AddOns,ImplementationClass,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\ExportInitializeTests.cs,Injected,The following statement contains a magic number: IntValue = 10;
Magic Number,Grace.Tests.DependencyInjection.AddOns,InjectionValueProviderTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\InjectionValueProviderTests.cs,InjectionValueProvider_Test,The following statement contains a magic number: var basicService = new BasicService { Count = 15 };
Magic Number,Grace.Tests.DependencyInjection.AddOns,InjectionValueProviderTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\InjectionValueProviderTests.cs,InjectionValueProvider_Test,The following statement contains a magic number: Assert.Equal(15' valueProvderInstance.Value.Count);
Magic Number,Grace.Tests.DependencyInjection.AddOns,StrategyInspectorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AddOns\StrategyInspectorTests.cs,StrategyInspectorInjection_Tests,The following statement contains a magic number: var instance = container.Locate<IPropertyInjectionService>(new { Count = 5 });
Magic Number,Grace.Tests.DependencyInjection.AttributeTests,ExportAttributeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AttributeTests\ExportAttributeTests.cs,Metadata_Locate,The following statement contains a magic number: Assert.Equal("Hello"' instance.Metadata[123]);
Magic Number,Grace.Tests.DependencyInjection.AttributeTests,ExportAttributeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\AttributeTests\ExportAttributeTests.cs,Metadata_Locate,The following statement contains a magic number: Assert.Equal("World"' instance.Metadata[456]);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DepencencyInjectionContainer_ExportAsBase_Interface,The following statement contains a magic number: container.Configure(c => c.Export<InheritingBasicService>().As<IInheritingBasicService>().ImportProperty(m => m.Count).DefaultValue(5));
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DepencencyInjectionContainer_ExportAsBase_Interface,The following statement contains a magic number: Assert.Equal(5' instance.Count);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DepencencyInjectionContainer_ExportAsBase_Interface,The following statement contains a magic number: Assert.Equal(5' basicInstance.Count);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DepencencyInjectionContainer_ExportAsBase_Concrete,The following statement contains a magic number: container.Configure(c => c.Export<InheritingBasicService>().ImportProperty(m => m.Count).DefaultValue(5));
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DepencencyInjectionContainer_ExportAsBase_Concrete,The following statement contains a magic number: Assert.Equal(5' instance.Count);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DepencencyInjectionContainer_ExportAsBase_Concrete,The following statement contains a magic number: Assert.Equal(5' basicInstance.Count);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DependencyInjectionContainer_Keys,The following statement contains a magic number: container.SetExtraData(5' 10);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DependencyInjectionContainer_Keys,The following statement contains a magic number: container.SetExtraData(5' 10);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DependencyInjectionContainer_Values,The following statement contains a magic number: container.SetExtraData(5' 10);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DependencyInjectionContainer_Values,The following statement contains a magic number: container.SetExtraData(5' 10);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DependencyInjectionContainer_KeyValuePairs,The following statement contains a magic number: container.SetExtraData(5' 10);
Magic Number,Grace.Tests.DependencyInjection,BasicContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\BasicContainerTests.cs,DependencyInjectionContainer_KeyValuePairs,The following statement contains a magic number: container.SetExtraData(5' 10);
Magic Number,Grace.Tests.DependencyInjection,DefaultValueTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DefaultValueTests.cs,DefaultValue_Provided_Used_Over_Constructor,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportAs<OptionalIntServiceConstructor' IOptionalIntServiceConstructor>().                    WithCtorParam<int>().DefaultValue(10);                  c.ExportAs<SimpleObjectA' ISimpleObject>();              });
Magic Number,Grace.Tests.DependencyInjection,DefaultValueTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DefaultValueTests.cs,DefaultValue_Provided_Used_Over_Constructor,The following statement contains a magic number: Assert.Equal(10' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.ChildContainer,ChildContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ChildContainer\ChildContainerTests.cs,ChildContainer_Locate_Correct_Instance,The following statement contains a magic number: child.Configure(c =>                  {                      c.ExportInstance<IBasicService>(() => new BasicService {Count = 10});                      c.ExportInstance(scope =>                      {                          return new DependentService<IBasicService>(scope.Locate<IBasicService>());                      });                  });
Magic Number,Grace.Tests.DependencyInjection.ChildContainer,ChildContainerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ChildContainer\ChildContainerTests.cs,ChildContainer_Locate_Correct_Instance,The following statement contains a magic number: Assert.Equal(10' instance.Value.Count);
Magic Number,Grace.Tests.DependencyInjection.Conditions,WhenClassHasTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Conditions\WhenClassHasTests.cs,WhenClassHas_Match_With_Filter,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<AttributedSimpleObjectA>()                      .As<IAttributedSimpleObject>()                      .When.ClassHas(typeof(SomeTestAttribute)' attribute => ((SomeTestAttribute)attribute).TestValue == 10);                  c.Export<AttributedSimpleObjectB>().As<IAttributedSimpleObject>().When.ClassHas(typeof(SomeTestAttribute));                  c.Export<AttributedSimpleObjectC>().As<IAttributedSimpleObject>();              });
Magic Number,Grace.Tests.DependencyInjection.Conditions,WhenClassHasTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Conditions\WhenClassHasTests.cs,WhenClassHasGeneric_Match_With_Filter,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<AttributedSimpleObjectA>().As<IAttributedSimpleObject>().When.ClassHas<SomeTestAttribute>(attribute => attribute.TestValue == 10);                  c.Export<AttributedSimpleObjectB>().As<IAttributedSimpleObject>().When.ClassHas<SomeTestAttribute>();                  c.Export<AttributedSimpleObjectC>().As<IAttributedSimpleObject>();              });
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,BestMatchTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\BestMatchTests.cs,Container_Match_Best_Constructor_Func,The following statement contains a magic number: var functioned = myFunc("funcString"' 667);
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PropertyInject,The following statement contains a magic number: container.Configure(c => c.Export<DynamicPropertyClassTest>().ImportProperty(i => i.IntValue).DefaultValue(5));
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PropertyInject,The following statement contains a magic number: Assert.Equal(5' instance.IntValue);
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PropertyInject,The following statement contains a magic number: Assert.Equal(5' instance.IntValue);
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PropertyInject,The following statement contains a magic number: instance = container.Locate<DynamicPropertyClassTest>(new { intValue = 10 });
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PropertyInject,The following statement contains a magic number: Assert.Equal(10' instance.IntValue);
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PropertyInject,The following statement contains a magic number: instance = container.Locate<DynamicPropertyClassTest>(new { intValue = 10' basicService = new BasicService() });
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_PropertyInject,The following statement contains a magic number: Assert.Equal(10' instance.IntValue);
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_ThrowsWhenMissingDependency,The following statement contains a magic number: instance =                  container.Locate<DynamicMultipleConstructor_NoDefault>(new                  {                      basicService = new BasicService()'                      doubleValue = 5.0                  });
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_ThrowsWhenMissingDependency,The following statement contains a magic number: Assert.Equal(5.0' instance.DoubleValue);
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_MultipleIntParameters_Issue78,The following statement contains a magic number: var instance = container.Locate<DynamicMultipleIntParameters>(new { secondValue = 10' firstValue = 5 });
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_MultipleIntParameters_Issue78,The following statement contains a magic number: var instance = container.Locate<DynamicMultipleIntParameters>(new { secondValue = 10' firstValue = 5 });
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_MultipleIntParameters_Issue78,The following statement contains a magic number: Assert.Equal(instance.FirstValue' 5);
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,Dynamic_MultipleIntParameters_Issue78,The following statement contains a magic number: Assert.Equal(10' instance.SecondValue);
Magic Number,Grace.Tests.DependencyInjection.ConstructorSelection,DynamicSelectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ConstructorSelection\DynamicSelectionTests.cs,DynamicConstructorSelection_WithFunc,The following statement contains a magic number: var functioned = myFunc("funcString"' 667);
Magic Number,Grace.Tests.DependencyInjection.Decorator,BasicDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\BasicDecoratorTests.cs,MultipleDecoratorWithMultipleConstructorParameters,The following statement contains a magic number: Assert.Equal(2' instances.Count);
Magic Number,Grace.Tests.DependencyInjection.Decorator,ConditionDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\ConditionDecoratorTests.cs,DecoratorCondition_Decoratoring,The following statement contains a magic number: Assert.Equal(2' instances.Count);
Magic Number,Grace.Tests.DependencyInjection.Decorator,FuncDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\FuncDecoratorTests.cs,FuncDecorator_Initialize_Concrete,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<BasicService>().As<IBasicService>();                  c.ExportDecorator<BasicService>(service =>                  {                      service.Count = 5;                        return service;                  });              });
Magic Number,Grace.Tests.DependencyInjection.Decorator,FuncDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\FuncDecoratorTests.cs,FuncDecorator_Initialize_Concrete,The following statement contains a magic number: Assert.Equal(5' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.Decorator,FuncDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\FuncDecoratorTests.cs,FuncDecorator_Initialize_Interface,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<BasicService>().As<IBasicService>();                  c.ExportDecorator<IBasicService>(service =>                  {                      service.Count = 5;                        return service;                  });              });
Magic Number,Grace.Tests.DependencyInjection.Decorator,FuncDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\FuncDecoratorTests.cs,FuncDecorator_Initialize_Interface,The following statement contains a magic number: Assert.Equal(5' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.Decorator,FuncDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\FuncDecoratorTests.cs,FuncDecorator_ApplyAfterLifestyle,The following statement contains a magic number: Assert.Equal(2' instance2.Count);
Magic Number,Grace.Tests.DependencyInjection.Decorator,FuncDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\FuncDecoratorTests.cs,FuncDecorator_ExportFactory,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new BasicService { Count = 5 }).As<IBasicService>();                  c.ExportDecorator<IBasicService>(service =>                  {                      service.Count += 5;                      return service;                  });              });
Magic Number,Grace.Tests.DependencyInjection.Decorator,FuncDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\FuncDecoratorTests.cs,FuncDecorator_ExportFactory,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new BasicService { Count = 5 }).As<IBasicService>();                  c.ExportDecorator<IBasicService>(service =>                  {                      service.Count += 5;                      return service;                  });              });
Magic Number,Grace.Tests.DependencyInjection.Decorator,FuncDecoratorTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Decorator\FuncDecoratorTests.cs,FuncDecorator_ExportFactory,The following statement contains a magic number: Assert.Equal(10' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,ActivationExpressionRequest_GetSetData,The following statement contains a magic number: request.SetExtraData("Hello"' 5);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,ActivationExpressionRequest_GetSetData,The following statement contains a magic number: Assert.Equal(5' request.GetExtraData("Hello"));
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,ActivationExpressionRequest_Keys,The following statement contains a magic number: request.SetExtraData("Hello"' 5);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,ActivationExpressionRequest_Value,The following statement contains a magic number: request.SetExtraData("Hello"' 5);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,ActivationExpressionRequest_Value,The following statement contains a magic number: Assert.Equal(5' values[0]);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,ActivationExpressionRequest_KVP,The following statement contains a magic number: request.SetExtraData("Hello"' 5);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,ActivationExpressionRequest_KVP,The following statement contains a magic number: Assert.Equal(5' values[0].Value);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,PerDelegateData_Keys,The following statement contains a magic number: data.SetExtraData("Hello"' 5);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,PerDelegateData_Values,The following statement contains a magic number: data.SetExtraData("Hello"' 5);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,PerDelegateData_Values,The following statement contains a magic number: Assert.Equal(5' values[0]);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,PerDelegateData_KVP,The following statement contains a magic number: data.SetExtraData("Hello"' 5);
Magic Number,Grace.Tests.DependencyInjection.DelegateRequest,ActivationExpressionRequestTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DelegateRequest\ActivationExpressionRequestTests.cs,PerDelegateData_KVP,The following statement contains a magic number: Assert.Equal(5' values[0].Value);
Magic Number,Grace.Tests.DependencyInjection.DisposableTests,DisposableThreadingTest,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DisposableTests\DisposableThreadingTest.cs,AddToScope,The following statement contains a magic number: i < 10000
Magic Number,Grace.Tests.DependencyInjection.DisposableTests,DisposableThreadingTest,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\DisposableTests\DisposableThreadingTest.cs,AddToScopeWithCleanup,The following statement contains a magic number: i < 10000
Magic Number,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Constructor_Parameter_Returns_Default,The following statement contains a magic number: var basicService = new BasicService { Count = 10 };
Magic Number,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Constructor_Parameter_Returns_Default,The following statement contains a magic number: Assert.Equal(10' instance.Value.Count);
Magic Number,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Constructor_Parameter_Returns_Default,The following statement contains a magic number: childScope.Configure(c => c.Export<BasicService>().As<IBasicService>().ImportProperty(b => b.Count).DefaultValue(20));
Magic Number,Grace.Tests.DependencyInjection.Dynamic,DynamicTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Dynamic\DynamicTests.cs,Dynamic_Constructor_Parameter_Returns_Default,The following statement contains a magic number: Assert.Equal(20' instance.Value.Count);
Magic Number,Grace.Tests.DependencyInjection.Enrichment,FluentInterfaceEnrichmentTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enrichment\FluentInterfaceEnrichmentTests.cs,EnrichWithDelegate_Executes,The following statement contains a magic number: container.Configure(c => c.Export<BasicService>().As<IBasicService>().Apply(b => b.Count = 5));
Magic Number,Grace.Tests.DependencyInjection.Enrichment,FluentInterfaceEnrichmentTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enrichment\FluentInterfaceEnrichmentTests.cs,EnrichWithDelegate_Executes,The following statement contains a magic number: Assert.Equal(5' basicService.Count);
Magic Number,Grace.Tests.DependencyInjection.Enrichment,FluentInterfaceEnrichmentTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enrichment\FluentInterfaceEnrichmentTests.cs,Encrichment_Executes,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<BasicService>().As<IBasicService>().EnrichWithDelegate((scope' context' service) =>                  {                      service.Count = 5;                      return service;                  });              });
Magic Number,Grace.Tests.DependencyInjection.Enrichment,FluentInterfaceEnrichmentTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enrichment\FluentInterfaceEnrichmentTests.cs,Encrichment_Executes,The following statement contains a magic number: Assert.Equal(5' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_LocateEnumerable_ReturnsMultiple,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_LocateEnumerable_ReturnsMultiple,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_LocateEnumerable_ReturnsMultiple,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_LocateEnumerable_ReturnsMultiple,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_ImportEnumerable_ReturnMultiple,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_ImportEnumerable_ReturnMultiple,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_ImportEnumerable_ReturnMultiple,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_ImportEnumerable_ReturnMultiple,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerableCreator_ReturnsMultiple,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerableCreator_ReturnsMultiple,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerableCreator_ReturnsMultiple,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerableCreator_ReturnsMultiple,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService5 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService1 { Count = 1 }).As<IMultipleService>();                  c.Export<ImportEnumberableService>().As<IImportEnumberableService>().WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>().SortByProperty(m => m.Count);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService5 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService1 { Count = 1 }).As<IMultipleService>();                  c.Export<ImportEnumberableService>().As<IImportEnumberableService>().WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>().SortByProperty(m => m.Count);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService5 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService1 { Count = 1 }).As<IMultipleService>();                  c.Export<ImportEnumberableService>().As<IImportEnumberableService>().WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>().SortByProperty(m => m.Count);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService5 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService1 { Count = 1 }).As<IMultipleService>();                  c.Export<ImportEnumberableService>().As<IImportEnumberableService>().WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>().SortByProperty(m => m.Count);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Sort,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Locate_Key,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<SimpleCompositePattern1>().AsKeyed<ICompositePattern>(1);                  c.Export<SimpleCompositePattern2>().AsKeyed<ICompositePattern>(2);                  c.Export<CompositePattern>()                      .As<ICompositePattern>()                      .WithCtorParam<IEnumerable<ICompositePattern>>()                      .LocateWithKey(new[] { 1' 2 });              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Locate_Key,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<SimpleCompositePattern1>().AsKeyed<ICompositePattern>(1);                  c.Export<SimpleCompositePattern2>().AsKeyed<ICompositePattern>(2);                  c.Export<CompositePattern>()                      .As<ICompositePattern>()                      .WithCtorParam<IEnumerable<ICompositePattern>>()                      .LocateWithKey(new[] { 1' 2 });              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Locate_Key,The following statement contains a magic number: Assert.Equal(3' value.Count);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Composite_Pattern,The following statement contains a magic number: Assert.Equal(3' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Keyed_Return,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Keyed_Return,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Keyed_Return,The following statement contains a magic number: Assert.Equal(3' enumerable.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_IEnumerable_Keyed_Return,The following statement contains a magic number: Assert.IsType<MultipleService3>(enumerable[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_LocateAll_Keyed_Return,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_LocateAll_Keyed_Return,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_LocateAll_Keyed_Return,The following statement contains a magic number: Assert.Equal(3' enumerable.Count);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,EnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\EnumerableTests.cs,Container_LocateAll_Keyed_Return,The following statement contains a magic number: Assert.IsType<MultipleService3>(enumerable[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ICollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ICollectionEnumerableTests.cs,Locate_ICollection_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ICollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ICollectionEnumerableTests.cs,Locate_ICollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ICollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ICollectionEnumerableTests.cs,Locate_ICollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ICollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ICollectionEnumerableTests.cs,Locate_ICollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ICollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ICollectionEnumerableTests.cs,Import_IList_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ICollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ICollectionEnumerableTests.cs,Import_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ICollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ICollectionEnumerableTests.cs,Import_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ICollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ICollectionEnumerableTests.cs,Import_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,IListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\IListEnumerableTests.cs,Locate_IList_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,IListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\IListEnumerableTests.cs,Locate_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,IListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\IListEnumerableTests.cs,Locate_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,IListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\IListEnumerableTests.cs,Locate_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,IListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\IListEnumerableTests.cs,Import_IList_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,IListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\IListEnumerableTests.cs,Import_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,IListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\IListEnumerableTests.cs,Import_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,IListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\IListEnumerableTests.cs,Import_IList_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ImmutableArrayEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ImmutableArrayEnumerableTests.cs,Locate_ImmutableArray_Create,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ImmutableArrayEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ImmutableArrayEnumerableTests.cs,Locate_ImmutableArray_Create,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ImmutableArrayEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ImmutableArrayEnumerableTests.cs,Locate_ImmutableArray_Create,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ImmutableArrayEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ImmutableArrayEnumerableTests.cs,Locate_ImmutableArray_Create,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ImmutableArrayEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ImmutableArrayEnumerableTests.cs,Import_ImmutableLinkedList,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ImmutableArrayEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ImmutableArrayEnumerableTests.cs,Import_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ImmutableArrayEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ImmutableArrayEnumerableTests.cs,Import_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ImmutableArrayEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ImmutableArrayEnumerableTests.cs,Import_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,LinkedListEnumberableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\LinkedListEnumberableTests.cs,Locate_ImmutableLinkedList,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,LinkedListEnumberableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\LinkedListEnumberableTests.cs,Locate_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,LinkedListEnumberableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\LinkedListEnumberableTests.cs,Locate_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,LinkedListEnumberableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\LinkedListEnumberableTests.cs,Locate_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,LinkedListEnumberableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\LinkedListEnumberableTests.cs,Import_ImmutableLinkedList,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,LinkedListEnumberableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\LinkedListEnumberableTests.cs,Import_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,LinkedListEnumberableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\LinkedListEnumberableTests.cs,Import_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,LinkedListEnumberableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\LinkedListEnumberableTests.cs,Import_ImmutableLinkedList,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ListEnumerableTests.cs,Locate_List_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ListEnumerableTests.cs,Locate_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ListEnumerableTests.cs,Locate_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ListEnumerableTests.cs,Locate_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ListEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ListEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ListEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ListEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ListEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ObservableCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ObservableCollectionEnumerableTests.cs,Locate_ObservableCollection_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ObservableCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ObservableCollectionEnumerableTests.cs,Locate_ObservableCollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ObservableCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ObservableCollectionEnumerableTests.cs,Locate_ObservableCollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ObservableCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ObservableCollectionEnumerableTests.cs,Locate_ObservableCollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ObservableCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ObservableCollectionEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ObservableCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ObservableCollectionEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ObservableCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ObservableCollectionEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ObservableCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ObservableCollectionEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Locate_ReadOnlyCollection_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Locate_ReadOnlyCollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Locate_ReadOnlyCollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Locate_ReadOnlyCollection_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_List_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_Sorted_ReadOnlyCollection,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService5 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService1 { Count = 1 }).As<IMultipleService>();                  c.Export<ImportReadOnlyCollectionClass>()                      .WithCtorCollectionParam<IReadOnlyCollection<IMultipleService>' IMultipleService>()                      .SortByProperty(m => m.Count);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_Sorted_ReadOnlyCollection,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService5 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService1 { Count = 1 }).As<IMultipleService>();                  c.Export<ImportReadOnlyCollectionClass>()                      .WithCtorCollectionParam<IReadOnlyCollection<IMultipleService>' IMultipleService>()                      .SortByProperty(m => m.Count);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_Sorted_ReadOnlyCollection,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService5 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService1 { Count = 1 }).As<IMultipleService>();                  c.Export<ImportReadOnlyCollectionClass>()                      .WithCtorCollectionParam<IReadOnlyCollection<IMultipleService>' IMultipleService>()                      .SortByProperty(m => m.Count);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_Sorted_ReadOnlyCollection,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService5 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService1 { Count = 1 }).As<IMultipleService>();                  c.Export<ImportReadOnlyCollectionClass>()                      .WithCtorCollectionParam<IReadOnlyCollection<IMultipleService>' IMultipleService>()                      .SortByProperty(m => m.Count);              });
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_Sorted_ReadOnlyCollection,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_Sorted_ReadOnlyCollection,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_Sorted_ReadOnlyCollection,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,ReadOnlyCollectionEnumerableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\ReadOnlyCollectionEnumerableTests.cs,Import_Sorted_ReadOnlyCollection,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableList_Test,The following statement contains a magic number: Assert.Equal(5' list.Count);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableList_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(list[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableList_Test,The following statement contains a magic number: Assert.IsType<MultipleService4>(list[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableList_Test,The following statement contains a magic number: Assert.IsType<MultipleService5>(list[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableList_Dependency_Test,The following statement contains a magic number: Assert.Equal(5' list.Count);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableList_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(list[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableList_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService4>(list[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableList_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService5>(list[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableArray_Test,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableArray_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableArray_Test,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableArray_Test,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableArray_Dependency_Test,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableArray_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableArray_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableArray_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableQueue_Test,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableQueue_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableQueue_Test,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableQueue_Test,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableQueue_Dependency_Test,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableQueue_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableQueue_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableQueue_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableStack_Test,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableStack_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableStack_Test,The following statement contains a magic number: Assert.IsType<MultipleService2>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableStack_Test,The following statement contains a magic number: Assert.IsType<MultipleService1>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableStack_Dependency_Test,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableStack_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableStack_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService2>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Enumerable,SystemImmutableTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Enumerable\SystemImmutableTests.cs,System_ImmutableStack_Dependency_Test,The following statement contains a magic number: Assert.IsType<MultipleService1>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceConstantTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceConstantTests.cs,ExportInstance_Constant_Decorated,The following statement contains a magic number: IBasicService basicService = new BasicService { Count = 5 };
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceConstantTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceConstantTests.cs,ExportInstance_Constant_Decorated,The following statement contains a magic number: Assert.Equal(5' instance1.Count);
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceConstantTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceConstantTests.cs,ExportInstance_Constant_Decorated,The following statement contains a magic number: Assert.Equal(5' instance2.Count);
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncTests.cs,ExportInstance_Func_Create_Instance,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInstance(() => new BasicService { Count = 5 }).As<IBasicService>();                  c.Export<ConstructorImportService>().As<IConstructorImportService>();              });
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncTests.cs,ExportInstance_Func_Create_Instance,The following statement contains a magic number: Assert.Equal(5' service.BasicService.Count);
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncTests.cs,ExportInstance_Func_With_Singleton_Lifestyle,The following statement contains a magic number: container.Configure(c => c.ExportInstance<IBasicService>(() => new BasicService { Count = 5 }).Lifestyle.Singleton());
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncWithInjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncWithInjectionContextTests.cs,ExportInstance_With_InjectionContext,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInstance((scope' staticContext' injectionContext) =>                  {                      Assert.NotNull(injectionContext);                        return new BasicService {Count = 5};                  }).As<IBasicService>();                  c.Export<ConstructorImportService>().As<IConstructorImportService>();              });
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncWithInjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncWithInjectionContextTests.cs,ExportInstance_With_InjectionContext,The following statement contains a magic number: Assert.Equal(5' service.BasicService.Count);
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncWithScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncWithScopeTests.cs,ExportInstance_With_Scope,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInstance(scope => new BasicService { Count = 5 }).As<IBasicService>();                  c.Export<ConstructorImportService>().As<IConstructorImportService>();              });
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncWithScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncWithScopeTests.cs,ExportInstance_With_Scope,The following statement contains a magic number: Assert.Equal(5' service.BasicService.Count);
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncWithStaticContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncWithStaticContextTests.cs,ExportInstance_With_StaticContext,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInstance((scope' staticContext) => new BasicService { Count = 5 }).As<IBasicService>();                  c.Export<ConstructorImportService>().As<IConstructorImportService>();              });
Magic Number,Grace.Tests.DependencyInjection.ExportInstance,ExportInstanceFuncWithStaticContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExportInstance\ExportInstanceFuncWithStaticContextTests.cs,ExportInstance_With_StaticContext,The following statement contains a magic number: Assert.Equal(5' service.BasicService.Count);
Magic Number,Grace.Tests.DependencyInjection.Expressions,ActivationStrategyCompilerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Expressions\ActivationStrategyCompilerTests.cs,ActivationStrategyCompiler_CreateNewRequest_Null_Type_Throws,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => compiler.CreateNewRequest(null' 10' scope));
Magic Number,Grace.Tests.DependencyInjection.Expressions,ActivationStrategyCompilerTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Expressions\ActivationStrategyCompilerTests.cs,ActivationStrategyCompiler_CreateNewRequest_Null_Scope_Throws,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => compiler.CreateNewRequest(typeof(IBasicService)' 10' null));
Magic Number,Grace.Tests.DependencyInjection.Expressions,ExpressionExportStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Expressions\ExpressionExportStrategyTests.cs,ExpressionExport_LocateValue,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<BasicService>().As<IBasicService>();                  c.ExportExpression(() => new TwoArgClass(Arg.Locate<IBasicService>()' 5));              });
Magic Number,Grace.Tests.DependencyInjection.Expressions,ExpressionExportStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Expressions\ExpressionExportStrategyTests.cs,ExpressionExport_LocateValue,The following statement contains a magic number: Assert.Equal(5' instance.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Expressions,ExpressionExportStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Expressions\ExpressionExportStrategyTests.cs,ExpressionExport_InjectionContext,The following statement contains a magic number: var instance = container.Locate<InjectionContextClass>(new { SomeValue = 10 });
Magic Number,Grace.Tests.DependencyInjection.Expressions,ExpressionExportStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Expressions\ExpressionExportStrategyTests.cs,ExpressionExport_InjectionContext,The following statement contains a magic number: Assert.Equal(10' instance.SomeValue);
Magic Number,Grace.Tests.DependencyInjection.Expressions,ExpressionExportStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Expressions\ExpressionExportStrategyTests.cs,ExpressionExport_LocateWithData,The following statement contains a magic number: Assert.Equal(20' instance.Value.SomeValue);
Magic Number,Grace.Tests.DependencyInjection.ExtraData,IExraDataContainerExtensionsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\ExtraData\IExraDataContainerExtensionsTests.cs,IExraDataContainerExtensions_GetExtraDataOrDefaultValue_Convert,The following statement contains a magic number: Assert.Equal(10' value);
Magic Number,Grace.Tests.DependencyInjection.Factory,FactorySpecialTypeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FactorySpecialTypeTests.cs,Factory_Depend_On_IExportLocatorScope_IInjectionContext,The following statement contains a magic number: var service = container.Locate<IDependentService<IBasicService>>(new { count = 10 });
Magic Number,Grace.Tests.DependencyInjection.Factory,FactorySpecialTypeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FactorySpecialTypeTests.cs,Factory_Depend_On_IExportLocatorScope_IInjectionContext,The following statement contains a magic number: Assert.Equal(10' service.Value.Count);
Magic Number,Grace.Tests.DependencyInjection.Factory,FiveArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FiveArgFactoryTests.cs,FactoryFiveArg_Create_Instance,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Factory,FiveArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FiveArgFactoryTests.cs,FactoryFiveArg_Create_Instance,The following statement contains a magic number: Assert.IsType<SimpleObjectC>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Factory,FiveArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FiveArgFactoryTests.cs,FactoryFiveArg_Create_Instance,The following statement contains a magic number: Assert.IsType<SimpleObjectD>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Factory,FiveArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FiveArgFactoryTests.cs,FactoryFiveArg_Create_Instance,The following statement contains a magic number: Assert.IsType<SimpleObjectE>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Factory,FourArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FourArgFactoryTests.cs,FactoryThreeArg_Create_Instance,The following statement contains a magic number: Assert.Equal(4' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Factory,FourArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FourArgFactoryTests.cs,FactoryThreeArg_Create_Instance,The following statement contains a magic number: Assert.IsType<SimpleObjectC>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Factory,FourArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\FourArgFactoryTests.cs,FactoryThreeArg_Create_Instance,The following statement contains a magic number: Assert.IsType<SimpleObjectD>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Factory,ThreeArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\ThreeArgFactoryTests.cs,FactoryThreeArg_Create_Instance,The following statement contains a magic number: Assert.Equal(3' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Factory,ThreeArgFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Factory\ThreeArgFactoryTests.cs,FactoryThreeArg_Create_Instance,The following statement contains a magic number: Assert.IsType<SimpleObjectC>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Generics,SimpleGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Generics\SimpleGenericTests.cs,Open_Generic_Locate_Generic_Int_Service,The following statement contains a magic number: var service = container.Locate<IImportGenericService<int>>(new { value = 5});
Magic Number,Grace.Tests.DependencyInjection.Generics,SimpleGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Generics\SimpleGenericTests.cs,Open_Generic_Locate_Generic_Int_Service,The following statement contains a magic number: Assert.Equal(5' service.Value);
Magic Number,Grace.Tests.DependencyInjection.Helpers,TypesThatTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Helpers\TypesThatTests.cs,HaveAttributeTypeFiltered,The following statement contains a magic number: Func<Type' bool> haveFilter = TypesThat.HaveAttribute(typeof(SomeTestAttribute)'                  x => ((SomeTestAttribute)x).TestValue == 5);
Magic Number,Grace.Tests.DependencyInjection.Helpers,TypesThatTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Helpers\TypesThatTests.cs,HaveAttributeGenericFiltered,The following statement contains a magic number: Func<Type' bool> haveFilter = TypesThat.HaveAttribute<SomeTestAttribute>(x => x.TestValue == 5);
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,Container_InjectionContext_ArrayValue,The following statement contains a magic number: var instance = container.Locate<DependentService<int>>(new[] { 5 });
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,Container_InjectionContext_ArrayValue,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,Container_InjectionContext_Delegate,The following statement contains a magic number: var instance = container.Locate<DependentService<int>>(new Func<int>(() => 5));
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,Container_InjectionContext_Delegate,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,Container_InjectionContext_Value_Name_Casing_Mismatch,The following statement contains a magic number: var instance = container.Locate<DependentService<int>>(new { Value = 5 });
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,Container_InjectionContext_Value_Name_Casing_Mismatch,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,Container_InjectionContext_Convert_Type,The following statement contains a magic number: var instance = container.Locate<IBasicService>(new { Count = 5.0 });
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,Container_InjectionContext_Convert_Type,The following statement contains a magic number: Assert.Equal(5' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue,The following statement contains a magic number: context.SetExtraData(5' "Hello");
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue,The following statement contains a magic number: Assert.Equal("Hello"' context.GetExtraData(5));
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue_Override,The following statement contains a magic number: context.SetExtraData(5' "Hello");
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue_Override,The following statement contains a magic number: Assert.Equal("Hello"' context.GetExtraData(5));
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue_Override,The following statement contains a magic number: context.SetExtraData(5' "World");
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue_Override,The following statement contains a magic number: Assert.Equal("World"' context.GetExtraData(5));
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue_Dont_Override,The following statement contains a magic number: context.SetExtraData(5' "Hello");
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue_Dont_Override,The following statement contains a magic number: Assert.Equal("Hello"' context.GetExtraData(5));
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue_Dont_Override,The following statement contains a magic number: context.SetExtraData(5' "World"' replaceIfExists: false);
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_SetValue_Dont_Override,The following statement contains a magic number: Assert.Equal("Hello"' context.GetExtraData(5));
Magic Number,Grace.Tests.DependencyInjection.InjectionContext,InjectionContextTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\InjectionContext\InjectionContextTests.cs,InjectionContext_GetValueByType,The following statement contains a magic number: context.SetExtraData(5' "Hello");
Magic Number,Grace.Tests.DependencyInjection.Inject,InjectExtensionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Inject\InjectExtensionTests.cs,Inject_With_ExtraData,The following statement contains a magic number: container.Inject(testClass' new { PropA = 5 });
Magic Number,Grace.Tests.DependencyInjection.Inject,InjectExtensionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Inject\InjectExtensionTests.cs,Inject_With_ExtraData,The following statement contains a magic number: Assert.Equal(5' testClass.PropA);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Interface_Test,The following statement contains a magic number: var value = calculator.Add(2' 3);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Interface_Test,The following statement contains a magic number: var value = calculator.Add(2' 3);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Interface_Test,The following statement contains a magic number: Assert.Equal(5' value);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Interface_Test,The following statement contains a magic number: Assert.Equal(2' interceptor.Arguements.Length);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Interface_Test,The following statement contains a magic number: Assert.Equal(2' interceptor.Arguements[0]);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Interface_Test,The following statement contains a magic number: Assert.Equal(3' interceptor.Arguements[1]);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_Before_Lifestyle_Test,The following statement contains a magic number: var value = calculator.Add(2' 3);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_Before_Lifestyle_Test,The following statement contains a magic number: var value = calculator.Add(2' 3);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_Before_Lifestyle_Test,The following statement contains a magic number: Assert.Equal(5' value);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_Before_Lifestyle_Test,The following statement contains a magic number: Assert.Equal(2' interceptor.Arguements.Length);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_Before_Lifestyle_Test,The following statement contains a magic number: Assert.Equal(2' interceptor.Arguements[0]);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_Before_Lifestyle_Test,The following statement contains a magic number: Assert.Equal(3' interceptor.Arguements[1]);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_After_Lifestyle_Test,The following statement contains a magic number: var value = calculator.Add(2' 3);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_After_Lifestyle_Test,The following statement contains a magic number: var value = calculator.Add(2' 3);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_After_Lifestyle_Test,The following statement contains a magic number: Assert.Equal(5' value);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_After_Lifestyle_Test,The following statement contains a magic number: Assert.Equal(2' interceptor.Arguements.Length);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_After_Lifestyle_Test,The following statement contains a magic number: Assert.Equal(2' interceptor.Arguements[0]);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,Intercept_Singleton_After_Lifestyle_Test,The following statement contains a magic number: Assert.Equal(3' interceptor.Arguements[1]);
Magic Number,Grace.Tests.DependencyInjection.Intercept,InterceptionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Intercept\InterceptionTests.cs,InterceptUsingAttribute,The following statement contains a magic number: Assert.Equal(2' all.Count);
Magic Number,Grace.Tests.DependencyInjection.Keyed,KeyedLocateTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Keyed\KeyedLocateTests.cs,Value_Parameter_Uses_Key,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInstance(5).AsKeyed<int>("value");              });
Magic Number,Grace.Tests.DependencyInjection.Keyed,KeyedLocateTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Keyed\KeyedLocateTests.cs,Value_Parameter_Uses_Key,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.Lifestyle,CustomSingletonLifestyleTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\CustomSingletonLifestyleTests.cs,CustomSingletonTest,The following statement contains a magic number: var instance = container.Locate<IDependentService<IBasicService>>(new { basicService = new BasicService { Count = 5 } });
Magic Number,Grace.Tests.DependencyInjection.Lifestyle,CustomSingletonLifestyleTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\CustomSingletonLifestyleTests.cs,CustomSingletonTest,The following statement contains a magic number: Assert.Equal(5' instance.Value.Count);
Magic Number,Grace.Tests.DependencyInjection.Lifestyle,CustomSingletonLifestyleTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\CustomSingletonLifestyleTests.cs,CustomSingletonTest,The following statement contains a magic number: var instance2 = container.Locate<IDependentService<IBasicService>>(new { basicService = new BasicService { Count = 15 } });
Magic Number,Grace.Tests.DependencyInjection.Lifestyle,SingletonPerScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\SingletonPerScopeTests.cs,SingletonPerScope_ShareContext,The following statement contains a magic number: var instance = scope.Locate<IDependentService<int>>(new {intValue = 5});
Magic Number,Grace.Tests.DependencyInjection.Lifestyle,SingletonPerScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Lifestyle\SingletonPerScopeTests.cs,SingletonPerScope_ShareContext,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.LifetimeScope,LifetimeScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\LifetimeScope\LifetimeScopeTests.cs,LifetimeScope_CreateContext,The following statement contains a magic number: var context = scope.CreateContext(new { PropA = 5 });
Magic Number,Grace.Tests.DependencyInjection.LifetimeScope,LifetimeScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\LifetimeScope\LifetimeScopeTests.cs,LifetimeScope_CreateContext,The following statement contains a magic number: Assert.Equal(5' context.GetExtraDataOrDefaultValue("propa"' 0));
Magic Number,Grace.Tests.DependencyInjection.LifetimeScope,LifetimeScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\LifetimeScope\LifetimeScopeTests.cs,LifetimeScope_LocateAll,The following statement contains a magic number: Assert.Equal(5' list.Count);
Magic Number,Grace.Tests.DependencyInjection.LifetimeScope,LifetimeScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\LifetimeScope\LifetimeScopeTests.cs,LifetimeScope_LocateAll_Generic,The following statement contains a magic number: Assert.Equal(5' list.Count);
Magic Number,Grace.Tests.DependencyInjection.LifetimeScope,LifetimeScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\LifetimeScope\LifetimeScopeTests.cs,LifetimeScope_Backup_Resolution_Source_With_Name,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.LifetimeScope,LifetimeScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\LifetimeScope\LifetimeScopeTests.cs,LifetimeScope_Backup_Resolution_Source_With_Name_Func,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.LifetimeScope,LifetimeScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\LifetimeScope\LifetimeScopeTests.cs,LifetimeScope_Backup_Resolution_Source_By_Type,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.LifetimeScope,LifetimeScopeTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\LifetimeScope\LifetimeScopeTests.cs,LifetimeScope_Backup_Resolution_Source_By_Type_Func,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.Locate,GenericLocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\GenericLocateAllTests.cs,LocateAll_Generic,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Locate,GenericLocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\GenericLocateAllTests.cs,LocateAll_Generic,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Locate,GenericLocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\GenericLocateAllTests.cs,LocateAll_Generic,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Locate,GenericLocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\GenericLocateAllTests.cs,LocateAll_Generic,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Locate,GenericLocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\GenericLocateAllTests.cs,LocateAll_Generic_Filter,The following statement contains a magic number: Assert.Equal(3' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Locate,GenericLocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\GenericLocateAllTests.cs,LocateAll_Generic_Filter,The following statement contains a magic number: Assert.IsType<SimpleObjectE>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Locate,LocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\LocateAllTests.cs,LocateAll_Basic_Tests,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Locate,LocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\LocateAllTests.cs,LocateAll_Basic_Tests,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Locate,LocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\LocateAllTests.cs,LocateAll_Basic_Tests,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Locate,LocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\LocateAllTests.cs,LocateAll_Basic_Tests,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Locate,LocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\LocateAllTests.cs,LocateAll_Filter,The following statement contains a magic number: Assert.Equal(3' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Locate,LocateAllTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Locate\LocateAllTests.cs,LocateAll_Filter,The following statement contains a magic number: Assert.IsType<SimpleObjectE>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.MemberInjection,MethodInjectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\MemberInjection\MethodInjectionTests.cs,MethodInjection_Inject_Int_To_Method,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInstance(5).AsKeyed<int>("value");                  c.Export<ImportIntMethodClass>().ImportMethod(m => m.SetValue(Arg.Any<int>()));              });
Magic Number,Grace.Tests.DependencyInjection.MemberInjection,MethodInjectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\MemberInjection\MethodInjectionTests.cs,MethodInjection_Inject_Int_To_Method,The following statement contains a magic number: Assert.Equal(5' instance.Value);
Magic Number,Grace.Tests.DependencyInjection.MemberInjection,MethodInjectionSpecifyParameterInfoSelector,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\MemberInjection\MethodInjectionTests.cs,GetMethods,The following statement contains a magic number: var methods = new MethodInjectionInfo[2];
Magic Number,Grace.Tests.DependencyInjection.MemberInjection,PropertyInjectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\MemberInjection\PropertyInjectionTests.cs,PropertyInjection_ImportMember_With_Members_HaveAttribute_Filter_With_Filter,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<BasicService>().As<IBasicService>();                  c.Export<MultipleService1>().As<IMultipleService>();                  c.Export<MultiplePropertyInject>().ImportMembers(MembersThat.HaveAttribute<SomeTestAttribute>(attribute => attribute.TestValue == 10));              });
Magic Number,Grace.Tests.DependencyInjection.MemberInjection,PropertyInjectionTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\MemberInjection\PropertyInjectionTests.cs,PropertyInjection_ImportMember_Inheriting,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<BasicService>().As<IBasicService>();                  c.Export<MultipleService1>().As<IMultipleService>();                  c.Export<InheritingClass>().ImportMembers(MembersThat.HaveAttribute<SomeTestAttribute>(attribute => attribute.TestValue == 10));              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.Equal(5' multipleServices.Length);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.Equal(2' multipleServices[1].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.Equal(3' multipleServices[2].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.Equal(3' multipleServices[2].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(multipleServices[2].Value);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.Equal(4' multipleServices[3].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.Equal(4' multipleServices[3].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(multipleServices[3].Value);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.Equal(5' multipleServices[4].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.Equal(5' multipleServices[4].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(multipleServices[4].Value);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.Equal(5' multipleServices.Length);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.Equal(2' multipleServices[1].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.Equal(3' multipleServices[2].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.Equal(3' multipleServices[2].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.IsType<MultipleService3>(multipleServices[2].Value);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.Equal(4' multipleServices[3].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.Equal(4' multipleServices[3].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.IsType<MultipleService4>(multipleServices[3].Value);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.Equal(5' multipleServices[4].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.Equal(5' multipleServices[4].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Metadata,MetadataTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Metadata\MetadataTests.cs,Meta_Enumerable_Dependent,The following statement contains a magic number: Assert.IsType<MultipleService5>(multipleServices[4].Value);
Magic Number,Grace.Tests.DependencyInjection.Named,NamedScopedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Named\NamedScopedTests.cs,Scoped_LocateAllByName,The following statement contains a magic number: Assert.Equal(5' services.Count);
Magic Number,Grace.Tests.DependencyInjection.Named,NamedScopedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Named\NamedScopedTests.cs,Scoped_LocateAllByName,The following statement contains a magic number: Assert.IsType<MultipleService3>(services[2]);
Magic Number,Grace.Tests.DependencyInjection.Named,NamedScopedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Named\NamedScopedTests.cs,Scoped_LocateAllByName,The following statement contains a magic number: Assert.IsType<MultipleService4>(services[3]);
Magic Number,Grace.Tests.DependencyInjection.Named,NamedScopedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Named\NamedScopedTests.cs,Scoped_LocateAllByName,The following statement contains a magic number: Assert.IsType<MultipleService5>(services[4]);
Magic Number,Grace.Tests.DependencyInjection.Named,NamedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Named\NamedTests.cs,LocateAllByName,The following statement contains a magic number: Assert.Equal(5' services.Count);
Magic Number,Grace.Tests.DependencyInjection.Named,NamedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Named\NamedTests.cs,LocateAllByName,The following statement contains a magic number: Assert.IsType<MultipleService3>(services[2]);
Magic Number,Grace.Tests.DependencyInjection.Named,NamedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Named\NamedTests.cs,LocateAllByName,The following statement contains a magic number: Assert.IsType<MultipleService4>(services[3]);
Magic Number,Grace.Tests.DependencyInjection.Named,NamedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Named\NamedTests.cs,LocateAllByName,The following statement contains a magic number: Assert.IsType<MultipleService5>(services[4]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ClearExportsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ClearExportsTests.cs,ClearExport_Filtered,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);                    c.ClearExports(export => export.Metadata.MetadataMatches("Key"' 3));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,ClearExportsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ClearExportsTests.cs,ClearExport_Filtered,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);                    c.ClearExports(export => export.Metadata.MetadataMatches("Key"' 3));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,ClearExportsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ClearExportsTests.cs,ClearExport_Filtered,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);                    c.ClearExports(export => export.Metadata.MetadataMatches("Key"' 3));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,ClearExportsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ClearExportsTests.cs,ClearExport_Filtered,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);                    c.ClearExports(export => export.Metadata.MetadataMatches("Key"' 3));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,ClearExportsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ClearExportsTests.cs,ClearExport_Filtered,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Key"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Key"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Key"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Key"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Key"' 5);                    c.ClearExports(export => export.Metadata.MetadataMatches("Key"' 3));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,ClearExportsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ClearExportsTests.cs,ClearExport_Filtered,The following statement contains a magic number: Assert.Equal(4' services.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,ClearExportsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ClearExportsTests.cs,ClearExport_Filtered,The following statement contains a magic number: Assert.IsType<MultipleService4>(services[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ClearExportsTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ClearExportsTests.cs,ClearExport_Filtered,The following statement contains a magic number: Assert.IsType<MultipleService5>(services[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportRegistrationBlockTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportRegistrationBlockTests.cs,ExportRegistrionBlock_ExportAsKeyed,The following statement contains a magic number: container.Configure(c => c.ExportAsKeyed<BasicService'IBasicService>(5));
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportRegistrationBlockTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportRegistrationBlockTests.cs,ExportRegistrionBlock_ExportAsKeyed,The following statement contains a magic number: var service = container.Locate<IBasicService>(withKey: 5);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterface,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterface,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterface,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterface,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterfaces,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterfaces,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterfaces,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterfaces,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterfaces_Filtered,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterfaces_Filtered,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterfaces_Filtered,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_ByInterfaces_Filtered,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_Exclude,The following statement contains a magic number: Assert.Equal(4' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_Exclude,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_Exclude,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_WithInspector,The following statement contains a magic number: var instance = container.Locate<IPropertyInjectionService>(new { Count = 5 });
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_Commands,The following statement contains a magic number: Assert.Equal(6' exports.Count);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_UsingLifestyle,The following statement contains a magic number: Assert.Equal(2' instances.Count);
Magic Number,Grace.Tests.DependencyInjection.Registration,ExportTypeSetTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ExportTypeSetTests.cs,ExportTypeSet_UsingLifestyle,The following statement contains a magic number: Assert.Equal(2' instances2.Count);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationTests.cs,ImportAttribute_Honored_On_Constructor,The following statement contains a magic number: var container = new DependencyInjectionContainer              {                  _ =>                  {                      _.ExportFactory(() => new BasicService {Count = 10}).AsKeyed<IBasicService>("A");                      _.ExportFactory(() => new BasicService {Count = 5}).AsKeyed<IBasicService>("B");                  }              };
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationTests.cs,ImportAttribute_Honored_On_Constructor,The following statement contains a magic number: var container = new DependencyInjectionContainer              {                  _ =>                  {                      _.ExportFactory(() => new BasicService {Count = 10}).AsKeyed<IBasicService>("A");                      _.ExportFactory(() => new BasicService {Count = 5}).AsKeyed<IBasicService>("B");                  }              };
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationTests.cs,ImportAttribute_Honored_On_Constructor,The following statement contains a magic number: Assert.Equal(10' classA.BasicService.Count);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentExportStrategyConfigurationTests.cs,ImportAttribute_Honored_On_Constructor,The following statement contains a magic number: Assert.Equal(5' classB.BasicService.Count);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentImportPropertyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentImportPropertyConfigurationTests.cs,FluentImportPropertyConfiguration_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<ImportPropertyClass<IMultipleService>>()                      .ImportProperty(p => p.ImportProperty).LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentImportPropertyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentImportPropertyConfigurationTests.cs,FluentImportPropertyConfiguration_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<ImportPropertyClass<IMultipleService>>()                      .ImportProperty(p => p.ImportProperty).LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentImportPropertyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentImportPropertyConfigurationTests.cs,FluentImportPropertyConfiguration_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<ImportPropertyClass<IMultipleService>>()                      .ImportProperty(p => p.ImportProperty).LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentImportPropertyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentImportPropertyConfigurationTests.cs,FluentImportPropertyConfiguration_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<ImportPropertyClass<IMultipleService>>()                      .ImportProperty(p => p.ImportProperty).LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentImportPropertyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentImportPropertyConfigurationTests.cs,FluentImportPropertyConfiguration_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<ImportPropertyClass<IMultipleService>>()                      .ImportProperty(p => p.ImportProperty).LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_SortBy,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService1 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService5 { Count = 1 }).As<IMultipleService>();                    c.Export<DependentService<IEnumerable<IMultipleService>>>()                      .WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>()                      .Named("value")                      .SortBy(new GenericComparer<IMultipleService>(m => m.Count));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_SortBy,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService1 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService5 { Count = 1 }).As<IMultipleService>();                    c.Export<DependentService<IEnumerable<IMultipleService>>>()                      .WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>()                      .Named("value")                      .SortBy(new GenericComparer<IMultipleService>(m => m.Count));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_SortBy,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService1 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService5 { Count = 1 }).As<IMultipleService>();                    c.Export<DependentService<IEnumerable<IMultipleService>>>()                      .WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>()                      .Named("value")                      .SortBy(new GenericComparer<IMultipleService>(m => m.Count));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_SortBy,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportFactory(() => new MultipleService1 { Count = 5 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService2 { Count = 4 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService3 { Count = 3 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService4 { Count = 2 }).As<IMultipleService>();                  c.ExportFactory(() => new MultipleService5 { Count = 1 }).As<IMultipleService>();                    c.Export<DependentService<IEnumerable<IMultipleService>>>()                      .WithCtorCollectionParam<IEnumerable<IMultipleService>' IMultipleService>()                      .Named("value")                      .SortBy(new GenericComparer<IMultipleService>(m => m.Count));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_SortBy,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_SortBy,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_SortBy,The following statement contains a magic number: Assert.IsType<MultipleService2>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_SortBy,The following statement contains a magic number: Assert.IsType<MultipleService1>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_Filter,The following statement contains a magic number: Assert.Equal(4' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_Filter,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorCollectionConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorCollectionConfigurationTests.cs,FluentWithCtorCollectionConfiguration_Filter,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_DefaultValue_Func,The following statement contains a magic number: Assert.Equal(2' instance2.Value.Count);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_DefaultValue_Func_Multi_Arg,The following statement contains a magic number: Assert.Equal(2' instance2.Value.Count);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<DependentService<IMultipleService>>().As<IDependentService<IMultipleService>>()                      .WithCtorParam<IMultipleService>().LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<DependentService<IMultipleService>>().As<IDependentService<IMultipleService>>()                      .WithCtorParam<IMultipleService>().LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<DependentService<IMultipleService>>().As<IDependentService<IMultipleService>>()                      .WithCtorParam<IMultipleService>().LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<DependentService<IMultipleService>>().As<IDependentService<IMultipleService>>()                      .WithCtorParam<IMultipleService>().LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_LocateKey,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(1);                  c.Export<MultipleService2>().AsKeyed<IMultipleService>(2);                  c.Export<MultipleService3>().AsKeyed<IMultipleService>(3);                  c.Export<MultipleService4>().AsKeyed<IMultipleService>(4);                  c.Export<MultipleService5>().AsKeyed<IMultipleService>(5);                  c.Export<DependentService<IMultipleService>>().As<IDependentService<IMultipleService>>()                      .WithCtorParam<IMultipleService>().LocateWithKey(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_Consider_IEnumerable,The following statement contains a magic number: Assert.Equal(4' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_Consider_IEnumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,FluentWithCtorConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\FluentWithCtorConfigurationTests.cs,FluentWithCtorConfiguration_Generic_Consider_IEnumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,IsExportedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\IsExportedTests.cs,IsExported_Keyed,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(5);                    Assert.False(c.IsExported(typeof(IBasicService)));                  Assert.False(c.IsExported(typeof(IMultipleService)));                  Assert.True(c.IsExported(typeof(IMultipleService)' 5));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,IsExportedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\IsExportedTests.cs,IsExported_Keyed,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().AsKeyed<IMultipleService>(5);                    Assert.False(c.IsExported(typeof(IBasicService)));                  Assert.False(c.IsExported(typeof(IMultipleService)));                  Assert.True(c.IsExported(typeof(IMultipleService)' 5));              });
Magic Number,Grace.Tests.DependencyInjection.Registration,OnlyIfExportTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\OnlyIfExportTests.cs,ExportFactory_IfNotRegistered_Pass,The following statement contains a magic number: Assert.Equal(2' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,OnlyIfExportTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\OnlyIfExportTests.cs,Export_IfNotRegistered_Pass,The following statement contains a magic number: Assert.Equal(2' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,OnlyIfExportTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\OnlyIfExportTests.cs,ExportNonGeneric_IfNotRegistered_Pass,The following statement contains a magic number: Assert.Equal(2' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam,The following statement contains a magic number: Func<int> func = () => 5;
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam_Multi_1_Arg,The following statement contains a magic number: Func<IExportLocatorScope' int> func = (scope) => 5;
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam_Multi_2_Arg,The following statement contains a magic number: Func<IExportLocatorScope' StaticInjectionContext' int> func = (scope' staticContext) => 5;
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam_Multi_3_Arg,The following statement contains a magic number: Func<IExportLocatorScope'StaticInjectionContext'IInjectionContext' int> func = (scope'staticContext'context) => 5;
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam_Multi_4_Arg,The following statement contains a magic number: Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext'IBasicService' int> func = (scope' staticContext' context' basic) => 5;
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam_Multi_5_Arg,The following statement contains a magic number: Func<IExportLocatorScope' StaticInjectionContext' IInjectionContext'IBasicService'IMultipleService' int> func = (scope' staticContext' context' basic' multiple) => 5;
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithMetadata,The following statement contains a magic number: configuration.WithMetadata(5' 10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithMetadata,The following statement contains a magic number: configuration.WithMetadata(5' 10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithMetadata,The following statement contains a magic number: strategyConfiguration.Received().WithMetadata(5' 10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithMetadata,The following statement contains a magic number: strategyConfiguration.Received().WithMetadata(5' 10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithPriority,The following statement contains a magic number: configuration.WithPriority(10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationGenericTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationGenericTests.cs,ProxyFluentExportStrategyConfiguration_WithPriority,The following statement contains a magic number: strategyConfiguration.Received().WithPriority(10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationTests.cs,ProxyFluentExportStrategyConfiguration_WithCtorParam,The following statement contains a magic number: Func<int> func = () => 5;
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationTests.cs,ProxyFluentExportStrategyConfiguration_WithMetadata,The following statement contains a magic number: configuration.WithMetadata(5'10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationTests.cs,ProxyFluentExportStrategyConfiguration_WithMetadata,The following statement contains a magic number: configuration.WithMetadata(5'10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationTests.cs,ProxyFluentExportStrategyConfiguration_WithMetadata,The following statement contains a magic number: strategyConfiguration.Received().WithMetadata(5'10);
Magic Number,Grace.Tests.DependencyInjection.Registration,ProxyFluentExportStrategyConfigurationTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\ProxyFluentExportStrategyConfigurationTests.cs,ProxyFluentExportStrategyConfiguration_WithMetadata,The following statement contains a magic number: strategyConfiguration.Received().WithMetadata(5'10);
Magic Number,Grace.Tests.DependencyInjection.Registration,RegistrationPriorityTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\RegistrationPriorityTests.cs,Priority_Registration,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<SimpleObjectA>().As<ISimpleObject>().WithPriority(1);                  c.Export<SimpleObjectB>().As<ISimpleObject>().WithPriority(2);                  c.Export<SimpleObjectC>().As<ISimpleObject>().WithPriority(5);                  c.Export<SimpleObjectD>().As<ISimpleObject>().WithPriority(4);                  c.Export<SimpleObjectE>().As<ISimpleObject>().WithPriority(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,RegistrationPriorityTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\RegistrationPriorityTests.cs,Priority_Registration,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<SimpleObjectA>().As<ISimpleObject>().WithPriority(1);                  c.Export<SimpleObjectB>().As<ISimpleObject>().WithPriority(2);                  c.Export<SimpleObjectC>().As<ISimpleObject>().WithPriority(5);                  c.Export<SimpleObjectD>().As<ISimpleObject>().WithPriority(4);                  c.Export<SimpleObjectE>().As<ISimpleObject>().WithPriority(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,RegistrationPriorityTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\RegistrationPriorityTests.cs,Priority_Registration,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<SimpleObjectA>().As<ISimpleObject>().WithPriority(1);                  c.Export<SimpleObjectB>().As<ISimpleObject>().WithPriority(2);                  c.Export<SimpleObjectC>().As<ISimpleObject>().WithPriority(5);                  c.Export<SimpleObjectD>().As<ISimpleObject>().WithPriority(4);                  c.Export<SimpleObjectE>().As<ISimpleObject>().WithPriority(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,RegistrationPriorityTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\RegistrationPriorityTests.cs,Priority_Registration,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<SimpleObjectA>().As<ISimpleObject>().WithPriority(1);                  c.Export<SimpleObjectB>().As<ISimpleObject>().WithPriority(2);                  c.Export<SimpleObjectC>().As<ISimpleObject>().WithPriority(5);                  c.Export<SimpleObjectD>().As<ISimpleObject>().WithPriority(4);                  c.Export<SimpleObjectE>().As<ISimpleObject>().WithPriority(3);              });
Magic Number,Grace.Tests.DependencyInjection.Registration,RegistrationPriorityTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\RegistrationPriorityTests.cs,Priority_Registration,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Registration,RegistrationPriorityTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\RegistrationPriorityTests.cs,Priority_Registration,The following statement contains a magic number: Assert.IsType<SimpleObjectE>(array[2]);
Magic Number,Grace.Tests.DependencyInjection.Registration,RegistrationPriorityTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\RegistrationPriorityTests.cs,Priority_Registration,The following statement contains a magic number: Assert.IsType<SimpleObjectB>(array[3]);
Magic Number,Grace.Tests.DependencyInjection.Registration,RegistrationPriorityTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\RegistrationPriorityTests.cs,Priority_Registration,The following statement contains a magic number: Assert.IsType<SimpleObjectA>(array[4]);
Magic Number,Grace.Tests.DependencyInjection.Registration,TypesThatTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\TypesThatTests.cs,HaveAttributeTypeFiltered,The following statement contains a magic number: Func<Type' bool> haveFilter = TypesThat.HaveAttribute(typeof(SomeTestAttribute)'                  x => ((SomeTestAttribute) x).TestValue == 5);
Magic Number,Grace.Tests.DependencyInjection.Registration,TypesThatTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\TypesThatTests.cs,HaveAttributeGenericFiltered,The following statement contains a magic number: Func<Type' bool> haveFilter = TypesThat.HaveAttribute<SomeTestAttribute>(x => x.TestValue == 5);
Magic Number,Grace.Tests.DependencyInjection.Registration,TypesThatTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\TypesThatTests.cs,ComplexHaveAttribute,The following statement contains a magic number: Assert.Equal(3' simpleObjects.Count());
Magic Number,Grace.Tests.DependencyInjection.Registration,TypesThatTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\TypesThatTests.cs,ComplexHaveAttributeFiltered,The following statement contains a magic number: container.Configure(c => c.Export(typeof(TypesThatTests).GetTypeInfo().Assembly.ExportedTypes).                  ByInterface(typeof(IAttributedSimpleObject)).                  Where(TypesThat.HaveAttribute<SomeTestAttribute>(x => x.TestValue == 5)));
Magic Number,Grace.Tests.DependencyInjection.Registration,TypesThatTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Registration\TypesThatTests.cs,ComplexHaveAttributeNonGeneric,The following statement contains a magic number: Assert.Equal(3' simpleObjects.Count());
Magic Number,Grace.Tests.DependencyInjection.Wrappers,AsyncLazyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\AsyncLazyTests.cs,AsyncLazy_Resolve,The following statement contains a magic number: task.Wait(10000);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelayedResolveClass,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\AsyncLazyTests.cs,DelayedResolveClass,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,CompiledWrapperStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\CompiledWrapperStrategyTests.cs,ExportWrapper_Non_Generic_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,CompiledWrapperStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\CompiledWrapperStrategyTests.cs,ExportWrapper_Non_Generic_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2].MultipleService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,CompiledWrapperStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\CompiledWrapperStrategyTests.cs,ExportWrapper_Non_Generic_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3].MultipleService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,CompiledWrapperStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\CompiledWrapperStrategyTests.cs,ExportWrapper_Non_Generic_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4].MultipleService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,CompiledWrapperStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\CompiledWrapperStrategyTests.cs,ExportWrapper_Generic_Enumerable,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,CompiledWrapperStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\CompiledWrapperStrategyTests.cs,ExportWrapper_Generic_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,CompiledWrapperStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\CompiledWrapperStrategyTests.cs,ExportWrapper_Generic_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,CompiledWrapperStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\CompiledWrapperStrategyTests.cs,ExportWrapper_Generic_Enumerable,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.Equal(5' instances.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectC>(instances[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectD>(instances[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectE>(instances[4]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Meta_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.Equal(5' instances.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Meta_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectC>(instances[2].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Meta_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.Equal('C'' instances[2].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Meta_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectD>(instances[3].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Meta_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.Equal('D'' instances[3].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Meta_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectE>(instances[4].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ComplexWrapperScenarioTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ComplexWrapperScenarioTests.cs,Func_Wrapped_Enumerable_Meta_Dependency_Returns_Correct_Instances,The following statement contains a magic number: Assert.Equal('E'' instances[4].Metadata["Key"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryTwoArgWithBasicTest,The following statement contains a magic number: Assert.Equal(2' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryTwoArgWithoutBasicTest,The following statement contains a magic number: Assert.Equal(2' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithBasicServiceTest,The following statement contains a magic number: var instance = factory("Blah"' 5' basicService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithBasicServiceTest,The following statement contains a magic number: Assert.Equal(3' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithBasicServiceTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithBasicServiceTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithOutBasicServiceTest,The following statement contains a magic number: var instance = factory("Blah"' 5);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithOutBasicServiceTest,The following statement contains a magic number: Assert.Equal(3' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithOutBasicServiceTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithOutBasicServiceTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithOutBasicServiceOutOfOrderTest,The following statement contains a magic number: var instance = factory(5' "Blah");
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithOutBasicServiceOutOfOrderTest,The following statement contains a magic number: Assert.Equal(3' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithOutBasicServiceOutOfOrderTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryThreeWithOutBasicServiceOutOfOrderTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0' basicService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0' basicService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithBasicTest,The following statement contains a magic number: Assert.Equal(4' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithBasicTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithBasicTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithBasicTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithBasicTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicTest,The following statement contains a magic number: Assert.Equal(4' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicAndOutOfOrderTest,The following statement contains a magic number: var instance = factory(9.0' 5' "Blah");
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicAndOutOfOrderTest,The following statement contains a magic number: var instance = factory(9.0' 5' "Blah");
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(4' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFourArgWithoutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0' 14.0m' basicService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0' 14.0m' basicService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0' 14.0m' basicService);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: Assert.Equal(14.0m' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: Assert.Equal(14.0m' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithBasicTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[4]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0' 14.0m);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0' 14.0m);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: var instance = factory("Blah"' 5' 9.0' 14.0m);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: Assert.Equal(14.0m' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: Assert.Equal(14.0m' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[4]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: var instance = factory(14.0m' "Blah"' 9.0' 5);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: var instance = factory(14.0m' "Blah"' 9.0' 5);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: var instance = factory(14.0m' "Blah"' 9.0' 5);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(5' instance.Parameters[1]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(9.0' instance.Parameters[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(14.0m' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(14.0m' instance.Parameters[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateFactoryTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateFactoryTests.cs,FactoryFiveArgWithOutBasicAndOutOfOrderTest,The following statement contains a magic number: Assert.Equal(basicService' instance.Parameters[4]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateOneArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateOneArgWrapperTests.cs,DelegateOneArg_Create_Instance,The following statement contains a magic number: var twoService = instance.CreateWithT2(5);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,DelegateOneArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\DelegateOneArgWrapperTests.cs,DelegateOneArg_Create_Instance,The following statement contains a magic number: Assert.Equal(5' twoService.Dependency2);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFiveArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFiveArgWrapperTests.cs,FuncFiveArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10' "hello"' true' 3);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFiveArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFiveArgWrapperTests.cs,FuncFiveArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10' "hello"' true' 3);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFiveArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFiveArgWrapperTests.cs,FuncFiveArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10' "hello"' true' 3);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFiveArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFiveArgWrapperTests.cs,FuncFiveArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(5' instance.Dependency1);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFiveArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFiveArgWrapperTests.cs,FuncFiveArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(10' instance.Dependency2);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFiveArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFiveArgWrapperTests.cs,FuncFiveArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(3' instance.Dependency5);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFourArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFourArgWrapperTests.cs,FuncFourArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10' "hello"' true);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFourArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFourArgWrapperTests.cs,FuncFourArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10' "hello"' true);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFourArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFourArgWrapperTests.cs,FuncFourArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(5' instance.Dependency1);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncFourArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncFourArgWrapperTests.cs,FuncFourArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(10' instance.Dependency2);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncOneArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncOneArgWrapperTests.cs,FuncArg_Test,The following statement contains a magic number: var value1 = valueFunc[0](5);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncOneArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncOneArgWrapperTests.cs,FuncArg_Test,The following statement contains a magic number: var value2 = valueFunc[1](10);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncOneArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncOneArgWrapperTests.cs,FuncOneArg_Create_Instance,The following statement contains a magic number: var twoService = instance.CreateWithT2(5);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncOneArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncOneArgWrapperTests.cs,FuncOneArg_Create_Instance,The following statement contains a magic number: Assert.Equal(5' twoService.Dependency2);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncThreeArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncThreeArgWrappertests.cs,FuncThreeArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10' "hello");
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncThreeArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncThreeArgWrappertests.cs,FuncThreeArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10' "hello");
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncThreeArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncThreeArgWrappertests.cs,FuncThreeArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(5' instance.Dependency1);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncThreeArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncThreeArgWrappertests.cs,FuncThreeArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(10' instance.Dependency2);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncTwoArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncTwoArgWrapperTests.cs,FuncTwoArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncTwoArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncTwoArgWrapperTests.cs,FuncTwoArg_Locate_Instance,The following statement contains a magic number: var instance = func(5' 10);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncTwoArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncTwoArgWrapperTests.cs,FuncTwoArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(5' instance.Dependency1);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncTwoArgWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncTwoArgWrapperTests.cs,FuncTwoArg_Locate_Instance,The following statement contains a magic number: Assert.Equal(10' instance.Dependency2);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncWrapperTests.cs,Enumerable_Wrapped_Func_Returns_Correct_Instances,The following statement contains a magic number: Assert.Equal(5' instances.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncWrapperTests.cs,Enumerable_Wrapped_Func_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectC>(instances[2]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncWrapperTests.cs,Enumerable_Wrapped_Func_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectD>(instances[3]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,FuncWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\FuncWrapperTests.cs,Enumerable_Wrapped_Func_Returns_Correct_Instances,The following statement contains a magic number: Assert.IsType<SimpleObjectE>(instances[4]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Name"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Name"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Name"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Name"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Name"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Name"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Name"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Name"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Name"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Name"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Name"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Name"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Name"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Name"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Name"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("Name"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("Name"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("Name"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("Name"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("Name"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.Equal(2' array[1].Metadata["Name"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.Equal(3' array[2].Metadata["Name"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.Equal(3' array[2].Metadata["Name"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.Equal(4' array[3].Metadata["Name"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.Equal(4' array[3].Metadata["Name"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.Equal(5' array[4].Metadata["Name"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.Equal(5' array[4].Metadata["Name"]);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_Test,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("IntValue"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("IntValue"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("IntValue"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("IntValue"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("IntValue"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("IntValue"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("IntValue"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("IntValue"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("IntValue"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("IntValue"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("IntValue"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("IntValue"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("IntValue"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("IntValue"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("IntValue"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("IntValue"' 1);                  c.Export<MultipleService2>().As<IMultipleService>().WithMetadata("IntValue"' 2);                  c.Export<MultipleService3>().As<IMultipleService>().WithMetadata("IntValue"' 3);                  c.Export<MultipleService4>().As<IMultipleService>().WithMetadata("IntValue"' 4);                  c.Export<MultipleService5>().As<IMultipleService>().WithMetadata("IntValue"' 5);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.Equal(2' array[1].Metadata.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.Equal(3' array[2].Metadata.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.Equal(3' array[2].Metadata.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.Equal(4' array[3].Metadata.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.Equal(4' array[3].Metadata.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.Equal(5' array[4].Metadata.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.Equal(5' array[4].Metadata.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped_ReadonlyMetadata,The following statement contains a magic number: container.Configure(c => c.Export<MultipleService1>().As<IMultipleService>().WithMetadata("IntValue"' 10));
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyMetadataWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyMetadataWrapperTests.cs,LazyMetadata_StronglyTyped_ReadonlyMetadata,The following statement contains a magic number: Assert.Equal(10' instance.Metadata.IntValue);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyWrapperTests.cs,Lazy_Array,The following statement contains a magic number: Assert.Equal(5' array.Length);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyWrapperTests.cs,Lazy_Array,The following statement contains a magic number: Assert.IsType<MultipleService3>(array[2].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyWrapperTests.cs,Lazy_Array,The following statement contains a magic number: Assert.IsType<MultipleService4>(array[3].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,LazyWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\LazyWrapperTests.cs,Lazy_Array,The following statement contains a magic number: Assert.IsType<MultipleService5>(array[4].Value);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,MetaTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\MetaTests.cs,Meta_Strongly_Typed,The following statement contains a magic number: container.Configure(c =>              {                  c.Export<BasicService>().As<IBasicService>().WithMetadata("IntProp"' 10);              });
Magic Number,Grace.Tests.DependencyInjection.Wrappers,MetaTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\MetaTests.cs,Meta_Strongly_Typed,The following statement contains a magic number: Assert.Equal(10' instance.Metadata.IntProp);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,OwnedTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\OwnedTests.cs,OwnedFuncLocate_ScopesDisposalCorrectly,The following statement contains a magic number: Assert.Equal(2' disposalCount);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ScopedWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ScopedWrapperTests.cs,Scoped_Complex_Wrapper,The following statement contains a magic number: Assert.Equal(3' instanceList.Count);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ScopedWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ScopedWrapperTests.cs,Scoped_Complex_Wrapper,The following statement contains a magic number: instance = func(2);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ScopedWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ScopedWrapperTests.cs,Scoped_Complex_Wrapper,The following statement contains a magic number: Assert.Equal(2' instance.Count);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ScopedWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ScopedWrapperTests.cs,Scoped_Complex_Wrapper,The following statement contains a magic number: meta = instanceList[2];
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ScopedWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ScopedWrapperTests.cs,Scoped_Complex_Wrapper,The following statement contains a magic number: instance = func(3);
Magic Number,Grace.Tests.DependencyInjection.Wrappers,ScopedWrapperTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Wrappers\ScopedWrapperTests.cs,Scoped_Complex_Wrapper,The following statement contains a magic number: Assert.Equal(3' instance.Count);
Magic Number,Grace.Tests.Diagnostics,ActivationStrategyCollectionContainerDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ActivationStrategyCollectionContainerDebuggerViewTests.cs,ActivationStrategyCollectionContainerDebuggerView_Types,The following statement contains a magic number: Assert.Equal(2' debugger.StrategiesByType.Length);
Magic Number,Grace.Tests.Diagnostics,CollectionDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\CollectionDebuggerViewTests.cs,CollectionDebuggerView_Items,The following statement contains a magic number: var debugger = new CollectionDebuggerView<int>(new[] { 1' 2' 3 });
Magic Number,Grace.Tests.Diagnostics,CollectionDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\CollectionDebuggerViewTests.cs,CollectionDebuggerView_Items,The following statement contains a magic number: var debugger = new CollectionDebuggerView<int>(new[] { 1' 2' 3 });
Magic Number,Grace.Tests.Diagnostics,CollectionDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\CollectionDebuggerViewTests.cs,CollectionDebuggerView_Items,The following statement contains a magic number: Assert.Equal(3' array.Length);
Magic Number,Grace.Tests.Diagnostics,CollectionDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\CollectionDebuggerViewTests.cs,CollectionDebuggerView_Items,The following statement contains a magic number: Assert.Equal(2' array[1]);
Magic Number,Grace.Tests.Diagnostics,CollectionDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\CollectionDebuggerViewTests.cs,CollectionDebuggerView_Items,The following statement contains a magic number: Assert.Equal(3' array[2]);
Magic Number,Grace.Tests.Diagnostics,CollectionDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\CollectionDebuggerViewTests.cs,CollectionDebuggerView_Items,The following statement contains a magic number: Assert.Equal(3' array[2]);
Magic Number,Grace.Tests.Diagnostics,CollectionDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\CollectionDebuggerViewTests.cs,CollectionDebuggerView_DebuggerDisplayValue,The following statement contains a magic number: var debugger = new CollectionDebuggerView<int>(new[] { 1' 2' 3 });
Magic Number,Grace.Tests.Diagnostics,CollectionDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\CollectionDebuggerViewTests.cs,CollectionDebuggerView_DebuggerDisplayValue,The following statement contains a magic number: var debugger = new CollectionDebuggerView<int>(new[] { 1' 2' 3 });
Magic Number,Grace.Tests.Diagnostics,ConfigurableActivationStrategyDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ConfigurableActivationStrategyDebuggerViewTests.cs,ConfigurableActivationStrategyDebuggerView_Priority,The following statement contains a magic number: strategy.Priority.Returns(10);
Magic Number,Grace.Tests.Diagnostics,ConfigurableActivationStrategyDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ConfigurableActivationStrategyDebuggerViewTests.cs,ConfigurableActivationStrategyDebuggerView_Priority,The following statement contains a magic number: Assert.Equal(10' debuggerView.Priority);
Magic Number,Grace.Tests.Diagnostics,ConfigurableActivationStrategyDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ConfigurableActivationStrategyDebuggerViewTests.cs,ConfigurableActivationStrategyDebuggerView_ExportAs,The following statement contains a magic number: Assert.Equal(2' exports.Length);
Magic Number,Grace.Tests.Diagnostics,ConfigurableActivationStrategyDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ConfigurableActivationStrategyDebuggerViewTests.cs,ConfigurableActivationStrategyDebuggerView_ExportAsKeyed,The following statement contains a magic number: Assert.Equal(2' exports.Length);
Magic Number,Grace.Tests.Diagnostics,ExtraDataContainerDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ExtraDataContainerDebuggerViewTests.cs,ExtraDataContainerDebuggerView_Items,The following statement contains a magic number: extraDataContainer.KeyValuePairs.Returns(new[]              {                  new KeyValuePair<object' object>(2' "World")'                  new KeyValuePair<object' object>(1' "Hello")'              });
Magic Number,Grace.Tests.Diagnostics,ExtraDataContainerDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ExtraDataContainerDebuggerViewTests.cs,ExtraDataContainerDebuggerView_Items,The following statement contains a magic number: Assert.Equal(2' array.Length);
Magic Number,Grace.Tests.Diagnostics,ExtraDataContainerDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ExtraDataContainerDebuggerViewTests.cs,ExtraDataContainerDebuggerView_DisplayValue,The following statement contains a magic number: extraDataContainer.KeyValuePairs.Returns(new[]              {                  new KeyValuePair<object' object>(2' "World")'                  new KeyValuePair<object' object>(1' "Hello")'              });
Magic Number,Grace.Tests.Diagnostics,ImmutableHashTreeDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ImmutableHashTreeDebuggerViewTests.cs,ImmutableHashTreeDebuggerView_Keys_And_Values,The following statement contains a magic number: var tree = ImmutableHashTree<int' string>.Empty.Add(5' "Hello");
Magic Number,Grace.Tests.Diagnostics,ImmutableHashTreeDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ImmutableHashTreeDebuggerViewTests.cs,ImmutableHashTreeDebuggerView_Keys_And_Values,The following statement contains a magic number: Assert.Equal(5' keys[0]);
Magic Number,Grace.Tests.Diagnostics,ImmutableHashTreeDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ImmutableHashTreeDebuggerViewTests.cs,ImmutableHashTreeDebuggerView_Items,The following statement contains a magic number: var tree = ImmutableHashTree<int' string>.Empty.Add(5' "Hello");
Magic Number,Grace.Tests.Diagnostics,ImmutableHashTreeDebuggerViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ImmutableHashTreeDebuggerViewTests.cs,ImmutableHashTreeDebuggerView_Items,The following statement contains a magic number: Assert.Equal(5' items[0].Key);
Magic Number,Grace.Tests.Diagnostics,ImmutableLinkedListDebugViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ImmutableLinkedListDebugViewTests.cs,ImmutableLinkedListDebugView_Test,The following statement contains a magic number: var debugger = new ImmutableLinkedListDebugView<int>(ImmutableLinkedList<int>.Empty.Add(5));
Magic Number,Grace.Tests.Diagnostics,ImmutableLinkedListDebugViewTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Diagnostics\ImmutableLinkedListDebugViewTests.cs,ImmutableLinkedListDebugView_Test,The following statement contains a magic number: Assert.Equal(5' debugger.Items[0]);
Magic Number,Grace.Tests.Dynamic,DynamicConstantTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,DynamicMethod_Primary_Constant_Test,The following statement contains a magic number: container.Configure(c => c.Export<ConstantValues>().                                          WithCtorParam(() => "StringValue").                                          WithCtorParam(() => 5).                                          WithCtorParam(()=> 10.0).                                          WithCtorParam(() => true));
Magic Number,Grace.Tests.Dynamic,DynamicConstantTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,DynamicMethod_Primary_Constant_Test,The following statement contains a magic number: container.Configure(c => c.Export<ConstantValues>().                                          WithCtorParam(() => "StringValue").                                          WithCtorParam(() => 5).                                          WithCtorParam(()=> 10.0).                                          WithCtorParam(() => true));
Magic Number,Grace.Tests.Dynamic,DynamicConstantTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,DynamicMethod_Primary_Constant_Test,The following statement contains a magic number: Assert.Equal(5' instance.IntValue);
Magic Number,Grace.Tests.Dynamic,DynamicConstantTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Dynamic\DynamicConstantTests.cs,DynamicMethod_Primary_Constant_Test,The following statement contains a magic number: Assert.Equal(10.0' instance.DoubleValue);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryWithArg,The following statement contains a magic number: var instance = factory.CreatedDependentService(15);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryWithArg,The following statement contains a magic number: Assert.Equal(15' instance.Value);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportInterfaceFactories,The following statement contains a magic number: var instance = factory.CreatedDependentService(15);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportInterfaceFactories,The following statement contains a magic number: Assert.Equal(15' instance.Value);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt,The following statement contains a magic number: var instance = factory.Create(15' 20);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt,The following statement contains a magic number: var instance = factory.Create(15' 20);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt,The following statement contains a magic number: Assert.Equal(15' instance.A);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt,The following statement contains a magic number: Assert.Equal(20' instance.B);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt_OutOfOrder,The following statement contains a magic number: var instance = factory.Create(15' 20);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt_OutOfOrder,The following statement contains a magic number: var instance = factory.Create(15' 20);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt_OutOfOrder,The following statement contains a magic number: Assert.Equal(15' instance.B);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt_OutOfOrder,The following statement contains a magic number: Assert.Equal(20' instance.A);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt_UnnamedOrdered,The following statement contains a magic number: var instance = factory.Create(15' 20);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt_UnnamedOrdered,The following statement contains a magic number: var instance = factory.Create(15' 20);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt_UnnamedOrdered,The following statement contains a magic number: Assert.Equal(15' instance.A);
Magic Number,Grace.Tests.Factory,DynamicFactoryStrategyTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicFactoryStrategyTests.cs,DynamicFactoryStrategy_ExportFactoryTwoInt_UnnamedOrdered,The following statement contains a magic number: Assert.Equal(20' instance.B);
Magic Number,Grace.Tests.Factory,DynamicTypeBuilderTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\DynamicTypeBuilderTests.cs,DynamicTypeBuilder_IntParam,The following statement contains a magic number: int value = 10;
Magic Number,Grace.Tests.Factory,Issue215Tests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\Issue215Tests.cs,Issue215Test,The following statement contains a magic number: var instance = factory.Create(1' 2' true' 3' 4' cancellationToken);
Magic Number,Grace.Tests.Factory,Issue215Tests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\Issue215Tests.cs,Issue215Test,The following statement contains a magic number: var instance = factory.Create(1' 2' true' 3' 4' cancellationToken);
Magic Number,Grace.Tests.Factory,Issue215Tests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\Issue215Tests.cs,Issue215Test,The following statement contains a magic number: var instance = factory.Create(1' 2' true' 3' 4' cancellationToken);
Magic Number,Grace.Tests.Factory,Issue215Tests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\Issue215Tests.cs,Issue215Test,The following statement contains a magic number: Assert.Equal(2' instance.EndId);
Magic Number,Grace.Tests.Factory,Issue215Tests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\Issue215Tests.cs,Issue215Test,The following statement contains a magic number: Assert.Equal(3' instance.LoadIdsLimit);
Magic Number,Grace.Tests.Factory,Issue215Tests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\Factory\Issue215Tests.cs,Issue215Test,The following statement contains a magic number: Assert.Equal(4' instance.MaxBufferSize);
Magic Number,Grace.Tests.ThridParty.Optional,OptionalTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\ThridParty\Optional\OptionalTests.cs,OptionalIntHasValueTrue,The following statement contains a magic number: container.Configure(c =>              {                  c.ExportInstance(5);                  c.AddMissingExportStrategyProvider(new OptionalStrategyProvider());              });
Magic Number,Grace.Tests.ThridParty.Optional,OptionalTests,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\ThridParty\Optional\OptionalTests.cs,OptionalIntHasValueTrue,The following statement contains a magic number: Assert.Equal(5' instance.ValueOr(() => throw new Exception("Not supposed to hit this")));
Missing Default,Grace.Tests.DependencyInjection.Extensions,GraceRegistration,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Extensions\GraceExtensions.cs,ConfigureLifetime,The following switch statement is missing a default case: switch (lifetime)              {                  case ServiceLifetime.Scoped:                      return configuration.Lifestyle.SingletonPerScope();                    case ServiceLifetime.Singleton:                      return configuration.Lifestyle.Singleton();              }
Missing Default,Grace.Tests.DependencyInjection.Extensions,GraceRegistration,D:\research\architectureSmells\repos\ipjohnson_Grace\tests\Grace.Tests\DependencyInjection\Extensions\GraceExtensions.cs,ConfigureLifetime,The following switch statement is missing a default case: switch (lifecycleKind)              {                  case ServiceLifetime.Scoped:                      return configuration.Lifestyle.SingletonPerScope();                    case ServiceLifetime.Singleton:                      return configuration.Lifestyle.Singleton();              }
