Implementation smell,Namespace,Class,File,Method,Description
Long Method,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaDET_ICMS,The method has 235 lines of code.
Complex Method,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaDEST,Cyclomatic complexity of the method is 9
Complex Method,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaDET_ICMS,Cyclomatic complexity of the method is 34
Complex Method,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaTRANSP,Cyclomatic complexity of the method is 14
Long Parameter List,NFeEletronica.Consulta,Cancelamento,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Consulta\Cancelamento.cs,Cancelamento,The method has 5 parameters. Parameters: numeroLote' notaChaveAcesso' justificativa' protocolo' cnpj
Long Parameter List,NFeEletronica.Consulta,CartaCorrecao,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Consulta\CartaCorrecao.cs,CartaCorrecao,The method has 5 parameters. Parameters: numeroLote' notaChaveAcesso' correcao' cnpj' codigoUF
Long Identifier,NFeEletronica.NfeInutilizacao,NfeInutilizacao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeInutilizacao\Reference.cs,,The length of the parameter nfeInutilizacaoNF2OperationCompleted is 36.
Long Identifier,NFeEletronica.NfeInutilizacao,NfeInutilizacao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeInutilizacao\Reference.cs,,The length of the parameter useDefaultCredentialsSetExplicitly is 34.
Long Identifier,NFeEletronica.NfeRecepcao2,NfeRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRecepcao2\Reference.cs,,The length of the parameter nfeRecepcaoLote2OperationCompleted is 34.
Long Identifier,NFeEletronica.NfeRecepcao2,NfeRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRecepcao2\Reference.cs,,The length of the parameter useDefaultCredentialsSetExplicitly is 34.
Long Identifier,NFeEletronica.NfeRetRecepcao2,NfeRetRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRetRecepcao2\Reference.cs,,The length of the parameter nfeRetRecepcao2OperationCompleted is 33.
Long Identifier,NFeEletronica.NfeRetRecepcao2,NfeRetRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRetRecepcao2\Reference.cs,,The length of the parameter useDefaultCredentialsSetExplicitly is 34.
Long Identifier,NFeEletronica.RecepcaoEvento2,RecepcaoEvento,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\RecepcaoEvento2\Reference.cs,,The length of the parameter nfeRecepcaoEventoOperationCompleted is 35.
Long Identifier,NFeEletronica.RecepcaoEvento2,RecepcaoEvento,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\RecepcaoEvento2\Reference.cs,,The length of the parameter useDefaultCredentialsSetExplicitly is 34.
Long Statement,NFeEletronica.Operacao,RecepcaoEvento,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Operacao\RecepcaoEvento.cs,CartaCorrecao,The length of the statement  "                "         <xCondUso>A Carta de Correcao e disciplinada pelo paragrafo 1o-A do art. 7o do Convenio S/N' de 15 de dezembro de 1970 e pode ser utilizada para regularizacao de erro ocorrido na emissao de documento fiscal' desde que o erro nao esteja relacionado com: I - as variaveis que determinam o valor do imposto tais como: base de calculo' aliquota' diferenca de preco' quantidade' valor da operacao ou da prestacao; II - a correcao de dados cadastrais que implique mudanca do remetente ou do destinatario; III - a data de emissao ou de saida.</xCondUso>"); " is 559.
Long Statement,NFeEletronica.Operacao,RetRecepcao,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Operacao\RetRecepcao.cs,Enviar,The length of the statement  "                //Isso aqui é o resultado de CADA NFe' mas como por enquanto pra cada lote só manda 1 nota' entao segue assim por enquanto #todo " is 128.
Long Statement,NFeEletronica.NfeInutilizacao,NfeInutilizacao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeInutilizacao\Reference.cs,nfeInutilizacaoNF2Async,The length of the statement  "                this.nfeInutilizacaoNF2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnnfeInutilizacaoNF2OperationCompleted); " is 129.
Long Statement,NFeEletronica.NfeInutilizacao,NfeInutilizacao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeInutilizacao\Reference.cs,OnnfeInutilizacaoNF2OperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,NFeEletronica.NfeInutilizacao,NfeInutilizacao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeInutilizacao\Reference.cs,OnnfeInutilizacaoNF2OperationCompleted,The length of the statement  "                this.nfeInutilizacaoNF2Completed(this' new nfeInutilizacaoNF2CompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 163.
Long Statement,NFeEletronica.NfeRecepcao2,NfeRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRecepcao2\Reference.cs,nfeRecepcaoLote2Async,The length of the statement  "                this.nfeRecepcaoLote2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnnfeRecepcaoLote2OperationCompleted); " is 125.
Long Statement,NFeEletronica.NfeRecepcao2,NfeRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRecepcao2\Reference.cs,OnnfeRecepcaoLote2OperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,NFeEletronica.NfeRecepcao2,NfeRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRecepcao2\Reference.cs,OnnfeRecepcaoLote2OperationCompleted,The length of the statement  "                this.nfeRecepcaoLote2Completed(this' new nfeRecepcaoLote2CompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 159.
Long Statement,NFeEletronica.NfeRetRecepcao2,NfeRetRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRetRecepcao2\Reference.cs,nfeRetRecepcao2Async,The length of the statement  "                this.nfeRetRecepcao2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnnfeRetRecepcao2OperationCompleted); " is 123.
Long Statement,NFeEletronica.NfeRetRecepcao2,NfeRetRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRetRecepcao2\Reference.cs,OnnfeRetRecepcao2OperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,NFeEletronica.NfeRetRecepcao2,NfeRetRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRetRecepcao2\Reference.cs,OnnfeRetRecepcao2OperationCompleted,The length of the statement  "                this.nfeRetRecepcao2Completed(this' new nfeRetRecepcao2CompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 157.
Long Statement,NFeEletronica.RecepcaoEvento2,RecepcaoEvento,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\RecepcaoEvento2\Reference.cs,nfeRecepcaoEventoAsync,The length of the statement  "                this.nfeRecepcaoEventoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnfeRecepcaoEventoOperationCompleted); " is 127.
Long Statement,NFeEletronica.RecepcaoEvento2,RecepcaoEvento,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\RecepcaoEvento2\Reference.cs,OnnfeRecepcaoEventoOperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,NFeEletronica.RecepcaoEvento2,RecepcaoEvento,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\RecepcaoEvento2\Reference.cs,OnnfeRecepcaoEventoOperationCompleted,The length of the statement  "                this.nfeRecepcaoEventoCompleted(this' new nfeRecepcaoEventoCompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 161.
Empty Catch Block,NFeEletronica.Operacao,RetRecepcao,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Operacao\RetRecepcao.cs,Enviar,The method has an empty catch block.
Magic Number,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,GerarCodigoDaNota,The following statement contains a magic number: var codigoNumerico = random.Next(10000000' 99999999).ToString("D8");
Magic Number,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,GerarCodigoDaNota,The following statement contains a magic number: var codigoNumerico = random.Next(10000000' 99999999).ToString("D8");
Magic Number,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,GerarCodigoDaNota,The following statement contains a magic number: var result = ide.cUF + ide.dEmi.Replace("-"' "").Substring(2' 4) + emit.CNPJ +                           Int32.Parse(ide.mod).ToString("D2") + Int32.Parse(ide.serie).ToString("D3") +                           Int32.Parse(ide.nNF).ToString("D9") + Int32.Parse(ide.tpEmis).ToString("D1") +                           codigoNumerico;
Magic Number,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,GerarCodigoDaNota,The following statement contains a magic number: var result = ide.cUF + ide.dEmi.Replace("-"' "").Substring(2' 4) + emit.CNPJ +                           Int32.Parse(ide.mod).ToString("D2") + Int32.Parse(ide.serie).ToString("D3") +                           Int32.Parse(ide.nNF).ToString("D9") + Int32.Parse(ide.tpEmis).ToString("D1") +                           codigoNumerico;
Magic Number,NFeEletronica.Operacao,Recepcao,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Operacao\Recepcao.cs,AdicionarNota,The following statement contains a magic number: notaLista.Count >= 50
Magic Number,NFeEletronica.Utils,Util,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Utils\Util.cs,GerarModulo11,The following statement contains a magic number: var multiplier = 2;
Magic Number,NFeEletronica.Utils,Util,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Utils\Util.cs,GerarModulo11,The following statement contains a magic number: multiplier = 2;
Magic Number,NFeEletronica.Utils,Util,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Utils\Util.cs,GerarModulo11,The following statement contains a magic number: 9 < multiplier
Magic Number,NFeEletronica.Utils,Util,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Utils\Util.cs,GerarModulo11,The following statement contains a magic number: var remainder = (total%11);
Magic Number,NFeEletronica.Utils,Util,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Utils\Util.cs,GerarModulo11,The following statement contains a magic number: return (11 - remainder).ToString();
Magic Number,NFeEletronica.NfeInutilizacao,NfeInutilizacao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeInutilizacao\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: ((wsUri.Port >= 1024)                           && (string.Compare(wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))
Magic Number,NFeEletronica.NfeRecepcao2,NfeRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRecepcao2\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: ((wsUri.Port >= 1024)                           && (string.Compare(wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))
Magic Number,NFeEletronica.NfeRetRecepcao2,NfeRetRecepcao2,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\NFeRetRecepcao2\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: ((wsUri.Port >= 1024)                           && (string.Compare(wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))
Magic Number,NFeEletronica.RecepcaoEvento2,RecepcaoEvento,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\Web References\RecepcaoEvento2\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: ((wsUri.Port >= 1024)                           && (string.Compare(wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))
Duplicate Code,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaDET_ICMS,The method contains a code clone-set at the following line numbers (starting from the method definition): ((138' 162)' (235' 259))
Missing Default,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaDET_ICMS,The following switch statement is missing a default case: switch (det.icms)              {                  case ICMS.ICMS00:                      xmlString.Append("<ICMS00>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("    <modBC>" + det.icms_modBC + "</modBC>");                      xmlString.Append("    <vBC>" + det.icms_vBC + "</vBC>");                      xmlString.Append("    <pICMS>" + det.icms_pICMS + "</pICMS>");                      xmlString.Append("    <vICMS>" + det.icms_vICMS + "</vICMS>");                      xmlString.Append("</ICMS00>");                      break;                  case ICMS.ICMS10:                      xmlString.Append("<ICMS10>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("    <modBC>" + det.icms_modBC + "</modBC>");                      xmlString.Append("    <vBC>" + det.icms_vBC + "</vBC>");                      xmlString.Append("    <pICMS>" + det.icms_pICMS + "</pICMS>");                      xmlString.Append("    <vICMS>" + det.icms_vICMS + "</vICMS>");                      xmlString.Append("    <modBCST>" + det.icms_modBCST + "</modBCST>");                        if (!String.IsNullOrEmpty(det.icms_pMVAST))                      {                          xmlString.Append("    <pMVAST>" + det.icms_pMVAST + "</pMVAST>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pRedBCST>" + det.icms_pRedBCST + "</pRedBCST>");                      }                        xmlString.Append("    <vBCST>" + det.icms_vBCST + "</vBCST>");                      xmlString.Append("    <pICMSST>" + det.icms_pICMSST + "</pICMSST>");                      xmlString.Append("    <vICMSST>" + det.icms_vICMSST + "</vICMSST>");                        xmlString.Append("</ICMS10>");                      break;                  case ICMS.ICMS20:                      xmlString.Append("<ICMS20>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("    <modBC>" + det.icms_modBC + "</modBC>");                      xmlString.Append("    <pRedBC>" + det.icms_pRedBC + "</pRedBC>");                      xmlString.Append("    <vBC>" + det.icms_vBC + "</vBC>");                      xmlString.Append("    <pICMS>" + det.icms_pICMS + "</pICMS>");                      xmlString.Append("    <vICMS>" + det.icms_vICMS + "</vICMS>");                      xmlString.Append("</ICMS20>");                      break;                  case ICMS.ICMS30:                      xmlString.Append("<ICMS30>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("    <modBCST>" + det.icms_modBCST + "</modBCST>");                      xmlString.Append("    <pMVAST>" + det.icms_pMVAST + "</pMVAST>");                      xmlString.Append("    <pRedBCST>" + det.icms_pRedBCST + "</pRedBCST>");                      xmlString.Append("    <vBCST>" + det.icms_vBCST + "</vBCST>");                      xmlString.Append("    <pICMSST>" + det.icms_pICMSST + "</pICMSST>");                      xmlString.Append("    <vICMSST>" + det.icms_vICMSST + "</vICMSST>");                      xmlString.Append("</ICMS30>");                      break;                  case ICMS.ICMS40_50:                      xmlString.Append("<ICMS40>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("</ICMS40>");                      break;                  case ICMS.ICMS51:                      xmlString.Append("<ICMS51>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("</ICMS51>");                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <modBC>" + det.icms_modBC + "</modBC>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pRedBC>" + det.icms_pRedBC + "</pRedBC>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <vBC>" + det.icms_vBC + "</vBC>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pICMS>" + det.icms_pICMS + "</pICMS>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <vICMS>" + det.icms_vICMS + "</vICMS>");                      }                      break;                  case ICMS.ICMS60:                      xmlString.Append("<ICMS60>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("</ICMS60>");                      break;                  case ICMS.ICMS70:                      xmlString.Append("<ICMS70>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("    <modBC>" + det.icms_modBC + "</modBC>");                      xmlString.Append("    <pRedBC>" + det.icms_pRedBC + "</pRedBC>");                      xmlString.Append("    <vBC>" + det.icms_vBC + "</vBC>");                      xmlString.Append("    <pICMS>" + det.icms_pICMS + "</pICMS>");                      xmlString.Append("    <vICMS>" + det.icms_vICMS + "</vICMS>");                      xmlString.Append("    <modBCST>" + det.icms_modBCST + "</modBCST>");                        if (!String.IsNullOrEmpty(det.icms_pMVAST))                      {                          xmlString.Append("    <pMVAST>" + det.icms_pMVAST + "</pMVAST>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pRedBCST>" + det.icms_pRedBCST + "</pRedBCST>");                      }                        xmlString.Append("    <vBCST>" + det.icms_vBCST + "</vBCST>");                      xmlString.Append("    <pICMSST>" + det.icms_pICMSST + "</pICMSST>");                      xmlString.Append("    <vICMSST>" + det.icms_vICMSST + "</vICMSST>");                      xmlString.Append("</ICMS70>");                      break;                  case ICMS.ICMS90:                      xmlString.Append("<ICMS90>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CST>" + det.icms_CST + "</CST>");                      xmlString.Append("    <modBC>" + det.icms_modBC + "</modBC>");                      xmlString.Append("    <vBC>" + det.icms_vBC + "</vBC>");                        if (!String.IsNullOrEmpty(det.icms_pRedBC))                      {                          xmlString.Append("    <pRedBC>" + det.icms_pRedBC + "</pRedBC>");                      }                        xmlString.Append("    <pICMS>" + det.icms_pICMS + "</pICMS>");                      xmlString.Append("    <vICMS>" + det.icms_vICMS + "</vICMS>");                      xmlString.Append("    <modBCST>" + det.icms_modBCST + "</modBCST>");                        if (!String.IsNullOrEmpty(det.icms_pMVAST))                      {                          xmlString.Append("    <pMVAST>" + det.icms_pMVAST + "</pMVAST>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pRedBCST>" + det.icms_pRedBCST + "</pRedBCST>");                      }                        xmlString.Append("    <vBCST>" + det.icms_vBCST + "</vBCST>");                      xmlString.Append("    <pICMSST>" + det.icms_pICMSST + "</pICMSST>");                      xmlString.Append("    <vICMSST>" + det.icms_vICMSST + "</vICMSST>");                      xmlString.Append("</ICMS90>");                      break;                  case ICMS.ICMS101:                      xmlString.Append("<ICMSSN101>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CSOSN>" + det.icms_CSOSN + "</CSOSN>");                      xmlString.Append("    <pCredSN>" + det.icms_pCredSN + "</pCredSN>");                      xmlString.Append("    <vCredICMSSN>" + det.icms_vCredICMSSN + "</vCredICMSSN>");                      xmlString.Append("</ICMSSN101>");                      break;                  case ICMS.ICMS102_400:                      xmlString.Append("<ICMSSN102>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CSOSN>" + det.icms_CSOSN + "</CSOSN>");                      xmlString.Append("</ICMSSN102>");                      break;                  case ICMS.ICMS201:                      xmlString.Append("<ICMSSN201>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CSOSN>" + det.icms_CSOSN + "</CSOSN>");                      xmlString.Append("    <modBCST>" + det.icms_modBCST + "</modBCST>");                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pMVAST>" + det.icms_pMVAST + "</pMVAST>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pRedBCST>" + det.icms_pRedBCST + "</pRedBCST>");                      }                        xmlString.Append("    <vBCST>" + det.icms_vBCST + "</vBCST>");                      xmlString.Append("    <pICMSST>" + det.icms_pICMSST + "</pICMSST>");                      xmlString.Append("    <vICMSST>" + det.icms_vICMSST + "</vICMSST>");                        xmlString.Append("</ICMSSN201>");                      break;                  case ICMS.ICMS202:                      xmlString.Append("<ICMSSN202>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CSOSN>" + det.icms_CSOSN + "</CSOSN>");                      xmlString.Append("    <modBCST>" + det.icms_modBCST + "</modBCST>");                        if (!String.IsNullOrEmpty(det.icms_pMVAST))                      {                          xmlString.Append("    <pMVAST>" + det.icms_pMVAST + "</pMVAST>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pRedBCST>" + det.icms_pRedBCST + "</pRedBCST>");                      }                        xmlString.Append("    <vBCST>" + det.icms_vBCST + "</vBCST>");                      xmlString.Append("    <pICMSST>" + det.icms_pICMSST + "</pICMSST>");                      xmlString.Append("    <vICMSST>" + det.icms_vICMSST + "</vICMSST>");                        xmlString.Append("</ICMSSN202>");                      break;                  case ICMS.ICMS500:                      xmlString.Append("<ICMSSN500>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CSOSN>" + det.icms_CSOSN + "</CSOSN>");                      xmlString.Append("    <vBCSTRet>" + det.icms_vBCSTRet + "</vBCSTRet>");                      xmlString.Append("    <vICMSSTRet>" + det.icms_vICMSSTRet + "</vICMSSTRet>");                      xmlString.Append("</ICMSSN500>");                      break;                  case ICMS.ICMS900:                      xmlString.Append("<ICMSSN900>");                      xmlString.Append("    <orig>" + det.icms_orig + "</orig>");                      xmlString.Append("    <CSOSN>" + det.icms_CSOSN + "</CSOSN>");                      xmlString.Append("    <modBC>" + det.icms_modBC + "</modBC>");                      xmlString.Append("    <vBC>" + det.icms_vBC + "</vBC>");                        if (!String.IsNullOrEmpty(det.icms_pRedBC))                      {                          xmlString.Append("    <pRedBC>" + det.icms_pRedBC + "</pRedBC>");                      }                        xmlString.Append("    <pICMS>" + det.icms_pICMS + "</pICMS>");                      xmlString.Append("    <vICMS>" + det.icms_vICMS + "</vICMS>");                      xmlString.Append("    <modBCST>" + det.icms_modBCST + "</modBCST>");                        if (!String.IsNullOrEmpty(det.icms_pMVAST))                      {                          xmlString.Append("    <pMVAST>" + det.icms_pMVAST + "</pMVAST>");                      }                        if (!String.IsNullOrEmpty(det.icms_pRedBCST))                      {                          xmlString.Append("    <pRedBCST>" + det.icms_pRedBCST + "</pRedBCST>");                      }                        xmlString.Append("    <vBCST>" + det.icms_vBCST + "</vBCST>");                      xmlString.Append("    <pICMSST>" + det.icms_pICMSST + "</pICMSST>");                      xmlString.Append("    <vICMSST>" + det.icms_vICMSST + "</vICMSST>");                      xmlString.Append("    <pCredSN>" + det.icms_pCredSN + "</pCredSN>");                      xmlString.Append("    <vCredICMSSN>" + det.icms_vCredICMSSN + "</vCredICMSSN>");                      xmlString.Append("</ICMSSN900>");                      break;              }
Missing Default,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaDET_IPI,The following switch statement is missing a default case: switch (det.ipi)                  {                      case IPI.IPI00_49_50_99:                          xmlString.Append("<IPITrib>");                            xmlString.Append("    <CST>" + det.ipi_CST + "</CST>");                            if (!String.IsNullOrEmpty(det.ipi_vBC))                          {                              xmlString.Append("    <vBC>" + det.ipi_vBC + "</vBC>");                              xmlString.Append("    <pIPI>" + det.ipi_pIPI + "</pIPI>");                          }                          else                          {                              xmlString.Append("    <qUnid>" + det.ipi_qUnid + "</qUnid>");                              xmlString.Append("    <vUnid>" + det.ipi_vUnid + "</vUnid>");                          }                            xmlString.Append("    <vIPI>" + det.ipi_vIPI + "</vIPI>");                            xmlString.Append("</IPITrib>");                          break;                      case IPI.IPI01_55:                          xmlString.Append("<IPINT>");                          xmlString.Append("    <CST>" + det.ipi_CST + "</CST>");                          xmlString.Append("</IPINT>");                          break;                  }
Missing Default,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaDET_PIS,The following switch statement is missing a default case: switch (det.pis)              {                  case PIS.PIS01_02:                      xmlString.Append("<PISAliq>");                      xmlString.Append("    <CST>" + det.pis_CST + "</CST>");                      xmlString.Append("    <vBC>" + det.pis_vBC + "</vBC>");                      xmlString.Append("    <pPIS>" + det.pis_pPIS + "</pPIS>");                      xmlString.Append("    <vPIS>" + det.pis_vPIS + "</vPIS>");                      xmlString.Append("</PISAliq>");                      break;                  case PIS.PIS03:                      xmlString.Append("<PISQtde>");                      xmlString.Append("    <CST>" + det.pis_CST + "</CST>");                      xmlString.Append("    <qBCProd>" + det.pis_qBCProd + "</qBCProd>");                      xmlString.Append("    <vAliqProd>" + det.pis_vAliqProd + "</vAliqProd>");                      xmlString.Append("    <vPIS>" + det.pis_vPIS + "</vPIS>");                      xmlString.Append("</PISQtde>");                      break;                  case PIS.PIS04_09:                      xmlString.Append("<PISNT>");                      xmlString.Append("    <CST>" + det.pis_CST + "</CST>");                      xmlString.Append("</PISNT>");                      break;                  case PIS.PIS99:                      xmlString.Append("<PISOutr>");                      xmlString.Append("    <CST>" + det.pis_CST + "</CST>");                        if (!String.IsNullOrEmpty(det.pis_vBC) && !String.IsNullOrEmpty(det.pis_pPIS))                      {                          xmlString.Append("    <vBC>" + det.pis_vBC + "</vBC>");                          xmlString.Append("    <pPIS>" + det.pis_pPIS + "</pPIS>");                      }                      else                      {                          xmlString.Append("    <qBCProd>" + det.pis_qBCProd + "</qBCProd>");                          xmlString.Append("    <vAliqProd>" + det.pis_vAliqProd + "</vAliqProd>");                      }                        xmlString.Append("    <vPIS>" + det.pis_vPIS + "</vPIS>");                      xmlString.Append("</PISOutr>");                      break;              }
Missing Default,NFeEletronica.NotaFiscal,Nota,D:\research\architectureSmells\repos\leonardiwagner_WallegNFe\NFeEletronica\NotaFiscal\NotaFiscal.cs,MontaDET_COFINS,The following switch statement is missing a default case: switch (det.cofins)              {                  case COFINS.CST01_02:                      xmlString.Append("<COFINSAliq>");                      xmlString.Append("    <CST>" + det.cofins_CST + "</CST>");                      xmlString.Append("    <vBC>" + det.cofins_vBC + "</vBC>");                      xmlString.Append("    <pCOFINS>" + det.cofins_pCOFINS + "</pCOFINS>");                      xmlString.Append("    <vCOFINS>" + det.cofins_vCOFINS + "</vCOFINS>");                      xmlString.Append("</COFINSAliq>");                      break;                  case COFINS.CST03:                      xmlString.Append("<COFINSQtde>");                      xmlString.Append("    <CST>" + det.cofins_CST + "</CST>");                      xmlString.Append("    <qBCProd>" + det.cofins_qBCProd + "</qBCProd>");                      xmlString.Append("    <vAliqProd>" + det.cofins_vAliqProd + "</vAliqProd>");                      xmlString.Append("    <vCOFINS>" + det.cofins_vCOFINS + "</vCOFINS>");                      xmlString.Append("</COFINSQtde>");                      break;                  case COFINS.CST04_09:                      xmlString.Append("<COFINSNT>");                      xmlString.Append("    <CST>" + det.cofins_CST + "</CST>");                      xmlString.Append("</COFINSNT>");                      break;                  case COFINS.CST99:                      xmlString.Append("<COFINSOutr>");                      xmlString.Append("    <CST>" + det.cofins_CST + "</CST>");                        if (!String.IsNullOrEmpty(det.cofins_vBC) && !String.IsNullOrEmpty(det.cofins_pCOFINS))                      {                          xmlString.Append("    <vBC>" + det.cofins_vBC + "</vBC>");                          xmlString.Append("    <pCOFINS>" + det.cofins_pCOFINS + "</pCOFINS>");                      }                      else                      {                          xmlString.Append("    <qBCProd>" + det.cofins_qBCProd + "</qBCProd>");                          xmlString.Append("    <vAliqProd>" + det.cofins_vAliqProd + "</vAliqProd>");                      }                        xmlString.Append("    <vCOFINS>" + det.cofins_vCOFINS + "</vCOFINS>");                      xmlString.Append("</COFINSOutr>");                      break;              }
