Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AsterNET.ARI.SimpleBridgeAsync,Program,D:\research\architectureSmells\repos1\skrusty_AsterNET.ARI\AsyncSamples\SimpleBridgeAsync\Program.cs,RunDemo,Cyclomatic complexity of the method is 8
Magic Number,AsterNET.ARI.SimpleBridgeAsync,Program,D:\research\architectureSmells\repos1\skrusty_AsterNET.ARI\AsyncSamples\SimpleBridgeAsync\Program.cs,RunDemo,The following statement contains a magic number: ActionClient = new AriClient(new StasisEndpoint("192.168.3.16"' 8088' "username"' "test")' AppName);
Missing Default,AsterNET.ARI.SimpleBridgeAsync,Program,D:\research\architectureSmells\repos1\skrusty_AsterNET.ARI\AsyncSamples\SimpleBridgeAsync\Program.cs,RunDemo,The following switch statement is missing a default case: switch (lastKey.KeyChar.ToString())                      {                          case "*":                              done = true;                              break;                          case "1":                              await ActionClient.Bridges.StopMohAsync(SimpleBridge.Id);                              break;                          case "2":                              await ActionClient.Bridges.StartMohAsync(SimpleBridge.Id' "default");                              break;                          case "3":                              // Mute all channels on bridge                              var bridgeMute = await ActionClient.Bridges.GetAsync(SimpleBridge.Id);                              foreach (var chan in bridgeMute.Channels)                                  await ActionClient.Channels.MuteAsync(chan' "in");                              break;                          case "4":                              // Unmute all channels on bridge                              var bridgeUnmute = await ActionClient.Bridges.GetAsync(SimpleBridge.Id);                              foreach (var chan in bridgeUnmute.Channels)                                  await ActionClient.Channels.UnmuteAsync(chan' "in");                              break;                      }
