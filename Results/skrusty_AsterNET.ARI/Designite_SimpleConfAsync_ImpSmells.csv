Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SimpleConfAsync,ConferenceUser,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\ConferenceUser.cs,KeyPress,Cyclomatic complexity of the method is 10
Long Statement,SimpleConfAsync,Conference,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\Conference.cs,c_OnChannelTalkingFinishedEvent,The length of the statement  "	Console.WriteLine ("{0} Finished talking in conference {1}' lasted {2} milliseconds"' e.Channel.Id' this.ConferenceName' e.Duration); " is 133.
Long Statement,SimpleConfAsync,Conference,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\Conference.cs,c_OnChannelLeftBridgeEvent,The length of the statement  "	await _client.Bridges.PlayAsync (Confbridge.Id' "recording:" + string.Format ("conftemp-{0}"' e.Channel.Id)' "en"' 0' 0' Guid.NewGuid ().ToString ()); " is 150.
Long Statement,SimpleConfAsync,Conference,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\Conference.cs,c_OnChannelEnteredBridgeEvent,The length of the statement  "		await _client.Bridges.PlayAsync (Confbridge.Id' "recording:" + confUser.CurrentRecodingId' "en"' 0' 0' Guid.NewGuid ().ToString ()); " is 132.
Long Statement,SimpleConfAsync,Conference,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\Conference.cs,PlayFile,The length of the statement  "	await _client.Bridges.PlayAsync (Confbridge.Id' string.Format ("sound:{0}"' fileName)' "en"' 0' 0' Guid.NewGuid ().ToString ()); " is 128.
Long Statement,SimpleConfAsync,ConferenceUser,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\ConferenceUser.cs,RecordName,The length of the statement  "	CurrentRecodingId = (await _client.Channels.RecordAsync (Channel.Id' string.Format ("conftemp-{0}"' Channel.Id)' "wav"' 6' 1' "overwrite"' true' "#")).Name; " is 156.
Long Statement,SimpleConfAsync,Program,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\Program.cs,c_OnStasisStartEvent,The length of the statement  "		await Client.Channels.ContinueInDialplanAsync (e.Channel.Id' e.Channel.Dialplan.Context' e.Channel.Dialplan.Exten' (int)e.Channel.Dialplan.Priority++); " is 151.
Magic Number,SimpleConfAsync,ConferenceUser,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\ConferenceUser.cs,RecordName,The following statement contains a magic number: CurrentRecodingId = (await _client.Channels.RecordAsync (Channel.Id' string.Format ("conftemp-{0}"' Channel.Id)' "wav"' 6' 1' "overwrite"' true' "#")).Name;  
Magic Number,SimpleConfAsync,Program,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\Program.cs,RunDemo,The following statement contains a magic number: try {  	Client = new AriClient (new StasisEndpoint ("127.0.0.1"' 8088' "username"' "test")' AppConfig.AppName);  	Conference.Conferences.Add (new Conference (Client' Guid.NewGuid ()' "test"));  	Client.OnStasisStartEvent += c_OnStasisStartEvent;  	Client.OnStasisEndEvent += c_OnStasisEndEvent;  	Client.Connect ();  	// Start REST  	WebApp.Start<Startup> (url: AppConfig.RestAddress);  	Console.WriteLine ("Loaded...waiting for connections.");  	// Wait  	Console.ReadKey ();  	// Destroy all the conferences and their bridges  	Conference.Conferences.ForEach (async x => await x.DestroyConference ());  	Conference.Conferences = null;  }  catch (Exception ex) {  	Console.WriteLine (ex.ToString ());  	Console.ReadKey ();  }  
Magic Number,SimpleConfAsync,Program,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\Program.cs,RunDemo,The following statement contains a magic number: Client = new AriClient (new StasisEndpoint ("127.0.0.1"' 8088' "username"' "test")' AppConfig.AppName);  
Missing Default,SimpleConfAsync,ConferenceUser,C:\repos\skrusty_AsterNET.ARI\AsyncSamples\SimpleConfAsync\ConferenceUser.cs,KeyPress,The following switch statement is missing a default case: switch (digit) {  case "1":  	// Mute  	await _client.Channels.MuteAsync (Channel.Id' "in");  	await _client.Channels.PlayAsync (Channel.Id' "sound:conf-muted"' "en"' 0' 0' Guid.NewGuid ().ToString ());  	break;  case "2":  	// Unmute  	await _client.Channels.UnmuteAsync (Channel.Id' "in");  	await _client.Channels.PlayAsync (Channel.Id' "sound:conf-unmuted"' "en"' 0' 0' Guid.NewGuid ().ToString ());  	break;  case "3":  	// ?  	break;  }  
