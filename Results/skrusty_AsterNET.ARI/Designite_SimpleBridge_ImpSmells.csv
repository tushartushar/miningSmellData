Implementation smell,Namespace,Class,File,Method,Description
Magic Number,AsterNET.ARI.SimpleBridge,Program,C:\repos\skrusty_AsterNET.ARI\Samples\SimpleBridge\Program.cs,Main,The following statement contains a magic number: try              {                  // Create a message actionClient to receive events on                  ActionClient = new AriClient(new StasisEndpoint("192.168.3.16"' 8088' "username"' "test")' AppName);                    ActionClient.OnStasisStartEvent += c_OnStasisStartEvent;                  ActionClient.OnStasisEndEvent += c_OnStasisEndEvent;                    ActionClient.Connect();                    // Create simple bridge                  SimpleBridge = ActionClient.Bridges.Create("mixing"' Guid.NewGuid().ToString()' AppName);                    // subscribe to bridge events                  ActionClient.Applications.Subscribe(AppName' "bridge:" + SimpleBridge.Id);                    // start MOH on bridge                  ActionClient.Bridges.StartMoh(SimpleBridge.Id' "default");                    var done = false;                  while (!done)                  {                      var lastKey = Console.ReadKey();                      switch(lastKey.KeyChar.ToString())                      {                          case "*":                              done = true;                              break;                          case "1":                              ActionClient.Bridges.StopMoh(SimpleBridge.Id);                              break;                          case "2":                              ActionClient.Bridges.StartMoh(SimpleBridge.Id' "default");                              break;                          case "3":                              // Mute all channels on bridge                              var bridgeMute = ActionClient.Bridges.Get(SimpleBridge.Id);                              foreach (var chan in bridgeMute.Channels)                                  ActionClient.Channels.Mute(chan' "in");                              break;                          case "4":                              // Unmute all channels on bridge                              var bridgeUnmute = ActionClient.Bridges.Get(SimpleBridge.Id);                              foreach (var chan in bridgeUnmute.Channels)                                  ActionClient.Channels.Unmute(chan' "in");                              break;                      }                  }                    ActionClient.Bridges.Destroy(SimpleBridge.Id);                  ActionClient.Disconnect();              }              catch (Exception ex)              {                  Console.WriteLine(ex.ToString());                  Console.ReadKey();              }
Missing Default,AsterNET.ARI.SimpleBridge,Program,C:\repos\skrusty_AsterNET.ARI\Samples\SimpleBridge\Program.cs,Main,The following switch statement is missing a default case: switch(lastKey.KeyChar.ToString())                      {                          case "*":                              done = true;                              break;                          case "1":                              ActionClient.Bridges.StopMoh(SimpleBridge.Id);                              break;                          case "2":                              ActionClient.Bridges.StartMoh(SimpleBridge.Id' "default");                              break;                          case "3":                              // Mute all channels on bridge                              var bridgeMute = ActionClient.Bridges.Get(SimpleBridge.Id);                              foreach (var chan in bridgeMute.Channels)                                  ActionClient.Channels.Mute(chan' "in");                              break;                          case "4":                              // Unmute all channels on bridge                              var bridgeUnmute = ActionClient.Bridges.Get(SimpleBridge.Id);                              foreach (var chan in bridgeUnmute.Channels)                                  ActionClient.Channels.Unmute(chan' "in");                              break;                      }
