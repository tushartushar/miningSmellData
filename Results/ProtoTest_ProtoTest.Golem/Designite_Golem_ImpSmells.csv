Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Golem.Purple.PurpleElements,PurpleDropDown,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleDropDown.cs,SelectItem,Cyclomatic complexity of the method is 8
Complex Method,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,GetName,Cyclomatic complexity of the method is 11
Complex Method,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,WithParam,Cyclomatic complexity of the method is 10
Complex Method,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,WithParams,Cyclomatic complexity of the method is 11
Complex Method,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,Cyclomatic complexity of the method is 8
Long Parameter List,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateLogStatus,The method has 5 parameters. Parameters: statusMessage' exceptionMessage' stackTrace' screenshotPath' videoPath
Long Parameter List,Golem.Purple.PurpleCore,ScreenCapture,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleCore\ScreenCapture.cs,BitBlt,The method has 9 parameters. Parameters: hdcDest' xDest' yDest' wDest' hDest' hdcSource' xSrc' ySrc' rop
Long Parameter List,Golem.Purple.PurpleElements,PurpleElementBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleElementBase.cs,mouse_event,The method has 5 parameters. Parameters: dwFlags' dx' dy' cButtons' dwExtraInfo
Long Parameter List,Golem.Purple.PurpleElements,PurpleWindow,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleWindow.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' x' y' cx' cy' uFlags
Long Identifier,Golem.Core,PurpleSettings,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Config.cs,,The length of the parameter Purple_ElementTimeoutWaitSeconds is 32.
Long Identifier,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The length of the parameter adjustColorSchemeToMaxDifferenceFound is 37.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateStartTags,The length of the statement  "            this.htmlTextWriter.WriteLine("<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">"); " is 137.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateStartTags,The length of the statement  "        //    this.htmlTextWriter.WriteLine("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/ie-emulation-modes-warning.js\"></script>"); " is 145.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateEndTags,The length of the statement  "            this.htmlTextWriter.WriteLine("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>"); " is 125.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateEndTags,The length of the statement  "           // this.htmlTextWriter.WriteLine("<script> window.jQuery || document.write('<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/vendor/jquery.min.js\"></script>') </script>"); " is 187.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateEndTags,The length of the statement  "            this.htmlTextWriter.WriteLine("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>"); " is 126.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateEndTags,The length of the statement  "         //   this.htmlTextWriter.WriteLine("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/vendor/holder.min.js\"></script>"); " is 135.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateEndTags,The length of the statement  "         //   this.htmlTextWriter.WriteLine("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/ie10-viewport-bug-workaround.js\"></script>"); " is 146.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateIndexSummary,The length of the statement  "            int totalPassed = TestBase.testDataCollection.Where(x => x.Value.Result != null && x.Value.Result.Outcome == ResultState.Success).Count(); " is 138.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateIndexSummary,The length of the statement  "            int totalFailed = TestBase.testDataCollection.Where(x => x.Value.Result != null && x.Value.Result.Outcome == ResultState.Failure).Count(); " is 138.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateIndexSummary,The length of the statement  "            int totalSkipped = TestBase.testDataCollection.Where(x => x.Value.Result != null && x.Value.Result.Outcome == ResultState.Skipped).Count(); " is 139.
Long Statement,Golem.Core,HtmlReportGenerator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\HtmlReportGenerator.cs,GenerateIndexSummary,The length of the statement  "                this.htmlTextWriter.Write($"FAILURE! {(float)totalPassed/(float)totalTests}% {totalPassed}/{totalTests} tests passed ({totalSkipped} Skipped)"); " is 144.
Long Statement,Golem.Core,Log,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Log.cs,Image,The length of the statement  "                String path = Path.GetFullPath(Path.Combine(Config.settings.reportSettings.reportPath' "screenshot_" + DateTime.Now.ToString("HHms") + ".png")); " is 144.
Long Statement,Golem.Core,Log,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Log.cs,Video,The length of the statement  "                String path = Path.GetFullPath(Path.Combine(Config.settings.reportSettings.reportPath' "Video_" + Common.GetShortTestName(90) + DateTime.Now.ToString("HHms") + ".flv")); " is 169.
Long Statement,Golem.Core,Log,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Log.cs,Html,The length of the statement  "                String path = Path.GetFullPath(Path.Combine(Config.settings.reportSettings.reportPath' "html" + DateTime.Now.ToString("HHms") + ".html")); " is 138.
Long Statement,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,CreateHtmlReport,The length of the statement  "            gen.GenerateLogStatus(testData.Result.Outcome.Status.ToString()'testData.Result.Message'testData.Result.StackTrace' testData.ScreenshotPath'testData.VideoPath); " is 160.
Long Statement,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,SetTestExecutionSettings,The length of the statement  "//            TestAssemblyExecutionParameters.DegreeOfParallelism = Config.settings.runTimeSettings.DegreeOfParallelism; " is 120.
Long Statement,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,GetCurrentClassName,The length of the statement  "                if ((stackFrame.GetMethod().ReflectedType.BaseType == typeof (BasePageObject) || stackFrame.GetMethod().ReflectedType.BaseType == typeof(BaseComponent)) && " is 155.
Long Statement,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,GetCurrentMethodName,The length of the statement  "                if ((stackFrame.GetMethod().ReflectedType.IsSubclassOf(typeof (BasePageObject)) || stackFrame.GetMethod().ReflectedType.IsSubclassOf(typeof(BaseComponent))) && " is 159.
Long Statement,Golem.Purple.PurpleElements,PurpleWindow,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleWindow.cs,FindRunningProcess,The length of the statement  "                //SetWindowPos(app.MainWindowHandle' new IntPtr(-1)' 0' 0' 0' 0' 3); //This should bring the application to the front once it starts " is 132.
Long Statement,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,FindElement,The length of the statement  "                    Log.Message($"{TestBase.GetCurrentClassAndMethodName()}: Looking for Child ({by}) of Element {this.name} ({this.@by})"); " is 120.
Long Statement,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,FindElements,The length of the statement  "            Log.Message($"{TestBase.GetCurrentClassAndMethodName()}: Looking for Children ({by}) of Element {this.name} ({this.@by})"); " is 123.
Long Statement,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,SendKeys,The length of the statement  "                throw new InvalidOperationException("Cannot sendKeys that element' please verify it is an input or text field" + e.Message); " is 124.
Long Statement,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,FindElement,The length of the statement  "                    Log.Message($"{TestBase.GetCurrentClassAndMethodName()}: Looking for Child {childElement.name} ({childElement.@by}) of Element {this.name} ({this.@by})"); " is 154.
Long Statement,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,FindElement,The length of the statement  "            throw new NoSuchElementException($"Child Element {childElement.name} ({childElement.@by}) of {this.name} ({this.@by}) was not present after {timeoutSec} seconds"); " is 163.
Long Statement,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,GetElement,The length of the statement  "//                var message = $"Could not find element '{name}' ({@by}) after {timeoutSec} seconds {GetFrameMessage()}"; " is 122.
Long Statement,Golem.WebDriver,WebDriverBrowser,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverBrowser.cs,LaunchRemoteBrowser,The length of the statement  "                WebDriverTestBase.testData.browserInfo.capabilities.SetCapability("username"' Config.settings.sauceLabsSettings.SauceLabsUsername); " is 131.
Long Statement,Golem.WebDriver,WebDriverBrowser,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverBrowser.cs,LaunchRemoteBrowser,The length of the statement  "                WebDriverTestBase.testData.browserInfo.capabilities.SetCapability("accessKey"' Config.settings.sauceLabsSettings.SauceLabsAPIKey); " is 130.
Long Statement,Golem.Rest,Tests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\Tests.cs,TestCRUD,The length of the statement  "                    @"<CUSTOMER><ID>201312</ID><FIRSTNAME>Nikolai</FIRSTNAME><LASTNAME>Tesla</LASTNAME><STREET>111 Madison Avenue.</STREET><CITY>New York</CITY></CUSTOMER>") " is 153.
Long Statement,Golem.Rest,Tests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\Tests.cs,TestCRUD,The length of the statement  "                    @"<CUSTOMER><ID>201312</ID><FIRSTNAME>Nikolai</FIRSTNAME><LASTNAME>Tesla</LASTNAME><STREET>111 Madison Avenue.</STREET><CITY>New York</CITY></CUSTOMER>") " is 153.
Long Statement,Golem.Rest,Tests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\Tests.cs,TestCRUD,The length of the statement  "                    @"<CUSTOMER><ID>201312</ID><FIRSTNAME>Einstein</FIRSTNAME><LASTNAME>Albert</LASTNAME><STREET>111 Madison Avenue.</STREET><CITY>New York</CITY></CUSTOMER>") " is 155.
Complex Conditional,Golem.Rest.OAuth,OAuth_Token_Keeper,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\OAuth\OAuth_Token_Keeper.cs,checkvalues,The conditional expression  "oauth_token != null && oauth_token_secret != null && oauth_consumer_key != null &&                  oauth_consumer_secret != null && oauth_signature_method != null && resource_url != null &&                  oauth_version != null"  is complex.
Virtual Method Call from Constructor,Golem.WebDriver,BaseComponent,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\BaseComponent.cs,BaseComponent,The constructor "BaseComponent" calls a virtual method "WaitForElements".
Virtual Method Call from Constructor,Golem.WebDriver,BaseComponent,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\BaseComponent.cs,BaseComponent,The constructor "BaseComponent" calls a virtual method "WaitForElements".
Virtual Method Call from Constructor,Golem.WebDriver,BaseComponent,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\BaseComponent.cs,BaseComponent,The constructor "BaseComponent" calls a virtual method "WaitForElements".
Virtual Method Call from Constructor,Golem.WebDriver,BaseComponent,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\BaseComponent.cs,BaseComponent,The constructor "BaseComponent" calls a virtual method "WaitForElements".
Virtual Method Call from Constructor,Golem.WebDriver,BaseComponent,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\BaseComponent.cs,BaseComponent,The constructor "BaseComponent" calls a virtual method "WaitForElements".
Virtual Method Call from Constructor,Golem.WebDriver,BaseComponent,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\BaseComponent.cs,BaseComponent,The constructor "BaseComponent" calls a virtual method "WaitForElements".
Virtual Method Call from Constructor,Golem.WebDriver,BasePageObject,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\BasePageObject.cs,BasePageObject,The constructor "BasePageObject" calls a virtual method "WaitForElements".
Virtual Method Call from Constructor,Golem.WebDriver,BasePageObject,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\BasePageObject.cs,BasePageObject,The constructor "BasePageObject" calls a virtual method "WaitForElements".
Empty Catch Block,Golem.Core,ProcessRunner,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\ProcessRunner.cs,StopProcess,The method has an empty catch block.
Empty Catch Block,Golem.Core,Common,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Common.cs,KillProcess,The method has an empty catch block.
Empty Catch Block,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,QuitProxyServer,The method has an empty catch block.
Empty Catch Block,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,QuitProxy,The method has an empty catch block.
Empty Catch Block,Golem.Proxy,BrowserMobProxy,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Proxy\BrowserMobProxy.cs,KillOldProxy,The method has an empty catch block.
Empty Catch Block,Golem.Purple,Extensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\Extensions.cs,WaitForVisible,The method has an empty catch block.
Empty Catch Block,Golem.Purple.PurpleElements,PurpleWindow,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleWindow.cs,SetVisualState,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,FindElement,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,IsPresent,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,IsDisplayed,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,IsDisplayed,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,FindElement,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,EventedWebDriver,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\EventedWebDriver.cs,driver_ElementValueChanging,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,EventedWebDriver,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\EventedWebDriver.cs,driver_ElementValueChanged,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,Unhighlight,The method has an empty catch block.
Empty Catch Block,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,SelectNewWindow,The method has an empty catch block.
Empty Catch Block,Golem.Rest,RestTestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\RestTestBase.cs,StartProxy,The method has an empty catch block.
Magic Number,Golem.Core,Log,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Log.cs,Video,The following statement contains a magic number: try              {                  String path = Path.GetFullPath(Path.Combine(Config.settings.reportSettings.reportPath' "Video_" + Common.GetShortTestName(90) + DateTime.Now.ToString("HHms") + ".flv"));                  FileStream fs = new FileStream(path' FileMode.Create);                  video.Save(fs);                  Message(path' ActionList.Action.ActionType.Video);                  return path;              }              catch (Exception e)              {                  TestContext.WriteLine(e.Message);                  return "";              }
Magic Number,Golem.Core,Common,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Common.cs,CreateDummyFile,The following statement contains a magic number: if (!File.Exists(filepath))              {                  using (var fs = File.Create(filepath))                  {                      for (byte i = 0; i < 100; i++)                      {                          fs.WriteByte(i);                      }                        fs.Close();                  }              }
Magic Number,Golem.Core,ImageCompareSettings,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Config.cs,ImageCompareSettings,The following statement contains a magic number: accuracy = float.Parse(Config.GetConfigValue("Accuracy"' "1"))/100;
Magic Number,Golem.Core,RuntimeSettings,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\Config.cs,GetBrowserInfo,The following statement contains a magic number: for (var i = 1; i < 10; i++)                  {                      browser = Config.GetConfigValue("Browser" + i' "null");                      if (browser != "null")                      {                          caps = Config.GetConfigValue("Browser" + i + "Capabilities"' "null");                          hosts.Add(new BrowserInfo(WebDriverBrowser.getBrowserFromString(browser)' caps));                      }                  }
Magic Number,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,GetHarFile,The following statement contains a magic number: try              {                  if (Config.settings.httpProxy.startProxy)                  {                      var name = Common.GetShortTestName(80);                      proxy.SaveHarToFile();                      Log.FilePath(proxy.GetHarFilePath());                      proxy.CreateHar();                  }              }              catch (Exception e)              {                  throw new Exception("Error caught getting BMP Har File : " + e.Message);              }
Magic Number,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,StartVideoRecording,The following statement contains a magic number: try              {                  if (Config.settings.reportSettings.videoRecordingOnError)                  {                      testData.recorder = Capture.StartRecording(new CaptureParameters { Zoom = .25 }' 5);                      testData.recorder.OverlayManager.AddOverlay(overlay);                  }              }              catch (Exception e)              {                  Log.Failure("Exception caught while trying to start video recording : " + e.Message);              }
Magic Number,Golem.Core,TestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Core\TestBase.cs,StartVideoRecording,The following statement contains a magic number: try              {                  if (Config.settings.reportSettings.videoRecordingOnError)                  {                      testData.recorder = Capture.StartRecording(new CaptureParameters { Zoom = .25 }' 5);                      testData.recorder.OverlayManager.AddOverlay(overlay);                  }              }              catch (Exception e)              {                  Log.Failure("Exception caught while trying to start video recording : " + e.Message);              }
Magic Number,Golem.Proxy,BrowserMobProxy,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Proxy\BrowserMobProxy.cs,WaitForServerToStart,The following statement contains a magic number: for (var i = 0; i < timeout; i++)              {                  request.Method = Method.GET;                  request.Resource = "/";                  response = client.Execute(request);                  if (response.StatusCode == HttpStatusCode.NotFound)                  {                      return true;                  }                  Thread.Sleep(1000);              }
Magic Number,Golem.Proxy,BrowserMobProxy,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Proxy\BrowserMobProxy.cs,GetHarFilePath,The following statement contains a magic number: return Directory.GetCurrentDirectory()                     + Path.DirectorySeparatorChar                     + "HTTP_Traffic_" + Common.GetShortTestName(80) + ".har";
Magic Number,Golem.Proxy,BrowserMobProxy,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Proxy\BrowserMobProxy.cs,VerifyNoErrorsCodes,The following statement contains a magic number: var errors =                  har.Log.Entries.Where(entry => entry.Response.Status > 400 && entry.Response.Status < 599).ToList();
Magic Number,Golem.Proxy,BrowserMobProxy,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Proxy\BrowserMobProxy.cs,VerifyNoErrorsCodes,The following statement contains a magic number: var errors =                  har.Log.Entries.Where(entry => entry.Response.Status > 400 && entry.Response.Status < 599).ToList();
Magic Number,Golem.Purple,ImageManipulation,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\ImageManipulation.cs,GetLastStoredSnapshotIndex,The following statement contains a magic number: if (files.Length > 0)              {                  var sortedFiles = from s in files orderby s descending select s;                  var latestFile = sortedFiles.ElementAt(0);                  index = int.Parse(latestFile.Substring(latestFile.IndexOf("-Snapshot") + 9' 2));              }
Magic Number,Golem.Purple,ImageManipulation,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\ImageManipulation.cs,GetLastStoredSnapshotIndex,The following statement contains a magic number: if (files.Length > 0)              {                  var sortedFiles = from s in files orderby s descending select s;                  var latestFile = sortedFiles.ElementAt(0);                  index = int.Parse(latestFile.Substring(latestFile.IndexOf("-Snapshot") + 9' 2));              }
Magic Number,Golem.Purple,ImageManipulation,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\ImageManipulation.cs,ImagesMatch,The following statement contains a magic number: differenceString = (difference*100).ToString("0.##\\%");
Magic Number,Golem.Purple,ImageManipulation,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\ImageManipulation.cs,ImagesMatch,The following statement contains a magic number: differenceString = (difference*100).ToString("0.##\\%");
Magic Number,Golem.Purple,ImageManipulation,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\ImageManipulation.cs,ImagesMatchReturnValue,The following statement contains a magic number: differenceString = (difference*100).ToString("0.##");
Magic Number,Golem.Purple,ElementImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\ElementImageComparer.cs,ImagesMatch,The following statement contains a magic number: differenceString = (difference*100).ToString("0.##\\%");
Magic Number,Golem.Purple.PurpleCore,Locator,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleCore\Locator.cs,WaitForElementAvailable,The following statement contains a magic number: while (elementAvailable == null)              {                  try                  {                      elementAvailable = ByPurplePath.FindElement(purplePath);                  }                  catch (Exception e)                  {                      Thread.Sleep(50);                  }                  if (notfound)                  {                      if (PurpleTestBase.PerfLogging)                      {                          PurplePerformanceLogger.AddEntry(name' purplePath'                              Config.settings.purpleSettings.Purple_ElementTimeoutWaitSeconds' 0);                      }                      break;                  }              }
Magic Number,Golem.Purple.PurpleCore,RectX,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleCore\RectX.cs,Center,The following statement contains a magic number: return new Point((int) (topLeftX + (topRightX - topLeftX)/2)' (int) (rect.Top + (rect.Bottom - rect.Top)/2));
Magic Number,Golem.Purple.PurpleCore,RectX,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleCore\RectX.cs,Center,The following statement contains a magic number: return new Point((int) (topLeftX + (topRightX - topLeftX)/2)' (int) (rect.Top + (rect.Bottom - rect.Top)/2));
Magic Number,Golem.Purple.PurpleElements,PurpleElementBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleElementBase.cs,Click,The following statement contains a magic number: if (_UIAElement != null)              {                  var point = _UIAElement.GetClickablePoint();                  SetCursorPos((int) point.X' (int) point.Y);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTUP' 0' 0' 0' 0);              }              else              {                  if (!PurpleElement.Current.IsOffscreen)                  {                      if (_UIAElement.Current.IsEnabled)                      {                          Click();                      }                  }              }
Magic Number,Golem.Purple.PurpleElements,PurpleElementBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleElementBase.cs,Click,The following statement contains a magic number: if (_UIAElement != null)              {                  var point = _UIAElement.GetClickablePoint();                  SetCursorPos((int) point.X' (int) point.Y);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTUP' 0' 0' 0' 0);              }              else              {                  if (!PurpleElement.Current.IsOffscreen)                  {                      if (_UIAElement.Current.IsEnabled)                      {                          Click();                      }                  }              }
Magic Number,Golem.Purple.PurpleElements,PurpleElementBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleElementBase.cs,DoubleLeftClick,The following statement contains a magic number: if (_UIAElement != null)              {                  var point = PurpleElement.GetClickablePoint();                  SetCursorPos((int) point.X' (int) point.Y);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTUP' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTUP' 0' 0' 0' 0);              }              else              {                  if (!PurpleElement.Current.IsOffscreen)                  {                      if (_UIAElement.Current.IsEnabled)                      {                          DoubleLeftClick();                      }                  }              }
Magic Number,Golem.Purple.PurpleElements,PurpleElementBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleElementBase.cs,DoubleLeftClick,The following statement contains a magic number: if (_UIAElement != null)              {                  var point = PurpleElement.GetClickablePoint();                  SetCursorPos((int) point.X' (int) point.Y);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTUP' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTUP' 0' 0' 0' 0);              }              else              {                  if (!PurpleElement.Current.IsOffscreen)                  {                      if (_UIAElement.Current.IsEnabled)                      {                          DoubleLeftClick();                      }                  }              }
Magic Number,Golem.Purple.PurpleElements,PurpleElementBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleElementBase.cs,DoubleLeftClick,The following statement contains a magic number: if (_UIAElement != null)              {                  var point = PurpleElement.GetClickablePoint();                  SetCursorPos((int) point.X' (int) point.Y);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTUP' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_LEFTUP' 0' 0' 0' 0);              }              else              {                  if (!PurpleElement.Current.IsOffscreen)                  {                      if (_UIAElement.Current.IsEnabled)                      {                          DoubleLeftClick();                      }                  }              }
Magic Number,Golem.Purple.PurpleElements,PurpleElementBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleElementBase.cs,RightClick,The following statement contains a magic number: if (_UIAElement != null)              {                  var point = _UIAElement.GetClickablePoint();                  SetCursorPos((int) point.X' (int) point.Y);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_RIGHTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_RIGHTUP' 0' 0' 0' 0);              }              else              {                  if (!PurpleElement.Current.IsOffscreen)                  {                      if (_UIAElement.Current.IsEnabled)                      {                          RightClick();                      }                  }              }
Magic Number,Golem.Purple.PurpleElements,PurpleElementBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleElementBase.cs,RightClick,The following statement contains a magic number: if (_UIAElement != null)              {                  var point = _UIAElement.GetClickablePoint();                  SetCursorPos((int) point.X' (int) point.Y);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_RIGHTDOWN' 0' 0' 0' 0);                  Thread.Sleep(50);                  mouse_event(WindowsConstants.MOUSEEVENTF_RIGHTUP' 0' 0' 0' 0);              }              else              {                  if (!PurpleElement.Current.IsOffscreen)                  {                      if (_UIAElement.Current.IsEnabled)                      {                          RightClick();                      }                  }              }
Magic Number,Golem.Purple.PurpleElements,PurpleMenu,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleMenu.cs,Click,The following statement contains a magic number: for (var x = 0; x < menuNums - 1; x++)              {                  menu = PurpleElement.FindFirst(TreeScope.Descendants'                      new PropertyCondition(AutomationElement.NameProperty' _pathtoMenuSelection[x]));                  ((ExpandCollapsePattern) menu.GetCurrentPattern(ExpandCollapsePattern.Pattern)).Expand();                  Thread.Sleep(50);              }
Magic Number,Golem.Purple.PurpleElements,PurpleWindow,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleWindow.cs,EndProcess,The following statement contains a magic number: foreach (var process in processes)              {                  process.Kill();                  Thread.Sleep(2000);                  //process.CloseMainWindow();                  //PurpleButton dontsave = new PurpleButton("Save Dialog: No"' "/LifeQuest™ Pipeline/Save Project?/Save Project?/No");                  //dontsave.Invoke();              }
Magic Number,Golem.Purple.PurpleElements,PurpleWindow,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Purple\PurpleElements\PurpleWindow.cs,GetWindowPattern,The following statement contains a magic number: if (false == windowPattern.WaitForInputIdle(10000))              {                  // Object not responding in a timely manner                   return null;              }
Magic Number,Golem.Rest.OAuth,OAuth_Request_Builder,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\OAuth\OAuth_Token_Keeper.cs,setTimestamp,The following statement contains a magic number: var timeSpan = DateTime.UtcNow                             - new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,TwitterOAuth,simpleTwitterHandler,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\OAuth\simpleTwitterHandler.cs,postMessage,The following statement contains a magic number: var timeSpan = DateTime.UtcNow                             - new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,TwitterOAuth,simpleTwitterHandler,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\OAuth\simpleTwitterHandler.cs,getTweets,The following statement contains a magic number: var timeSpan = DateTime.UtcNow                             - new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,TwitterOAuth,simpleTwitterHandler,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\OAuth\simpleTwitterHandler.cs,humanTweet,The following statement contains a magic number: var created = machineTweet.IndexOf("{\"created_at\":") + 15;
Magic Number,TwitterOAuth,simpleTwitterHandler,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\OAuth\simpleTwitterHandler.cs,humanTweet,The following statement contains a magic number: var tweetid = machineTweet.IndexOf("\"id\":"' created) + 5;
Magic Number,TwitterOAuth,simpleTwitterHandler,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\OAuth\simpleTwitterHandler.cs,humanTweet,The following statement contains a magic number: var tweet = machineTweet.LastIndexOf("\"text\":\"") + 8;
Magic Number,TwitterOAuth,simpleTwitterHandler,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\OAuth\simpleTwitterHandler.cs,humanTweet,The following statement contains a magic number: var createdcount = (tweetid - 7) - created;
Magic Number,Golem.Tests,DesiredCapibilitiesTests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\DesiredCapibilitiesTests.cs,TestSauceLabs,The following statement contains a magic number: element.WaitUntil(10).Visible();
Magic Number,Golem.Tests,SauceLabsTests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\SauceLabsTests.cs,TestSauceLabs,The following statement contains a magic number: element.WaitUntil(10).Visible();
Magic Number,Golem.Tests,TestDriver,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\TestDriver.cs,TestWebElementExtensions,The following statement contains a magic number: driver.WaitForPresent(By.Name("q")' 20).Highlight();
Magic Number,Golem.Tests,ConfigTests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\ConfigTests.cs,init,The following statement contains a magic number: Config.settings.runTimeSettings.ElementTimeoutSec = 27;
Magic Number,Golem.Tests,ConfigTests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\ConfigTests.cs,TestConfigSettingsAreModifiyable,The following statement contains a magic number: Config.settings.runTimeSettings.ElementTimeoutSec = 1234;
Magic Number,Golem.Tests,ConfigTests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\ConfigTests.cs,TestConfigSettingsAreModifiyable,The following statement contains a magic number: Assert.AreEqual(Config.settings.runTimeSettings.ElementTimeoutSec' 1234);
Magic Number,Golem.Tests,ConfigTests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\ConfigTests.cs,TestInit,The following statement contains a magic number: Assert.AreEqual(Config.settings.runTimeSettings.ElementTimeoutSec' 27);
Magic Number,Golem.Tests,ElementTests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\ElementTests.cs,TestDSL,The following statement contains a magic number: element.WaitUntil(20).Visible().Text = "Golem";
Magic Number,Golem.Tests,ElementTests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\ElementTests.cs,TestDSL,The following statement contains a magic number: element.Verify(20).Value("Golem");
Magic Number,Golem.Tests,TestMSPaint6,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\TestMSPaint6.cs,setup,The following statement contains a magic number: Config.settings.purpleSettings.Purple_ElementTimeoutWaitSeconds = 30;
Magic Number,Golem.Tests,TestProxy,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Tests\TestProxy.cs,TestProxyFilter,The following statement contains a magic number: Assert.AreEqual(10' entries.Count);
Magic Number,Golem.WebDriver,EventFiringWebElement,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\EventFiringWebDriver.cs,FindElement,The following statement contains a magic number: try                  {                      var e = new FindElementEventArgs(ParentDriver.WrappedDriver' WrappedElement' by);                      ParentDriver.OnFindingElement(e);                      WrappedElement.Highlight(100'"green");                      var element = WrappedElement.FindElement(by);                      ParentDriver.OnFindElementCompleted(e);                      var f = new FoundElementEventArgs(ParentDriver.WrappedDriver' element' by);                      ParentDriver.OnFoundElement(f);                      return ParentDriver.WrapElement(element);                  }                  catch (Exception ex)                  {                      ParentDriver.OnException(new WebDriverExceptionEventArgs(ParentDriver' ex));                      throw;                  }
Magic Number,Golem.WebDriver,EventFiringWebElement,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\EventFiringWebDriver.cs,FindElements,The following statement contains a magic number: try                  {                      var e = new FindElementEventArgs(ParentDriver.WrappedDriver' WrappedElement' by);                      ParentDriver.OnFindingElement(e);                      WrappedElement.Highlight(100' "green");                      var elements = WrappedElement.FindElements(by);                      ParentDriver.OnFindElementCompleted(e);                      foreach (var underlyingElement in elements)                      {                          var webElement = ParentDriver.WrapElement(underlyingElement);                          list.Add(webElement);                          var f = new FoundElementEventArgs(ParentDriver.WrappedDriver' webElement' by);                          ParentDriver.OnFoundElement(f);                      }                  }                  catch (Exception ex)                  {                      ParentDriver.OnException(new WebDriverExceptionEventArgs(ParentDriver' ex));                      throw;                  }
Magic Number,Golem.WebDriver,WebDriverRecorder,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverRecorder.cs,WebDriverRecorder,The following statement contains a magic number: if (Config.settings.runTimeSettings.Browser == WebDriverBrowser.Browser.Android)              {                  screensize = new Size(300' 500);              }              else              {                  screensize = new Size(1024' 768);              }
Magic Number,Golem.WebDriver,WebDriverRecorder,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverRecorder.cs,WebDriverRecorder,The following statement contains a magic number: if (Config.settings.runTimeSettings.Browser == WebDriverBrowser.Browser.Android)              {                  screensize = new Size(300' 500);              }              else              {                  screensize = new Size(1024' 768);              }
Magic Number,Golem.WebDriver,WebDriverRecorder,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverRecorder.cs,WebDriverRecorder,The following statement contains a magic number: if (Config.settings.runTimeSettings.Browser == WebDriverBrowser.Browser.Android)              {                  screensize = new Size(300' 500);              }              else              {                  screensize = new Size(1024' 768);              }
Magic Number,Golem.WebDriver,WebDriverRecorder,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverRecorder.cs,WebDriverRecorder,The following statement contains a magic number: if (Config.settings.runTimeSettings.Browser == WebDriverBrowser.Browser.Android)              {                  screensize = new Size(300' 500);              }              else              {                  screensize = new Size(1024' 768);              }
Magic Number,Golem.WebDriver,WebDriverRecorder,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverRecorder.cs,WebDriverRecorder,The following statement contains a magic number: frameDelayMs = 1000/fps;
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,ChildElement,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  condition = element.FindElements(bylocator).Count > 0;                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,Present,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  condition = element.Present;                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,Visible,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  condition = element.Displayed;                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,Count,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var newText = element.Text;                  condition = (element.Present) && (element.Count() == value);                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,CountGreaterThan,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var newText = element.Text;                  condition = (element.Present) && (element.Count() > value);                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,CountLessThan,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var newText = element.Text;                  condition = (element.Present) && (element.Count() < value);                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,Text,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var newText = element.Text;                  condition = (element.Present) && (element.Text.Contains(text));                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,Value,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  condition = (element.Present) && (element.GetAttribute("value").Contains(text));                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,Attribute,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  condition = (element.Present) && (element.GetAttribute(attribute).Contains(value));                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,CSS,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  condition = (element.Present) && (element.GetAttribute(attribute).Contains(value));                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,Selected,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  condition = (element.Present) && (element.Selected);                  if (condition == isTrue)                  {                      Log.Message("!--Verification Passed " + GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,ElementVerification,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\ElementVerification.cs,Image,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  condition = (element.Present) && (element.Images.ImagesMatch());                  if (condition == isTrue)                  {  //                    TestContext.CurrentContext.IncrementAssertCount();                      Log.Message(GetSuccessMessage());                      return element;                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,FindElement,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  try                  {                      Log.Message($"{TestBase.GetCurrentClassAndMethodName()}: Looking for Child ({by}) of Element {this.name} ({this.@by})");                      var eles = element.FindElements(by);                      if (eles.Count > 0)                          return eles[0];                      Common.Delay(1000);                  }                  catch (StaleElementReferenceException e)                  {                  }              }
Magic Number,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,IsPresent,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  try                  {                      var eles = driver.FindElements(by);                      if (eles.Count > 0)                          return true;                      Common.Delay(1000);                  }                  catch (StaleElementReferenceException e)                  {                  }              }
Magic Number,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,IsDisplayed,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  try                  {                      var eles = driver.FindElements(by).ToList();                      if (eles.Any(ele => ele.Displayed))                      {                          return true;                      }                      Common.Delay(1000);                  }                  catch (StaleElementReferenceException e)                  {                  }                  catch (InvalidOperationException e)                  {                                        }              }
Magic Number,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,FindElement,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  try                  {                      Log.Message($"{TestBase.GetCurrentClassAndMethodName()}: Looking for Child {childElement.name} ({childElement.@by}) of Element {this.name} ({this.@by})");                      var eles = element.FindElements(childElement.by);                      if (eles.Count > 0)                          return eles[0];                      Common.Delay(1000);                  }                  catch (StaleElementReferenceException e)                  {                  }              }
Magic Number,Golem.WebDriver,Element,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Element.cs,SetText,The following statement contains a magic number: if (value != element_value)              {                  Clear();                  Thread.Sleep(1000);                  SendKeys(value);              }
Magic Number,Golem.WebDriver,EventedWebDriver,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\EventedWebDriver.cs,driver_ElementValueChanging,The following statement contains a magic number: try              {                  driver.WaitForJQuery();                  e.Element.Highlight(30' "red");              }              catch (Exception)              {              }
Magic Number,Golem.WebDriver,EventedWebDriver,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\EventedWebDriver.cs,driver_ElementClicking,The following statement contains a magic number: e.Element.Highlight(30' "red");
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,GetHtml,The following statement contains a magic number: try              {                  var html = element.GetAttribute("innerHTML").Replace("\r\n"' "");                  if (html.Length <= length)                      return html;                  var halfLength = length/2;                  var start = html.Substring(0' halfLength);                  var end = html.Substring((html.Length - halfLength)' halfLength);                  return string.Format("{0}...{1}"' start' end);              }              catch (Exception e)              {                  return "HTML Not found " + e.Message;              }
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,Highlight,The following statement contains a magic number: try              {                  var jsDriver = ((IJavaScriptExecutor) ((IWrapsDriver) element).WrappedDriver);                  var originalElementBorder = (string) jsDriver.ExecuteScript("return arguments[0].style.background"' element);                  jsDriver.ExecuteScript(string.Format("arguments[0].style.background='{0}'; return;"' color)' element);                  if (ms >= 0)                  {                      if (ms > 1000)                      {                          var bw = new BackgroundWorker();                          bw.DoWork += (obj' e) => Unhighlight(element' originalElementBorder' ms);                          bw.RunWorkerAsync();                      }                      else                      {                          Unhighlight(element' originalElementBorder' ms);                      }                  }              }              catch (Exception e)              {                  Log.Warning(e.Message);              }
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,WaitForJQuery,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var value = driver.ExecuteJavaScript("(typeof jQuery === \"undefined\" || jQuery.active==0);");                  bool condition = (bool) value;                  if (condition == true)                  {                      return;                  }                  else                  {                      Log.Message("Waiting for JQuery");                      Common.Delay(1000);                  }                                }
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,MouseOver,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,WaitForPresent,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var eles = element.FindElements(by);                  if (eles.Count > 0)                  {                      var ele = eles.FirstOrDefault(x => x.Displayed);                      if (ele == null)                      {                          return eles[0];                      }                      else                      {                          return ele;                      }                  }                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,WaitForPresent,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var eles = driver.FindElements(by);                  if (eles.Count > 0)                  {                      var ele = eles.FirstOrDefault(x => x.Displayed);                      if (ele == null)                      {                          return eles[0];                      }                      else                      {                          return ele;                      }                  }                                                              Common.Delay(1000);              }
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,WaitForNotPresent,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var eles = driver.FindElements(by);                  if (eles.Count == 0)                      return;                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,WaitForVisible,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var eles = driver.FindElements(by).Where(x => x.Displayed).ToList();                  if (eles.Count > 0)                      return eles.FirstOrDefault(x => x.Displayed);                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver,WebDriverExtensions,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverExtensions.cs,WaitForNotVisible,The following statement contains a magic number: for (var now = DateTime.Now; now < then; now = DateTime.Now)              {                  var eles = driver.FindElements(by).Where(x => x.Displayed).ToList();                  if (eles.Count == 0)                      return;                  Common.Delay(1000);              }
Magic Number,Golem.WebDriver.Elements.Images,ElementImages,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ElementImages.cs,ImagesMatch,The following statement contains a magic number: differenceString = (difference*100).ToString("0.##\\%");
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Histogram,The following statement contains a magic number: Red = new byte[256];
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Histogram,The following statement contains a magic number: Green = new byte[256];
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Histogram,The following statement contains a magic number: Blue = new byte[256];
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,CalculateHistogram,The following statement contains a magic number: var newBmp = (Bitmap) Bitmap.Resize(16' 16);
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,CalculateHistogram,The following statement contains a magic number: var newBmp = (Bitmap) Bitmap.Resize(16' 16);
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: var oneColorHeight = 100;
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: var margin = 10;
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: var histogramBitmap = new Bitmap(276' oneColorHeight*3 + margin*4);
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: var histogramBitmap = new Bitmap(276' oneColorHeight*3 + margin*4);
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: var histogramBitmap = new Bitmap(276' oneColorHeight*3 + margin*4);
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  for (var color = 0; color < 3; color++)                  {                      g.DrawLine(p[color]' margin + i' yOffset*(color + 1)' margin + i'                          yOffset*(color + 1) - (values[color][i]/maxValues[color])*oneColorHeight);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  for (var color = 0; color < 3; color++)                  {                      g.DrawLine(p[color]' margin + i' yOffset*(color + 1)' margin + i'                          yOffset*(color + 1) - (values[color][i]/maxValues[color])*oneColorHeight);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: for (var i = 0; i < 3; i++)              {                  g.DrawString(p[i].Color.ToKnownColor() + "' max value: " + maxValues[i]' SystemFonts.SmallCaptionFont'                      Brushes.Silver' margin + 11' yOffset*i + margin + margin + 1);                  g.DrawString(p[i].Color.ToKnownColor() + "' max value: " + maxValues[i]' SystemFonts.SmallCaptionFont'                      Brushes.Black' margin + 10' yOffset*i + margin + margin);                  g.DrawRectangle(p[i]' margin' yOffset*i + margin' 256' oneColorHeight);              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: for (var i = 0; i < 3; i++)              {                  g.DrawString(p[i].Color.ToKnownColor() + "' max value: " + maxValues[i]' SystemFonts.SmallCaptionFont'                      Brushes.Silver' margin + 11' yOffset*i + margin + margin + 1);                  g.DrawString(p[i].Color.ToKnownColor() + "' max value: " + maxValues[i]' SystemFonts.SmallCaptionFont'                      Brushes.Black' margin + 10' yOffset*i + margin + margin);                  g.DrawRectangle(p[i]' margin' yOffset*i + margin' 256' oneColorHeight);              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: for (var i = 0; i < 3; i++)              {                  g.DrawString(p[i].Color.ToKnownColor() + "' max value: " + maxValues[i]' SystemFonts.SmallCaptionFont'                      Brushes.Silver' margin + 11' yOffset*i + margin + margin + 1);                  g.DrawString(p[i].Color.ToKnownColor() + "' max value: " + maxValues[i]' SystemFonts.SmallCaptionFont'                      Brushes.Black' margin + 10' yOffset*i + margin + margin);                  g.DrawRectangle(p[i]' margin' yOffset*i + margin' 256' oneColorHeight);              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,Visualize,The following statement contains a magic number: for (var i = 0; i < 3; i++)              {                  g.DrawString(p[i].Color.ToKnownColor() + "' max value: " + maxValues[i]' SystemFonts.SmallCaptionFont'                      Brushes.Silver' margin + 11' yOffset*i + margin + margin + 1);                  g.DrawString(p[i].Color.ToKnownColor() + "' max value: " + maxValues[i]' SystemFonts.SmallCaptionFont'                      Brushes.Black' margin + 10' yOffset*i + margin + margin);                  g.DrawRectangle(p[i]' margin' yOffset*i + margin' 256' oneColorHeight);              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,ToString,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  sb.Append(string.Format("RGB {0'3} : "' i) +                            string.Format("({0'3}'{1'3}'{2'3})"' Red[i]' Green[i]' Blue[i]));                  sb.AppendLine();              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  diffRed += Math.Pow(Red[i] - histogram.Red[i]' 2);                  diffGreen += Math.Pow(Green[i] - histogram.Green[i]' 2);                  diffBlue += Math.Pow(Blue[i] - histogram.Blue[i]' 2);              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  diffRed += Math.Pow(Red[i] - histogram.Red[i]' 2);                  diffGreen += Math.Pow(Green[i] - histogram.Green[i]' 2);                  diffBlue += Math.Pow(Blue[i] - histogram.Blue[i]' 2);              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  diffRed += Math.Pow(Red[i] - histogram.Red[i]' 2);                  diffGreen += Math.Pow(Green[i] - histogram.Green[i]' 2);                  diffBlue += Math.Pow(Blue[i] - histogram.Blue[i]' 2);              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  diffRed += Math.Pow(Red[i] - histogram.Red[i]' 2);                  diffGreen += Math.Pow(Green[i] - histogram.Green[i]' 2);                  diffBlue += Math.Pow(Blue[i] - histogram.Blue[i]' 2);              }
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: diffRed /= 256;
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: diffGreen /= 256;
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: diffBlue /= 256;
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: const double maxDiff = 512;
Magic Number,Golem.WebDriver.Elements.Images,Histogram,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\Histogram.cs,GetVariance,The following statement contains a magic number: return (float) (diffRed/maxDiff + diffGreen/maxDiff + diffBlue/maxDiff)/3;
Magic Number,Golem.WebDriver.Elements.Images,ImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageComparer.cs,GetHash,The following statement contains a magic number: var newImage = new Bitmap(image.Resize(8' 8).GetGrayScaleVersion());
Magic Number,Golem.WebDriver.Elements.Images,ImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageComparer.cs,GetHash,The following statement contains a magic number: var newImage = new Bitmap(image.Resize(8' 8).GetGrayScaleVersion());
Magic Number,Golem.WebDriver.Elements.Images,ImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageComparer.cs,GetHashImage,The following statement contains a magic number: var newImage = new Bitmap(image.Resize(8' 8).GetGrayScaleVersion());
Magic Number,Golem.WebDriver.Elements.Images,ImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageComparer.cs,GetHashImage,The following statement contains a magic number: var newImage = new Bitmap(image.Resize(8' 8).GetGrayScaleVersion());
Magic Number,Golem.WebDriver.Elements.Images,ImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageComparer.cs,GetHashImage,The following statement contains a magic number: var bmp = new Bitmap(8' 8);
Magic Number,Golem.WebDriver.Elements.Images,ImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageComparer.cs,GetHashImage,The following statement contains a magic number: var bmp = new Bitmap(8' 8);
Magic Number,Golem.WebDriver.Elements.Images,ImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageComparer.cs,GetHashCodeInt64,The following statement contains a magic number: var s1 = input.Substring(0' input.Length/2);
Magic Number,Golem.WebDriver.Elements.Images,ImageComparer,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageComparer.cs,GetHashCodeInt64,The following statement contains a magic number: var s2 = input.Substring(input.Length/2);
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,ImageTool,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  brushes[i] = new SolidBrush(Color.FromArgb(i/2' 255' 2' 2));              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,ImageTool,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  brushes[i] = new SolidBrush(Color.FromArgb(i/2' 255' 2' 2));              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,ImageTool,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  brushes[i] = new SolidBrush(Color.FromArgb(i/2' 255' 2' 2));              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,ImageTool,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  brushes[i] = new SolidBrush(Color.FromArgb(i/2' 255' 2' 2));              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,ImageTool,The following statement contains a magic number: for (var i = 0; i < 256; i++)              {                  brushes[i] = new SolidBrush(Color.FromArgb(i/2' 255' 2' 2));              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: var cellsize = 16;
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: var bmp = new Bitmap(16*cellsize + 1' 16*cellsize + 1);
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: var bmp = new Bitmap(16*cellsize + 1' 16*cellsize + 1);
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: byte maxDifference = 255;
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var cellValue = differences[x' y];                      string cellText = null;                        if (absoluteText)                      {                          cellText = cellValue.ToString();                      }                      else                      {                          cellText = string.Format("{0}%"' (int) cellValue);                      }                        var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                        g.FillRectangle(brushes[colorIndex]' x*cellsize' y*cellsize' cellsize' cellsize);                      g.DrawRectangle(Pens.Blue' x*cellsize' y*cellsize' cellsize' cellsize);                      var size = g.MeasureString(cellText' DefaultFont);                      g.DrawString(cellText' DefaultFont' Brushes.Black' x*cellsize + cellsize/2 - size.Width/2 + 1'                          y*cellsize + cellsize/2 - size.Height/2 + 1);                      g.DrawString(cellText' DefaultFont' Brushes.White' x*cellsize + cellsize/2 - size.Width/2'                          y*cellsize + cellsize/2 - size.Height/2);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: var bmp = new Bitmap(16*16 + 1' 16*16 + 1);
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: var bmp = new Bitmap(16*16 + 1' 16*16 + 1);
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: var bmp = new Bitmap(16*16 + 1' 16*16 + 1);
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: var bmp = new Bitmap(16*16 + 1' 16*16 + 1);
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                      g.FillRectangle(new SolidBrush(Color.FromArgb(colorIndex' 255' 2' 2))' x*16' y*16' 16' 16);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                      g.FillRectangle(new SolidBrush(Color.FromArgb(colorIndex' 255' 2' 2))' x*16' y*16' 16' 16);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                      g.FillRectangle(new SolidBrush(Color.FromArgb(colorIndex' 255' 2' 2))' x*16' y*16' 16' 16);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                      g.FillRectangle(new SolidBrush(Color.FromArgb(colorIndex' 255' 2' 2))' x*16' y*16' 16' 16);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                      g.FillRectangle(new SolidBrush(Color.FromArgb(colorIndex' 255' 2' 2))' x*16' y*16' 16' 16);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                      g.FillRectangle(new SolidBrush(Color.FromArgb(colorIndex' 255' 2' 2))' x*16' y*16' 16' 16);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                      g.FillRectangle(new SolidBrush(Color.FromArgb(colorIndex' 255' 2' 2))' x*16' y*16' 16' 16);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferenceOverlayImage,The following statement contains a magic number: for (var y = 0; y < differences.GetLength(1); y++)              {                  for (var x = 0; x < differences.GetLength(0); x++)                  {                      var percentageDifference = (float) differences[x' y]/maxDifference;                      var colorIndex = (int) (255*percentageDifference);                      g.FillRectangle(new SolidBrush(Color.FromArgb(colorIndex' 255' 2' 2))' x*16' y*16' 16' 16);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferences,The following statement contains a magic number: var thisOne = (Bitmap) img1.Resize(16' 16).GetGrayScaleVersion();
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferences,The following statement contains a magic number: var thisOne = (Bitmap) img1.Resize(16' 16).GetGrayScaleVersion();
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferences,The following statement contains a magic number: var theOtherOne = (Bitmap) img2.Resize(16' 16).GetGrayScaleVersion();
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferences,The following statement contains a magic number: var theOtherOne = (Bitmap) img2.Resize(16' 16).GetGrayScaleVersion();
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferences,The following statement contains a magic number: var differencesRed = new byte[16' 16];
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferences,The following statement contains a magic number: var differencesRed = new byte[16' 16];
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferences,The following statement contains a magic number: for (var y = 0; y < 16; y++)              {                  for (var x = 0; x < 16; x++)                  {                      differencesRed[x' y] = (byte) Math.Abs(thisOne.GetPixel(x' y).R - theOtherOne.GetPixel(x' y).R);                  }              }
Magic Number,Golem.WebDriver.Elements.Images,ImageTool,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Images\ImageExtensions.cs,GetDifferences,The following statement contains a magic number: for (var y = 0; y < 16; y++)              {                  for (var x = 0; x < 16; x++)                  {                      differencesRed[x' y] = (byte) Math.Abs(thisOne.GetPixel(x' y).R - theOtherOne.GetPixel(x' y).R);                  }              }
Magic Number,Golem.Rest,Tests,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\Rest\Tests.cs,TestDynamicBody,The following statement contains a magic number: string id = body.CUSTOMERList.CUSTOMER[20];
Magic Number,Golem,WebDriverTestBase,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\WebDriverTestBase.cs,LogHtmlIfTestFailed,The following statement contains a magic number: try              {                  if ((Config.settings.reportSettings.htmlOnError) && (Common.GetTestOutcome() != TestStatus.Passed))                  {                      var source = driver.PageSource;                      Log.Html("HTML_" + Common.GetShortTestName(95)' source);                  }              }              catch (Exception e)              {                  Log.Warning("Error caught trying to get page source: " + e.Message);              }
Magic Number,Golem.WebDriver.Elements.Validation,ValidationElement,C:\repos\ProtoTest_ProtoTest.Golem\ProtoTest.Golem\WebDriver\Elements\Validation\ValidationElement.cs,VerifyTextValidation,The following statement contains a magic number: for (var i = 0; i <= timeoutSec; i++)              {                  if (driver.FindElements(locatorValidation).Count != 0)                  {                      if (driver.FindElement(locatorValidation).Text.Contains(text))                      {  //                        TestContext.CurrentContext.IncrementAssertCount();                          return this;                      }                  }                  else                  {                      Common.Delay(1000);                  }              }
