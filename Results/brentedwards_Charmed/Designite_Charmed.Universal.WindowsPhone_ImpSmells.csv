Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Charmed,TileInfo,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\TileInfo.cs,TileInfo,The method has 6 parameters. Parameters: tileId' displayName' logoUri' anchorElement' requestPlacement' arguments
Long Parameter List,Charmed,TileInfo,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\TileInfo.cs,TileInfo,The method has 8 parameters. Parameters: tileId' displayName' logoUri' wideLogoUri' tileSize' anchorElement' requestPlacement' arguments
Long Identifier,Charmed,ViewModelBase<TParameter>,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\ViewModelBase.cs,LoadState,The length of the parameter deserializedNavigationParameter is 31.
Long Statement,Charmed.Container,SimpleContainer,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\Container\SimpleContainer.cs,Register,The length of the statement  "				throw new DuplicateRegistrationException(string.Format("Service of Type '{0}' is already registered."' typeof(TClass).Name)); " is 125.
Long Statement,Charmed.Container,SimpleContainer,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\Container\SimpleContainer.cs,Register,The length of the statement  "				throw new DuplicateRegistrationException(string.Format("Service of Type '{0}' is already registered."' typeof(TService).Name)); " is 127.
Long Statement,Charmed.Container,SimpleContainer,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\Container\SimpleContainer.cs,RegisterInstance,The length of the statement  "				throw new DuplicateRegistrationException(string.Format("Service of Type '{0}' is already registered."' typeof(TService).Name)); " is 127.
Long Statement,Charmed.Container,SimpleContainer,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\Container\SimpleContainer.cs,Resolve,The length of the statement  "					if (mostSpecificConstructor == null || mostSpecificConstructor.GetParameters().Length < constructor.GetParameters().Length) " is 123.
Long Statement,Charmed,Storage,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\Storage.cs,SaveAsync,The length of the statement  "			var file = await ApplicationData.Current.LocalFolder.CreateFileAsync(fileName' CreationCollisionOption.ReplaceExisting); " is 120.
Magic Number,Charmed.Helpers,ButtonHelper,D:\research\architectureSmells\repos\brentedwards_Charmed\Charmed.Universal\Charmed.Universal.Shared\Helpers\ButtonHelper.cs,ButtonHelper,The following statement contains a magic number: button.Click += (o' a) =>  			{  				var methodName = GetMethodName(button);    				var dataContext = GetMethodContext(button);  				if (dataContext == null)  				{  					dataContext = button.DataContext;  				}    				var typeInfo = dataContext.GetType().GetTypeInfo();  				var method = typeInfo.GetDeclaredMethod(methodName);  				while (method == null && typeInfo.BaseType != null)  				{  					typeInfo = typeInfo.BaseType.GetTypeInfo();  					method = typeInfo.GetDeclaredMethod(methodName);  				}    				if (method == null)  				{  					throw new ArgumentException(string.Format("Method '{0}' not found on type '{1}'."' methodName' dataContext.GetType().Name));  				}  				var parms = method.GetParameters();    				object[] parameters = null;    				if (parms != null && parms.Length > 0)  				{  					parameters = new object[parms.Length];  					if (parms[0].ParameterType.GetTypeInfo().IsAssignableFrom(o.GetType().GetTypeInfo()))  					{  						// The first parameter must be the clicked button.  						parameters[0] = o;  					}  					else  					{  						// The first parameter must be the ClickParameter  						parameters[0] = GetParameter(button);  					}    					if (parms.Length == 2)  					{  						// The second parameter must be the ClickParameter  						parameters[1] = GetParameter(button);  					}  				}    				method.Invoke(dataContext' parameters);  			};
