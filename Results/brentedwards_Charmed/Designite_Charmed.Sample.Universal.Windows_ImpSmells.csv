Implementation smell,Namespace,Class,File,Method,Description
Long Method,Charmed.Sample.Services,RssFeedService,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Services\RssFeedService.cs,GetFeedAsync,The method has 65 lines of code.
Complex Method,Charmed.Sample.Universal,App,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\App.xaml.cs,OnLaunched,Cyclomatic complexity of the method is 9
Complex Method,Charmed.Sample.Services,RssFeedService,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Services\RssFeedService.cs,GetFeedAsync,Cyclomatic complexity of the method is 16
Long Parameter List,Charmed.Sample.ViewModels,WindowsFeedItemViewModel,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Windows\ViewModels\WindowsFeedItemViewModel.cs,WindowsFeedItemViewModel,The method has 4 parameters.
Long Statement,Charmed.Sample.ViewModels,FeedItemViewModel,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\ViewModels\FeedItemViewModel.cs,Pin,The length of the statement  "	var tileInfo = new TileInfo (this.FormatSecondaryTileId ()' this.FeedItem.Title' new Uri ("ms-appx:///Assets/Logo.png")' new Uri ("ms-appx:///Assets/WideLogo.png")' TileSize.Square150x150' anchorElement' Windows.UI.Popups.Placement.Above' this.FeedItem.Id.ToString ()); " is 269.
Long Statement,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 240.
Long Statement,Charmed.Sample.Common,SuspensionManager,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,Charmed.Sample.Common,SuspensionManager,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\SuspensionManager.cs,RestoreAsync,The length of the statement  "			if (weakFrameReference.TryGetTarget (out frame) && (string)frame.GetValue (FrameSessionBaseKeyProperty) == sessionBaseKey) { " is 124.
Long Statement,Charmed.Sample.Common,SuspensionManager,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Long Statement,Charmed.Sample.Services,RssFeedService,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Services\RssFeedService.cs,GetFeedAsync,The length of the statement  "			System.Diagnostics.Debug.WriteLine ("An invalid XML exception was thrown. Please make sure to use a URI that points to a RSS or Atom feed."); " is 141.
Complex Conditional,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Magic Number,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	e.Handled = true;  	this.GoBackCommand.Execute (null);  } else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
Magic Number,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	e.Handled = true;  	this.GoBackCommand.Execute (null);  } else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
Magic Number,Charmed.Sample.Common,NavigationHelper,D:\newReposJune17\brentedwards_Charmed\Charmed.Sample.Universal\Charmed.Sample.Universal.Shared\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
