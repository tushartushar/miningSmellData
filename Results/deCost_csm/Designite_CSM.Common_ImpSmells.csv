Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetEmailTemplatePath,Cyclomatic complexity of the method is 11
Complex Method,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,Cyclomatic complexity of the method is 9
Complex Method,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,Cyclomatic complexity of the method is 13
Long Parameter List,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,SendMail,The method has 11 parameters.
Long Statement,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,LogException,The length of the statement  "	WriteLog (string.Format ("Error occured from {0}[{1}] | Error message: {2} \n Stacktrace:"' pageName' methodName' exception.Message' exception.StackTrace)' "log"' "Exceptions"); " is 177.
Long Statement,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The length of the statement  "			pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25)); " is 170.
Long Statement,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The length of the statement  "				throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde."); " is 126.
Empty Catch Block,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,WriteLog,The method has an empty catch block.
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: if (top > 270 && left > 270) {  	top -= 120 + 130;  	left -= 230;  }  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: if (top > 270 && left > 270) {  	top -= 120 + 130;  	left -= 230;  }  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: if (top > 270 && left > 270) {  	top -= 120 + 130;  	left -= 230;  }  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: if (top > 270 && left > 270) {  	top -= 120 + 130;  	left -= 230;  }  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: if (top > 270 && left > 270) {  	top -= 120 + 130;  	left -= 230;  }  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: top -= 120 + 130;  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: top -= 120 + 130;  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: left -= 230;  
Magic Number,CSM.Classes,Picture,C:\repos\deCost_csm\CSM\CSM.Common\Classes\Picture.cs,GetProperties,The following statement contains a magic number: return new int[3] {  	top'  	left'  	rotate  };  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,SendMail,The following statement contains a magic number: try {  	mailMessage.From = new MailAddress (mailFrom);  	mailMessage.To.Add (mailTo);  	mailMessage.Subject = mailSubject;  	mailMessage.Body = mailBody;  	mailMessage.IsBodyHtml = isBodyHtml;  	if (canSendAttachment) {  		Attachment attach = new Attachment (offerReportStream' filename' format);  		mailMessage.Attachments.Add (attach);  	}  	SmtpClient smtpClient = new SmtpClient (smtpServer);  	if (smtpServer.Contains ("gmail")) {  		smtpClient.Port = 587;  		smtpClient.EnableSsl = true;  		smtpClient.UseDefaultCredentials = false;  	}  	//SMTP Authentication  	// Modification to work on localmachine  	if (credentials != null && credentials.Length == 2 && !string.IsNullOrEmpty (credentials [0])) {  		NetworkCredential smtpUserInfo = new NetworkCredential (credentials [0]' credentials [1]);  		smtpClient.Credentials = smtpUserInfo;  	}  	smtpClient.DeliveryMethod = SmtpDeliveryMethod.Network;  	smtpClient.Send (mailMessage);  }  catch (SmtpException smtpEx) {  	throw smtpEx;  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,SendMail,The following statement contains a magic number: try {  	mailMessage.From = new MailAddress (mailFrom);  	mailMessage.To.Add (mailTo);  	mailMessage.Subject = mailSubject;  	mailMessage.Body = mailBody;  	mailMessage.IsBodyHtml = isBodyHtml;  	if (canSendAttachment) {  		Attachment attach = new Attachment (offerReportStream' filename' format);  		mailMessage.Attachments.Add (attach);  	}  	SmtpClient smtpClient = new SmtpClient (smtpServer);  	if (smtpServer.Contains ("gmail")) {  		smtpClient.Port = 587;  		smtpClient.EnableSsl = true;  		smtpClient.UseDefaultCredentials = false;  	}  	//SMTP Authentication  	// Modification to work on localmachine  	if (credentials != null && credentials.Length == 2 && !string.IsNullOrEmpty (credentials [0])) {  		NetworkCredential smtpUserInfo = new NetworkCredential (credentials [0]' credentials [1]);  		smtpClient.Credentials = smtpUserInfo;  	}  	smtpClient.DeliveryMethod = SmtpDeliveryMethod.Network;  	smtpClient.Send (mailMessage);  }  catch (SmtpException smtpEx) {  	throw smtpEx;  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,SendMail,The following statement contains a magic number: if (smtpServer.Contains ("gmail")) {  	smtpClient.Port = 587;  	smtpClient.EnableSsl = true;  	smtpClient.UseDefaultCredentials = false;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,SendMail,The following statement contains a magic number: smtpClient.Port = 587;  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,SendMail,The following statement contains a magic number: if (credentials != null && credentials.Length == 2 && !string.IsNullOrEmpty (credentials [0])) {  	NetworkCredential smtpUserInfo = new NetworkCredential (credentials [0]' credentials [1]);  	smtpClient.Credentials = smtpUserInfo;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetStatus,The following statement contains a magic number: switch (i) {  case -1:  	return Status.All;  case 0:  	return Status.Pending;  case 1:  	return Status.Active;  default:  case 2:  	return Status.Unlinked;  case 3:  	return Status.Logged;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetStatus,The following statement contains a magic number: switch (i) {  case -1:  	return Status.All;  case 0:  	return Status.Pending;  case 1:  	return Status.Active;  default:  case 2:  	return Status.Unlinked;  case 3:  	return Status.Logged;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetScheduleType,The following statement contains a magic number: switch (i) {  default:  case 0:  	return ScheduleType.Task;  case 1:  	return ScheduleType.Event;  case 2:  	return ScheduleType.Students;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentType == "image/jpeg") {  	// We accept files until 10 Mb  	if (file.ContentLength < 10240000) {  		string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  		string dir = AppDomain.CurrentDomain.BaseDirectory;  		if (dir.IndexOf ("bin") > 0) {  			dir = dir.Substring (0' dir.IndexOf ("bin"));  		}  		//Search folder or create ir  		if (!Directory.Exists (dir + "/userData")) {  			Directory.CreateDirectory (dir + "/userData");  		}  		dir = dir + "/userData";  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  		}  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  		}  		// Encode file name to void overwrite  		pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  		pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  		try {  			//Bigger than 2Mb' resize!  			if (file.ContentLength > 2048000) {  				//Accept as bigger as initial design ratio  				Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  				// Save resized picture  				img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  			else {  				file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  		}  		catch (Exception ex) {  			Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  			throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  		}  	}  	else {  		ok = false;  		imgmsg = "El límite de tamaño para una imagen es de 1MB";  	}  }  else {  	ok = false;  	imgmsg = "Lo sentimos pero solamente se aceptan imágenes de tipo jpeg";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentType == "image/jpeg") {  	// We accept files until 10 Mb  	if (file.ContentLength < 10240000) {  		string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  		string dir = AppDomain.CurrentDomain.BaseDirectory;  		if (dir.IndexOf ("bin") > 0) {  			dir = dir.Substring (0' dir.IndexOf ("bin"));  		}  		//Search folder or create ir  		if (!Directory.Exists (dir + "/userData")) {  			Directory.CreateDirectory (dir + "/userData");  		}  		dir = dir + "/userData";  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  		}  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  		}  		// Encode file name to void overwrite  		pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  		pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  		try {  			//Bigger than 2Mb' resize!  			if (file.ContentLength > 2048000) {  				//Accept as bigger as initial design ratio  				Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  				// Save resized picture  				img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  			else {  				file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  		}  		catch (Exception ex) {  			Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  			throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  		}  	}  	else {  		ok = false;  		imgmsg = "El límite de tamaño para una imagen es de 1MB";  	}  }  else {  	ok = false;  	imgmsg = "Lo sentimos pero solamente se aceptan imágenes de tipo jpeg";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentType == "image/jpeg") {  	// We accept files until 10 Mb  	if (file.ContentLength < 10240000) {  		string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  		string dir = AppDomain.CurrentDomain.BaseDirectory;  		if (dir.IndexOf ("bin") > 0) {  			dir = dir.Substring (0' dir.IndexOf ("bin"));  		}  		//Search folder or create ir  		if (!Directory.Exists (dir + "/userData")) {  			Directory.CreateDirectory (dir + "/userData");  		}  		dir = dir + "/userData";  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  		}  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  		}  		// Encode file name to void overwrite  		pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  		pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  		try {  			//Bigger than 2Mb' resize!  			if (file.ContentLength > 2048000) {  				//Accept as bigger as initial design ratio  				Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  				// Save resized picture  				img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  			else {  				file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  		}  		catch (Exception ex) {  			Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  			throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  		}  	}  	else {  		ok = false;  		imgmsg = "El límite de tamaño para una imagen es de 1MB";  	}  }  else {  	ok = false;  	imgmsg = "Lo sentimos pero solamente se aceptan imágenes de tipo jpeg";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentType == "image/jpeg") {  	// We accept files until 10 Mb  	if (file.ContentLength < 10240000) {  		string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  		string dir = AppDomain.CurrentDomain.BaseDirectory;  		if (dir.IndexOf ("bin") > 0) {  			dir = dir.Substring (0' dir.IndexOf ("bin"));  		}  		//Search folder or create ir  		if (!Directory.Exists (dir + "/userData")) {  			Directory.CreateDirectory (dir + "/userData");  		}  		dir = dir + "/userData";  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  		}  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  		}  		// Encode file name to void overwrite  		pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  		pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  		try {  			//Bigger than 2Mb' resize!  			if (file.ContentLength > 2048000) {  				//Accept as bigger as initial design ratio  				Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  				// Save resized picture  				img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  			else {  				file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  		}  		catch (Exception ex) {  			Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  			throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  		}  	}  	else {  		ok = false;  		imgmsg = "El límite de tamaño para una imagen es de 1MB";  	}  }  else {  	ok = false;  	imgmsg = "Lo sentimos pero solamente se aceptan imágenes de tipo jpeg";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentType == "image/jpeg") {  	// We accept files until 10 Mb  	if (file.ContentLength < 10240000) {  		string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  		string dir = AppDomain.CurrentDomain.BaseDirectory;  		if (dir.IndexOf ("bin") > 0) {  			dir = dir.Substring (0' dir.IndexOf ("bin"));  		}  		//Search folder or create ir  		if (!Directory.Exists (dir + "/userData")) {  			Directory.CreateDirectory (dir + "/userData");  		}  		dir = dir + "/userData";  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  		}  		//Search folder or create ir  		if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  			Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  		}  		// Encode file name to void overwrite  		pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  		pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  		try {  			//Bigger than 2Mb' resize!  			if (file.ContentLength > 2048000) {  				//Accept as bigger as initial design ratio  				Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  				// Save resized picture  				img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  			else {  				file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  			}  		}  		catch (Exception ex) {  			Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  			throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  		}  	}  	else {  		ok = false;  		imgmsg = "El límite de tamaño para una imagen es de 1MB";  	}  }  else {  	ok = false;  	imgmsg = "Lo sentimos pero solamente se aceptan imágenes de tipo jpeg";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentLength < 10240000) {  	string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  	string dir = AppDomain.CurrentDomain.BaseDirectory;  	if (dir.IndexOf ("bin") > 0) {  		dir = dir.Substring (0' dir.IndexOf ("bin"));  	}  	//Search folder or create ir  	if (!Directory.Exists (dir + "/userData")) {  		Directory.CreateDirectory (dir + "/userData");  	}  	dir = dir + "/userData";  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  	}  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  	}  	// Encode file name to void overwrite  	pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  	pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  	try {  		//Bigger than 2Mb' resize!  		if (file.ContentLength > 2048000) {  			//Accept as bigger as initial design ratio  			Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  			// Save resized picture  			img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  		else {  			file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  	}  	catch (Exception ex) {  		Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  		throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  	}  }  else {  	ok = false;  	imgmsg = "El límite de tamaño para una imagen es de 1MB";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentLength < 10240000) {  	string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  	string dir = AppDomain.CurrentDomain.BaseDirectory;  	if (dir.IndexOf ("bin") > 0) {  		dir = dir.Substring (0' dir.IndexOf ("bin"));  	}  	//Search folder or create ir  	if (!Directory.Exists (dir + "/userData")) {  		Directory.CreateDirectory (dir + "/userData");  	}  	dir = dir + "/userData";  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  	}  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  	}  	// Encode file name to void overwrite  	pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  	pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  	try {  		//Bigger than 2Mb' resize!  		if (file.ContentLength > 2048000) {  			//Accept as bigger as initial design ratio  			Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  			// Save resized picture  			img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  		else {  			file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  	}  	catch (Exception ex) {  		Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  		throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  	}  }  else {  	ok = false;  	imgmsg = "El límite de tamaño para una imagen es de 1MB";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentLength < 10240000) {  	string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  	string dir = AppDomain.CurrentDomain.BaseDirectory;  	if (dir.IndexOf ("bin") > 0) {  		dir = dir.Substring (0' dir.IndexOf ("bin"));  	}  	//Search folder or create ir  	if (!Directory.Exists (dir + "/userData")) {  		Directory.CreateDirectory (dir + "/userData");  	}  	dir = dir + "/userData";  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  	}  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  	}  	// Encode file name to void overwrite  	pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  	pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  	try {  		//Bigger than 2Mb' resize!  		if (file.ContentLength > 2048000) {  			//Accept as bigger as initial design ratio  			Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  			// Save resized picture  			img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  		else {  			file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  	}  	catch (Exception ex) {  		Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  		throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  	}  }  else {  	ok = false;  	imgmsg = "El límite de tamaño para una imagen es de 1MB";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentLength < 10240000) {  	string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  	string dir = AppDomain.CurrentDomain.BaseDirectory;  	if (dir.IndexOf ("bin") > 0) {  		dir = dir.Substring (0' dir.IndexOf ("bin"));  	}  	//Search folder or create ir  	if (!Directory.Exists (dir + "/userData")) {  		Directory.CreateDirectory (dir + "/userData");  	}  	dir = dir + "/userData";  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  	}  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  	}  	// Encode file name to void overwrite  	pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  	pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  	try {  		//Bigger than 2Mb' resize!  		if (file.ContentLength > 2048000) {  			//Accept as bigger as initial design ratio  			Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  			// Save resized picture  			img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  		else {  			file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  	}  	catch (Exception ex) {  		Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  		throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  	}  }  else {  	ok = false;  	imgmsg = "El límite de tamaño para una imagen es de 1MB";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentLength < 10240000) {  	string albumFolder = pic.AlbumID != 0 ? pic.AlbumID.ToString () : "publications";  	string dir = AppDomain.CurrentDomain.BaseDirectory;  	if (dir.IndexOf ("bin") > 0) {  		dir = dir.Substring (0' dir.IndexOf ("bin"));  	}  	//Search folder or create ir  	if (!Directory.Exists (dir + "/userData")) {  		Directory.CreateDirectory (dir + "/userData");  	}  	dir = dir + "/userData";  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}"' dir' user.UserID))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}"' dir' user.UserID));  	}  	//Search folder or create ir  	if (!Directory.Exists (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder))) {  		Directory.CreateDirectory (string.Format ("{0}/{1}/{2}"' dir' user.UserID' albumFolder));  	}  	// Encode file name to void overwrite  	pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  	pic.PicPath = string.Format ("{0}/{1}/{2}"' user.UserID' albumFolder' pic.PicName);  	try {  		//Bigger than 2Mb' resize!  		if (file.ContentLength > 2048000) {  			//Accept as bigger as initial design ratio  			Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  			// Save resized picture  			img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  		else {  			file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  		}  	}  	catch (Exception ex) {  		Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  		throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  	}  }  else {  	ok = false;  	imgmsg = "El límite de tamaño para una imagen es de 1MB";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: pic.PicName = string.Format ("{0}_{1}.jpg"' DateTime.Now.ToString ("yyyyMMdd")' Utilities.EncodeMD5 (file.FileName + DateTime.Now.ToLongTimeString ()).Substring (0' 25));  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: try {  	//Bigger than 2Mb' resize!  	if (file.ContentLength > 2048000) {  		//Accept as bigger as initial design ratio  		Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  		// Save resized picture  		img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  	}  	else {  		file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  	}  }  catch (Exception ex) {  	Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  	throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: try {  	//Bigger than 2Mb' resize!  	if (file.ContentLength > 2048000) {  		//Accept as bigger as initial design ratio  		Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  		// Save resized picture  		img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  	}  	else {  		file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  	}  }  catch (Exception ex) {  	Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  	throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: try {  	//Bigger than 2Mb' resize!  	if (file.ContentLength > 2048000) {  		//Accept as bigger as initial design ratio  		Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  		// Save resized picture  		img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  	}  	else {  		file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  	}  }  catch (Exception ex) {  	Utilities.LogException ("Utilities"' MethodInfo.GetCurrentMethod ().Name' ex);  	throw new WrongDataException ("Ha ocurrido un error inexperado al intentar subir su imagen. Por favor' inténtelo más tarde.");  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentLength > 2048000) {  	//Accept as bigger as initial design ratio  	Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  	// Save resized picture  	img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  }  else {  	file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentLength > 2048000) {  	//Accept as bigger as initial design ratio  	Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  	// Save resized picture  	img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  }  else {  	file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,UploadImageFromUser,The following statement contains a magic number: if (file.ContentLength > 2048000) {  	//Accept as bigger as initial design ratio  	Image img = ResizeImage (Image.FromStream (file.InputStream)' new Size (1024' 768));  	// Save resized picture  	img.Save (string.Format ("{0}/{1}"' dir' pic.PicPath));  }  else {  	file.SaveAs (string.Format ("{0}/{1}"' dir' pic.PicPath));  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalDays >= 365) {  	res += " mucho tiempo...";  }  else if (span.TotalDays > 30) {  	res += string.Format (" aproximadamente {0} meses"' Math.Truncate (span.TotalDays / 30));  }  else if (span.TotalDays > 1) {  	res += string.Format (" {0} dias"' Math.Truncate (span.TotalDays));  }  else if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalDays >= 365) {  	res += " mucho tiempo...";  }  else if (span.TotalDays > 30) {  	res += string.Format (" aproximadamente {0} meses"' Math.Truncate (span.TotalDays / 30));  }  else if (span.TotalDays > 1) {  	res += string.Format (" {0} dias"' Math.Truncate (span.TotalDays));  }  else if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalDays >= 365) {  	res += " mucho tiempo...";  }  else if (span.TotalDays > 30) {  	res += string.Format (" aproximadamente {0} meses"' Math.Truncate (span.TotalDays / 30));  }  else if (span.TotalDays > 1) {  	res += string.Format (" {0} dias"' Math.Truncate (span.TotalDays));  }  else if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalDays >= 365) {  	res += " mucho tiempo...";  }  else if (span.TotalDays > 30) {  	res += string.Format (" aproximadamente {0} meses"' Math.Truncate (span.TotalDays / 30));  }  else if (span.TotalDays > 1) {  	res += string.Format (" {0} dias"' Math.Truncate (span.TotalDays));  }  else if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalDays > 30) {  	res += string.Format (" aproximadamente {0} meses"' Math.Truncate (span.TotalDays / 30));  }  else if (span.TotalDays > 1) {  	res += string.Format (" {0} dias"' Math.Truncate (span.TotalDays));  }  else if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalDays > 30) {  	res += string.Format (" aproximadamente {0} meses"' Math.Truncate (span.TotalDays / 30));  }  else if (span.TotalDays > 1) {  	res += string.Format (" {0} dias"' Math.Truncate (span.TotalDays));  }  else if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalDays > 30) {  	res += string.Format (" aproximadamente {0} meses"' Math.Truncate (span.TotalDays / 30));  }  else if (span.TotalDays > 1) {  	res += string.Format (" {0} dias"' Math.Truncate (span.TotalDays));  }  else if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: res += string.Format (" aproximadamente {0} meses"' Math.Truncate (span.TotalDays / 30));  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalDays > 1) {  	res += string.Format (" {0} dias"' Math.Truncate (span.TotalDays));  }  else if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalHours > 1) {  	res += string.Format (" {0} horas"' Math.Truncate (span.TotalHours));  }  else if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalMinutes > 1) {  	res += string.Format (" {0} minutos"' Math.Truncate (span.TotalMinutes));  }  else if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,TimeSpanToString,The following statement contains a magic number: if (span.TotalSeconds > 15) {  	res += string.Format (" {0} segundos"' Math.Truncate (span.TotalSeconds));  }  else {  	res += " un momento";  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: switch (size) {  case "profile":  	width = 194;  	height = 768;  	break;  case "settings":  	height = 120;  	width = 120;  	break;  case "pub":  default:  	height = 100;  	width = 100;  	break;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: switch (size) {  case "profile":  	width = 194;  	height = 768;  	break;  case "settings":  	height = 120;  	width = 120;  	break;  case "pub":  default:  	height = 100;  	width = 100;  	break;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: switch (size) {  case "profile":  	width = 194;  	height = 768;  	break;  case "settings":  	height = 120;  	width = 120;  	break;  case "pub":  default:  	height = 100;  	width = 100;  	break;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: switch (size) {  case "profile":  	width = 194;  	height = 768;  	break;  case "settings":  	height = 120;  	width = 120;  	break;  case "pub":  default:  	height = 100;  	width = 100;  	break;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: switch (size) {  case "profile":  	width = 194;  	height = 768;  	break;  case "settings":  	height = 120;  	width = 120;  	break;  case "pub":  default:  	height = 100;  	width = 100;  	break;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: switch (size) {  case "profile":  	width = 194;  	height = 768;  	break;  case "settings":  	height = 120;  	width = 120;  	break;  case "pub":  default:  	height = 100;  	width = 100;  	break;  }  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: width = 194;  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: height = 768;  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: height = 120;  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: width = 120;  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: height = 100;  
Magic Number,CSM,Utilities,C:\repos\deCost_csm\CSM\CSM.Common\Utilities.cs,GetsImageSizeByName,The following statement contains a magic number: width = 100;  
