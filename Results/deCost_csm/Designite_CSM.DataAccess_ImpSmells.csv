Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CSM.DataLayer,DefaultDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\DefaultDL.cs,ProcessLoginForm,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,DefaultDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\DefaultDL.cs,ChangePass,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,UpdateUserStatus,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUsersLike,Cyclomatic complexity of the method is 13
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUser,Cyclomatic complexity of the method is 14
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUsersLinkBy,Cyclomatic complexity of the method is 19
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetLinkStatus,Cyclomatic complexity of the method is 13
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetLinkStatus,Cyclomatic complexity of the method is 16
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewPublication,Cyclomatic complexity of the method is 29
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewPicture,Cyclomatic complexity of the method is 24
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserPublications,Cyclomatic complexity of the method is 18
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserPublicationImage,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserPublicationComments,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewLinkRequest,Cyclomatic complexity of the method is 13
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,UpdateLinkRequest,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,DeleteLinkRequest,Cyclomatic complexity of the method is 13
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,UpdateUser,Cyclomatic complexity of the method is 23
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetAlbums,Cyclomatic complexity of the method is 17
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetPicturesFromAlbum,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewAlbum,Cyclomatic complexity of the method is 19
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewSchedule,Cyclomatic complexity of the method is 25
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewScheduleLink,Cyclomatic complexity of the method is 13
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetScheduleFromUser,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,FinishSchedule,Cyclomatic complexity of the method is 13
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,DeleteImage,Cyclomatic complexity of the method is 16
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetLatestImages,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserMessagesWith,Cyclomatic complexity of the method is 17
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewMessage,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewRule,Cyclomatic complexity of the method is 20
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetRulesFromUser,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewPrivacy,Cyclomatic complexity of the method is 18
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetRulesFromUser,Cyclomatic complexity of the method is 17
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetRuleInfo,Cyclomatic complexity of the method is 15
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,ModifyRule,Cyclomatic complexity of the method is 19
Complex Method,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,ModifyPrivacy,Cyclomatic complexity of the method is 27
Complex Method,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,InsertRegisterForm,Cyclomatic complexity of the method is 29
Complex Method,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,CheckUserExists,Cyclomatic complexity of the method is 31
Long Parameter List,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewPublication,The method has 6 parameters.
Long Statement,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserPublications,The length of the statement  "						Utilities.LogException ("GlobalDL"' string.Format ("{0} - Error al recuperar las imágenes y comentarios de la publicación:{1}"' MethodInfo.GetCurrentMethod ().Name' pub.PublID)' e); " is 181.
Long Statement,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserPublicationComments,The length of the statement  "				dt.Merge (MySQLMgr.ExecuteQuery ("publication_getuserpublicationcomments"' "UserPublicationsComments"' mysql.ToArray ())); " is 122.
Magic Number,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,CheckUserExists,The following statement contains a magic number: try {  	switch (dbType) {  	case "MySQL":  		List<MySqlParameter> mysql = new List<MySqlParameter> ();  		mysql.Add (new MySqlParameter ("puseremail"' user.UserEmail));  		mysql.Add (new MySqlParameter ("puserlogin"' user.UserLogin));  		res = MySQLMgr.ExecuteScaler ("user_exists"' mysql.ToArray ());  		break;  	case "SSQL":  		List<SqlParameter> sql = new List<SqlParameter> ();  		sql.Add (new SqlParameter ("@useremail"' user.UserEmail));  		sql.Add (new SqlParameter ("@userlogin"' user.UserLogin));  		res = SSQLMgr.ExecuteScaler ("user_exists"' sql.ToArray ());  		break;  	}  	switch (res) {  	case 0:  		exists = false;  		break;  	case 1:  		user.UserEmail = "###";  		exists = true;  		ok = false;  		break;  	case 2:  		user.UserLogin = "###";  		exists = true;  		ok = false;  		break;  	case 3:  		user.UserEmail = "###";  		user.UserLogin = "###";  		exists = true;  		ok = false;  		break;  	}  }  catch (Exception e) {  	Utilities.LogException ("RegisterFormDL"' MethodInfo.GetCurrentMethod ().Name' e);  	return false;  }  finally {  }  
Magic Number,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,CheckUserExists,The following statement contains a magic number: try {  	switch (dbType) {  	case "MySQL":  		List<MySqlParameter> mysql = new List<MySqlParameter> ();  		mysql.Add (new MySqlParameter ("puseremail"' user.UserEmail));  		mysql.Add (new MySqlParameter ("puserlogin"' user.UserLogin));  		res = MySQLMgr.ExecuteScaler ("user_exists"' mysql.ToArray ());  		break;  	case "SSQL":  		List<SqlParameter> sql = new List<SqlParameter> ();  		sql.Add (new SqlParameter ("@useremail"' user.UserEmail));  		sql.Add (new SqlParameter ("@userlogin"' user.UserLogin));  		res = SSQLMgr.ExecuteScaler ("user_exists"' sql.ToArray ());  		break;  	}  	switch (res) {  	case 0:  		exists = false;  		break;  	case 1:  		user.UserEmail = "###";  		exists = true;  		ok = false;  		break;  	case 2:  		user.UserLogin = "###";  		exists = true;  		ok = false;  		break;  	case 3:  		user.UserEmail = "###";  		user.UserLogin = "###";  		exists = true;  		ok = false;  		break;  	}  }  catch (Exception e) {  	Utilities.LogException ("RegisterFormDL"' MethodInfo.GetCurrentMethod ().Name' e);  	return false;  }  finally {  }  
Magic Number,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,CheckUserExists,The following statement contains a magic number: switch (res) {  case 0:  	exists = false;  	break;  case 1:  	user.UserEmail = "###";  	exists = true;  	ok = false;  	break;  case 2:  	user.UserLogin = "###";  	exists = true;  	ok = false;  	break;  case 3:  	user.UserEmail = "###";  	user.UserLogin = "###";  	exists = true;  	ok = false;  	break;  }  
Magic Number,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,CheckUserExists,The following statement contains a magic number: switch (res) {  case 0:  	exists = false;  	break;  case 1:  	user.UserEmail = "###";  	exists = true;  	ok = false;  	break;  case 2:  	user.UserLogin = "###";  	exists = true;  	ok = false;  	break;  case 3:  	user.UserEmail = "###";  	user.UserLogin = "###";  	exists = true;  	ok = false;  	break;  }  
Missing Default,CSM.DataLayer,DefaultDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\DefaultDL.cs,ProcessLoginForm,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserlogin"' user.UserLogin));  	mysql.Add (new MySqlParameter ("puserpass"' user.UserPass));  	dt = MySQLMgr.ExecuteQuery ("user_login"' "login"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userlogin"' user.UserLogin));  	sql.Add (new SqlParameter ("@userpass"' user.UserPass));  	dt = SSQLMgr.ExecuteQuery ("user_login"' "login"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,DefaultDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\DefaultDL.cs,ChangePass,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puseremail"' user.UserEmail));  	mysql.Add (new MySqlParameter ("puserlogin"' user.UserLogin));  	mysql.Add (new MySqlParameter ("pnewpass"' user.UserPass));  	MySQLMgr.ExecuteNonQuery ("user_newpass"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@useremail"' user.UserEmail));  	sql.Add (new SqlParameter ("@userlogin"' user.UserLogin));  	sql.Add (new SqlParameter ("@newpass"' user.UserPass));  	SSQLMgr.ExecuteNonQuery ("user_newpass"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,getMaxUsers,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	return MySQLMgr.ExecuteScaler ("user_count"' new List<MySqlParameter> ().ToArray ());  case "SSQL":  	return SSQLMgr.ExecuteScaler ("user_count"' new List<SqlParameter> ().ToArray ());  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,UpdateUserStatus,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	mysql.Add (new MySqlParameter ("pusersession"' user.SessionID));  	mysql.Add (new MySqlParameter ("puserstatus"' (int)user.StatuID));  	MySQLMgr.ExecuteNonQuery ("user_setstatus"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	sql.Add (new SqlParameter ("@usersession"' user.SessionID));  	sql.Add (new SqlParameter ("@userstatus"' (int)user.StatuID));  	SSQLMgr.ExecuteNonQuery ("user_setstatus"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUsersLike,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("pprefixText"' prefixText));  	dt = MySQLMgr.ExecuteQuery ("user_getmyuserslike"' "MyUsersLike"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@prefixText"' prefixText));  	dt = SSQLMgr.ExecuteQuery ("user_getmyuserslike"' "MyUsersLike"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUser,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	dt.Merge (MySQLMgr.ExecuteQuery ("user_getuser"' "UserInfo"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	dt.Merge (SSQLMgr.ExecuteQuery ("user_getuser"' "UserInfo"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUsersLinkBy,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserfrom"' user.UserID));  	mysql.Add (new MySqlParameter ("puserto"' -1));  	mysql.Add (new MySqlParameter ("pstatus"' (int)status));  	dt.Merge (MySQLMgr.ExecuteQuery ("userlink_select"' "UserRequest"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userfrom"' user.UserID));  	sql.Add (new SqlParameter ("@userto"' -1));  	sql.Add (new SqlParameter ("@status"' (int)status));  	dt.Merge (SSQLMgr.ExecuteQuery ("userlink_select"' "UserRequest"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetLinkStatus,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserfrom"' userfrom.UserID));  	mysql.Add (new MySqlParameter ("puserto"' userto.UserID));  	status = (Status)MySQLMgr.ExecuteScaler ("userlink_linkstatus"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userfrom"' userfrom.UserID));  	sql.Add (new SqlParameter ("@userto"' userto.UserID));  	status = (Status)SSQLMgr.ExecuteScaler ("userlink_linkstatus"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetLinkStatus,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserFrom"' userFrom.UserID));  	mysql.Add (new MySqlParameter ("puserto"' userTo.UserID));  	// Try to login  	dt.Merge (MySQLMgr.ExecuteQuery ("userlink_select"' "LinkStatus"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userFrom"' userFrom.UserID));  	sql.Add (new SqlParameter ("@userto"' userTo.UserID));  	// Try to login  	dt.Merge (SSQLMgr.ExecuteQuery ("userlink_select"' "LinkStatus"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewPublication,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	if (rule.RuleID > 0) {  		mysql.Add (new MySqlParameter ("pruleid"' rule.RuleID));  	}  	else {  		mysql.Add (new MySqlParameter ("pruleid"' null));  	}  	mysql.Add (new MySqlParameter ("ppubldesc"' msg));  	mysql.Add (new MySqlParameter ("ppubldate"' DateTime.Now));  	if (parent > 0) {  		mysql.Add (new MySqlParameter ("pparentid"' parent));  	}  	else {  		mysql.Add (new MySqlParameter ("pparentid"' null));  	}  	if (usertoid > 0) {  		mysql.Add (new MySqlParameter ("pusertoid"' usertoid));  	}  	else {  		mysql.Add (new MySqlParameter ("pusertoid"' null));  	}  	publid = MySQLMgr.ExecuteScaler ("publication_insert"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	if (rule.RuleID > 0) {  		sql.Add (new SqlParameter ("@ruleid"' rule.RuleID));  	}  	else {  		sql.Add (new SqlParameter ("@ruleid"' null));  	}  	sql.Add (new SqlParameter ("@publdesc"' msg));  	sql.Add (new SqlParameter ("@publdate"' DateTime.Now));  	if (parent > 0) {  		sql.Add (new SqlParameter ("@parentid"' parent));  	}  	else {  		sql.Add (new SqlParameter ("@parentid"' null));  	}  	if (usertoid > 0) {  		sql.Add (new SqlParameter ("@usertoid"' usertoid));  	}  	else {  		sql.Add (new SqlParameter ("@usertoid"' null));  	}  	publid = SSQLMgr.ExecuteScaler ("publication_insert"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewPicture,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("ppublid"' publid));  	mysql.Add (new MySqlParameter ("palbumid"' pic.AlbumID));  	mysql.Add (new MySqlParameter ("ppicpath"' pic.PicPath));  	mysql.Add (new MySqlParameter ("ppicdesc"' string.IsNullOrEmpty (pic.PicDesc) ? "" : pic.PicDesc));  	mysql.Add (new MySqlParameter ("ppicname"' pic.PicName));  	mysql.Add (new MySqlParameter ("ppicdate"' pic.PicDate));  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	dt = MySQLMgr.ExecuteQuery ("picture_insert"' "NewPicInfo"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@publid"' publid));  	sql.Add (new SqlParameter ("@albumid"' pic.AlbumID));  	sql.Add (new SqlParameter ("@picpath"' pic.PicPath));  	sql.Add (new SqlParameter ("@picdesc"' string.IsNullOrEmpty (pic.PicDesc) ? "" : pic.PicDesc));  	sql.Add (new SqlParameter ("@picname"' pic.PicName));  	sql.Add (new SqlParameter ("@picdate"' pic.PicDate));  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	dt = SSQLMgr.ExecuteQuery ("picture_insert"' "NewPicInfo"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserPublications,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	mysql.Add (new MySqlParameter ("puserfrom"' userFrom.UserID));  	dt.Merge (MySQLMgr.ExecuteQuery ("publication_getuserpublications"' "UserPublications"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	sql.Add (new SqlParameter ("@userfrom"' userFrom.UserID));  	dt.Merge (SSQLMgr.ExecuteQuery ("publication_getuserpublications"' "UserPublications"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserPublicationImage,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("ppublid"' pub.PublID));  	dt.Merge (MySQLMgr.ExecuteQuery ("publication_getuserpublicationimage"' "UserPublicationsImage"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@publid"' pub.PublID));  	dt.Merge (SSQLMgr.ExecuteQuery ("publication_getuserpublicationimage"' "UserPublicationsImage"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserPublicationComments,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("ppublid"' pub.PublID));  	dt.Merge (MySQLMgr.ExecuteQuery ("publication_getuserpublicationcomments"' "UserPublicationsComments"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@publid"' pub.PublID));  	dt.Merge (SSQLMgr.ExecuteQuery ("publication_getuserpublicationcomments"' "UserPublicationsComments"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewLinkRequest,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserfrom"' userfrom.UserID));  	mysql.Add (new MySqlParameter ("puserto"' userto.UserID));  	MySQLMgr.ExecuteNonQuery ("userlink_add"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userfrom"' userfrom.UserID));  	sql.Add (new SqlParameter ("@userto"' userto.UserID));  	SSQLMgr.ExecuteNonQuery ("userlink_add"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,UpdateLinkRequest,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserfrom"' userFrom.UserID));  	mysql.Add (new MySqlParameter ("puserto"' userto.UserID));  	mysql.Add (new MySqlParameter ("pstatus"' (int)status));  	MySQLMgr.ExecuteNonQuery ("userlink_update"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userfrom"' userFrom.UserID));  	sql.Add (new SqlParameter ("@userto"' userto.UserID));  	sql.Add (new SqlParameter ("@status"' (int)status));  	SSQLMgr.ExecuteNonQuery ("userlink_update"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,DeleteLinkRequest,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserfrom"' userFrom.UserID));  	mysql.Add (new MySqlParameter ("puserto"' userto.UserID));  	MySQLMgr.ExecuteNonQuery ("userlink_delete"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userfrom"' userFrom.UserID));  	sql.Add (new SqlParameter ("@userto"' userto.UserID));  	SSQLMgr.ExecuteNonQuery ("userlink_delete"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,UpdateUser,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserbirth"' user.UserBirth));  	mysql.Add (new MySqlParameter ("puseremail"' user.UserEmail));  	mysql.Add (new MySqlParameter ("puserlogin"' user.UserLogin));  	mysql.Add (new MySqlParameter ("puserpass"' user.UserPass));  	mysql.Add (new MySqlParameter ("pusername"' user.UserName));  	mysql.Add (new MySqlParameter ("pusersurname"' user.UserSurname));  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	MySQLMgr.ExecuteNonQuery ("user_updateinfo"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userbirth"' user.UserBirth));  	sql.Add (new SqlParameter ("@useremail"' user.UserEmail));  	sql.Add (new SqlParameter ("@userlogin"' user.UserLogin));  	sql.Add (new SqlParameter ("@userpass"' user.UserPass));  	sql.Add (new SqlParameter ("@username"' user.UserName));  	sql.Add (new SqlParameter ("@usersurname"' user.UserSurname));  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	SSQLMgr.ExecuteNonQuery ("user_updateinfo"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetAlbums,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserfrom"' userFrom.UserID));  	mysql.Add (new MySqlParameter ("puserid"' userTo.UserID));  	dt.Merge (MySQLMgr.ExecuteQuery ("album_getuseralbums"' "UserAlbums"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userfrom"' userFrom.UserID));  	sql.Add (new SqlParameter ("@userid"' userTo.UserID));  	dt.Merge (SSQLMgr.ExecuteQuery ("album_getuseralbums"' "UserAlbums"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetPicturesFromAlbum,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("palbumid"' album.AlbumID));  	dt.Merge (MySQLMgr.ExecuteQuery ("album_getpictures"' "AlbumPictures"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@albumid"' album.AlbumID));  	dt.Merge (SSQLMgr.ExecuteQuery ("album_getpictures"' "AlbumPictures"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewAlbum,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' album.UserID));  	mysql.Add (new MySqlParameter ("palbumname"' album.AlbumName));  	mysql.Add (new MySqlParameter ("palbumdesc"' album.AlbumDesc));  	if (album.RuleID > 0)  		mysql.Add (new MySqlParameter ("pruleid"' album.RuleID));  	album.AlbumID = MySQLMgr.ExecuteScaler ("album_newalbum"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' album.UserID));  	sql.Add (new SqlParameter ("@albumname"' album.AlbumName));  	sql.Add (new SqlParameter ("@albumdesc"' album.AlbumDesc));  	if (album.RuleID > 0)  		sql.Add (new SqlParameter ("pruleid"' album.RuleID));  	album.AlbumID = SSQLMgr.ExecuteScaler ("album_newalbum"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewSchedule,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' schd.UserID));  	mysql.Add (new MySqlParameter ("pruleid"' schd.RuleID));  	mysql.Add (new MySqlParameter ("pscheddesc"' schd.SchedDesc));  	mysql.Add (new MySqlParameter ("pschedtitle"' schd.SchedTitle));  	mysql.Add (new MySqlParameter ("pschedtypeid"' (int)schd.SchedTypeID));  	mysql.Add (new MySqlParameter ("pscheddate"' schd.SchedDate));  	mysql.Add (new MySqlParameter ("pschedrepeat"' schd.SchedRepeat));  	mysql.Add (new MySqlParameter ("pschedbookingid"' schd.SchedBooking));  	schd.SchedID = MySQLMgr.ExecuteScaler ("schedule_new"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' schd.UserID));  	sql.Add (new SqlParameter ("@ruleid"' schd.RuleID));  	sql.Add (new SqlParameter ("@scheddesc"' schd.SchedDesc));  	sql.Add (new SqlParameter ("@schedtitle"' schd.SchedTitle));  	sql.Add (new SqlParameter ("@schedtypeid"' (int)schd.SchedTypeID));  	sql.Add (new SqlParameter ("@scheddate"' schd.SchedDate));  	sql.Add (new SqlParameter ("@schedrepeat"' schd.SchedRepeat));  	sql.Add (new SqlParameter ("@schedbookingid"' schd.SchedBooking));  	schd.SchedID = SSQLMgr.ExecuteScaler ("schedule_new"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewScheduleLink,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' userto));  	mysql.Add (new MySqlParameter ("pschdid"' schd.SchedID));  	ok = MySQLMgr.ExecuteScaler ("schedulelink_new"' mysql.ToArray ()) > 0;  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' userto));  	sql.Add (new SqlParameter ("@schdid"' schd.SchedID));  	ok = SSQLMgr.ExecuteScaler ("schedulelink_new"' sql.ToArray ()) > 0;  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetScheduleFromUser,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	dt.Merge (MySQLMgr.ExecuteQuery ("schedulelink_select"' "Schedule"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	dt.Merge (SSQLMgr.ExecuteQuery ("schedulelink_select"' "Schedule"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,FinishSchedule,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	mysql.Add (new MySqlParameter ("pschedid"' schedule.SchedID));  	MySQLMgr.ExecuteNonQuery ("schedule_finish"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	sql.Add (new SqlParameter ("@schedid"' schedule.SchedID));  	SSQLMgr.ExecuteNonQuery ("schedule_finish"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,DeleteImage,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("ppicid"' pic.PicID));  	mysql.Add (new MySqlParameter ("palbumid"' pic.AlbumID));  	dt.Merge (MySQLMgr.ExecuteQuery ("picture_delete"' "DeletePath"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@picid"' pic.PicID));  	sql.Add (new SqlParameter ("@albumid"' pic.AlbumID));  	dt.Merge (SSQLMgr.ExecuteQuery ("picture_delete"' "DeletePath"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetLatestImages,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	dt.Merge (MySQLMgr.ExecuteQuery ("picture_getlatestpictures"' "LatestPictures"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	dt.Merge (SSQLMgr.ExecuteQuery ("picture_getlatestpictures"' "LatestPictures"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetUserMessagesWith,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserFrom"' userFrom.UserID));  	mysql.Add (new MySqlParameter ("puserTo"' userTo.UserID));  	dt.Merge (MySQLMgr.ExecuteQuery ("message_select"' "Messages"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userFrom"' userFrom.UserID));  	sql.Add (new SqlParameter ("@userTo"' userTo.UserID));  	dt.Merge (SSQLMgr.ExecuteQuery ("message_select"' "Messages"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewMessage,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserFrom"' userFrom.UserID));  	mysql.Add (new MySqlParameter ("puserTo"' userTo.UserID));  	mysql.Add (new MySqlParameter ("pmessagetxt"' msg));  	MySQLMgr.ExecuteNonQuery ("message_insert"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userFrom"' userFrom.UserID));  	sql.Add (new SqlParameter ("@userTo"' userTo.UserID));  	sql.Add (new SqlParameter ("@messagetxt"' msg));  	SSQLMgr.ExecuteNonQuery ("message_insert"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewRule,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("pruletypeid"' (int)rule.RuleTypeID));  	mysql.Add (new MySqlParameter ("puserid"' rule.UserID));  	mysql.Add (new MySqlParameter ("prulename"' rule.RuleName));  	mysql.Add (new MySqlParameter ("pruledesc"' rule.RuleDesc));  	dt.Merge (MySQLMgr.ExecuteQuery ("rule_insert"' "InsertedRule"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@ruletypeid"' (int)rule.RuleTypeID));  	sql.Add (new SqlParameter ("@userid"' rule.UserID));  	sql.Add (new SqlParameter ("@rulename"' rule.RuleName));  	sql.Add (new SqlParameter ("@ruledesc"' rule.RuleDesc));  	dt.Merge (SSQLMgr.ExecuteQuery ("rule_insert"' "InsertedRule"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetRulesFromUser,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserid"' user.UserID));  	dt.Merge (MySQLMgr.ExecuteQuery ("rule_select"' "RulesFromUser"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@userid"' user.UserID));  	dt.Merge (SSQLMgr.ExecuteQuery ("rule_select"' "RulesFromUser"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,InsertNewPrivacy,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("pruleid"' privacy.RuleID));  	mysql.Add (new MySqlParameter ("puserid"' int.Parse (u)));  	mysql.Add (new MySqlParameter ("pprivname"' privacy.PrivName));  	mysql.Add (new MySqlParameter ("pprivoptionid"' privacy.PrivOptionID));  	MySQLMgr.ExecuteNonQuery ("privacy_insert"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@ruleid"' privacy.RuleID));  	sql.Add (new SqlParameter ("@userid"' int.Parse (u)));  	sql.Add (new SqlParameter ("@privname"' privacy.PrivName));  	sql.Add (new SqlParameter ("@privoptionid"' privacy.PrivOptionID));  	SSQLMgr.ExecuteNonQuery ("privacy_insert"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetRulesFromUser,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puserFrom"' userFrom.UserID));  	mysql.Add (new MySqlParameter ("puserTo"' userTo.UserID));  	dt.Merge (MySQLMgr.ExecuteQuery ("rules_getrulesfromuser"' "ListRulesFromUser"' mysql.ToArray ()));  	break;  case "SSQL":  	List<MySqlParameter> sql = new List<MySqlParameter> ();  	sql.Add (new MySqlParameter ("@userFrom"' userFrom.UserID));  	sql.Add (new MySqlParameter ("@userTo"' userTo.UserID));  	dt.Merge (SSQLMgr.ExecuteQuery ("rules_getrulesfromuser"' "ListRulesFromUser"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,GetRuleInfo,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("pruleid"' rule.RuleID));  	dt.Merge (MySQLMgr.ExecuteQuery ("rules_getruleinfo"' "RulesInfo"' mysql.ToArray ()));  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@ruleid"' rule.RuleID));  	dt.Merge (SSQLMgr.ExecuteQuery ("rules_getruleinfo"' "RulesInfo"' sql.ToArray ()));  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,ModifyRule,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("pruletypeid"' (int)rule.RuleTypeID));  	mysql.Add (new MySqlParameter ("puserid"' rule.UserID));  	mysql.Add (new MySqlParameter ("prulename"' rule.RuleName));  	mysql.Add (new MySqlParameter ("pruledesc"' rule.RuleDesc));  	mysql.Add (new MySqlParameter ("pruleid"' rule.RuleID));  	MySQLMgr.ExecuteNonQuery ("rule_modify"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@ruletypeid"' (int)rule.RuleTypeID));  	sql.Add (new SqlParameter ("@userid"' rule.UserID));  	sql.Add (new SqlParameter ("@rulename"' rule.RuleName));  	sql.Add (new SqlParameter ("@ruledesc"' rule.RuleDesc));  	sql.Add (new SqlParameter ("@ruleid"' rule.RuleID));  	SSQLMgr.ExecuteNonQuery ("rule_modify"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,ModifyPrivacy,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("pruleid"' privacy.RuleID));  	MySQLMgr.ExecuteNonQuery ("privacy_delete"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@ruleid"' privacy.RuleID));  	SSQLMgr.ExecuteNonQuery ("privacy_delete"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,GlobalDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\GlobalDL.cs,ModifyPrivacy,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("pruleid"' privacy.RuleID));  	mysql.Add (new MySqlParameter ("puserid"' int.Parse (u)));  	mysql.Add (new MySqlParameter ("pprivname"' privacy.PrivName));  	mysql.Add (new MySqlParameter ("pprivoptionid"' privacy.PrivOptionID));  	MySQLMgr.ExecuteNonQuery ("privacy_insert"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("pruleid"' privacy.RuleID));  	sql.Add (new SqlParameter ("puserid"' int.Parse (u)));  	sql.Add (new SqlParameter ("pprivname"' privacy.PrivName));  	sql.Add (new SqlParameter ("pprivoptionid"' privacy.PrivOptionID));  	SSQLMgr.ExecuteNonQuery ("privacy_insert"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,InsertRegisterForm,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puseraddress"' user.UserAddress));  	mysql.Add (new MySqlParameter ("puserbirth"' user.UserBirth));  	mysql.Add (new MySqlParameter ("puseremail"' user.UserEmail));  	mysql.Add (new MySqlParameter ("puserlogin"' user.UserLogin));  	mysql.Add (new MySqlParameter ("pusername"' user.UserName));  	mysql.Add (new MySqlParameter ("puserpass"' user.UserPass));  	mysql.Add (new MySqlParameter ("pusersurname"' user.UserSurname));  	mysql.Add (new MySqlParameter ("pstatus"' (int)user.StatuID));  	ok = MySQLMgr.ExecuteScaler ("user_register"' mysql.ToArray ()) > 0;  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@useraddress"' user.UserAddress));  	sql.Add (new SqlParameter ("@userbirth"' user.UserBirth));  	sql.Add (new SqlParameter ("@useremail"' user.UserEmail));  	sql.Add (new SqlParameter ("@userlogin"' user.UserLogin));  	sql.Add (new SqlParameter ("@username"' user.UserName));  	sql.Add (new SqlParameter ("@userpass"' user.UserPass));  	sql.Add (new SqlParameter ("@usersurname"' user.UserSurname));  	sql.Add (new SqlParameter ("@status"' (int)user.StatuID));  	ok = SSQLMgr.ExecuteScaler ("user_register"' sql.ToArray ()) > 0;  	break;  }  
Missing Default,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,CheckUserExists,The following switch statement is missing a default case: switch (dbType) {  case "MySQL":  	List<MySqlParameter> mysql = new List<MySqlParameter> ();  	mysql.Add (new MySqlParameter ("puseremail"' user.UserEmail));  	mysql.Add (new MySqlParameter ("puserlogin"' user.UserLogin));  	res = MySQLMgr.ExecuteScaler ("user_exists"' mysql.ToArray ());  	break;  case "SSQL":  	List<SqlParameter> sql = new List<SqlParameter> ();  	sql.Add (new SqlParameter ("@useremail"' user.UserEmail));  	sql.Add (new SqlParameter ("@userlogin"' user.UserLogin));  	res = SSQLMgr.ExecuteScaler ("user_exists"' sql.ToArray ());  	break;  }  
Missing Default,CSM.DataLayer,RegisterFormDL,C:\repos\deCost_csm\CSM\CSM.DataAccess\RegisterFormDL.cs,CheckUserExists,The following switch statement is missing a default case: switch (res) {  case 0:  	exists = false;  	break;  case 1:  	user.UserEmail = "###";  	exists = true;  	ok = false;  	break;  case 2:  	user.UserLogin = "###";  	exists = true;  	ok = false;  	break;  case 3:  	user.UserEmail = "###";  	user.UserLogin = "###";  	exists = true;  	ok = false;  	break;  }  
