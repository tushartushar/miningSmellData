Implementation smell,Namespace,Class,File,Method,Description
Long Method,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The method has 180 lines of code.
Long Method,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The method has 114 lines of code.
Long Method,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The method has 121 lines of code.
Long Method,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The method has 130 lines of code.
Complex Method,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,FakeMeltTicking,Cyclomatic complexity of the method is 10
Complex Method,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestParticles,Cyclomatic complexity of the method is 9
Complex Method,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Effect,Cyclomatic complexity of the method is 26
Complex Method,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Worldborder,Cyclomatic complexity of the method is 8
Complex Method,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,Cyclomatic complexity of the method is 12
Complex Method,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,Cyclomatic complexity of the method is 21
Complex Method,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,Cyclomatic complexity of the method is 10
Complex Method,TestPlugin.Pets,PetsPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetsPlugin.cs,Pet,Cyclomatic complexity of the method is 24
Long Parameter List,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Minet,The method has 6 parameters. Parameters: player' commands' done' gurun' made' it
Long Parameter List,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,OptionalTest,The method has 5 parameters. Parameters: player' x' y' z' rot
Long Parameter List,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,EnumTest,The method has 5 parameters. Parameters: player' itemType' entityType' blockType' commandName
Long Parameter List,TestPlugin.NiceLobby,CustomItemFrame,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\CustomFrame.cs,PlaceBlock,The method has 5 parameters. Parameters: world' player' blockCoordinates' face' faceCoords
Long Parameter List,TestPlugin.NiceLobby,CustomFrame,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\CustomFrame.cs,PlaceBlock,The method has 5 parameters. Parameters: world' player' blockCoordinates' face' faceCoords
Long Parameter List,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GenerateParticles,The method has 6 parameters. Parameters: random' level' point' yoffset' multiplier' d
Long Statement,TestPlugin.Code4Fun,Code4FunPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SpawnFake,The length of the statement  "				//KnownPosition = new PlayerLocation(coordinates.X + direction.X' coordinates.Y' coordinates.Z + direction.Z' coordinates.HeadYaw + 180f' coordinates.Yaw + 180f) " is 161.
Long Statement,TestPlugin.Code4Fun,Code4FunPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SpawnFake,The length of the statement  "			fake.SetPosition(new PlayerLocation(coordinates.X + direction.X' coordinates.Y' coordinates.Z + direction.Z' 0' 0)' true); " is 122.
Long Statement,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The length of the statement  "				//+ new Vector3((float) random.NextDouble() - 0.5f' (float) random.NextDouble() - 0.5f' (float) random.NextDouble() - 0.5f)*10/distance; " is 136.
Long Statement,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The length of the statement  "				//cube.Velocity = dir.Normalize() + new Vector3((float) random.NextDouble()' (float) random.NextDouble()' (float) random.NextDouble()) * distance; " is 146.
Long Statement,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The length of the statement  "				//cube.Velocity = new Vector3((float) ((random.NextDouble() - 0.5f)*1.8f)' (float) (random.NextDouble()*cube.Origin[1]/10 + 3.8f)' (float) ((random.NextDouble() - 0.5f)*1.8f)); " is 176.
Long Statement,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The length of the statement  "						KnownPosition = new PlayerLocation(coordinates.X + direction.X + (x * 4)' coordinates.Y + (y * 4)' coordinates.Z + direction.Z' 0' 0) " is 133.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestParticles,The length of the statement  "								//var particle = new LegacyParticle(particleId' Player.Level) {Position = new Vector3(x' y' z) + new Vector3(0.5f' 0.5f' 0.5f)}; " is 128.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestParticles,The length of the statement  "					//			//var particle = new LegacyParticle(10' Player.Level) {Position = new Vector3(x' y' z) + new Vector3(0.5f' 0.5f' 0.5f)}; " is 125.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestParticles,The length of the statement  "								//var particle = new LegacyParticle(10' Player.Level) {Position = new Vector3(x' y' z) + new Vector3(0.5f' 0.5f' 0.5f)}; " is 120.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GetPositionFromPlayer,The length of the statement  "			return new PlayerLocation(coordinates.X + direction.X' coordinates.Y' coordinates.Z + direction.Z' facePlayer ? coordinates.HeadYaw + 180f : coordinates.HeadYaw' facePlayer ? coordinates.Yaw + 180f : coordinates.Yaw); " is 217.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,CalculateSkyLightForChunk,The length of the statement  "				player.ForcedSendChunks(() => { player.SendMessage($"Calculated skylights ({sw.ElapsedMilliseconds}ms) and resent chunks."); }); " is 128.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Version,The length of the statement  "			string productVersion = FileVersionInfo.GetVersionInfo(Assembly.GetAssembly(typeof(MiNetServer)).Location).ProductVersion; " is 122.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ChangeDimenion,The length of the statement  "					Level nextLevel = dimension == Dimension.Overworld ? oldLevel.OverworldLevel : dimension == Dimension.Nether ? oldLevel.NetherLevel : oldLevel.TheEndLevel; " is 155.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ChangeDimenion,The length of the statement  "				oldLevel.BroadcastMessage(string.Format("{0} teleported to world {1}."' player.Username' player.Level.LevelId)' type: MessageType.Raw); " is 135.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TeleportWorld,The length of the statement  "								nextLevel = new Level(levelManager' world' new AnvilWorldProvider() {MissingChunkProvider = new SuperflatGenerator(Dimension.Overworld)}' Context.LevelManager.EntityManager' player.GameMode' Difficulty.Normal); " is 210.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TeleportWorld,The length of the statement  "							oldLevel.BroadcastMessage(string.Format("{0} teleported to world {1}."' player.Username' player.Level.LevelId)' type: MessageType.Raw); " is 135.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ViewDistance,The length of the statement  "			player.Level.BroadcastMessage(string.Format("Current view distance set to {0}."' player.Level.ViewDistance)' type: MessageType.Raw); " is 132.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ViewDistance,The length of the statement  "			player.Level.BroadcastMessage(string.Format("View distance changed to {0}."' player.Level.ViewDistance)' type: MessageType.Raw); " is 128.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Position,The length of the statement  "			sb.AppendLine($"Direction Yaw={player.KnownPosition.Yaw:F1} HeadYap={player.KnownPosition.HeadYaw:F1} Pitch={player.KnownPosition.Pitch:F1}"); " is 142.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,FarmingKit,The length of the statement  "			var command = new ItemCommand(41' 0' delegate(ItemCommand itemCommand' Level level' Player arg3' BlockCoordinates arg4) { Log.Info("Clicked on command"); }); " is 157.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The length of the statement  "			var command = new ItemCommand(41' 0' delegate(ItemCommand itemCommand' Level level' Player arg3' BlockCoordinates arg4) { Log.Info("Clicked on command"); }); " is 157.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,NoDamage,The length of the statement  "			player.HealthManager = player.HealthManager is NoDamageHealthManager ? new HealthManager(player) : new NoDamageHealthManager(player); " is 133.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,NoDamage,The length of the statement  "			player.SendMessage($"{player.Username} set NoDamage={player.HealthManager is NoDamageHealthManager}"' type: MessageType.Raw); " is 125.
Long Statement,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Worldborder,The length of the statement  "							if (p.KnownPosition.DistanceTo(center + new BlockCoordinates(x' (int) p.KnownPosition.Y' z)) > p.ChunkRadius * 16) continue; " is 124.
Long Statement,TestPlugin,RandomCurve,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GetY,The length of the statement  "				y += m_sineWaves[i].Amplitude * Math.Sin(m_sineWaves[i].AngularFrequency * x + m_sineWaves[i].Phase) + m_sineWaves[i].ShiftY; " is 125.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,TestTranslatedMessages,The length of the statement  "				player.SendMessage(ChatColors.Green + (MessageType) i + ChatFormatting.Reset + ": %key.smoothCamera"' (MessageType) i' player' true); " is 133.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnTicking,The length of the statement  "			//		Message = $"SkyLight Subtracted={level.SkylightSubtracted}' Under={level.GetSkyLight(pos + BlockCoordinates.Down)}' Foot={level.GetSkyLight(pos)}' Head={level.GetSkyLight(pos + BlockCoordinates.Up)}' Height={level.GetHeight(pos)}"' " is 235.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The length of the statement  "					.Replace("| NE|"' $"| {ChatFormatting.Bold}{ChatColors.Yellow}NE{ChatFormatting.Reset} |").Trim('N'' 'W'' 'S'' 'E').Trim('N'' 'W'' 'S'' 'E') " is 140.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The length of the statement  "							string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{_imageCape:D4}.bmp"); " is 142.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The length of the statement  "				level.BroadcastMessage($"{ChatColors.Gold}[{ChatColors.Green}+{ChatColors.Gold}]{ChatFormatting.Reset} {player.Username} joined the server"); " is 141.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerLeave,The length of the statement  "			level.BroadcastMessage($"{ChatColors.Gold}[{ChatColors.Red}-{ChatColors.Gold}]{ChatFormatting.Reset} {player.Username} left the server"); " is 137.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SendNameTag,The length of the statement  "			player.SetNameTag(TextUtils.Center($"{GetNameTag(player)}\n{ChatColors.Red}HP: {ChatColors.White}{player.HealthManager.Hearts}")); " is 130.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Idk,The length of the statement  "			player.Level.BroadcastMessage(string.Format(ChatColors.Gold + "{0} says 'I don't know' in a nasty way!"' player.Username)' type: MessageType.Raw); " is 146.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Lol,The length of the statement  "			player.Level.BroadcastMessage(string.Format(ChatColors.Yellow + "{0} is really 'laughing out loud!'' and it really hurst our ears :-("' player.Username)' type: MessageType.Raw); " is 177.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Wtf,The length of the statement  "			player.Level.BroadcastMessage(string.Format(ChatColors.Red + "{0} just said the forbidden 'What the ****'. Shame on {0}!"' player.Username)' type: MessageType.Raw); " is 164.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Kick,The length of the statement  "			player.Level.BroadcastMessage(string.Format(ChatColors.Gold + "{0} tried to kick {1} but kicked self instead!!"' player.Username' otherUser)' type: MessageType.Raw); " is 165.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Ban,The length of the statement  "			player.Level.BroadcastMessage(string.Format(ChatColors.Gold + "{0} tried to ban {1} but banned self instead!!"' player.Username' otherUser)' type: MessageType.Raw); " is 164.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The length of the statement  "			//player.Level.BroadcastMessage(string.Format("{0} teleported to coordinates {1}'{2}'{3}."' player.Username' x' y' z)' type: MessageType.Raw); " is 142.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The length of the statement  "						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp"); " is 137.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The length of the statement  "						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp"); " is 134.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The length of the statement  "								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes)); " is 121.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The length of the statement  "						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp"); " is 137.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The length of the statement  "						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp"); " is 134.
Long Statement,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,CreateMcpeBatch,The length of the statement  "			McpeWrapper batch = BatchUtils.CreateBatchPacket(new Memory<byte>(bytes' 0' (int) bytes.Length)' CompressionLevel.Optimal' true); " is 129.
Long Statement,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The length of the statement  "						for (dz = target.KnownPosition.Z - KnownPosition.Z; dx * dx + dz * dz < 0.00010; dz = (rand.NextDouble() - rand.NextDouble()) * 0.01D) " is 134.
Long Statement,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The length of the statement  "					else if ((DateTime.UtcNow.Ticks - Owner.LastUpdatedTime.Ticks > 0.6f * TimeSpan.TicksPerSecond && Owner.KnownPosition.DistanceTo(KnownPosition) > 3.5f) " is 151.
Long Statement,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The length of the statement  "						for (dz = Owner.KnownPosition.Z - KnownPosition.Z; dx * dx + dz * dz < 0.00010; dz = (rand.NextDouble() - rand.NextDouble()) * 0.01D) " is 133.
Long Statement,TestPlugin.SafePay,SafePayPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SafePay\SafePayPlugin.cs,ExecutePayVisa,The length of the statement  "				new Label {Text = "§lWhat happens now?§r\nThis is step 1 of 2. After submitting payment information you will be able to review your order.\nWe will not bill you until confirm the order on next page (step 2)."}' " is 210.
Long Statement,TestPlugin.SafePay,SafePayPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SafePay\SafePayPlugin.cs,ExecuteReviewOrder,The length of the statement  "			modalForm.Content = "§lPlease review your ordering information below.§r\nProduct: Mega coins extra pack.\nYour total: $3.99 USD\nPayment method: VISA ************59 $3.99 USD\n"; " is 178.
Complex Conditional,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Worldborder,The conditional expression  "x != -radius && x != radius && z != -radius && z != radius"  is complex.
Magic Number,TestPlugin.Code4Fun,Code4FunPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SpawnFake,The following statement contains a magic number: var direction = Vector3.Normalize(player.KnownPosition.GetHeadDirection()) * 1.5f;
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The following statement contains a magic number: var pos = new Vector3(cube.Origin[0] / 16f' cube.Origin[1] / 16f' cube.Origin[2] / 16f) + Mob.KnownPosition;
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The following statement contains a magic number: var pos = new Vector3(cube.Origin[0] / 16f' cube.Origin[1] / 16f' cube.Origin[2] / 16f) + Mob.KnownPosition;
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The following statement contains a magic number: var pos = new Vector3(cube.Origin[0] / 16f' cube.Origin[1] / 16f' cube.Origin[2] / 16f) + Mob.KnownPosition;
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The following statement contains a magic number: var pos = new Vector3(cube.Origin[0] / 16f' cube.Origin[1] / 16f' cube.Origin[2] / 16f) + Mob.KnownPosition;
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The following statement contains a magic number: distance < 0.1
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,SetVelocity,The following statement contains a magic number: Vector3 force = new Vector3(distance' distance' distance) * 5;
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,FakeMeltTicking,The following statement contains a magic number: cube.Origin[1] <= 0.05f && cube.Velocity.Y <= 0.01
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,FakeMeltTicking,The following statement contains a magic number: cube.Origin[1] <= 0.05f && cube.Velocity.Y <= 0.01
Magic Number,TestPlugin.Code4Fun,GravityGeometryBehavior,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\Code4FunPlugin.cs,FakeMeltTicking,The following statement contains a magic number: float z = cube.Origin[2];
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: var direction = Vector3.Normalize(player.KnownPosition.GetHeadDirection()) * 1.5f;
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: GeometryModel model = new GeometryModel()  					{  						{  							skinGeometryName' new Geometry()  							{  								Name = skinGeometryName'  								Bones = new List<Bone>()  								{  									new Bone()  									{  										Name = BoneName.Body'  										Pivot = new float[3]'  										Cubes = new List<Cube>()  										{  											new Cube()  											{  												Origin = new float[3]'  												Size = new float[] {64' 64' 1f}'  												Uv = new float[] {0' 0}  											}  										}  									}  								}  							}  						}'  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: GeometryModel model = new GeometryModel()  					{  						{  							skinGeometryName' new Geometry()  							{  								Name = skinGeometryName'  								Bones = new List<Bone>()  								{  									new Bone()  									{  										Name = BoneName.Body'  										Pivot = new float[3]'  										Cubes = new List<Cube>()  										{  											new Cube()  											{  												Origin = new float[3]'  												Size = new float[] {64' 64' 1f}'  												Uv = new float[] {0' 0}  											}  										}  									}  								}  							}  						}'  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: GeometryModel model = new GeometryModel()  					{  						{  							skinGeometryName' new Geometry()  							{  								Name = skinGeometryName'  								Bones = new List<Bone>()  								{  									new Bone()  									{  										Name = BoneName.Body'  										Pivot = new float[3]'  										Cubes = new List<Cube>()  										{  											new Cube()  											{  												Origin = new float[3]'  												Size = new float[] {64' 64' 1f}'  												Uv = new float[] {0' 0}  											}  										}  									}  								}  							}  						}'  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: GeometryModel model = new GeometryModel()  					{  						{  							skinGeometryName' new Geometry()  							{  								Name = skinGeometryName'  								Bones = new List<Bone>()  								{  									new Bone()  									{  										Name = BoneName.Body'  										Pivot = new float[3]'  										Cubes = new List<Cube>()  										{  											new Cube()  											{  												Origin = new float[3]'  												Size = new float[] {64' 64' 1f}'  												Uv = new float[] {0' 0}  											}  										}  									}  								}  							}  						}'  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: PlayerMob fake = new PlayerMob(string.Empty' player.Level)  					{  						Width = 0.1'  						Length = 0.1'  						Height = 0.1'    						Skin = new Skin  						{  							SkinId = "testing" + new Guid()'  							Slim = false'  							SkinData = skinBytes'  							CapeData = new byte[0]'  							SkinGeometryName = skinGeometryName'  							SkinGeometry = Skin.ToJson(model)'  						}'  						KnownPosition = new PlayerLocation(coordinates.X + direction.X + (x * 4)' coordinates.Y + (y * 4)' coordinates.Z + direction.Z' 0' 0)  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: PlayerMob fake = new PlayerMob(string.Empty' player.Level)  					{  						Width = 0.1'  						Length = 0.1'  						Height = 0.1'    						Skin = new Skin  						{  							SkinId = "testing" + new Guid()'  							Slim = false'  							SkinData = skinBytes'  							CapeData = new byte[0]'  							SkinGeometryName = skinGeometryName'  							SkinGeometry = Skin.ToJson(model)'  						}'  						KnownPosition = new PlayerLocation(coordinates.X + direction.X + (x * 4)' coordinates.Y + (y * 4)' coordinates.Z + direction.Z' 0' 0)  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: PlayerMob fake = new PlayerMob(string.Empty' player.Level)  					{  						Width = 0.1'  						Length = 0.1'  						Height = 0.1'    						Skin = new Skin  						{  							SkinId = "testing" + new Guid()'  							Slim = false'  							SkinData = skinBytes'  							CapeData = new byte[0]'  							SkinGeometryName = skinGeometryName'  							SkinGeometry = Skin.ToJson(model)'  						}'  						KnownPosition = new PlayerLocation(coordinates.X + direction.X + (x * 4)' coordinates.Y + (y * 4)' coordinates.Z + direction.Z' 0' 0)  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: PlayerMob fake = new PlayerMob(string.Empty' player.Level)  					{  						Width = 0.1'  						Length = 0.1'  						Height = 0.1'    						Skin = new Skin  						{  							SkinId = "testing" + new Guid()'  							Slim = false'  							SkinData = skinBytes'  							CapeData = new byte[0]'  							SkinGeometryName = skinGeometryName'  							SkinGeometry = Skin.ToJson(model)'  						}'  						KnownPosition = new PlayerLocation(coordinates.X + direction.X + (x * 4)' coordinates.Y + (y * 4)' coordinates.Z + direction.Z' 0' 0)  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,Screenshot,The following statement contains a magic number: PlayerMob fake = new PlayerMob(string.Empty' player.Level)  					{  						Width = 0.1'  						Length = 0.1'  						Height = 0.1'    						Skin = new Skin  						{  							SkinId = "testing" + new Guid()'  							Slim = false'  							SkinData = skinBytes'  							CapeData = new byte[0]'  							SkinGeometryName = skinGeometryName'  							SkinGeometry = Skin.ToJson(model)'  						}'  						KnownPosition = new PlayerLocation(coordinates.X + direction.X + (x * 4)' coordinates.Y + (y * 4)' coordinates.Z + direction.Z' 0' 0)  					};
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,PlayerOnTicking,The following statement contains a magic number: g.CopyFromScreen(620' 101' 0' 0' bmpScreenCapture.Size' CopyPixelOperation.SourceCopy);
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,PlayerOnTicking,The following statement contains a magic number: g.CopyFromScreen(620' 101' 0' 0' bmpScreenCapture.Size' CopyPixelOperation.SourceCopy);
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,PlayerOnTicking,The following statement contains a magic number: int offsetx = (mobCoord.Key.Item1) * 64;
Magic Number,TestPlugin.Code4Fun,ScreenshotCommand,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Code4Fun\ScreenshotCommand.cs,PlayerOnTicking,The following statement contains a magic number: int offsety = (_height - mobCoord.Key.Item2 - 1) * 64;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,BossbarCommand,The following statement contains a magic number: var bossBar = new BossBar(player.Level)  			{  				Animate = false'  				MaxProgress = 10'  				Progress = 10'  				NameTag = $"{ChatColors.Gold}You are playing on a {ChatColors.Gold}MiNET{ChatColors.Gold} server"  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,BossbarCommand,The following statement contains a magic number: var bossBar = new BossBar(player.Level)  			{  				Animate = false'  				MaxProgress = 10'  				Progress = 10'  				NameTag = $"{ChatColors.Gold}You are playing on a {ChatColors.Gold}MiNET{ChatColors.Gold} server"  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestLegactParticles,The following statement contains a magic number: await Task.Delay(2000);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestParticles,The following statement contains a magic number: var maxY = Math.Min(255' Math.Max(box.Min.Y' box.Max.Y)) + 1;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestParticles,The following statement contains a magic number: particleEvent.eventId = (short) (0x4000 | 10);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestParticles,The following statement contains a magic number: particleEvent.eventId = (short) (0x4000 | 10);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GetPositionFromPlayer,The following statement contains a magic number: return new PlayerLocation(coordinates.X + direction.X' coordinates.Y' coordinates.Z + direction.Z' facePlayer ? coordinates.HeadYaw + 180f : coordinates.HeadYaw' facePlayer ? coordinates.Yaw + 180f : coordinates.Yaw);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GetPositionFromPlayer,The following statement contains a magic number: return new PlayerLocation(coordinates.X + direction.X' coordinates.Y' coordinates.Z + direction.Z' facePlayer ? coordinates.HeadYaw + 180f : coordinates.HeadYaw' facePlayer ? coordinates.Yaw + 180f : coordinates.Yaw);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Relight,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Form,The following statement contains a magic number: customForm.Content = new List<CustomElement>()  			{  				new Label {Text = "A label"}'  				new Input  				{  					Text = ""'  					Placeholder = "Placeholder"'  					Value = ""  				}'  				new Toggle  				{  					Text = "A toggler"'  					Value = true  				}'  				new Slider  				{  					Text = "A slider"'  					Min = 0'  					Max = 10'  					Step = 0.1f'  					Value = 3  				}'  				new StepSlider  				{  					Text = "A step slider"'  					Steps = new List<string>()  					{  						"Step 1"'  						"Step 2"'  						"Step 3"  					}'  					Value = 1  				}'  				new Dropdown  				{  					Text = "A dropdown"'  					Options = new List<string>()  					{  						"Option 1"'  						"Option 2"'  						"Option 3"  					}'  					Value = 1  				}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Form,The following statement contains a magic number: customForm.Content = new List<CustomElement>()  			{  				new Label {Text = "A label"}'  				new Input  				{  					Text = ""'  					Placeholder = "Placeholder"'  					Value = ""  				}'  				new Toggle  				{  					Text = "A toggler"'  					Value = true  				}'  				new Slider  				{  					Text = "A slider"'  					Min = 0'  					Max = 10'  					Step = 0.1f'  					Value = 3  				}'  				new StepSlider  				{  					Text = "A step slider"'  					Steps = new List<string>()  					{  						"Step 1"'  						"Step 2"'  						"Step 3"  					}'  					Value = 1  				}'  				new Dropdown  				{  					Text = "A dropdown"'  					Options = new List<string>()  					{  						"Option 1"'  						"Option 2"'  						"Option 3"  					}'  					Value = 1  				}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Form,The following statement contains a magic number: customForm.Content = new List<CustomElement>()  			{  				new Label {Text = "A label"}'  				new Input  				{  					Text = ""'  					Placeholder = "Placeholder"'  					Value = ""  				}'  				new Toggle  				{  					Text = "A toggler"'  					Value = true  				}'  				new Slider  				{  					Text = "A slider"'  					Min = 0'  					Max = 10'  					Step = 0.1f'  					Value = 3  				}'  				new StepSlider  				{  					Text = "A step slider"'  					Steps = new List<string>()  					{  						"Step 1"'  						"Step 2"'  						"Step 3"  					}'  					Value = 1  				}'  				new Dropdown  				{  					Text = "A dropdown"'  					Options = new List<string>()  					{  						"Option 1"'  						"Option 2"'  						"Option 3"  					}'  					Value = 1  				}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ToggleDownfall,The following statement contains a magic number: levelEvent.eventId = 3001;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ToggleDownfall,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object state)  			{  				for (int i = 0; i < short.MaxValue; i = i + 2000)  				{  					var data = i;  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = data;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}  					player.SendMessage("Downfall " + data' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  				for (int i = short.MaxValue; i >= 0; i = i - 2000)  				{  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = i;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}    					player.SendMessage("Downfall " + i' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ToggleDownfall,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object state)  			{  				for (int i = 0; i < short.MaxValue; i = i + 2000)  				{  					var data = i;  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = data;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}  					player.SendMessage("Downfall " + data' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  				for (int i = short.MaxValue; i >= 0; i = i - 2000)  				{  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = i;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}    					player.SendMessage("Downfall " + i' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ToggleDownfall,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object state)  			{  				for (int i = 0; i < short.MaxValue; i = i + 2000)  				{  					var data = i;  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = data;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}  					player.SendMessage("Downfall " + data' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  				for (int i = short.MaxValue; i >= 0; i = i - 2000)  				{  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = i;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}    					player.SendMessage("Downfall " + i' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ToggleDownfall,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object state)  			{  				for (int i = 0; i < short.MaxValue; i = i + 2000)  				{  					var data = i;  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = data;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}  					player.SendMessage("Downfall " + data' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  				for (int i = short.MaxValue; i >= 0; i = i - 2000)  				{  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = i;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}    					player.SendMessage("Downfall " + i' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ToggleDownfall,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object state)  			{  				for (int i = 0; i < short.MaxValue; i = i + 2000)  				{  					var data = i;  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = data;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}  					player.SendMessage("Downfall " + data' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  				for (int i = short.MaxValue; i >= 0; i = i - 2000)  				{  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = i;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}    					player.SendMessage("Downfall " + i' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ToggleDownfall,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object state)  			{  				for (int i = 0; i < short.MaxValue; i = i + 2000)  				{  					var data = i;  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = data;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}  					player.SendMessage("Downfall " + data' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  				for (int i = short.MaxValue; i >= 0; i = i - 2000)  				{  					{  						McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  						levelEvent.eventId = 3001;  						levelEvent.data = i;  						player.SendPacket(levelEvent);  					}  					//{  					//	McpeLevelEvent levelEvent = McpeLevelEvent.CreateObject();  					//	levelEvent.eventId = 3002;  					//	levelEvent.data = i;  					//	player.SendPackage(levelEvent);  					//}    					player.SendMessage("Downfall " + i' type: MessageType.Raw);  					Thread.Sleep(5000);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Portal,The following statement contains a magic number: int width = 4;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Portal,The following statement contains a magic number: int height = 5;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Portal,The following statement contains a magic number: int x = (int) player.KnownPosition.X - width / 2;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Portal,The following statement contains a magic number: portal.Size = new BoundingBox(portal.Coordinates' portal.Coordinates + new BlockCoordinates(4' 5' 3));
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Portal,The following statement contains a magic number: portal.Size = new BoundingBox(portal.Coordinates' portal.Coordinates + new BlockCoordinates(4' 5' 3));
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Portal,The following statement contains a magic number: portal.Size = new BoundingBox(portal.Coordinates' portal.Coordinates + new BlockCoordinates(4' 5' 3));
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ReadTest,The following statement contains a magic number: int width = 128;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ReadTest,The following statement contains a magic number: int height = player.Level.Dimension == Dimension.Overworld ? 256 : 128;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ReadTest,The following statement contains a magic number: int height = player.Level.Dimension == Dimension.Overworld ? 256 : 128;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Orb,The following statement contains a magic number: msg.position = player1.KnownPosition.ToVector3() + new Vector3(1' 2' 1);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Orb,The following statement contains a magic number: msg.count = 10;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Clear,The following statement contains a magic number: slot < 35
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Position,The following statement contains a magic number: int chunkX = position.X >> 4;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Position,The following statement contains a magic number: int chunkZ = position.Z >> 4;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Position,The following statement contains a magic number: sb.AppendLine($"Region X={chunkX >> 5} Z={chunkZ >> 5}");
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Position,The following statement contains a magic number: sb.AppendLine($"Region X={chunkX >> 5} Z={chunkZ >> 5}");
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,FarmingKit,The following statement contains a magic number: var command = new ItemCommand(41' 0' delegate(ItemCommand itemCommand' Level level' Player arg3' BlockCoordinates arg4) { Log.Info("Clicked on command"); });
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,FarmingKit,The following statement contains a magic number: inventory.Slots[c++] = new ItemBucket(8) {Count = 1};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,FarmingKit,The following statement contains a magic number: inventory.Slots[c++] = new ItemWheatSeeds() {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,FarmingKit,The following statement contains a magic number: inventory.Slots[c++] = new ItemBeetrootSeeds() {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,FarmingKit,The following statement contains a magic number: inventory.Slots[c++] = new ItemCarrot() {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,FarmingKit,The following statement contains a magic number: inventory.Slots[c++] = new ItemPotato() {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: switch (kitId)  			{  				case 0:  					// Kit leather tier  					inventory.Boots = new ItemLeatherBoots();  					inventory.Leggings = new ItemLeatherLeggings();  					inventory.Chest = new ItemLeatherChestplate();  					inventory.Helmet = new ItemLeatherHelmet();  					break;  				case 1:  					// Kit gold tier  					inventory.Boots = new ItemGoldBoots();  					inventory.Leggings = new ItemGoldLeggings();  					inventory.Chest = new ItemGoldChestplate();  					inventory.Helmet = new ItemGoldHelmet();  					break;  				case 2:  					// Kit chain tier  					inventory.Boots = new ItemChainmailBoots();  					inventory.Leggings = new ItemChainmailLeggings();  					inventory.Chest = new ItemChainmailChestplate();  					inventory.Helmet = new ItemChainmailHelmet();  					break;  				case 3:  					// Kit iron tier  					inventory.Boots = new ItemIronBoots();  					inventory.Leggings = new ItemIronLeggings();  					inventory.Chest = new ItemIronChestplate();  					inventory.Helmet = new ItemIronHelmet();  					break;  				case 4:  					// Kit diamond tier  					inventory.Boots = new ItemDiamondBoots();  					inventory.Leggings = new ItemDiamondLeggings();  					inventory.Chest = new ItemDiamondChestplate();  					inventory.Helmet = new ItemDiamondHelmet();  					break;  			}
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: switch (kitId)  			{  				case 0:  					// Kit leather tier  					inventory.Boots = new ItemLeatherBoots();  					inventory.Leggings = new ItemLeatherLeggings();  					inventory.Chest = new ItemLeatherChestplate();  					inventory.Helmet = new ItemLeatherHelmet();  					break;  				case 1:  					// Kit gold tier  					inventory.Boots = new ItemGoldBoots();  					inventory.Leggings = new ItemGoldLeggings();  					inventory.Chest = new ItemGoldChestplate();  					inventory.Helmet = new ItemGoldHelmet();  					break;  				case 2:  					// Kit chain tier  					inventory.Boots = new ItemChainmailBoots();  					inventory.Leggings = new ItemChainmailLeggings();  					inventory.Chest = new ItemChainmailChestplate();  					inventory.Helmet = new ItemChainmailHelmet();  					break;  				case 3:  					// Kit iron tier  					inventory.Boots = new ItemIronBoots();  					inventory.Leggings = new ItemIronLeggings();  					inventory.Chest = new ItemIronChestplate();  					inventory.Helmet = new ItemIronHelmet();  					break;  				case 4:  					// Kit diamond tier  					inventory.Boots = new ItemDiamondBoots();  					inventory.Leggings = new ItemDiamondLeggings();  					inventory.Chest = new ItemDiamondChestplate();  					inventory.Helmet = new ItemDiamondHelmet();  					break;  			}
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: switch (kitId)  			{  				case 0:  					// Kit leather tier  					inventory.Boots = new ItemLeatherBoots();  					inventory.Leggings = new ItemLeatherLeggings();  					inventory.Chest = new ItemLeatherChestplate();  					inventory.Helmet = new ItemLeatherHelmet();  					break;  				case 1:  					// Kit gold tier  					inventory.Boots = new ItemGoldBoots();  					inventory.Leggings = new ItemGoldLeggings();  					inventory.Chest = new ItemGoldChestplate();  					inventory.Helmet = new ItemGoldHelmet();  					break;  				case 2:  					// Kit chain tier  					inventory.Boots = new ItemChainmailBoots();  					inventory.Leggings = new ItemChainmailLeggings();  					inventory.Chest = new ItemChainmailChestplate();  					inventory.Helmet = new ItemChainmailHelmet();  					break;  				case 3:  					// Kit iron tier  					inventory.Boots = new ItemIronBoots();  					inventory.Leggings = new ItemIronLeggings();  					inventory.Chest = new ItemIronChestplate();  					inventory.Helmet = new ItemIronHelmet();  					break;  				case 4:  					// Kit diamond tier  					inventory.Boots = new ItemDiamondBoots();  					inventory.Leggings = new ItemDiamondLeggings();  					inventory.Chest = new ItemDiamondChestplate();  					inventory.Helmet = new ItemDiamondHelmet();  					break;  			}
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: EnchantArmor(player.Inventory' (short) EnchantingType.FireProtection' 7);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: var command = new ItemCommand(41' 0' delegate(ItemCommand itemCommand' Level level' Player arg3' BlockCoordinates arg4) { Log.Info("Clicked on command"); });
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemBow()  			{  				ExtraData = new NbtCompound  				{  					new NbtList("ench")  					{  						new NbtCompound  						{  							new NbtShort("id"' 19)'  							new NbtShort("lvl"' 4)  						}  					}  				}  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemBow()  			{  				ExtraData = new NbtCompound  				{  					new NbtList("ench")  					{  						new NbtCompound  						{  							new NbtShort("id"' 19)'  							new NbtShort("lvl"' 4)  						}  					}  				}  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemIronSword  			{  				ExtraData = new NbtCompound  				{  					new NbtList("ench")  					{  						new NbtCompound  						{  							new NbtShort("id"' (short) EnchantingType.Knockback)'  							new NbtShort("lvl"' 2)  						}  					}  				}  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemIronSword  			{  				ExtraData = new NbtCompound  				{  					new NbtList("ench")  					{  						new NbtCompound  						{  							new NbtShort("id"' (short) EnchantingType.Knockback)'  							new NbtShort("lvl"' 3)  						}  					}  				}  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemIronSword  			{  				ExtraData = new NbtCompound  				{  					new NbtList("ench")  					{  						new NbtCompound  						{  							new NbtShort("id"' (short) EnchantingType.Knockback)'  							new NbtShort("lvl"' 4)  						}  					}  				}  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemBlock(new EnchantingTable()' 0) {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = ItemFactory.GetItem(351' 4' 64);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = ItemFactory.GetItem(351' 4' 64);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = ItemFactory.GetItem(351' 4' 64);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemBlock(new Planks()' 0) {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemArrow {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemEgg {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemSnowball {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following statement contains a magic number: inventory.Slots[c++] = new ItemBread {Count = 5};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Potions,The following statement contains a magic number: i < 36
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Furnace,The following statement contains a magic number: inventory.Slots[c++] = new ItemBlock(new Furnace()' 0) {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Furnace,The following statement contains a magic number: inventory.Slots[c++] = new ItemCoal {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Furnace,The following statement contains a magic number: inventory.Slots[c++] = new ItemBlock(new IronOre()' 0) {Count = 64};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,DisplayRestartNotice,The following statement contains a magic number: player.AddPopup(new Popup()  				{  					Priority = 100'  					MessageType = MessageType.Tip'  					Message = "SERVER WILL RESTART!"'  					Duration = 20 * 10'  				});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,DisplayRestartNotice,The following statement contains a magic number: player.AddPopup(new Popup()  				{  					Priority = 100'  					MessageType = MessageType.Tip'  					Message = "SERVER WILL RESTART!"'  					Duration = 20 * 10'  				});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,DisplayRestartNotice,The following statement contains a magic number: player.AddPopup(new Popup()  				{  					Priority = 100'  					MessageType = MessageType.Tip'  					Message = "SERVER WILL RESTART!"'  					Duration = 20 * 10'  				});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,DisplayRestartNotice,The following statement contains a magic number: player.AddPopup(new Popup()  				{  					Priority = 100'  					MessageType = MessageType.Popup'  					Message = "Transfering all players!"'  					Duration = 20 * 10'  				});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,DisplayRestartNotice,The following statement contains a magic number: player.AddPopup(new Popup()  				{  					Priority = 100'  					MessageType = MessageType.Popup'  					Message = "Transfering all players!"'  					Duration = 20 * 10'  				});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,DisplayRestartNotice,The following statement contains a magic number: player.AddPopup(new Popup()  				{  					Priority = 100'  					MessageType = MessageType.Popup'  					Message = "Transfering all players!"'  					Duration = 20 * 10'  				});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,DisplayRestartNotice,The following statement contains a magic number: transfer.port = 19132;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test1,The following statement contains a magic number: i < 10
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test1,The following statement contains a magic number: Thread.Sleep(4000);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test1,The following statement contains a magic number: loc.Y = loc.Y + 10;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test1,The following statement contains a magic number: loc.X = loc.X + 10;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test1,The following statement contains a magic number: loc.Z = loc.Z + 10;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test1,The following statement contains a magic number: Thread.Sleep(4000);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test2,The following statement contains a magic number: Task.Run(() =>  			{  				for (int i = 0; i < 100; i++)  				{  					pos.HeadYaw += 10;  					pos.Yaw += 10;  					player.SetPosition(pos);  					Thread.Sleep(100);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test2,The following statement contains a magic number: Task.Run(() =>  			{  				for (int i = 0; i < 100; i++)  				{  					pos.HeadYaw += 10;  					pos.Yaw += 10;  					player.SetPosition(pos);  					Thread.Sleep(100);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test2,The following statement contains a magic number: Task.Run(() =>  			{  				for (int i = 0; i < 100; i++)  				{  					pos.HeadYaw += 10;  					pos.Yaw += 10;  					player.SetPosition(pos);  					Thread.Sleep(100);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Test2,The following statement contains a magic number: Task.Run(() =>  			{  				for (int i = 0; i < 100; i++)  				{  					pos.HeadYaw += 10;  					pos.Yaw += 10;  					player.SetPosition(pos);  					Thread.Sleep(100);  				}  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Worldborder,The following statement contains a magic number: p.KnownPosition.DistanceTo(center + new BlockCoordinates(x' (int) p.KnownPosition.Y' z)) > p.ChunkRadius * 16
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Worldborder,The following statement contains a magic number: y < 256
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePath,The following statement contains a magic number: int n = 20;
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePath,The following statement contains a magic number: RandomCurve ycurve = new RandomCurve(n' 0' 80' 0.1);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePath,The following statement contains a magic number: RandomCurve ycurve = new RandomCurve(n' 0' 80' 0.1);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePath,The following statement contains a magic number: RandomCurve zcurve = new RandomCurve(n' 0' 100' 0.1);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePath,The following statement contains a magic number: RandomCurve zcurve = new RandomCurve(n' 0' 100' 0.1);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePath,The following statement contains a magic number: GeneratePortal(level' pos + new Vector3(x * 42' (float) y' (float) z)' first' x == n - 1);
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: int['] coords = new[']  			{  				{0' 0}' {0' 1}' {0' 2}' {0' 3}' {0' 4}' {0' 0}'  				{1' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {1' 5}'  				{2' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {2' 5}'  				{3' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {3' 5}'  				{4' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {4' 5}'  				{5' 0}' {0' 0}' {0' 0}' {0' 0}' {0' 0}' {5' 5}'  				{0' 0}' {6' 1}' {6' 2}' {6' 3}' {6' 4}' {6' 5}'  			};
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,GeneratePortal,The following statement contains a magic number: i < coords.Length / 2
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ShowScoreboard,The following statement contains a magic number: score.entries.Add(new ScoreEntryChangeFakePlayer  			{  				Id = 3'  				CustomName = "CustomName1"'  				ObjectiveName = "ObjectiveName"'  				Score = 2  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ShowScoreboard,The following statement contains a magic number: score.entries.Add(new ScoreEntryChangeFakePlayer  			{  				Id = 3'  				CustomName = "CustomName1"'  				ObjectiveName = "ObjectiveName"'  				Score = 2  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ShowScoreboard,The following statement contains a magic number: score.entries.Add(new ScoreEntryChangeFakePlayer  			{  				Id = 4'  				CustomName = "CustomName2"'  				ObjectiveName = "ObjectiveName"'  				Score = 3  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,ShowScoreboard,The following statement contains a magic number: score.entries.Add(new ScoreEntryChangeFakePlayer  			{  				Id = 4'  				CustomName = "CustomName2"'  				ObjectiveName = "ObjectiveName"'  				Score = 3  			});
Magic Number,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,TestSkins,The following statement contains a magic number: var playerMob = new PlayerMob("0x" + size' player.Level)  				{  					KnownPosition = player.KnownPosition + new Vector3(i * 2f' 0f' 0f)'  					Skin = skin  				};
Magic Number,TestPlugin,SineWave,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,SineWave,The following statement contains a magic number: AngularFrequency = 2 * Math.PI * ordinaryFrequency;
Magic Number,TestPlugin,RandomCurve,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,RandomCurve,The following statement contains a magic number: double peakToPeakAmplitude = averagePeakToPeakAmplitude * (r.NextDouble() + 0.5d);
Magic Number,TestPlugin,RandomCurve,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,RandomCurve,The following statement contains a magic number: double amplitude = peakToPeakAmplitude / 2d;
Magic Number,TestPlugin,RandomCurve,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,RandomCurve,The following statement contains a magic number: double phase = 2 * Math.PI * (r.NextDouble() + 0.5d);
Magic Number,TestPlugin,RandomCurve,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,RandomCurve,The following statement contains a magic number: double phase = 2 * Math.PI * (r.NextDouble() + 0.5d);
Magic Number,TestPlugin,Utils,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,IsPrime,The following statement contains a magic number: number == 2
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnBat,The following statement contains a magic number: bat.KnownPosition = coordinates + new Vector3(x / 2f' 1' z / 2f);
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnBat,The following statement contains a magic number: bat.KnownPosition = coordinates + new Vector3(x / 2f' 1' z / 2f);
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnDragon,The following statement contains a magic number: dragon.KnownPosition = coordinates + new Vector3(x * 15' 0' z * 15);
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnDragon,The following statement contains a magic number: dragon.KnownPosition = coordinates + new Vector3(x * 15' 0' z * 15);
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnGhast,The following statement contains a magic number: var entity = new Ghast(player.Level)  					{  						NoAi = false'  						KnownPosition = coordinates + new Vector3(x' 0' z)'  						Scale = 0.1  					};
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnWither,The following statement contains a magic number: wither.KnownPosition.Yaw = angle + 90;
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnWither,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnWither,The following statement contains a magic number: angle < 360
Magic Number,TestPlugin,PushToTheLimitCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\PushToTheLimitCommands.cs,SpawnWither,The following statement contains a magic number: radius -= 4;
Magic Number,TestPlugin.NiceLobby,CustomFrame,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\CustomFrame.cs,CustomFrame,The following statement contains a magic number: _timer = new Timer(Tick' null' 33' 33);
Magic Number,TestPlugin.NiceLobby,CustomFrame,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\CustomFrame.cs,CustomFrame,The following statement contains a magic number: _timer = new Timer(Tick' null' 33' 33);
Magic Number,TestPlugin.NiceLobby,CustomFrame,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\CustomFrame.cs,PlaceBlock,The following statement contains a magic number: switch (face)  			{  				case BlockFace.East: // ok  					Metadata = 0;  					break;  				case BlockFace.West:  					Metadata = 1;  					break;  				case BlockFace.South:  					Metadata = 2;  					break;  				case BlockFace.North: // ok  					Metadata = 3;  					break;  			}
Magic Number,TestPlugin.NiceLobby,CustomFrame,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\CustomFrame.cs,PlaceBlock,The following statement contains a magic number: switch (face)  			{  				case BlockFace.East: // ok  					Metadata = 0;  					break;  				case BlockFace.West:  					Metadata = 1;  					break;  				case BlockFace.South:  					Metadata = 2;  					break;  				case BlockFace.North: // ok  					Metadata = 3;  					break;  			}
Magic Number,TestPlugin.NiceLobby,CustomTestItem,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\CustomTestItem.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ SomeVariable.GetHashCode();
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,TestTranslatedMessages,The following statement contains a magic number: i <= 8
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Wrap,The following statement contains a magic number: return (float) (angle + Math.Ceiling(-angle / 360) * 360);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Wrap,The following statement contains a magic number: return (float) (angle + Math.Ceiling(-angle / 360) * 360);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: direction = direction * 2 / 10;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: direction = direction * 2 / 10;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: direction += 72;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: int width = 25;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: var compass = new string('|'' 72).ToCharArray();
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[9] = 'S';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[9 + 1] = 'W';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[(18)] = 'W';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[(18 + 9)] = 'N';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[(18 + 9)] = 'N';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[(18 + 9 + 1)] = 'W';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[(18 + 9 + 1)] = 'W';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[36] = 'N';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[36 + 9] = 'N';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[36 + 9] = 'N';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[36 + 9 + 1] = 'E';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[36 + 9 + 1] = 'E';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[54] = 'E';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[54 + 9] = 'S';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[54 + 9] = 'S';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[54 + 9 + 1] = 'E';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: compass[54 + 9 + 1] = 'E';
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetCompass,The following statement contains a magic number: return new String(compass.Skip((int) (direction - Math.Floor((double) width / 2))).Take(width).ToArray())  					.Replace("|"' "| ")  					.Replace("| N|"' $"| {ChatFormatting.Bold}{ChatColors.Red}N{ChatFormatting.Reset} |")  					.Replace("| NE|"' $"| {ChatFormatting.Bold}{ChatColors.Yellow}NE{ChatFormatting.Reset} |").Trim('N'' 'W'' 'S'' 'E').Trim('N'' 'W'' 'S'' 'E')  					.Replace("| E|"' $"| {ChatFormatting.Bold}{ChatColors.Green}E{ChatFormatting.Reset} |")  					.Replace("| SE|"' $"| {ChatFormatting.Bold}{ChatColors.Green}SE{ChatFormatting.Reset} |")  					.Replace("| S|"' $"| {ChatFormatting.Bold}{ChatColors.Aqua}S{ChatFormatting.Reset} |")  					.Replace("| SW|"' $"| {ChatFormatting.Bold}{ChatColors.Blue}SW{ChatFormatting.Reset} |")  					.Replace("| W|"' $"| {ChatFormatting.Bold}{ChatColors.DarkPurple}W{ChatFormatting.Reset} |")  					.Replace("| NW|"' $"| {ChatFormatting.Bold}{ChatColors.LightPurple}NW{ChatFormatting.Reset} |")  				;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: Bitmap bitmap = new Bitmap((Bitmap) Image.FromFile(file)' 64' 64);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: Bitmap bitmap = new Bitmap((Bitmap) Image.FromFile(file)' 64' 64);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int offsetx = 16' offsety = 16;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int offsetx = 16' offsety = 16;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: bitmap = CropImage(bitmap' new Rectangle(offsetx' offsety' 12' 18));
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: bitmap = CropImage(bitmap' new Rectangle(offsetx' offsety' 12' 18));
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: byte[] bytes = new byte[32 * 64 * 4];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: byte[] bytes = new byte[32 * 64 * 4];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: byte[] bytes = new byte[32 * 64 * 4];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: x < 64
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: y < 32
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int br = 8;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int bc = 8;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int i = ((c + bc) * 4) + ((r + br) * 64 * 4);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int i = ((c + bc) * 4) + ((r + br) * 64 * 4);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int i = ((c + bc) * 4) + ((r + br) * 64 * 4);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int j = ((c) * 4) + ((r) * 8 * 4);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int j = ((c) * 4) + ((r) * 8 * 4);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: int j = ((c) * 4) + ((r) * 8 * 4);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: texture[(i) + 2] = smiley[j + 2];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: texture[(i) + 2] = smiley[j + 2];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: texture[(i) + 3] = smiley[j + 3];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,SkinTick,The following statement contains a magic number: texture[(i) + 3] = smiley[j + 3];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetTextureFromFile,The following statement contains a magic number: byte[] bytes = new byte[bitmap.Height * bitmap.Width * 4];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: player.CommandPermission = 4;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: idx = 8;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: player.Inventory.Slots[idx++] = new ItemStick() {Count = 64};
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: var fireworks = new ItemFireworks() {Count = 64};
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: fireworks.ExtraData = ItemFireworks.ToNbt(new ItemFireworks.FireworksData()    			{  				Explosions = new List<ItemFireworks.FireworksExplosion>()  				{  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 0}'  						FireworkFade = new[] {(byte) 1}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 0'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 1}'  						FireworkFade = new[] {(byte) 2}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 1'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 2}'  						FireworkFade = new[] {(byte) 3}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 2'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 3}'  						FireworkFade = new[] {(byte) 4}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 3'  					}'  					new ItemFireworks.FireworksExplosion()  					{  						FireworkColor = new[] {(byte) 4}'  						FireworkFade = new[] {(byte) 5}'  						FireworkFlicker = true'  						FireworkTrail = false'  						FireworkType = 4'  					}  				}'  				Flight = 2  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state =>  			{  				Thread.Sleep(2000);  				level.BroadcastMessage($"{ChatColors.Gold}[{ChatColors.Green}+{ChatColors.Gold}]{ChatFormatting.Reset} {player.Username} joined the server");  				var joinSound = new AnvilUseSound(level.SpawnPoint.ToVector3());  				joinSound.Spawn(level);    				//player.SendTitle(null' TitleType.Clear);  				player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 20 * 10);  				if (Context.Server.IsEdu)  				{  					player.SendTitle($"{ChatColors.White}This is a MiNET Education Edition server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome!"' TitleType.Title);  				}  				else  				{  					player.SendTitle($"{ChatColors.White}This is gurun's MiNET test server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome {player.Username}!"' TitleType.Title);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state =>  			{  				Thread.Sleep(2000);  				level.BroadcastMessage($"{ChatColors.Gold}[{ChatColors.Green}+{ChatColors.Gold}]{ChatFormatting.Reset} {player.Username} joined the server");  				var joinSound = new AnvilUseSound(level.SpawnPoint.ToVector3());  				joinSound.Spawn(level);    				//player.SendTitle(null' TitleType.Clear);  				player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 20 * 10);  				if (Context.Server.IsEdu)  				{  					player.SendTitle($"{ChatColors.White}This is a MiNET Education Edition server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome!"' TitleType.Title);  				}  				else  				{  					player.SendTitle($"{ChatColors.White}This is gurun's MiNET test server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome {player.Username}!"' TitleType.Title);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state =>  			{  				Thread.Sleep(2000);  				level.BroadcastMessage($"{ChatColors.Gold}[{ChatColors.Green}+{ChatColors.Gold}]{ChatFormatting.Reset} {player.Username} joined the server");  				var joinSound = new AnvilUseSound(level.SpawnPoint.ToVector3());  				joinSound.Spawn(level);    				//player.SendTitle(null' TitleType.Clear);  				player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 20 * 10);  				if (Context.Server.IsEdu)  				{  					player.SendTitle($"{ChatColors.White}This is a MiNET Education Edition server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome!"' TitleType.Title);  				}  				else  				{  					player.SendTitle($"{ChatColors.White}This is gurun's MiNET test server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome {player.Username}!"' TitleType.Title);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state =>  			{  				Thread.Sleep(2000);  				level.BroadcastMessage($"{ChatColors.Gold}[{ChatColors.Green}+{ChatColors.Gold}]{ChatFormatting.Reset} {player.Username} joined the server");  				var joinSound = new AnvilUseSound(level.SpawnPoint.ToVector3());  				joinSound.Spawn(level);    				//player.SendTitle(null' TitleType.Clear);  				player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 20 * 10);  				if (Context.Server.IsEdu)  				{  					player.SendTitle($"{ChatColors.White}This is a MiNET Education Edition server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome!"' TitleType.Title);  				}  				else  				{  					player.SendTitle($"{ChatColors.White}This is gurun's MiNET test server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome {player.Username}!"' TitleType.Title);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,OnPlayerJoin,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state =>  			{  				Thread.Sleep(2000);  				level.BroadcastMessage($"{ChatColors.Gold}[{ChatColors.Green}+{ChatColors.Gold}]{ChatFormatting.Reset} {player.Username} joined the server");  				var joinSound = new AnvilUseSound(level.SpawnPoint.ToVector3());  				joinSound.Spawn(level);    				//player.SendTitle(null' TitleType.Clear);  				player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 20 * 10);  				if (Context.Server.IsEdu)  				{  					player.SendTitle($"{ChatColors.White}This is a MiNET Education Edition server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome!"' TitleType.Title);  				}  				else  				{  					player.SendTitle($"{ChatColors.White}This is gurun's MiNET test server"' TitleType.SubTitle);  					player.SendTitle($"{ChatColors.Gold}Welcome {player.Username}!"' TitleType.Title);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelOnBlockBreak,The following statement contains a magic number: e.Block.Coordinates.DistanceTo((BlockCoordinates) e.Player.SpawnPosition) < 15
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelOnBlockPlace,The following statement contains a magic number: e.ExistingBlock.Coordinates.DistanceTo((BlockCoordinates) e.Player.SpawnPosition) < 15
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: point2.X += 10;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: point3.X -= 10;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object o)  					{  						Thread.Sleep(100);    						McpeSetTime timeReset = McpeSetTime.CreateObject();  						timeReset.time = (int) level.WorldTime;  						level.RelayBroadcast(timeDay);    						Thread.Sleep(200);    						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point1.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}    						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point2.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point3.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object o)  					{  						Thread.Sleep(100);    						McpeSetTime timeReset = McpeSetTime.CreateObject();  						timeReset.time = (int) level.WorldTime;  						level.RelayBroadcast(timeDay);    						Thread.Sleep(200);    						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point1.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}    						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point2.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point3.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object o)  					{  						Thread.Sleep(100);    						McpeSetTime timeReset = McpeSetTime.CreateObject();  						timeReset.time = (int) level.WorldTime;  						level.RelayBroadcast(timeDay);    						Thread.Sleep(200);    						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point1.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}    						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point2.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point3.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object o)  					{  						Thread.Sleep(100);    						McpeSetTime timeReset = McpeSetTime.CreateObject();  						timeReset.time = (int) level.WorldTime;  						level.RelayBroadcast(timeDay);    						Thread.Sleep(200);    						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point1.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}    						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point2.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point3.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object o)  					{  						Thread.Sleep(100);    						McpeSetTime timeReset = McpeSetTime.CreateObject();  						timeReset.time = (int) level.WorldTime;  						level.RelayBroadcast(timeDay);    						Thread.Sleep(200);    						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point1.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}    						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point2.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point3.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object o)  					{  						Thread.Sleep(100);    						McpeSetTime timeReset = McpeSetTime.CreateObject();  						timeReset.time = (int) level.WorldTime;  						level.RelayBroadcast(timeDay);    						Thread.Sleep(200);    						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point1.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}    						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point2.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point3.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate(object o)  					{  						Thread.Sleep(100);    						McpeSetTime timeReset = McpeSetTime.CreateObject();  						timeReset.time = (int) level.WorldTime;  						level.RelayBroadcast(timeDay);    						Thread.Sleep(200);    						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point1.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}    						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point2.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  						Thread.Sleep(250);  						{  							var mcpeExplode = McpeExplode.CreateObject();  							mcpeExplode.position = point3.ToVector3();  							mcpeExplode.radius = 100;  							mcpeExplode.records = new Records();  							level.RelayBroadcast(mcpeExplode);  						}  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: Math.Abs(m - 3) < 0.1
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: Math.Abs(m - 3) < 0.1
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point1' m < 0.6 ? 0 : 20' new Vector3(m * (m / 2)' m + 10' m * (m / 2))' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point1' m < 0.6 ? 0 : 20' new Vector3(m * (m / 2)' m + 10' m * (m / 2))' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point1' m < 0.6 ? 0 : 20' new Vector3(m * (m / 2)' m + 10' m * (m / 2))' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point1' m < 0.6 ? 0 : 20' new Vector3(m * (m / 2)' m + 10' m * (m / 2))' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point1' m < 0.6 ? 0 : 20' new Vector3(m * (m / 2)' m + 10' m * (m / 2))' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point2' m < 0.4 ? 0 : 12' new Vector3(m' m + 6' m)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point2' m < 0.4 ? 0 : 12' new Vector3(m' m + 6' m)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point2' m < 0.4 ? 0 : 12' new Vector3(m' m + 6' m)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point3' m < 0.2 ? 0 : 9' new Vector3(m / 2' m / 2 + 6' m / 2)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point3' m < 0.2 ? 0 : 9' new Vector3(m / 2' m / 2 + 6' m / 2)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point3' m < 0.2 ? 0 : 9' new Vector3(m / 2' m / 2 + 6' m / 2)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point3' m < 0.2 ? 0 : 9' new Vector3(m / 2' m / 2 + 6' m / 2)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point3' m < 0.2 ? 0 : 9' new Vector3(m / 2' m / 2 + 6' m / 2)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: GenerateParticles(random' level' point3' m < 0.2 ? 0 : 9' new Vector3(m / 2' m / 2 + 6' m / 2)' m);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: m < 0.4 || m > 3
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: m < 0.4 || m > 3
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: m += 0.1f;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: m = -5;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,LevelTick,The following statement contains a magic number: m > 3.8
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GenerateParticles,The following statement contains a magic number: vx *= random.Next(2) == 0 ? 1 : -1;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GenerateParticles,The following statement contains a magic number: vz *= random.Next(2) == 0 ? 1 : -1;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GenerateParticles,The following statement contains a magic number: mobParticles.eventId = (short) (0x4000 | GetParticle(random.Next(0' m < 1 ? 2 : 5)));
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GenerateParticles,The following statement contains a magic number: mobParticles.eventId = (short) (0x4000 | GetParticle(random.Next(0' m < 1 ? 2 : 5)));
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GenerateParticles,The following statement contains a magic number: mobParticles.position = new Vector3(point.X + vx' (point.Y - 2) + yoffset + vy' point.Z + vz);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetParticle,The following statement contains a magic number: switch (rand)  			{  				case 0:  					return (short) ParticleType.Explode; // Expload  					break;  				case 1:  					return (short) ParticleType.Flame; // Flame  					break;  				case 2:  					return (short) ParticleType.Lava; // Lava  					break;  				case 3:  					return (short) ParticleType.Critical; // Critical  					break;  				case 4:  					return (short) ParticleType.DripLava; // Lava drip  					break;  				case 5:  					return (short) ParticleType.MobFlame; // Entity flame  					break;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetParticle,The following statement contains a magic number: switch (rand)  			{  				case 0:  					return (short) ParticleType.Explode; // Expload  					break;  				case 1:  					return (short) ParticleType.Flame; // Flame  					break;  				case 2:  					return (short) ParticleType.Lava; // Lava  					break;  				case 3:  					return (short) ParticleType.Critical; // Critical  					break;  				case 4:  					return (short) ParticleType.DripLava; // Lava drip  					break;  				case 5:  					return (short) ParticleType.MobFlame; // Entity flame  					break;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetParticle,The following statement contains a magic number: switch (rand)  			{  				case 0:  					return (short) ParticleType.Explode; // Expload  					break;  				case 1:  					return (short) ParticleType.Flame; // Flame  					break;  				case 2:  					return (short) ParticleType.Lava; // Lava  					break;  				case 3:  					return (short) ParticleType.Critical; // Critical  					break;  				case 4:  					return (short) ParticleType.DripLava; // Lava drip  					break;  				case 5:  					return (short) ParticleType.MobFlame; // Entity flame  					break;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetParticle,The following statement contains a magic number: switch (rand)  			{  				case 0:  					return (short) ParticleType.Explode; // Expload  					break;  				case 1:  					return (short) ParticleType.Flame; // Flame  					break;  				case 2:  					return (short) ParticleType.Lava; // Lava  					break;  				case 3:  					return (short) ParticleType.Critical; // Critical  					break;  				case 4:  					return (short) ParticleType.DripLava; // Lava drip  					break;  				case 5:  					return (short) ParticleType.MobFlame; // Entity flame  					break;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetParticle,The following statement contains a magic number: return 4;
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,DoDevelopmentPopups,The following statement contains a magic number: player.AddPopup(new Popup()  					{  						MessageType = MessageType.Tip'  						Message = $"{ChatFormatting.Bold}This is a MiNET development server"'  						Duration = 20 * 4  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,DoDevelopmentPopups,The following statement contains a magic number: player.AddPopup(new Popup()  					{  						MessageType = MessageType.Tip'  						Message = $"{ChatFormatting.Bold}This is a MiNET development server"'  						Duration = 20 * 4  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,DoDevelopmentPopups,The following statement contains a magic number: player.AddPopup(new Popup()  					{  						MessageType = MessageType.Popup'  						Message = "Restarts without notice frequently"'  						Duration = 20 * 5'  						DisplayDelay = 20 * 1  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,DoDevelopmentPopups,The following statement contains a magic number: player.AddPopup(new Popup()  					{  						MessageType = MessageType.Popup'  						Message = "Restarts without notice frequently"'  						Duration = 20 * 5'  						DisplayDelay = 20 * 1  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,DoDevelopmentPopups,The following statement contains a magic number: player.AddPopup(new Popup()  					{  						MessageType = MessageType.Popup'  						Message = "Restarts without notice frequently"'  						Duration = 20 * 5'  						DisplayDelay = 20 * 1  					});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: switch (warp)  			{  				case "sg1":  					x = 137;  					y = 20;  					z = 431;  					break;  				case "sg2":  					x = 682;  					y = 20;  					z = 324;  					break;  				case "sg3":  					x = 685;  					y = 20;  					z = -119;  					break;  				default:  					return;  			}
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: var playerLocation = new PlayerLocation  			{  				X = x'  				Y = y'  				Z = z'  				Yaw = 91'  				Pitch = 28'  				HeadYaw = 91  			};
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: var playerLocation = new PlayerLocation  			{  				X = x'  				Y = y'  				Z = z'  				Yaw = 91'  				Pitch = 28'  				HeadYaw = 91  			};
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Warp,The following statement contains a magic number: var playerLocation = new PlayerLocation  			{  				X = x'  				Y = y'  				Z = z'  				Yaw = 91'  				Pitch = 28'  				HeadYaw = 91  			};
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,VideoX,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' MapEntity> entities = new Dictionary<Tuple<int' int>' MapEntity>();    					int width = 2;  					int height = 2;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);      					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new MapEntity(player.Level) {ImageProvider = new VideoImageProvider(frameTicker)});  								}    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								((VideoImageProvider) entities[key].ImageProvider).Frames.Add(CreateCachedPacket(entities[key].EntityId' bitmapToBytes));  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};  					player.Inventory.Slots[i++] = new ItemFrame {Count = 64};    					foreach (MapEntity entity in entities.Values)  					{  						entity.SpawnEntity();  						player.Inventory.Slots[i++] = new ItemMap(entity.EntityId);  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,Video2X,The following statement contains a magic number: Task.Run(delegate  			{  				try  				{  					Dictionary<Tuple<int' int>' List<MapEntity>> entities = new Dictionary<Tuple<int' int>' List<MapEntity>>();    					int width = 6;  					int height = 3;  					int frameCount = numberOfFrames;  					//int frameOffset = 0;  					int frameOffset = 120;    					var frameTicker = new FrameTicker(frameCount);    					// 768x384  					for (int frame = frameOffset; frame < frameCount + frameOffset; frame++)  					{  						Log.Info($"Generating frame {frame}");    						string file = Path.Combine(@"D:\Development\Other\Smash Heroes 3x6 (128)\Smash Heroes 3x6 (128)"' $"Smash Heroes Trailer{frame:D4}.bmp");  						//string file = Path.Combine(@"D:\Development\Other\2 by 1 PE test app ad for Gurun-2\exported frames 2"' $"pe app ad{frame:D2}.bmp");  						if (!File.Exists(file)) continue;    						Bitmap image = new Bitmap((Bitmap) Image.FromFile(file)' width * 128' height * 128);    						for (int x = 0; x < width; x++)  						{  							for (int y = 0; y < height; y++)  							{  								var key = new Tuple<int' int>(x' y);  								if (!entities.ContainsKey(key))  								{  									entities.Add(key' new List<MapEntity>());  								}    								List<MapEntity> frames = entities[key];    								var croppedImage = CropImage(image' new Rectangle(new Point(x * 128' y * 128)' new Size(128' 128)));  								byte[] bitmapToBytes = BitmapToBytes(croppedImage' color);    								if (bitmapToBytes.Length != 128 * 128 * 4) return;    								MapEntity entity = new MapEntity(player.Level);  								entity.ImageProvider = new MapImageProvider {Batch = CreateCachedPacket(entity.EntityId' bitmapToBytes)};  								entity.SpawnEntity();  								frames.Add(entity);  							}  						}  					}    					int i = 0;    					player.Inventory.Slots[i++] = new ItemBlock(new Planks()' 0) {Count = 64};    					foreach (var entites in entities.Values)  					{  						player.Inventory.Slots[i++] = new CustomItemFrame(entites' frameTicker) {Count = 64};  					}    					player.SendPlayerInventory();  					player.SendMessage("Done generating video."' MessageType.Raw);    					BlockCoordinates center = player.KnownPosition.GetCoordinates3D();  					var level = player.Level;    					for (int x = 0; x < width; x++)  					{  						for (int y = 0; y < height; y++)  						{  							var key = new Tuple<int' int>(x' y);  							List<MapEntity> frames = entities[key];    							BlockCoordinates bc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 2);  							var wood = new Planks {Coordinates = bc};  							level.SetBlock(wood);    							BlockCoordinates frambc = new BlockCoordinates(center.X - x' center.Y + height - y - 1' center.Z + 1);  							ItemFrameBlockEntity itemFrameBlockEntity = new ItemFrameBlockEntity  							{  								Coordinates = frambc  							};    							var itemFrame = new CustomFrame(frames' itemFrameBlockEntity' level' frameTicker)  							{  								Coordinates = frambc'  								Metadata = 3  							};  							level.SetBlock(itemFrame);  							level.SetBlockEntity(itemFrameBlockEntity);  						}  					}  				}  				catch (Exception e)  				{  					Log.Error("Aborted video generation"' e);  				}  			});
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,CreateCachedPacket,The following statement contains a magic number: MapInfo mapInfo = new MapInfo  			{  				MapId = mapId'  				UpdateType = 2'  				Scale = 0'  				X = 0'  				Z = 0'  				Col = 128'  				Row = 128'  				XOffset = 0'  				ZOffset = 0'  				Data = bitmapToBytes'  			};
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,CreateCachedPacket,The following statement contains a magic number: MapInfo mapInfo = new MapInfo  			{  				MapId = mapId'  				UpdateType = 2'  				Scale = 0'  				X = 0'  				Z = 0'  				Col = 128'  				Row = 128'  				XOffset = 0'  				ZOffset = 0'  				Data = bitmapToBytes'  			};
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,CreateCachedPacket,The following statement contains a magic number: MapInfo mapInfo = new MapInfo  			{  				MapId = mapId'  				UpdateType = 2'  				Scale = 0'  				X = 0'  				Z = 0'  				Col = 128'  				Row = 128'  				XOffset = 0'  				ZOffset = 0'  				Data = bitmapToBytes'  			};
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GrayScale,The following statement contains a magic number: var rgb = (int) ((c.R + c.G + c.B) / 3);
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,BitmapToBytes,The following statement contains a magic number: bytes = new byte[bitmap.Height * bitmap.Width * 4];
Magic Number,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,BitmapToBytes,The following statement contains a magic number: byte rgb = (byte) ((color.R + color.G + color.B) / 3);
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: Age++ < 100
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: Age == 20 * 300
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: Age == 20 * 300
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: RageTick = 20 * 3;
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: RageTick = 20 * 3;
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: Owner.HealthManager.Health == 100
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: double tanOutput = 90 - RadianToDegree(Math.Atan(dx / (dz)));
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: double thetaOffset = 270d;
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: thetaOffset = 90;
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: var dy = (KnownPosition.Y + Height) - (closestPlayer.KnownPosition.Y + 1.62);
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: dx = (rand.NextDouble() - rand.NextDouble()) * 0.01D;
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: dx * dx + dz * dz < 0.00010
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: float knockbackMultiplier = 0.4F;
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: target.HealthManager.TakeHit(this' IsBaby ? 1 : 10' DamageCause.EntityAttack);
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: Age > 20 && Math.Abs(Velocity.Length()) < 0.001
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,OnTick,The following statement contains a magic number: Age > 20 && Math.Abs(Velocity.Length()) < 0.001
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,RadianToDegree,The following statement contains a magic number: return angle * (180.0 / Math.PI);
Magic Number,TestPlugin.Pets,Pet,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\Pet.cs,GetMetadata,The following statement contains a magic number: metadata[14] = new MetadataByte((byte) (IsBaby ? 1 : 0));
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,The following statement contains a magic number: int size = Entity.Level.Random.Next(0' 3);
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,The following statement contains a magic number: pet.RageTick = 20 * 3;
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,The following statement contains a magic number: pet.RageTick = 20 * 3;
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,The following statement contains a magic number: !pet.IsInRage && IsOnFire && pet.Level.Random.Next(10) == 0
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,The following statement contains a magic number: pet.RageTick = 20 * 2;
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,The following statement contains a magic number: pet.RageTick = 20 * 2;
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,The following statement contains a magic number: pet.Level.Random.Next(500) == 0
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,TakeHit,The following statement contains a magic number: particle.Position = Entity.KnownPosition.ToVector3() + new Vector3(0' (float) (Entity.Height + 0.85d)' 0);
Magic Number,TestPlugin.Pets,PetHealthManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetHealthManager.cs,OnTick,The following statement contains a magic number: Health = 200;
Magic Number,TestPlugin.Pets,PetsPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetsPlugin.cs,Pet,The following statement contains a magic number: double height = 0.5;
Magic Number,TestPlugin.SafePay,SafePayPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SafePay\SafePayPlugin.cs,ExecutePayVisa,The following statement contains a magic number: customForm.Content = new List<CustomElement>()  			{  				new Label {Text = "Safe money transfer using your VISA card"}'  				new Input  				{  					Text = ""'  					Placeholder = "Name - as it appears on card"'  					Value = "John Doe"  				}'  				new Input  				{  					Text = ""'  					Placeholder = "Credit card number"'  					Value = "4242424242424242"  				}'  				new Dropdown  				{  					Text = "Expiration date (month)"'  					Options = new List<string>()  					{  						"01 - January"'  						"02 - February"'  						"03 - March"  					}'  					Value = 0  				}'  				new Dropdown  				{  					Text = "Expiration date (year)"'  					Options = new List<string>()  					{  						"2017"'  						"2018"'  						"2019"  					}'  					Value = 2  				}'  				new Input  				{  					Text = ""'  					Placeholder = "Security code (3 on back)"'  					Value = "111"  				}'  				new Toggle  				{  					Text = "Save payment info (safe)"'  					Value = true  				}'  				new Label {Text = "§lWhat happens now?§r\nThis is step 1 of 2. After submitting payment information you will be able to review your order.\nWe will not bill you until confirm the order on next page (step 2)."}'  			};
Magic Number,TestPlugin.SafePay,SafePayPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SafePay\SafePayPlugin.cs,ExecutePayment,The following statement contains a magic number: double amount = 1.90;
Magic Number,TestPlugin.SafePay,SafePayPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SafePay\SafePayPlugin.cs,ExecutePayment,The following statement contains a magic number: var chargeOptions = new StripeChargeCreateOptions()  			{  				Amount = (int?) (amount * 100)'  				Currency = "usd"'  				Description = "Charge for rich.dude@mailinator.com"'  				SourceCard = new SourceCard()  				{  					Number = "4242424242424242"'  					ExpirationMonth = 01'  					ExpirationYear = 2025'  					Cvc = "111"'  					//Capture = true  				}'  			};
Magic Number,TestPlugin.SafePay,SafePayPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SafePay\SafePayPlugin.cs,ExecutePayment,The following statement contains a magic number: var chargeOptions = new StripeChargeCreateOptions()  			{  				Amount = (int?) (amount * 100)'  				Currency = "usd"'  				Description = "Charge for rich.dude@mailinator.com"'  				SourceCard = new SourceCard()  				{  					Number = "4242424242424242"'  					ExpirationMonth = 01'  					ExpirationYear = 2025'  					Cvc = "111"'  					//Capture = true  				}'  			};
Magic Number,TestPlugin.SurivalCraft,SurvivalCraftPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SurivalCraft\SurvivalCraftPlugin.cs,LevelOnBlockBreak,The following statement contains a magic number: e.Block.Coordinates.DistanceTo((BlockCoordinates) e.Player.SpawnPosition) < 16 * 4
Magic Number,TestPlugin.SurivalCraft,SurvivalCraftPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SurivalCraft\SurvivalCraftPlugin.cs,LevelOnBlockBreak,The following statement contains a magic number: e.Block.Coordinates.DistanceTo((BlockCoordinates) e.Player.SpawnPosition) < 16 * 4
Magic Number,TestPlugin.SurivalCraft,SurvivalCraftPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SurivalCraft\SurvivalCraftPlugin.cs,LevelOnBlockPlace,The following statement contains a magic number: e.ExistingBlock.Coordinates.DistanceTo((BlockCoordinates) e.Player.SpawnPosition) < 16 * 4
Magic Number,TestPlugin.SurivalCraft,SurvivalCraftPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\SurivalCraft\SurvivalCraftPlugin.cs,LevelOnBlockPlace,The following statement contains a magic number: e.ExistingBlock.Coordinates.DistanceTo((BlockCoordinates) e.Player.SpawnPosition) < 16 * 4
Missing Default,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Kit,The following switch statement is missing a default case: switch (kitId)  			{  				case 0:  					// Kit leather tier  					inventory.Boots = new ItemLeatherBoots();  					inventory.Leggings = new ItemLeatherLeggings();  					inventory.Chest = new ItemLeatherChestplate();  					inventory.Helmet = new ItemLeatherHelmet();  					break;  				case 1:  					// Kit gold tier  					inventory.Boots = new ItemGoldBoots();  					inventory.Leggings = new ItemGoldLeggings();  					inventory.Chest = new ItemGoldChestplate();  					inventory.Helmet = new ItemGoldHelmet();  					break;  				case 2:  					// Kit chain tier  					inventory.Boots = new ItemChainmailBoots();  					inventory.Leggings = new ItemChainmailLeggings();  					inventory.Chest = new ItemChainmailChestplate();  					inventory.Helmet = new ItemChainmailHelmet();  					break;  				case 3:  					// Kit iron tier  					inventory.Boots = new ItemIronBoots();  					inventory.Leggings = new ItemIronLeggings();  					inventory.Chest = new ItemIronChestplate();  					inventory.Helmet = new ItemIronHelmet();  					break;  				case 4:  					// Kit diamond tier  					inventory.Boots = new ItemDiamondBoots();  					inventory.Leggings = new ItemDiamondLeggings();  					inventory.Chest = new ItemDiamondChestplate();  					inventory.Helmet = new ItemDiamondHelmet();  					break;  			}
Missing Default,TestPlugin,CoreCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\CoreCommands.cs,Effect,The following switch statement is missing a default case: switch (effectType)  				{  					case EffectType.Speed:  						eff = new Speed();  						break;  					case EffectType.Slowness:  						eff = new Slowness();  						break;  					case EffectType.Haste:  						eff = new Haste();  						break;  					case EffectType.MiningFatigue:  						eff = new MiningFatigue();  						break;  					case EffectType.Strength:  						eff = new Strength();  						break;  					case EffectType.InstantHealth:  						eff = new InstantHealth();  						break;  					case EffectType.InstantDamage:  						eff = new InstantDamage();  						break;  					case EffectType.JumpBoost:  						eff = new JumpBoost();  						break;  					case EffectType.Nausea:  						eff = new Nausea();  						break;  					case EffectType.Regeneration:  						eff = new Regeneration();  						break;  					case EffectType.Resistance:  						eff = new Resistance();  						break;  					case EffectType.FireResistance:  						eff = new FireResistance();  						break;  					case EffectType.WaterBreathing:  						eff = new WaterBreathing();  						break;  					case EffectType.Invisibility:  						eff = new Invisibility();  						break;  					case EffectType.Blindness:  						eff = new Blindness();  						break;  					case EffectType.NightVision:  						eff = new NightVision();  						break;  					case EffectType.Hunger:  						eff = new Hunger();  						break;  					case EffectType.Weakness:  						eff = new Weakness();  						break;  					case EffectType.Poison:  						eff = new Poison();  						break;  					case EffectType.Wither:  						eff = new Wither();  						break;  					case EffectType.HealthBoost:  						eff = new HealthBoost();  						break;  					case EffectType.Absorption:  						eff = new Absorption();  						break;  					case EffectType.Saturation:  						eff = new Saturation();  						break;  				}
Missing Default,TestPlugin.NiceLobby,CustomFrame,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\CustomFrame.cs,PlaceBlock,The following switch statement is missing a default case: switch (face)  			{  				case BlockFace.East: // ok  					Metadata = 0;  					break;  				case BlockFace.West:  					Metadata = 1;  					break;  				case BlockFace.South:  					Metadata = 2;  					break;  				case BlockFace.North: // ok  					Metadata = 3;  					break;  			}
Missing Default,TestPlugin.NiceLobby,NiceLobbyPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\NiceLobby\NiceLobbyPlugin.cs,GetParticle,The following switch statement is missing a default case: switch (rand)  			{  				case 0:  					return (short) ParticleType.Explode; // Expload  					break;  				case 1:  					return (short) ParticleType.Flame; // Flame  					break;  				case 2:  					return (short) ParticleType.Lava; // Lava  					break;  				case 3:  					return (short) ParticleType.Critical; // Critical  					break;  				case 4:  					return (short) ParticleType.DripLava; // Lava drip  					break;  				case 5:  					return (short) ParticleType.MobFlame; // Entity flame  					break;  			}
Missing Default,TestPlugin.Pets,PetsPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\TestPlugin\Pets\PetsPlugin.cs,Pet,The following switch statement is missing a default case: switch (petType)  			{  				case PetTypes.Chicken:  					height = new Chicken(null).Height;  					break;  				case PetTypes.Cow:  					height = new Cow(null).Height;  					break;  				case PetTypes.Pig:  					height = new Pig(null).Height;  					break;  				case PetTypes.Sheep:  					height = new Sheep(null).Height;  					break;  				case PetTypes.Wolf:  					height = new Wolf(null).Height;  					break;  				case PetTypes.Npc:  					break;  				case PetTypes.Mooshroom:  					break;  				case PetTypes.Squid:  					break;  				case PetTypes.Rabbit:  					break;  				case PetTypes.Bat:  					break;  				case PetTypes.IronGolem:  					break;  				case PetTypes.SnowGolem:  					break;  				case PetTypes.Ocelot:  					break;  				case PetTypes.Zombie:  					break;  				case PetTypes.Creeper:  					break;  				case PetTypes.ZombiePigman:  					break;  				case PetTypes.Enderman:  					break;  				case PetTypes.Blaze:  					break;  				case PetTypes.ZombieVillager:  					break;  				case PetTypes.Witch:  					break;  			}
