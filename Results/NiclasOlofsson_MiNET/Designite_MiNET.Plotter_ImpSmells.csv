Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotAddPlayer,Cyclomatic complexity of the method is 8
Complex Method,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotRemovePlayer,Cyclomatic complexity of the method is 8
Complex Method,MiNET.Plotter,PlotManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotManager.cs,TryClaim,Cyclomatic complexity of the method is 8
Complex Method,MiNET.Plotter,PlotterPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterPlugin.cs,OnTicking,Cyclomatic complexity of the method is 8
Complex Method,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,ResetBlocks,Cyclomatic complexity of the method is 13
Complex Method,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,Cyclomatic complexity of the method is 21
Long Statement,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotSetOwner,The length of the statement  "				var newOwnerPlayer = player.Level.GetSpawnedPlayers().FirstOrDefault(p => p.Username.Equals(username' StringComparison.InvariantCultureIgnoreCase)); " is 148.
Long Statement,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotAddPlayer,The length of the statement  "				var newOwnerPlayer = player.Level.GetSpawnedPlayers().FirstOrDefault(p => p.Username.Equals(username' StringComparison.InvariantCultureIgnoreCase)); " is 148.
Long Statement,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotRemovePlayer,The length of the statement  "				var newOwnerPlayer = player.Level.GetSpawnedPlayers().FirstOrDefault(p => p.Username.Equals(username' StringComparison.InvariantCultureIgnoreCase)); " is 148.
Long Statement,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotVisit,The length of the statement  "			if (!_plotManager.TryGetPlot(coords' out Plot plot)) return "Sorry' we lost his home. Maybe ask an admin to find it again!"; " is 124.
Long Statement,MiNET.Plotter,PlotManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotManager.cs,TryClaim,The length of the statement  "			//player.Level.SetBlock(new GoldBlock {Coordinates = new BlockCoordinates(xOffset' PlotWorldGenerator.PlotHeight + 2' zOffset)}); " is 129.
Long Statement,MiNET.Plotter,PlotManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotManager.cs,TryClaim,The length of the statement  "			//	Coordinates = new BlockCoordinates(xOffset' PlotWorldGenerator.PlotHeight + 2' zOffset) + new BlockCoordinates(PlotWorldGenerator.PlotWidth - 1' 1' PlotWorldGenerator.PlotDepth - 1) " is 184.
Long Statement,MiNET.Plotter,PlotManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotManager.cs,TryClaim,The length of the statement  "			Vector3 to = (Vector3) offset + (Vector3) new BlockCoordinates(PlotWorldGenerator.PlotWidth - 1' 256' PlotWorldGenerator.PlotDepth - 1); " is 136.
Long Statement,MiNET.Plotter,PlotManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotManager.cs,GetBoundingBoxForPlot,The length of the statement  "			Vector3 to = (Vector3) offset + (Vector3) new BlockCoordinates(PlotWorldGenerator.PlotWidth - 1' 256' PlotWorldGenerator.PlotDepth - 1); " is 136.
Long Statement,MiNET.Plotter,PlotterPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterPlugin.cs,OnTicking,The length of the statement  "						player.SendTitle($"{plotDescription}{ChatColors.White}Owner is {_plotManager.GetPlotPlayer(plot.Owner).Username}"' TitleType.SubTitle); " is 135.
Long Statement,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The length of the statement  "					if ((x - RoadWidth + 1)%PlotAreaWidth == 0 && !IsZRoad(z)) chunk.SetBlock(x - xOffset' PlotHeight' z - zOffset' leaves.Id); " is 123.
Long Statement,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The length of the statement  "					if ((z - RoadWidth + 1)%PlotAreaDepth == 0 && !IsXRoad(x)) chunk.SetBlock(x - xOffset' PlotHeight' z - zOffset' leaves.Id); " is 123.
Long Statement,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The length of the statement  "					//if (x%PlotAreaWidth == 0 && z%PlotAreaDepth == 0) chunk.SetBlock(x - xOffset' PlotHeight + 1' z - zOffset' new RedstoneBlock().Id); " is 133.
Long Statement,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The length of the statement  "					//if (x%PlotAreaWidth == PlotAreaWidth - 1 && z%PlotAreaDepth == PlotAreaDepth - 1) chunk.SetBlock(x - xOffset' PlotHeight + 1' z - zOffset' new LapisBlock().Id); // stone " is 171.
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotAuto,The following statement contains a magic number: 2*x*d < m
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotAuto,The following statement contains a magic number: 2*y*d < m
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotAuto,The following statement contains a magic number: i++ < 1000
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,ClaimPlot,The following statement contains a magic number: var center = bbox.Max - (bbox.Max - bbox.Min)/2;
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,ClaimPlot,The following statement contains a magic number: player.Teleport(new PlayerLocation(center.X' height + 3' center.Z));
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotHome,The following statement contains a magic number: plotPlayer.Home.Y = height + 2;
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotVisit,The following statement contains a magic number: plotPlayer.Home.Y = height + 2;
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotVisit,The following statement contains a magic number: var center = bbox.Max - (bbox.Max - bbox.Min)/2;
Magic Number,MiNET.Plotter,PlotCommands,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCommands.cs,PlotVisit,The following statement contains a magic number: player.Teleport(new PlayerLocation(center.X' height + 3' center.Z));
Magic Number,MiNET.Plotter,PlotCoordinates,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotCoordinates.cs,GetHashCode,The following statement contains a magic number: return (X*397) ^ Z;
Magic Number,MiNET.Plotter,PlotManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotManager.cs,TryClaim,The following statement contains a magic number: Vector3 to = (Vector3) offset + (Vector3) new BlockCoordinates(PlotWorldGenerator.PlotWidth - 1' 256' PlotWorldGenerator.PlotDepth - 1);
Magic Number,MiNET.Plotter,PlotManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotManager.cs,GetBoundingBoxForPlot,The following statement contains a magic number: Vector3 to = (Vector3) offset + (Vector3) new BlockCoordinates(PlotWorldGenerator.PlotWidth - 1' 256' PlotWorldGenerator.PlotDepth - 1);
Magic Number,MiNET.Plotter,PlotterLevelManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterLevelManager.cs,GetLevel,The following statement contains a magic number: int viewDistance = Config.GetProperty("ViewDistance"' 11);
Magic Number,MiNET.Plotter,PlotterLevelManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterLevelManager.cs,GetLevel,The following statement contains a magic number: level = new Level(this' name' worldProvider' EntityManager' GameMode.Creative' Difficulty.Normal' viewDistance)  				{  					EnableBlockTicking = Config.GetProperty("EnableBlockTicking"' false)'  					EnableChunkTicking = Config.GetProperty("EnableChunkTicking"' false)'  					SaveInterval = Config.GetProperty("Save.Interval"' 300)'  					UnloadInterval = Config.GetProperty("Unload.Interval"' 30)'    					DrowningDamage = Config.GetProperty("GameRule.DrowningDamage"' true)'  					CommandblockOutput = Config.GetProperty("GameRule.CommandblockOutput"' true)'  					DoTiledrops = Config.GetProperty("GameRule.DoTiledrops"' true)'  					DoMobloot = Config.GetProperty("GameRule.DoMobloot"' true)'  					KeepInventory = Config.GetProperty("GameRule.KeepInventory"' true)'  					DoDaylightcycle = Config.GetProperty("GameRule.DoDaylightcycle"' true)'  					DoMobspawning = Config.GetProperty("GameRule.DoMobspawning"' true)'  					DoEntitydrops = Config.GetProperty("GameRule.DoEntitydrops"' true)'  					DoFiretick = Config.GetProperty("GameRule.DoFiretick"' true)'  					DoWeathercycle = Config.GetProperty("GameRule.DoWeathercycle"' true)'  					Pvp = Config.GetProperty("GameRule.Pvp"' true)'  					Falldamage = Config.GetProperty("GameRule.Falldamage"' true)'  					Firedamage = Config.GetProperty("GameRule.Firedamage"' true)'  					Mobgriefing = Config.GetProperty("GameRule.Mobgriefing"' true)'  					ShowCoordinates = Config.GetProperty("GameRule.ShowCoordinates"' true)'  					NaturalRegeneration = Config.GetProperty("GameRule.NaturalRegeneration"' true)'  					TntExplodes = Config.GetProperty("GameRule.TntExplodes"' true)'  					SendCommandfeedback = Config.GetProperty("GameRule.SendCommandfeedback"' true)'  					RandomTickSpeed = Config.GetProperty("GameRule.RandomTickSpeed"' 3)'  				};
Magic Number,MiNET.Plotter,PlotterLevelManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterLevelManager.cs,GetLevel,The following statement contains a magic number: level = new Level(this' name' worldProvider' EntityManager' GameMode.Creative' Difficulty.Normal' viewDistance)  				{  					EnableBlockTicking = Config.GetProperty("EnableBlockTicking"' false)'  					EnableChunkTicking = Config.GetProperty("EnableChunkTicking"' false)'  					SaveInterval = Config.GetProperty("Save.Interval"' 300)'  					UnloadInterval = Config.GetProperty("Unload.Interval"' 30)'    					DrowningDamage = Config.GetProperty("GameRule.DrowningDamage"' true)'  					CommandblockOutput = Config.GetProperty("GameRule.CommandblockOutput"' true)'  					DoTiledrops = Config.GetProperty("GameRule.DoTiledrops"' true)'  					DoMobloot = Config.GetProperty("GameRule.DoMobloot"' true)'  					KeepInventory = Config.GetProperty("GameRule.KeepInventory"' true)'  					DoDaylightcycle = Config.GetProperty("GameRule.DoDaylightcycle"' true)'  					DoMobspawning = Config.GetProperty("GameRule.DoMobspawning"' true)'  					DoEntitydrops = Config.GetProperty("GameRule.DoEntitydrops"' true)'  					DoFiretick = Config.GetProperty("GameRule.DoFiretick"' true)'  					DoWeathercycle = Config.GetProperty("GameRule.DoWeathercycle"' true)'  					Pvp = Config.GetProperty("GameRule.Pvp"' true)'  					Falldamage = Config.GetProperty("GameRule.Falldamage"' true)'  					Firedamage = Config.GetProperty("GameRule.Firedamage"' true)'  					Mobgriefing = Config.GetProperty("GameRule.Mobgriefing"' true)'  					ShowCoordinates = Config.GetProperty("GameRule.ShowCoordinates"' true)'  					NaturalRegeneration = Config.GetProperty("GameRule.NaturalRegeneration"' true)'  					TntExplodes = Config.GetProperty("GameRule.TntExplodes"' true)'  					SendCommandfeedback = Config.GetProperty("GameRule.SendCommandfeedback"' true)'  					RandomTickSpeed = Config.GetProperty("GameRule.RandomTickSpeed"' 3)'  				};
Magic Number,MiNET.Plotter,PlotterLevelManager,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterLevelManager.cs,GetLevel,The following statement contains a magic number: level = new Level(this' name' worldProvider' EntityManager' GameMode.Creative' Difficulty.Normal' viewDistance)  				{  					EnableBlockTicking = Config.GetProperty("EnableBlockTicking"' false)'  					EnableChunkTicking = Config.GetProperty("EnableChunkTicking"' false)'  					SaveInterval = Config.GetProperty("Save.Interval"' 300)'  					UnloadInterval = Config.GetProperty("Unload.Interval"' 30)'    					DrowningDamage = Config.GetProperty("GameRule.DrowningDamage"' true)'  					CommandblockOutput = Config.GetProperty("GameRule.CommandblockOutput"' true)'  					DoTiledrops = Config.GetProperty("GameRule.DoTiledrops"' true)'  					DoMobloot = Config.GetProperty("GameRule.DoMobloot"' true)'  					KeepInventory = Config.GetProperty("GameRule.KeepInventory"' true)'  					DoDaylightcycle = Config.GetProperty("GameRule.DoDaylightcycle"' true)'  					DoMobspawning = Config.GetProperty("GameRule.DoMobspawning"' true)'  					DoEntitydrops = Config.GetProperty("GameRule.DoEntitydrops"' true)'  					DoFiretick = Config.GetProperty("GameRule.DoFiretick"' true)'  					DoWeathercycle = Config.GetProperty("GameRule.DoWeathercycle"' true)'  					Pvp = Config.GetProperty("GameRule.Pvp"' true)'  					Falldamage = Config.GetProperty("GameRule.Falldamage"' true)'  					Firedamage = Config.GetProperty("GameRule.Firedamage"' true)'  					Mobgriefing = Config.GetProperty("GameRule.Mobgriefing"' true)'  					ShowCoordinates = Config.GetProperty("GameRule.ShowCoordinates"' true)'  					NaturalRegeneration = Config.GetProperty("GameRule.NaturalRegeneration"' true)'  					TntExplodes = Config.GetProperty("GameRule.TntExplodes"' true)'  					SendCommandfeedback = Config.GetProperty("GameRule.SendCommandfeedback"' true)'  					RandomTickSpeed = Config.GetProperty("GameRule.RandomTickSpeed"' 3)'  				};
Magic Number,MiNET.Plotter,PlotterPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterPlugin.cs,OnTicking,The following statement contains a magic number: player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 3*10);
Magic Number,MiNET.Plotter,PlotterPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterPlugin.cs,OnTicking,The following statement contains a magic number: player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 3*10);
Magic Number,MiNET.Plotter,PlotterPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterPlugin.cs,OnTicking,The following statement contains a magic number: player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 3*10);
Magic Number,MiNET.Plotter,PlotterPlugin,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotterPlugin.cs,OnTicking,The following statement contains a magic number: player.SendTitle(null' TitleType.AnimationTimes' 6' 6' 3*10);
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: var andesite = new Stone() {Metadata = 5};
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: RoadPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 20' Id = gravel.Id' Metadata = gravel.Metadata});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: RoadPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 10' Id = dirt.Id' Metadata = dirt.Metadata});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: RoadPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 10' Id = andesite.Id' Metadata = andesite.Metadata});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: RoadPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 20' Id = stone.Id' Metadata = stone.Metadata});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: RoadPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 40' Id = grass.Id' Metadata = grass.Metadata});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: PlotPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 70' Id = 0' Metadata = 0});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: PlotPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 27' Id = 31' Metadata = 1});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: PlotPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 27' Id = 31' Metadata = 1});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: PlotPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 1' Id = 37' Metadata = 0});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: PlotPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 1' Id = 38' Metadata = 0});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: PlotPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 1' Id = 38' Metadata = 8});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,PlotWorldGenerator,The following statement contains a magic number: PlotPattern.BlockList.Add(new Pattern.BlockDataEntry() {Weight = 1' Id = 38' Metadata = 8});
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,ResetBlocks,The following statement contains a magic number: int height = 255;
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,ResetBlocks,The following statement contains a magic number: level.SetBlock(x' y' z' 7' applyPhysics: false' calculateLight: false' possibleChunk: chunk);
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,ResetBlocks,The following statement contains a magic number: y < 256
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The following statement contains a magic number: int xOffset = chunk.x << 4;
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The following statement contains a magic number: int zOffset = chunk.z << 4;
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The following statement contains a magic number: chunk.SetBlock(x' y' z' 7);
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The following statement contains a magic number: z < 16
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The following statement contains a magic number: x < 16
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The following statement contains a magic number: z < zOffset + 16
Magic Number,MiNET.Plotter,PlotWorldGenerator,C:\research\architectureSmells\repos\NiclasOlofsson_MiNET\src\MiNET\MiNET.Plotter\PlotWorldGenerator.cs,GenerateChunkColumn,The following statement contains a magic number: x < xOffset + 16
