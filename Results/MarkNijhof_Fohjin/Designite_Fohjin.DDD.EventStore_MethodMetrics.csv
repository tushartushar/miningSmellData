Method,LOC,CC,PC
DomainRepository<TDomainEvent>:DomainRepository,4,1,2
DomainRepository<TDomainEvent>:GetById,3,1,1
DomainRepository<TDomainEvent>:Add,3,1,1
DomainRepository<TDomainEvent>:RegisterForTracking,6,2,1
IEventProvider:Clear,0,1,0
IEventProvider:LoadFromHistory,0,1,1
IEventProvider:UpdateVersion,0,1,1
IEventProvider:GetChanges,0,1,0
IRegisterChildEntities:RegisterChildEventProvider,0,1,1
ITransactional:BeginTransaction,0,1,0
ITransactional:Commit,0,1,0
ITransactional:Rollback,0,1,0
IDomainRepository:GetById,0,1,1
IDomainRepository:Add,0,1,1
IEntityEventProvider:Clear,0,1,0
IEntityEventProvider:LoadFromHistory,0,1,1
IEntityEventProvider:HookUpVersionProvider,0,1,1
IEntityEventProvider:GetChanges,0,1,0
IUnitOfWork:Commit,0,1,0
IUnitOfWork:Rollback,0,1,0
BaseAggregateRoot<TDomainEvent>:BaseAggregateRoot,5,1,0
BaseAggregateRoot<TDomainEvent>:RegisterEvent,3,1,1
BaseAggregateRoot<TDomainEvent>:Apply,6,1,1
BaseAggregateRoot<TDomainEvent>:LoadFromHistory,10,3,1
BaseAggregateRoot<TDomainEvent>:apply,6,2,2
BaseAggregateRoot<TDomainEvent>:GetChanges,3,1,0
BaseAggregateRoot<TDomainEvent>:Clear,4,1,0
BaseAggregateRoot<TDomainEvent>:UpdateVersion,3,1,1
BaseAggregateRoot<TDomainEvent>:RegisterChildEventProvider,4,1,1
BaseAggregateRoot<TDomainEvent>:GetChildEventsAndUpdateEventVersion,3,1,0
BaseAggregateRoot<TDomainEvent>:GetNewEventVersion,3,1,0
BaseEntity<TDomainEvent>:BaseEntity,4,1,0
BaseEntity<TDomainEvent>:RegisterEvent,3,1,1
BaseEntity<TDomainEvent>:Apply,6,1,1
BaseEntity<TDomainEvent>:LoadFromHistory,8,3,1
BaseEntity<TDomainEvent>:HookUpVersionProvider,3,1,1
BaseEntity<TDomainEvent>:GetChanges,3,1,0
BaseEntity<TDomainEvent>:Clear,3,1,0
BaseEntity<TDomainEvent>:apply,6,2,2
TryGetByIdExtension:TryGetValueById,4,1,3
EntityList<TEntity;TDomainEvent>:EntityList,3,1,1
EntityList<TEntity;TDomainEvent>:EntityList,3,1,2
EntityList<TEntity;TDomainEvent>:EntityList,3,1,2
EntityList<TEntity;TDomainEvent>:Add,4,1,1
UnregisteredDomainEventException:UnregisteredDomainEventException,1,1,1
EventStoreIdentityMap<TDomainEvent>:EventStoreIdentityMap,3,1,0
EventStoreIdentityMap<TDomainEvent>:GetById,9,3,1
EventStoreIdentityMap<TDomainEvent>:Add,11,3,1
EventStoreIdentityMap<TDomainEvent>:Remove,6,2,2
EventStoreUnitOfWork<TDomainEvent>:EventStoreUnitOfWork,6,1,3
EventStoreUnitOfWork<TDomainEvent>:GetById,7,1,1
EventStoreUnitOfWork<TDomainEvent>:Add,3,1,1
EventStoreUnitOfWork<TDomainEvent>:RegisterForTracking,4,1,1
EventStoreUnitOfWork<TDomainEvent>:Commit,12,2,0
EventStoreUnitOfWork<TDomainEvent>:Rollback,9,2,0
EventStoreUnitOfWork<TDomainEvent>:LoadSnapShotIfExists,6,2,2
EventStoreUnitOfWork<TDomainEvent>:loadRemainingHistoryEvents,9,2,2
IDomainEventStorage:GetAllEvents,0,1,1
IDomainEventStorage:GetEventsSinceLastSnapShot,0,1,1
IDomainEventStorage:GetEventCountSinceLastSnapShot,0,1,1
IDomainEventStorage:Save,0,1,1
IEventStoreUnitOfWork:GetById,0,1,1
IEventStoreUnitOfWork:Add,0,1,1
IEventStoreUnitOfWork:RegisterForTracking,0,1,1
IIdentityMap:GetById,0,1,1
IIdentityMap:Add,0,1,1
IIdentityMap:Remove,0,1,2
ISnapShotStorage:GetSnapShot,0,1,1
ISnapShotStorage:SaveShapShot,0,1,1
SnapShot:SnapShot,5,1,3
IOrginator:CreateMemento,0,1,0
IOrginator:SetMemento,0,1,1
