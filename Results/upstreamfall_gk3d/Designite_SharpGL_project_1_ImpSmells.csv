Implementation smell,Namespace,Class,File,Method,Description
Long Method,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,LightInitialization,The method has 105 lines of code.
Complex Method,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_KeyPress,Cyclomatic complexity of the method is 64
Long Parameter List,SharpGL_project_1,Mesh,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\Mesh.cs,Mesh,The method has 6 parameters.
Long Statement,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_Resized,The length of the statement  "	gl.LookAt (_cameraEye.X' _cameraEye.Y' _cameraEye.Z' _cameraTarget.X + _cameraEye.X' _cameraTarget.Y + _cameraEye.Y' _cameraTarget.Z + _cameraEye.Z' _cameraUp.X' _cameraUp.Y' _cameraUp.Z); " is 188.
Magic Number,SharpGL_project_1,Mesh,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\Mesh.cs,Draw,The following statement contains a magic number: gl.Color (color [0]' color [1]' color [2]' color [3]);  
Magic Number,SharpGL_project_1,Mesh,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\Mesh.cs,Draw,The following statement contains a magic number: gl.Color (color [0]' color [1]' color [2]' color [3]);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Color (0.5' 0.5' 0.5);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Color (0.5' 0.5' 0.5);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Color (0.5' 0.5' 0.5);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Translate (-0.5' -10' -6);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Translate (-0.5' -10' -6);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Translate (-0.5' -10' -6);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Translate (-0.5' -10' 7);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Translate (-0.5' -10' 7);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Translate (-0.5' -10' 7);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Translate (-0.5' -10' 5.5f);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawNet,The following statement contains a magic number: gl.Translate (-0.5' -10' 5.5f);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawCourt,The following statement contains a magic number: for (int i = 0; i < 10; ++i) {  	for (int j = 0; j < 5; ++j) {  		gl.Begin (OpenGL.GL_QUADS);  		gl.Normal (0.0f' -1.0f' 0.0f);  		gl.Vertex (10.0f - i * step' -10.0f + drawEps' 5.0f - j * step);  		gl.Vertex (10.0f - (i + 1) * step' -10.0f + drawEps' 5.0f - j * step);  		gl.Vertex (10.0f - (i + 1) * step' -10.0f + drawEps' 5.0f - (j + 1) * step);  		gl.Vertex (10.0f - i * step' -10.0f + drawEps' 5.0f - (j + 1) * step);  		gl.End ();  	}  }  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawCourt,The following statement contains a magic number: for (int i = 0; i < 10; ++i) {  	for (int j = 0; j < 5; ++j) {  		gl.Begin (OpenGL.GL_QUADS);  		gl.Normal (0.0f' -1.0f' 0.0f);  		gl.Vertex (10.0f - i * step' -10.0f + drawEps' 5.0f - j * step);  		gl.Vertex (10.0f - (i + 1) * step' -10.0f + drawEps' 5.0f - j * step);  		gl.Vertex (10.0f - (i + 1) * step' -10.0f + drawEps' 5.0f - (j + 1) * step);  		gl.Vertex (10.0f - i * step' -10.0f + drawEps' 5.0f - (j + 1) * step);  		gl.End ();  	}  }  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,DrawCourt,The following statement contains a magic number: for (int j = 0; j < 5; ++j) {  	gl.Begin (OpenGL.GL_QUADS);  	gl.Normal (0.0f' -1.0f' 0.0f);  	gl.Vertex (10.0f - i * step' -10.0f + drawEps' 5.0f - j * step);  	gl.Vertex (10.0f - (i + 1) * step' -10.0f + drawEps' 5.0f - j * step);  	gl.Vertex (10.0f - (i + 1) * step' -10.0f + drawEps' 5.0f - (j + 1) * step);  	gl.Vertex (10.0f - i * step' -10.0f + drawEps' 5.0f - (j + 1) * step);  	gl.End ();  }  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_OpenGLInitialized,The following statement contains a magic number: Width = 1280;  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_OpenGLInitialized,The following statement contains a magic number: Height = 720;  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,ModelsLoading,The following statement contains a magic number: position = new Vector3 (5' 0' -5);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,ModelsLoading,The following statement contains a magic number: position = new Vector3 (5' 0' -5);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,CameraInitialization,The following statement contains a magic number: _cameraEye = new Vector3 (0' 0' 40);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,CameraInitialization,The following statement contains a magic number: _cameraTarget = new Vector3 (0' 0' -100);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,CameraInitialization,The following statement contains a magic number: _mousePosition = new Point (Width / 2' Height / 2);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,CameraInitialization,The following statement contains a magic number: _mousePosition = new Point (Width / 2' Height / 2);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,ToDegree,The following statement contains a magic number: return (float)(arg * 180 / Math.PI);  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_KeyPress,The following statement contains a magic number: switch (e.KeyChar) {  #region options  case 'p':  case 'P':  	//pause animation  	_sceneIsRotating = !_sceneIsRotating;  	break;  case (char)27:  //ESC  case 'q':  case 'Q':  	//exit  	Close ();  	break;  #endregion  #region camera movement  case 's':  case 'S':  	//near  	_cameraEye -= _cameraTarget * StepSize;  	keyPressed = true;  	break;  case 'w':  case 'W':  	//far  	_cameraEye += _cameraTarget * StepSize;  	keyPressed = true;  	break;  case 'z':  case 'Z':  	//up  	_cameraEye.Y += StepSize;  	_cameraTarget.Y += StepSize;  	keyPressed = true;  	break;  case 'x':  case 'X':  	//down  	_cameraEye.Y -= StepSize;  	_cameraTarget.Y -= StepSize;  	keyPressed = true;  	break;  case 'd':  case 'D':  	//right  	Vector3 left = _cameraTarget.CrossProduct (_cameraUp);  	left.Normalize ();  	left *= StepSize;  	_cameraEye += left;  	keyPressed = true;  	break;  case 'a':  case 'A':  	//left  	Vector3 right = _cameraUp.CrossProduct (_cameraTarget);  	right.Normalize ();  	right *= StepSize;  	_cameraEye += right;  	keyPressed = true;  	break;  #endregion  #region camera rotation  case 'c':  case 'C':  	//clockwise  	_angleClockwise -= StepSize / 10;  	keyPressed = true;  	break;  case 'v':  case 'V':  	//counterclockwise  	_angleClockwise += StepSize / 10;  	keyPressed = true;  	break;  #endregion  #region wireframe  case '[':  	_wireframeShiftX -= 1.0f;  	break;  case ']':  	_wireframeShiftX += 1.0f;  	break;  #endregion  }  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_KeyPress,The following statement contains a magic number: switch (e.KeyChar) {  #region options  case 'p':  case 'P':  	//pause animation  	_sceneIsRotating = !_sceneIsRotating;  	break;  case (char)27:  //ESC  case 'q':  case 'Q':  	//exit  	Close ();  	break;  #endregion  #region camera movement  case 's':  case 'S':  	//near  	_cameraEye -= _cameraTarget * StepSize;  	keyPressed = true;  	break;  case 'w':  case 'W':  	//far  	_cameraEye += _cameraTarget * StepSize;  	keyPressed = true;  	break;  case 'z':  case 'Z':  	//up  	_cameraEye.Y += StepSize;  	_cameraTarget.Y += StepSize;  	keyPressed = true;  	break;  case 'x':  case 'X':  	//down  	_cameraEye.Y -= StepSize;  	_cameraTarget.Y -= StepSize;  	keyPressed = true;  	break;  case 'd':  case 'D':  	//right  	Vector3 left = _cameraTarget.CrossProduct (_cameraUp);  	left.Normalize ();  	left *= StepSize;  	_cameraEye += left;  	keyPressed = true;  	break;  case 'a':  case 'A':  	//left  	Vector3 right = _cameraUp.CrossProduct (_cameraTarget);  	right.Normalize ();  	right *= StepSize;  	_cameraEye += right;  	keyPressed = true;  	break;  #endregion  #region camera rotation  case 'c':  case 'C':  	//clockwise  	_angleClockwise -= StepSize / 10;  	keyPressed = true;  	break;  case 'v':  case 'V':  	//counterclockwise  	_angleClockwise += StepSize / 10;  	keyPressed = true;  	break;  #endregion  #region wireframe  case '[':  	_wireframeShiftX -= 1.0f;  	break;  case ']':  	_wireframeShiftX += 1.0f;  	break;  #endregion  }  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_KeyPress,The following statement contains a magic number: switch (e.KeyChar) {  #region options  case 'p':  case 'P':  	//pause animation  	_sceneIsRotating = !_sceneIsRotating;  	break;  case (char)27:  //ESC  case 'q':  case 'Q':  	//exit  	Close ();  	break;  #endregion  #region camera movement  case 's':  case 'S':  	//near  	_cameraEye -= _cameraTarget * StepSize;  	keyPressed = true;  	break;  case 'w':  case 'W':  	//far  	_cameraEye += _cameraTarget * StepSize;  	keyPressed = true;  	break;  case 'z':  case 'Z':  	//up  	_cameraEye.Y += StepSize;  	_cameraTarget.Y += StepSize;  	keyPressed = true;  	break;  case 'x':  case 'X':  	//down  	_cameraEye.Y -= StepSize;  	_cameraTarget.Y -= StepSize;  	keyPressed = true;  	break;  case 'd':  case 'D':  	//right  	Vector3 left = _cameraTarget.CrossProduct (_cameraUp);  	left.Normalize ();  	left *= StepSize;  	_cameraEye += left;  	keyPressed = true;  	break;  case 'a':  case 'A':  	//left  	Vector3 right = _cameraUp.CrossProduct (_cameraTarget);  	right.Normalize ();  	right *= StepSize;  	_cameraEye += right;  	keyPressed = true;  	break;  #endregion  #region camera rotation  case 'c':  case 'C':  	//clockwise  	_angleClockwise -= StepSize / 10;  	keyPressed = true;  	break;  case 'v':  case 'V':  	//counterclockwise  	_angleClockwise += StepSize / 10;  	keyPressed = true;  	break;  #endregion  #region wireframe  case '[':  	_wireframeShiftX -= 1.0f;  	break;  case ']':  	_wireframeShiftX += 1.0f;  	break;  #endregion  }  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_KeyPress,The following statement contains a magic number: _angleClockwise -= StepSize / 10;  
Magic Number,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_KeyPress,The following statement contains a magic number: _angleClockwise += StepSize / 10;  
Missing Default,SharpGL_project_1,SharpGLForm,C:\repos\upstreamfall_gk3d\SharpGL_project_1\SharpGL_project_1\SharpGLForm.cs,openGLControl_KeyPress,The following switch statement is missing a default case: switch (e.KeyChar) {  #region options  case 'p':  case 'P':  	//pause animation  	_sceneIsRotating = !_sceneIsRotating;  	break;  case (char)27:  //ESC  case 'q':  case 'Q':  	//exit  	Close ();  	break;  #endregion  #region camera movement  case 's':  case 'S':  	//near  	_cameraEye -= _cameraTarget * StepSize;  	keyPressed = true;  	break;  case 'w':  case 'W':  	//far  	_cameraEye += _cameraTarget * StepSize;  	keyPressed = true;  	break;  case 'z':  case 'Z':  	//up  	_cameraEye.Y += StepSize;  	_cameraTarget.Y += StepSize;  	keyPressed = true;  	break;  case 'x':  case 'X':  	//down  	_cameraEye.Y -= StepSize;  	_cameraTarget.Y -= StepSize;  	keyPressed = true;  	break;  case 'd':  case 'D':  	//right  	Vector3 left = _cameraTarget.CrossProduct (_cameraUp);  	left.Normalize ();  	left *= StepSize;  	_cameraEye += left;  	keyPressed = true;  	break;  case 'a':  case 'A':  	//left  	Vector3 right = _cameraUp.CrossProduct (_cameraTarget);  	right.Normalize ();  	right *= StepSize;  	_cameraEye += right;  	keyPressed = true;  	break;  #endregion  #region camera rotation  case 'c':  case 'C':  	//clockwise  	_angleClockwise -= StepSize / 10;  	keyPressed = true;  	break;  case 'v':  case 'V':  	//counterclockwise  	_angleClockwise += StepSize / 10;  	keyPressed = true;  	break;  #endregion  #region wireframe  case '[':  	_wireframeShiftX -= 1.0f;  	break;  case ']':  	_wireframeShiftX += 1.0f;  	break;  #endregion  }  
