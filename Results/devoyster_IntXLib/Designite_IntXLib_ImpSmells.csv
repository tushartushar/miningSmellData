Implementation smell,Namespace,Class,File,Method,Description
Long Method,IntXLib,AutoNewtonDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\AutoNewtonDivider.cs,DivMod,The method has 113 lines of code.
Long Method,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,The method has 128 lines of code.
Long Method,IntXLib,NewtonHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\NewtonHelper.cs,GetIntegerOpposite,The method has 149 lines of code.
Long Method,IntXLib,FastParser,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\FastParser.cs,Parse,The method has 115 lines of code.
Long Method,IntXLib,FastStringConverter,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\StringConverters\FastStringConverter.cs,ToString,The method has 101 lines of code.
Complex Method,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,Cyclomatic complexity of the method is 16
Complex Method,IntXLib,DividerBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\DividerBase.cs,DivMod,Cyclomatic complexity of the method is 12
Complex Method,IntXLib,DividerBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\DividerBase.cs,DivMod,Cyclomatic complexity of the method is 17
Complex Method,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ConvertDoubleToDigits,Cyclomatic complexity of the method is 10
Complex Method,IntXLib,OpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\OpHelper.cs,Sh,Cyclomatic complexity of the method is 10
Complex Method,IntXLib,ParserBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\ParserBase.cs,Parse,Cyclomatic complexity of the method is 14
Long Parameter List,IntXLib,AutoNewtonDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\AutoNewtonDivider.cs,DivMod,The method has 9 parameters. Parameters: digits1' digitsBuffer1' length1' digits2' digitsBuffer2' length2' digitsRes' resultFlags' cmpResult
Long Parameter List,IntXLib,AutoNewtonDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\AutoNewtonDivider.cs,DivMod,The method has 9 parameters. Parameters: digitsPtr1' digitsBufferPtr1' length1' digitsPtr2' digitsBufferPtr2' length2' digitsResPtr' resultFlags' cmpResult
Long Parameter List,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,The method has 9 parameters. Parameters: digits1' digitsBuffer1' length1' digits2' digitsBuffer2' length2' digitsRes' resultFlags' cmpResult
Long Parameter List,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,The method has 9 parameters. Parameters: digitsPtr1' digitsBufferPtr1' length1' digitsPtr2' digitsBufferPtr2' length2' digitsResPtr' resultFlags' cmpResult
Long Parameter List,IntXLib,DividerBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\DividerBase.cs,DivMod,The method has 9 parameters. Parameters: digits1' digitsBuffer1' length1' digits2' digitsBuffer2' length2' digitsRes' resultFlags' cmpResult
Long Parameter List,IntXLib,DividerBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\DividerBase.cs,DivMod,The method has 9 parameters. Parameters: digitsPtr1' digitsBufferPtr1' length1' digitsPtr2' digitsBufferPtr2' length2' digitsResPtr' resultFlags' cmpResult
Long Parameter List,IntXLib,IDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\IDivider.cs,DivMod,The method has 9 parameters. Parameters: digits1' digitsBuffer1' length1' digits2' digitsBuffer2' length2' digitsRes' resultFlags' cmpResult
Long Parameter List,IntXLib,IDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\IDivider.cs,DivMod,The method has 9 parameters. Parameters: digitsPtr1' digitsBufferPtr1' length1' digitsPtr2' digitsBufferPtr2' length2' digitsResPtr' resultFlags' cmpResult
Long Parameter List,IntXLib,NewtonHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\NewtonHelper.cs,GetIntegerOpposite,The method has 6 parameters. Parameters: digitsPtr' length' maxLength' bufferPtr' newLength' rightShift
Long Parameter List,IntXLib,AutoFhtMultiplier,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\AutoFhtMultiplier.cs,Multiply,The method has 5 parameters. Parameters: digitsPtr1' length1' digitsPtr2' length2' digitsResPtr
Long Parameter List,IntXLib,ClassicMultiplier,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\ClassicMultiplier.cs,Multiply,The method has 5 parameters. Parameters: digitsPtr1' length1' digitsPtr2' length2' digitsResPtr
Long Parameter List,IntXLib,IMultiplier,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\IMultiplier.cs,Multiply,The method has 5 parameters. Parameters: digits1' length1' digits2' length2' digitsRes
Long Parameter List,IntXLib,IMultiplier,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\IMultiplier.cs,Multiply,The method has 5 parameters. Parameters: digitsPtr1' length1' digitsPtr2' length2' digitsResPtr
Long Parameter List,IntXLib,MultiplierBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\MultiplierBase.cs,Multiply,The method has 5 parameters. Parameters: digits1' length1' digits2' length2' digitsRes
Long Parameter List,IntXLib,MultiplierBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\MultiplierBase.cs,Multiply,The method has 5 parameters. Parameters: digitsPtr1' length1' digitsPtr2' length2' digitsResPtr
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Add,The method has 5 parameters. Parameters: digits1' length1' digits2' length2' digitsRes
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Add,The method has 5 parameters. Parameters: digitsPtr1' length1' digitsPtr2' length2' digitsResPtr
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Sub,The method has 5 parameters. Parameters: digits1' length1' digits2' length2' digitsRes
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Sub,The method has 5 parameters. Parameters: digitsPtr1' length1' digitsPtr2' length2' digitsResPtr
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,DivMod,The method has 5 parameters. Parameters: digits1' length1' int2' divRes' modRes
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,DivMod,The method has 5 parameters. Parameters: digitsPtr1' length1' int2' divResPtr' modRes
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Shr,The method has 6 parameters. Parameters: digits' offset' length' digitsRes' resOffset' rightShift
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Shr,The method has 5 parameters. Parameters: digitsPtr' length' digitsResPtr' rightShift' resHasOffset
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,BitwiseOr,The method has 5 parameters. Parameters: digits1' length1' digits2' length2' digitsRes
Long Parameter List,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,ExclusiveOr,The method has 5 parameters. Parameters: digits1' length1' digits2' length2' digitsRes
Long Parameter List,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,FhtButterfly,The method has 6 parameters. Parameters: slice1' slice2' index1' index2' cos' sin
Long Parameter List,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFhtButterfly,The method has 6 parameters. Parameters: slice1' slice2' index1' index2' cos' sin
Long Parameter List,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFhtButterfly2,The method has 6 parameters. Parameters: slice1' slice2' index1' index2' cos' sin
Long Parameter List,IntXLib,ClassicParser,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\ClassicParser.cs,Parse,The method has 6 parameters. Parameters: value' startIndex' endIndex' numberBase' charToDigits' digitsRes
Long Parameter List,IntXLib,FastParser,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\FastParser.cs,Parse,The method has 6 parameters. Parameters: value' startIndex' endIndex' numberBase' charToDigits' digitsRes
Long Parameter List,IntXLib,IParser,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\IParser.cs,Parse,The method has 6 parameters. Parameters: value' startIndex' endIndex' numberBase' charToDigits' digitsRes
Long Parameter List,IntXLib,ParserBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\ParserBase.cs,Parse,The method has 6 parameters. Parameters: value' startIndex' endIndex' numberBase' charToDigits' digitsRes
Long Parameter List,IntXLib,Pow2Parser,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\Pow2Parser.cs,Parse,The method has 6 parameters. Parameters: value' startIndex' endIndex' numberBase' charToDigits' digitsRes
Long Statement,IntXLib,AutoNewtonDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\AutoNewtonDivider.cs,DivMod,The length of the statement  "			fixed (uint* digitsPtr1 = digits1' digitsBufferPtr1 = digitsBuffer1' digitsPtr2 = digits2' digitsBufferPtr2 = digitsBuffer2 != null ? digitsBuffer2 : digits1' digitsResPtr = digitsRes != null ? digitsRes : digits1) " is 214.
Long Statement,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,The length of the statement  "			fixed (uint* digitsPtr1 = digits1' digitsBufferPtr1 = digitsBuffer1' digitsPtr2 = digits2' digitsBufferPtr2 = digitsBuffer2' digitsResPtr = digitsRes != null ? digitsRes : digits1) " is 180.
Long Statement,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,The length of the statement  "					if (divEst == Constants.BitCountStepOf2 || divEst * preLastDigit2 > (modEst << Constants.DigitBitCount) + digitsBufferPtr1[iLen2 - 2]) " is 134.
Long Statement,IntXLib,OpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\OpHelper.cs,Sh,The length of the statement  "			uint newLength = (uint)(newBitCount / Constants.DigitBitCount + (newBitCount % Constants.DigitBitCount == 0 ? 0UL : 1UL)); " is 122.
Complex Conditional,IntXLib,AutoFhtMultiplier,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\AutoFhtMultiplier.cs,Multiply,The conditional expression  "length1 < Constants.AutoFhtLengthLowerBound || length2 < Constants.AutoFhtLengthLowerBound ||  			    length1 > Constants.AutoFhtLengthUpperBound || length2 > Constants.AutoFhtLengthUpperBound"  is complex.
Magic Number,IntXLib,DigitConverter,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\DigitConverter.cs,ToBytes,The following statement contains a magic number: byte[] bytes = new byte[digits.Length * 4];
Magic Number,IntXLib,DigitConverter,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\DigitConverter.cs,FromBytes,The following statement contains a magic number: bytes.Length % 4 != 0
Magic Number,IntXLib,DigitConverter,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\DigitConverter.cs,FromBytes,The following statement contains a magic number: uint[] digits = new uint[bytes.Length / 4];
Magic Number,IntXLib,AutoNewtonDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\AutoNewtonDivider.cs,DivMod,The following statement contains a magic number: highestLostBit = quotPtr[shiftOffset - 1] >> 31;
Magic Number,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,The following statement contains a magic number: int shift1 = 31 - Bits.Msb(digitsPtr2[length2 - 1]);
Magic Number,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,The following statement contains a magic number: uint preLastDigit2 = digitsBufferPtr2[length2 - 2];
Magic Number,IntXLib,ClassicDivider,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\ClassicDivider.cs,DivMod,The following statement contains a magic number: divEst == Constants.BitCountStepOf2 || divEst * preLastDigit2 > (modEst << Constants.DigitBitCount) + digitsBufferPtr1[iLen2 - 2]
Magic Number,IntXLib,DividerBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Dividers\DividerBase.cs,DivMod,The following statement contains a magic number: cmpResult == -2
Magic Number,IntXLib,NewtonHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\NewtonHelper.cs,GetIntegerOpposite,The following statement contains a magic number: int leftShift = (2 - msb + Constants.DigitBitCount) % Constants.DigitBitCount;
Magic Number,IntXLib,NewtonHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\NewtonHelper.cs,GetIntegerOpposite,The following statement contains a magic number: msb != 2
Magic Number,IntXLib,NewtonHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\NewtonHelper.cs,GetIntegerOpposite,The following statement contains a magic number: uint bufferDigitN2 = bufferPtr[length - 2];
Magic Number,IntXLib,NewtonHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\NewtonHelper.cs,GetIntegerOpposite,The following statement contains a magic number: resultDigits[0] = 32 / bufferDigitN1;
Magic Number,IntXLib,NewtonHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\NewtonHelper.cs,GetIntegerOpposite,The following statement contains a magic number: bitsAfterDotNextBuffer = (ulong)nextBufferTempShift + 3UL;
Magic Number,IntXLib,NewtonHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\NewtonHelper.cs,GetIntegerOpposite,The following statement contains a magic number: k < 4
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: return 32;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: n += 16;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: x <<= 16;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: (x >> 16) == 0
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: n +=  8;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: x <<=  8;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: (x >> 24) == 0
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: n +=  4;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: x <<=  4;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: (x >> 28) == 0
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: n +=  2;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: x <<=  2;
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: (x >> 30) == 0
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Nlz,The following statement contains a magic number: return n - (int)(x >> 31);
Magic Number,IntXLib,Bits,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Bits.cs,Msb,The following statement contains a magic number: return 31 - Nlz(x);
Magic Number,IntXLib,IntX,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\IntX.cs,ToString,The following statement contains a magic number: return ToString(10U' true);
Magic Number,IntXLib,IntX,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\IntX.cs,Parse,The following statement contains a magic number: return ParseManager.GetCurrentParser().Parse(value' 10U' Constants.BaseCharToDigits' true);
Magic Number,IntXLib,IntX,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\IntX.cs,Parse,The following statement contains a magic number: return ParseManager.GetParser(mode).Parse(value' 10U' Constants.BaseCharToDigits' true);
Magic Number,IntXLib,AutoFhtMultiplier,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\AutoFhtMultiplier.cs,Multiply,The following statement contains a magic number: uint[] validationResult = new uint[lowerDigitCount * 2];
Magic Number,IntXLib,ClassicMultiplier,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\ClassicMultiplier.cs,Multiply,The following statement contains a magic number: c >>= 32;
Magic Number,IntXLib,MultiplierBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Multipliers\MultiplierBase.cs,Multiply,The following statement contains a magic number: newLength >> 32 != 0
Magic Number,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Add,The following statement contains a magic number: c >>= 32;
Magic Number,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Add,The following statement contains a magic number: c >>= 32;
Magic Number,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Sub,The following statement contains a magic number: c >>= 63;
Magic Number,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Sub,The following statement contains a magic number: c >>= 63;
Magic Number,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,Cmp,The following statement contains a magic number: res != -2
Magic Number,IntXLib,DigitOpHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\DigitOpHelper.cs,CmpLen,The following statement contains a magic number: return length1 == 0 ? 0 : -2;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ConvertDoubleToDigits,The following statement contains a magic number: double normalizeMultiplier = 0.5 / length;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ConvertDoubleToDigits,The following statement contains a magic number: dataDigitInt = (long)(dataDigit < 0 ? dataDigit - 0.5 : dataDigit + 0.5);
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ConvertDoubleToDigits,The following statement contains a magic number: dataDigitInt = (long)(dataDigit < 0 ? dataDigit - 0.5 : dataDigit + 0.5);
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,Fht,The following statement contains a magic number: length == 4
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,Fht,The following statement contains a magic number: uint lengthDiv4 = length >> 2;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,Fht4,The following statement contains a magic number: double d2 = slice[2];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,Fht4,The following statement contains a magic number: double d3 = slice[3];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,Fht4,The following statement contains a magic number: slice[2] = d02 + d13;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,Fht4,The following statement contains a magic number: slice[3] = d02 - d13;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,MultiplyFhtResults,The following statement contains a magic number: slice[0] *= 2.0 * slice2[0];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,MultiplyFhtResults,The following statement contains a magic number: slice[1] *= 2.0 * slice2[1];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht,The following statement contains a magic number: length == 8
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht,The following statement contains a magic number: uint lengthDiv4 = length >> 2;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: double d2 = slice[2];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: double d3 = slice[3];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: double d4 = slice[4];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: double d5 = slice[5];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: double d6 = slice[6];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: double d7 = slice[7];
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: slice[4] = daa0123 - daa4567;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: slice[2] = dsa0123 + dsa4567;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: slice[6] = dsa0123 - dsa4567;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: slice[5] = das0123 - ds45;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: slice[3] = dss0123 + ds67;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,ReverseFht8,The following statement contains a magic number: slice[7] = dss0123 - ds67;
Magic Number,IntXLib,FhtHelper,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\OpHelpers\FhtHelper.cs,GetInitialTrigValues,The following statement contains a magic number: valuesPtr->TableCos *= -2.0 * valuesPtr->TableCos;
Magic Number,IntXLib,ParserBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\ParserBase.cs,Parse,The following statement contains a magic number: numberBase < 2 || numberBase > charToDigits.Count
Magic Number,IntXLib,ParserBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Parsers\ParserBase.cs,Parse,The following statement contains a magic number: numberBase = 16U;
Magic Number,IntXLib,FastStringConverter,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\StringConverters\FastStringConverter.cs,ToString,The following statement contains a magic number: *(ptr1 + innerStep) = divider.DivMod(  								ptr1'  								ptr2'  								ref loLength'  								baseIntPtr'  								tempBufferPtr'  								baseInt._length'  								ptr2 + innerStep'  								DivModResultFlags.Div | DivModResultFlags.Mod'  								-2);
Magic Number,IntXLib,StringConverterBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\StringConverters\StringConverterBase.cs,ToString,The following statement contains a magic number: numberBase < 2 || numberBase > 65536
Magic Number,IntXLib,StringConverterBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\StringConverters\StringConverterBase.cs,ToString,The following statement contains a magic number: numberBase < 2 || numberBase > 65536
Magic Number,IntXLib,StringConverterBase,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\StringConverters\StringConverterBase.cs,ToString,The following statement contains a magic number: uint lengthCoef = isBigBase ? (uint)System.Math.Ceiling(System.Math.Log10(numberBase)) + 2U : 1U;
Magic Number,IntXLib,Constants,D:\research\architectureSmells\repos\devoyster_IntXLib\IntXLib\Utils\Constants.cs,Constants,The following statement contains a magic number: BaseCharToDigits = StrRepHelper.CharDictionaryFromAlphabet(new string(BaseUpperChars)' 16U);
