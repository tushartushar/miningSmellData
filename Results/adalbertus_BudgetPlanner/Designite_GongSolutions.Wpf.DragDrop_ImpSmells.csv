Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,DropTarget_PreviewDragOver,Cyclomatic complexity of the method is 9
Complex Method,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,Cyclomatic complexity of the method is 9
Complex Method,GongSolutions.Wpf.DragDrop.Utilities,ItemsControlExtensions,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\Utilities\ItemsControlExtensions.cs,GetItemContainerAt,Cyclomatic complexity of the method is 9
Complex Method,GongSolutions.Wpf.DragDrop.Utilities,ItemsControlExtensions,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\Utilities\ItemsControlExtensions.cs,GetClosest,Cyclomatic complexity of the method is 9
Long Parameter List,GongSolutions.Wpf.DragDrop,DefaultDropHandler,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DefaultDropHandler.cs,TestCompatibleTypes,The method has 5 parameters.
Long Statement,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,Scroll,The length of the statement  "		if (position.X >= scrollViewer.ActualWidth - scrollMargin && scrollViewer.HorizontalOffset < scrollViewer.ExtentWidth - scrollViewer.ViewportWidth) { " is 149.
Long Statement,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,Scroll,The length of the statement  "		else if (position.Y >= scrollViewer.ActualHeight - scrollMargin && scrollViewer.VerticalOffset < scrollViewer.ExtentHeight - scrollViewer.ViewportHeight) { " is 155.
Long Statement,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,DragSource_PreviewMouseMove,The length of the statement  "		if (Math.Abs (position.X - dragStart.X) > SystemParameters.MinimumHorizontalDragDistance || Math.Abs (position.Y - dragStart.Y) > SystemParameters.MinimumVerticalDragDistance) { " is 177.
Long Statement,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,DropTarget_PreviewDragOver,The length of the statement  "		UIElement adornedElement = (UIElement)itemsControl.GetVisualDescendent<ItemsPresenter> () ?? (UIElement)itemsControl.GetVisualDescendent<ScrollContentPresenter> (); " is 164.
Long Statement,GongSolutions.Wpf.DragDrop,DropTargetHighlightAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetHighlightAdorner.cs,OnRender,The length of the statement  "		Rect rect = new Rect (DropInfo.VisualTargetItem.TranslatePoint (new Point ()' AdornedElement)' VisualTreeHelper.GetDescendantBounds (DropInfo.VisualTargetItem).Size); " is 166.
Long Statement,GongSolutions.Wpf.DragDrop.Utilities,ItemsControlExtensions,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\Utilities\ItemsControlExtensions.cs,CanSelectMultipleItems,The length of the statement  "		return (bool)itemsControl.GetType ().GetProperty ("CanSelectMultipleItems"' BindingFlags.Instance | BindingFlags.NonPublic).GetValue (itemsControl' null); " is 154.
Magic Number,GongSolutions.Wpf.DragDrop,DragAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragAdorner.cs,GetDesiredTransform,The following statement contains a magic number: result.Children.Add (new TranslateTransform (MousePosition.X - 4' MousePosition.Y - 4));  
Magic Number,GongSolutions.Wpf.DragDrop,DragAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragAdorner.cs,GetDesiredTransform,The following statement contains a magic number: result.Children.Add (new TranslateTransform (MousePosition.X - 4' MousePosition.Y - 4));  
Magic Number,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,CreateDragAdorner,The following statement contains a magic number: if (template != null) {  	UIElement rootElement = null;  	Window parentWindow = m_DragInfo.VisualSource.GetVisualAncestor<Window> ();  	UIElement adornment = null;  	if (parentWindow != null) {  		rootElement = parentWindow.Content as UIElement;  	}  	if (rootElement == null) {  		rootElement = (UIElement)Application.Current.MainWindow.Content;  	}  	if (m_DragInfo.Data is IEnumerable && !(m_DragInfo.Data is string)) {  		if (((IEnumerable)m_DragInfo.Data).Cast<object> ().Count () <= 10) {  			ItemsControl itemsControl = new ItemsControl ();  			itemsControl.ItemsSource = (IEnumerable)m_DragInfo.Data;  			itemsControl.ItemTemplate = template;  			// The ItemsControl doesn't display unless we create a border to contain it.  			// Not quite sure why this is...  			Border border = new Border ();  			border.Child = itemsControl;  			adornment = border;  		}  	}  	else {  		ContentPresenter contentPresenter = new ContentPresenter ();  		contentPresenter.Content = m_DragInfo.Data;  		contentPresenter.ContentTemplate = template;  		adornment = contentPresenter;  	}  	if (adornment != null) {  		adornment.Opacity = opacity;  		DragAdorner = new DragAdorner (rootElement' adornment);  	}  }  
Magic Number,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,CreateDragAdorner,The following statement contains a magic number: if (m_DragInfo.Data is IEnumerable && !(m_DragInfo.Data is string)) {  	if (((IEnumerable)m_DragInfo.Data).Cast<object> ().Count () <= 10) {  		ItemsControl itemsControl = new ItemsControl ();  		itemsControl.ItemsSource = (IEnumerable)m_DragInfo.Data;  		itemsControl.ItemTemplate = template;  		// The ItemsControl doesn't display unless we create a border to contain it.  		// Not quite sure why this is...  		Border border = new Border ();  		border.Child = itemsControl;  		adornment = border;  	}  }  else {  	ContentPresenter contentPresenter = new ContentPresenter ();  	contentPresenter.Content = m_DragInfo.Data;  	contentPresenter.ContentTemplate = template;  	adornment = contentPresenter;  }  
Magic Number,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,CreateDragAdorner,The following statement contains a magic number: if (((IEnumerable)m_DragInfo.Data).Cast<object> ().Count () <= 10) {  	ItemsControl itemsControl = new ItemsControl ();  	itemsControl.ItemsSource = (IEnumerable)m_DragInfo.Data;  	itemsControl.ItemTemplate = template;  	// The ItemsControl doesn't display unless we create a border to contain it.  	// Not quite sure why this is...  	Border border = new Border ();  	border.Child = itemsControl;  	adornment = border;  }  
Magic Number,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,Scroll,The following statement contains a magic number: if (scrollViewer != null) {  	Point position = e.GetPosition (scrollViewer);  	double scrollMargin = Math.Min (scrollViewer.FontSize * 2' scrollViewer.ActualHeight / 2);  	if (position.X >= scrollViewer.ActualWidth - scrollMargin && scrollViewer.HorizontalOffset < scrollViewer.ExtentWidth - scrollViewer.ViewportWidth) {  		scrollViewer.LineRight ();  	}  	else if (position.X < scrollMargin && scrollViewer.HorizontalOffset > 0) {  		scrollViewer.LineLeft ();  	}  	else if (position.Y >= scrollViewer.ActualHeight - scrollMargin && scrollViewer.VerticalOffset < scrollViewer.ExtentHeight - scrollViewer.ViewportHeight) {  		scrollViewer.LineDown ();  	}  	else if (position.Y < scrollMargin && scrollViewer.VerticalOffset > 0) {  		scrollViewer.LineUp ();  	}  }  
Magic Number,GongSolutions.Wpf.DragDrop,DragDrop,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DragDrop.cs,Scroll,The following statement contains a magic number: if (scrollViewer != null) {  	Point position = e.GetPosition (scrollViewer);  	double scrollMargin = Math.Min (scrollViewer.FontSize * 2' scrollViewer.ActualHeight / 2);  	if (position.X >= scrollViewer.ActualWidth - scrollMargin && scrollViewer.HorizontalOffset < scrollViewer.ExtentWidth - scrollViewer.ViewportWidth) {  		scrollViewer.LineRight ();  	}  	else if (position.X < scrollMargin && scrollViewer.HorizontalOffset > 0) {  		scrollViewer.LineLeft ();  	}  	else if (position.Y >= scrollViewer.ActualHeight - scrollMargin && scrollViewer.VerticalOffset < scrollViewer.ExtentHeight - scrollViewer.ViewportHeight) {  		scrollViewer.LineDown ();  	}  	else if (position.Y < scrollMargin && scrollViewer.VerticalOffset > 0) {  		scrollViewer.LineUp ();  	}  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,The following statement contains a magic number: if (sender is ItemsControl) {  	ItemsControl itemsControl = (ItemsControl)sender;  	UIElement item = itemsControl.GetItemContainerAt (DropPosition);  	bool directlyOverItem = item != null;  	TargetGroup = FindGroup (itemsControl' DropPosition);  	VisualTargetOrientation = itemsControl.GetItemsPanelOrientation ();  	if (item == null) {  		item = itemsControl.GetItemContainerAt (DropPosition' VisualTargetOrientation);  		directlyOverItem = false;  	}  	if (item != null) {  		ItemsControl itemParent = ItemsControl.ItemsControlFromItemContainer (item);  		if (itemParent == null) {  			return;  		}  		InsertIndex = itemParent.ItemContainerGenerator.IndexFromContainer (item);  		TargetCollection = itemParent.ItemsSource ?? itemParent.Items;  		if (directlyOverItem) {  			TargetItem = itemParent.ItemContainerGenerator.ItemFromContainer (item);  			VisualTargetItem = item;  		}  		if (VisualTargetOrientation == Orientation.Vertical) {  			if (e.GetPosition (item).Y > item.RenderSize.Height / 2)  				InsertIndex++;  		}  		else {  			if (e.GetPosition (item).X > item.RenderSize.Width / 2)  				InsertIndex++;  		}  	}  	else {  		TargetCollection = itemsControl.ItemsSource ?? itemsControl.Items;  		InsertIndex = itemsControl.Items.Count;  	}  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,The following statement contains a magic number: if (sender is ItemsControl) {  	ItemsControl itemsControl = (ItemsControl)sender;  	UIElement item = itemsControl.GetItemContainerAt (DropPosition);  	bool directlyOverItem = item != null;  	TargetGroup = FindGroup (itemsControl' DropPosition);  	VisualTargetOrientation = itemsControl.GetItemsPanelOrientation ();  	if (item == null) {  		item = itemsControl.GetItemContainerAt (DropPosition' VisualTargetOrientation);  		directlyOverItem = false;  	}  	if (item != null) {  		ItemsControl itemParent = ItemsControl.ItemsControlFromItemContainer (item);  		if (itemParent == null) {  			return;  		}  		InsertIndex = itemParent.ItemContainerGenerator.IndexFromContainer (item);  		TargetCollection = itemParent.ItemsSource ?? itemParent.Items;  		if (directlyOverItem) {  			TargetItem = itemParent.ItemContainerGenerator.ItemFromContainer (item);  			VisualTargetItem = item;  		}  		if (VisualTargetOrientation == Orientation.Vertical) {  			if (e.GetPosition (item).Y > item.RenderSize.Height / 2)  				InsertIndex++;  		}  		else {  			if (e.GetPosition (item).X > item.RenderSize.Width / 2)  				InsertIndex++;  		}  	}  	else {  		TargetCollection = itemsControl.ItemsSource ?? itemsControl.Items;  		InsertIndex = itemsControl.Items.Count;  	}  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,The following statement contains a magic number: if (item != null) {  	ItemsControl itemParent = ItemsControl.ItemsControlFromItemContainer (item);  	if (itemParent == null) {  		return;  	}  	InsertIndex = itemParent.ItemContainerGenerator.IndexFromContainer (item);  	TargetCollection = itemParent.ItemsSource ?? itemParent.Items;  	if (directlyOverItem) {  		TargetItem = itemParent.ItemContainerGenerator.ItemFromContainer (item);  		VisualTargetItem = item;  	}  	if (VisualTargetOrientation == Orientation.Vertical) {  		if (e.GetPosition (item).Y > item.RenderSize.Height / 2)  			InsertIndex++;  	}  	else {  		if (e.GetPosition (item).X > item.RenderSize.Width / 2)  			InsertIndex++;  	}  }  else {  	TargetCollection = itemsControl.ItemsSource ?? itemsControl.Items;  	InsertIndex = itemsControl.Items.Count;  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,The following statement contains a magic number: if (item != null) {  	ItemsControl itemParent = ItemsControl.ItemsControlFromItemContainer (item);  	if (itemParent == null) {  		return;  	}  	InsertIndex = itemParent.ItemContainerGenerator.IndexFromContainer (item);  	TargetCollection = itemParent.ItemsSource ?? itemParent.Items;  	if (directlyOverItem) {  		TargetItem = itemParent.ItemContainerGenerator.ItemFromContainer (item);  		VisualTargetItem = item;  	}  	if (VisualTargetOrientation == Orientation.Vertical) {  		if (e.GetPosition (item).Y > item.RenderSize.Height / 2)  			InsertIndex++;  	}  	else {  		if (e.GetPosition (item).X > item.RenderSize.Width / 2)  			InsertIndex++;  	}  }  else {  	TargetCollection = itemsControl.ItemsSource ?? itemsControl.Items;  	InsertIndex = itemsControl.Items.Count;  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,The following statement contains a magic number: if (VisualTargetOrientation == Orientation.Vertical) {  	if (e.GetPosition (item).Y > item.RenderSize.Height / 2)  		InsertIndex++;  }  else {  	if (e.GetPosition (item).X > item.RenderSize.Width / 2)  		InsertIndex++;  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,The following statement contains a magic number: if (VisualTargetOrientation == Orientation.Vertical) {  	if (e.GetPosition (item).Y > item.RenderSize.Height / 2)  		InsertIndex++;  }  else {  	if (e.GetPosition (item).X > item.RenderSize.Width / 2)  		InsertIndex++;  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,The following statement contains a magic number: if (e.GetPosition (item).Y > item.RenderSize.Height / 2)  	InsertIndex++;  
Magic Number,GongSolutions.Wpf.DragDrop,DropInfo,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropInfo.cs,DropInfo,The following statement contains a magic number: if (e.GetPosition (item).X > item.RenderSize.Width / 2)  	InsertIndex++;  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetHighlightAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetHighlightAdorner.cs,OnRender,The following statement contains a magic number: if (DropInfo.VisualTargetItem != null) {  	Rect rect = new Rect (DropInfo.VisualTargetItem.TranslatePoint (new Point ()' AdornedElement)' VisualTreeHelper.GetDescendantBounds (DropInfo.VisualTargetItem).Size);  	drawingContext.DrawRoundedRectangle (null' new Pen (Brushes.Gray' 2)' rect' 2' 2);  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetHighlightAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetHighlightAdorner.cs,OnRender,The following statement contains a magic number: if (DropInfo.VisualTargetItem != null) {  	Rect rect = new Rect (DropInfo.VisualTargetItem.TranslatePoint (new Point ()' AdornedElement)' VisualTreeHelper.GetDescendantBounds (DropInfo.VisualTargetItem).Size);  	drawingContext.DrawRoundedRectangle (null' new Pen (Brushes.Gray' 2)' rect' 2' 2);  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetHighlightAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetHighlightAdorner.cs,OnRender,The following statement contains a magic number: if (DropInfo.VisualTargetItem != null) {  	Rect rect = new Rect (DropInfo.VisualTargetItem.TranslatePoint (new Point ()' AdornedElement)' VisualTreeHelper.GetDescendantBounds (DropInfo.VisualTargetItem).Size);  	drawingContext.DrawRoundedRectangle (null' new Pen (Brushes.Gray' 2)' rect' 2' 2);  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetHighlightAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetHighlightAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawRoundedRectangle (null' new Pen (Brushes.Gray' 2)' rect' 2' 2);  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetHighlightAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetHighlightAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawRoundedRectangle (null' new Pen (Brushes.Gray' 2)' rect' 2' 2);  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetHighlightAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetHighlightAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawRoundedRectangle (null' new Pen (Brushes.Gray' 2)' rect' 2' 2);  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetInsertionAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetInsertionAdorner.cs,OnRender,The following statement contains a magic number: if (itemsControl != null) {  	// Get the position of the item at the insertion index. If the insertion point is  	// to be after the last item' then get the position of the last item and add an   	// offset later to draw it at the end of the list.  	ItemsControl itemParent;  	if (DropInfo.VisualTargetItem != null) {  		itemParent = ItemsControl.ItemsControlFromItemContainer (DropInfo.VisualTargetItem);  	}  	else {  		itemParent = itemsControl;  	}  	int index = Math.Min (DropInfo.InsertIndex' itemParent.Items.Count - 1);  	UIElement itemContainer = (UIElement)itemParent.ItemContainerGenerator.ContainerFromIndex (index);  	if (itemContainer != null) {  		Rect itemRect = new Rect (itemContainer.TranslatePoint (new Point ()' AdornedElement)' itemContainer.RenderSize);  		Point point1' point2;  		double rotation = 0;  		if (DropInfo.VisualTargetOrientation == Orientation.Vertical) {  			if (DropInfo.InsertIndex == itemParent.Items.Count) {  				itemRect.Y += itemContainer.RenderSize.Height;  			}  			point1 = new Point (itemRect.X' itemRect.Y);  			point2 = new Point (itemRect.Right' itemRect.Y);  		}  		else {  			if (DropInfo.InsertIndex == itemParent.Items.Count) {  				itemRect.X += itemContainer.RenderSize.Width;  			}  			point1 = new Point (itemRect.X' itemRect.Y);  			point2 = new Point (itemRect.X' itemRect.Bottom);  			rotation = 90;  		}  		drawingContext.DrawLine (m_Pen' point1' point2);  		DrawTriangle (drawingContext' point1' rotation);  		DrawTriangle (drawingContext' point2' 180 + rotation);  	}  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetInsertionAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetInsertionAdorner.cs,OnRender,The following statement contains a magic number: if (itemsControl != null) {  	// Get the position of the item at the insertion index. If the insertion point is  	// to be after the last item' then get the position of the last item and add an   	// offset later to draw it at the end of the list.  	ItemsControl itemParent;  	if (DropInfo.VisualTargetItem != null) {  		itemParent = ItemsControl.ItemsControlFromItemContainer (DropInfo.VisualTargetItem);  	}  	else {  		itemParent = itemsControl;  	}  	int index = Math.Min (DropInfo.InsertIndex' itemParent.Items.Count - 1);  	UIElement itemContainer = (UIElement)itemParent.ItemContainerGenerator.ContainerFromIndex (index);  	if (itemContainer != null) {  		Rect itemRect = new Rect (itemContainer.TranslatePoint (new Point ()' AdornedElement)' itemContainer.RenderSize);  		Point point1' point2;  		double rotation = 0;  		if (DropInfo.VisualTargetOrientation == Orientation.Vertical) {  			if (DropInfo.InsertIndex == itemParent.Items.Count) {  				itemRect.Y += itemContainer.RenderSize.Height;  			}  			point1 = new Point (itemRect.X' itemRect.Y);  			point2 = new Point (itemRect.Right' itemRect.Y);  		}  		else {  			if (DropInfo.InsertIndex == itemParent.Items.Count) {  				itemRect.X += itemContainer.RenderSize.Width;  			}  			point1 = new Point (itemRect.X' itemRect.Y);  			point2 = new Point (itemRect.X' itemRect.Bottom);  			rotation = 90;  		}  		drawingContext.DrawLine (m_Pen' point1' point2);  		DrawTriangle (drawingContext' point1' rotation);  		DrawTriangle (drawingContext' point2' 180 + rotation);  	}  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetInsertionAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetInsertionAdorner.cs,OnRender,The following statement contains a magic number: if (itemContainer != null) {  	Rect itemRect = new Rect (itemContainer.TranslatePoint (new Point ()' AdornedElement)' itemContainer.RenderSize);  	Point point1' point2;  	double rotation = 0;  	if (DropInfo.VisualTargetOrientation == Orientation.Vertical) {  		if (DropInfo.InsertIndex == itemParent.Items.Count) {  			itemRect.Y += itemContainer.RenderSize.Height;  		}  		point1 = new Point (itemRect.X' itemRect.Y);  		point2 = new Point (itemRect.Right' itemRect.Y);  	}  	else {  		if (DropInfo.InsertIndex == itemParent.Items.Count) {  			itemRect.X += itemContainer.RenderSize.Width;  		}  		point1 = new Point (itemRect.X' itemRect.Y);  		point2 = new Point (itemRect.X' itemRect.Bottom);  		rotation = 90;  	}  	drawingContext.DrawLine (m_Pen' point1' point2);  	DrawTriangle (drawingContext' point1' rotation);  	DrawTriangle (drawingContext' point2' 180 + rotation);  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetInsertionAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetInsertionAdorner.cs,OnRender,The following statement contains a magic number: if (itemContainer != null) {  	Rect itemRect = new Rect (itemContainer.TranslatePoint (new Point ()' AdornedElement)' itemContainer.RenderSize);  	Point point1' point2;  	double rotation = 0;  	if (DropInfo.VisualTargetOrientation == Orientation.Vertical) {  		if (DropInfo.InsertIndex == itemParent.Items.Count) {  			itemRect.Y += itemContainer.RenderSize.Height;  		}  		point1 = new Point (itemRect.X' itemRect.Y);  		point2 = new Point (itemRect.Right' itemRect.Y);  	}  	else {  		if (DropInfo.InsertIndex == itemParent.Items.Count) {  			itemRect.X += itemContainer.RenderSize.Width;  		}  		point1 = new Point (itemRect.X' itemRect.Y);  		point2 = new Point (itemRect.X' itemRect.Bottom);  		rotation = 90;  	}  	drawingContext.DrawLine (m_Pen' point1' point2);  	DrawTriangle (drawingContext' point1' rotation);  	DrawTriangle (drawingContext' point2' 180 + rotation);  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetInsertionAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetInsertionAdorner.cs,OnRender,The following statement contains a magic number: if (DropInfo.VisualTargetOrientation == Orientation.Vertical) {  	if (DropInfo.InsertIndex == itemParent.Items.Count) {  		itemRect.Y += itemContainer.RenderSize.Height;  	}  	point1 = new Point (itemRect.X' itemRect.Y);  	point2 = new Point (itemRect.Right' itemRect.Y);  }  else {  	if (DropInfo.InsertIndex == itemParent.Items.Count) {  		itemRect.X += itemContainer.RenderSize.Width;  	}  	point1 = new Point (itemRect.X' itemRect.Y);  	point2 = new Point (itemRect.X' itemRect.Bottom);  	rotation = 90;  }  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetInsertionAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetInsertionAdorner.cs,OnRender,The following statement contains a magic number: rotation = 90;  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetInsertionAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetInsertionAdorner.cs,OnRender,The following statement contains a magic number: DrawTriangle (drawingContext' point2' 180 + rotation);  
Magic Number,GongSolutions.Wpf.DragDrop,DropTargetInsertionAdorner,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\DropTargetInsertionAdorner.cs,DropTargetInsertionAdorner,The following statement contains a magic number: m_Pen = new Pen (Brushes.Gray' 2);  
Missing Default,GongSolutions.Wpf.DragDrop.Utilities,ItemsControlExtensions,C:\repos\adalbertus_BudgetPlanner\GongSolutions.Wpf.DragDrop\GongSolutions.Wpf.DragDrop\Utilities\ItemsControlExtensions.cs,GetClosest,The following switch statement is missing a default case: switch (searchDirection) {  case Orientation.Horizontal:  	distance = Math.Abs (position.X - p.X);  	break;  case Orientation.Vertical:  	distance = Math.Abs (position.Y - p.Y);  	break;  }  
